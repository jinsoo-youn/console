{"version":3,"sources":["../../../src/helpers/util.ts"],"names":["React","getUniqueId","prefix","uid","Date","getTime","Math","random","toString","slice","childrenToArray","children","Children","count","toArray"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;;;;AAGA,OAAO,SAASC,WAAT,CAAqBC,MAAM,GAAG,IAA9B,EAAoC;AACzC,QAAMC,GAAG,GACP,IAAIC,IAAJ,GAAWC,OAAX,KACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,KAFH,CAES,CAFT,CAFF;AAKA,SAAQ,GAAEP,MAAO,IAAGC,GAAI,EAAxB;AACD;AAED;;;;;;AAKA,OAAO,MAAMO,eAAe,GAAIC,QAAD,IAC7BA,QAAQ,IAAIX,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBF,QAArB,IAAiC,CAA7C,IAAkDX,KAAK,CAACY,QAAN,CAAeE,OAAf,CAAuBH,QAAvB,CAD7C","sourcesContent":["import * as React from 'react';\n\n/**\n * @param {string} prefix - String to prefix unique ID with\n */\nexport function getUniqueId(prefix = 'pf') {\n  const uid =\n    new Date().getTime() +\n    Math.random()\n      .toString(36)\n      .slice(2);\n  return `${prefix}-${uid}`;\n}\n\n/**\n * Returns the given React children prop as a regular array of React nodes.\n *\n * @param {React.ReactNode} children - Child react node\n */\nexport const childrenToArray = (children: React.ReactNode) =>\n  children && React.Children.count(children) > 0 && React.Children.toArray(children);\n"],"file":"util.js"}