import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import classNames from 'classnames';
export const VerticalTabsTab = (_ref) => {
  let {
    children = null,
    className = '',
    title = null,
    wrapStyle = 'wrap',
    active = false,
    hasActiveDescendant = false,
    shown = false,
    onActivate = null
  } = _ref,
      props = _objectWithoutProperties(_ref, ["children", "className", "title", "wrapStyle", "active", "hasActiveDescendant", "shown", "onActivate"]);

  const classes = classNames('vertical-tabs-pf-tab', {
    active,
    'active-descendant': hasActiveDescendant,
    shown
  }, className);
  const linkClasses = classNames({
    'no-wrap': wrapStyle === 'nowrap',
    truncate: wrapStyle === 'truncate'
  });

  const handleActivate = e => {
    e.preventDefault();

    if (onActivate) {
      onActivate();
    }
  };

  return React.createElement("li", _extends({
    className: classes
  }, props), React.createElement("a", {
    className: linkClasses,
    onClick: e => handleActivate(e),
    href: "#"
  }, title), children);
};
VerticalTabsTab.propTypes = {
  children: _pt.node,
  className: _pt.string,
  title: _pt.oneOfType([_pt.string, _pt.node]),
  wrapStyle: _pt.oneOf(['wrap', 'truncate', 'nowrap']),
  active: _pt.bool,
  hasActiveDescendant: _pt.bool,
  shown: _pt.bool,
  onActivate: _pt.func
};
//# sourceMappingURL=VerticalTabsTab.js.map