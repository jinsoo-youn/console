{"version":3,"sources":["../../../../src/components/VerticalTabs/VerticalTabsTab.tsx"],"names":["React","classNames","VerticalTabsTab","children","className","title","wrapStyle","active","hasActiveDescendant","shown","onActivate","props","classes","linkClasses","truncate","handleActivate","e","preventDefault"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAqBA,OAAO,MAAMC,eAA8D,GAAG,UAUlD;AAAA,MAVmD;AAC7EC,IAAAA,QAAQ,GAAG,IADkE;AAE7EC,IAAAA,SAAS,GAAG,EAFiE;AAG7EC,IAAAA,KAAK,GAAG,IAHqE;AAI7EC,IAAAA,SAAS,GAAG,MAJiE;AAK7EC,IAAAA,MAAM,GAAG,KALoE;AAM7EC,IAAAA,mBAAmB,GAAG,KANuD;AAO7EC,IAAAA,KAAK,GAAG,KAPqE;AAQ7EC,IAAAA,UAAU,GAAG;AARgE,GAUnD;AAAA,MADvBC,KACuB;;AAC1B,QAAMC,OAAO,GAAGX,UAAU,CACxB,sBADwB,EAExB;AAAEM,IAAAA,MAAF;AAAU,yBAAqBC,mBAA/B;AAAoDC,IAAAA;AAApD,GAFwB,EAGxBL,SAHwB,CAA1B;AAMA,QAAMS,WAAW,GAAGZ,UAAU,CAAC;AAC7B,eAAWK,SAAS,KAAK,QADI;AAE7BQ,IAAAA,QAAQ,EAAER,SAAS,KAAK;AAFK,GAAD,CAA9B;;AAKA,QAAMS,cAAc,GAAIC,CAAD,IAA0C;AAC/DA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIP,UAAJ,EAAgB;AACdA,MAAAA,UAAU;AACX;AACF,GALD;;AAOA,SACE;AAAI,IAAA,SAAS,EAAEE;AAAf,KAA4BD,KAA5B,GACE;AAAG,IAAA,SAAS,EAAEE,WAAd;AAA2B,IAAA,OAAO,EAAEG,CAAC,IAAID,cAAc,CAACC,CAAD,CAAvD;AAA4D,IAAA,IAAI,EAAC;AAAjE,KACGX,KADH,CADF,EAIGF,QAJH,CADF;AAQD,CArCM;;AAjBLA,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,K;AAEAC,EAAAA,S,aAAY,M,EAAS,U,EAAa,Q;AAElCC,EAAAA,M;AAEAC,EAAAA,mB;AAEAC,EAAAA,K;AAEAC,EAAAA,U","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface VerticalTabsTabProps extends Omit<React.HTMLProps<HTMLLIElement>, 'title'> {\n  /** Child tab nodes (VerticalTabsTab's) */\n  children?: React.ReactNode;\n  /** Additional css classes */\n  className?: string;\n  /** Title for the tab */\n  title?: string | React.ReactNode;\n  /** Title wrap style */\n  wrapStyle?: 'wrap' | 'truncate' | 'nowrap';\n  /** Flag if this is the active tab */\n  active?: boolean;\n  /** Flag if a descendant tab is active (used only in restrictTabs mode) */\n  hasActiveDescendant?: boolean;\n  /** Flag to force show the tab (if parent tab is shown, used only in restrictTabs mode) */\n  shown?: boolean;\n  /** Callback function when the tab is activated */\n  onActivate?: () => void;\n}\n\nexport const VerticalTabsTab: React.FunctionComponent<VerticalTabsTabProps> = ({\n  children = null,\n  className = '',\n  title = null,\n  wrapStyle = 'wrap',\n  active = false,\n  hasActiveDescendant = false,\n  shown = false,\n  onActivate = null,\n  ...props\n}: VerticalTabsTabProps) => {\n  const classes = classNames(\n    'vertical-tabs-pf-tab',\n    { active, 'active-descendant': hasActiveDescendant, shown },\n    className\n  );\n\n  const linkClasses = classNames({\n    'no-wrap': wrapStyle === 'nowrap',\n    truncate: wrapStyle === 'truncate'\n  });\n\n  const handleActivate = (e: React.SyntheticEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (onActivate) {\n      onActivate();\n    }\n  };\n\n  return (\n    <li className={classes} {...props}>\n      <a className={linkClasses} onClick={e => handleActivate(e)} href=\"#\">\n        {title}\n      </a>\n      {children}\n    </li>\n  );\n};\n"],"file":"VerticalTabsTab.js"}