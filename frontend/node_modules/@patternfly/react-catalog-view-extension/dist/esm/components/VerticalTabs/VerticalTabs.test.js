import React from 'react';
import { mount } from 'enzyme';
import { VerticalTabs } from './VerticalTabs';
import { VerticalTabsTab } from './VerticalTabsTab';
test('Vertical Tabs renders tabs properly', () => {
  const component = mount(React.createElement(VerticalTabs, {
    id: "vertical-tabs",
    className: "test-vertical-tabs"
  }, React.createElement(VerticalTabsTab, {
    id: "all",
    className: "test-vertical-tabs-tab",
    title: "All"
  }), React.createElement(VerticalTabsTab, {
    id: "one",
    title: "Tab One"
  }, React.createElement(VerticalTabs, null, React.createElement(VerticalTabsTab, {
    key: "one-one",
    id: "one-one",
    title: "Tab One-One"
  }, React.createElement(VerticalTabs, {
    activeTab: true
  }, React.createElement(VerticalTabsTab, {
    key: "one-one-one",
    id: "one-one-one",
    title: "Tab One-One-One",
    active: true
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-two",
    id: "one-one-two",
    title: "Tab One-One-Two",
    active: false
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-three",
    id: "one-one-three",
    title: "Tab One-One-Three"
  }))), React.createElement(VerticalTabsTab, {
    key: "one-two",
    id: "one-two",
    title: "Tab One-Two"
  }), React.createElement(VerticalTabsTab, {
    key: "one-three",
    id: "one-three",
    title: "Tab One-Three"
  }))), React.createElement(VerticalTabsTab, {
    id: "two",
    title: "Tab Two",
    className: "test-tab-class"
  }, React.createElement(VerticalTabs, null, React.createElement(VerticalTabsTab, {
    key: "one-one-one",
    id: "two-one",
    title: "Tab Two-One"
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-two",
    id: "two-two",
    title: "Tab Two-Two"
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-three",
    id: "two-three",
    title: "Tab Two-Three"
  }))), React.createElement(VerticalTabsTab, {
    id: "three",
    title: "Tab Three"
  }, React.createElement(VerticalTabs, null, React.createElement(VerticalTabsTab, {
    key: "three-one",
    id: "three-one",
    title: "Tab Three-One"
  }), React.createElement(VerticalTabsTab, {
    key: "three-two",
    id: "three-two",
    title: "Tab Three-Two"
  }))), React.createElement(VerticalTabsTab, {
    id: "four",
    title: "Tab Four"
  }), React.createElement(VerticalTabsTab, {
    id: "five",
    title: "Tab Five"
  }), React.createElement(VerticalTabsTab, {
    id: "six",
    title: "Tab Six"
  }), React.createElement(VerticalTabsTab, {
    id: "seven",
    title: "Tab Seven"
  })));
  expect(component).toMatchSnapshot();
});
test('Vertical Tabs renders restricted tabs properly', () => {
  const component = mount(React.createElement(VerticalTabs, {
    id: "vertical-tabs",
    className: "test-vertical-tabs",
    restrictTabs: true
  }, React.createElement(VerticalTabsTab, {
    id: "all",
    className: "test-vertical-tabs-tab",
    title: "All",
    shown: true
  }), React.createElement(VerticalTabsTab, {
    id: "one",
    title: "Tab One",
    hasActiveDescendant: true
  }, React.createElement(VerticalTabs, {
    restrictTabs: true
  }, React.createElement(VerticalTabsTab, {
    key: "one-one",
    id: "one-one",
    title: "Tab One-One"
  }, React.createElement(VerticalTabs, {
    restrictTabs: true,
    activeTab: true
  }, React.createElement(VerticalTabsTab, {
    key: "one-one-one",
    id: "one-one-one",
    title: "Tab One-One-One",
    active: true
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-two",
    id: "one-one-two",
    title: "Tab One-One-Two",
    active: false
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-three",
    id: "one-one-three",
    title: "Tab One-One-Three"
  }))), React.createElement(VerticalTabsTab, {
    key: "one-two",
    id: "one-two",
    title: "Tab One-Two"
  }), React.createElement(VerticalTabsTab, {
    key: "one-three",
    id: "one-three",
    title: "Tab One-Three"
  }))), React.createElement(VerticalTabsTab, {
    id: "two",
    title: "Tab Two",
    className: "test-tab-class"
  }, React.createElement(VerticalTabs, {
    restrictTabs: true,
    activeTab: true
  }, React.createElement(VerticalTabsTab, {
    key: "one-one-one",
    id: "two-one",
    title: "Tab Two-One",
    active: true
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-two",
    id: "two-two",
    title: "Tab Two-Two",
    active: false
  }), React.createElement(VerticalTabsTab, {
    key: "one-one-three",
    id: "two-three",
    title: "Tab Two-Three"
  }))), React.createElement(VerticalTabsTab, {
    id: "three",
    title: "Tab Three"
  }, React.createElement(VerticalTabs, {
    restrictTabs: true
  }, React.createElement(VerticalTabsTab, {
    key: "three-one",
    id: "three-one",
    title: "Tab Three-One"
  }), React.createElement(VerticalTabsTab, {
    key: "three-two",
    id: "three-two",
    title: "Tab Three-Two"
  }))), React.createElement(VerticalTabsTab, {
    id: "four",
    title: "Tab Four"
  }), React.createElement(VerticalTabsTab, {
    id: "five",
    title: "Tab Five"
  }), React.createElement(VerticalTabsTab, {
    id: "six",
    title: "Tab Six"
  }), React.createElement(VerticalTabsTab, {
    id: "seven",
    title: "Tab Seven"
  })));
  expect(component).toMatchSnapshot();
});
test('Vertical Tabs Tab onActivate is called correctly', () => {
  const onActivateMock = jest.fn();
  const component = mount(React.createElement(VerticalTabsTab, {
    id: "text-click",
    title: "Click Me",
    onActivate: onActivateMock
  }));
  component.find('#text-click > a').simulate('click');
  expect(component).toMatchSnapshot();
  expect(onActivateMock).toBeCalled();
});
test('Vertical Tabs Tab wrap styling is set correctly', () => {
  const component = mount(React.createElement("div", null, React.createElement(VerticalTabsTab, {
    id: "default-wrap",
    title: "Default Wrap"
  }), React.createElement(VerticalTabsTab, {
    id: "word-wrap",
    title: "Word Wrap",
    wrapStyle: "wrap"
  }), React.createElement(VerticalTabsTab, {
    id: "truncate",
    title: "Truncate",
    wrapStyle: "truncate"
  }), React.createElement(VerticalTabsTab, {
    id: "no-wrap",
    title: "No Wrap",
    wrapStyle: "nowrap"
  })));
  expect(component).toMatchSnapshot();
});
//# sourceMappingURL=VerticalTabs.test.js.map