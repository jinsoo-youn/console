{"version":3,"sources":["../../../../src/components/FilterSidePanel/FilterSidePanelCategory.tsx"],"names":["React","classNames","Button","default","formStyles","css","childrenToArray","FilterSidePanelCategory","children","className","title","maxShowCount","leeway","showAll","onShowAllToggle","showText","hideText","props","classes","childrenArray","itemCount","length","hiddenCount","shownChildren","showAllToggle","slice","formFieldset"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,QAAuB,kDAAvB;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,mDAAtC;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AAuBA,OAAO,MAAMC,uBAA8E,GAAG,UAW1D;AAAA,MAX2D;AAC7FC,IAAAA,QAAQ,GAAG,IADkF;AAE7FC,IAAAA,SAAS,GAAG,EAFiF;AAG7FC,IAAAA,KAAK,GAAG,IAHqF;AAI7FC,IAAAA,YAAY,GAAG,CAJ8E;AAK7FC,IAAAA,MAAM,GAAG,CALoF;AAM7FC,IAAAA,OAAO,GAAG,KANmF;AAO7FC,IAAAA,eAAe,GAAG,MAAM,IAPqE;AAQ7FC,IAAAA,QAAQ,GAAG,IARkF;AAS7FC,IAAAA,QAAQ,GAAG;AATkF,GAW3D;AAAA,MAD/BC,KAC+B;;AAClC,QAAMC,OAAO,GAAGjB,UAAU,CAAC,0BAAD,EAA6BQ,SAA7B,CAA1B;AACA,QAAMU,aAAa,GAAGb,eAAe,CAACE,QAAD,CAArC;AACA,QAAMY,SAAS,GAAGD,aAAa,CAACE,MAAhC;AACA,QAAMC,WAAW,GAAGF,SAAS,GAAGT,YAAhC;AACA,MAAIY,aAAJ;AACA,MAAIC,aAAa,GAAG,IAApB;;AAEA,MAAIF,WAAW,IAAIV,MAAf,IAAyBC,OAA7B,EAAsC;AACpCU,IAAAA,aAAa,GAAGf,QAAhB;;AACA,QAAIc,WAAW,GAAGV,MAAlB,EAA0B;AACxBY,MAAAA,aAAa,GACX,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAEV;AAAhC,SACGE,QAAQ,IAAI,WADf,CADF;AAKD;AACF,GATD,MASO;AACLO,IAAAA,aAAa,GAAGJ,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBd,YAAvB,CAAhB;;AACA,QAAIW,WAAW,GAAGV,MAAlB,EAA0B;AACxBY,MAAAA,aAAa,GACX,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAEV;AAAhC,SACGC,QAAQ,IAAK,QAAOO,WAAY,OADnC,CADF;AAKD;AACF;;AAED,SACE;AAAM,IAAA,SAAS,EAAEJ;AAAjB,KAA8BD,KAA9B,GACE;AAAU,IAAA,SAAS,EAAG,GAAEZ,GAAG,CAACD,UAAU,CAACsB,YAAZ,CAA0B;AAArD,KACGhB,KAAK,IAAI;AAAQ,IAAA,SAAS,EAAC;AAAlB,KAAoDA,KAApD,CADZ,EAEGa,aAFH,EAGGC,aAHH,CADF,CADF;AASD,CAhDM;;AAnBLhB,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,K;AAEAC,EAAAA,Y;AAEAC,EAAAA,M;AAEAC,EAAAA,O;AAEAC,EAAAA,e;AAEAC,EAAAA,Q;AAEAC,EAAAA,Q;;AAqDF,eAAeT,uBAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { default as formStyles } from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\n\nimport { childrenToArray } from '../../helpers/util';\n\nexport interface FilterSidePanelCategoryProps extends Omit<React.HTMLProps<HTMLFormElement>, 'title'> {\n  /** Children nodes */\n  children?: React.ReactNode;\n  /** Additional css classes for the Filter Side Panel Category */\n  className?: string;\n  /** Title for the category */\n  title?: string | React.ReactNode;\n  /** Number of items (max) to show before adding Show More link button */\n  maxShowCount?: number;\n  /** Leeway to add to maxShowCount, minimum X for the 'Show X more' */\n  leeway?: number;\n  /** Flag to show all items (ie. set to true after Show X more link is clicked) */\n  showAll?: boolean;\n  /** Callback function when the Show/Hide link button is clicked */\n  onShowAllToggle?: (event: React.SyntheticEvent<HTMLElement>) => void;\n  /** Text for the link to show all items, default 'Show <x> more' */\n  showText?: string;\n  /** Text for the link to hide overflow items, default 'Show less' */\n  hideText?: string;\n}\n\nexport const FilterSidePanelCategory: React.FunctionComponent<FilterSidePanelCategoryProps> = ({\n  children = null,\n  className = '',\n  title = null,\n  maxShowCount = 5,\n  leeway = 2,\n  showAll = false,\n  onShowAllToggle = () => null,\n  showText = null,\n  hideText = null,\n  ...props\n}: FilterSidePanelCategoryProps) => {\n  const classes = classNames('filter-panel-pf-category', className);\n  const childrenArray = childrenToArray(children);\n  const itemCount = childrenArray.length;\n  const hiddenCount = itemCount - maxShowCount;\n  let shownChildren;\n  let showAllToggle = null;\n\n  if (hiddenCount <= leeway || showAll) {\n    shownChildren = children;\n    if (hiddenCount > leeway) {\n      showAllToggle = (\n        <Button variant=\"link\" onClick={onShowAllToggle}>\n          {hideText || 'Show less'}\n        </Button>\n      );\n    }\n  } else {\n    shownChildren = childrenArray.slice(0, maxShowCount);\n    if (hiddenCount > leeway) {\n      showAllToggle = (\n        <Button variant=\"link\" onClick={onShowAllToggle}>\n          {showText || `Show ${hiddenCount} more`}\n        </Button>\n      );\n    }\n  }\n\n  return (\n    <form className={classes} {...props}>\n      <fieldset className={`${css(formStyles.formFieldset)} checkbox filter-panel-pf-category-items`}>\n        {title && <legend className=\"filter-panel-pf-category-title\">{title}</legend>}\n        {shownChildren}\n        {showAllToggle}\n      </fieldset>\n    </form>\n  );\n};\n\nexport default FilterSidePanelCategory;\n"],"file":"FilterSidePanelCategory.js"}