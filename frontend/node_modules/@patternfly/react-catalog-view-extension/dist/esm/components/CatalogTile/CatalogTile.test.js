import * as React from 'react';
import CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';
import OutlinedCheckCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-check-circle-icon';
import { mount } from 'enzyme';
import { CatalogTile } from './CatalogTile';
import { CatalogTileBadge } from './CatalogTileBadge';
test('CatalogTile renders properly', () => {
  const component = mount(React.createElement("div", null, React.createElement(CatalogTile, {
    id: "single-badge-test",
    featured: true,
    badges: [React.createElement(CatalogTileBadge, {
      title: "Certified",
      id: "certified",
      key: "1"
    }, React.createElement(CogIcon, null)), React.createElement(CatalogTileBadge, {
      id: "no-title",
      key: "2"
    }, React.createElement(CogIcon, null))],
    title: "Patternfly",
    vendor: React.createElement("span", null, "Provided by ", React.createElement("a", {
      href: "redhat.com"
    }, "Red Hat")),
    description: "A community of designers and developers collaborating to build a UI framework for enterprise web applications."
  }), React.createElement(CatalogTile, {
    id: "multi-badge-test",
    badges: [React.createElement(CatalogTileBadge, {
      title: "Certified",
      id: "certified",
      key: "1"
    }, React.createElement(CogIcon, null)), React.createElement(CatalogTileBadge, {
      title: "USDA Approved",
      id: "approved",
      key: "2"
    }, React.createElement(OutlinedCheckCircleIcon, null))],
    title: "GitHub Desktop",
    vendor: "provided by GitHub",
    description: "Simple collaboration from your desktop."
  }), React.createElement(CatalogTile, {
    id: "test-iconClass",
    iconClass: "fa fa-codepen",
    badges: [React.createElement(CatalogTileBadge, {
      title: "USDA Approved",
      id: "approved",
      key: "1"
    }, React.createElement(OutlinedCheckCircleIcon, null))],
    title: "CodePen",
    vendor: "provided by CodePen",
    description: "An online community for testing and showcasing user-created HTML, CSS and JavaScript code snippets."
  }), React.createElement(CatalogTile, {
    id: "tile-footer-test",
    featured: true,
    href: "https://github.com/patternfly/patternfly-react",
    badges: [React.createElement(CatalogTileBadge, {
      title: "Certified",
      id: "certified",
      key: "1"
    }, React.createElement(CogIcon, null))],
    title: "Patternfly-React",
    vendor: "provided by Red Hat",
    description: "1234567890123",
    footer: React.createElement("span", null, React.createElement(OutlinedCheckCircleIcon, null), " Enabled")
  }), React.createElement(CatalogTile, {
    id: "custom-icon-svg-test",
    featured: true,
    title: "Custom SVG",
    href: "https://github.com/patternfly/patternfly-react",
    icon: React.createElement("svg", {
      height: "100",
      width: "100"
    }, React.createElement("circle", {
      cx: "50",
      cy: "50",
      r: "40",
      stroke: "black",
      strokeWidth: "3",
      fill: "red"
    }))
  })));
  expect(component).toMatchSnapshot();
});
test('CatalogTile href renders properly', () => {
  const view = mount(React.createElement(CatalogTile, {
    id: "test-href",
    href: "http://patternfly.org",
    featured: true,
    title: "Patternfly",
    vendor: "Provided by Red Hat",
    description: "1234567890123"
  }));
  expect(view).toMatchSnapshot();
});
test('CatalogTile onClick behaves properly', () => {
  const onClickMock = jest.fn();
  const view = mount(React.createElement(CatalogTile, {
    id: "test-on-click",
    className: "test-click-class",
    onClick: onClickMock,
    featured: true,
    title: "Patternfly",
    vendor: "Provided by Red Hat",
    description: "1234567890123"
  }));
  view.find('#test-on-click.test-click-class').hostNodes().simulate('click');
  expect(onClickMock).toBeCalled();
});
//# sourceMappingURL=CatalogTile.test.js.map