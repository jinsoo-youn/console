import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { Tooltip } from '@patternfly/react-core';
import classNames from 'classnames';
export const CatalogTileBadge = (_ref) => {
  let {
    children = null,
    className = '',
    id = null,
    title = null
  } = _ref,
      props = _objectWithoutProperties(_ref, ["children", "className", "id", "title"]);

  const classes = classNames('catalog-tile-pf-badge', className);

  if (title) {
    return React.createElement(React.Fragment, null, React.createElement(Tooltip, {
      id: id,
      content: title
    }, React.createElement("span", _extends({
      className: classes
    }, props), children, React.createElement("span", {
      className: "sr-only"
    }, title))));
  }

  return React.createElement("span", _extends({
    className: classes
  }, props), children);
};
CatalogTileBadge.propTypes = {
  children: _pt.node,
  className: _pt.string,
  id: _pt.string,
  title: _pt.string
};
//# sourceMappingURL=CatalogTileBadge.js.map