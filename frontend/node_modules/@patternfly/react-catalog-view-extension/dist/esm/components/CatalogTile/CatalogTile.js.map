{"version":3,"sources":["../../../../src/components/CatalogTile/CatalogTile.tsx"],"names":["React","Card","CardActions","CardHead","CardHeader","CardBody","CardFooter","classNames","CatalogTile","Component","e","onClick","href","props","preventDefault","badges","length","map","badge","index","render","id","className","featured","icon","iconImg","iconAlt","iconClass","title","vendor","description","footer","ref","handleClick","renderBadges"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardActions } from '@patternfly/react-core/dist/js/components/Card/CardActions';\nimport { CardHead } from '@patternfly/react-core/dist/js/components/Card/CardHead';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardFooter } from '@patternfly/react-core/dist/js/components/Card/CardFooter';\nimport classNames from 'classnames';\n\nexport interface CatalogTileProps extends Omit<React.HTMLProps<HTMLElement>, 'title'> {\n  /** Id */\n  id?: any;\n  /** Additional css classes */\n  className?: string;\n  /** Flag if the tile is 'featured' */\n  featured: boolean;\n  /** Callback for a click on the tile */\n  onClick?: (event: React.SyntheticEvent<HTMLElement>) => void;\n  /** href for the tile if used as a link */\n  href: string;\n  /** URL of an image for the item's icon */\n  iconImg?: string;\n  /** Alternate text for the item's icon */\n  iconAlt?: string;\n  /** Class for the image when an icon is to be used (exclusive from iconImg) */\n  iconClass?: string;\n  /** Alternatively provided JSX for the icon */\n  icon?: React.ReactNode;\n  /** Array of badges */\n  badges?: React.ReactNode[];\n  /** Tile for the catalog item */\n  title: string | React.ReactNode;\n  /** Vendor for the catalog item */\n  vendor?: string | React.ReactNode;\n  /** Description of the catalog item */\n  description?: string | React.ReactNode;\n  /** Footer for the tile */\n  footer?: string | React.ReactNode;\n}\n\nexport class CatalogTile extends React.Component<CatalogTileProps> {\n  static defaultProps = {\n    id: null as any,\n    className: '',\n    featured: false,\n    onClick: null as (event: React.SyntheticEvent<HTMLElement>) => void,\n    href: null as string,\n    iconImg: null as string,\n    iconAlt: '',\n    iconClass: '',\n    icon: null as React.ReactNode,\n    badges: [] as React.ReactNode[],\n    vendor: null as string | React.ReactNode,\n    description: null as string | React.ReactNode,\n    footer: null as string | React.ReactNode\n  };\n\n  private handleClick = (e: React.SyntheticEvent<HTMLElement>) => {\n    const { onClick, href } = this.props;\n\n    if (!href) {\n      e.preventDefault();\n    }\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  private renderBadges = (badges: React.ReactNode[]) => {\n    if (!badges || !badges.length) {\n      return null;\n    }\n\n    return (\n      <div className=\"catalog-tile-pf-badge-container\">\n        {badges.map((badge, index) => (\n          <span key={`badge-${index}`}>{badge}</span>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      featured,\n      onClick,\n      href,\n      icon,\n      iconImg,\n      iconAlt,\n      iconClass,\n      badges,\n      title,\n      vendor,\n      description,\n      footer,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ref,\n      ...props\n    } = this.props;\n\n    return (\n      <Card\n        component={href || onClick ? 'a' : 'div'}\n        id={id}\n        href={href || '#'}\n        className={classNames('catalog-tile-pf', { featured }, className)}\n        onClick={e => this.handleClick(e)}\n        isHoverable\n        {...props}\n      >\n        {(badges.length > 0 || iconImg || iconClass || icon) && (\n          <CardHead>\n            {iconImg && <img className=\"catalog-tile-pf-icon\" src={iconImg} alt={iconAlt} />}\n            {!iconImg && (iconClass || icon) && <span className={`catalog-tile-pf-icon ${iconClass}`}>{icon}</span>}\n            {badges.length > 0 && <CardActions>{this.renderBadges(badges)}</CardActions>}\n          </CardHead>\n        )}\n        <CardHeader className=\"catalog-tile-pf-header\">\n          <div className=\"catalog-tile-pf-title\">{title}</div>\n          {vendor && <div className=\"catalog-tile-pf-subtitle\">{vendor}</div>}\n        </CardHeader>\n        {description && (\n          <CardBody className=\"catalog-tile-pf-body\">\n            <div className=\"catalog-tile-pf-description\">\n              <span className={classNames({ 'has-footer': footer })}>{description}</span>\n            </div>\n          </CardBody>\n        )}\n        {footer && <CardFooter className=\"catalog-tile-pf-footer\">{footer}</CardFooter>}\n      </Card>\n    );\n  }\n}\n"],"file":"CatalogTile.js"}