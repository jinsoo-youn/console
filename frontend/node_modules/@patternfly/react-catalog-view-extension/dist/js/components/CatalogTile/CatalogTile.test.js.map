{"version":3,"sources":["../../../../src/components/CatalogTile/CatalogTile.test.tsx"],"names":["test","component","expect","toMatchSnapshot","view","onClickMock","jest","fn","find","hostNodes","simulate","toBeCalled"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEAA,IAAI,CAAC,8BAAD,EAAiC,YAAM;AACzC,MAAMC,SAAS,GAAG,mBAChB,iCACE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,MAAM,EAAE,CACN,oBAAC,kCAAD;AAAkB,MAAA,KAAK,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,GAAG,EAAC;AAAvD,OACE,oBAAC,mBAAD,OADF,CADM,EAIN,oBAAC,kCAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,GAAG,EAAC;AAApC,OACE,oBAAC,mBAAD,OADF,CAJM,CAHV;AAWE,IAAA,KAAK,EAAC,YAXR;AAYE,IAAA,MAAM,EACJ,kDACc;AAAG,MAAA,IAAI,EAAC;AAAR,iBADd,CAbJ;AAiBE,IAAA,WAAW,EAAC;AAjBd,IADF,EAoBE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,MAAM,EAAE,CACN,oBAAC,kCAAD;AAAkB,MAAA,KAAK,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,GAAG,EAAC;AAAvD,OACE,oBAAC,mBAAD,OADF,CADM,EAIN,oBAAC,kCAAD;AAAkB,MAAA,KAAK,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,UAA3C;AAAsD,MAAA,GAAG,EAAC;AAA1D,OACE,oBAAC,mCAAD,OADF,CAJM,CAFV;AAUE,IAAA,KAAK,EAAC,gBAVR;AAWE,IAAA,MAAM,EAAC,oBAXT;AAYE,IAAA,WAAW,EAAC;AAZd,IApBF,EAkCE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,MAAM,EAAE,CACN,oBAAC,kCAAD;AAAkB,MAAA,KAAK,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,UAA3C;AAAsD,MAAA,GAAG,EAAC;AAA1D,OACE,oBAAC,mCAAD,OADF,CADM,CAHV;AAQE,IAAA,KAAK,EAAC,SARR;AASE,IAAA,MAAM,EAAC,qBATT;AAUE,IAAA,WAAW,EAAC;AAVd,IAlCF,EA8CE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,gDAHP;AAIE,IAAA,MAAM,EAAE,CACN,oBAAC,kCAAD;AAAkB,MAAA,KAAK,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,GAAG,EAAC;AAAvD,OACE,oBAAC,mBAAD,OADF,CADM,CAJV;AASE,IAAA,KAAK,EAAC,kBATR;AAUE,IAAA,MAAM,EAAC,qBAVT;AAWE,IAAA,WAAW,EAAC,eAXd;AAYE,IAAA,MAAM,EACJ,kCACE,oBAAC,mCAAD,OADF;AAbJ,IA9CF,EAgEE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,IAAI,EAAC,gDAJP;AAKE,IAAA,IAAI,EACF;AAAK,MAAA,MAAM,EAAC,KAAZ;AAAkB,MAAA,KAAK,EAAC;AAAxB,OACE;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,EAAE,EAAC,IAAnB;AAAwB,MAAA,CAAC,EAAC,IAA1B;AAA+B,MAAA,MAAM,EAAC,OAAtC;AAA8C,MAAA,WAAW,EAAC,GAA1D;AAA8D,MAAA,IAAI,EAAC;AAAnE,MADF;AANJ,IAhEF,CADgB,CAAlB;AA8EAC,EAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACD,CAhFG,CAAJ;AAkFAH,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,MAAMI,IAAI,GAAG,mBACX,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,uBAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAC,YAJR;AAKE,IAAA,MAAM,EAAC,qBALT;AAME,IAAA,WAAW,EAAC;AANd,IADW,CAAb;AAUAF,EAAAA,MAAM,CAACE,IAAD,CAAN,CAAaD,eAAb;AACD,CAZG,CAAJ;AAcAH,IAAI,CAAC,sCAAD,EAAyC,YAAM;AACjD,MAAMK,WAAW,GAAGC,IAAI,CAACC,EAAL,EAApB;AAEA,MAAMH,IAAI,GAAG,mBACX,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,OAAO,EAAEC,WAHX;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC,YALR;AAME,IAAA,MAAM,EAAC,qBANT;AAOE,IAAA,WAAW,EAAC;AAPd,IADW,CAAb;AAYAD,EAAAA,IAAI,CACDI,IADH,CACQ,iCADR,EAEGC,SAFH,GAGGC,QAHH,CAGY,OAHZ;AAIAR,EAAAA,MAAM,CAACG,WAAD,CAAN,CAAoBM,UAApB;AACD,CApBG,CAAJ","sourcesContent":["import * as React from 'react';\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\nimport OutlinedCheckCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-check-circle-icon';\nimport { mount } from 'enzyme';\n\nimport { CatalogTile } from './CatalogTile';\nimport { CatalogTileBadge } from './CatalogTileBadge';\n\ntest('CatalogTile renders properly', () => {\n  const component = mount(\n    <div>\n      <CatalogTile\n        id=\"single-badge-test\"\n        featured\n        badges={[\n          <CatalogTileBadge title=\"Certified\" id=\"certified\" key=\"1\">\n            <CogIcon />\n          </CatalogTileBadge>,\n          <CatalogTileBadge id=\"no-title\" key=\"2\">\n            <CogIcon />\n          </CatalogTileBadge>\n        ]}\n        title=\"Patternfly\"\n        vendor={\n          <span>\n            Provided by <a href=\"redhat.com\">Red Hat</a>\n          </span>\n        }\n        description=\"A community of designers and developers collaborating to build a UI framework for enterprise web applications.\"\n      />\n      <CatalogTile\n        id=\"multi-badge-test\"\n        badges={[\n          <CatalogTileBadge title=\"Certified\" id=\"certified\" key=\"1\">\n            <CogIcon />\n          </CatalogTileBadge>,\n          <CatalogTileBadge title=\"USDA Approved\" id=\"approved\" key=\"2\">\n            <OutlinedCheckCircleIcon />\n          </CatalogTileBadge>\n        ]}\n        title=\"GitHub Desktop\"\n        vendor=\"provided by GitHub\"\n        description=\"Simple collaboration from your desktop.\"\n      />\n      <CatalogTile\n        id=\"test-iconClass\"\n        iconClass=\"fa fa-codepen\"\n        badges={[\n          <CatalogTileBadge title=\"USDA Approved\" id=\"approved\" key=\"1\">\n            <OutlinedCheckCircleIcon />\n          </CatalogTileBadge>\n        ]}\n        title=\"CodePen\"\n        vendor=\"provided by CodePen\"\n        description=\"An online community for testing and showcasing user-created HTML, CSS and JavaScript code snippets.\"\n      />\n      <CatalogTile\n        id=\"tile-footer-test\"\n        featured\n        href=\"https://github.com/patternfly/patternfly-react\"\n        badges={[\n          <CatalogTileBadge title=\"Certified\" id=\"certified\" key=\"1\">\n            <CogIcon />\n          </CatalogTileBadge>\n        ]}\n        title=\"Patternfly-React\"\n        vendor=\"provided by Red Hat\"\n        description=\"1234567890123\"\n        footer={\n          <span>\n            <OutlinedCheckCircleIcon /> Enabled\n          </span>\n        }\n      />\n      <CatalogTile\n        id=\"custom-icon-svg-test\"\n        featured\n        title=\"Custom SVG\"\n        href=\"https://github.com/patternfly/patternfly-react\"\n        icon={\n          <svg height=\"100\" width=\"100\">\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />\n          </svg>\n        }\n      />\n    </div>\n  );\n  expect(component).toMatchSnapshot();\n});\n\ntest('CatalogTile href renders properly', () => {\n  const view = mount(\n    <CatalogTile\n      id=\"test-href\"\n      href=\"http://patternfly.org\"\n      featured\n      title=\"Patternfly\"\n      vendor=\"Provided by Red Hat\"\n      description=\"1234567890123\"\n    />\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('CatalogTile onClick behaves properly', () => {\n  const onClickMock = jest.fn();\n\n  const view = mount(\n    <CatalogTile\n      id=\"test-on-click\"\n      className=\"test-click-class\"\n      onClick={onClickMock}\n      featured\n      title=\"Patternfly\"\n      vendor=\"Provided by Red Hat\"\n      description=\"1234567890123\"\n    />\n  );\n\n  view\n    .find('#test-on-click.test-click-class')\n    .hostNodes()\n    .simulate('click');\n  expect(onClickMock).toBeCalled();\n});\n"],"file":"CatalogTile.test.js"}