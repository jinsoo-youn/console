{"version":3,"sources":["../../../../src/components/CatalogTile/CatalogTile.tsx"],"names":["CatalogTile","e","props","onClick","href","preventDefault","badges","length","map","badge","index","id","className","featured","icon","iconImg","iconAlt","iconClass","title","vendor","description","footer","ref","handleClick","renderBadges","React","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardActions } from '@patternfly/react-core/dist/js/components/Card/CardActions';\nimport { CardHead } from '@patternfly/react-core/dist/js/components/Card/CardHead';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardFooter } from '@patternfly/react-core/dist/js/components/Card/CardFooter';\nimport classNames from 'classnames';\n\nexport interface CatalogTileProps extends Omit<React.HTMLProps<HTMLElement>, 'title'> {\n  /** Id */\n  id?: any;\n  /** Additional css classes */\n  className?: string;\n  /** Flag if the tile is 'featured' */\n  featured: boolean;\n  /** Callback for a click on the tile */\n  onClick?: (event: React.SyntheticEvent<HTMLElement>) => void;\n  /** href for the tile if used as a link */\n  href: string;\n  /** URL of an image for the item's icon */\n  iconImg?: string;\n  /** Alternate text for the item's icon */\n  iconAlt?: string;\n  /** Class for the image when an icon is to be used (exclusive from iconImg) */\n  iconClass?: string;\n  /** Alternatively provided JSX for the icon */\n  icon?: React.ReactNode;\n  /** Array of badges */\n  badges?: React.ReactNode[];\n  /** Tile for the catalog item */\n  title: string | React.ReactNode;\n  /** Vendor for the catalog item */\n  vendor?: string | React.ReactNode;\n  /** Description of the catalog item */\n  description?: string | React.ReactNode;\n  /** Footer for the tile */\n  footer?: string | React.ReactNode;\n}\n\nexport class CatalogTile extends React.Component<CatalogTileProps> {\n  static defaultProps = {\n    id: null as any,\n    className: '',\n    featured: false,\n    onClick: null as (event: React.SyntheticEvent<HTMLElement>) => void,\n    href: null as string,\n    iconImg: null as string,\n    iconAlt: '',\n    iconClass: '',\n    icon: null as React.ReactNode,\n    badges: [] as React.ReactNode[],\n    vendor: null as string | React.ReactNode,\n    description: null as string | React.ReactNode,\n    footer: null as string | React.ReactNode\n  };\n\n  private handleClick = (e: React.SyntheticEvent<HTMLElement>) => {\n    const { onClick, href } = this.props;\n\n    if (!href) {\n      e.preventDefault();\n    }\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  private renderBadges = (badges: React.ReactNode[]) => {\n    if (!badges || !badges.length) {\n      return null;\n    }\n\n    return (\n      <div className=\"catalog-tile-pf-badge-container\">\n        {badges.map((badge, index) => (\n          <span key={`badge-${index}`}>{badge}</span>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      featured,\n      onClick,\n      href,\n      icon,\n      iconImg,\n      iconAlt,\n      iconClass,\n      badges,\n      title,\n      vendor,\n      description,\n      footer,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ref,\n      ...props\n    } = this.props;\n\n    return (\n      <Card\n        component={href || onClick ? 'a' : 'div'}\n        id={id}\n        href={href || '#'}\n        className={classNames('catalog-tile-pf', { featured }, className)}\n        onClick={e => this.handleClick(e)}\n        isHoverable\n        {...props}\n      >\n        {(badges.length > 0 || iconImg || iconClass || icon) && (\n          <CardHead>\n            {iconImg && <img className=\"catalog-tile-pf-icon\" src={iconImg} alt={iconAlt} />}\n            {!iconImg && (iconClass || icon) && <span className={`catalog-tile-pf-icon ${iconClass}`}>{icon}</span>}\n            {badges.length > 0 && <CardActions>{this.renderBadges(badges)}</CardActions>}\n          </CardHead>\n        )}\n        <CardHeader className=\"catalog-tile-pf-header\">\n          <div className=\"catalog-tile-pf-title\">{title}</div>\n          {vendor && <div className=\"catalog-tile-pf-subtitle\">{vendor}</div>}\n        </CardHeader>\n        {description && (\n          <CardBody className=\"catalog-tile-pf-body\">\n            <div className=\"catalog-tile-pf-description\">\n              <span className={classNames({ 'has-footer': footer })}>{description}</span>\n            </div>\n          </CardBody>\n        )}\n        {footer && <CardFooter className=\"catalog-tile-pf-footer\">{footer}</CardFooter>}\n      </Card>\n    );\n  }\n}\n"],"file":"CatalogTile.js"}