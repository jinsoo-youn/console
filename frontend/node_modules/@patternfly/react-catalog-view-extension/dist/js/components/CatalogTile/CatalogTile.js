"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CatalogTile = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _Card = require("@patternfly/react-core/dist/js/components/Card/Card");

var _CardActions = require("@patternfly/react-core/dist/js/components/Card/CardActions");

var _CardHead = require("@patternfly/react-core/dist/js/components/Card/CardHead");

var _CardHeader = require("@patternfly/react-core/dist/js/components/Card/CardHeader");

var _CardBody = require("@patternfly/react-core/dist/js/components/Card/CardBody");

var _CardFooter = require("@patternfly/react-core/dist/js/components/Card/CardFooter");

var _classnames = _interopRequireDefault(require("classnames"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CatalogTile =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CatalogTile, _React$Component);

  function CatalogTile() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CatalogTile);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CatalogTile)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "handleClick", function (e) {
      var _this$props = _this.props,
          onClick = _this$props.onClick,
          href = _this$props.href;

      if (!href) {
        e.preventDefault();
      }

      if (onClick) {
        onClick(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "renderBadges", function (badges) {
      if (!badges || !badges.length) {
        return null;
      }

      return React.createElement("div", {
        className: "catalog-tile-pf-badge-container"
      }, badges.map(function (badge, index) {
        return React.createElement("span", {
          key: "badge-".concat(index)
        }, badge);
      }));
    });

    return _this;
  }

  _createClass(CatalogTile, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          id = _this$props2.id,
          className = _this$props2.className,
          featured = _this$props2.featured,
          onClick = _this$props2.onClick,
          href = _this$props2.href,
          icon = _this$props2.icon,
          iconImg = _this$props2.iconImg,
          iconAlt = _this$props2.iconAlt,
          iconClass = _this$props2.iconClass,
          badges = _this$props2.badges,
          title = _this$props2.title,
          vendor = _this$props2.vendor,
          description = _this$props2.description,
          footer = _this$props2.footer,
          ref = _this$props2.ref,
          props = _objectWithoutProperties(_this$props2, ["id", "className", "featured", "onClick", "href", "icon", "iconImg", "iconAlt", "iconClass", "badges", "title", "vendor", "description", "footer", "ref"]);

      return React.createElement(_Card.Card, _extends({
        component: href || onClick ? 'a' : 'div',
        id: id,
        href: href || '#',
        className: (0, _classnames["default"])('catalog-tile-pf', {
          featured: featured
        }, className),
        onClick: function onClick(e) {
          return _this2.handleClick(e);
        },
        isHoverable: true
      }, props), (badges.length > 0 || iconImg || iconClass || icon) && React.createElement(_CardHead.CardHead, null, iconImg && React.createElement("img", {
        className: "catalog-tile-pf-icon",
        src: iconImg,
        alt: iconAlt
      }), !iconImg && (iconClass || icon) && React.createElement("span", {
        className: "catalog-tile-pf-icon ".concat(iconClass)
      }, icon), badges.length > 0 && React.createElement(_CardActions.CardActions, null, this.renderBadges(badges))), React.createElement(_CardHeader.CardHeader, {
        className: "catalog-tile-pf-header"
      }, React.createElement("div", {
        className: "catalog-tile-pf-title"
      }, title), vendor && React.createElement("div", {
        className: "catalog-tile-pf-subtitle"
      }, vendor)), description && React.createElement(_CardBody.CardBody, {
        className: "catalog-tile-pf-body"
      }, React.createElement("div", {
        className: "catalog-tile-pf-description"
      }, React.createElement("span", {
        className: (0, _classnames["default"])({
          'has-footer': footer
        })
      }, description))), footer && React.createElement(_CardFooter.CardFooter, {
        className: "catalog-tile-pf-footer"
      }, footer));
    }
  }]);

  return CatalogTile;
}(React.Component);

exports.CatalogTile = CatalogTile;

_defineProperty(CatalogTile, "propTypes", {
  id: _propTypes["default"].any,
  className: _propTypes["default"].string,
  featured: _propTypes["default"].bool,
  onClick: _propTypes["default"].func,
  href: _propTypes["default"].string,
  iconImg: _propTypes["default"].string,
  iconAlt: _propTypes["default"].string,
  iconClass: _propTypes["default"].string,
  icon: _propTypes["default"].node,
  badges: _propTypes["default"].arrayOf(_propTypes["default"].node),
  title: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]).isRequired,
  vendor: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  description: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  footer: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node])
});

_defineProperty(CatalogTile, "defaultProps", {
  id: null,
  className: '',
  featured: false,
  onClick: null,
  href: null,
  iconImg: null,
  iconAlt: '',
  iconClass: '',
  icon: null,
  badges: [],
  vendor: null,
  description: null,
  footer: null
});
//# sourceMappingURL=CatalogTile.js.map