(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["react", "enzyme", "@patternfly/react-icons/dist/js/icons/ok-icon", "@patternfly/react-icons/dist/js/icons/external-link-alt-icon", "@patternfly/react-icons/dist/js/icons/globe-icon", "./"], factory);
  } else if (typeof exports !== "undefined") {
    factory(require("react"), require("enzyme"), require("@patternfly/react-icons/dist/js/icons/ok-icon"), require("@patternfly/react-icons/dist/js/icons/external-link-alt-icon"), require("@patternfly/react-icons/dist/js/icons/globe-icon"), require("./"));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.enzyme, global.okIcon, global.externalLinkAltIcon, global.globeIcon, global._);
    global.undefined = mod.exports;
  }
})(this, function (_react, _enzyme, _okIcon, _externalLinkAltIcon, _globeIcon, _) {
  "use strict";

  var React = _interopRequireWildcard(_react);

  var _okIcon2 = _interopRequireDefault(_okIcon);

  var _externalLinkAltIcon2 = _interopRequireDefault(_externalLinkAltIcon);

  var _globeIcon2 = _interopRequireDefault(_globeIcon);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function () {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};

    if (obj != null) {
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  test('PropertyItem renders properly', () => {
    const component = (0, _enzyme.mount)(React.createElement(_.PropertyItem, {
      label: "Operator Version",
      value: "0.9.8 (latest)",
      className: "test-property-item-class"
    }));
    expect(component.render()).toMatchSnapshot();
  });
  test('PropertiesSidePanel renders properly', () => {
    const component = (0, _enzyme.mount)(React.createElement(_.PropertiesSidePanel, {
      className: "test-properties-side-panel-class"
    }, React.createElement(_.PropertyItem, {
      label: "Operator Version",
      value: "0.9.8 (latest)",
      className: "test-property-item-class"
    }), React.createElement(_.PropertyItem, {
      label: "Certified Level",
      value: React.createElement("span", null, React.createElement(_okIcon2.default, {
        style: {
          color: '#3f9c35'
        }
      }), " Certified")
    }), React.createElement(_.PropertyItem, {
      label: "Provider",
      value: "Red Hat, Inc"
    }), React.createElement(_.PropertyItem, {
      label: "Health Index",
      value: "A"
    }), React.createElement(_.PropertyItem, {
      label: "Repository",
      value: React.createElement("a", {
        href: "https://quay.io/repository/redhat/prometheus-operator"
      }, "https://quay.io/repository/redhat/prometheus-operator")
    }), React.createElement(_.PropertyItem, {
      label: "Container Image",
      value: React.createElement("a", {
        href: "#"
      }, "0.22.2 ", React.createElement(_externalLinkAltIcon2.default, null))
    }), React.createElement(_.PropertyItem, {
      label: "Created At",
      value: React.createElement("span", null, React.createElement(_globeIcon2.default, null), " Aug 23, 1:58pm")
    }), React.createElement(_.PropertyItem, {
      label: "Support",
      value: React.createElement("a", {
        href: "#"
      }, "Red Hat")
    })));
    expect(component.render()).toMatchSnapshot();
  });
});
//# sourceMappingURL=PropertiesSidePanel.test.js.map