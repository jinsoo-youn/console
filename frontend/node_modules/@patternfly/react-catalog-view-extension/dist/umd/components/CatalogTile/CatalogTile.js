(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "prop-types", "react", "@patternfly/react-core/dist/js/components/Card/Card", "@patternfly/react-core/dist/js/components/Card/CardActions", "@patternfly/react-core/dist/js/components/Card/CardHead", "@patternfly/react-core/dist/js/components/Card/CardHeader", "@patternfly/react-core/dist/js/components/Card/CardBody", "@patternfly/react-core/dist/js/components/Card/CardFooter", "classnames"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("prop-types"), require("react"), require("@patternfly/react-core/dist/js/components/Card/Card"), require("@patternfly/react-core/dist/js/components/Card/CardActions"), require("@patternfly/react-core/dist/js/components/Card/CardHead"), require("@patternfly/react-core/dist/js/components/Card/CardHeader"), require("@patternfly/react-core/dist/js/components/Card/CardBody"), require("@patternfly/react-core/dist/js/components/Card/CardFooter"), require("classnames"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.propTypes, global.react, global.Card, global.CardActions, global.CardHead, global.CardHeader, global.CardBody, global.CardFooter, global.classnames);
    global.undefined = mod.exports;
  }
})(this, function (exports, _propTypes, _react, _Card, _CardActions, _CardHead, _CardHeader, _CardBody, _CardFooter, _classnames) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CatalogTile = undefined;

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var React = _interopRequireWildcard(_react);

  var _classnames2 = _interopRequireDefault(_classnames);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function () {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};

    if (obj != null) {
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  class CatalogTile extends React.Component {
    constructor(...args) {
      super(...args);

      _defineProperty(this, "handleClick", e => {
        const {
          onClick,
          href
        } = this.props;

        if (!href) {
          e.preventDefault();
        }

        if (onClick) {
          onClick(e);
        }
      });

      _defineProperty(this, "renderBadges", badges => {
        if (!badges || !badges.length) {
          return null;
        }

        return React.createElement("div", {
          className: "catalog-tile-pf-badge-container"
        }, badges.map((badge, index) => React.createElement("span", {
          key: `badge-${index}`
        }, badge)));
      });
    }

    render() {
      const _this$props = this.props,
            {
        id,
        className,
        featured,
        onClick,
        href,
        icon,
        iconImg,
        iconAlt,
        iconClass,
        badges,
        title,
        vendor,
        description,
        footer,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        ref
      } = _this$props,
            props = _objectWithoutProperties(_this$props, ["id", "className", "featured", "onClick", "href", "icon", "iconImg", "iconAlt", "iconClass", "badges", "title", "vendor", "description", "footer", "ref"]);

      return React.createElement(_Card.Card, _extends({
        component: href || onClick ? 'a' : 'div',
        id: id,
        href: href || '#',
        className: (0, _classnames2.default)('catalog-tile-pf', {
          featured
        }, className),
        onClick: e => this.handleClick(e),
        isHoverable: true
      }, props), (badges.length > 0 || iconImg || iconClass || icon) && React.createElement(_CardHead.CardHead, null, iconImg && React.createElement("img", {
        className: "catalog-tile-pf-icon",
        src: iconImg,
        alt: iconAlt
      }), !iconImg && (iconClass || icon) && React.createElement("span", {
        className: `catalog-tile-pf-icon ${iconClass}`
      }, icon), badges.length > 0 && React.createElement(_CardActions.CardActions, null, this.renderBadges(badges))), React.createElement(_CardHeader.CardHeader, {
        className: "catalog-tile-pf-header"
      }, React.createElement("div", {
        className: "catalog-tile-pf-title"
      }, title), vendor && React.createElement("div", {
        className: "catalog-tile-pf-subtitle"
      }, vendor)), description && React.createElement(_CardBody.CardBody, {
        className: "catalog-tile-pf-body"
      }, React.createElement("div", {
        className: "catalog-tile-pf-description"
      }, React.createElement("span", {
        className: (0, _classnames2.default)({
          'has-footer': footer
        })
      }, description))), footer && React.createElement(_CardFooter.CardFooter, {
        className: "catalog-tile-pf-footer"
      }, footer));
    }

  }

  exports.CatalogTile = CatalogTile;

  _defineProperty(CatalogTile, "propTypes", {
    id: _propTypes2.default.any,
    className: _propTypes2.default.string,
    featured: _propTypes2.default.bool,
    onClick: _propTypes2.default.func,
    href: _propTypes2.default.string,
    iconImg: _propTypes2.default.string,
    iconAlt: _propTypes2.default.string,
    iconClass: _propTypes2.default.string,
    icon: _propTypes2.default.node,
    badges: _propTypes2.default.arrayOf(_propTypes2.default.node),
    title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).isRequired,
    vendor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    description: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    footer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])
  });

  _defineProperty(CatalogTile, "defaultProps", {
    id: null,
    className: '',
    featured: false,
    onClick: null,
    href: null,
    iconImg: null,
    iconAlt: '',
    iconClass: '',
    icon: null,
    badges: [],
    vendor: null,
    description: null,
    footer: null
  });
});
//# sourceMappingURL=CatalogTile.js.map