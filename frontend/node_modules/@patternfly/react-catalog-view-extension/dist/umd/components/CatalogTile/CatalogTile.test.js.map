{"version":3,"sources":["../../../esm/components/CatalogTile/CatalogTile.test.js"],"names":["React","test","component","createElement","CatalogTile","id","featured","badges","CatalogTileBadge","title","key","CogIcon","vendor","href","description","OutlinedCheckCircleIcon","iconClass","footer","icon","height","width","cx","cy","r","stroke","strokeWidth","fill","expect","toMatchSnapshot","view","onClickMock","jest","fn","className","onClick","find","hostNodes","simulate","toBeCalled"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\nimport OutlinedCheckCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-check-circle-icon';\nimport { mount } from 'enzyme';\nimport { CatalogTile } from './CatalogTile';\nimport { CatalogTileBadge } from './CatalogTileBadge';\ntest('CatalogTile renders properly', () => {\n  const component = mount(React.createElement(\"div\", null, React.createElement(CatalogTile, {\n    id: \"single-badge-test\",\n    featured: true,\n    badges: [React.createElement(CatalogTileBadge, {\n      title: \"Certified\",\n      id: \"certified\",\n      key: \"1\"\n    }, React.createElement(CogIcon, null)), React.createElement(CatalogTileBadge, {\n      id: \"no-title\",\n      key: \"2\"\n    }, React.createElement(CogIcon, null))],\n    title: \"Patternfly\",\n    vendor: React.createElement(\"span\", null, \"Provided by \", React.createElement(\"a\", {\n      href: \"redhat.com\"\n    }, \"Red Hat\")),\n    description: \"A community of designers and developers collaborating to build a UI framework for enterprise web applications.\"\n  }), React.createElement(CatalogTile, {\n    id: \"multi-badge-test\",\n    badges: [React.createElement(CatalogTileBadge, {\n      title: \"Certified\",\n      id: \"certified\",\n      key: \"1\"\n    }, React.createElement(CogIcon, null)), React.createElement(CatalogTileBadge, {\n      title: \"USDA Approved\",\n      id: \"approved\",\n      key: \"2\"\n    }, React.createElement(OutlinedCheckCircleIcon, null))],\n    title: \"GitHub Desktop\",\n    vendor: \"provided by GitHub\",\n    description: \"Simple collaboration from your desktop.\"\n  }), React.createElement(CatalogTile, {\n    id: \"test-iconClass\",\n    iconClass: \"fa fa-codepen\",\n    badges: [React.createElement(CatalogTileBadge, {\n      title: \"USDA Approved\",\n      id: \"approved\",\n      key: \"1\"\n    }, React.createElement(OutlinedCheckCircleIcon, null))],\n    title: \"CodePen\",\n    vendor: \"provided by CodePen\",\n    description: \"An online community for testing and showcasing user-created HTML, CSS and JavaScript code snippets.\"\n  }), React.createElement(CatalogTile, {\n    id: \"tile-footer-test\",\n    featured: true,\n    href: \"https://github.com/patternfly/patternfly-react\",\n    badges: [React.createElement(CatalogTileBadge, {\n      title: \"Certified\",\n      id: \"certified\",\n      key: \"1\"\n    }, React.createElement(CogIcon, null))],\n    title: \"Patternfly-React\",\n    vendor: \"provided by Red Hat\",\n    description: \"1234567890123\",\n    footer: React.createElement(\"span\", null, React.createElement(OutlinedCheckCircleIcon, null), \" Enabled\")\n  }), React.createElement(CatalogTile, {\n    id: \"custom-icon-svg-test\",\n    featured: true,\n    title: \"Custom SVG\",\n    href: \"https://github.com/patternfly/patternfly-react\",\n    icon: React.createElement(\"svg\", {\n      height: \"100\",\n      width: \"100\"\n    }, React.createElement(\"circle\", {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"40\",\n      stroke: \"black\",\n      strokeWidth: \"3\",\n      fill: \"red\"\n    }))\n  })));\n  expect(component).toMatchSnapshot();\n});\ntest('CatalogTile href renders properly', () => {\n  const view = mount(React.createElement(CatalogTile, {\n    id: \"test-href\",\n    href: \"http://patternfly.org\",\n    featured: true,\n    title: \"Patternfly\",\n    vendor: \"Provided by Red Hat\",\n    description: \"1234567890123\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('CatalogTile onClick behaves properly', () => {\n  const onClickMock = jest.fn();\n  const view = mount(React.createElement(CatalogTile, {\n    id: \"test-on-click\",\n    className: \"test-click-class\",\n    onClick: onClickMock,\n    featured: true,\n    title: \"Patternfly\",\n    vendor: \"Provided by Red Hat\",\n    description: \"1234567890123\"\n  }));\n  view.find('#test-on-click.test-click-class').hostNodes().simulate('click');\n  expect(onClickMock).toBeCalled();\n});\n//# sourceMappingURL=CatalogTile.test.js.map"],"file":"CatalogTile.test.js"}