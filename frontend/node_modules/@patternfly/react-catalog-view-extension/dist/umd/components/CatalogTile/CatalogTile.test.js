(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["react", "@patternfly/react-icons/dist/js/icons/cog-icon", "@patternfly/react-icons/dist/js/icons/outlined-check-circle-icon", "enzyme", "./CatalogTile", "./CatalogTileBadge"], factory);
  } else if (typeof exports !== "undefined") {
    factory(require("react"), require("@patternfly/react-icons/dist/js/icons/cog-icon"), require("@patternfly/react-icons/dist/js/icons/outlined-check-circle-icon"), require("enzyme"), require("./CatalogTile"), require("./CatalogTileBadge"));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.cogIcon, global.outlinedCheckCircleIcon, global.enzyme, global.CatalogTile, global.CatalogTileBadge);
    global.undefined = mod.exports;
  }
})(this, function (_react, _cogIcon, _outlinedCheckCircleIcon, _enzyme, _CatalogTile, _CatalogTileBadge) {
  "use strict";

  var React = _interopRequireWildcard(_react);

  var _cogIcon2 = _interopRequireDefault(_cogIcon);

  var _outlinedCheckCircleIcon2 = _interopRequireDefault(_outlinedCheckCircleIcon);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function () {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};

    if (obj != null) {
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  test('CatalogTile renders properly', () => {
    const component = (0, _enzyme.mount)(React.createElement("div", null, React.createElement(_CatalogTile.CatalogTile, {
      id: "single-badge-test",
      featured: true,
      badges: [React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        title: "Certified",
        id: "certified",
        key: "1"
      }, React.createElement(_cogIcon2.default, null)), React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        id: "no-title",
        key: "2"
      }, React.createElement(_cogIcon2.default, null))],
      title: "Patternfly",
      vendor: React.createElement("span", null, "Provided by ", React.createElement("a", {
        href: "redhat.com"
      }, "Red Hat")),
      description: "A community of designers and developers collaborating to build a UI framework for enterprise web applications."
    }), React.createElement(_CatalogTile.CatalogTile, {
      id: "multi-badge-test",
      badges: [React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        title: "Certified",
        id: "certified",
        key: "1"
      }, React.createElement(_cogIcon2.default, null)), React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        title: "USDA Approved",
        id: "approved",
        key: "2"
      }, React.createElement(_outlinedCheckCircleIcon2.default, null))],
      title: "GitHub Desktop",
      vendor: "provided by GitHub",
      description: "Simple collaboration from your desktop."
    }), React.createElement(_CatalogTile.CatalogTile, {
      id: "test-iconClass",
      iconClass: "fa fa-codepen",
      badges: [React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        title: "USDA Approved",
        id: "approved",
        key: "1"
      }, React.createElement(_outlinedCheckCircleIcon2.default, null))],
      title: "CodePen",
      vendor: "provided by CodePen",
      description: "An online community for testing and showcasing user-created HTML, CSS and JavaScript code snippets."
    }), React.createElement(_CatalogTile.CatalogTile, {
      id: "tile-footer-test",
      featured: true,
      href: "https://github.com/patternfly/patternfly-react",
      badges: [React.createElement(_CatalogTileBadge.CatalogTileBadge, {
        title: "Certified",
        id: "certified",
        key: "1"
      }, React.createElement(_cogIcon2.default, null))],
      title: "Patternfly-React",
      vendor: "provided by Red Hat",
      description: "1234567890123",
      footer: React.createElement("span", null, React.createElement(_outlinedCheckCircleIcon2.default, null), " Enabled")
    }), React.createElement(_CatalogTile.CatalogTile, {
      id: "custom-icon-svg-test",
      featured: true,
      title: "Custom SVG",
      href: "https://github.com/patternfly/patternfly-react",
      icon: React.createElement("svg", {
        height: "100",
        width: "100"
      }, React.createElement("circle", {
        cx: "50",
        cy: "50",
        r: "40",
        stroke: "black",
        strokeWidth: "3",
        fill: "red"
      }))
    })));
    expect(component).toMatchSnapshot();
  });
  test('CatalogTile href renders properly', () => {
    const view = (0, _enzyme.mount)(React.createElement(_CatalogTile.CatalogTile, {
      id: "test-href",
      href: "http://patternfly.org",
      featured: true,
      title: "Patternfly",
      vendor: "Provided by Red Hat",
      description: "1234567890123"
    }));
    expect(view).toMatchSnapshot();
  });
  test('CatalogTile onClick behaves properly', () => {
    const onClickMock = jest.fn();
    const view = (0, _enzyme.mount)(React.createElement(_CatalogTile.CatalogTile, {
      id: "test-on-click",
      className: "test-click-class",
      onClick: onClickMock,
      featured: true,
      title: "Patternfly",
      vendor: "Provided by Red Hat",
      description: "1234567890123"
    }));
    view.find('#test-on-click.test-click-class').hostNodes().simulate('click');
    expect(onClickMock).toBeCalled();
  });
});
//# sourceMappingURL=CatalogTile.test.js.map