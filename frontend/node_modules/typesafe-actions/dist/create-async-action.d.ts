import { TypeConstant, ActionBuilderConstructor } from './type-helpers';
export interface AsyncActionBuilder<TType1 extends TypeConstant, TType2 extends TypeConstant, TType3 extends TypeConstant, TType4 extends TypeConstant> {
    <TPayload1, TPayload2, TPayload3, TPayload4>(): {
        request: ActionBuilderConstructor<TType1, TPayload1>;
        success: ActionBuilderConstructor<TType2, TPayload2>;
        failure: ActionBuilderConstructor<TType3, TPayload3>;
        cancel: ActionBuilderConstructor<TType4, TPayload4>;
    };
    <TPayload1, TPayload2, TPayload3>(): {
        request: ActionBuilderConstructor<TType1, TPayload1>;
        success: ActionBuilderConstructor<TType2, TPayload2>;
        failure: ActionBuilderConstructor<TType3, TPayload3>;
    };
}
/**
 * implementation
 */
export declare function createAsyncAction<TType1 extends TypeConstant, TType2 extends TypeConstant, TType3 extends TypeConstant, TType4 extends TypeConstant>(requestType: TType1, successType: TType2, failureType: TType3, cancelType?: TType4): AsyncActionBuilder<TType1, TType2, TType3, TType4>;
