{"version":3,"file":"ceph-storage-add-capacity-modal-54de28abc9c0e3a1a3dc.js","sources":["webpack:///./packages/ceph-storage-plugin/src/components/modals/add-capacity-modal/add-capacity-modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport { FieldLevelHelp, humanizeBinaryBytes } from '@console/internal/components/utils/index';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\nimport { usePrometheusPoll } from '@console/internal/components/graphs/prometheus-poll-hook';\nimport { k8sPatch, StorageClassResourceKind } from '@console/internal/module/k8s';\nimport { PrometheusEndpoint } from '@console/internal/components/graphs/helpers';\nimport { getName } from '@console/shared';\nimport { OCSServiceModel } from '../../../models';\nimport { OSD_CAPACITY_SIZES } from '../../../utils/osd-size-dropdown';\nimport { CEPH_STORAGE_NAMESPACE, NO_PROVISIONER } from '../../../constants';\nimport { labelTooltip, storageClassTooltip } from '../../../constants/ocs-install';\nimport { CAPACITY_USAGE_QUERIES, StorageDashboardQuery } from '../../../constants/queries';\nimport { OCSStorageClassDropdown } from '../storage-class-dropdown';\nimport { PVsAvailableCapacity } from '../../ocs-install/pvs-available-capacity';\nimport './_add-capacity-modal.scss';\n\nconst getProvisionedCapacity = (value: number) => (value % 1 ? (value * 3).toFixed(2) : value * 3);\n\nexport const AddCapacityModal = (props: AddCapacityModalProps) => {\n  const { ocsConfig, close, cancel } = props;\n\n  const [response, loadError, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace: CEPH_STORAGE_NAMESPACE,\n    query: CAPACITY_USAGE_QUERIES[StorageDashboardQuery.CEPH_CAPACITY_USED],\n  });\n  const [storageClass, setStorageClass] = React.useState<StorageClassResourceKind>(null);\n  const [inProgress, setProgress] = React.useState(false);\n  const [errorMessage, setError] = React.useState('');\n\n  const osdSizeWithUnit = _.get(\n    ocsConfig,\n    'spec.storageDeviceSets[0].dataPVCTemplate.spec.resources.requests.storage',\n  );\n  const presentCount = _.get(ocsConfig, 'spec.storageDeviceSets[0].count');\n  const capacity = _.get(response, 'data.result[0].value[1]');\n\n  const osdSizeWithoutUnit = OSD_CAPACITY_SIZES[osdSizeWithUnit]?.size;\n  const provisionedCapacity = getProvisionedCapacity(osdSizeWithoutUnit);\n\n  let currentCapacity: React.ReactNode;\n\n  if (loading) {\n    currentCapacity = (\n      <div className=\"skeleton-text ceph-add-capacity__current-capacity--loading\" />\n    );\n  } else if (loadError || !capacity || !presentCount || !osdSizeWithoutUnit) {\n    currentCapacity = <div className=\"text-muted\">Not available</div>;\n  } else {\n    currentCapacity = (\n      <div className=\"text-muted\">\n        <strong>{`${humanizeBinaryBytes(capacity / 3).string} / ${presentCount *\n          osdSizeWithoutUnit} TiB`}</strong>\n      </div>\n    );\n  }\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    setProgress(true);\n    const scName = getName(storageClass);\n    const patch = [\n      {\n        op: 'replace',\n        path: `/spec/storageDeviceSets/0/count`,\n        value: presentCount + 1,\n      },\n    ];\n    if (!scName) {\n      setError('No StorageClass selected');\n      setProgress(false);\n    } else {\n      k8sPatch(OCSServiceModel, ocsConfig, patch)\n        .then(() => {\n          setProgress(false);\n          close();\n        })\n        .catch((err) => {\n          setError(err);\n          setProgress(false);\n        });\n    }\n  };\n\n  return (\n    <form onSubmit={submit} className=\"modal-content modal-content--no-inner-scroll\">\n      <ModalTitle>Add Capacity</ModalTitle>\n      <ModalBody>\n        Adding capacity for <strong>{getName(ocsConfig)}</strong>, may increase your expenses.\n        <div className=\"ceph-add-capacity__modal\">\n          <div\n            className={classNames('ceph-add-capacity__sc-dropdown', {\n              'ceph-add-capacity__sc-dropdown--margin':\n                storageClass?.provisioner !== NO_PROVISIONER,\n            })}\n          >\n            <label className=\"control-label\" htmlFor=\"storageClass\">\n              Storage Class\n              <FieldLevelHelp>{storageClassTooltip}</FieldLevelHelp>\n            </label>\n            <OCSStorageClassDropdown onChange={setStorageClass} />\n          </div>\n          {storageClass?.provisioner === NO_PROVISIONER ? (\n            <PVsAvailableCapacity\n              replica={ocsConfig.spec.storageDeviceSets[0].replica}\n              data-test-id=\"ceph-add-capacity-pvs-available-capacity\"\n              sc={storageClass}\n            />\n          ) : (\n            <div>\n              <label className=\"control-label\" htmlFor=\"requestSize\">\n                Raw Capacity\n                <FieldLevelHelp>{labelTooltip}</FieldLevelHelp>\n              </label>\n              <div className=\"ceph-add-capacity__form\">\n                <input\n                  className={classNames('pf-c-form-control', 'ceph-add-capacity__input')}\n                  type=\"number\"\n                  name=\"requestSize\"\n                  value={osdSizeWithoutUnit}\n                  required\n                  disabled\n                  data-test-id=\"requestSize\"\n                />\n                <div className=\"ceph-add-capacity__input--info-text\">\n                  x 3 replicas = <strong>{provisionedCapacity} TiB</strong>\n                </div>\n              </div>\n              <div className=\"ceph-add-capacity__current-capacity\">\n                <div className=\"text-secondary ceph-add-capacity__current-capacity--text\">\n                  <strong>Currently Used:</strong>\n                </div>\n                {currentCapacity}\n              </div>\n            </div>\n          )}\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={inProgress}\n        errorMessage={errorMessage}\n        submitText=\"Add\"\n        cancel={cancel}\n      />\n    </form>\n  );\n};\n\nexport type AddCapacityModalProps = {\n  kind?: any;\n  ocsConfig?: any;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nexport const addCapacityModal = createModalLauncher(AddCapacityModal);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AACA;;AACA;AACA;AAEA;AAEA;AAEA;;AAEA;AAEA;AAEA;AAQA;;AAEA;AAEA;AACA;AASA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAMA;AAQA;AASA;;;;;A","sourceRoot":""}