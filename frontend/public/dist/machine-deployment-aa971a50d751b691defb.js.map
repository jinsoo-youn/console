{"version":3,"file":"machine-deployment-aa971a50d751b691defb.js","sources":["webpack:///./public/components/machine-deployment.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { getMachineAWSPlacement, getMachineRole } from '@console/shared';\nimport { MachineModel, MachineDeploymentModel } from '../models';\nimport { MachineDeploymentKind, referenceForModel } from '../module/k8s';\nimport {\n  editCountAction,\n  getDesiredReplicas,\n  getReadyReplicas,\n  MachineCounts,\n  MachineTabPage,\n} from './machine-set';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  navFactory,\n  pluralize,\n  resourcePath,\n} from './utils';\nimport { formatDuration } from './utils/datetime';\n\nconst { common } = Kebab.factory;\nconst menuActions = [\n  editCountAction,\n  ...Kebab.getExtensionsActionsForKind(MachineDeploymentModel),\n  ...common,\n];\nconst machineReference = referenceForModel(MachineModel);\nconst machineDeploymentReference = referenceForModel(MachineDeploymentModel);\n\nconst tableColumnClasses = [\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst MachineDeploymentTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Machines',\n      sortField: 'status.replicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nMachineDeploymentTableHeader.displayName = 'MachineDeploymentTableHeader';\n\nconst MachineDeploymentTableRow: RowFunction<MachineDeploymentKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineDeploymentReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(\n            machineDeploymentReference,\n            obj.metadata.name,\n            obj.metadata.namespace,\n          )}/machines`}\n        >\n          {getReadyReplicas(obj)} of {getDesiredReplicas(obj)} machines\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={machineDeploymentReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineDeploymentDetails: React.SFC<MachineDeploymentDetailsProps> = ({ obj }) => {\n  const machineRole = getMachineRole(obj);\n  const { availabilityZone, region } = getMachineAWSPlacement(obj);\n  const { minReadySeconds, progressDeadlineSeconds } = obj.spec;\n  const rollingUpdateStrategy = _.get(obj, 'spec.strategy.rollingUpdate');\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine Deployment Details\" />\n        <MachineCounts resourceKind={MachineDeploymentModel} resource={obj} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <dt>Selector</dt>\n              <dd>\n                <Selector\n                  kind={machineReference}\n                  selector={_.get(obj, 'spec.selector')}\n                  namespace={obj.metadata.namespace}\n                />\n              </dd>\n              {machineRole && (\n                <>\n                  <dt>Machine Role</dt>\n                  <dd>{machineRole}</dd>\n                </>\n              )}\n              {region && (\n                <>\n                  <dt>Region</dt>\n                  <dd>{region}</dd>\n                </>\n              )}\n              {availabilityZone && (\n                <>\n                  <dt>Availability Zone</dt>\n                  <dd>{availabilityZone}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Strategy</dt>\n              <dd>{_.get(obj, 'spec.strategy.type') || '-'}</dd>\n              {rollingUpdateStrategy && (\n                <>\n                  <dt>Max Unavailable</dt>\n                  <dd>\n                    {rollingUpdateStrategy.maxUnavailable || 0} of{' '}\n                    {pluralize(obj.spec.replicas, 'machine')}\n                  </dd>\n                  <dt>Max Surge</dt>\n                  <dd>\n                    {rollingUpdateStrategy.maxSurge || 1} greater than{' '}\n                    {pluralize(obj.spec.replicas, 'machine')}\n                  </dd>\n                </>\n              )}\n              <dt>Min Ready Seconds</dt>\n              <dd>{minReadySeconds ? pluralize(minReadySeconds, 'second') : 'Not Configured'}</dd>\n              {progressDeadlineSeconds && <dt>Progress Deadline</dt>}\n              {progressDeadlineSeconds && (\n                <dd>\n                  {/* Convert to ms for formatDuration */ formatDuration(\n                    progressDeadlineSeconds * 1000,\n                  )}\n                </dd>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const MachineDeploymentList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Deployments\"\n    Header={MachineDeploymentTableHeader}\n    Row={MachineDeploymentTableRow}\n    virtualize\n  />\n);\n\nexport const MachineDeploymentPage: React.SFC<MachineDeploymentPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineDeploymentList}\n    kind={machineDeploymentReference}\n    canCreate\n  />\n);\n\nexport const MachineDeploymentDetailsPage: React.SFC<MachineDeploymentDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    kind={machineDeploymentReference}\n    pages={[\n      navFactory.details(MachineDeploymentDetails),\n      navFactory.editYaml(),\n      navFactory.machines(MachineTabPage),\n    ]}\n  />\n);\n\nexport type MachineDeploymentDetailsProps = {\n  obj: MachineDeploymentKind;\n};\n\nexport type MachineDeploymentPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\nexport type MachineDeploymentDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAOA;AACA;AAEA;AACA;AAOA;;AAAA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AAIA;AACA;AACA;AACA;AAaA;AAEA;AAUA;AASA;AAQA;AACA;AACA;AACA;;;;;A","sourceRoot":""}