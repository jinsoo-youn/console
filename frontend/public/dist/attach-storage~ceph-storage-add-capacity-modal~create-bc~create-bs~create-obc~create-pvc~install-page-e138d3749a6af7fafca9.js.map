{"version":3,"file":"attach-storage~ceph-storage-add-capacity-modal~create-bc~create-bs~create-obc~create-pvc~install-page-e138d3749a6af7fafca9.js","sources":["webpack:///./public/components/storage-class.tsx","webpack:///./public/components/utils/storage-class-dropdown.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n} from './utils';\nimport { StorageClassResourceKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { StorageClassModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nexport const StorageClassReference: K8sResourceKindReference = 'StorageClass';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(StorageClassModel), ...common];\n\nconst defaultClassAnnotation = 'storageclass.kubernetes.io/is-default-class';\nconst betaDefaultStorageClassAnnotation = 'storageclass.beta.kubernetes.io/is-default-class';\nexport const isDefaultClass = (storageClass: K8sResourceKind) => {\n  const annotations = _.get(storageClass, 'metadata.annotations') || {};\n  return (\n    annotations[defaultClassAnnotation] === 'true' ||\n    annotations[betaDefaultStorageClassAnnotation] === 'true'\n  );\n};\n\nconst tableColumnClasses = [\n  classNames('col-sm-5', 'col-xs-6'),\n  classNames('col-sm-5', 'col-xs-6'),\n  classNames('col-sm-2', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst StorageClassTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_30'),\n      sortField: 'provisioner',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_31'),\n      sortField: 'reclaimPolicy',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nStorageClassTableHeader.displayName = 'StorageClassTableHeader';\n\nconst StorageClassTableRow: RowFunction<StorageClassResourceKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink kind={StorageClassReference} name={obj.metadata.name}>\n          {isDefaultClass(obj) && (\n            <span className=\"small text-muted co-resource-item__help-text\">&ndash; Default</span>\n          )}\n        </ResourceLink>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {obj.provisioner}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.reclaimPolicy || '-'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={StorageClassReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst StorageClassDetails: React.SFC<StorageClassDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(obj, t)})} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={obj}>\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_50')} obj={obj} path=\"provisioner\" />\n          </ResourceSummary>\n        </div>\n        <div className=\"col-sm-6\">\n          <dl className=\"co-m-pane__details\">\n            <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_51')}`} obj={obj} path=\"reclaimPolicy\" />\n            <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_52')}</dt>\n            <dd>{isDefaultClass(obj).toString()}</dd>\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_53')} obj={obj} path=\"volumeBindingMode\" />\n          </dl>\n        </div>\n      </div>\n    </div>\n  </>;\n};\n\nexport const StorageClassList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  return <Table\n    {...props}\n    aria-label=\"Storage Classes\"\n    Header={StorageClassTableHeader.bind(null, t)}\n    Row={StorageClassTableRow}\n    virtualize\n  />;\n};\n\nStorageClassList.displayName = 'StorageClassList';\n\nexport const StorageClassPage: React.SFC<StorageClassPageProps> = (props) => {\n  const { t } = useTranslation();\n\n  return (\n    <ListPage\n      {..._.omit(props, 'mock')}\n      title={t('COMMON:MSG_LNB_MENU_53')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_53') })}\n      kind={StorageClassReference}\n      ListComponent={StorageClassList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n    />\n  );\n};\n\nconst pages = [navFactory.details(detailsPage(StorageClassDetails)), navFactory.editYaml()];\n\nexport const StorageClassDetailsPage: React.SFC<StorageClassDetailsPageProps> = (props) => {\n  return (\n    <DetailsPage {...props} kind={StorageClassReference} menuActions={menuActions} pages={pages} />\n  );\n};\nStorageClassDetailsPage.displayName = 'StorageClassDetailsPage';\n\nexport type StorageClassDetailsProps = {\n  obj: any;\n};\n\nexport type StorageClassPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n\nexport type StorageClassDetailsPageProps = {\n  match: any;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\n\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\n\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\n\nexport class StorageClassDropdownInner extends React.Component<\n  StorageClassDropdownInnerProps,\n  StorageClassDropdownInnerState\n> {\n  readonly state: StorageClassDropdownInnerState = {\n    items: {},\n    name: this.props.name,\n    selectedKey: null,\n    title: <LoadingInline />,\n    defaultClass: this.props.defaultClass,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { loaded, loadError, resources } = nextProps;\n\n    if (loadError) {\n      this.setState({\n        title: <div className=\"cos-error-title\">Error Loading {nextProps.desc}</div>,\n      });\n      return;\n    }\n    if (!loaded) {\n      return;\n    }\n\n    const state = {\n      items: {},\n      title: {},\n      defaultClass: '',\n    };\n    let unorderedItems = {};\n    const noStorageClass = 'No default storage class';\n    _.map(resources.StorageClass.data, (resource) => {\n      unorderedItems[resource.metadata.name] = {\n        kindLabel: 'StorageClass',\n        name: resource.metadata.name,\n        description: _.get(resource, 'metadata.annotations.description', ''),\n        default: isDefaultClass(resource),\n        accessMode: _.get(\n          resource,\n          ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'],\n          '',\n        ),\n        provisioner: resource.provisioner,\n        type: _.get(resource, 'parameters.type', ''),\n        zone: _.get(resource, 'parameters.zone', ''),\n        resource,\n      };\n    });\n\n    //Filter if user provides a custom function\n    if (nextProps.filter) {\n      unorderedItems = Object.keys(unorderedItems)\n        .filter((sc) => nextProps.filter(unorderedItems[sc]))\n        .reduce((acc, key) => {\n          acc[key] = unorderedItems[key];\n          return acc;\n        }, {});\n    }\n\n    // Determine if there is a default storage class\n    state.defaultClass = _.findKey(unorderedItems, 'default');\n    const { selectedKey } = this.state;\n    if (!state.defaultClass) {\n      // Add No Storage Class option if there is not a default storage class\n      unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n    }\n\n    if (!this.props.loaded || !selectedKey) {\n      state.title = <span className=\"text-muted\">Select storage class</span>;\n    }\n\n    const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n    if (selectedItem) {\n      state.title = this.getTitle(selectedItem);\n    }\n\n    Object.keys(unorderedItems)\n      .sort()\n      .forEach((key) => {\n        state.items[key] = unorderedItems[key];\n      });\n    this.setState(state);\n  }\n\n  componentDidUpdate() {\n    const { defaultClass, selectedKey } = this.state;\n    if (!selectedKey && defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n\n  getTitle = (storageClass) => {\n    return storageClass.kindLabel ? (\n      <ResourceName kind=\"StorageClass\" name={storageClass.name} />\n    ) : (\n      <span>{storageClass.name}</span>\n    );\n  };\n\n  onChange = (key) => {\n    const storageClass = _.get(this.state, ['items', key], {});\n    this.setState(\n      {\n        selectedKey: key,\n        title: this.getTitle(storageClass),\n      },\n      () => this.props.onChange(storageClass.resource),\n    );\n  };\n\n  render() {\n    const { id, loaded, describedBy } = this.props;\n    const items = {};\n    _.each(\n      this.state.items,\n      (props, key) =>\n        (items[key] = key ? (\n          <StorageClassDropdownEntry {...props} />\n        ) : (\n          <StorageClassDropdownNoStorageClassOption {...props} />\n        )),\n    );\n\n    const { selectedKey, defaultClass } = this.state;\n\n    // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n    const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n    return (\n      <>\n        {loaded && itemsAvailableToShow && (\n          <div>\n            <label\n              className={\n                this.props.hideClassName\n                  ? `${this.props.hideClassName} control-label`\n                  : 'control-label'\n              }\n              htmlFor={id}\n            >\n              Storage Class\n            </label>\n            <Dropdown\n              className=\"co-storage-class-dropdown\"\n              dropDownClassName=\"dropdown--full-width\"\n              autocompleteFilter={this.autocompleteFilter}\n              autocompletePlaceholder=\"Select storage class\"\n              items={items}\n              selectedKey={selectedKey}\n              title={this.state.title}\n              onChange={this.onChange}\n              id={id}\n              menuClassName=\"dropdown-menu--text-wrap\"\n            />\n            {describedBy && (\n              <p className=\"help-block\" id={describedBy}>\n                Storage class for the new claim.\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const StorageClassDropdown = (props) => {\n  return (\n    <Firehose resources={[{ kind: 'StorageClass', prop: 'StorageClass', isList: true }]}>\n      <StorageClassDropdownInner {...props} />\n    </Firehose>\n  );\n};\n\nconst StorageClassDropdownEntry = (props) => {\n  const storageClassProperties = [\n    props.default ? ' (default)' : '',\n    props.description,\n    props.accessMode,\n    props.provisioner,\n    props.type,\n    props.zone,\n  ];\n  const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n  return (\n    <span className=\"co-resource-item\">\n      <ResourceIcon kind={props.kindLabel} />\n      <span className=\"co-resource-item__resource-name\">\n        {props.name}\n        <div className=\"text-muted small\"> {storageClassDescriptionLine}</div>\n      </span>\n    </span>\n  );\n};\n\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-item__resource-name\">{props.name}</span>\n    </span>\n  );\n};\n\nexport type StorageClassDropdownInnerState = {\n  items: any;\n  name: string;\n  selectedKey: string;\n  title: React.ReactNode;\n  defaultClass: string;\n};\n\nexport type StorageClassDropdownInnerProps = {\n  id?: string;\n  loaded?: boolean;\n  resources?: any;\n  name: string;\n  onChange: (object) => void;\n  describedBy: string;\n  defaultClass: string;\n  required?: boolean;\n  hideClassName?: string;\n  filter?: (param) => boolean;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAWA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAMA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAOA;AAEA;AAEA;AACA;AAEA;AAWA;AAEA;AAEA;AACA;AAGA;AACA;;;;;;;;;;;;;AC9JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AA0FA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAuDA;AAlKA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAuBA;AACA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAIA;AAGA;AACA;AAMA;AAYA;AASA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAAA;AAIA;AAEA;AACA;AAEA;AAGA;;;;;A","sourceRoot":""}