{"version":3,"file":"tolerations-modal-5bc8c46add21e86d5d61.js","sources":["webpack:///./public/components/modals/tolerations-modal.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { K8sKind, k8sPatch, Toleration, TolerationOperator } from '../../module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory';\n\nclass TolerationsModal extends PromiseComponent<TolerationsModalProps, TolerationsModalState> {\n  readonly state: TolerationsModalState;\n\n  constructor(public props: TolerationsModalProps) {\n    super(props);\n    this.state.tolerations = this._getTolerationsFromResource() || [];\n  }\n\n  _getTolerationsFromResource = (): Toleration[] => {\n    const { resource } = this.props;\n    return this.props.resourceKind.kind === 'Pod'\n      ? resource.spec.tolerations\n      : resource.spec.template.spec.tolerations;\n  };\n\n  _submit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    const path =\n      this.props.resourceKind.kind === 'Pod'\n        ? '/spec/tolerations'\n        : '/spec/template/spec/tolerations';\n\n    // Remove the internal `isNew` property\n    const tolerations = _.map(this.state.tolerations, (t) => _.omit(t, 'isNew'));\n\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = _.isEmpty(this._getTolerationsFromResource()) ? 'replace' : 'add';\n\n    const patch = [{ path, op, value: tolerations }];\n\n    this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(\n      this.props.close,\n    );\n  };\n\n  _cancel = () => {\n    this.props.close();\n  };\n\n  _change = (e, i: number, field: string) => {\n    const newValue = e.target ? e.target.value : e;\n    this.setState((prevState: TolerationsModalState) => {\n      const clonedTolerations = _.cloneDeep(prevState.tolerations);\n      clonedTolerations[i][field] = newValue;\n      return {\n        tolerations: clonedTolerations,\n      };\n    });\n  };\n\n  _opChange = (op: TolerationOperator, i: number) => {\n    this.setState((prevState: TolerationsModalState) => {\n      const clonedTolerations = _.cloneDeep(prevState.tolerations);\n      clonedTolerations[i].operator = op;\n      if (op === 'Exists') {\n        clonedTolerations[i].value = '';\n      }\n      return {\n        tolerations: clonedTolerations,\n      };\n    });\n  };\n\n  _remove = (i: number) => {\n    this.setState((state: TolerationsModalState) => {\n      const tolerations = [...state.tolerations];\n      tolerations.splice(i, 1);\n      return { tolerations };\n    });\n  };\n\n  _newToleration(): TolerationModalItem {\n    return { key: '', operator: 'Exists', value: '', effect: '', isNew: true };\n  }\n\n  _addRow = () => {\n    this.setState((state: TolerationsModalState) => ({\n      tolerations: [...state.tolerations, this._newToleration()],\n    }));\n  };\n\n  _isEditable = (t: TolerationModalItem) => {\n    return this.props.resourceKind.kind !== 'Pod' || t.isNew;\n  };\n\n  render() {\n    const operators = {\n      Exists: 'Exists',\n      Equal: 'Equal',\n    };\n    const effects = {\n      '': 'All Effects',\n      NoSchedule: 'NoSchedule',\n      PreferNoSchedule: 'PreferNoSchedule',\n      NoExecute: 'NoExecute',\n    };\n    const { tolerations, errorMessage, inProgress } = this.state;\n    return (\n      <form\n        onSubmit={this._submit}\n        name=\"form\"\n        className=\"modal-content modal-content--accommodate-dropdown toleration-modal\"\n      >\n        <ModalTitle>Edit Tolerations</ModalTitle>\n        <ModalBody>\n          {_.isEmpty(tolerations) ? (\n            <EmptyBox label=\"Tolerations\" />\n          ) : (\n            <>\n              <div className=\"row toleration-modal__heading hidden-sm hidden-xs\">\n                <div className=\"col-md-4 text-secondary text-uppercase\">Key</div>\n                <div className=\"col-md-2 text-secondary text-uppercase\">Operator</div>\n                <div className=\"col-md-3 text-secondary text-uppercase\">Value</div>\n                <div className=\"col-md-2 text-secondary text-uppercase\">Effect</div>\n                <div className=\"col-md-1\" />\n              </div>\n              {_.map(tolerations, (t, i) => {\n                const { key, operator, value, effect = '' } = t;\n                return (\n                  <div className=\"row toleration-modal__row\" key={i}>\n                    <div className=\"col-md-4 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Key\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"pf-c-form-control\"\n                        value={key}\n                        onChange={(e) => this._change(e, i, 'key')}\n                        readOnly={!this._isEditable(t)}\n                      />\n                    </div>\n                    <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Operator\n                      </div>\n                      {this._isEditable(t) ? (\n                        <Dropdown\n                          className=\"toleration-modal__dropdown\"\n                          dropDownClassName=\"dropdown--full-width\"\n                          items={operators}\n                          onChange={(op: TolerationOperator) => this._opChange(op, i)}\n                          selectedKey={operator}\n                          title={operators[operator]}\n                        />\n                      ) : (\n                        <input\n                          type=\"text\"\n                          className=\"pf-c-form-control\"\n                          value={operator}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                    <div className=\"clearfix visible-sm visible-xs\" />\n                    <div className=\"col-md-3 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Value\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"pf-c-form-control\"\n                        value={value}\n                        onChange={(e) => this._change(e, i, 'value')}\n                        readOnly={!this._isEditable(t) || operator === 'Exists'}\n                      />\n                    </div>\n                    <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Effect\n                      </div>\n                      {this._isEditable(t) ? (\n                        <Dropdown\n                          className=\"toleration-modal__dropdown\"\n                          dropDownClassName=\"dropdown--full-width\"\n                          items={effects}\n                          onChange={(e: string) => this._change(e, i, 'effect')}\n                          selectedKey={effect}\n                          title={effects[effect]}\n                        />\n                      ) : (\n                        <input\n                          type=\"text\"\n                          className=\"pf-c-form-control\"\n                          value={effects[effect]}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                    <div className=\"col-md-1 col-sm-2 col-xs-2\">\n                      {this._isEditable(t) && (\n                        <Button\n                          type=\"button\"\n                          className=\"toleration-modal__delete-icon\"\n                          onClick={() => this._remove(i)}\n                          aria-label=\"Delete\"\n                          variant=\"plain\"\n                        >\n                          <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          )}\n          <Button\n            className=\"pf-m-link--align-left\"\n            onClick={this._addRow}\n            type=\"button\"\n            variant=\"link\"\n          >\n            <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n            Add More\n          </Button>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const tolerationsModal = createModalLauncher(TolerationsModal);\n\ntype TolerationModalItem = {\n  // isNew is used internally in the dialog to track existing vs new\n  // tolerations on pods and is not part of the k8s API\n  isNew?: boolean;\n} & Toleration;\n\ntype TolerationsModalProps = {\n  resourceKind: K8sKind;\n  resource: any;\n  existingReadOnly?: boolean;\n} & ModalComponentProps;\n\ntype TolerationsModalState = {\n  tolerations: TolerationModalItem[];\n  inProgress: boolean;\n  errorMessage: string;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAGA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA/EA;AACA;AAkEA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAQA;AACA;AAGA;AAkBA;AACA;AACA;AAGA;AAQA;AACA;AAGA;AAkBA;AASA;AAMA;AAGA;AAMA;AAEA;AAEA;AAQA;AACA;AAEA;;;;;A","sourceRoot":""}