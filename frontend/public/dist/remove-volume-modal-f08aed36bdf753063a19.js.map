{"version":3,"file":"remove-volume-modal-f08aed36bdf753063a19.js","sources":["webpack:///./public/components/modals/remove-volume-modal.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory';\nimport {\n  ContainerSpec,\n  getVolumeType,\n  K8sKind,\n  k8sPatch,\n  K8sResourceKind,\n  Volume,\n  VolumeMount,\n} from '../../module/k8s/';\nimport { RowVolumeData } from '../volumes-table';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nexport const RemoveVolumeModal: React.FC<RemoveVolumeModalProps> = (props) => {\n  const [inProgress, setInProgress] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const getRemoveVolumePatch = (resource: K8sResourceKind, rowVolumeData: RowVolumeData) => {\n    const containers: ContainerSpec[] = _.get(resource, 'spec.template.spec.containers', []);\n    const patches = [];\n    let allowRemoveVolume = true;\n    containers.forEach((container: ContainerSpec, i: number) => {\n      const mounts: VolumeMount[] = _.get(container, 'volumeMounts', []);\n      mounts.forEach((mount: VolumeMount, j: number) => {\n        if (mount.name !== rowVolumeData.name) {\n          return;\n        }\n        if (\n          mount.mountPath === rowVolumeData.mountPath &&\n          container.name === rowVolumeData.container\n        ) {\n          patches.push({\n            op: 'remove',\n            path: `/spec/template/spec/containers/${i}/volumeMounts/${j}`,\n          });\n        } else {\n          allowRemoveVolume = false;\n        }\n      });\n    });\n\n    // if the mountCount is greater than zero, then the volume is still being used at a different mount point or in a different container\n    // Either way, we cannot give the cmd to remove it\n    if (allowRemoveVolume) {\n      const volumes: Volume[] = _.get(resource, 'spec.template.spec.volumes', []);\n      const volumeIndex = volumes.findIndex((v: Volume) => v.name === rowVolumeData.name);\n      if (volumeIndex > -1) {\n        patches.push({ op: 'remove', path: `/spec/template/spec/volumes/${volumeIndex}` });\n      }\n    }\n    return patches;\n  };\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    setErrorMessage('');\n    setInProgress(true);\n    const { kind, resource, volume } = props;\n    k8sPatch(kind, resource, getRemoveVolumePatch(resource, volume))\n      .then(() => {\n        setInProgress(false);\n        props.close();\n      })\n      .catch(({ message: errMessage }) => {\n        setErrorMessage(errMessage);\n        setInProgress(false);\n      });\n  };\n\n  const { kind, resource, volume } = props;\n  const type: string = _.get(getVolumeType(volume.volumeDetail), 'id', '');\n  return (\n    <form onSubmit={submit} className=\"modal-content\">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" /> Remove Volume?\n      </ModalTitle>\n      <ModalBody className=\"modal-body\">\n        <div>\n          Are you sure you want to remove volume{' '}\n          <strong className=\"co-break-word\">{volume.name}</strong>\n          <span>\n            {' '}\n            from <strong>{kind.label}</strong>: <strong>{resource.metadata.name}</strong>?\n          </span>\n        </div>\n        {type && (\n          <div>\n            <label className=\"control-label\">\n              Note: This will not remove the underlying {type}.\n            </label>\n          </div>\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n        submitText=\"Remove Volume\"\n        cancel={props.cancel}\n      />\n    </form>\n  );\n};\n\nexport const removeVolumeModal = createModalLauncher(RemoveVolumeModal);\n\nexport type RemoveVolumeModalProps = {\n  cancel?: () => void;\n  close?: () => void;\n  volume: RowVolumeData;\n  kind: K8sKind;\n  resource: K8sResourceKind;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAUA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AAAA;AACA;AAEA;AAEA;;AACA;AACA;AAIA;AASA;AAEA;;;;;A","sourceRoot":""}