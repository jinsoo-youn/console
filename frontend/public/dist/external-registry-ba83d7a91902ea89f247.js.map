{"version":3,"file":"external-registry-ba83d7a91902ea89f247.js","sources":["webpack:///./public/components/hypercloud/external-registry.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ExternalRegistryModel } from '../../models/hypercloud';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { RepositoriesPage } from './repository';\nimport { scanningModal } from './modals';\nimport { withRouter } from 'react-router-dom';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ExternalRegistryModel), ...Kebab.factory.common, Kebab.factory.ModifyScanning];\n\nconst kind = ExternalRegistryModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\n\nconst ExternalRegistryTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('SINGLE:MSG_VIRTUALMACHINES_CREATEFORM_STEP1_DIV2_5'),\n      sortField: 'spec.registryUrl',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Registry Type',\n      sortField: 'spec.registryType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.state',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nExternalRegistryTableHeader.displayName = 'ExternalRegistryTableHeader';\n\nconst ExternalRegistryTableRow: RowFunction<K8sResourceKind> = ({ obj: externalRegistry, index, key, style }) => {\n  return (\n    <TableRow id={externalRegistry.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={externalRegistry.metadata.name} namespace={externalRegistry.metadata.namespace} title={externalRegistry.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={externalRegistry.metadata.namespace} title={externalRegistry.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{externalRegistry.spec.registryUrl}</TableData>\n      <TableData className={tableColumnClasses[3]}>{externalRegistry.spec.registryType}</TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        <Status status={externalRegistry.status.state} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={externalRegistry.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={externalRegistry} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ExternalRegistryDetailsList: React.FC<ExternalRegistryDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={`${t('SINGLE:MSG_VIRTUALMACHINES_CREATEFORM_STEP1_DIV2_6')} ${t('SINGLE:MSG_VIRTUALMACHINES_CREATEFORM_STEP1_DIV2_5')}`} obj={ds} path=\"spec.registryUrl\">\n        {ds.spec.registryUrl}\n      </DetailsItem>\n      <DetailsItem label={`${t('SINGLE:MSG_VIRTUALMACHINES_CREATEFORM_STEP1_DIV2_6')} ${t('SINGLE:MSG_VIRTUALMACHINES_CREATEFORM_STEP2_POPUP_5')}`} obj={ds} path=\"spec.registryType\">\n        {ds.spec.registryType}\n      </DetailsItem>\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_4')}`} obj={ds} path=\"status.state\">\n        <Status status={ds.status.state} />\n      </DetailsItem>\n    </dl>\n  );\n};\n\nconst ExternalRegistryDetails: React.FC<ExternalRegistryDetailsProps> = ({ obj: externalRegistry }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(externalRegistry, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={externalRegistry} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ExternalRegistryDetailsList ds={externalRegistry} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const ExternalRegistries: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"ExternalRegistries\" Header={ExternalRegistryTableHeader.bind(null, t)} Row={ExternalRegistryTableRow} virtualize />;\n};\n\nconst registryStatusReducer = (externalRegistry: any): string => {\n  return externalRegistry.status.state;\n};\n\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'registry-status',\n    reducer: registryStatusReducer,\n    items: [\n      { id: 'Running', title: 'Running' },\n      { id: 'Not Ready', title: 'Not Ready' },\n      { id: 'Creating', title: 'Creating' },\n    ],\n  },\n];\n\nconst registryCreateAction = (history, item) => {\n  const pathname = window.location.pathname;\n  const pathNameSplit = pathname.split('/');\n  const allNS = pathNameSplit[2];\n  let ns;\n  if (allNS !== 'all-namespaces') {\n    ns = pathNameSplit[3];\n  }\n\n  switch (item) {\n    case 'scan':\n      scanningModal({ kind: 'ExternalRegistry', ns, showNs: true });\n      break;\n    case 'generic':\n      history.push('/');\n      if (allNS === 'all-namespaces') {\n        history.push('/k8s/ns/default/externalregistries/~new');\n      } else {\n        history.push(`/k8s/ns/${ns}/externalregistries/~new`);\n      }\n      break;\n  }\n}\n\nexport const ExternalRegistriesPage = withRouter(props => {\n  const createItems = {\n    generic: 'Create External Registry',\n    scan: 'Image Scan Request',\n  }\n\n  const createProps = {\n    items: createItems,\n    action: registryCreateAction.bind(null, props.history)\n  }\n\n  return <ListPage canCreate={true} createProps={createProps} ListComponent={ExternalRegistries} rowFilters={filters} kind={kind} {...props} />;\n});\n\nconst RepositoriesTab: React.FC<RepositoriesTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const selector = {\n    matchLabels: {\n      'ext-registry': obj.metadata.name,\n    },\n  };\n  return <RepositoriesPage showTitle={false} namespace={namespace} isExtRegistry={true} selector={selector} canCreate={false} />;\n};\n\nexport const ExternalRegistriesDetailsPage: React.FC<ExternalRegistriesDetailsPageProps> = props => (\n  <DetailsPage\n    {...props}\n    kind={kind}\n    menuActions={menuActions}\n    pages={[\n      details(detailsPage(ExternalRegistryDetails)),\n      editYaml(),\n      {\n        href: 'repository',\n        name: 'Repository',\n        component: RepositoriesTab,\n      },\n    ]}\n  />\n);\n\ntype ExternalRegistryDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ExternalRegistryDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ExternalRegistriesDetailsPageProps = {\n  match: any;\n};\n\ntype RepositoriesTabProps = {\n  obj: K8sResourceKind;\n};\n"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}