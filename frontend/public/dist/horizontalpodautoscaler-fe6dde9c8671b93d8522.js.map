{"version":3,"file":"horizontalpodautoscaler-fe6dde9c8671b93d8522.js","sources":["webpack:///./public/components/hypercloud/federated-horizontalpodautoscaler.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, LabelList, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading } from '../utils';\nimport { Status } from '@console/shared';\nimport { FederatedHPAModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(FederatedHPAModel), ...Kebab.factory.common];\n\nconst kind = FederatedHPAModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedHPATableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'horizontalpodautoscalerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Annotations',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nFederatedHPATableHeader.displayName = 'FederatedHPATableHeader';\n\nconst FederatedHPATableRow: RowFunction<K8sResourceKind> = ({ obj: horizontalpodautoscaler, index, key, style }) => {\n  return (\n    <TableRow id={horizontalpodautoscaler.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={horizontalpodautoscaler.metadata.name} namespace={horizontalpodautoscaler.metadata.namespace} title={horizontalpodautoscaler.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={horizontalpodautoscaler.status.phase} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <LabelList kind={kind} labels={horizontalpodautoscaler.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {`${_.size(horizontalpodautoscaler.metadata.annotations)} Annotation`}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={horizontalpodautoscaler.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={horizontalpodautoscaler} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterRow: React.FC<ClusterRowProps> = ({ horizontalpodautoscaler }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ResourceIcon kind={kind} />\n        {horizontalpodautoscaler.metadata.name}\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">\n        <ResourceLink kind=\"Cluster\" name={horizontalpodautoscaler.spec.placement.clusters[0].name} />\n      </div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={horizontalpodautoscaler.status.phase} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={horizontalpodautoscaler.metadata.creationTimestamp} />\n      </div>\n    </div>\n  );\n};\n\nexport const HPADistributionTable: React.FC<HPADistributionTableProps> = ({\n  heading,\n  horizontalpodautoscaler\n}) => (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">Resource Name</div>\n          <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">Cluster Name</div>\n          <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">Result</div>\n          <div className=\"col-lg-1 col-md-2 hidden-sm hidden-xs\">Time</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {/*containers.map((c: any, i: number) => (\n          <ClusterRow key={i} horizontalpodautoscaler={horizontalpodautoscaler} container={c} />\n        ))*/}\n          <ClusterRow horizontalpodautoscaler={horizontalpodautoscaler} />\n        </div>\n      </div>\n    </>\n  );\n\nconst FederatedHPADetails: React.FC<FederatedHPADetailsProps> = ({ obj: horizontalpodautoscaler }) => (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Federated HPA Details\" />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={horizontalpodautoscaler} />\n        </div>\n      </div>\n    </div>\n    <div className=\"co-m-pane__body\">\n      <HPADistributionTable\n        key=\"distributionTable\"\n        heading=\"Distribution\"\n        horizontalpodautoscaler={horizontalpodautoscaler} />\n    </div>\n  </>\n);\n\nconst { details, editYaml } = navFactory;\nexport const FederatedHPAs: React.FC = props => <Table {...props} aria-label=\"Federated HPAs\" Header={FederatedHPATableHeader} Row={FederatedHPATableRow} virtualize />;\n\nexport const FederatedHPAsPage: React.FC<FederatedHPAsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedHPAs} kind={kind} {...props} />;\n\nexport const FederatedHPAsDetailsPage: React.FC<FederatedHPAsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedHPADetails)), editYaml()]} />;\n\ntype ClusterRowProps = {\n  horizontalpodautoscaler: K8sResourceKind;\n}\n\ntype HPADistributionTableProps = {\n  horizontalpodautoscaler: K8sResourceKind;\n  heading: string;\n};\n\ntype FederatedHPADetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedHPAsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedHPAsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAQA;AACA;AAEA;AAEA;;;;;A","sourceRoot":""}