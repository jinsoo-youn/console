{"version":3,"file":"clustertemplate-f0cb10edb0d238334b19.js","sources":["webpack:///./public/components/hypercloud/cluster-template.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport { ClusterTemplateModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { ResourceKebab, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst kind = ClusterTemplateModel.kind;\n\nexport const clusterTemplateMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterTemplateModel), ...common];\n\nconst objectKinds = clustertemplate => {\n  const objects = !!clustertemplate.objectKinds ? clustertemplate.objectKinds : [];\n  let objMap = new Map();\n  for (const i in objects) {\n    const kind = !!objects[i] ? objects[i] : 'unknown kind';\n    if (!!objMap.get(kind)) {\n      const num = objMap.get(kind) as number;\n      objMap.set(kind, num + 1);\n    } else {\n      objMap.set(kind, 1);\n    }\n  }\n  const objectList = [];\n  objMap.forEach((value, key) => {\n    objectList.push(\n      <div>\n        {key} {value}\n      </div>,\n    );\n  });\n\n  return <div>{objectList}</div>;\n};\n\nconst ClusterTemplateDetails: React.FC<ClusterTemplateDetailsProps> = ({ obj: clusterTemplate }) => {\n  const { t } = useTranslation();\n  const objectSummary = objectKinds(clusterTemplate);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(clusterTemplate, t)})} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={clusterTemplate} showPodSelector showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104')}</dt>\n              <dd>{objectSummary}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ClusterTemplateDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ClusterTemplatesDetailsPage: React.FC<ClusterTemplatesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={clusterTemplateMenuActions} pages={[details(ClusterTemplateDetails), editYaml()]} />;\nClusterTemplatesDetailsPage.displayName = 'ClusterTemplatesDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  '', // RESOURCE SUMMARY\n  '', // CREATED\n  Kebab.columnClass, // MENU ACTIONS\n];\n\nconst ClusterTemplateTableRow = ({ obj, index, key, style }) => {\n  const objects = objectKinds(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>all-namespace</TableData>\n      <TableData className={tableColumnClasses[2]}>{objects}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={clusterTemplateMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterTemplateTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104'),\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nClusterTemplateTableHeader.displayName = 'ClusterTemplateTableHeader';\n\nconst ClusterTemplatesList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Cluster Template\" Header={ClusterTemplateTableHeader.bind(null, t)} Row={ClusterTemplateTableRow} />;\n};\nClusterTemplatesList.displayName = 'ClusterTemplatesList';\n\nconst ClusterTemplatesPage: React.FC<ClusterTemplatesPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_104')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_104') })} canCreate={true} kind={kind} ListComponent={ClusterTemplatesList} {...props} />;\n};\nClusterTemplatesPage.displayName = 'ClusterTemplatesPage';\n\nexport { ClusterTemplatesList, ClusterTemplatesPage, ClusterTemplatesDetailsPage };\n\ntype ClusterTemplatesPageProps = {};\n\ntype ClusterTemplatesDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}