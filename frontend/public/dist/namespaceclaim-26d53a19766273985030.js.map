{"version":3,"file":"namespaceclaim-26d53a19766273985030.js","sources":["webpack:///./public/components/hypercloud/namespace-claim.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\n\nimport { sortable } from '@patternfly/react-table';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { K8sResourceKind, K8sClaimResourceKind, modelFor } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, navFactory, ResourceSummary, SectionHeading, ResourceLink, ResourceKebab } from '../utils';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n// import { WorkloadTableRow, WorkloadTableHeader } from '../workload-table';\n\nconst { common } = Kebab.factory;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(modelFor('NamespaceClaim')), ...common, Kebab.factory.ModifyStatus];\n\nconst kind = 'NamespaceClaim';\n\nconst NamespaceClaimTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'resourceName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_97'),\n      sortField: 'metadata.annotations.owner',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nNamespaceClaimTableHeader.displayName = 'NamespaceClaimTableHeader';\n\nconst NamespaceClaimTableRow: RowFunction<K8sClaimResourceKind> = ({ obj: namespaceclaims, index, key, style }) => {\n  return (\n    <TableRow id={namespaceclaims.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={namespaceclaims.metadata.name} namespace={namespaceclaims.metadata.namespace} title={namespaceclaims.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={namespaceclaims?.resourceName} title={namespaceclaims?.resourceName} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{namespaceclaims?.status?.status}</TableData>\n      <TableData className={tableColumnClasses[3]}>{namespaceclaims.metadata?.annotations?.owner}</TableData>\n      <TableData className={tableColumnClasses[4]}>{fromNow(namespaceclaims?.metadata?.creationTimestamp)}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={namespaceclaims} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const NamespaceClaimsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"NamespaceClaims\" Header={NamespaceClaimTableHeader.bind(null, t)} Row={NamespaceClaimTableRow} virtualize />;\n};\nNamespaceClaimsList.displayName = 'NamespaceClaimsList';\n\nexport const NamespaceClaimsPage: React.FC<NamespaceClaimsPageProps> = props => <ListPage kind={'NamespaceClaim'} canCreate={true} ListComponent={NamespaceClaimsList} {...props} />;\nNamespaceClaimsPage.displayName = 'NamespaceClaimsPage';\nconst NamespaceClaimsDetails: React.FC<NamespaceClaimDetailsProps> = ({ obj: namespaceclaims }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_103') })} />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={namespaceclaims} showOwner={false}></ResourceSummary>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_44')}</dt>\n              <dd>{namespaceclaims.metadata.annotations.owner}</dd>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_45')}</dt>\n                <dd>{namespaceclaims?.status?.status}</dd>\n                <dt>{t('SINGLE:MSG_NAMESPACECLAIMS_NAMESPACEDETAILS_TABDETAILS_1')}</dt>\n                <dd>{namespaceclaims?.status?.reason}</dd>\n                <dt>{t('SINGLE:MSG_NAMESPACECLAIMS_NAMESPACEDETAILS_TABDETAILS_2')}</dt>\n                <dd>{namespaceclaims?.specLimit?.limitCpu}</dd>\n                <dt>{t('SINGLE:MSG_NAMESPACECLAIMS_NAMESPACEDETAILS_TABDETAILS_3')}</dt>\n                <dd>{namespaceclaims?.specLimit?.limitMemory}</dd>\n                <dt>{t('SINGLE:MSG_NAMESPACECLAIMS_NAMESPACEDETAILS_TABDETAILS_4')}</dt>\n                <dd>{namespaceclaims?.resourceName}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nNamespaceClaimsDetails.displayName = 'NamespaceClaimsDetails';\n\nconst { details, editYaml } = navFactory;\nexport const NamespaceClaimsDetailsPage: React.FC<NamespaceClaimsDetailsPageProps> = props => <DetailsPage {...props} kind={'NamespaceClaim'} menuActions={menuActions} pages={[details(NamespaceClaimsDetails), editYaml()]} />;\nNamespaceClaimsDetailsPage.displayName = 'NamespaceClaimsDetailsPage';\n\ntype NamespaceClaimDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype NamespaceClaimsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype NamespaceClaimsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}