{"version":3,"file":"monitoring-overview-60bd9859b9e2c73d179f.js","sources":["webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverview.scss?7ee3","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverview.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewEvents.scss?5fe3","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewEvents.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewEventsWarning.scss?06b7","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewEventsWarning.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { requirePrometheus } from '@console/internal/components/graphs';\nimport { topWorkloadMetricsQueries } from '../queries';\nimport ConnectedMonitoringDashboardGraph from '../dashboard/MonitoringDashboardGraph';\n\nconst WorkloadGraphs = requirePrometheus(({ resource }) => {\n  const namespace = resource?.metadata?.namespace;\n  const workloadName = resource?.metadata?.name;\n  const workloadType = resource?.kind?.toLowerCase();\n\n  return (\n    <>\n      {_.map(topWorkloadMetricsQueries, (q) => (\n        <ConnectedMonitoringDashboardGraph\n          key={q.title}\n          title={q.title}\n          namespace={namespace}\n          graphType={q.chartType}\n          query={q.query({ namespace, workloadName, workloadType })}\n          humanize={q.humanize}\n          byteDataType={q.byteDataType}\n        />\n      ))}\n    </>\n  );\n});\n\nexport default WorkloadGraphs;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionToggle,\n  AccordionContent,\n  Split,\n  SplitItem,\n  Badge,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { K8sResourceKind, EventKind, PodKind } from '@console/internal/module/k8s';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { sortEvents } from '@console/internal/components/events';\nimport { FirehoseResult, LoadingBox } from '@console/internal/components/utils';\nimport MonitoringOverviewEventsWarning from './MonitoringOverviewEventsWarning';\nimport MonitoringOverviewEvents from './MonitoringOverviewEvents';\nimport WorkloadGraphs from './MonitoringMetrics';\nimport './MonitoringOverview.scss';\n\ntype MonitoringOverviewProps = {\n  resource: K8sResourceKind;\n  pods?: PodKind[];\n  resourceEvents?: FirehoseResult<EventKind[]>;\n};\n\nconst MonitoringOverview: React.FC<MonitoringOverviewProps> = (props) => {\n  const { resource, pods, resourceEvents } = props;\n  const [expanded, setExpanded] = React.useState(['metrics']);\n\n  if (\n    !resourceEvents ||\n    !resourceEvents.loaded ||\n    (pods && pods.find((pod) => !props[pod.metadata.uid] || !props[pod.metadata.uid].loaded))\n  ) {\n    return <LoadingBox />;\n  }\n\n  let events = [...resourceEvents.data];\n  if (pods) {\n    pods.forEach((pod) => {\n      const podData = props[pod.metadata.uid];\n      if (podData) {\n        events.push(...podData.data);\n      }\n    });\n  }\n\n  events = sortEvents(events);\n  const eventWarning = _.filter(events, ['type', 'Warning']);\n\n  const onToggle = (id: string) => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0\n        ? [...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length)]\n        : [...expanded, id];\n    setExpanded(newExpanded);\n  };\n\n  return (\n    <div className=\"odc-monitoring-overview\">\n      <Accordion\n        asDefinitionList={false}\n        noBoxShadow\n        className=\"odc-monitoring-overview__metric-accordion\"\n        headingLevel=\"h5\"\n      >\n        <AccordionItem>\n          <AccordionToggle\n            onClick={() => {\n              onToggle('events-warning');\n            }}\n            isExpanded={expanded.includes('events-warning')}\n            id=\"events-warning\"\n            className=\"odc-monitoring-overview__event-warning-toggle\"\n          >\n            <Split>\n              <SplitItem>Events (Warning)</SplitItem>\n              <SplitItem isFilled />\n              <SplitItem>\n                <Badge>{eventWarning.length}</Badge>\n              </SplitItem>\n            </Split>\n          </AccordionToggle>\n          <AccordionContent\n            className=\"odc-monitoring-overview__event-warning-body\"\n            id=\"events-warning-content\"\n            isHidden={!expanded.includes('events-warning')}\n          >\n            <MonitoringOverviewEventsWarning events={eventWarning} />\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem>\n          <AccordionToggle\n            onClick={() => {\n              onToggle('metrics');\n            }}\n            isExpanded={expanded.includes('metrics')}\n            id=\"metrics\"\n          >\n            Metrics\n          </AccordionToggle>\n          <AccordionContent id=\"metrics-content\" isHidden={!expanded.includes('metrics')}>\n            {resource.kind === DeploymentConfigModel.kind ? (\n              <EmptyState>\n                <EmptyStateIcon\n                  className=\"odc-monitoring-overview__empty-state-icon\"\n                  icon={InfoCircleIcon}\n                />\n                <Title size=\"md\">No Metrics Found</Title>\n                <EmptyStateBody>\n                  Deployment Configuration metrics are not yet supported.\n                </EmptyStateBody>\n              </EmptyState>\n            ) : (\n              <>\n                <div className=\"odc-monitoring-overview__view-monitoring-dashboard\">\n                  <Link\n                    to={`/dev-monitoring/ns/${resource?.metadata?.namespace}/?workloadName=${resource?.metadata?.name}&workloadType=${resource?.kind}`}\n                  >\n                    View monitoring dashboard\n                  </Link>\n                </div>\n                <WorkloadGraphs resource={resource} />\n              </>\n            )}\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem>\n          <AccordionToggle\n            onClick={() => {\n              onToggle('all-events');\n            }}\n            isExpanded={expanded.includes('all-events')}\n            id=\"all-events\"\n          >\n            All Events\n          </AccordionToggle>\n          <AccordionContent id=\"all-events-content\" isHidden={!expanded.includes('all-events')}>\n            <MonitoringOverviewEvents events={events} />\n          </AccordionContent>\n        </AccordionItem>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default MonitoringOverview;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Flex, FlexItem, FlexModifiers } from '@patternfly/react-core';\nimport { twentyFourHourTime } from '@console/internal/components/utils/datetime';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { referenceFor, EventKind } from '@console/internal/module/k8s';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { getLastTime } from '@console/internal/components/events';\nimport MonitoringOverviewEventsWarning from './MonitoringOverviewEventsWarning';\nimport './MonitoringOverviewEvents.scss';\n\ntype MonitoringOverviewEventsProps = React.ComponentProps<typeof MonitoringOverviewEventsWarning>;\n\nconst MonitoringOverviewEvents: React.FC<MonitoringOverviewEventsProps> = ({ events }) => (\n  <div className=\"odc-monitoring-events\">\n    {!_.isEmpty(events) ? (\n      _.map(events, (e: EventKind) => {\n        return (\n          <div className=\"odc-monitoring-events__event-item\" key={e.metadata.uid}>\n            <Flex breakpointMods={[{ modifier: FlexModifiers['align-self-baseline'] }]}>\n              <FlexItem title={e.lastTimestamp} className=\"text-secondary\">\n                {twentyFourHourTime(new Date(getLastTime(e)))}\n              </FlexItem>\n              {e.type === 'Warning' && (\n                <FlexItem>\n                  <YellowExclamationTriangleIcon className=\"odc-monitoring-events__warning-icon\" />\n                </FlexItem>\n              )}\n              <FlexItem>\n                <ResourceLink\n                  kind={referenceFor(e.involvedObject)}\n                  namespace={e.involvedObject.namespace}\n                  name={e.involvedObject.name}\n                  title={e.involvedObject.uid}\n                />\n              </FlexItem>\n            </Flex>\n            <div className=\"odc-monitoring-events__event-message\">{e.message}</div>\n          </div>\n        );\n      })\n    ) : (\n      <div className=\"text-secondary\">There are no recent events.</div>\n    )}\n  </div>\n);\n\nexport default MonitoringOverviewEvents;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { EventKind } from '@console/internal/module/k8s';\nimport './MonitoringOverviewEventsWarning.scss';\n\ninterface MonitoringOverviewEventsWarningProps {\n  events: EventKind[];\n}\n\nconst MonitoringOverviewEventsWarning: React.FC<MonitoringOverviewEventsWarningProps> = ({\n  events,\n}) => (\n  <div className=\"odc-monitoring-events-warning\">\n    {!_.isEmpty(events) ? (\n      _.map(events, (e: EventKind) => {\n        return (\n          <Alert variant=\"warning\" isInline title={e.reason} key={e.metadata.uid}>\n            {e.message}\n            <div className=\"odc-monitoring-events-warning__timestamp\">\n              <small className=\"text-secondary\">{fromNow(e.lastTimestamp)}</small>\n            </div>\n          </Alert>\n        );\n      })\n    ) : (\n      <div className=\"text-secondary odc-monitoring-events-warning__no-alerts\">\n        There are no warning events.\n      </div>\n    )}\n  </div>\n);\n\nexport default MonitoringOverviewEventsWarning;\n","import * as React from 'react';\nimport { OverviewItem } from '@console/shared';\nimport { Firehose } from '@console/internal/components/utils';\nimport MonitoringOverview from './MonitoringOverview';\nimport { PodModel } from '@console/internal/models';\n\ntype MonitoringTabProps = {\n  item: OverviewItem;\n};\n\nconst MonitoringTab: React.FC<MonitoringTabProps> = ({ item }) => {\n  const { pods } = item;\n  const {\n    kind,\n    metadata: { uid, name, namespace },\n  } = item.obj;\n  const resources = [\n    {\n      isList: true,\n      kind: 'Event',\n      namespace,\n      prop: 'resourceEvents',\n      fieldSelector: `involvedObject.uid=${uid},involvedObject.name=${name},involvedObject.kind=${kind}`,\n    },\n  ];\n\n  if (pods) {\n    pods.forEach((pod) => {\n      const fieldSelector = `involvedObject.uid=${pod.metadata.uid},involvedObject.name=${pod.metadata.name},involvedObject.kind=${PodModel.kind}`;\n      resources.push({\n        isList: true,\n        kind: 'Event',\n        namespace: pod.metadata.namespace,\n        prop: pod.metadata.uid,\n        fieldSelector,\n      });\n    });\n  }\n\n  return (\n    <Firehose resources={resources}>\n      <MonitoringOverview resource={item.obj} pods={pods} />\n    </Firehose>\n  );\n};\n\nexport default MonitoringTab;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AAeA;AAEA;;;;;;;;;;;;AC5BA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAIA;AACA;AAEA;AACA;AAMA;AAGA;AAIA;AACA;AAMA;AACA;AAMA;AAMA;AACA;AAEA;AACA;AAMA;AACA;AAMA;AAEA;;;;;;;;;;;;AC5JA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AAEA;AACA;AAGA;AAEA;AAGA;AACA;AAQA;AAGA;AAOA;;;;;;;;;;;;AC/CA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AAMA;AAEA;AACA;AACA;AAIA;AASA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;;;;;A","sourceRoot":""}