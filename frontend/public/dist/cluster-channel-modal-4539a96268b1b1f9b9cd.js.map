{"version":3,"file":"cluster-channel-modal-4539a96268b1b1f9b9cd.js","sources":["webpack:///./public/components/modals/cluster-channel-modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { ClusterVersionModel } from '../../models';\nimport { Dropdown, PromiseComponent } from '../utils';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory/modal';\nimport { getAvailableClusterChannels, k8sPatch, K8sResourceKind } from '../../module/k8s';\n\nclass ClusterChannelModal extends PromiseComponent<\n  ClusterChannelModalProps,\n  ClusterChannelModalState\n> {\n  readonly state: ClusterChannelModalState;\n\n  constructor(public props: ClusterChannelModalProps) {\n    super(props);\n    this.state.selectedChannel = _.get(props.cv, 'spec.channel');\n  }\n\n  _submit = (e) => {\n    e.preventDefault();\n    const { cv } = this.props;\n    const { selectedChannel } = this.state;\n    const patch = [{ op: 'add', path: '/spec/channel', value: selectedChannel }];\n    this.handlePromise(k8sPatch(ClusterVersionModel, cv, patch)).then(this.props.close);\n  };\n\n  _cancel = () => {\n    this.props.close();\n  };\n\n  _change = (selectedChannel) => {\n    this.setState({ selectedChannel });\n  };\n\n  render() {\n    const { cv } = this.props;\n    const availableChannels = getAvailableClusterChannels();\n    return (\n      <form\n        onSubmit={this._submit}\n        name=\"form\"\n        className=\"modal-content modal-content--no-inner-scroll\"\n      >\n        <ModalTitle>Update Channel</ModalTitle>\n        <ModalBody>\n          <p>\n            Select a channel that reflects your desired version. Critical security updates will be\n            delivered to any vulnerable channels.\n          </p>\n          <div className=\"form-group\">\n            <label htmlFor=\"channel_dropdown\">Select Channel</label>\n            <Dropdown\n              className=\"cluster-channel-modal__dropdown\"\n              id=\"channel_dropdown\"\n              items={availableChannels}\n              onChange={this._change}\n              selectedKey={cv.spec.channel}\n              title=\"Select Channel\"\n            />\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={this.state.errorMessage}\n          inProgress={this.state.inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const clusterChannelModal = createModalLauncher(ClusterChannelModal);\n\ntype ClusterChannelModalProps = {\n  cv: K8sResourceKind;\n} & ModalComponentProps;\n\ntype ClusterChannelModalState = {\n  selectedChannel: string;\n  inProgress: boolean;\n  errorMessage: string;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAOA;AAEA;AAMA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAjBA;AACA;AAkBA;AACA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAUA;AAQA;AACA;AAEA;;;;;A","sourceRoot":""}