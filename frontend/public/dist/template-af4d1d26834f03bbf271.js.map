{"version":3,"file":"template-af4d1d26834f03bbf271.js","sources":["webpack:///./public/components/hypercloud/template.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { TemplateModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst kind = TemplateModel.kind;\n\nexport const templateMenuActions = [...Kebab.getExtensionsActionsForKind(TemplateModel), ...common];\n\nconst objectKinds = template => {\n  const objects = !!template.objectKinds ? template.objectKinds : [];\n  let objMap = new Map();\n  for (const i in objects) {\n    const kind = !!objects[i] ? objects[i] : 'unknown kind';\n    if (!!objMap.get(kind)) {\n      const num = objMap.get(kind) as number;\n      objMap.set(kind, num + 1);\n    } else {\n      objMap.set(kind, 1);\n    }\n  }\n  const objectList = [];\n  objMap.forEach((value, key) => {\n    objectList.push(\n      <div>\n        {key} {value}\n      </div>,\n    );\n  });\n\n  return <div>{objectList}</div>;\n};\n\nconst TemplateDetails: React.FC<TemplateDetailsProps> = ({ obj: template }) => {\n  const { t } = useTranslation();\n  const objectSummary = objectKinds(template);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(template, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={template} showPodSelector showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104')}</dt>\n              <dd>{objectSummary}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype TemplateDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst TemplatesDetailsPage: React.FC<TemplatesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={templateMenuActions} pages={[details(TemplateDetails), editYaml()]} />;\nTemplatesDetailsPage.displayName = 'TemplatesDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // RESOURCE SUMMARY\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n  Kebab.columnClass, // MENU ACTIONS\n];\n\nconst TemplateTableRow = ({ obj, index, key, style }) => {\n  const objectSummary = objectKinds(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{objectSummary}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={templateMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst TemplateTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104'),\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nTemplateTableHeader.displayName = 'TemplateTableHeader';\n\nconst TemplatesList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Template\" Header={TemplateTableHeader.bind(null, t)} Row={TemplateTableRow} />;\n};\nTemplatesList.displayName = 'TemplatesList';\n\nconst TemplatesPage: React.FC<TemplatesPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_20')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_20') })} canCreate={true} kind={kind} ListComponent={TemplatesList} {...props} />;\n};\nTemplatesPage.displayName = 'TemplatesPage';\n\nexport { TemplatesList, TemplatesPage, TemplatesDetailsPage };\n\ntype TemplatesPageProps = {};\n\ntype TemplatesDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}