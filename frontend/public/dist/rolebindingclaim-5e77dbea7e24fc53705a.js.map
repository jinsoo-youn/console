{"version":3,"file":"rolebindingclaim-5e77dbea7e24fc53705a.js","sources":["webpack:///./public/components/hypercloud/role-binding-claim.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\n\nimport { K8sResourceCommon, K8sClaimResourceKind, modelFor } from '../../module/k8s';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, navFactory, ResourceSummary, SectionHeading, ResourceLink, ResourceKebab } from '../utils';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nconst { common } = Kebab.factory;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(modelFor('RoleBindingClaim')), ...common, Kebab.factory.ModifyStatus];\n\nconst kind = 'RoleBindingClaim';\n\nconst RoleBindingClaimTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_98'),\n      sortField: 'resourceName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nRoleBindingClaimTableHeader.displayName = 'RoleBindingClaimTableHeader';\n\nconst RoleBindingClaimTableRow: RowFunction<K8sClaimResourceKind> = ({ obj: rolebindingclaims, index, key, style }) => {\n  return (\n    <TableRow id={rolebindingclaims.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={rolebindingclaims.metadata.name} namespace={rolebindingclaims.metadata.namespace} title={rolebindingclaims.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={rolebindingclaims.metadata.namespace} title={rolebindingclaims.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{rolebindingclaims?.status?.status}</TableData>\n      <TableData className={tableColumnClasses[3]}>{rolebindingclaims.resourceName}</TableData>\n      <TableData className={tableColumnClasses[4]}>{fromNow(rolebindingclaims?.metadata?.creationTimestamp)}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={rolebindingclaims} />\n      </TableData>\n    </TableRow>\n  );\n};\nexport const RoleBindingClaimsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"RoleBindingClaims\" Header={RoleBindingClaimTableHeader.bind(null, t)} Row={RoleBindingClaimTableRow} virtualize />;\n};\nRoleBindingClaimsList.displayName = 'RoleBindingClaimsList';\n\nexport const RoleBindingClaimsPage: React.FC<RoleBindingClaimsPageProps> = props => <ListPage kind={'RoleBindingClaim'} canCreate={true} ListComponent={RoleBindingClaimsList} {...props} />;\nRoleBindingClaimsPage.displayName = 'RoleBindingClaimsPage';\nconst RoleBindingClaimsDetails: React.FC<RoleBindingClaimDetailsProps> = ({ obj: rolebindingclaims }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_101') })} />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={rolebindingclaims}></ResourceSummary>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nRoleBindingClaimsDetails.displayName = 'RoleBindingClaimsDetails';\n\nconst { details, editYaml } = navFactory;\nexport const RoleBindingClaimsDetailsPage: React.FC<RoleBindingClaimsDetailsPageProps> = props => <DetailsPage {...props} kind={'RoleBindingClaim'} menuActions={menuActions} pages={[details(RoleBindingClaimsDetails), editYaml()]} />;\nRoleBindingClaimsDetailsPage.displayName = 'RoleBindingClaimsDetailsPage';\n\ntype RoleBindingClaimDetailsProps = {\n  obj: K8sResourceCommon;\n};\n\ntype RoleBindingClaimsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype RoleBindingClaimsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}