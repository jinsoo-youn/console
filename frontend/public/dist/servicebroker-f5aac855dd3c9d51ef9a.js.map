{"version":3,"file":"servicebroker-f5aac855dd3c9d51ef9a.js","sources":["webpack:///./public/components/hypercloud/service-broker.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ServiceBrokerModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\n\nconst kind = ServiceBrokerModel.kind;\n\nexport const serviceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceBrokerModel), ...common];\n\nconst ServiceBrokerDetails: React.FC<ServiceBrokerDetailsProps> = ({ obj: serviceBroker }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceBroker, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={serviceBroker} showAnnotations={false} showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={serviceBroker} path=\"status.phase\">\n                <Status status={ServiceBrokerPhase(serviceBroker)} />\n              </DetailsItem>\n              <dt>URL</dt>\n              <dd>{serviceBroker.spec.url}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ServiceBrokerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ServiceBrokersDetailsPage: React.FC<ServiceBrokersDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={serviceBrokerMenuActions} pages={[details(ServiceBrokerDetails), editYaml()]} />;\nServiceBrokersDetailsPage.displayName = 'ServiceBrokersDetailsPage';\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\n\nconst ServiceBrokerPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'Ready') {\n        if (cur.status === 'True') {\n          phase = 'Running';\n        } else {\n          phase = 'Error';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst ServiceBrokerTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  let phase = ServiceBrokerPhase(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={serviceBrokerMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceBrokerTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'ServiceBrokerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nServiceBrokerTableHeader.displayName = 'ServiceBrokerTableHeader';\n\nconst serviceBrokerStatusReducer = (serviceBroker: any): string => {\n  return ServiceBrokerPhase(serviceBroker);\n};\n\nconst ServiceBrokersList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Service Broker\" Header={ServiceBrokerTableHeader.bind(null, t)} Row={ServiceBrokerTableRow} virtualize />;\n};\nServiceBrokersList.displayName = 'ServiceBrokersList';\n\nconst ServiceBrokersPage: React.FC<ServiceBrokersPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      title={t('COMMON:MSG_LNB_MENU_11')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_11') })}\n      canCreate={true}\n      kind={kind}\n      ListComponent={ServiceBrokersList}\n      rowFilters={[\n        {\n          filterGroupName: 'Status',\n          type: 'service-broker-status',\n          reducer: serviceBrokerStatusReducer,\n          items: [\n            { id: 'Running', title: t('COMMON:MSG_COMMON_STATUS_1') },\n            { id: 'Error', title: 'Error' },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\nServiceBrokersPage.displayName = 'ServiceBrokersPage';\n\nexport { ServiceBrokersList, ServiceBrokersPage, ServiceBrokersDetailsPage };\n\ntype ServiceBrokersPageProps = {};\n\ntype ServiceBrokersDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;;;;;A","sourceRoot":""}