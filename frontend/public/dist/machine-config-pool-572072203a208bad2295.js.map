{"version":3,"file":"machine-config-pool-572072203a208bad2295.js","sources":["webpack:///./public/components/machine-config-pool.tsx","webpack:///./public/components/machine-config.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\n\nimport { Conditions } from './conditions';\nimport { errorModal } from './modals';\nimport { MachineConfigPoolModel } from '../models';\nimport { machineConfigReference, MachineConfigPage } from './machine-config';\nimport {\n  K8sResourceCondition,\n  K8sResourceConditionStatus,\n  MachineConfigPoolConditionType,\n  MachineConfigPoolKind,\n  referenceForModel,\n} from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  KebabAction,\n  navFactory,\n  pluralize,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  togglePaused,\n  WorkloadPausedAlert,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nconst pauseAction: KebabAction = (kind, obj) => ({\n  label: obj.spec.paused ? 'Resume Updates' : 'Pause Updates',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    verb: 'patch',\n  },\n});\n\nconst machineConfigPoolReference = referenceForModel(MachineConfigPoolModel);\nconst machineConfigPoolMenuActions = [\n  pauseAction,\n  ...Kebab.getExtensionsActionsForKind(MachineConfigPoolModel),\n  ...Kebab.factory.common,\n];\nconst getConditionStatus = (\n  mcp: MachineConfigPoolKind,\n  type: MachineConfigPoolConditionType,\n): K8sResourceCondition['status'] => {\n  const { conditions } = mcp.status || {};\n  const condition = _.find(conditions, { type });\n  return condition ? condition.status : K8sResourceConditionStatus.Unknown;\n};\n\nconst MachineConfigPoolCharacteristics: React.SFC<MachineConfigPoolCharacteristicsProps> = ({\n  obj,\n}) => {\n  const configuration = _.get(obj, 'status.configuration');\n  const maxUnavailable = _.get(obj, 'spec.maxUnavailable', 1);\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>Max Unavailable Machines</dt>\n      <dd>{maxUnavailable}</dd>\n      {configuration && (\n        <>\n          <dt>Current Configuration</dt>\n          <dd>\n            {configuration.name ? (\n              <ResourceLink\n                kind={machineConfigReference}\n                name={configuration.name}\n                title={configuration.name}\n              />\n            ) : (\n              '-'\n            )}\n          </dd>\n          <dt>Current Configuration Source</dt>\n          <dd>\n            {configuration.source\n              ? _.map(configuration.source, ({ apiVersion, kind, name }) => (\n                  <ResourceLink\n                    key={`${apiVersion}-${kind}-${name}`}\n                    kind={machineConfigReference}\n                    name={name}\n                    title={name}\n                  />\n                ))\n              : '-'}\n          </dd>\n        </>\n      )}\n    </dl>\n  );\n};\n\nconst MachineConfigPoolCounts: React.SFC<MachineConfigPoolCountsProps> = ({ obj }) => {\n  return (\n    <div className=\"co-m-pane__body-group\">\n      <div className=\"co-detail-table\">\n        <div className=\"co-detail-table__row row\">\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Total Machine Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of machines in the machine pool.\">\n                  <span>{pluralize(_.get(obj, 'status.machineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Ready Machines</dt>\n              <dd>\n                <Tooltip content=\"Total number of ready machines targeted by the pool.\">\n                  <span>{pluralize(_.get(obj, 'status.readyMachineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Updated Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of machines targeted by the pool that have the CurrentMachineConfig as their config.\">\n                  <span>{pluralize(_.get(obj, 'status.updatedMachineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section co-detail-table__section--last\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Unavailable Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.\">\n                  <span>\n                    {pluralize(_.get(obj, 'status.unavailableMachineCount', 0), 'machine')}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MachineConfigPoolSummary: React.SFC<MachineConfigPoolSummaryProps> = ({ obj }) => {\n  const machineConfigSelector = _.get(obj, 'spec.machineConfigSelector');\n  return (\n    <ResourceSummary resource={obj} showNodeSelector nodeSelector=\"spec.nodeSelector\">\n      <dt>Machine Config Selector</dt>\n      <dd>\n        <Selector kind={machineConfigReference} selector={machineConfigSelector} />\n      </dd>\n    </ResourceSummary>\n  );\n};\n\nconst MachineConfigList: React.SFC<MachineConfigListProps> = ({ obj }) => (\n  <MachineConfigPage\n    canCreate={false}\n    showTitle={false}\n    selector={_.get(obj, 'spec.machineConfigSelector')}\n  />\n);\n\nconst MachineConfigPoolDetails: React.SFC<MachineConfigPoolDetailsProps> = ({ obj }) => {\n  const paused = _.get(obj, 'spec.paused');\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine Config Pool Details \" />\n        {paused && <WorkloadPausedAlert model={MachineConfigPoolModel} obj={obj} />}\n        <MachineConfigPoolCounts obj={obj} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolSummary obj={obj} />\n          </div>\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolCharacteristics obj={obj} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={_.get(obj, 'status.conditions')} />\n      </div>\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(MachineConfigPoolDetails),\n  navFactory.editYaml(),\n  navFactory.machineConfigs(MachineConfigList),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigPoolDetailsPage: React.SFC<any> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={machineConfigPoolReference}\n    menuActions={machineConfigPoolMenuActions}\n    pages={pages}\n  />\n);\n\nconst tableColumnClasses = [\n  classNames('col-lg-4', 'col-xs-6'),\n  classNames('col-lg-5', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n  classNames('col-lg-1', 'col-sm-2', 'hidden-xs'),\n  classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n  Kebab.columnClass,\n];\n\nconst MachineConfigPoolTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Configuration',\n      sortField: 'status.configuration.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Updated',\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Updating',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Degraded',\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nMachineConfigPoolTableHeader.displayName = 'MachineConfigPoolTableHeader';\n\nconst MachineConfigPoolTableRow: RowFunction<MachineConfigPoolKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink\n          kind={machineConfigPoolReference}\n          name={obj.metadata.name}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(obj, 'status.configuration.name') ? (\n          <ResourceLink\n            kind={machineConfigReference}\n            name={obj.status.configuration.name}\n            title={obj.status.configuration.name}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Updated)}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Updating)}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-truncate')}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Degraded)}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigPoolMenuActions}\n          kind={machineConfigPoolReference}\n          resource={obj}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineConfigPoolList: React.SFC<any> = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Config Pools\"\n    Header={MachineConfigPoolTableHeader}\n    Row={MachineConfigPoolTableRow}\n    virtualize\n  />\n);\n\nexport const MachineConfigPoolPage: React.SFC<any> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineConfigPoolList}\n    kind={machineConfigPoolReference}\n    canCreate\n  />\n);\n\ntype MachineConfigPoolCountsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolDetailsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigListProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolCharacteristicsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolSummaryProps = {\n  obj: MachineConfigPoolKind;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { MachineConfigKind, referenceForModel } from '../module/k8s';\nimport { MachineConfigModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nexport const machineConfigReference = referenceForModel(MachineConfigModel);\nconst machineConfigMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(MachineConfigModel),\n  ...Kebab.factory.common,\n];\n\nconst MachineConfigSummary: React.SFC<MachineConfigSummaryProps> = ({ obj }) => (\n  <ResourceSummary resource={obj}>\n    <dt>OS Image URL</dt>\n    <dd>{obj.spec.osImageURL || '-'}</dd>\n  </ResourceSummary>\n);\n\nconst MachineConfigDetails: React.SFC<MachineConfigDetailsProps> = ({ obj }) => (\n  <div className=\"co-m-pane__body\">\n    <SectionHeading text=\"Machine Config Details\" />\n    <div className=\"row\">\n      <div className=\"col-xs-12\">\n        <MachineConfigSummary obj={obj} />\n      </div>\n    </div>\n  </div>\n);\n\nconst pages = [\n  navFactory.details(MachineConfigDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigDetailsPage: React.SFC<any> = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={machineConfigReference}\n      menuActions={machineConfigMenuActions}\n      pages={pages}\n    />\n  );\n};\n\nconst tableColumnClasses = [\n  classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-3', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n  classNames('col-lg-3', 'col-md-3', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'col-sm-2', 'col-xs-6'),\n  Kebab.columnClass,\n];\n\nconst MachineConfigTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Generated By Controller',\n      sortField:\n        \"metadata.annotations['machineconfiguration.openshift.io/generated-by-controller-version']\",\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Ignition Version',\n      sortField: 'spec.config.ignition.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'OS Image URL',\n      sortField: 'spec.osImageURL',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nMachineConfigTableHeader.displayName = 'MachineConfigTableHeader';\n\nconst MachineConfigTableRow: RowFunction<MachineConfigKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineConfigReference}\n          name={obj.metadata.name}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(\n          obj,\n          [\n            'metadata',\n            'annotations',\n            'machineconfiguration.openshift.io/generated-by-controller-version',\n          ],\n          '-',\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {_.get(obj, 'spec.config.ignition.version') || '-'}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        {_.get(obj, 'spec.osImageURL') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigMenuActions}\n          kind={machineConfigReference}\n          resource={obj}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineConfigList: React.SFC<any> = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Configs\"\n    Header={MachineConfigTableHeader}\n    Row={MachineConfigTableRow}\n    virtualize\n  />\n);\n\nexport const MachineConfigPage: React.SFC<any> = ({ canCreate = true, ...rest }) => (\n  <ListPage\n    {...rest}\n    canCreate={canCreate}\n    ListComponent={MachineConfigList}\n    kind={machineConfigReference}\n  />\n);\n\ntype MachineConfigDetailsProps = {\n  obj: MachineConfigKind;\n};\n\ntype MachineConfigSummaryProps = {\n  obj: MachineConfigKind;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAWA;AACA;AAEA;AAQA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAWA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAMA;AAWA;AAGA;AAGA;AAGA;AACA;AAQA;AAEA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAIA;AACA;AACA;AACA;AAIA;AAGA;AAGA;AACA;AAEA;AACA;AAQA;AAEA;AAUA;AAAA;AAAA;AAOA;;;;;A","sourceRoot":""}