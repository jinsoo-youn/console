{"version":3,"file":"machine-config-a23bd42f2165820b20af.js","sources":["webpack:///./public/components/machine-config.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { MachineConfigKind, referenceForModel } from '../module/k8s';\nimport { MachineConfigModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nexport const machineConfigReference = referenceForModel(MachineConfigModel);\nconst machineConfigMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(MachineConfigModel),\n  ...Kebab.factory.common,\n];\n\nconst MachineConfigSummary: React.SFC<MachineConfigSummaryProps> = ({ obj }) => (\n  <ResourceSummary resource={obj}>\n    <dt>OS Image URL</dt>\n    <dd>{obj.spec.osImageURL || '-'}</dd>\n  </ResourceSummary>\n);\n\nconst MachineConfigDetails: React.SFC<MachineConfigDetailsProps> = ({ obj }) => (\n  <div className=\"co-m-pane__body\">\n    <SectionHeading text=\"Machine Config Details\" />\n    <div className=\"row\">\n      <div className=\"col-xs-12\">\n        <MachineConfigSummary obj={obj} />\n      </div>\n    </div>\n  </div>\n);\n\nconst pages = [\n  navFactory.details(MachineConfigDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigDetailsPage: React.SFC<any> = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={machineConfigReference}\n      menuActions={machineConfigMenuActions}\n      pages={pages}\n    />\n  );\n};\n\nconst tableColumnClasses = [\n  classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-3', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n  classNames('col-lg-3', 'col-md-3', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'col-sm-2', 'col-xs-6'),\n  Kebab.columnClass,\n];\n\nconst MachineConfigTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Generated By Controller',\n      sortField:\n        \"metadata.annotations['machineconfiguration.openshift.io/generated-by-controller-version']\",\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Ignition Version',\n      sortField: 'spec.config.ignition.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'OS Image URL',\n      sortField: 'spec.osImageURL',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nMachineConfigTableHeader.displayName = 'MachineConfigTableHeader';\n\nconst MachineConfigTableRow: RowFunction<MachineConfigKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineConfigReference}\n          name={obj.metadata.name}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(\n          obj,\n          [\n            'metadata',\n            'annotations',\n            'machineconfiguration.openshift.io/generated-by-controller-version',\n          ],\n          '-',\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {_.get(obj, 'spec.config.ignition.version') || '-'}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        {_.get(obj, 'spec.osImageURL') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigMenuActions}\n          kind={machineConfigReference}\n          resource={obj}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineConfigList: React.SFC<any> = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Configs\"\n    Header={MachineConfigTableHeader}\n    Row={MachineConfigTableRow}\n    virtualize\n  />\n);\n\nexport const MachineConfigPage: React.SFC<any> = ({ canCreate = true, ...rest }) => (\n  <ListPage\n    {...rest}\n    canCreate={canCreate}\n    ListComponent={MachineConfigList}\n    kind={machineConfigReference}\n  />\n);\n\ntype MachineConfigDetailsProps = {\n  obj: MachineConfigKind;\n};\n\ntype MachineConfigSummaryProps = {\n  obj: MachineConfigKind;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAIA;AACA;AACA;AACA;AAIA;AAGA;AAGA;AACA;AAEA;AACA;AAQA;AAEA;AAUA;AAAA;AAAA;AAOA;;;;;A","sourceRoot":""}