{"version":3,"file":"serviceclass-567fb2e93dadb777d287.js","sources":["webpack:///./public/components/hypercloud/service-class.tsx","webpack:///./public/components/hypercloud/service-plan.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { ServiceClassModel } from '../../models';\nimport { ServicePlansPage } from './service-plan';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst kind = ServiceClassModel.kind;\n\nconst ServiceClassDetails: React.FC<ServiceClassDetailsProps> = ({ obj: serviceClass }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceClass, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={serviceClass} showPodSelector showNodeSelector></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_16')}</dt>\n              <dd>{serviceClass.spec.bindable ? 'True' : 'False'}</dd>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_18')}</dt>\n              <dd>{serviceClass.spec.serviceBrokerName}</dd>\n              <dt>ID</dt>\n              <dd>{serviceClass.spec.externalID}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ServiceClassDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ServiceClassesDetailsPage: React.FC<ServiceClassesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} pages={[details(ServiceClassDetails), editYaml(), { href: 'serviceplans', name: 'Service Plan', component: ServicePlansPage }]} />;\nServiceClassesDetailsPage.displayName = 'ServiceClassesDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', //NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), //BINDABLE\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // SERVICEBROKER\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n];\n\nconst ServiceClassTableRow = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.spec.bindable ? 'True' : 'False'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceLink kind=\"ServiceBroker\" name={obj.spec.serviceBrokerName} namespace={obj.metadata.namespace} title={obj.spec.serviceBrokerName} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceClassTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_5'),\n      sortField: 'spec.bindable',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_7'),\n      sortField: 'spec.serviceBrokerName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nServiceClassTableHeader.displayName = 'ServiceClassTableHeader';\n\nconst ServiceClassesList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Service Class\" Header={ServiceClassTableHeader.bind(null, t)} Row={ServiceClassTableRow} />;\n};\nServiceClassesList.displayName = 'ServiceClassesList';\n\nconst ServiceClassesPage: React.FC<ServiceClassesPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_12')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_12') })} canCreate={false} kind={kind} ListComponent={ServiceClassesList} {...props} />;\n};\nServiceClassesPage.displayName = 'ServiceClassesPage';\n\nexport { ServiceClassesList, ServiceClassesPage, ServiceClassesDetailsPage };\ntype ServiceClassesPageProps = {};\n\ntype ServiceClassesDetailsPageProps = {\n  match: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { ServicePlanModel } from '../../models';\n// import { K8sResourceKind, modelFor, k8sGet } from '../../module/k8s';\nimport { K8sResourceKind, modelFor } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceSidebar } from '../sidebars/resource-sidebar';\nconst kind = ServicePlanModel.kind;\n\nconst ServicePlanDetails: React.FC<ServicePlanDetailsProps> = ({ obj: servicePlan }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={`${t('COMMON:MSG_LNB_MENU_13')} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={servicePlan} showPodSelector showNodeSelector></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_16')}</dt>\n              <dd>{servicePlan.spec.bindable ? 'True' : 'False'}</dd>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_17')}</dt>\n              <dd>{servicePlan.spec.externalName}</dd>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_18')}</dt>\n              <dd>{servicePlan.spec.serviceBrokerName}</dd>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_19')}</dt>\n              <dd>{servicePlan.spec.serviceClassRef.name}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ServicePlanDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details } = navFactory;\nconst ServicePlansDetailsPage: React.FC<ServicePlansDetailsPageProps> = props => <DetailsPage {...props} kind={kind} pages={[details(ServicePlanDetails)]} />;\nServicePlansDetailsPage.displayName = 'ServicePlansDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), // BINDABLE\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n];\n\nconst ServicePlanTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_5'),\n      sortField: 'spec.bindable',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\nServicePlanTableHeader.displayName = 'ServicePlanTableHeader';\n\nconst ServicePlanTableRow = (setSidebarDetails, setShowSidebar, setSidebarTitle, props) => {\n  const { obj, index, key, style } = props;\n  const SidebarLink = ({ name, kind, obj }) => {\n    return (\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        isInline\n        onClick={() => {\n          setShowSidebar(true);\n          setSidebarDetails(obj);\n          setSidebarTitle(obj.metadata.name);\n        }}\n      >\n        {name}\n      </Button>\n    );\n  };\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <SidebarLink kind={kind} name={obj.metadata.name} obj={obj} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.spec.bindable ? 'True' : 'False'}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n    </TableRow>\n  );\n};\nconst ServicePlansList: React.FC<ServicePlansListProps> = props => {\n  const { t } = useTranslation();\n  const { setSidebarDetails, setShowSidebar, setSidebarTitle } = props;\n  return <Table {...props} aria-label=\"Service Plan\" Header={ServicePlanTableHeader.bind(null, t)} Row={ServicePlanTableRow.bind(null, setSidebarDetails, setShowSidebar, setSidebarTitle)} />;\n};\nServicePlansList.displayName = 'ServicePlansList';\n\nconst ServicePlansPage: React.FC<ServicePlansPageProps> = props => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [servicePlan, setSidebarDetails] = useState({});\n  const [sidebarTitle, setSidebarTitle] = useState('');\n  return (\n    <>\n      <div className=\"co-p-has-sidebar\">\n        <div className=\"co-m-pane__body\">\n          <ListPage canCreate={false} kind={kind} ListComponent={ServicePlansList} setSidebarTitle={setSidebarTitle} setShowSidebar={setShowSidebar} setSidebarDetails={setSidebarDetails} {...props} />\n        </div>\n        <ResourceSidebar\n          resource={servicePlan}\n          kindObj={modelFor('ServicePlan')}\n          toggleSidebar={() => {\n            setShowSidebar(!showSidebar);\n            window.dispatchEvent(new Event('sidebar_toggle'));\n          }}\n          title={sidebarTitle}\n          isFloat={true}\n          showName={false}\n          showID={true}\n          showPodSelector={true}\n          showNodeSelector={true}\n          showOwner={false}\n          showSidebar={showSidebar}\n          samples={[]}\n          isCreateMode={true}\n          showDetails={true}\n        />\n      </div>\n    </>\n  );\n};\nServicePlansPage.displayName = 'ServicePlansPage';\n\nexport { ServicePlansList, ServicePlansPage, ServicePlansDetailsPage };\n\ntype ServicePlansListProps = {\n  setShowSidebar: any;\n  setSidebarDetails: any;\n  setSidebarTitle: any;\n};\ntype ServicePlansPageProps = {};\n\ntype ServicePlansDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAgBA;AACA;AAEA;;;;;A","sourceRoot":""}