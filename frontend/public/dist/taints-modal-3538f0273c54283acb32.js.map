{"version":3,"file":"taints-modal-3538f0273c54283acb32.js","sources":["webpack:///./public/components/modals/taints-modal.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { K8sKind, k8sPatch, NodeKind, Taint } from '../../module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory';\n\nclass TaintsModal extends PromiseComponent<TaintsModalProps, TaintsModalState> {\n  readonly state: TaintsModalState;\n\n  constructor(public props: TaintsModalProps) {\n    super(props);\n    // Add an empty row for editing if no taints exist.\n    this.state.taints = this.props.resource.spec.taints || [];\n  }\n\n  _submit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    const { taints } = this.state;\n\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = this.props.resource.spec.taints ? 'replace' : 'add';\n    const patch = [{ path: '/spec/taints', op, value: taints }];\n\n    this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(\n      this.props.close,\n    );\n  };\n\n  _cancel = () => {\n    this.props.close();\n  };\n\n  _change = (e, i: number, field: string) => {\n    const newValue = e.target ? e.target.value : e;\n    this.setState((prevState: TaintsModalState) => {\n      const clonedTaints = _.cloneDeep(prevState.taints);\n      clonedTaints[i][field] = newValue;\n      return {\n        taints: clonedTaints,\n      };\n    });\n  };\n\n  _remove = (i: number) => {\n    this.setState((state: TaintsModalState) => {\n      const taints = [...state.taints];\n      taints.splice(i, 1);\n      return { taints };\n    });\n  };\n\n  _newTaint(): Taint {\n    return { key: '', value: '', effect: 'NoSchedule' };\n  }\n\n  _addRow = () => {\n    this.setState((state: TaintsModalState) => ({\n      taints: [...state.taints, this._newTaint()],\n    }));\n  };\n\n  render() {\n    const effects = {\n      NoSchedule: 'NoSchedule',\n      PreferNoSchedule: 'PreferNoSchedule',\n      NoExecute: 'NoExecute',\n    };\n    const { taints, errorMessage, inProgress } = this.state;\n    return (\n      <form\n        onSubmit={this._submit}\n        name=\"form\"\n        className=\"modal-content modal-content--accommodate-dropdown taint-modal\"\n      >\n        <ModalTitle>Edit Taints</ModalTitle>\n        <ModalBody>\n          {_.isEmpty(taints) ? (\n            <EmptyBox label=\"Taints\" />\n          ) : (\n            <>\n              <div className=\"row taint-modal__heading hidden-sm hidden-xs\">\n                <div className=\"col-sm-4 text-secondary text-uppercase\">Key</div>\n                <div className=\"col-sm-3 text-secondary text-uppercase\">Value</div>\n                <div className=\"col-sm-4 text-secondary text-uppercase\">Effect</div>\n                <div className=\"col-sm-1 co-empty__header\" />\n              </div>\n              {_.map(taints, (c, i) => (\n                <div className=\"row taint-modal__row\" key={i}>\n                  <div className=\"col-md-4 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Key\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control taint-modal__input\"\n                      value={c.key}\n                      onChange={(e) => this._change(e, i, 'key')}\n                      required\n                    />\n                  </div>\n                  <div className=\"col-md-3 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Value\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control taint-modal__input\"\n                      value={c.value}\n                      onChange={(e) => this._change(e, i, 'value')}\n                    />\n                  </div>\n                  <div className=\"clearfix visible-sm visible-xs\" />\n                  <div className=\"col-md-4 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Effect\n                    </div>\n                    <Dropdown\n                      className=\"taint-modal__dropdown\"\n                      dropDownClassName=\"dropdown--full-width\"\n                      items={effects}\n                      onChange={(e) => this._change(e, i, 'effect')}\n                      selectedKey={c.effect}\n                      title={effects[c.effect]}\n                    />\n                  </div>\n                  <div className=\"col-md-1 col-md-offset-0 col-sm-offset-10 col-xs-offset-10\">\n                    <Button\n                      type=\"button\"\n                      className=\"taint-modal__delete-icon\"\n                      onClick={() => this._remove(i)}\n                      aria-label=\"Delete\"\n                      variant=\"plain\"\n                    >\n                      <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </>\n          )}\n          <Button\n            className=\"pf-m-link--align-left\"\n            onClick={this._addRow}\n            type=\"button\"\n            variant=\"link\"\n          >\n            <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n            Add More\n          </Button>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const taintsModal = createModalLauncher(TaintsModal);\n\ntype TaintsModalProps = {\n  resourceKind: K8sKind;\n  resource: NodeKind;\n} & ModalComponentProps;\n\ntype TaintsModalState = {\n  taints: Taint[];\n  inProgress: boolean;\n  errorMessage: string;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAGA;AACA;AADA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAjDA;AACA;AACA;AAuCA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAQA;AACA;AAGA;AAOA;AACA;AACA;AAGA;AASA;AACA;AAOA;AAOA;AAMA;AAEA;AAEA;AAQA;AACA;AAEA;;;;;A","sourceRoot":""}