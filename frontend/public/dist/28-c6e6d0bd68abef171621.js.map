{"version":3,"file":"28-c6e6d0bd68abef171621.js","sources":["webpack:///./packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/data-resiliency-activity.tsx","webpack:///./packages/noobaa-storage-plugin/src/components/activity-card/data-resiliency-activity/data-resiliency-activity.scss?6970","webpack:///./packages/noobaa-storage-plugin/src/components/activity-card/data-resiliency-activity/data-resiliency-activity.tsx","webpack:///./packages/noobaa-storage-plugin/src/utils.ts"],"sourcesContent":["import * as React from 'react';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getResiliencyProgress } from '../../../../utils';\n\nexport const DataResiliency: React.FC<DataResiliencyProps> = ({ results }) => {\n  const progress: number = getResiliencyProgress(results);\n  const formattedProgress = Math.round(progress * 100);\n  return (\n    <>\n      <Progress\n        className=\"co-activity-item__progress\"\n        value={formattedProgress}\n        size={ProgressSize.sm}\n        title=\"Rebuilding data resiliency\"\n        label={`${formattedProgress}%`}\n      />\n    </>\n  );\n};\n\ntype DataResiliencyProps = {\n  results: PrometheusResponse;\n};\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { formatDuration } from '@console/internal/components/utils/datetime';\nimport { DataResiliency } from '@console/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/data-resiliency-activity';\nimport { getGaugeValue } from '../../../utils';\nimport './data-resiliency-activity.scss';\n\nexport const NoobaaDataResiliency: React.FC<DataResiliencyProps> = ({ results }) => {\n  const eta = getGaugeValue(results[1]);\n  const formattedEta = formatDuration(eta * 1000);\n  return (\n    <>\n      <DataResiliency results={results[0]} />\n      {eta && (\n        <span className=\"text-secondary nb-data-resiliency__eta\">\n          Estimating {formattedEta} to completion\n        </span>\n      )}\n    </>\n  );\n};\n\ntype DataResiliencyProps = {\n  results: PrometheusResponse[];\n};\n","import * as _ from 'lodash';\nimport { Alert } from '@console/internal/components/monitoring';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { StorageClass } from '@console/internal/components/storage-class-form';\n\nexport const filterNooBaaAlerts = (alerts: Alert[]): Alert[] =>\n  alerts.filter((alert) => _.get(alert, 'annotations.storage_type') === 'NooBaa');\n\nexport const getGaugeValue = (data) => _.get(data, 'data.result[0].value[1]');\n\nexport const getMetric = (result: PrometheusResponse, metric: string): string =>\n  _.get(result, ['data', 'result', '0', 'metric', metric], null);\n\nexport type PrometheusMetricResult = {\n  metric: { [key: string]: any };\n  value?: [number, string | number];\n};\n\nexport const getPhase = (obj: K8sResourceKind): string => {\n  return _.get(obj, 'status.phase', 'Lost');\n};\n\nexport const isBound = (obj: K8sResourceKind): boolean => getPhase(obj) === 'Bound';\n\nexport const getSCProvisioner = (obj: StorageClass) => obj.provisioner;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AASA;;;;;;;;;;;;ACnBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAIA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAEA;AAQA;AACA;AACA;AAEA;AAEA;;;;;A","sourceRoot":""}