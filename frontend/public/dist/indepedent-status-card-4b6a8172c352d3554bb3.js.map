{"version":3,"file":"indepedent-status-card-4b6a8172c352d3554bb3.js","sources":["webpack:///./packages/ceph-storage-plugin/src/components/independent-dashboard-page/status-card/card.tsx","webpack:///./packages/ceph-storage-plugin/src/constants/resources.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/HealthItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GalleryItem, Gallery } from '@patternfly/react-core';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getCephHealthState } from '../../dashboard-page/storage-dashboard/status-card/utils';\nimport { cephClusterResource } from '../../../constants/resources';\n\nconst StatusCard: React.FC = () => {\n  const [data, loaded, loadError] = useK8sWatchResource<K8sResourceKind[]>(cephClusterResource);\n\n  const cephHealth = getCephHealthState({ ceph: { data, loaded, loadError } });\n\n  return (\n    <DashboardCard gradient>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Status</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <HealthBody>\n          <Gallery className=\"co-overview-status__health\" gutter=\"md\">\n            <GalleryItem>\n              <HealthItem\n                title=\"OCS Cluster\"\n                state={cephHealth.state}\n                details={cephHealth.message}\n              />\n            </GalleryItem>\n          </Gallery>\n        </HealthBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default StatusCard;\n","import { FirehoseResource } from '@console/internal/components/utils/index';\nimport { referenceForModel } from '@console/internal/module/k8s/k8s';\nimport { PersistentVolumeModel } from '@console/internal/models';\nimport { WatchK8sResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { CephClusterModel } from '../models';\n\nexport const cephClusterResource: FirehoseResource = {\n  kind: referenceForModel(CephClusterModel),\n  namespaced: false,\n  isList: true,\n  prop: 'ceph',\n};\n\nexport const pvResource: WatchK8sResource = {\n  kind: PersistentVolumeModel.kind,\n  namespaced: false,\n  isList: true,\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { DashboardCardPopupLink } from '../dashboard-card/DashboardCardLink';\nimport { HealthState, healthStateMapping } from './states';\n\nconst HealthItemIcon: React.FC<HealthItemIconProps> = ({ state }) => (\n  <div className=\"co-dashboard-icon\">\n    {(healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).icon}\n  </div>\n);\n\nconst HealthItem: React.FC<HealthItemProps> = React.memo(\n  ({ className, state, title, details, popupTitle, noIcon = false, children }) => {\n    const detailMessage =\n      details || (healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).message;\n    return (\n      <div className={classNames('co-status-card__health-item', className)}>\n        {state === HealthState.LOADING ? (\n          <div className=\"skeleton-health\" />\n        ) : (\n          !noIcon && <HealthItemIcon state={state} />\n        )}\n        <div>\n          <span className=\"co-dashboard-text--small co-status-card__health-item-text\">\n            {React.Children.toArray(children).length && state !== HealthState.LOADING ? (\n              <DashboardCardPopupLink\n                linkTitle={title}\n                popupTitle={popupTitle}\n                className=\"co-status-card__popup\"\n              >\n                {children}\n              </DashboardCardPopupLink>\n            ) : (\n              title\n            )}\n          </span>\n          {state !== HealthState.LOADING && detailMessage && (\n            <div className=\"co-dashboard-text--small co-status-card__health-item-text co-status-card__health-item-subtitle\">\n              {detailMessage}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default HealthItem;\n\ntype HealthItemProps = {\n  title: string;\n  className?: string;\n  details?: string;\n  state?: HealthState;\n  popupTitle?: string;\n  noIcon?: boolean;\n};\n\ntype HealthItemIconProps = {\n  state?: HealthState;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAWA;AAEA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;AAEA;AAKA;AACA;AAaA;AAQA;AAGA;;;;;A","sourceRoot":""}