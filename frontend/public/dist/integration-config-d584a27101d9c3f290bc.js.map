{"version":3,"file":"integration-config-d584a27101d9c3f290bc.js","sources":["webpack:///./public/components/hypercloud/integration-config.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { Status } from '@console/shared';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { IntegrationConfigModel } from '../../models/hypercloud';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(IntegrationConfigModel), ...Kebab.factory.common];\n\nconst kind = IntegrationConfigModel.kind;\n\nconst tableColumnClasses = [\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-sm-2', 'hidden-xs'),\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-sm-2', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst IntegrationConfigPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'ready') {\n        if (cur.status === 'True') {\n          phase = 'Ready';\n        } else {\n          phase = 'UnReady';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst IntegrationConfigTableHeader = (t?: TFunction) => {\n\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n      sortField: 'spec.image',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nIntegrationConfigTableHeader.displayName = 'IntegrationConfigTableHeader';\n\n\nconst IntegrationConfigTableRow: RowFunction<K8sResourceKind> = ({ obj: integrationConfig, index, key, style }) => {\n  const phase = IntegrationConfigPhase(integrationConfig);\n  return (\n    <TableRow id={integrationConfig.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={integrationConfig.metadata.name} namespace={integrationConfig.metadata.namespace} title={integrationConfig.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={integrationConfig.metadata.namespace} title={integrationConfig.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {integrationConfig.spec.image}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={integrationConfig.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={integrationConfig} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const IntegrationConfigDetailsList: React.FC<IntegrationConfigDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  const readyCondition = ds.status.conditions.find(obj => _.lowerCase(obj.type) === 'ready');\n  const time = readyCondition?.lastTransitionTime?.replace('T', ' ').replaceAll('-', '.').replace('Z', '');\n  const phase = IntegrationConfigPhase(ds);\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_109')}`} obj={ds} path=\"status.transitionTime\">\n        {time}\n      </DetailsItem>\n      <DetailsItem label={`${t('COMMON:MSG_COMMON_TABLEHEADER_2')}`} obj={ds} path=\"status.result\">\n        <Status status={phase} />\n      </DetailsItem>\n    </dl>\n  );\n}\n\nconst IntegrationConfigDetails: React.FC<IntegrationConfigDetailsProps> = ({ obj: integrationConfig }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(integrationConfig, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={integrationConfig} />\n          </div>\n          <div className=\"col-lg-6\">\n            <IntegrationConfigDetailsList ds={integrationConfig} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nconst { details, editYaml } = navFactory;\n\nexport const IntegrationConfigs: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"IntegrationConfigs\" Header={IntegrationConfigTableHeader.bind(null, t)} Row={IntegrationConfigTableRow} virtualize />;\n}\n\n\nexport const IntegrationConfigsPage: React.FC<IntegrationConfigsPageProps> = props => {\n  // const { t } = useTranslation();\n\n  return <ListPage\n    // title={t('COMMON:CD_MAILFORM_REQUEST_7')}\n    // createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:CD_MAILFORM_REQUEST_7') })}\n    canCreate={true}\n    ListComponent={IntegrationConfigs}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const IntegrationConfigsDetailsPage: React.FC<IntegrationConfigsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(IntegrationConfigDetails)), editYaml()]} />;\n\ntype IntegrationConfigDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype IntegrationConfigsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype IntegrationConfigDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype IntegrationConfigsDetailsPageProps = {\n  match: any;\n};"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;AADA;AACA;AACA;AAKA;AAEA;;;;;A","sourceRoot":""}