{"version":3,"file":"create-secret0-bb8428df25a11f656c5d.js","sources":["webpack:///./public/components/hypercloud/form/create-form.tsx","webpack:///./public/components/hypercloud/form/namespaces/create-namespace.tsx","webpack:///./public/components/hypercloud/utils/section.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { DevTool } from '@hookform/devtools';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { k8sCreate, referenceFor, K8sResourceKind, modelFor } from '../../../module/k8s';\nimport { pluralToKind } from './';\nimport { ButtonBar, history, resourceObjPath } from '../../utils';\nimport { Section } from '../utils/section';\n\nexport const WithCommonForm = (SubForm, params, defaultValues, modal?: boolean) => {\n  const FormComponent: React.FC<CommonFormProps_> = props => {\n    const methods = useForm({ defaultValues: defaultValues });\n\n    const kind = pluralToKind.get(params.plural)?.['kind'];\n    const title = `${props.titleVerb} ${params?.type === 'form' ? '' : params.type || 'Sample'} ${kind || ''}`;\n\n    const [inProgress] = React.useState(false); // onSubmit이나 나중에 Error관련 메서드에서 inProgress를 false로 변경해줘야함.\n    const model = kind && modelFor(kind);\n    const namespaced = model?.namespaced;\n    const plural = model?.plural;\n\n    const onClick = methods.handleSubmit(data => {\n      let inDo = _.defaultsDeep(props.fixed, data);\n      inDo = props.onSubmitCallback(inDo);\n      k8sCreate(model, inDo);\n      history.push(resourceObjPath(inDo, referenceFor(model)));\n    });\n    return (\n      <FormProvider {...methods}>\n        <div className=\"co-m-pane__body\">\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          <form className=\"co-m-pane__body-group co-m-pane__form\">\n            <h1 className=\"co-m-pane__heading co-m-pane__heading--baseline\">\n              <div className=\"co-m-pane__name\">{title}</div>\n              <div className=\"co-m-pane__heading-link\">\n                <Link to={namespaced ? `/k8s/ns/${params.ns}/${plural}/~new` : `/k8s/cluster/${plural}/~new`} id=\"yaml-link\" replace>\n                  Edit YAML\n                </Link>\n              </div>\n            </h1>\n            <p className=\"co-m-pane__explanation\">{props.explanation}</p>\n            <fieldset>\n              <Section label=\"Name\" id=\"name\" isRequired={true}>\n                <input className=\"pf-c-form-control\" id=\"name\" name=\"metadata.name\" ref={methods.register} />\n              </Section>\n            </fieldset>\n            <SubForm isCreate={props.isCreate} />\n            <ButtonBar inProgress={inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button type=\"button\" variant=\"primary\" id=\"save-changes\" onClick={onClick}>\n                  {props.saveButtonText || 'Create'}\n                </Button>\n                <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={history.goBack}>\n                  Cancel\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </form>\n          <DevTool control={methods.control} />\n        </div>\n      </FormProvider>\n    );\n  };\n  return FormComponent;\n};\n\ntype CommonFormProps_ = {\n  obj?: K8sResourceKind;\n  fixed: object;\n  isCreate: boolean;\n  titleVerb: string;\n  onSubmitCallback: Function;\n  saveButtonText?: string;\n  explanation?: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { match as RMatch } from 'react-router';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { WithCommonForm } from '../create-form';\nimport { Section } from '../../utils/section';\nimport { SelectorInput } from '../../../utils';\n\n// const allow = 'allow';\n// const deny = 'deny';\n\n// const defaultDeny = {\n//   apiVersion: 'networking.k8s.io/v1',\n//   kind: 'NetworkPolicy',\n//   spec: {\n//     podSelector: null,\n//   },\n// };\n\nconst defaultValues = {\n  metadata: {\n    name: 'example-name',\n  },\n};\n\nconst namespaceFormFactory = params => {\n  return WithCommonForm(CreateNamespaceComponent, params, defaultValues);\n};\n\nconst CreateNamespaceComponent: React.FC<NamespaceFormProps> = props => {\n  const { control } = useFormContext();\n  return (\n    <Section label=\"Labels\" id=\"label\" description=\"이것은 Label입니다.\">\n      <Controller name=\"metadata.labels\" id=\"label\" labelClassName=\"co-text-sample\" as={SelectorInput} control={control} tags={[]} />\n    </Section>\n    /* <div className=\"form-group\">\n      <label htmlFor=\"network-policy\" className=\"control-label\">\n        Default Network Policy\n              </label>\n      <div className=\"modal-body__field \">\n        <Dropdown\n          selectedKey={this.state.np}\n          items={defaultNetworkPolicies}\n          dropDownClassName=\"dropdown--full-width\"\n          id=\"dropdown-selectbox\"\n          onChange={(np) => this.setState({ np })}\n        />\n      </div>\n    </div> */\n  );\n};\n\nexport const CreateNamespace: React.FC<CreateNamespaceProps> = props => {\n  const formComponent = namespaceFormFactory(props.match.params);\n  const NamespaceFormComponent = formComponent;\n  return <NamespaceFormComponent fixed={{}} explanation={''} titleVerb=\"Create\" onSubmitCallback={onSubmitCallback} isCreate={true} />;\n};\n\nexport const onSubmitCallback = data => {\n  let labels = SelectorInput.objectify(data.metadata.labels);\n  delete data.metadata.labels;\n  data = _.defaultsDeep(data, { metadata: { labels: labels } });\n  return data;\n};\n\ntype CreateNamespaceProps = {\n  match: RMatch<{\n    type?: string;\n  }>;\n  fixed: object;\n  explanation: string;\n  titleVerb: string;\n  saveButtonText?: string;\n  isCreate: boolean;\n};\n\ntype NamespaceFormProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n  isCreate: boolean;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nconst Node = ({ className, children, description }) => (\n  <div className={className}>\n    <div>{children}</div>\n    <p className=\"help-block\">{description}</p>\n  </div>\n);\n\nconst CombineNodes = (id, label, description, children, isRequired) => {\n  // children node 개수에 따라 가로 분할 class 적용\n  let isArray = Array.isArray(children);\n  let className = isArray ? `col-md-${12 / children.length}` : 'col-md-12';\n  return isArray ? children.map(cur => <Node className={className} children={cur} description={description} />) : <Node className={className} children={children} description={description} />;\n};\n\nexport const Section: React.FC<SectionProps> = ({ id, label, description, children, isRequired = false }) => {\n  let result = CombineNodes(id, label, description, children, isRequired);\n  return (\n    <div className=\"form-group\">\n      <label className={'control-label ' + (isRequired ? 'co-required' : '')} htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"row\">{result}</div>\n    </div>\n  );\n};\n\ntype SectionProps = {\n  id: string;\n  children: Array<React.ReactNode> | React.ReactNode;\n  label?: string;\n  description?: string;\n  isRequired?: boolean;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAMA;AAIA;AACA;AACA;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;AAaA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAGA;;;;;A","sourceRoot":""}