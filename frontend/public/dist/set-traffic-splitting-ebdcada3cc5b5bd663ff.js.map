{"version":3,"file":"set-traffic-splitting-ebdcada3cc5b5bd663ff.js","sources":["webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficSplitting.tsx","webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficSplittingController.tsx","webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficSplittingFields.tsx","webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficSplittingModal.tsx","webpack:///./packages/knative-plugin/src/utils/traffic-splitting-utils.ts"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Formik, FormikValues, FormikHelpers } from 'formik';\nimport { K8sResourceKind, k8sUpdate } from '@console/internal/module/k8s';\nimport { ServiceModel } from '../../models';\nimport { getRevisionItems, constructObjForUpdate } from '../../utils/traffic-splitting-utils';\nimport TrafficSplittingModal from './TrafficSplittingModal';\n\nexport interface TrafficSplittingProps {\n  service: K8sResourceKind;\n  revisions: K8sResourceKind[];\n  cancel?: () => void;\n  close?: () => void;\n}\n\nexport interface TrafficSplittingType {\n  trafficSplitting: {\n    percent: number;\n    tag: string;\n    revisionName: string;\n  }[];\n}\n\nconst TrafficSplitting: React.FC<TrafficSplittingProps> = ({\n  service,\n  revisions,\n  cancel,\n  close,\n}) => {\n  const traffic = _.get(\n    service,\n    ['status', 'traffic'],\n    [{ percent: 0, tag: '', revisionName: '' }],\n  );\n  const revisionItems = getRevisionItems(revisions);\n  const initialValues: TrafficSplittingType = {\n    trafficSplitting: traffic.map((t) => ({\n      percent: t.percent,\n      tag: t.tag || '',\n      revisionName: t.revisionName || '',\n    })),\n  };\n  const handleSubmit = (values: FormikValues, action: FormikHelpers<FormikValues>) => {\n    const obj = constructObjForUpdate(values.trafficSplitting, service);\n    k8sUpdate(ServiceModel, obj)\n      .then(() => {\n        action.setSubmitting(false);\n        action.setStatus({ error: '' });\n        close();\n      })\n      .catch((err) => {\n        action.setStatus({ error: err.message || 'An error occurred. Please try again' });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={cancel}\n      initialStatus={{ error: '' }}\n    >\n      {(props) => (\n        <TrafficSplittingModal {...props} cancel={cancel} revisionItems={revisionItems} />\n      )}\n    </Formik>\n  );\n};\nexport default TrafficSplitting;\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Firehose, FirehoseResult } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport {\n  transformTrafficSplittingData,\n  knativeServingResourcesTrafficSplitting,\n} from '../../utils/traffic-splitting-utils';\nimport TrafficSplitting from './TrafficSplitting';\n\ntype ControllerProps = {\n  loaded?: boolean;\n  obj: K8sResourceKind;\n  resources?: {\n    configurations: FirehoseResult;\n    revisions: FirehoseResult;\n  };\n};\n\nconst Controller: React.FC<ControllerProps> = (props) => {\n  const { loaded, obj, resources } = props;\n  const revisions = transformTrafficSplittingData(obj, resources);\n  return loaded ? <TrafficSplitting {...props} service={obj} revisions={revisions} /> : null;\n};\n\ntype TrafficSplittingControllerProps = {\n  obj: K8sResourceKind;\n};\n\nconst TrafficSplittingController: React.FC<TrafficSplittingControllerProps> = (props) => {\n  const {\n    metadata: { namespace },\n  } = props.obj;\n  const resources = knativeServingResourcesTrafficSplitting(namespace);\n\n  return (\n    <Firehose resources={resources}>\n      <Controller {...props} />\n    </Firehose>\n  );\n};\n\ntype Props = TrafficSplittingControllerProps & ModalComponentProps;\n\nexport const trafficModalLauncher = createModalLauncher<Props>(TrafficSplittingController);\n\nexport default TrafficSplittingController;\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { MultiColumnField, InputField, DropdownField } from '@console/shared';\nimport { RevisionItems } from '../../utils/traffic-splitting-utils';\n\ninterface TrafficSplittingFieldProps {\n  revisionItems: RevisionItems;\n}\n\ntype Props = FormikProps<FormikValues> & TrafficSplittingFieldProps;\n\nconst TrafficSplittingFields: React.FC<Props> = ({ revisionItems, values }) => {\n  return (\n    <MultiColumnField\n      name=\"trafficSplitting\"\n      addLabel=\"Add Revision\"\n      headers={[{ name: 'Split', required: true }, 'Tag', { name: 'Revision', required: true }]}\n      emptyValues={{ percent: '', tag: '', revisionName: '' }}\n      disableDeleteRow={values.trafficSplitting.length === 1}\n      spans={[2, 3, 7]}\n    >\n      <InputField\n        name=\"percent\"\n        type={TextInputTypes.number}\n        style={{ maxWidth: '100%' }}\n        required\n      />\n      <InputField name=\"tag\" type={TextInputTypes.text} />\n      <DropdownField\n        name=\"revisionName\"\n        items={revisionItems}\n        title=\"Select a revision\"\n        fullWidth\n        required\n      />\n    </MultiColumnField>\n  );\n};\n\nexport default TrafficSplittingFields;\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport TrafficSplittingFields from './TrafficSplittingFields';\nimport { RevisionItems } from '../../utils/traffic-splitting-utils';\n\ninterface TrafficSplittingModalProps {\n  revisionItems: RevisionItems;\n}\n\ntype Props = FormikProps<FormikValues> & TrafficSplittingModalProps & ModalComponentProps;\n\nconst TrafficSplittingModal: React.FC<Props> = (props) => {\n  const { handleSubmit, cancel, isSubmitting, status } = props;\n  return (\n    <form className=\"modal-content\" onSubmit={handleSubmit}>\n      <ModalTitle>Set Traffic Distribution</ModalTitle>\n      <ModalBody>\n        <p>Set traffic distribution for the Revisions of the Knative Service</p>\n        <TrafficSplittingFields {...props} />\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={isSubmitting}\n        submitText=\"Save\"\n        cancel={cancel}\n        errorMessage={status.error}\n      />\n    </form>\n  );\n};\n\nexport default TrafficSplittingModal;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { getKnativeServiceData } from '../topology/knative-topology-utils';\nimport {\n  knativeServingResourcesRevision,\n  knativeServingResourcesConfigurations,\n} from './get-knative-resources';\n\nexport type RevisionItems = { [name: string]: string };\n\nexport const getRevisionItems = (revisions: K8sResourceKind[]): RevisionItems => {\n  return revisions.reduce((acc, currValue) => {\n    acc[currValue.metadata.name] = currValue.metadata.name;\n    return acc;\n  }, {} as RevisionItems);\n};\n\nexport const constructObjForUpdate = (traffic, service) => {\n  const obj = _.omit(service, 'status');\n  return {\n    ...obj,\n    spec: { ...obj.spec, traffic },\n  };\n};\n\nexport const transformTrafficSplittingData = (\n  obj: K8sResourceKind,\n  resources,\n): K8sResourceKind[] => {\n  const { revisions } = getKnativeServiceData(obj, resources);\n  return revisions;\n};\n\nexport const knativeServingResourcesTrafficSplitting = (namespace: string): FirehoseResource[] => [\n  ...knativeServingResourcesRevision(namespace),\n  ...knativeServingResourcesConfigurations(namespace),\n];\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;AAEA;AAEA;AAGA;AAIA;AAEA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AASA;AACA;AASA;AAMA;AACA;AASA;AAEA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAQA;AAEA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;A","sourceRoot":""}