{"version":3,"file":"35-fc8765d500709ea304b3.js","sources":["webpack:///./packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostNICs.tsx","webpack:///./packages/metal3-plugin/src/components/baremetal-nodes/NICsPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { OutlinedCheckSquareIcon, OutlinedSquareIcon } from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Table, TableRow, TableData, RowFunction } from '@console/internal/components/factory';\nimport { getHostNICs } from '../../selectors';\nimport { BareMetalHostNIC, BareMetalHostKind } from '../../types';\n\nconst NICsTableHeader = () => [\n  { title: 'Name', sortField: 'name', transforms: [sortable] },\n  { title: 'Model', sortField: 'model', transforms: [sortable] },\n  { title: 'PXE', sortField: 'pxe', transforms: [sortable] },\n  { title: 'IP', sortField: 'ip', transforms: [sortable] },\n  { title: 'Speed', sortField: 'speedGbps', transforms: [sortable] },\n  { title: 'MAC Address', sortField: 'mac', transforms: [sortable] },\n  { title: 'VLAN ID', sortField: 'vlanId', transforms: [sortable] },\n];\n\nconst NICsTableRow: RowFunction<BareMetalHostNIC> = ({ obj: nic, index, key, style }) => {\n  const { ip, mac, model, name, pxe, speedGbps, vlanId } = nic;\n  return (\n    <TableRow id={ip} index={index} trKey={key} style={style}>\n      <TableData>{name}</TableData>\n      <TableData>{model}</TableData>\n      <TableData>{pxe ? <OutlinedCheckSquareIcon /> : <OutlinedSquareIcon />}</TableData>\n      <TableData>{ip}</TableData>\n      <TableData>{speedGbps} Gbps</TableData>\n      <TableData>{mac}</TableData>\n      <TableData>{vlanId}</TableData>\n    </TableRow>\n  );\n};\n\ntype BareMetalHostNICsProps = {\n  obj: BareMetalHostKind;\n  loadError?: any;\n};\n\nconst BareMetalHostNICs: React.FC<BareMetalHostNICsProps> = ({ obj: host, loadError }) => {\n  const nics = getHostNICs(host);\n  return (\n    <div className=\"co-m-list\">\n      <div className=\"co-m-pane__body\">\n        <Table\n          data={nics}\n          aria-label=\"Bare Metal Host NICs\"\n          Header={NICsTableHeader}\n          Row={NICsTableRow}\n          loaded={!!host}\n          loadError={loadError}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BareMetalHostNICs;\n","import * as React from 'react';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { BareMetalHostKind } from '../../types';\nimport { BareMetalHostModel } from '../../models';\nimport { getNodeMachineName, createBasicLookup } from '@console/shared';\nimport { getHostMachineName } from '../../selectors';\nimport BareMetalHostNICs from '../baremetal-hosts/BareMetalHostNICs';\nimport { referenceForModel, NodeKind } from '@console/internal/module/k8s';\nimport { PageComponentProps } from '@console/internal/components/utils';\n\nconst bareMetalHosts = {\n  kind: referenceForModel(BareMetalHostModel),\n  namespaced: true,\n  isList: true,\n};\n\nconst NICsPage: React.FC<PageComponentProps<NodeKind>> = ({ obj }) => {\n  const [hosts, loaded, loadError] = useK8sWatchResource<BareMetalHostKind[]>(bareMetalHosts);\n  let host: BareMetalHostKind;\n  if (loaded) {\n    const hostsByMachineName = createBasicLookup(hosts, getHostMachineName);\n    host = hostsByMachineName[getNodeMachineName(obj)];\n  }\n  return <BareMetalHostNICs obj={host} loadError={loadError} />;\n};\n\nexport default NICsPage;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAOA;AACA;AACA;AAEA;AACA;AAWA;AAEA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}