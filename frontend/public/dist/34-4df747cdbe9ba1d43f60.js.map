{"version":3,"file":"34-4df747cdbe9ba1d43f60.js","sources":["webpack:///./packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostDisks.tsx","webpack:///./packages/metal3-plugin/src/components/baremetal-nodes/DisksPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { Table, TableRow, TableData, RowFunction } from '@console/internal/components/factory';\nimport { humanizeDecimalBytes } from '@console/internal/components/utils';\nimport { getHostStorage } from '../../selectors';\nimport { BareMetalHostDisk, BareMetalHostKind } from '../../types';\n\nconst DisksTableHeader = () => [\n  { title: 'Name', sortField: 'name', transforms: [sortable] },\n  { title: 'Size', sortField: 'sizeBytes', transforms: [sortable] },\n  { title: 'Type', sortField: 'rotational', transforms: [sortable] },\n  { title: 'Model', sortField: 'model', transforms: [sortable] },\n  { title: 'Serial Number', sortField: 'serialNumber', transforms: [sortable] },\n  { title: 'Vendor', sortField: 'vendor', transforms: [sortable] },\n  { title: 'HCTL', sortField: 'hctl', transforms: [sortable] },\n];\n\nconst DisksTableRow: RowFunction<BareMetalHostDisk> = ({ obj, index, key, style }) => {\n  const { hctl, model, name, rotational, serialNumber, sizeBytes, vendor } = obj;\n  const { string: size } = humanizeDecimalBytes(sizeBytes);\n  return (\n    <TableRow id={name} index={index} trKey={key} style={style}>\n      <TableData>{name}</TableData>\n      <TableData>{size}</TableData>\n      <TableData>{rotational ? 'Rotational' : 'SSD'}</TableData>\n      <TableData>{model}</TableData>\n      <TableData>{serialNumber}</TableData>\n      <TableData>{vendor}</TableData>\n      <TableData>{hctl}</TableData>\n    </TableRow>\n  );\n};\n\ntype BareMetalHostDisksProps = {\n  obj: BareMetalHostKind;\n  loadError?: any;\n};\n\nconst BareMetalHostDisks: React.FC<BareMetalHostDisksProps> = ({ obj: host, loadError }) => {\n  const disks = getHostStorage(host);\n  return (\n    <div className=\"co-m-list\">\n      <div className=\"co-m-pane__body\">\n        <Table\n          data={disks}\n          aria-label=\"Bare Metal Host Disks\"\n          Header={DisksTableHeader}\n          Row={DisksTableRow}\n          loaded={!!host}\n          loadError={loadError}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BareMetalHostDisks;\n","import * as React from 'react';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { BareMetalHostKind } from '../../types';\nimport { BareMetalHostModel } from '../../models';\nimport { getNodeMachineName, createBasicLookup } from '@console/shared';\nimport { getHostMachineName } from '../../selectors';\nimport BareMetalHostDisks from '../baremetal-hosts/BareMetalHostDisks';\nimport { referenceForModel, NodeKind } from '@console/internal/module/k8s';\nimport { PageComponentProps } from '@console/internal/components/utils';\n\nconst bareMetalHosts = {\n  kind: referenceForModel(BareMetalHostModel),\n  namespaced: true,\n  isList: true,\n};\n\nconst DisksPage: React.FC<PageComponentProps<NodeKind>> = ({ obj }) => {\n  const [hosts, loaded, loadError] = useK8sWatchResource<BareMetalHostKind[]>(bareMetalHosts);\n  let host: BareMetalHostKind;\n  if (loaded) {\n    const hostsByMachineName = createBasicLookup(hosts, getHostMachineName);\n    host = hostsByMachineName[getNodeMachineName(obj)];\n  }\n  return <BareMetalHostDisks obj={host} loadError={loadError} />;\n};\n\nexport default DisksPage;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AAEA;AACA;AAWA;AAEA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}