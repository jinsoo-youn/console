{"version":3,"file":"console-app-ebfee20d820a0f19db72.js","sources":["webpack:///./packages/console-app/src/components/dashboards-page/ClusterUpdateActivity.tsx","webpack:///./packages/console-app/src/components/dashboards-page/ControlPlaneStatus.tsx","webpack:///./packages/console-app/src/components/dashboards-page/OperatorStatus.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ClusterVersionKind } from '@console/internal/module/k8s';\nimport ActivityItem from '@console/shared/src/components/dashboard/activity-card/ActivityItem';\n\nconst getVersion = (cv: ClusterVersionKind) =>\n  cv && cv.status.history[0] ? cv.status.history[0].version : null;\n\nconst ClusterUpdateActivity: React.FC<ClusterUpdateActivityProps> = React.memo(\n  ({ resource }) => <ActivityItem>{`Updating cluster to ${getVersion(resource)}`}</ActivityItem>,\n  (prevProps, newProps) => getVersion(prevProps.resource) === getVersion(newProps.resource),\n);\n\nexport default ClusterUpdateActivity;\n\ntype ClusterUpdateActivityProps = {\n  resource: ClusterVersionKind;\n};\n","import * as React from 'react';\nimport { HealthState, healthStateMapping } from '@console/shared/src/components/dashboard/status-card/states';\nimport { getControlPlaneComponentHealth } from './status';\nimport Status, { StatusPopupSection } from '@console/shared/src/components/dashboard/status-card/StatusPopup';\nimport { PrometheusHealthPopupProps } from '@console/plugin-sdk';\nimport { useTranslation } from 'react-i18next';\n\nconst ControlPlanePopup: React.FC<PrometheusHealthPopupProps> = ({ responses }) => {\n  const { t } = useTranslation();\n  const titles = [t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APISERVERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_CONTROLLER_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_SCHEDULERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APIREQUEST_1')];\n  return (\n    <>\n      {t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_DESCRIPTION_1')}\n      <StatusPopupSection firstColumn={t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_COMPONENTS_1')} secondColumn={t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_RESPONCERATE_1')}>\n        {responses.map(({ response, error }, index) => {\n          const health = getControlPlaneComponentHealth(response, error);\n          const icon = health.state === HealthState.LOADING ? <div className=\"skeleton-health\" /> : healthStateMapping[health.state].icon;\n          const value = health.message || healthStateMapping[health.state]?.message;\n          return (\n            <Status key={titles[index]} value={value} icon={icon}>\n              {titles[index]}\n            </Status>\n          );\n        })}\n      </StatusPopupSection>\n    </>\n  );\n};\n\nexport default ControlPlanePopup;\n","import * as React from 'react';\nimport { referenceForModel, ClusterOperator } from '@console/internal/module/k8s';\nimport { ClusterOperatorModel } from '@console/internal/models';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { OperatorRowProps } from '@console/plugin-sdk';\nimport Status from '@console/shared/src/components/dashboard/status-card/StatusPopup';\n\nconst ClusterOperatorStatusRow: React.FC<OperatorRowProps<ClusterOperator>> = ({\n  operatorStatus,\n}) => (\n  <Status value={operatorStatus.status.title} icon={operatorStatus.status.icon}>\n    <ResourceLink\n      kind={referenceForModel(ClusterOperatorModel)}\n      name={operatorStatus.operators[0].metadata.name}\n      hideIcon\n      className=\"co-status-popup__title\"\n    />\n  </Status>\n);\n\nexport default ClusterOperatorStatusRow;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AAKA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAKA;AAIA;AAEA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AASA;;;;;A","sourceRoot":""}