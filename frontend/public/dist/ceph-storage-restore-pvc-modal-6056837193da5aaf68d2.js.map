{"version":3,"file":"ceph-storage-restore-pvc-modal-6056837193da5aaf68d2.js","sources":["webpack:///./packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/_restore-pvc-modal.scss?20ce","webpack:///./packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/restore-pvc-modal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin","import './_restore-pvc-modal.scss';\n\nimport * as React from 'react';\n\nimport { Form, FormGroup, Grid, GridItem, TextInput } from '@patternfly/react-core';\nimport {\n  HandlePromiseProps,\n  ResourceIcon,\n  withHandlePromise,\n} from '@console/internal/components/utils/index';\nimport { K8sResourceKind, k8sCreate, k8sGet } from '@console/internal/module/k8s';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '@console/internal/components/factory';\nimport { NamespaceModel, PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getName, getNamespace } from '@console/shared';\n\nimport { VolumeSnapshotModel } from '../../../models';\n\nexport const RestorePVCModal = withHandlePromise((props: RestorePVCModalProps) => {\n  const { close, cancel, resource, errorMessage, inProgress, handlePromise } = props;\n  const [pvcResource, setResource] = React.useState(null);\n  const [restorePVCName, setPVCName] = React.useState(`${getName(resource) || 'pvc'}-restore`);\n\n  React.useEffect(() => {\n    k8sGet(\n      PersistentVolumeClaimModel,\n      resource?.spec?.source?.persistentVolumeClaimName,\n      getNamespace(resource),\n    )\n      .then(setResource)\n      .catch((error) => {\n        setResource(null);\n        throw error;\n      });\n  }, [resource]);\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    const snapshotName = getName(resource);\n    const pvcSize = resource?.status?.restoreSize;\n    const accessModes = pvcResource?.spec?.accessModes;\n    const pvcStorageClass = pvcResource?.spec?.storageClassName;\n    const namespace = getNamespace(resource);\n    const restorePVCTemplate: K8sResourceKind = {\n      apiVersion: PersistentVolumeClaimModel.apiVersion,\n      kind: PersistentVolumeClaimModel.kind,\n      metadata: {\n        name: restorePVCName,\n      },\n      spec: {\n        storageClassName: pvcStorageClass,\n        dataSource: {\n          name: snapshotName,\n          kind: VolumeSnapshotModel.kind,\n          apiGroup: 'snapshot.storage.k8s.io',\n        },\n        accessModes,\n        resources: {\n          requests: {\n            storage: pvcSize,\n          },\n        },\n      },\n    };\n    handlePromise(k8sCreate(PersistentVolumeClaimModel, restorePVCTemplate, { ns: namespace }))\n      .then(close)\n      .catch((error) => {\n        throw error;\n      });\n  };\n\n  return (\n    <div className=\"modal-content modal-content--no-inner-scroll\">\n      <ModalTitle>Restore</ModalTitle>\n      <Form onSubmit={submit} name=\"form\">\n        <ModalBody>\n          <p>After restore action is finished, a new PVC will be created.</p>\n          <FormGroup label=\"Name\" isRequired fieldId=\"restore-pvc-modal__name\">\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"restore-pvc-modal__name\"\n              name=\"restore-pvc-modal__name\"\n              value={restorePVCName}\n              onChange={setPVCName}\n            />\n          </FormGroup>\n          <div className=\"ceph-restore-pvc-modal__details-section\">\n            <Grid gutter=\"md\">\n              <GridItem span={6}>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Date</p>\n                  <p data-test-id=\"snapshot-name\">{resource?.metadata?.creationTimestamp}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Status</p>\n                  <p data-test-id=\"snapshot-status\">\n                    {resource?.status?.readyToUse ? 'Ready' : 'Not Ready'}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Size</p>\n                  <p data-test-id=\"snapshot-size\">{resource?.status?.restoreSize || 'No Data'}</p>\n                </div>\n              </GridItem>\n              <GridItem span={6}>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Namespace</p>\n                  <p>\n                    <ResourceIcon kind={NamespaceModel.kind} />\n                    <span data-test-id=\"snapshot-ns\">{getNamespace(resource)}</span>\n                  </p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">API Version</p>\n                  <p data-test-id=\"snapshot-apiversion\">{resource?.apiVersion}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Persistent Volume Claim</p>\n                  <ResourceIcon kind={PersistentVolumeClaimModel.kind} />\n                  <span data-test-id=\"snapshot-source\">\n                    {resource?.spec?.source?.persistentVolumeClaimName}\n                  </span>\n                </div>\n              </GridItem>\n            </Grid>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={inProgress}\n          errorMessage={errorMessage}\n          submitText=\"Restore\"\n          cancel={cancel}\n        />\n      </Form>\n    </div>\n  );\n});\n\nexport type RestorePVCModalProps = {\n  resource: K8sResourceKind;\n} & HandlePromiseProps &\n  ModalComponentProps;\n\nexport default createModalLauncher(RestorePVCModal);\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAKA;AACA;AAOA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AAEA;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AASA;AAOA;;;;;A","sourceRoot":""}