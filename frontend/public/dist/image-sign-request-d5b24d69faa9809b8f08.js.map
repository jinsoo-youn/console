{"version":3,"file":"image-sign-request-d5b24d69faa9809b8f08.js","sources":["webpack:///./public/components/hypercloud/IR.scss?5872","webpack:///./public/components/hypercloud/image-replicate.tsx","webpack:///./public/components/hypercloud/image-sign-request.tsx","webpack:///./public/components/hypercloud/signer-policy.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageReplicateModel, ExternalRegistryModel, RegistryModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nimport './IR.scss';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageReplicateModel), ...Kebab.factory.common];\n\nconst kind = ImageReplicateModel.kind;\nconst tableColumnClasses = ['', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), Kebab.columnClass];\n\nconst ImageReplicateTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_75'),\n      sortField: 'spec.fromImage.registryType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_89'),\n      sortField: 'spec.fromImage.registryName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_76'),\n      sortField: 'spec.toImage.registryType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_90'),\n      sortField: 'spec.toImage.registryName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ];\n};\n\nconst ImageReplicateTableRow: RowFunction<K8sResourceKind> = ({ obj: imagereplicate, index, key, style }) => {\n  let FROM_NAMESPACE_NAME = `${imagereplicate.spec.fromImage.registryName}(${imagereplicate.spec.fromImage.registryNamespace})`;\n  let TO_NAMESPACE_NAME = `${imagereplicate.spec.toImage.registryName}(${imagereplicate.spec.toImage.registryNamespace})`;\n  return (\n    <TableRow id={imagereplicate.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={imagereplicate.metadata.name} namespace={imagereplicate.metadata.namespace} title={imagereplicate.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={imagereplicate.metadata.namespace} title={imagereplicate.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={imagereplicate?.status?.state} />\n      </TableData>\n      {/* 소스 레지스트리 타입 */}\n      <TableData className={tableColumnClasses[3]}>{imagereplicate.spec.fromImage.registryType}</TableData>\n      {/* 소스 레지스트리 (네임스페이스/이름) */}\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceLink kind={ExternalRegistryModel.kind} name={imagereplicate.spec.fromImage.registryName} displayName={FROM_NAMESPACE_NAME} namespace={imagereplicate.spec.fromImage.registryNamespace} />\n      </TableData>\n      {/* 타겟 레지스트리 타입 */}\n      <TableData className={tableColumnClasses[5]}>{imagereplicate.spec.toImage.registryType}</TableData>\n      {/* 타겟 레지스트리 (네임스페이스/이름) */}\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceLink kind={RegistryModel.kind} name={imagereplicate.spec.toImage.registryName} displayName={TO_NAMESPACE_NAME} namespace={imagereplicate.spec.toImage.registryNamespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <Timestamp timestamp={imagereplicate.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={imagereplicate} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageReplicateStatus: React.FC<ImageReplicateStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageReplicateImageTable: React.FC<ResourcesProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  const rows = (\n    <div className=\"row\">\n      <div className=\"col-xs-6 col-sm-4 col-md-4\">{ds.spec.fromImage.image}</div>\n      <div className=\"col-xs-6 col-sm-4 col-md-4\">{ds.spec.toImage.image}</div>\n    </div>\n  );\n\n  return (\n    <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n      <div className=\"row co-m-table-grid__head\">\n        <div className=\"col-xs-6 col-sm-4 col-md-4\">{t('COMMON:MSG_DETAILS_TABDETAILS_11')}</div>\n        <div className=\"col-xs-6 col-sm-4 col-md-4\">{t('COMMON:MSG_DETAILS_TABDETAILS_13')}</div>\n      </div>\n      <div className=\"co-m-table-grid__body\">{rows}</div>\n    </div>\n  );\n};\n\nexport type ResourcesProps = {\n  ds: any;\n};\n\nexport const ImageReplicateDetailsList: React.FC<ImageReplicateDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  let FROM_NAMESPACE_NAME = `${ds.spec.fromImage.registryName}(${ds.spec.fromImage.registryNamespace})`;\n  let TO_NAMESPACE_NAME = `${ds.spec.toImage.registryName}(${ds.spec.toImage.registryNamespace})`;\n  let isSigner = ds.spec?.signer;\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      {/* 상태 */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_3')}</dt>\n      <dd>\n        <ImageReplicateStatus result={ds?.status?.state} />\n      </dd>\n      {/* 소스 레지스트리 타입 */}\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_49')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec.fromImage.registryType}</dd>\n      {/* 소스 레지스트리 (네임스페이스/이름) */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_89')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>\n        <ResourceLink kind={ExternalRegistryModel.kind} name={ds.spec.fromImage.registryName} displayName={FROM_NAMESPACE_NAME} title={FROM_NAMESPACE_NAME} namespace={ds.spec.fromImage.registryNamespace} />\n      </dd>\n      {/* 타겟 레지스트리 타입 */}\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_51')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec.toImage.registryType}</dd>\n      {/* 타겟 레지스트리 (네임스페이스/이름) */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_90')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>\n        <ResourceLink kind={RegistryModel.kind} name={ds.spec.toImage.registryName} displayName={TO_NAMESPACE_NAME} title={TO_NAMESPACE_NAME} namespace={ds.spec.toImage.registryNamespace} />\n      </dd>\n      {/* 서명자 */}\n      {isSigner && (\n        <>\n          <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_SIGNERS_1')}</dt>\n          <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec?.signer}</dd>\n        </>\n      )}\n    </dl>\n  );\n};\n\nconst ImageReplicateDetails: React.FC<ImageReplicateDetailsProps> = ({ obj: imagereplicate }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(imagereplicate, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={imagereplicate} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageReplicateDetailsList ds={imagereplicate} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={`${t('COMMON:MSG_DETAILS_TABDETAILS_5')}`} />\n        <ImageReplicateImageTable ds={imagereplicate} />\n      </div>\n    </>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nImageReplicateTableHeader.displayName = 'ImageReplicateTableHeader';\n\nexport const ImageReplicates: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table {...props} aria-label=\"ImageReplicates\" Header={ImageReplicateTableHeader.bind(null, t)} Row={ImageReplicateTableRow} virtualize />;\n};\n\nexport const ImageReplicatesPage: React.FC<ImageReplicatesPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_93')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_93') })} canCreate={true} ListComponent={ImageReplicates} kind={kind} {...props} />;\n};\n\nexport const ImageReplicatesDetailsPage: React.FC<ImageReplicatesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageReplicateDetails)), editYaml()]} />;\n\ntype ImageReplicateDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ImageReplicatesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageReplicateDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageReplicatesDetailsPageProps = {\n  match: any;\n};\ntype ImageReplicateStatusStatusProps = {\n  result: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageSignRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageSignRequestModel), ...Kebab.factory.common];\n\nconst kind = ImageSignRequestModel.kind;\n\nconst tableColumnClasses = ['', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ImageSignRequestTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.imageSignResponse.result',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n      sortField: 'spec.image',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_74'),\n      sortField: 'spec.signer',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nImageSignRequestTableHeader.displayName = 'ImageSignRequestTableHeader';\n\nconst ImageSignRequestTableRow: RowFunction<K8sResourceKind> = ({ obj: signrequest, index, key, style }) => {\n  return (\n    <TableRow id={signrequest.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={signrequest.metadata.name} namespace={signrequest.metadata.namespace} title={signrequest.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={signrequest.metadata.namespace} title={signrequest.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={signrequest?.status?.imageSignResponse?.result} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{signrequest?.spec?.image}</TableData>\n      <TableData className={tableColumnClasses[4]}>{signrequest?.spec?.signer}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={signrequest.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={signrequest} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageSignRequestStatus: React.FC<ImageSignRequestStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageSignRequestDetailsList: React.FC<ImageSignRequestDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{`${t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_2')}`}</dt>\n      <dd>\n        <ImageSignRequestStatus result={ds.status.imageSignResponse.result} />\n      </dd>\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_3')}`} obj={ds} path=\"spec.image\" />\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_SIGNERS_1')}`} obj={ds} path=\"spec.signer\" />\n    </dl>\n  );\n}\n\nconst ImageSignRequestDetails: React.FC<ImageSignRequestDetailsProps> = ({ obj: signrequest }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(signrequest, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={signrequest} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageSignRequestDetailsList ds={signrequest} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const ImageSignRequests: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"ImageSignRequests\" Header={ImageSignRequestTableHeader.bind(null, t)} Row={ImageSignRequestTableRow} virtualize />;\n};\n\nexport const ImageSignRequestsPage: React.FC<ImageSignRequestsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_92')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_92') })}\n    canCreate={true}\n    ListComponent={ImageSignRequests}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const ImageSignRequestsDetailsPage: React.FC<ImageSignRequestsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageSignRequestDetails)), editYaml()]} />;\n\ntype ImageSignRequestDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ImageSignRequestsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageSignRequestDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageSignRequestsDetailsPageProps = {\n  match: any;\n};\ntype ImageSignRequestStatusStatusProps = {\n  result: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { SignerPolicyModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { ImageSignersPage } from './image-signer';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(SignerPolicyModel), ...Kebab.factory.common];\n\nconst kind = SignerPolicyModel.kind;\n\nconst tableColumnClasses = ['', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst SignerPolicyTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_74'),\n      sortField: 'status.imageSignResponse.result',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nSignerPolicyTableHeader.displayName = 'SignerPolicyTableHeader';\n\nconst SignerPolicyTableRow: RowFunction<K8sResourceKind> = ({ obj: signerpolicy, index, key, style }) => {\n  return (\n    <TableRow id={signerpolicy.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={signerpolicy.metadata.name} namespace={signerpolicy.metadata.namespace} title={signerpolicy.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={signerpolicy.metadata.namespace} title={signerpolicy.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{signerpolicy?.spec?.signers?.length}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={signerpolicy.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={signerpolicy} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const SignerPolicyStatus: React.FC<SignerPolicyStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nconst SignerPolicyDetails: React.FC<SignerPolicyDetailsProps> = ({ obj: signerpolicy }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(signerpolicy, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={signerpolicy} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\" style={{ paddingLeft: '0px' }}>\n        <ImageSignersPage isDetailPage={true} />\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const SignerPolicies: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table {...props} aria-label=\"SignerPolicies\" Header={SignerPolicyTableHeader.bind(null, t)} Row={SignerPolicyTableRow} virtualize />;\n}\n\nexport const SignerPoliciesPage: React.FC<SignerPoliciesPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_96')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_96') })}\n    canCreate={true}\n    ListComponent={SignerPolicies}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const SignerPoliciesDetailsPage: React.FC<SignerPoliciesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(SignerPolicyDetails)), editYaml()]} />;\n\ntype SignerPoliciesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype SignerPolicyDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype SignerPoliciesDetailsPageProps = {\n  match: any;\n};\ntype SignerPolicyStatusStatusProps = {\n  result: string;\n};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAGA;AAMA;;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;AC3NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAQA;AAEA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAQA;AAEA;;;;;A","sourceRoot":""}