{"version":3,"file":"cluster-service-plan-5b94619f8fd542f36b00.js","sources":["webpack:///./public/components/cluster-service-plan.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { SectionHeading, detailsPage, navFactory, ResourceLink, ResourceSummary } from './utils';\nimport { K8sResourceKind, referenceForModel, servicePlanDisplayName } from '../module/k8s';\nimport {\n  ClusterServicePlanModel,\n  ClusterServiceBrokerModel,\n  ClusterServiceClassModel,\n} from '../models';\nimport { viewYamlComponent } from './utils/horizontal-nav';\n\nconst tableColumnClasses = [\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'hidden-xs'),\n];\n\nconst ClusterServicePlanTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'External Name',\n      sortField: 'spec.externalName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Broker',\n      sortField: 'spec.clusterServiceBrokerName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n  ];\n};\nClusterServicePlanTableHeader.displayName = 'ClusterServicePlanTableHeader';\n\nconst ClusterServicePlanTableRow: RowFunction<K8sResourceKind> = ({\n  obj: servicePlan,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={servicePlan.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(ClusterServicePlanModel)}\n          name={servicePlan.metadata.name}\n          displayName={servicePlan.spec.externalName}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{servicePlan.spec.externalName}</TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <ResourceLink\n          kind={referenceForModel(ClusterServiceBrokerModel)}\n          name={servicePlan.spec.clusterServiceBrokerName}\n          title={servicePlan.spec.clusterServiceBrokerName}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterServicePlanDetails: React.SFC<ClusterServicePlanDetailsProps> = ({\n  obj: servicePlan,\n}) => {\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Service Plan Details\" />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <ResourceSummary resource={servicePlan} />\n        </div>\n        <div className=\"col-md-6\">\n          <dl className=\"co-m-pane__details\">\n            <dt>Description</dt>\n            <dd>{servicePlan.spec.description}</dd>\n            <dt>Broker</dt>\n            <dd>\n              <ResourceLink\n                kind={referenceForModel(ClusterServiceBrokerModel)}\n                name={servicePlan.spec.clusterServiceBrokerName}\n              />\n            </dd>\n            <dt>Service Class</dt>\n            <dd>\n              <ResourceLink\n                kind={referenceForModel(ClusterServiceClassModel)}\n                name={servicePlan.spec.clusterServiceClassRef.name}\n              />\n            </dd>\n            {servicePlan.status.removedFromBrokerCatalog && (\n              <>\n                <dt>Removed From Catalog</dt>\n                <dd>{servicePlan.status.removedFromBrokerCatalog}</dd>\n              </>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ClusterServicePlanDetailsPage: React.SFC<ClusterServicePlanDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    titleFunc={servicePlanDisplayName}\n    kind={referenceForModel(ClusterServicePlanModel)}\n    pages={[\n      navFactory.details(detailsPage(ClusterServicePlanDetails)),\n      navFactory.editYaml(viewYamlComponent),\n    ]}\n  />\n);\n\nexport const ClusterServicePlanList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Cluster Service Plans\"\n    Header={ClusterServicePlanTableHeader}\n    Row={ClusterServicePlanTableRow}\n    virtualize\n  />\n);\n\nexport const ClusterServicePlanPage: React.SFC<ClusterServicePlanPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={ClusterServicePlanList}\n    kind={referenceForModel(ClusterServicePlanModel)}\n    textFilter=\"service-plan\"\n    canCreate={false}\n  />\n);\n\nexport type ClusterServicePlanPageProps = {\n  showTitle?: boolean;\n  fieldSelector?: string;\n};\n\nexport type ClusterServicePlanDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ClusterServicePlanDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAMA;AACA;AACA;AAQA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAEA;AACA;AAQA;AAEA;AAQA;AACA;AACA;AAIA;AAUA;;;;;A","sourceRoot":""}