{"version":3,"file":"servicebinding-ed0c9aa058e44344f4ef.js","sources":["webpack:///./public/components/hypercloud/service-binding.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { ServiceBindingModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { Kebab, ResourceKebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\n\nconst kind = ServiceBindingModel.kind;\n\nexport const serviceBindingMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceBindingModel), common[0], common[1], common[3]];\n\nconst ServiceBindingDetails: React.FC<ServiceBindingDetailsProps> = ({ obj: serviceBinding }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceBinding, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={serviceBinding} showPodSelector showNodeSelector showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_105')}</dt>\n              <dd>\n                <ResourceLink kind=\"ServiceInstance\" name={serviceBinding.spec.instanceRef.name} namespace={serviceBinding.metadata.namespace} title={serviceBinding.spec.instanceRef.name} />\n              </dd>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_117')}</dt>\n              <dd>\n                <ResourceLink kind=\"Secret\" name={serviceBinding.spec.secretName} namespace={serviceBinding.metadata.namespace} title={serviceBinding.spec.secretName} />\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ServiceBindingDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ServiceBindingsDetailsPage: React.FC<ServiceBindingsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={serviceBindingMenuActions} pages={[details(ServiceBindingDetails), editYaml()]} />;\nServiceBindingsDetailsPage.displayName = 'ServiceBindingsDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // SERVICE INSTANCE\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), // SECRET\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n  Kebab.columnClass, // MENU ACTIONS\n];\n\nconst ServiceBindingTableRow = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <ResourceLink kind=\"ServiceInstance\" name={obj.spec.instanceRef.name} namespace={obj.metadata.namespace} title={obj.spec.instanceRef.name} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceLink kind=\"Secret\" name={obj.spec.secretName} namespace={obj.metadata.namespace} title={obj.spec.secretName} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={serviceBindingMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceBindingTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_105'),\n      sortField: 'spec.instanceRef.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_34'),\n      sortField: 'spec.secretName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nServiceBindingTableHeader.displayName = 'ServiceBindingTableHeader';\n\nconst ServiceBindingsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Service Binding\" Header={ServiceBindingTableHeader.bind(null, t)} Row={ServiceBindingTableRow} />;\n};\nServiceBindingsList.displayName = 'ServiceBindingsList';\n\nconst ServiceBindingsPage: React.FC<ServiceBindingsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_18')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_18') })} canCreate={true} kind={kind} ListComponent={ServiceBindingsList} {...props} />;\n};\nServiceBindingsPage.displayName = 'ServiceBindingsPage';\n\nexport { ServiceBindingsList, ServiceBindingsPage, ServiceBindingsDetailsPage };\n\ntype ServiceBindingsPageProps = {};\n\ntype ServiceBindingsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}