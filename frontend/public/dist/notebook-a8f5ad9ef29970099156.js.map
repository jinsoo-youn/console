{"version":3,"file":"notebook-a8f5ad9ef29970099156.js","sources":["webpack:///./public/components/hypercloud/notebook.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { NotebookModel } from '../../models';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(NotebookModel), ...Kebab.factory.common, Kebab.factory.Connect];\n\nconst kind = NotebookModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), Kebab.columnClass];\n\nconst NotebookTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n      sortField: 'spec.template.spec.containers[0].image',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nNotebookTableHeader.displayName = 'NotebookTableHeader';\n\nconst NotebookTableRow: RowFunction<K8sResourceKind> = ({ obj: notebook, index, key, style }) => {\n  return (\n    <TableRow id={notebook.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={notebook.metadata.name} namespace={notebook.metadata.namespace} title={notebook.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={notebook.metadata.namespace} title={notebook.metadata.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        {notebook.spec.template.spec.containers[0].image}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={notebook} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const NotebookDetailsList: React.FC<NotebookDetailsListProps> = ({ notebook }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_45')} obj={notebook} path=\"status.status\" />\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_5')} obj={notebook} path=\"spec.template.spec.containers[0].image\" />\n    </dl>\n  );\n}\n\nconst NotebookDetails: React.FC<NotebookDetailsProps> = ({ obj: notebook }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(notebook, t) })}/>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={notebook} />\n          </div>\n          <div className=\"col-lg-6\">\n            <NotebookDetailsList notebook={notebook} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\nexport const Notebooks: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Notebooks\" Header={NotebookTableHeader.bind(null, t)} Row={NotebookTableRow} virtualize />;\n}\n\nexport const NotebooksPage: React.FC<NotebooksPageProps> = props => <ListPage canCreate={true} ListComponent={Notebooks} kind={kind} {...props} />;\n\nexport const NotebooksDetailsPage: React.FC<NotebooksDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(NotebookDetails)), editYaml()]} />;\n\ntype NotebookDetailsListProps = {\n  notebook: K8sResourceKind;\n};\n\ntype NotebookDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype NotebooksPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype NotebooksDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;A","sourceRoot":""}