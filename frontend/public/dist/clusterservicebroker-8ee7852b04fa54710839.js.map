{"version":3,"file":"clusterservicebroker-8ee7852b04fa54710839.js","sources":["webpack:///./public/components/hypercloud/cluster-service-broker.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ClusterServiceBrokerModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst kind = ClusterServiceBrokerModel.kind;\n\nexport const clusterServiceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterServiceBrokerModel), ...common];\nconst ClusterServiceBrokerDetails: React.FC<ClusterServiceBrokerDetailsProps> = ({ obj: clusterServiceBroker }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(clusterServiceBroker, t)})} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={clusterServiceBroker} showPodSelector showNodeSelector></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={clusterServiceBroker} path=\"status.phase\">\n                <Status status={ClusterServiceBrokerPhase(clusterServiceBroker)} />\n              </DetailsItem>\n              <dt>URL</dt>\n              <dd>{clusterServiceBroker.spec.url}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ClusterServiceBrokerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ClusterServiceBrokersDetailsPage: React.FC<ClusterServiceBrokersDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={clusterServiceBrokerMenuActions} pages={[details(ClusterServiceBrokerDetails), editYaml()]} />;\nClusterServiceBrokersDetailsPage.displayName = 'ClusterServiceBrokersDetailsPage';\n\nconst tableColumnClasses = ['', '', '', '', ''];\n\nconst ClusterServiceBrokerPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'Ready') {\n        if (cur.status === 'True') {\n          phase = 'Running';\n        } else {\n          phase = 'Error';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst ClusterServiceBrokerTableRow = ({ obj, index, key, style }) => {\n  let phase = ClusterServiceBrokerPhase(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{obj.spec.url}</TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={clusterServiceBrokerMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterServiceBrokerTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_4'),\n      sortField: 'spec.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'ServiceBrokerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nClusterServiceBrokerTableHeader.displayName = 'ClusterServiceBrokerTableHeader';\n\nconst ClusterServiceBrokersList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Cluster Service Broker\" Header={ClusterServiceBrokerTableHeader.bind(null, t)} Row={ClusterServiceBrokerTableRow} virtualize />;\n};\nClusterServiceBrokersList.displayName = 'ClusterServiceBrokersList';\n\nconst ClusterServiceBrokersPage: React.FC<ClusterServiceBrokersPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_14')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_14') })} canCreate={true} kind={kind} ListComponent={ClusterServiceBrokersList} {...props} />;\n};\nClusterServiceBrokersPage.displayName = 'ClusterServiceBrokersPage';\n\nexport { ClusterServiceBrokersList, ClusterServiceBrokersPage, ClusterServiceBrokersDetailsPage };\n\ntype ClusterServiceBrokersPageProps = {};\n\ntype ClusterServiceBrokersDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}