{"version":3,"file":"configure-machine-autoscaler-modal-cdaa1cfd693919eef0a5.js","sources":["webpack:///./public/components/modals/configure-machine-autoscaler-modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { MachineAutoscalerModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { history, NumberSpinner, PromiseComponent, resourcePathFromModel } from '../utils';\nimport { k8sCreate, K8sResourceKind } from '../../module/k8s';\n\nexport class ConfigureMachineAutoscalerModal extends PromiseComponent<\n  ConfigureMachineAutoscalerModalProps,\n  ConfigureMachineAutoscalerModalState\n> {\n  readonly state: ConfigureMachineAutoscalerModalState = {\n    inProgress: false,\n    errorMessage: '',\n    minReplicas: 1,\n    maxReplicas: 12,\n  };\n\n  changeMinReplicas = (event) => {\n    const minReplicas = _.toInteger(event.target.value);\n    this.setState({ minReplicas });\n  };\n\n  changeMinReplicasBy = (operation) => {\n    const minReplicas = this.state.minReplicas + operation;\n    this.setState({ minReplicas });\n  };\n\n  changeMaxReplicas = (event) => {\n    const maxReplicas = _.toInteger(event.target.value);\n    this.setState({ maxReplicas });\n  };\n\n  changeMaxReplicasBy = (operation) => {\n    const maxReplicas = this.state.maxReplicas + operation;\n    this.setState({ maxReplicas });\n  };\n\n  createAutoscaler = (): Promise<K8sResourceKind> => {\n    const {\n      apiVersion,\n      kind,\n      metadata: { name, namespace },\n    } = this.props.machineSet;\n    const { minReplicas, maxReplicas } = this.state;\n\n    const machineAutoscaler = {\n      apiVersion: 'autoscaling.openshift.io/v1beta1',\n      kind: 'MachineAutoscaler',\n      metadata: {\n        name,\n        namespace,\n      },\n      spec: {\n        minReplicas,\n        maxReplicas,\n        scaleTargetRef: {\n          apiVersion,\n          kind,\n          name,\n        },\n      },\n    };\n\n    return k8sCreate(MachineAutoscalerModel, machineAutoscaler);\n  };\n\n  submit = (event): void => {\n    event.preventDefault();\n    const { close } = this.props;\n    const promise = this.createAutoscaler();\n    this.handlePromise(promise).then((obj: K8sResourceKind) => {\n      close();\n      history.push(\n        resourcePathFromModel(MachineAutoscalerModel, obj.metadata.name, obj.metadata.namespace),\n      );\n    });\n  };\n\n  render() {\n    const { name } = this.props.machineSet.metadata;\n\n    return (\n      <form onSubmit={this.submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle className=\"modal-header\">Create Machine Autoscaler</ModalTitle>\n        <ModalBody>\n          <p>\n            This will automatically scale machine set <b>{name}</b>.\n          </p>\n          <div className=\"form-group\">\n            <label>\n              Minimum Replicas:\n              <NumberSpinner\n                className=\"pf-c-form-control\"\n                value={this.state.minReplicas}\n                onChange={this.changeMinReplicas}\n                changeValueBy={this.changeMinReplicasBy}\n                autoFocus\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Maximum Replicas:\n              <NumberSpinner\n                className=\"pf-c-form-control\"\n                value={this.state.maxReplicas}\n                onChange={this.changeMaxReplicas}\n                changeValueBy={this.changeMaxReplicasBy}\n                required\n              />\n            </label>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={this.state.inProgress}\n          errorMessage={this.state.errorMessage}\n          cancel={this.props.cancel}\n          submitText=\"Create\"\n        />\n      </form>\n    );\n  }\n}\n\nexport const configureMachineAutoscalerModal = createModalLauncher(ConfigureMachineAutoscalerModal);\n\nexport type ConfigureMachineAutoscalerModalProps = {\n  machineSet: K8sResourceKind;\n  cancel: (e: React.SyntheticEvent<any, Event>) => void;\n  close: () => void;\n};\n\nexport type ConfigureMachineAutoscalerModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n  minReplicas: number;\n  maxReplicas: number;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AA+CA;AA7CA;AACA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AAUA;AACA;;AAEA;AAUA;AAQA;AACA;AAEA;;;;;A","sourceRoot":""}