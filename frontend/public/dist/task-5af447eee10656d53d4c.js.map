{"version":3,"file":"task-5af447eee10656d53d4c.js","sources":["webpack:///./public/components/hypercloud/task.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { TaskModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(TaskModel), ...Kebab.factory.common];\n\nconst kind = TaskModel.kind;\n\nconst tableColumnClasses = [\n  classNames('col-xs-6', 'col-sm-4'),\n  classNames('col-xs-6', 'col-sm-4'),\n  classNames('col-sm-4', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\n\nconst TaskTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\n\nTaskTableHeader.displayName = 'TaskTableHeader';\n\n\nconst TaskTableRow: RowFunction<K8sResourceKind> = ({ obj: task, index, key, style }) => {\n  return (\n    <TableRow id={task.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={task.metadata.name} namespace={task.metadata.namespace} title={task.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={task.metadata.namespace} title={task.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={task.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={task} />\n      </TableData>\n    </TableRow>\n  );\n};\n\n\nconst TaskDetails: React.FC<TaskDetailsProps> = ({ obj: task }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(task, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={task} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nconst { details, editYaml } = navFactory;\n\nexport const Tasks: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Tasks\" Header={TaskTableHeader.bind(null, t)} Row={TaskTableRow} virtualize />;\n}\n\n\nexport const TasksPage: React.FC<TasksPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_57')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_57') })}\n    canCreate={true}\n    ListComponent={Tasks}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const TasksDetailsPage: React.FC<TasksDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(TaskDetails)), editYaml()]} />;\n\ntype TasksPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype TaskDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype TasksDetailsPageProps = {\n  match: any;\n};"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAQA;AAEA;;;;;A","sourceRoot":""}