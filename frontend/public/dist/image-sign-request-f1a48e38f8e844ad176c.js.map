{"version":3,"file":"image-sign-request-f1a48e38f8e844ad176c.js","sources":["webpack:///./public/components/hypercloud/image-scan-request.tsx","webpack:///./public/components/hypercloud/image-sign-request.tsx","webpack:///./public/components/hypercloud/signer-policy.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageScanRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageScanRequestModel), ...Kebab.factory.common];\n\nconst kind = ImageScanRequestModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ImageScanRequestTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nImageScanRequestTableHeader.displayName = 'ImageScanRequestTableHeader';\n\nconst ImageScanRequestTableRow: RowFunction<K8sResourceKind> = ({ obj: scanrequest, index, key, style }) => {\n  return (\n    <TableRow id={scanrequest.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={scanrequest.metadata.name} namespace={scanrequest.metadata.namespace} title={scanrequest.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={scanrequest.metadata.namespace} title={scanrequest.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={scanrequest?.status?.status} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={scanrequest.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={scanrequest} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageScanRequestStatus: React.FC<ImageScanRequestStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageScanRequestDetailsList: React.FC<ImageScanRequestDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_3')}</dt>\n      <dd>\n        <ImageScanRequestStatus result={ds?.status?.status} />\n      </dd>\n      {/* <dt>Summary</dt>\n      {summaries.map(summary => {\n        let summaryDisplay = summary.map(status => {\n          return <li key={status.key}> {`${status.key} ${status.value}`}</li>;\n        });\n        return (\n          <>\n            <dd>\n              {summaryKey.shift()}\n              <ul>{summaryDisplay}</ul>\n            </dd>\n          </>\n        );\n      })} */}\n      {/* <DetailsItem label=\"Summary\" obj={ds} path=\"status.summary\" /> */}\n    </dl>\n  );\n};\nexport const ScanResultRow: React.FC<ScanResultRowProps> = ({ scanList }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{scanList?.image}</div>\n      <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">{scanList?.summary}</div>\n    </div>\n  );\n};\nexport const ScanResultTable: React.FC<ScanResultTableProps> = ({ heading, scanList }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_CONTAINER_IMAGEDETAILS_1')}`}</div>\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_TABDETAILS_21')}`}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {scanList.map((c: any, i: number) => (\n            <ScanResultRow key={i} scanList={c} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst ImageScanRequestDetails: React.FC<ImageScanRequestDetailsProps> = ({ obj: scanrequest }) => {\n  const { t } = useTranslation();\n  const summaries = [];\n  for (const key in scanrequest.status?.results) {\n    let summary = { image: '', summary: '' };\n    summary.image = key;\n    for (const statusKey in scanrequest.status.results[key].summary) {\n      summary.summary += `${statusKey} ${scanrequest.status.results[key].summary[statusKey]}, `;\n    }\n    summary.summary = summary.summary.substr(0, summary.summary.length - 2);\n    summaries.push(summary);\n  }\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(scanrequest, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={scanrequest} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageScanRequestDetailsList ds={scanrequest} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <ScanResultTable heading=\"Scan Result\" scanList={summaries} />\n      </div>\n    </>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nexport const ImageScanRequests: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table\n    {...props}\n    aria-label=\"ImageScanRequests\"\n    Header={ImageScanRequestTableHeader.bind(null, t)}\n    Row={ImageScanRequestTableRow}\n    virtualize\n  />;\n}\n\nexport const ImageScanRequestsPage: React.FC<ImageScanRequestsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_95')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_95') })}\n    canCreate={true}\n    ListComponent={ImageScanRequests}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const ImageScanRequestsDetailsPage: React.FC<ImageScanRequestsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageScanRequestDetails)), editYaml()]} />;\n\ntype ImageScanRequestDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ScanResultTableProps = {\n  heading: string;\n  scanList: any;\n};\n\ntype ScanResultRowProps = {\n  scanList: any;\n};\n\ntype ImageScanRequestsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageScanRequestDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageScanRequestsDetailsPageProps = {\n  match: any;\n};\ntype ImageScanRequestStatusStatusProps = {\n  result: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageSignRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageSignRequestModel), ...Kebab.factory.common];\n\nconst kind = ImageSignRequestModel.kind;\n\nconst tableColumnClasses = ['', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ImageSignRequestTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.imageSignResponse.result',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n      sortField: 'spec.image',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_74'),\n      sortField: 'spec.signer',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nImageSignRequestTableHeader.displayName = 'ImageSignRequestTableHeader';\n\nconst ImageSignRequestTableRow: RowFunction<K8sResourceKind> = ({ obj: signrequest, index, key, style }) => {\n  return (\n    <TableRow id={signrequest.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={signrequest.metadata.name} namespace={signrequest.metadata.namespace} title={signrequest.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={signrequest.metadata.namespace} title={signrequest.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={signrequest?.status?.imageSignResponse?.result} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{signrequest?.spec?.image}</TableData>\n      <TableData className={tableColumnClasses[4]}>{signrequest?.spec?.signer}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={signrequest.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={signrequest} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageSignRequestStatus: React.FC<ImageSignRequestStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageSignRequestDetailsList: React.FC<ImageSignRequestDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{`${t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_2')}`}</dt>\n      <dd>\n        <ImageSignRequestStatus result={ds.status.imageSignResponse.result} />\n      </dd>\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_3')}`} obj={ds} path=\"spec.image\" />\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_SIGNERS_1')}`} obj={ds} path=\"spec.signer\" />\n    </dl>\n  );\n}\n\nconst ImageSignRequestDetails: React.FC<ImageSignRequestDetailsProps> = ({ obj: signrequest }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(signrequest, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={signrequest} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageSignRequestDetailsList ds={signrequest} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const ImageSignRequests: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"ImageSignRequests\" Header={ImageSignRequestTableHeader.bind(null, t)} Row={ImageSignRequestTableRow} virtualize />;\n};\n\nexport const ImageSignRequestsPage: React.FC<ImageSignRequestsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_92')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_92') })}\n    canCreate={true}\n    ListComponent={ImageSignRequests}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const ImageSignRequestsDetailsPage: React.FC<ImageSignRequestsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageSignRequestDetails)), editYaml()]} />;\n\ntype ImageSignRequestDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ImageSignRequestsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageSignRequestDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageSignRequestsDetailsPageProps = {\n  match: any;\n};\ntype ImageSignRequestStatusStatusProps = {\n  result: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { SignerPolicyModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { ImageSignersPage } from './image-signer';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(SignerPolicyModel), ...Kebab.factory.common];\n\nconst kind = SignerPolicyModel.kind;\n\nconst tableColumnClasses = ['', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst SignerPolicyTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_74'),\n      sortField: 'status.imageSignResponse.result',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nSignerPolicyTableHeader.displayName = 'SignerPolicyTableHeader';\n\nconst SignerPolicyTableRow: RowFunction<K8sResourceKind> = ({ obj: signerpolicy, index, key, style }) => {\n  return (\n    <TableRow id={signerpolicy.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={signerpolicy.metadata.name} namespace={signerpolicy.metadata.namespace} title={signerpolicy.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={signerpolicy.metadata.namespace} title={signerpolicy.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{signerpolicy?.spec?.signers?.length}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={signerpolicy.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={signerpolicy} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const SignerPolicyStatus: React.FC<SignerPolicyStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nconst SignerPolicyDetails: React.FC<SignerPolicyDetailsProps> = ({ obj: signerpolicy }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(signerpolicy, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={signerpolicy} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\" style={{ paddingLeft: '0px' }}>\n        <ImageSignersPage isDetailPage={true} />\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const SignerPolicies: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table {...props} aria-label=\"SignerPolicies\" Header={SignerPolicyTableHeader.bind(null, t)} Row={SignerPolicyTableRow} virtualize />;\n}\n\nexport const SignerPoliciesPage: React.FC<SignerPoliciesPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_96')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_96') })}\n    canCreate={true}\n    ListComponent={SignerPolicies}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const SignerPoliciesDetailsPage: React.FC<SignerPoliciesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(SignerPolicyDetails)), editYaml()]} />;\n\ntype SignerPoliciesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype SignerPolicyDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype SignerPoliciesDetailsPageProps = {\n  match: any;\n};\ntype SignerPolicyStatusStatusProps = {\n  result: string;\n};\n"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;;AACA;AAEA;AAEA;AACA;AACA;AAmBA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AAOA;AAEA;AACA;AAEA;AAQA;AAEA;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAQA;AAEA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAQA;AAEA;;;;;A","sourceRoot":""}