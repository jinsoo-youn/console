{"version":3,"file":"remove-member-modal-68691b9ccab8f75fd553.js","sources":["webpack:///./public/components/hypercloud/modals/remove-member-modal.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '../../factory/modal';\nimport { HandlePromiseProps, withHandlePromise } from '../../utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId } from '../../../hypercloud/auth';\n\nexport const RemoveMemberModal = withHandlePromise((props: RemoveMemberModalProps) => {\n  const [errorMsg, setError] = React.useState('')\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    // Append to an existing array, but handle the special case when the array is null.\n    coFetchJSON(`/api/multi-hypercloud/cluster/remove_member?userId=${getId()}&cluster=${props.clusterName}&target${props.type}=${props.member}`, 'POST')\n      .then((res) => {\n        props.close();\n      })\n      .catch((err) => {\n        setError(\"Fail to remove member(s). \" + err);\n      })\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n        <ModalTitle>\n          <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />\n          {`Delete ${props.member}?`}\n        </ModalTitle>\n        <ModalBody className=\"modal-body\">\n          <div>\n            Are you sure you want to delete {props.type} <strong className=\"co-break-word\">{props.member}</strong> in cluster <strong>{props.clusterName}</strong>?\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter errorMessage={errorMsg} inProgress={props.inProgress} submitText='Delete' cancel={props.cancel} />\n      </form>\n  );\n});\n\nexport const removeMemberModal = createModalLauncher(RemoveMemberModal);\n\nexport type RemoveMemberModalProps = {\n  clusterName: string;\n  type: string;\n  member: string;\n} & ModalComponentProps &\n  HandlePromiseProps;\n"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AACA;;AAAA;;AAAA;AACA;AAEA;AAGA;AAEA;;;;;A","sourceRoot":""}