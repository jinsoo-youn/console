{"version":3,"file":"status-modal-8eafb641a9022018df79.js","sources":["webpack:///./public/components/hypercloud/modals/status-modal.jsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { switchPerspective } from 'packages/dev-console/integration-tests/views/dev-perspective.view';\nimport { ValidTabGuard } from 'packages/kubevirt-plugin/src/components/create-vm-wizard/tabs/valid-tab-guard';\nimport * as React from 'react';\nimport { NamespaceClaimModel, ResourceQuotaClaimModel } from '../../../models';\nimport { k8sUpdateApproval, referenceForModel } from '../../../module/k8s';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { PromiseComponent, ResourceIcon, SelectorInput } from '../../utils';\n\nconst STATUS_PATH = '/status/result';\nconst REASON_PATH = '/status/reason';\n// const STATUS_PATH = '/status';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/status';\n\nclass BaseStatusModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = props.cancel.bind(this);\n    // let status = _.get(props.resource, props.path.split('/').slice(1));\n    let status = '';\n    // if (status === 'Waiting') {\n    //   status = 'Approved';\n    // }\n    // const reason = _.get(props.resource, props.reasonPath.split('/').slice(1));\n    const reason = '';\n    this.state = Object.assign(this.state, {\n      status,\n      reason,\n      isOptionsOpen: false,\n    });\n    this.options = [\n      { value: 'Approved', disabled: false },\n      { value: 'Rejected', disabled: false },\n    ];\n  }\n\n  _submit(e) {\n    e.preventDefault();\n\n    const { kind, path, resource } = this.props;\n    switch (kind.kind) {\n      case ResourceQuotaClaimModel.kind:\n      case NamespaceClaimModel.kind: {\n        const stat = this.state.status === 'Approved' ? 'Success' : 'Reject';\n        const promise = k8sUpdateApproval(\n          kind,\n          resource,\n          'status',\n          [\n            { op: 'replace', path: '/status/status', value: stat },\n            { op: 'replace', path: '/status/reason', value: this.state.reason },\n          ],\n          'PATCH',\n        );\n        this.handlePromise(promise).then(this.successSubmit);\n        break;\n      }\n      default: {\n        // resourceURL\n        const approval = this.state.status === 'Approved' ? 'approve' : 'reject';\n\n        const promise = k8sUpdateApproval(kind, resource, approval, {\n          reason: this.state.reason,\n        });\n        this.handlePromise(promise).then(this.successSubmit);\n        break;\n      }\n    }\n  }\n\n  successSubmit = () => {\n    this.props.close();\n    // location.reload();\n  };\n\n  onChangeApproval = e => {\n    this.setState({ status: e.target.value });\n  };\n\n  onSelect = (event, selection) => {\n    this.setState({ status: selection, isOptionsOpen: false });\n  };\n\n  onToggle = isOpen => {\n    this.setState({ isOptionsOpen: isOpen });\n  };\n\n  onChangeReason = e => {\n    this.setState({ reason: e.target.value });\n  };\n\n  render() {\n    const { kind, resource, description, message } = this.props;\n\n    return (\n      <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>Approval Processing</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{message || ''}</div>\n          </div>\n          <div className=\"row co-m=-form-row\">\n            <div className=\"col-sm-12 approval-dropdown--short-bottom\">\n              {/* <select className=\"col-sm-12\" value={this.state.status} onChange={this.onChangeApproval}>\n                <option value=\"Approved\">Approved</option>\n                <option value=\"Rejected\">Rejected</option>\n              </select> */}\n              <Select variant={SelectVariant.single} placeholderText=\"Select status\" selections={this.state.status} onSelect={this.onSelect} onToggle={this.onToggle} isExpanded={this.state.isOptionsOpen} isDisabled={false}>\n                {this.options.map((option, index) => (\n                  <SelectOption isDisabled={option.disabled} key={index} value={option.value} />\n                ))}\n              </Select>\n            </div>\n            <div className=\"col-sm-12\">\n              <textarea className=\"col-sm-12 pf-c-form-control query-browser__query-input\" style={{ height: '100px' }} onChange={this.onChangeReason} value={this.state.reason} />\n            </div>\n            <div className=\"col-sm-12\">Please enter a reason.</div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter errorMessage={this.state.errorMessage} inProgress={this.state.inProgress} submitText=\"Confirm\" cancel={this._cancel} />\n      </form>\n    );\n  }\n}\n\nexport const statusModal = createModalLauncher(props => <BaseStatusModal path={STATUS_PATH} reasonPath={REASON_PATH} {...props} />);\n"],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAuDA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAMA;AACA;AAEA;AAGA;AAGA;AACA;AAEA;;;;;A","sourceRoot":""}