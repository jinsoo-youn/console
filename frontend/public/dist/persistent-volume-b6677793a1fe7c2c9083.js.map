{"version":3,"file":"persistent-volume-b6677793a1fe7c2c9083.js","sources":["webpack:///./public/components/persistent-volume.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { Status } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport {\n  Kebab,\n  LabelList,\n  navFactory,\n  ResourceKebab,\n  SectionHeading,\n  ResourceLink,\n  ResourceSummary,\n  Timestamp,\n} from './utils';\nimport { PersistentVolumeModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(PersistentVolumeModel), ...common];\n\nconst PVStatus = ({ pv }) => (\n  <Status status={pv.metadata.deletionTimestamp ? 'Terminating' : pv.status.phase} />\n);\n\nconst tableColumnClasses = [\n  classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst PVTableHeader = (t) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_13'),\n      sortField: 'spec.claimRef.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_14'),\n      sortFunc: 'pvStorage',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\nPVTableHeader.displayName = 'PVTableHeader';\n\nconst kind = 'PersistentVolume';\n\nconst PVTableRow = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <PVStatus pv={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {_.get(obj, 'spec.claimRef.name') ? (\n          <ResourceLink\n            kind=\"PersistentVolumeClaim\"\n            name={obj.spec.claimRef.name}\n            namespace={obj.spec.claimRef.namespace}\n            title={obj.spec.claimRef.name}\n          />\n        ) : (\n            <div className=\"text-muted\">No Claim</div>\n          )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {_.get(obj, 'spec.capacity.storage', '-')}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst Details = ({ obj: pv }) => {\n  const { t } = useTranslation();\n\n  const storageClassName = _.get(pv, 'spec.storageClassName');\n  const pvcName = _.get(pv, 'spec.claimRef.name');\n  const namespace = _.get(pv, 'spec.claimRef.namespace');\n  const storage = _.get(pv, 'spec.capacity.storage');\n  const accessModes = _.get(pv, 'spec.accessModes');\n  const volumeMode = _.get(pv, 'spec.volumeMode');\n  const reclaimPolicy = _.get(pv, 'spec.persistentVolumeReclaimPolicy');\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(pv, t)})} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={pv}>\n            <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_51')}</dt>\n            <dd>{reclaimPolicy}</dd>\n          </ResourceSummary>\n        </div>\n        <div className=\"col-sm-6\">\n          <dl>\n            <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_45')}</dt>\n            <dd>\n              <PVStatus pv={pv} />\n            </dd>\n            {storage && (\n              <>\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_60')}</dt>\n                <dd>{storage}</dd>\n              </>\n            )}\n            {!_.isEmpty(accessModes) && (\n              <>\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_61')}</dt>\n                <dd>{accessModes.join(', ')}</dd>\n              </>\n            )}\n            <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_62')}</dt>\n            <dd>{volumeMode || 'Filesystem'}</dd>\n            <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_63')}</dt>\n            <dd>\n              {storageClassName ? (\n                <ResourceLink kind=\"StorageClass\" name={storageClassName} />\n              ) : (\n                  'None'\n                )}\n            </dd>\n            {pvcName && (\n              <>\n                <dt>{t('SINGLE:MSG_PERSISTENTVOLUMES_PERSISTENTVOLUMEDETAILS_TABDETAILS_1')}</dt>\n                <dd>\n                  <ResourceLink kind=\"PersistentVolumeClaim\" name={pvcName} namespace={namespace} />\n                </dd>\n              </>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const PersistentVolumesList = (props) => {\n  const { t } = useTranslation();\n  return <Table\n      {...props}\n      aria-label=\"Persistent Volumes\"\n      Header={PVTableHeader.bind(null, t)}\n      Row={PVTableRow}\n      virtualize\n    />;\n};\n\nexport const PersistentVolumesPage = (props) => {\n  const { t } = useTranslation();\n  return <ListPage {...props} ListComponent={PersistentVolumesList} kind={kind} title={t('COMMON:MSG_LNB_MENU_51')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_51') })} canCreate={true} />;\n};\nexport const PersistentVolumesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    pages={[navFactory.details(Details), navFactory.editYaml()]}\n  />\n);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAUA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAOA;AACA;AAEA;AAYA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AASA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}