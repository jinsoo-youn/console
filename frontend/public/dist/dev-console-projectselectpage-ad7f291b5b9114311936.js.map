{"version":3,"file":"dev-console-projectselectpage-ad7f291b5b9114311936.js","sources":["webpack:///./packages/dev-console/src/components/ProjectSelectPage.tsx","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.scss?762c","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { match } from 'react-router';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { connectToPlural } from '@console/internal/kinds';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  kindForReference,\n} from '@console/internal/module/k8s';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport ProjectListPage from './projects/ProjectListPage';\nimport { getBadgeFromType } from '@console/shared/src';\n\nexport interface ProjectSelectPageProps {\n  match: match<any>;\n}\n\nconst allParams = (props) => Object.assign({}, props?.match?.params, props);\n\nconst ProjectSelectPage: React.FC<ProjectSelectPageProps> = (props) => {\n  const { kindObj, kindsInFlight, plural } = allParams(props);\n\n  if (!kindObj) {\n    if (kindsInFlight) {\n      return <LoadingBox />;\n    }\n    const missingType = isGroupVersionKind(plural)\n      ? `\"${kindForReference(plural)}\" in \"${apiVersionForReference(plural)}\"`\n      : `\"${plural}\"`;\n    return (\n      <ErrorPage404\n        message={`The server doesn't have a resource type ${missingType}. Try refreshing the page if it was recently added.`}\n      />\n    );\n  }\n  return (\n    <>\n      <Helmet>\n        <title>{kindObj.labelPlural}</title>\n      </Helmet>\n      <ProjectListPage title={kindObj.labelPlural} badge={getBadgeFromType(kindObj.badge)}>\n        Select a project to view the list of {kindObj.labelPlural}\n      </ProjectListPage>\n    </>\n  );\n};\n\nexport default connectToPlural(withStartGuide(ProjectSelectPage));\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport interface ProjectListPageProps {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n}\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <hr className=\"odc-project-list-page__section-border\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;;AACA;AAIA;AAEA;;;;;;;;;;;;ACjDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAMA;AAEA;AAGA;AACA;AAUA;AAEA;;;;;A","sourceRoot":""}