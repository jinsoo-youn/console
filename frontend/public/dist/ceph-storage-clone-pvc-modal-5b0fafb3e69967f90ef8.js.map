{"version":3,"file":"ceph-storage-clone-pvc-modal-5b0fafb3e69967f90ef8.js","sources":["webpack:///./packages/ceph-storage-plugin/src/components/modals/clone-pvc-modal/_clone-pvc-modal.scss?0f1b","webpack:///./packages/ceph-storage-plugin/src/components/modals/clone-pvc-modal/clone-pvc-modal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin","import './_clone-pvc-modal.scss';\n\nimport * as React from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport { K8sResourceKind, k8sCreate } from '@console/internal/module/k8s';\nimport {\n  LoadingInline,\n  ResourceIcon,\n  humanizeBinaryBytes,\n  withHandlePromise,\n} from '@console/internal/components/utils/index';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '@console/internal/components/factory';\n\nimport { DataPoint } from '@console/internal/components/graphs/index';\nimport { HandlePromiseProps } from '@console/internal/components/utils/promise-component';\nimport { PersistentVolumeClaimModel } from '@console/internal/models/index';\nimport { PrometheusEndpoint } from '@console/internal/components/graphs/helpers';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { getPVCUsedCapacityQuery } from '../../../constants/queries';\nimport { usePrometheusPoll } from '@console/internal/components/graphs/prometheus-poll-hook';\n\nconst accessModeLabels = Object.freeze({\n  ReadWriteOnce: 'Single User (RWO)',\n  ReadWriteMany: 'Shared Access (RWX)',\n  ReadOnlyMany: 'Read Only (ROX)',\n});\n\nconst ClonePVCModal = withHandlePromise((props: ClonePVCModalProps) => {\n  const { close, cancel, resource, handlePromise, errorMessage, inProgress } = props;\n  const pvcName: string = resource.metadata.name;\n  const [clonePVCName, setClonePVCName] = React.useState(`${pvcName}-clone`);\n\n  const pvcUsedCapacityQuery: string = getPVCUsedCapacityQuery(pvcName);\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    query: pvcUsedCapacityQuery,\n    namespace: resource.metadata.namespace,\n  });\n\n  const pvcUsedCapacityQueryResult: DataPoint[] = getInstantVectorStats(\n    response,\n    null,\n    humanizeBinaryBytes,\n  );\n\n  const pvcUsedCapacity = pvcUsedCapacityQueryResult?.[0]?.label || 'No Data';\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n\n    const pvcCloneObj = {\n      apiVersion: PersistentVolumeClaimModel.apiVersion,\n      kind: PersistentVolumeClaimModel.kind,\n      metadata: {\n        name: clonePVCName,\n        namespace: resource.metadata.namespace,\n      },\n      spec: {\n        storageClassName: resource.spec.storageClassName,\n        dataSource: {\n          name: pvcName,\n          kind: PersistentVolumeClaimModel.kind,\n          apiGroup: '',\n        },\n        accessModes: resource.spec.accessModes,\n        resources: resource.spec.resources,\n      },\n    };\n\n    return handlePromise(k8sCreate(PersistentVolumeClaimModel, pvcCloneObj)).then(close);\n  };\n\n  return (\n    <Form onSubmit={submit}>\n      <div className=\"modal-content modal-content--no-inner-scroll\">\n        <ModalTitle>Clone</ModalTitle>\n        <ModalBody>\n          <FormGroup label=\"Name\" isRequired fieldId=\"ceph-clone-pvc-modal__name\">\n            <TextInput\n              isRequired\n              type=\"text\"\n              name=\"ceph-clone-pvc-modal__name\"\n              value={clonePVCName}\n              onChange={setClonePVCName}\n            />\n          </FormGroup>\n          <div className=\"ceph-clone-pvc-modal__details\">\n            <p className=\"text-muted\">PVC Details</p>\n            <div className=\"ceph-clone-pvc-modal__details-section\">\n              <div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Namespace</p>\n                  <p>\n                    <ResourceIcon kind=\"Namespace\" />\n                    {resource.metadata.namespace}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Storage Class</p>\n                  <p>\n                    {resource.spec.storageClassName ? (\n                      <>\n                        <ResourceIcon kind=\"StorageClass\" />\n                        {resource.spec.storageClassName}\n                      </>\n                    ) : (\n                      'None'\n                    )}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Requested Capacity</p>\n                  <p>{resource.spec.resources.requests.storage}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Used Capacity</p>\n                  <div>\n                    {!loading && !error && pvcUsedCapacity}\n                    {loading && <LoadingInline />}\n                    {!loading && error && 'No Data'}\n                  </div>\n                </div>\n              </div>\n              <div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Access Mode</p>\n                  <p>{accessModeLabels[resource.spec.accessModes]}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-clone-pvc-modal__pvc-details\">Volume Mode</p>\n                  <p>{resource.spec.volumeMode}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={inProgress}\n          errorMessage={errorMessage}\n          submitText=\"Clone\"\n          cancel={cancel}\n        />\n      </div>\n    </Form>\n  );\n});\n\nexport type ClonePVCModalProps = {\n  resource?: K8sResourceKind;\n} & HandlePromiseProps &\n  ModalComponentProps;\n\nexport default createModalLauncher(ClonePVCModal);\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAMA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AASA;AAOA;;;;;A","sourceRoot":""}