{"version":3,"file":"create-bs-4b66180db907c6102d87.js","sources":["webpack:///./packages/noobaa-storage-plugin/src/components/create-backingstore-page/create-bs-page.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RouteComponentProps } from 'react-router';\nimport { Alert, AlertActionCloseButton, Title } from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils/router';\nimport { BreadCrumbs, resourcePathFromModel } from '@console/internal/components/utils';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { NooBaaBackingStoreModel } from '../../models';\nimport CreateBackingStoreForm from './create-bs';\nimport './create-bs.scss';\n\nconst CreateBackingStoreFormPage: React.FC<CreateBackingStoreFormPageProps> = ({ match }) => {\n  const [showHelp, setShowHelp] = React.useState(true);\n  const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n  const { ns, appName } = match.params;\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  React.useEffect(() => {\n    k8sGet(ClusterServiceVersionModel, appName, ns)\n      .then((clusterServiceVersionObj) => {\n        setClusterServiceVersion(clusterServiceVersionObj);\n      })\n      .catch(() => setClusterServiceVersion(null));\n  }, [appName, ns]);\n\n  return (\n    <>\n      <div className=\"co-create-operand__header\">\n        <div className=\"co-create-operand__header-buttons\">\n          <BreadCrumbs\n            breadcrumbs={[\n              {\n                name: _.get(\n                  clusterServiceVersion,\n                  'spec.displayName',\n                  'Openshift Container Storage Operator',\n                ),\n                path: resourcePathFromModel(ClusterServiceVersionModel, appName, ns),\n              },\n              { name: `Create ${NooBaaBackingStoreModel.label}`, path: match.url },\n            ]}\n          />\n        </div>\n        <div className=\"nb-bs-page-title\">\n          <Title size=\"2xl\" headingLevel=\"h1\" className=\"nb-bs-page-title__main\">\n            Create new Backing Store\n          </Title>\n          <p className=\"nb-bs-page-title__info\">\n            Storage targets that are used to store chunks of data on MCG buckets.\n          </p>\n        </div>\n      </div>\n      <div className=\"nb-bs-page\">\n        {showHelp && (\n          <Alert\n            isInline\n            variant=\"info\"\n            title=\"What is a Backing Store?\"\n            action={<AlertActionCloseButton onClose={() => setShowHelp(false)} />}\n          >\n            A backing store represents a storage target to be used as the underlying storage layer\n            in MCG buckets.\n            <br />\n            Multiple types of backing stores are supported: AWS S3, S3 Compatible, Google Cloud\n            Storage, Azure Blob, PVC.\n          </Alert>\n        )}\n        <CreateBackingStoreForm\n          cancel={onCancel}\n          isPage\n          namespace={ns}\n          className=\"nb-bs-page-form__short\"\n          csv={clusterServiceVersion}\n        />\n      </div>\n    </>\n  );\n};\n\ntype CreateBackingStoreFormPageProps = RouteComponentProps<{ ns?: string; appName?: string }>;\n\nexport default CreateBackingStoreFormPage;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAKA;AACA;;AASA;AAGA;AAEA;AAUA;AAIA;;;;;A","sourceRoot":""}