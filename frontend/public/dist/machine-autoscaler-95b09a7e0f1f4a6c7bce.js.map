{"version":3,"file":"machine-autoscaler-95b09a7e0f1f4a6c7bce.js","sources":["webpack:///./public/components/machine-autoscaler.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { MachineAutoscalerModel } from '../models';\nimport {\n  groupVersionFor,\n  K8sResourceKind,\n  referenceForGroupVersionKind,\n  referenceForModel,\n} from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n} from './utils';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(MachineAutoscalerModel), ...common];\nconst machineAutoscalerReference = referenceForModel(MachineAutoscalerModel);\n\nconst MachineAutoscalerTargetLink: React.FC<MachineAutoscalerTargetLinkProps> = ({ obj }) => {\n  const targetAPIVersion: string = _.get(obj, 'spec.scaleTargetRef.apiVersion');\n  const targetKind: string = _.get(obj, 'spec.scaleTargetRef.kind');\n  const targetName: string = _.get(obj, 'spec.scaleTargetRef.name');\n  if (!targetAPIVersion || !targetKind || !targetName) {\n    return <>-</>;\n  }\n\n  const groupVersion = groupVersionFor(targetAPIVersion);\n  const reference = referenceForGroupVersionKind(groupVersion.group)(groupVersion.version)(\n    targetKind,\n  );\n  return <ResourceLink kind={reference} name={targetName} namespace={obj.metadata.namespace} />;\n};\n\nconst tableColumnClasses = [\n  classNames('col-md-4', 'col-sm-4', 'col-xs-6'),\n  classNames('col-md-3', 'col-sm-4', 'col-xs-6'),\n  classNames('col-md-3', 'col-sm-4', 'hidden-xs'),\n  classNames('col-md-1', 'hidden-sm', 'hidden-xs'),\n  classNames('col-md-1', 'hidden-sm', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst MachineAutoscalerTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Scale Target',\n      sortField: 'spec.scaleTargetRef.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Min',\n      sortField: 'spec.minReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Max',\n      sortField: 'spec.maxReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nMachineAutoscalerTableHeader.displayName = 'MachineAutoscalerTableHeader';\n\nconst MachineAutoscalerTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineAutoscalerReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <MachineAutoscalerTargetLink obj={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {_.get(obj, 'spec.minReplicas') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {_.get(obj, 'spec.maxReplicas') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={machineAutoscalerReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineAutoscalerList: React.FC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Autoscalers\"\n    Header={MachineAutoscalerTableHeader}\n    Row={MachineAutoscalerTableRow}\n    virtualize\n  />\n);\n\nconst MachineAutoscalerDetails: React.FC<MachineAutoscalerDetailsProps> = ({ obj }) => {\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine Autoscaler Details\" />\n        <ResourceSummary resource={obj}>\n          <dt>Scale Target</dt>\n          <dd>\n            <MachineAutoscalerTargetLink obj={obj} />\n          </dd>\n          <dt>Min Replicas</dt>\n          <dd>{_.get(obj, 'spec.minReplicas') || '-'}</dd>\n          <dt>Max Replicas</dt>\n          <dd>{_.get(obj, 'spec.maxReplicas') || '-'}</dd>\n        </ResourceSummary>\n      </div>\n    </>\n  );\n};\n\nexport const MachineAutoscalerPage: React.FC<MachineAutoscalerPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineAutoscalerList}\n    kind={machineAutoscalerReference}\n    canCreate={true}\n  />\n);\n\nexport const MachineAutoscalerDetailsPage: React.FC<MachineAutoscalerDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    kind={machineAutoscalerReference}\n    pages={[navFactory.details(MachineAutoscalerDetails), navFactory.editYaml()]}\n  />\n);\n\ntype MachineAutoscalerPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype MachineAutoscalerTargetLinkProps = {\n  obj: K8sResourceKind;\n};\n\nexport type MachineAutoscalerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type MachineAutoscalerDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AAEA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AASA;;;;;A","sourceRoot":""}