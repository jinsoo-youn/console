{"version":3,"file":"job-9e13f6760cb997248d36.js","sources":["webpack:///./public/components/hypercloud/federated-job.tsx","webpack:///./public/components/job.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedJobModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedJobModel), EditHealthChecks, ...Kebab.factory.common];\n\nconst kind = FederatedJobModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedJobTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'jobNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nFederatedJobTableHeader.displayName = 'FederatedJobTableHeader';\n\nconst FederatedJobTableRow: RowFunction<K8sResourceKind> = ({ obj: job, index, key, style }) => {\n  return (\n    <TableRow id={job.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={job.metadata.name} namespace={job.metadata.namespace} title={job.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={job.metadata.namespace} title={job.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link to={`/k8s/ns/${job.metadata.namespace}/jobs/${job.metadata.name}/pods`} title=\"pods\">\n          {job.status.currentNumberScheduled} of {job.status.desiredNumberScheduled} pods\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={job.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={job.spec.selector} namespace={job.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={job} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const FederatedJobDetailsList: React.FC<FederatedJobDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n  <dl className=\"co-m-pane__details\">\n  <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38')} obj={ds} path=\"status.currentNumberScheduled\" />\n  <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39')} obj={ds} path=\"status.desiredNumberScheduled\" />\n  </dl>\n);}\n\nconst FederatedJobDetails: React.FC<FederatedJobDetailsProps> = ({ obj: job }) => {\n  const { t } = useTranslation();\n  return (\n  <>\n    <div className=\"co-m-pane__body\">\n    <SectionHeading text={`${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_29') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={job} showPodSelector showNodeSelector showTolerations />\n        </div>\n        <div className=\"col-lg-6\">\n          <FederatedJobDetailsList ds={job} />\n        </div>\n      </div>\n    </div>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n    </div>\n  </>\n);}\n\nconst { details, editYaml, events } = navFactory;\nexport const FederatedJobs: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Federated Jobs\" Header={FederatedJobTableHeader.bind(null, t)} Row={FederatedJobTableRow} virtualize />;\n}\n\nexport const FederatedJobsPage: React.FC<FederatedJobsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedJobs} kind={kind} {...props} />;\n\nexport const FederatedJobsDetailsPage: React.FC<FederatedJobsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedJobDetails)), editYaml(), events(ResourceEventStream)]} />;\n\ntype FederatedJobDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype FederatedJobDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedJobsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedJobsDetailsPageProps = {\n  match: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { Status } from '@console/shared';\nimport { getJobTypeAndCompletions, K8sKind, JobKind, K8sResourceKind } from '../module/k8s';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { configureJobParallelismModal } from './modals';\nimport { ContainerTable, DetailsItem, Kebab, KebabAction, LabelList, PodsComponent, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, navFactory, pluralize } from './utils';\nimport { ResourceEventStream } from './events';\nimport { JobModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst ModifyJobParallelism: KebabAction = (kind: K8sKind, obj: JobKind) => {\n  const { t } = useTranslation();\n  return {\n    label: t('COMMON:MSG_MAIN_ACTIONBUTTON_10'),\n    callback: () =>\n      configureJobParallelismModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  };\n};\nconst menuActions: KebabAction[] = [ModifyJobParallelism, ...Kebab.getExtensionsActionsForKind(JobModel), ...Kebab.factory.common];\n\nconst kind = 'Job';\n\nconst tableColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-1', 'hidden-md', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\n\nconst JobTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_22'),\n      sortFunc: 'jobCompletions',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_17'),\n      sortFunc: 'jobType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortFunc: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\nJobTableHeader.displayName = 'JobTableHeader';\n\nconst JobTableRow: RowFunction<JobKind> = ({ obj: job, index, key, style }) => {\n  const { type, completions } = getJobTypeAndCompletions(job);\n  return (\n    <TableRow id={job.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={job.metadata.name} namespace={job.metadata.namespace} title={job.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={job.metadata.namespace} title={job.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={kind} labels={job.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Link to={`/k8s/ns/${job.metadata.namespace}/jobs/${job.metadata.name}/pods`} title=\"pods\">\n          {job.status.succeeded || 0} of {completions}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>{type}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={job.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind=\"Job\" resource={job} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst jobStatus = (job: JobKind): string => {\n  return job && job.status ? _.get(job, 'status.conditions[0].type', 'In Progress') : null;\n};\n\nconst JobDetails: React.FC<JobsDetailsProps> = ({ obj: job }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(job, t) })} />\n            <ResourceSummary resource={job} showPodSelector>\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_35')} obj={job} path=\"spec.completions\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_36')} obj={job} path=\"spec.parallelism\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_37')} obj={job} path=\"spec.activeDeadlineSeconds\">\n                {job.spec.activeDeadlineSeconds ? pluralize(job.spec.activeDeadlineSeconds, 'second') : 'Not Configured'}\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_1')} />\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_2')}</dt>\n              <dd>\n                <Status status={jobStatus(job)} />\n              </dd>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_3')} obj={job} path=\"status.startTime\">\n                <Timestamp timestamp={job.status.startTime} />\n              </DetailsItem>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_4')} obj={job} path=\"status.completionTime\">\n                <Timestamp timestamp={job.status.completionTime} />\n              </DetailsItem>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_5')} obj={job} path=\"status.succeeded\" defaultValue=\"0\" />\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_6')} obj={job} path=\"status.active\" defaultValue=\"0\" />\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_7')} obj={job} path=\"status.failed\" defaultValue=\"0\" />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={job.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1')} />\n        <Conditions conditions={job.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst JobPods: React.FC<JobPodsProps> = props => <PodsComponent {...props} customData={{ showNodes: true }} />;\n\nconst { details, pods, editYaml, events } = navFactory;\nconst JobsDetailsPage: React.FC<JobsDetailsPageProps> = props => <DetailsPage {...props} getResourceStatus={jobStatus} kind={kind} menuActions={menuActions} pages={[details(JobDetails), editYaml(), pods(JobPods), events(ResourceEventStream)]} />;\nconst JobsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label={JobModel.labelPlural} Header={JobTableHeader.bind(null, t)} Row={JobTableRow} virtualize />;\n};\n\nconst JobsPage: React.FC<JobsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_29')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_29') })} ListComponent={JobsList} kind={kind} canCreate={true} {...props} />;\n};\nexport { JobsList, JobsPage, JobsDetailsPage };\n\ntype JobsDetailsProps = {\n  obj: JobKind;\n};\n\ntype JobsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype JobPodsProps = {\n  obj: K8sResourceKind;\n};\n\ntype JobsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}