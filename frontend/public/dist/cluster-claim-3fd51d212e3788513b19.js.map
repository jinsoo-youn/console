{"version":3,"file":"cluster-claim-3fd51d212e3788513b19.js","sources":["webpack:///./public/components/hypercloud/cluster-claim.tsx"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading, DetailsItem } from '../utils';\nimport { Status } from '@console/shared';\nimport { ClusterClaimModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ClusterClaimModel), ...Kebab.factory.common, Kebab.factory.ModifyClaim];\n\nconst kind = ClusterClaimModel.kind;\n\nconst tableColumnClasses = ['', '', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ClusterClaimTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_LNB_MENU_84'),\n      sortFunc: 'spec.clusterName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_59'),\n      sortFunc: 'spec.provider',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_62'),\n      sortFunc: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n      sortField: 'metadata.annotations.creator',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[7] },\n    },\n  ];\n};\nClusterClaimTableHeader.displayName = 'ClusterClaimTableHeader';\n\nconst ClusterClaimTableRow: RowFunction<K8sResourceKind> = ({ obj: clusterClaim, index, key, style }) => {\n  return (\n    <TableRow id={clusterClaim.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={clusterClaim.metadata.name} namespace={clusterClaim.metadata.namespace} title={clusterClaim.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{clusterClaim.spec.clusterName}</TableData>\n      <TableData className={tableColumnClasses[2]}>{clusterClaim.spec.provider}</TableData>\n      <TableData className={tableColumnClasses[3]}>{clusterClaim.spec.version}</TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        <Status status={clusterClaim.status.phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>{clusterClaim.metadata.annotations.creator}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <Timestamp timestamp={clusterClaim.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={clusterClaim} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterRow: React.FC<ClusterRowProps> = ({ pod }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ResourceIcon kind={kind} />\n        {pod.metadata.name}\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">\n        <ResourceLink kind=\"Cluster\" name={pod.spec.placement.clusters[0].name} />\n      </div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={pod.status.phase} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={pod.metadata.creationTimestamp} />\n      </div>\n    </div>\n  );\n};\n\nexport const ClusterClaimDetailsList: React.FC<ClusterClaimDetailsListProps> = ({ clcl }) => {\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label=\"Provider\" obj={clcl} path=\"spec.provider\" />\n      <DetailsItem label=\"Cluster Name\" obj={clcl} path=\"spec.clusterName\" />\n      <DetailsItem label=\"Version\" obj={clcl} path=\"spec.version\" />\n      <DetailsItem label=\"Region\" obj={clcl} path=\"spec.region\" />\n      <DetailsItem label=\"Master Node Count\" obj={clcl} path=\"spec.masterNum\" />\n      <DetailsItem label=\"Master Node Type\" obj={clcl} path=\"spec.masterType\" />\n      <DetailsItem label=\"Worker Node Count\" obj={clcl} path=\"spec.workerNum\" />\n      <DetailsItem label=\"Worker Node Type\" obj={clcl} path=\"spec.workerType\" />\n      <DetailsItem label=\"SSH Key\" obj={clcl} path=\"spec.sshKey\" />\n    </dl>\n  );\n};\n\nconst ClusterClaimDetails: React.FC<ClusterClaimDetailsProps> = ({ obj: clusterClaim }) => (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Cluster Claim Details\" />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={clusterClaim} showOwner={false} />\n          <DetailsItem label=\"Owner\" obj={clusterClaim} path=\"metadata.annotations.creator\" />\n        </div>\n        <div className=\"col-lg-6\">\n          <ClusterClaimDetailsList clcl={clusterClaim} />\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nconst { details, editYaml } = navFactory;\nexport const ClusterClaims: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Cluster Claims\" Header={ClusterClaimTableHeader.bind(null, t)} Row={ClusterClaimTableRow} virtualize />;\n};\n\nconst clusterClaimStatusReducer = (clusterClaim: any): string => {\n  return clusterClaim.status.phase;\n};\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'registry-status',\n    reducer: clusterClaimStatusReducer,\n    items: [\n      { id: 'Created', title: 'Created' },\n      { id: 'Waiting', title: 'Waiting' },\n      { id: 'Admitted', title: 'Admitted' },\n      { id: 'Success', title: 'Success' },\n      { id: 'Rejected', title: 'Rejected' },\n      { id: 'Error', title: 'Error' },\n      { id: 'Deleted', title: 'Deleted' },\n    ],\n  },\n];\n\nexport const ClusterClaimsPage: React.FC<ClusterClaimsPageProps> = props => <ListPage canCreate={true} ListComponent={ClusterClaims} kind={kind} rowFilters={filters} {...props} />;\n\nexport const ClusterClaimsDetailsPage: React.FC<ClusterClaimsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ClusterClaimDetails)), editYaml()]} />;\n\ntype ClusterRowProps = {\n  pod: K8sResourceKind;\n};\n\ntype ClusterClaimDetailsListProps = {\n  clcl: K8sResourceKind;\n};\n\ntype ClusterClaimDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ClusterClaimsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ClusterClaimsDetailsPageProps = {\n  match: any;\n};\n"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;A","sourceRoot":""}