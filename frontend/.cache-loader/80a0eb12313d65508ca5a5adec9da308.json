{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/combined.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/combined.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { getName, getNamespace, getOwnerReferences } from '@console/shared/src/selectors';\nimport { compareOwnerReference } from '@console/shared/src/utils/owner-references';\nimport { buildOwnerReference } from '../../utils';\nimport { OS_WINDOWS_PREFIX } from '../../constants';\nimport { getOperatingSystem } from './selectors';\nexport const isWindows = (vm) => (getOperatingSystem(vm) || '').startsWith(OS_WINDOWS_PREFIX);\nexport const findConversionPod = (vm, pods) => {\n    if (!pods) {\n        return null;\n    }\n    const vmOwnerReference = buildOwnerReference(vm);\n    return pods.find((pod) => {\n        const podOwnerReferences = getOwnerReferences(pod);\n        return (getNamespace(pod) === getNamespace(vm) &&\n            getName(pod).startsWith('kubevirt-v2v-conversion') &&\n            podOwnerReferences &&\n            podOwnerReferences.some((podOwnerReference) => compareOwnerReference(podOwnerReference, vmOwnerReference)));\n    });\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/combined.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/combined.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAC1F,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AAEnF,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAGjD,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAU,EAAW,EAAE,CAC/C,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAE/D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAAqB,EAAE,IAAe,EAAE,EAAE;IAC1E,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IAED,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,EAAE,CAAC,CAAC;IAEjD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;QACvB,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACnD,OAAO,CACL,YAAY,CAAC,GAAG,CAAC,KAAK,YAAY,CAAC,EAAE,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,yBAAyB,CAAC;YAClD,kBAAkB;YAClB,kBAAkB,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,EAAE,CAC5C,qBAAqB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAC3D,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { getName, getNamespace, getOwnerReferences } from '@console/shared/src/selectors';\nimport { compareOwnerReference } from '@console/shared/src/utils/owner-references';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { buildOwnerReference } from '../../utils';\nimport { VMKind } from '../../types/vm';\nimport { OS_WINDOWS_PREFIX } from '../../constants';\nimport { getOperatingSystem } from './selectors';\nimport { VMILikeEntityKind } from '../../types/vmLike';\n\nexport const isWindows = (vm: VMKind): boolean =>\n  (getOperatingSystem(vm) || '').startsWith(OS_WINDOWS_PREFIX);\n\nexport const findConversionPod = (vm: VMILikeEntityKind, pods: PodKind[]) => {\n  if (!pods) {\n    return null;\n  }\n\n  const vmOwnerReference = buildOwnerReference(vm);\n\n  return pods.find((pod) => {\n    const podOwnerReferences = getOwnerReferences(pod);\n    return (\n      getNamespace(pod) === getNamespace(vm) &&\n      getName(pod).startsWith('kubevirt-v2v-conversion') &&\n      podOwnerReferences &&\n      podOwnerReferences.some((podOwnerReference) =>\n        compareOwnerReference(podOwnerReference, vmOwnerReference),\n      )\n    );\n  });\n};\n"]}]}