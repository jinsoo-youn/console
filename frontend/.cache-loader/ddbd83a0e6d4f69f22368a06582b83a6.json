{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useFormikContext } from 'formik';\nimport { ResourceName } from '@console/internal/components/utils';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { DropdownField } from '@console/shared';\nimport { getTagDataWithDisplayName, getPorts, } from '../../../utils/imagestream-utils';\nimport { useSafeK8s } from '../../../utils/safe-k8s-hook';\nimport ImageStreamInfo from './ImageStreamInfo';\nconst BuilderImageTagSelector = ({ selectedBuilderImage, selectedImageTag, }) => {\n    const { setFieldValue, setFieldError } = useFormikContext();\n    const { name: imageName, tags: imageTags, displayName: imageDisplayName, imageStreamNamespace, } = selectedBuilderImage;\n    const tagItems = {};\n    _.each(imageTags, ({ name }) => (tagItems[name] = React.createElement(ResourceName, { kind: \"ImageStreamTag\", name: name })));\n    const [imageTag, displayName] = getTagDataWithDisplayName(imageTags, selectedImageTag, imageDisplayName);\n    const k8sGet = useSafeK8s();\n    React.useEffect(() => {\n        setFieldValue('image.tagObj', imageTag);\n        k8sGet(ImageStreamTagModel, `${imageName}:${selectedImageTag}`, imageStreamNamespace)\n            .then((imageStreamTag) => {\n            const ports = getPorts(imageStreamTag);\n            setFieldValue('image.ports', ports);\n        })\n            .catch((err) => setFieldError('image.ports', err.message));\n        // Find a way to use useSafeK8s hooks without adding it to the deps array.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedImageTag, setFieldValue, setFieldError, imageName, imageStreamNamespace, imageTag]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DropdownField, { name: \"image.tag\", label: \"Builder Image Version\", items: tagItems, title: tagItems[selectedImageTag], fullWidth: true, required: true }),\n        imageTag && React.createElement(ImageStreamInfo, { displayName: displayName, tag: imageTag })));\n};\nexport default BuilderImageTagSelector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAElE,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAEL,yBAAyB,EACzB,QAAQ,GACT,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAOhD,MAAM,uBAAuB,GAA2C,CAAC,EACvE,oBAAoB,EACpB,gBAAgB,GACjB,EAAE,EAAE;IACH,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IAC1E,MAAM,EACJ,IAAI,EAAE,SAAS,EACf,IAAI,EAAE,SAAS,EACf,WAAW,EAAE,gBAAgB,EAC7B,oBAAoB,GACrB,GAAG,oBAAoB,CAAC;IAEzB,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC,CAAC,IAAI,CACJ,SAAS,EACT,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,oBAAC,YAAY,IAAC,IAAI,EAAC,gBAAgB,EAAC,IAAI,EAAE,IAAI,GAAI,CAAC,CACpF,CAAC;IAEF,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,yBAAyB,CACvD,SAAS,EACT,gBAAgB,EAChB,gBAAgB,CACjB,CAAC;IAEF,MAAM,MAAM,GAAG,UAAU,EAAE,CAAC;IAE5B,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,aAAa,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QACxC,MAAM,CAAC,mBAAmB,EAAE,GAAG,SAAS,IAAI,gBAAgB,EAAE,EAAE,oBAAoB,CAAC;aAClF,IAAI,CAAC,CAAC,cAA+B,EAAE,EAAE;YACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;YACvC,aAAa,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7D,0EAA0E;QAC1E,uDAAuD;IACzD,CAAC,EAAE,CAAC,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,oBAAoB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEhG,OAAO,CACL;QACE,oBAAC,aAAa,IACZ,IAAI,EAAC,WAAW,EAChB,KAAK,EAAC,uBAAuB,EAC7B,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,QAAQ,CAAC,gBAAgB,CAAC,EACjC,SAAS,QACT,QAAQ,SACR;QACD,QAAQ,IAAI,oBAAC,eAAe,IAAC,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,QAAQ,GAAI,CACxE,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { ResourceName } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { DropdownField } from '@console/shared';\nimport {\n  BuilderImage,\n  getTagDataWithDisplayName,\n  getPorts,\n} from '../../../utils/imagestream-utils';\nimport { useSafeK8s } from '../../../utils/safe-k8s-hook';\nimport ImageStreamInfo from './ImageStreamInfo';\n\nexport interface BuilderImageTagSelectorProps {\n  selectedBuilderImage: BuilderImage;\n  selectedImageTag: string;\n}\n\nconst BuilderImageTagSelector: React.FC<BuilderImageTagSelectorProps> = ({\n  selectedBuilderImage,\n  selectedImageTag,\n}) => {\n  const { setFieldValue, setFieldError } = useFormikContext<FormikValues>();\n  const {\n    name: imageName,\n    tags: imageTags,\n    displayName: imageDisplayName,\n    imageStreamNamespace,\n  } = selectedBuilderImage;\n\n  const tagItems = {};\n  _.each(\n    imageTags,\n    ({ name }) => (tagItems[name] = <ResourceName kind=\"ImageStreamTag\" name={name} />),\n  );\n\n  const [imageTag, displayName] = getTagDataWithDisplayName(\n    imageTags,\n    selectedImageTag,\n    imageDisplayName,\n  );\n\n  const k8sGet = useSafeK8s();\n\n  React.useEffect(() => {\n    setFieldValue('image.tagObj', imageTag);\n    k8sGet(ImageStreamTagModel, `${imageName}:${selectedImageTag}`, imageStreamNamespace)\n      .then((imageStreamTag: K8sResourceKind) => {\n        const ports = getPorts(imageStreamTag);\n        setFieldValue('image.ports', ports);\n      })\n      .catch((err) => setFieldError('image.ports', err.message));\n    // Find a way to use useSafeK8s hooks without adding it to the deps array.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedImageTag, setFieldValue, setFieldError, imageName, imageStreamNamespace, imageTag]);\n\n  return (\n    <>\n      <DropdownField\n        name=\"image.tag\"\n        label=\"Builder Image Version\"\n        items={tagItems}\n        title={tagItems[selectedImageTag]}\n        fullWidth\n        required\n      />\n      {imageTag && <ImageStreamInfo displayName={displayName} tag={imageTag} />}\n    </>\n  );\n};\n\nexport default BuilderImageTagSelector;\n"]}]}