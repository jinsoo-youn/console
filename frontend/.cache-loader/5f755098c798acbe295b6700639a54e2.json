{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/create-vm-wizard/types.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/create-vm-wizard/types.ts","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export var VMWizardTab;\n(function (VMWizardTab) {\n    VMWizardTab[\"IMPORT_PROVIDERS\"] = \"IMPORT_PROVIDERS\";\n    VMWizardTab[\"VM_SETTINGS\"] = \"VM_SETTINGS\";\n    VMWizardTab[\"NETWORKING\"] = \"NETWORKING\";\n    VMWizardTab[\"STORAGE\"] = \"STORAGE\";\n    VMWizardTab[\"ADVANCED_CLOUD_INIT\"] = \"ADVANCED_CLOUD_INIT\";\n    VMWizardTab[\"ADVANCED_VIRTUAL_HARDWARE\"] = \"ADVANCED_VIRTUAL_HARDWARE\";\n    VMWizardTab[\"REVIEW\"] = \"REVIEW\";\n    VMWizardTab[\"RESULT\"] = \"RESULT\";\n})(VMWizardTab || (VMWizardTab = {}));\nexport var VMWizardProps;\n(function (VMWizardProps) {\n    VMWizardProps[\"isSimpleView\"] = \"isSimpleView\";\n    VMWizardProps[\"isCreateTemplate\"] = \"isCreateTemplate\";\n    VMWizardProps[\"isProviderImport\"] = \"isProviderImport\";\n    VMWizardProps[\"userTemplateName\"] = \"userTemplateName\";\n    VMWizardProps[\"activeNamespace\"] = \"activeNamespace\";\n    VMWizardProps[\"openshiftFlag\"] = \"openshiftFlag\";\n    VMWizardProps[\"reduxID\"] = \"reduxID\";\n    VMWizardProps[\"virtualMachines\"] = \"virtualMachines\";\n    VMWizardProps[\"userTemplates\"] = \"userTemplates\";\n    VMWizardProps[\"commonTemplates\"] = \"commonTemplates\";\n    VMWizardProps[\"dataVolumes\"] = \"dataVolumes\";\n    VMWizardProps[\"storageClassConfigMap\"] = \"storageClassConfigMap\";\n})(VMWizardProps || (VMWizardProps = {}));\n// order important\nexport const ALL_VM_WIZARD_TABS = [\n    VMWizardTab.IMPORT_PROVIDERS,\n    VMWizardTab.VM_SETTINGS,\n    VMWizardTab.NETWORKING,\n    VMWizardTab.STORAGE,\n    VMWizardTab.ADVANCED_CLOUD_INIT,\n    VMWizardTab.ADVANCED_VIRTUAL_HARDWARE,\n    VMWizardTab.REVIEW,\n    VMWizardTab.RESULT,\n];\nexport const VM_WIZARD_SIMPLE_TABS = [\n    VMWizardTab.IMPORT_PROVIDERS,\n    VMWizardTab.REVIEW,\n    VMWizardTab.RESULT,\n];\nexport const VM_WIZARD_DIFFICULT_TABS = ALL_VM_WIZARD_TABS.filter((tab) => !VM_WIZARD_SIMPLE_TABS.includes(tab));\nexport var VMSettingsField;\n(function (VMSettingsField) {\n    VMSettingsField[\"NAME\"] = \"NAME\";\n    VMSettingsField[\"HOSTNAME\"] = \"HOSTNAME\";\n    VMSettingsField[\"DESCRIPTION\"] = \"DESCRIPTION\";\n    VMSettingsField[\"PROVISION_SOURCE_TYPE\"] = \"PROVISION_SOURCE_TYPE\";\n    VMSettingsField[\"CONTAINER_IMAGE\"] = \"CONTAINER_IMAGE\";\n    VMSettingsField[\"IMAGE_URL\"] = \"IMAGE_URL\";\n    VMSettingsField[\"USER_TEMPLATE\"] = \"USER_TEMPLATE\";\n    VMSettingsField[\"OPERATING_SYSTEM\"] = \"OPERATING_SYSTEM\";\n    VMSettingsField[\"FLAVOR\"] = \"FLAVOR\";\n    VMSettingsField[\"MEMORY\"] = \"MEMORY\";\n    VMSettingsField[\"CPU\"] = \"CPU\";\n    VMSettingsField[\"WORKLOAD_PROFILE\"] = \"WORKLOAD_PROFILE\";\n    VMSettingsField[\"START_VM\"] = \"START_VM\";\n})(VMSettingsField || (VMSettingsField = {}));\nexport var ImportProvidersField;\n(function (ImportProvidersField) {\n    ImportProvidersField[\"PROVIDER\"] = \"PROVIDER\";\n    ImportProvidersField[\"PROVIDERS_DATA\"] = \"PROVIDERS_DATA\";\n})(ImportProvidersField || (ImportProvidersField = {}));\nexport var VMImportProvider;\n(function (VMImportProvider) {\n    VMImportProvider[\"VMWARE\"] = \"VMWARE\";\n    VMImportProvider[\"OVIRT\"] = \"OVIRT\";\n})(VMImportProvider || (VMImportProvider = {}));\nexport var VMWareProviderProps;\n(function (VMWareProviderProps) {\n    VMWareProviderProps[\"vCenterSecrets\"] = \"vCenterSecrets\";\n    VMWareProviderProps[\"vmwareToKubevirtOsConfigMap\"] = \"vmwareToKubevirtOsConfigMap\";\n    VMWareProviderProps[\"deploymentPods\"] = \"vmwareDeploymentPods\";\n    VMWareProviderProps[\"deployment\"] = \"vmwareDeployment\";\n    VMWareProviderProps[\"v2vvmware\"] = \"v2vvmware\";\n})(VMWareProviderProps || (VMWareProviderProps = {}));\nexport var OvirtProviderProps;\n(function (OvirtProviderProps) {\n    OvirtProviderProps[\"ovirtEngineSecrets\"] = \"ovirtEngineSecrets\";\n    OvirtProviderProps[\"deploymentPods\"] = \"ovirtDeploymentPods\";\n    OvirtProviderProps[\"deployment\"] = \"ovirtDeployment\";\n    OvirtProviderProps[\"ovirtProvider\"] = \"ovirtProvider\";\n})(OvirtProviderProps || (OvirtProviderProps = {}));\nexport var VMWareProviderField;\n(function (VMWareProviderField) {\n    VMWareProviderField[\"VCENTER_SECRET_NAME\"] = \"vmware_VCENTER\";\n    VMWareProviderField[\"HOSTNAME\"] = \"vmware_HOSTNAME\";\n    VMWareProviderField[\"USERNAME\"] = \"vmware_USER_NAME\";\n    VMWareProviderField[\"PASSWORD\"] = \"vmware_USER_PASSWORD_AND_CHECK_CONNECTION\";\n    VMWareProviderField[\"REMEMBER_PASSWORD\"] = \"vmware_REMEMBER_PASSWORD\";\n    VMWareProviderField[\"VM\"] = \"vmware_VM\";\n    VMWareProviderField[\"STATUS\"] = \"vmware_STATUS\";\n    VMWareProviderField[\"CONTROLLER_LAST_ERROR\"] = \"vmware_CONTROLLER_LAST_ERROR\";\n    VMWareProviderField[\"CURRENT_V2V_VMWARE_CR_NAME\"] = \"vmware_CURRENT_V2V_VMWARE_CR_NAME\";\n    VMWareProviderField[\"CURRENT_RESOLVED_VCENTER_SECRET_NAME\"] = \"vmware_CURRENT_RESOLVED_VCENTER_SECRET_NAME\";\n})(VMWareProviderField || (VMWareProviderField = {}));\nexport var OvirtProviderField;\n(function (OvirtProviderField) {\n    OvirtProviderField[\"OVIRT_ENGINE_SECRET_NAME\"] = \"ovirt_OVIRT_ENGINE_SECRET_NAME\";\n    OvirtProviderField[\"API_URL\"] = \"ovirt_API_URL\";\n    OvirtProviderField[\"CERTIFICATE\"] = \"ovirt_CERTIFICATE\";\n    OvirtProviderField[\"USERNAME\"] = \"ovirt_USERNAME\";\n    OvirtProviderField[\"PASSWORD\"] = \"ovirt_PASSWORD\";\n    OvirtProviderField[\"REMEMBER_PASSWORD\"] = \"ovirt_REMEMBER_PASSWORD\";\n    OvirtProviderField[\"VM\"] = \"ovirt_VM\";\n    OvirtProviderField[\"CLUSTER\"] = \"ovirt_CLUSTER\";\n    OvirtProviderField[\"STATUS\"] = \"ovirt_STATUS\";\n    OvirtProviderField[\"CONTROLLER_LAST_ERROR\"] = \"ovirt_CONTROLLER_LAST_ERROR\";\n    OvirtProviderField[\"CURRENT_OVIRT_PROVIDER_CR_NAME\"] = \"ovirt_CURRENT_OVIRT_PROVIDER_CR_NAME\";\n    OvirtProviderField[\"CURRENT_RESOLVED_OVIRT_ENGINE_SECRET_NAME\"] = \"ovirt_CURRENT_RESOLVED_OVIRT_ENGINE_SECRET_NAME\";\n})(OvirtProviderField || (OvirtProviderField = {}));\nexport var CloudInitField;\n(function (CloudInitField) {\n    CloudInitField[\"IS_FORM\"] = \"IS_FORM\";\n})(CloudInitField || (CloudInitField = {}));\nexport const DetectCommonDataChanges = new Set([\n    VMWizardProps.activeNamespace,\n    VMWizardProps.openshiftFlag,\n    VMWizardProps.virtualMachines,\n    VMWizardProps.userTemplates,\n    VMWizardProps.commonTemplates,\n    VMWizardProps.storageClassConfigMap,\n    VMWizardProps.dataVolumes,\n    VMWareProviderProps.deployment,\n    VMWareProviderProps.deploymentPods,\n    VMWareProviderProps.v2vvmware,\n    VMWareProviderProps.vmwareToKubevirtOsConfigMap,\n    VMWareProviderProps.vCenterSecrets,\n    OvirtProviderProps.deployment,\n    OvirtProviderProps.deploymentPods,\n    OvirtProviderProps.ovirtEngineSecrets,\n    OvirtProviderProps.ovirtProvider,\n]);\nexport var VMWizardNetworkType;\n(function (VMWizardNetworkType) {\n    VMWizardNetworkType[\"V2V_OVIRT_IMPORT\"] = \"V2V_OVIRT_IMPORT\";\n    VMWizardNetworkType[\"V2V_VMWARE_IMPORT\"] = \"V2V_VMWARE_IMPORT\";\n    VMWizardNetworkType[\"TEMPLATE\"] = \"TEMPLATE\";\n    VMWizardNetworkType[\"UI_DEFAULT_POD_NETWORK\"] = \"UI_DEFAULT_POD_NETWORK\";\n    VMWizardNetworkType[\"UI_INPUT\"] = \"UI_INPUT\";\n})(VMWizardNetworkType || (VMWizardNetworkType = {}));\nexport var VMWizardStorageType;\n(function (VMWizardStorageType) {\n    VMWizardStorageType[\"TEMPLATE\"] = \"TEMPLATE\";\n    VMWizardStorageType[\"PROVISION_SOURCE_TEMPLATE_DISK\"] = \"PROVISION_SOURCE_TEMPLATE_DISK\";\n    VMWizardStorageType[\"PROVISION_SOURCE_DISK\"] = \"PROVISION_SOURCE_DISK\";\n    VMWizardStorageType[\"UI_INPUT\"] = \"UI_INPUT\";\n    VMWizardStorageType[\"V2V_VMWARE_IMPORT\"] = \"V2V_VMWARE_IMPORT\";\n    VMWizardStorageType[\"V2V_VMWARE_IMPORT_TEMP\"] = \"V2V_VMWARE_IMPORT_TEMP\";\n    VMWizardStorageType[\"V2V_OVIRT_IMPORT\"] = \"V2V_OVIRT_IMPORT\";\n    VMWizardStorageType[\"WINDOWS_GUEST_TOOLS\"] = \"WINDOWS_GUEST_TOOLS\";\n    VMWizardStorageType[\"WINDOWS_GUEST_TOOLS_TEMPLATE\"] = \"WINDOWS_GUEST_TOOLS_TEMPLATE\";\n})(VMWizardStorageType || (VMWizardStorageType = {}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/create-vm-wizard/types.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/create-vm-wizard/types.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigMapKind } from '@console/internal/module/k8s';\nimport { V1Network, V1NetworkInterface } from '../../types/vm';\nimport { IDReferences } from '../../utils/redux/id-reference';\nimport { UINetworkEditConfig, UINetworkInterfaceValidation } from '../../types/ui/nic';\nimport { V1Disk } from '../../types/vm/disk/V1Disk';\nimport { V1Volume } from '../../types/vm/disk/V1Volume';\nimport { V1alpha1DataVolume } from '../../types/vm/disk/V1alpha1DataVolume';\nimport { V1PersistentVolumeClaim } from '../../types/vm/disk/V1PersistentVolumeClaim';\nimport { UIStorageEditConfig, UIStorageValidation } from '../../types/ui/storage';\n\nexport enum VMWizardTab {\n  IMPORT_PROVIDERS = 'IMPORT_PROVIDERS',\n  VM_SETTINGS = 'VM_SETTINGS',\n  NETWORKING = 'NETWORKING',\n  STORAGE = 'STORAGE',\n  ADVANCED_CLOUD_INIT = 'ADVANCED_CLOUD_INIT',\n  ADVANCED_VIRTUAL_HARDWARE = 'ADVANCED_VIRTUAL_HARDWARE',\n  REVIEW = 'REVIEW',\n  RESULT = 'RESULT',\n}\n\nexport enum VMWizardProps {\n  isSimpleView = 'isSimpleView',\n  isCreateTemplate = 'isCreateTemplate',\n  isProviderImport = 'isProviderImport',\n  userTemplateName = 'userTemplateName',\n  activeNamespace = 'activeNamespace',\n  openshiftFlag = 'openshiftFlag',\n  reduxID = 'reduxID',\n  virtualMachines = 'virtualMachines',\n  userTemplates = 'userTemplates',\n  commonTemplates = 'commonTemplates',\n  dataVolumes = 'dataVolumes',\n  storageClassConfigMap = 'storageClassConfigMap',\n}\n\n// order important\nexport const ALL_VM_WIZARD_TABS = [\n  VMWizardTab.IMPORT_PROVIDERS,\n  VMWizardTab.VM_SETTINGS,\n  VMWizardTab.NETWORKING,\n  VMWizardTab.STORAGE,\n  VMWizardTab.ADVANCED_CLOUD_INIT,\n  VMWizardTab.ADVANCED_VIRTUAL_HARDWARE,\n  VMWizardTab.REVIEW,\n  VMWizardTab.RESULT,\n];\n\nexport const VM_WIZARD_SIMPLE_TABS = [\n  VMWizardTab.IMPORT_PROVIDERS,\n  VMWizardTab.REVIEW,\n  VMWizardTab.RESULT,\n];\n\nexport const VM_WIZARD_DIFFICULT_TABS = ALL_VM_WIZARD_TABS.filter(\n  (tab) => !VM_WIZARD_SIMPLE_TABS.includes(tab),\n);\n\nexport enum VMSettingsField {\n  NAME = 'NAME',\n  HOSTNAME = 'HOSTNAME',\n  DESCRIPTION = 'DESCRIPTION',\n  PROVISION_SOURCE_TYPE = 'PROVISION_SOURCE_TYPE',\n  CONTAINER_IMAGE = 'CONTAINER_IMAGE',\n  IMAGE_URL = 'IMAGE_URL',\n  USER_TEMPLATE = 'USER_TEMPLATE',\n  OPERATING_SYSTEM = 'OPERATING_SYSTEM',\n  FLAVOR = 'FLAVOR',\n  MEMORY = 'MEMORY',\n  CPU = 'CPU',\n  WORKLOAD_PROFILE = 'WORKLOAD_PROFILE',\n  START_VM = 'START_VM',\n}\n\nexport enum ImportProvidersField {\n  PROVIDER = 'PROVIDER',\n  PROVIDERS_DATA = 'PROVIDERS_DATA',\n}\n\nexport enum VMImportProvider {\n  VMWARE = 'VMWARE',\n  OVIRT = 'OVIRT',\n}\n\nexport enum VMWareProviderProps {\n  vCenterSecrets = 'vCenterSecrets',\n  vmwareToKubevirtOsConfigMap = 'vmwareToKubevirtOsConfigMap',\n  deploymentPods = 'vmwareDeploymentPods',\n  deployment = 'vmwareDeployment',\n  v2vvmware = 'v2vvmware',\n}\n\nexport enum OvirtProviderProps {\n  ovirtEngineSecrets = 'ovirtEngineSecrets',\n  deploymentPods = 'ovirtDeploymentPods',\n  deployment = 'ovirtDeployment',\n  ovirtProvider = 'ovirtProvider',\n}\n\nexport enum VMWareProviderField {\n  VCENTER_SECRET_NAME = 'vmware_VCENTER',\n  HOSTNAME = 'vmware_HOSTNAME',\n  USERNAME = 'vmware_USER_NAME',\n  PASSWORD = 'vmware_USER_PASSWORD_AND_CHECK_CONNECTION',\n  REMEMBER_PASSWORD = 'vmware_REMEMBER_PASSWORD',\n\n  VM = 'vmware_VM',\n\n  STATUS = 'vmware_STATUS',\n\n  CONTROLLER_LAST_ERROR = 'vmware_CONTROLLER_LAST_ERROR',\n\n  CURRENT_V2V_VMWARE_CR_NAME = 'vmware_CURRENT_V2V_VMWARE_CR_NAME',\n  CURRENT_RESOLVED_VCENTER_SECRET_NAME = 'vmware_CURRENT_RESOLVED_VCENTER_SECRET_NAME',\n}\n\nexport enum OvirtProviderField {\n  OVIRT_ENGINE_SECRET_NAME = 'ovirt_OVIRT_ENGINE_SECRET_NAME',\n  API_URL = 'ovirt_API_URL',\n  CERTIFICATE = 'ovirt_CERTIFICATE',\n  USERNAME = 'ovirt_USERNAME',\n  PASSWORD = 'ovirt_PASSWORD',\n  REMEMBER_PASSWORD = 'ovirt_REMEMBER_PASSWORD',\n\n  VM = 'ovirt_VM',\n  CLUSTER = 'ovirt_CLUSTER',\n\n  STATUS = 'ovirt_STATUS',\n\n  CONTROLLER_LAST_ERROR = 'ovirt_CONTROLLER_LAST_ERROR',\n\n  CURRENT_OVIRT_PROVIDER_CR_NAME = 'ovirt_CURRENT_OVIRT_PROVIDER_CR_NAME',\n  CURRENT_RESOLVED_OVIRT_ENGINE_SECRET_NAME = 'ovirt_CURRENT_RESOLVED_OVIRT_ENGINE_SECRET_NAME',\n}\n\nexport enum CloudInitField {\n  IS_FORM = 'IS_FORM',\n}\n\nexport type VMSettingsRenderableField = Exclude<VMSettingsField, VMSettingsField.HOSTNAME>;\n\nexport type ImportProviderRenderableField = Exclude<\n  ImportProvidersField,\n  ImportProvidersField.PROVIDERS_DATA\n>;\n\nexport type VMWareProviderRenderableField =\n  | VMWareProviderField.VCENTER_SECRET_NAME\n  | VMWareProviderField.HOSTNAME\n  | VMWareProviderField.USERNAME\n  | VMWareProviderField.PASSWORD\n  | VMWareProviderField.REMEMBER_PASSWORD\n  | VMWareProviderField.STATUS\n  | VMWareProviderField.VM;\n\nexport type OvirtProviderRenderableField =\n  | OvirtProviderField.OVIRT_ENGINE_SECRET_NAME\n  | OvirtProviderField.API_URL\n  | OvirtProviderField.CERTIFICATE\n  | OvirtProviderField.USERNAME\n  | OvirtProviderField.PASSWORD\n  | OvirtProviderField.REMEMBER_PASSWORD\n  | OvirtProviderField.STATUS\n  | OvirtProviderField.CLUSTER\n  | OvirtProviderField.VM;\n\nexport type RenderableField =\n  | VMSettingsRenderableField\n  | ImportProviderRenderableField\n  | VMWareProviderRenderableField\n  | OvirtProviderRenderableField;\n\nexport type RenderableFieldResolver = {\n  [key in RenderableField]: string;\n};\n\nexport type VMWizardTabMetadata = {\n  isValid?: boolean;\n  isLocked?: boolean;\n  isHidden?: boolean;\n  isPending?: boolean;\n  hasAllRequiredFilled?: boolean;\n  error?: string;\n  isCreateDisabled?: boolean;\n  isUpdateDisabled?: boolean;\n  isDeleteDisabled?: boolean;\n};\n\nexport type VMWizardTabsMetadata = {\n  [k in VMWizardTab]: VMWizardTabMetadata;\n};\n\nexport type VMWizardTabState = VMWizardTabMetadata & {\n  value: any;\n};\n\nexport type SettingsFieldType<Field = VMSettingsField> = {\n  value: any;\n  key: Field;\n  isRequired?: any;\n  isHidden?: any;\n  isDisabled?: any;\n  [k: string]: any;\n};\n\nexport type ChangedCommonDataProp =\n  | VMWizardProps.activeNamespace\n  | VMWizardProps.openshiftFlag\n  | VMWizardProps.virtualMachines\n  | VMWizardProps.userTemplates\n  | VMWizardProps.commonTemplates\n  | VMWizardProps.dataVolumes\n  | VMWizardProps.storageClassConfigMap\n  | VMWareProviderProps.deployment\n  | VMWareProviderProps.deploymentPods\n  | VMWareProviderProps.v2vvmware\n  | VMWareProviderProps.vmwareToKubevirtOsConfigMap\n  | VMWareProviderProps.vCenterSecrets\n  | OvirtProviderProps.deployment\n  | OvirtProviderProps.deploymentPods\n  | OvirtProviderProps.ovirtEngineSecrets\n  | OvirtProviderProps.ovirtProvider;\n\nexport type CommonDataProp =\n  | VMWizardProps.isSimpleView\n  | VMWizardProps.isCreateTemplate\n  | VMWizardProps.isProviderImport\n  | VMWizardProps.userTemplateName\n  | ChangedCommonDataProp;\n\nexport type ChangedCommonData = Set<ChangedCommonDataProp>;\n\nexport const DetectCommonDataChanges = new Set<ChangedCommonDataProp>([\n  VMWizardProps.activeNamespace,\n  VMWizardProps.openshiftFlag,\n  VMWizardProps.virtualMachines,\n  VMWizardProps.userTemplates,\n  VMWizardProps.commonTemplates,\n  VMWizardProps.storageClassConfigMap,\n  VMWizardProps.dataVolumes,\n  VMWareProviderProps.deployment,\n  VMWareProviderProps.deploymentPods,\n  VMWareProviderProps.v2vvmware,\n  VMWareProviderProps.vmwareToKubevirtOsConfigMap,\n  VMWareProviderProps.vCenterSecrets,\n  OvirtProviderProps.deployment,\n  OvirtProviderProps.deploymentPods,\n  OvirtProviderProps.ovirtEngineSecrets,\n  OvirtProviderProps.ovirtProvider,\n]);\n\nexport type CommonData = {\n  data?: {\n    isSimpleView?: boolean;\n    isCreateTemplate?: boolean;\n    isProviderImport?: boolean;\n    userTemplateName?: string;\n    storageClassConfigMap?: {\n      loaded: boolean;\n      loadError: string;\n      data: ConfigMapKind;\n    };\n  };\n  dataIDReferences?: IDReferences;\n};\n\nexport enum VMWizardNetworkType {\n  V2V_OVIRT_IMPORT = 'V2V_OVIRT_IMPORT',\n  V2V_VMWARE_IMPORT = 'V2V_VMWARE_IMPORT',\n  TEMPLATE = 'TEMPLATE',\n  UI_DEFAULT_POD_NETWORK = 'UI_DEFAULT_POD_NETWORK',\n  UI_INPUT = 'UI_INPUT',\n}\n\nexport type VMWizardNetwork = {\n  id?: string;\n  type: VMWizardNetworkType;\n  network: V1Network;\n  networkInterface: V1NetworkInterface;\n  validation?: UINetworkInterfaceValidation;\n  editConfig?: UINetworkEditConfig;\n  importData?: {\n    id?: string;\n    vnicID?: string;\n  };\n};\n\nexport enum VMWizardStorageType {\n  TEMPLATE = 'TEMPLATE',\n  PROVISION_SOURCE_TEMPLATE_DISK = 'PROVISION_SOURCE_TEMPLATE_DISK',\n  PROVISION_SOURCE_DISK = 'PROVISION_SOURCE_DISK',\n  UI_INPUT = 'UI_INPUT',\n  V2V_VMWARE_IMPORT = 'V2V_VMWARE_IMPORT',\n  V2V_VMWARE_IMPORT_TEMP = 'V2V_VMWARE_IMPORT_TEMP',\n  V2V_OVIRT_IMPORT = 'V2V_OVIRT_IMPORT',\n  WINDOWS_GUEST_TOOLS = 'WINDOWS_GUEST_TOOLS',\n  WINDOWS_GUEST_TOOLS_TEMPLATE = 'WINDOWS_GUEST_TOOLS_TEMPLATE',\n}\n\nexport type VMWizardStorage = {\n  id?: string;\n  type: VMWizardStorageType;\n  disk?: V1Disk;\n  volume?: V1Volume;\n  dataVolume?: V1alpha1DataVolume;\n  validation?: UIStorageValidation;\n  persistentVolumeClaim?: V1PersistentVolumeClaim;\n  editConfig?: UIStorageEditConfig;\n  importData?: {\n    id?: string;\n    mountPath?: string;\n    devicePath?: string;\n    fileName?: string;\n  };\n};\n"]}]}