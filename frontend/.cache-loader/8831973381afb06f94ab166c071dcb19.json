{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/nodes/VmNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/nodes/VmNode.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\nimport { VirtualMachineIcon } from '@patternfly/react-icons';\nimport { observer, useCombineRefs, createSvgIdUrl, useHover, useAnchor, RectAnchor, } from '@console/topology';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport SvgBoxedText from '@console/dev-console/src/components/svg/SvgBoxedText';\nimport { useDisplayFilters, getTopologyResourceObject, useSearchFilter, NODE_SHADOW_FILTER_ID, NODE_SHADOW_FILTER_ID_HOVER, NodeShadows, } from '@console/dev-console/src/components/topology';\nimport './VmNode.scss';\nimport { VMStatus } from '../../../constants/vm/vm-status';\nconst VM_NODE_RADIUS = 10;\nconst VM_STATUS_GAP = 7;\nconst VM_STATUS_WIDTH = 7;\nconst VM_STATUS_RADIUS = 7;\nconst ObservedVmNode = ({ element, dragNodeRef, dndDropRef, canDrop, dragging, edgeDragging, dropTarget, selected, onSelect, onContextMenu, contextMenuOpen, onHideCreateConnector, onShowCreateConnector, }) => {\n    const [hover, hoverRef] = useHover();\n    useAnchor(RectAnchor);\n    const refs = useCombineRefs(hoverRef, dragNodeRef);\n    const { width, height } = element.getBounds();\n    const vmData = element.getData().data;\n    const { kind, osImage, vmStatusBundle } = vmData;\n    const displayFilters = useDisplayFilters();\n    const [filtered] = useSearchFilter(element.getLabel());\n    const iconRadius = Math.min(width, height) * 0.25;\n    const showLabels = displayFilters.showLabels || hover;\n    const tipContent = `Create a visual connector`;\n    const resourceObj = getTopologyResourceObject(element.getData());\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n        group: resourceModel.apiGroup,\n        verb: 'patch',\n        resource: resourceModel.plural,\n        name: resourceObj.metadata.name,\n        namespace: resourceObj.metadata.namespace,\n    });\n    React.useLayoutEffect(() => {\n        if (editAccess) {\n            if (hover) {\n                onShowCreateConnector && onShowCreateConnector();\n            }\n            else {\n                onHideCreateConnector && onHideCreateConnector();\n            }\n        }\n    }, [hover, onShowCreateConnector, onHideCreateConnector, editAccess]);\n    let statusClass;\n    const statusMessage = vmStatusBundle.message;\n    switch (vmStatusBundle.status) {\n        case VMStatus.V2V_CONVERSION_PENDING:\n        case VMStatus.V2V_VM_IMPORT_PENDING:\n        case VMStatus.CDI_IMPORT_PENDING:\n            statusClass = 'kubevirt-m-pending';\n            break;\n        case VMStatus.V2V_CONVERSION_ERROR:\n        case VMStatus.POD_ERROR:\n        case VMStatus.VM_ERROR:\n        case VMStatus.VMI_ERROR:\n        case VMStatus.CDI_IMPORT_ERROR:\n        case VMStatus.V2V_VM_IMPORT_ERROR:\n        case VMStatus.PAUSED:\n            statusClass = 'kubevirt-m-error';\n            break;\n        case VMStatus.VMI_WAITING:\n        case VMStatus.STARTING:\n            statusClass = 'kubevirt-m-not-ready';\n            break;\n        case VMStatus.STOPPING:\n            statusClass = 'kubevirt-m-terminating';\n            break;\n        case VMStatus.MIGRATING:\n        case VMStatus.RUNNING:\n            statusClass = 'kubevirt-m-running';\n            break;\n        case VMStatus.OFF:\n            statusClass = 'kubevirt-m-off';\n            break;\n        case VMStatus.V2V_CONVERSION_IN_PROGRESS:\n        case VMStatus.V2V_VM_IMPORT_IN_PROGRESS:\n        case VMStatus.CDI_IMPORTING:\n            statusClass = 'kubevirt-m-importing';\n            break;\n        case VMStatus.UNKNOWN:\n        default:\n            statusClass = 'kubevirt-m-unknown';\n    }\n    const statusRect = (React.createElement(\"rect\", { className: \"kubevirt-vm-node__status\", x: VM_STATUS_GAP, y: VM_STATUS_GAP, rx: VM_STATUS_RADIUS, ry: VM_STATUS_RADIUS, width: width - VM_STATUS_GAP * 2, height: height - VM_STATUS_GAP * 2 }));\n    const imageProps = {\n        x: width / 2 - iconRadius,\n        y: height / 2 - iconRadius,\n        width: iconRadius * 2,\n        height: iconRadius * 2,\n    };\n    const imageComponent = osImage ? (React.createElement(\"image\", Object.assign({}, imageProps, { xlinkHref: osImage }))) : (React.createElement(VirtualMachineIcon, Object.assign({}, imageProps)));\n    return (React.createElement(\"g\", null,\n        React.createElement(Tooltip, { content: tipContent, trigger: \"manual\", isVisible: dropTarget && canDrop, tippyProps: { duration: 0, delay: 0 } },\n            React.createElement(\"g\", { className: classNames('odc-base-node kubevirt-vm-node', statusClass, {\n                    'is-hover': hover || contextMenuOpen,\n                    'is-highlight': canDrop,\n                    'is-dragging': dragging || edgeDragging,\n                    'is-dropTarget': canDrop && dropTarget,\n                    'is-filtered': filtered,\n                    'is-selected': selected,\n                }) },\n                React.createElement(NodeShadows, null),\n                React.createElement(\"g\", { \"data-test-id\": \"base-node-handler\", onClick: onSelect, onContextMenu: editAccess ? onContextMenu : null, ref: refs },\n                    React.createElement(\"rect\", { className: \"odc-base-node__bg\", ref: dndDropRef, x: 0, y: 0, rx: VM_NODE_RADIUS, ry: VM_NODE_RADIUS, width: width, height: height, filter: createSvgIdUrl(hover || dragging || edgeDragging || dropTarget || contextMenuOpen\n                            ? NODE_SHADOW_FILTER_ID_HOVER\n                            : NODE_SHADOW_FILTER_ID) }),\n                    statusMessage ? React.createElement(Tooltip, { content: statusMessage }, statusRect) : statusRect,\n                    React.createElement(\"rect\", { className: \"kubevirt-vm-node__bg\", x: VM_STATUS_GAP + VM_STATUS_WIDTH, y: VM_STATUS_GAP + VM_STATUS_WIDTH, width: width - (VM_STATUS_GAP + VM_STATUS_WIDTH) * 2, height: height - (VM_STATUS_GAP + VM_STATUS_WIDTH) * 2 }),\n                    imageComponent,\n                    showLabels && (vmData.kind || element.getLabel()) && (React.createElement(SvgBoxedText, { className: \"odc-base-node__label\", x: width / 2, y: height + 24, paddingX: 8, paddingY: 4, kind: kind }, element.getLabel())))))));\n};\nconst VmNode = observer(ObservedVmNode);\nexport { VmNode };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/nodes/VmNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/nodes/VmNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\nimport { VirtualMachineIcon } from '@patternfly/react-icons';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithContextMenuProps,\n  WithCreateConnectorProps,\n  WithDragNodeProps,\n  WithDndDropProps,\n  useCombineRefs,\n  createSvgIdUrl,\n  useHover,\n  useAnchor,\n  RectAnchor,\n} from '@console/topology';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport SvgBoxedText from '@console/dev-console/src/components/svg/SvgBoxedText';\nimport {\n  useDisplayFilters,\n  getTopologyResourceObject,\n  useSearchFilter,\n  NODE_SHADOW_FILTER_ID,\n  NODE_SHADOW_FILTER_ID_HOVER,\n  NodeShadows,\n  TopologyDataObject,\n} from '@console/dev-console/src/components/topology';\nimport { NodeModel } from '@console/topology/src/types';\nimport './VmNode.scss';\nimport { VMStatus } from '../../../constants/vm/vm-status';\nimport { VMNodeData } from '../../types';\n\nexport type VmNodeProps = {\n  element: Node<NodeModel, TopologyDataObject<VMNodeData>>;\n  hover?: boolean;\n  dragging?: boolean;\n  edgeDragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithCreateConnectorProps;\n\nconst VM_NODE_RADIUS = 10;\nconst VM_STATUS_GAP = 7;\nconst VM_STATUS_WIDTH = 7;\nconst VM_STATUS_RADIUS = 7;\n\nconst ObservedVmNode: React.FC<VmNodeProps> = ({\n  element,\n  dragNodeRef,\n  dndDropRef,\n  canDrop,\n  dragging,\n  edgeDragging,\n  dropTarget,\n  selected,\n  onSelect,\n  onContextMenu,\n  contextMenuOpen,\n  onHideCreateConnector,\n  onShowCreateConnector,\n}) => {\n  const [hover, hoverRef] = useHover();\n  useAnchor(RectAnchor);\n  const refs = useCombineRefs<SVGEllipseElement>(hoverRef, dragNodeRef);\n  const { width, height } = element.getBounds();\n  const vmData = element.getData().data;\n  const { kind, osImage, vmStatusBundle } = vmData;\n  const displayFilters = useDisplayFilters();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const iconRadius = Math.min(width, height) * 0.25;\n  const showLabels = displayFilters.showLabels || hover;\n  const tipContent = `Create a visual connector`;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const editAccess = useAccessReview({\n    group: resourceModel.apiGroup,\n    verb: 'patch',\n    resource: resourceModel.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n\n  React.useLayoutEffect(() => {\n    if (editAccess) {\n      if (hover) {\n        onShowCreateConnector && onShowCreateConnector();\n      } else {\n        onHideCreateConnector && onHideCreateConnector();\n      }\n    }\n  }, [hover, onShowCreateConnector, onHideCreateConnector, editAccess]);\n\n  let statusClass;\n  const statusMessage = vmStatusBundle.message;\n  switch (vmStatusBundle.status) {\n    case VMStatus.V2V_CONVERSION_PENDING:\n    case VMStatus.V2V_VM_IMPORT_PENDING:\n    case VMStatus.CDI_IMPORT_PENDING:\n      statusClass = 'kubevirt-m-pending';\n      break;\n    case VMStatus.V2V_CONVERSION_ERROR:\n    case VMStatus.POD_ERROR:\n    case VMStatus.VM_ERROR:\n    case VMStatus.VMI_ERROR:\n    case VMStatus.CDI_IMPORT_ERROR:\n    case VMStatus.V2V_VM_IMPORT_ERROR:\n    case VMStatus.PAUSED:\n      statusClass = 'kubevirt-m-error';\n      break;\n    case VMStatus.VMI_WAITING:\n    case VMStatus.STARTING:\n      statusClass = 'kubevirt-m-not-ready';\n      break;\n    case VMStatus.STOPPING:\n      statusClass = 'kubevirt-m-terminating';\n      break;\n    case VMStatus.MIGRATING:\n    case VMStatus.RUNNING:\n      statusClass = 'kubevirt-m-running';\n      break;\n    case VMStatus.OFF:\n      statusClass = 'kubevirt-m-off';\n      break;\n    case VMStatus.V2V_CONVERSION_IN_PROGRESS:\n    case VMStatus.V2V_VM_IMPORT_IN_PROGRESS:\n    case VMStatus.CDI_IMPORTING:\n      statusClass = 'kubevirt-m-importing';\n      break;\n    case VMStatus.UNKNOWN:\n    default:\n      statusClass = 'kubevirt-m-unknown';\n  }\n\n  const statusRect = (\n    <rect\n      className=\"kubevirt-vm-node__status\"\n      x={VM_STATUS_GAP}\n      y={VM_STATUS_GAP}\n      rx={VM_STATUS_RADIUS}\n      ry={VM_STATUS_RADIUS}\n      width={width - VM_STATUS_GAP * 2}\n      height={height - VM_STATUS_GAP * 2}\n    />\n  );\n\n  const imageProps = {\n    x: width / 2 - iconRadius,\n    y: height / 2 - iconRadius,\n    width: iconRadius * 2,\n    height: iconRadius * 2,\n  };\n  const imageComponent = osImage ? (\n    <image {...imageProps} xlinkHref={osImage} />\n  ) : (\n    <VirtualMachineIcon {...imageProps} />\n  );\n\n  return (\n    <g>\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        tippyProps={{ duration: 0, delay: 0 }}\n      >\n        <g\n          className={classNames('odc-base-node kubevirt-vm-node', statusClass, {\n            'is-hover': hover || contextMenuOpen,\n            'is-highlight': canDrop,\n            'is-dragging': dragging || edgeDragging,\n            'is-dropTarget': canDrop && dropTarget,\n            'is-filtered': filtered,\n            'is-selected': selected,\n          })}\n        >\n          <NodeShadows />\n          <g\n            data-test-id=\"base-node-handler\"\n            onClick={onSelect}\n            onContextMenu={editAccess ? onContextMenu : null}\n            ref={refs}\n          >\n            <rect\n              className=\"odc-base-node__bg\"\n              ref={dndDropRef}\n              x={0}\n              y={0}\n              rx={VM_NODE_RADIUS}\n              ry={VM_NODE_RADIUS}\n              width={width}\n              height={height}\n              filter={createSvgIdUrl(\n                hover || dragging || edgeDragging || dropTarget || contextMenuOpen\n                  ? NODE_SHADOW_FILTER_ID_HOVER\n                  : NODE_SHADOW_FILTER_ID,\n              )}\n            />\n            {statusMessage ? <Tooltip content={statusMessage}>{statusRect}</Tooltip> : statusRect}\n            <rect\n              className=\"kubevirt-vm-node__bg\"\n              x={VM_STATUS_GAP + VM_STATUS_WIDTH}\n              y={VM_STATUS_GAP + VM_STATUS_WIDTH}\n              width={width - (VM_STATUS_GAP + VM_STATUS_WIDTH) * 2}\n              height={height - (VM_STATUS_GAP + VM_STATUS_WIDTH) * 2}\n            />\n            {imageComponent}\n            {showLabels && (vmData.kind || element.getLabel()) && (\n              <SvgBoxedText\n                className=\"odc-base-node__label\"\n                x={width / 2}\n                y={height + 24}\n                paddingX={8}\n                paddingY={4}\n                kind={kind}\n              >\n                {element.getLabel()}\n              </SvgBoxedText>\n            )}\n          </g>\n        </g>\n      </Tooltip>\n    </g>\n  );\n};\n\nconst VmNode = observer(ObservedVmNode);\nexport { VmNode };\n"]}]}