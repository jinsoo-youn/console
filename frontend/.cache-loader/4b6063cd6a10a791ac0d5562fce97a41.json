{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/utils/modal-launcher.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/utils/modal-launcher.tsx","mtime":1617848124060},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '@console/internal/components/factory';\n// import { useFormContext } from 'react-hook-form';\nexport const _ModalLauncher = props => {\n    const { inProgress, errorMessage, title, children, cancel, handleMethod, index, submitText, id } = props;\n    const onCancel = () => {\n        // 수정일 경우에만 타는 로직\n        let isModify = document.getElementById(`${id}-list`) ? true : false;\n        if (isModify) {\n            let list = document.getElementById(`${id}-list`).childNodes;\n            list.forEach(cur => {\n                if (cur['dataset']['modify'] === 'true') {\n                    cur['dataset']['modify'] = false;\n                }\n            });\n        }\n    };\n    return (React.createElement(\"form\", { onSubmit: handleMethod.bind(null, cancel, index) },\n        React.createElement(ModalTitle, null, title),\n        React.createElement(ModalBody, null, children),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, id: \"uId\", inProgress: inProgress, onCancel: onCancel, submitText: submitText, cancel: cancel })));\n};\nexport const ModalLauncher = createModalLauncher(_ModalLauncher);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/utils/modal-launcher.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/utils/modal-launcher.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,mBAAmB,EAAE,UAAU,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACrH,oDAAoD;AAEpD,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,CAAC,EAAE;IACpC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;IACzG,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,iBAAiB;QACjB,IAAI,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACpE,IAAI,QAAQ,EAAE;YACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACjB,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;oBACvC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IACF,OAAO,CACL,8BAAM,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;QACpD,oBAAC,UAAU,QAAE,KAAK,CAAc;QAChC,oBAAC,SAAS,QAAE,QAAQ,CAAa;QACjC,oBAAC,iBAAiB,IAAC,YAAY,EAAE,YAAY,EAAE,EAAE,EAAC,KAAK,EAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,GAAI,CACzI,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,mBAAmB,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '@console/internal/components/factory';\n// import { useFormContext } from 'react-hook-form';\n\nexport const _ModalLauncher = props => {\n  const { inProgress, errorMessage, title, children, cancel, handleMethod, index, submitText, id } = props;\n  const onCancel = () => {\n    // 수정일 경우에만 타는 로직\n    let isModify = document.getElementById(`${id}-list`) ? true : false;\n    if (isModify) {\n      let list = document.getElementById(`${id}-list`).childNodes;\n      list.forEach(cur => {\n        if (cur['dataset']['modify'] === 'true') {\n          cur['dataset']['modify'] = false;\n        }\n      });\n    }\n  };\n  return (\n    <form onSubmit={handleMethod.bind(null, cancel, index)}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{children}</ModalBody>\n      <ModalSubmitFooter errorMessage={errorMessage} id=\"uId\" inProgress={inProgress} onCancel={onCancel} submitText={submitText} cancel={cancel} />\n    </form>\n  );\n};\n\nexport const ModalLauncher = createModalLauncher(_ModalLauncher);\n"]}]}