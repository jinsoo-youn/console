{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-page.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { Firehose, PageHeading, StatusBox, MsgBox, ExternalLink, skeletonCatalog, } from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { ErrorBoundaryFallback } from '@console/internal/components/error';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { fromRequirements } from '@console/internal/module/k8s/selector';\nimport { PackageManifestModel, OperatorGroupModel, SubscriptionModel } from '../../models';\nimport { iconFor } from '..';\nimport { installedFor, subscriptionFor } from '../operator-group';\nimport { getOperatorProviderType } from './operator-hub-utils';\nimport { OperatorHubTileView } from './operator-hub-items';\nimport { InstalledState, OperatorHubCSVAnnotationKey, } from './index';\nimport { parseJSONAnnotation } from '@console/shared';\nconst ANNOTATIONS_WITH_JSON = [\n    OperatorHubCSVAnnotationKey.infrastructureFeatures,\n    OperatorHubCSVAnnotationKey.validSubscription,\n];\nexport const OperatorHubList = (props) => {\n    const { operatorGroup, subscription, loaded, loadError, namespace = '' } = props;\n    // FIXME optional chaining\n    const marketplaceItems = _.get(props.marketplacePackageManifest, 'data', []);\n    const localItems = _.get(props, 'packageManifest.data', []); // FIXME optional chaining\n    const getPackageStatus = (pkg) => _.get(pkg, 'status'); // FIXME optional chaining and/or is this needed?\n    const items = React.useMemo(() => {\n        return marketplaceItems\n            .concat(localItems)\n            .filter((pkg) => {\n            // if a package does not have status.defaultChannel, exclude it so the app doesn't fail\n            const { defaultChannel } = getPackageStatus(pkg);\n            if (!defaultChannel) {\n                // eslint-disable-next-line no-console\n                console.warn(`PackageManifest ${pkg.metadata.name} has no status.defaultChannel and has been excluded`);\n                return false;\n            }\n            return true;\n        })\n            .map((pkg) => {\n            const { channels, defaultChannel } = getPackageStatus(pkg);\n            const { currentCSVDesc } = _.find(channels || [], { name: defaultChannel });\n            // FIXME optional chaining\n            const currentCSVAnnotations = _.get(currentCSVDesc, 'annotations', {});\n            const [infraFeatures, validSubscription] = ANNOTATIONS_WITH_JSON.map((annotationKey) => {\n                return parseJSONAnnotation(currentCSVAnnotations, annotationKey, () => \n                // eslint-disable-next-line no-console\n                console.warn(`Error parsing annotation in PackageManifest ${pkg.metadata.name}`));\n            });\n            const { certifiedLevel, healthIndex, repository, containerImage, createdAt, support, capabilities: capabilityLevel, [OperatorHubCSVAnnotationKey.actionText]: marketplaceActionText, [OperatorHubCSVAnnotationKey.remoteWorkflow]: marketplaceRemoteWorkflow, [OperatorHubCSVAnnotationKey.supportWorkflow]: marketplaceSupportWorkflow, } = currentCSVAnnotations;\n            return {\n                obj: pkg,\n                kind: PackageManifestModel.kind,\n                name: _.get(currentCSVDesc, 'displayName', pkg.metadata.name),\n                uid: `${pkg.metadata.name}-${pkg.status.catalogSource}-${pkg.status.catalogSourceNamespace}`,\n                installed: installedFor(subscription.data)(operatorGroup.data)(pkg.status.packageName)(namespace),\n                subscription: subscriptionFor(subscription.data)(operatorGroup.data)(pkg.status.packageName)(namespace),\n                // FIXME: Just use `installed`\n                installState: installedFor(subscription.data)(operatorGroup.data)(pkg.status.packageName)(namespace)\n                    ? InstalledState.Installed\n                    : InstalledState.NotInstalled,\n                imgUrl: iconFor(pkg),\n                description: currentCSVAnnotations.description || currentCSVDesc.description,\n                longDescription: currentCSVDesc.description || currentCSVAnnotations.description,\n                provider: _.get(pkg, 'status.provider.name', _.get(pkg, 'metadata.labels.provider')),\n                providerType: getOperatorProviderType(pkg),\n                tags: [],\n                version: _.get(currentCSVDesc, 'version'),\n                categories: _.get(currentCSVAnnotations, 'categories', '') // FIXME optional chaining\n                    .split(',')\n                    .map((category) => category.trim()),\n                catalogSource: _.get(pkg, 'status.catalogSource'),\n                catalogSourceNamespace: _.get(pkg, 'status.catalogSourceNamespace'),\n                certifiedLevel,\n                healthIndex,\n                repository,\n                containerImage,\n                createdAt,\n                support,\n                capabilityLevel,\n                marketplaceActionText,\n                marketplaceRemoteWorkflow,\n                marketplaceSupportWorkflow,\n                validSubscription,\n                infraFeatures,\n            };\n        });\n    }, [localItems, marketplaceItems, namespace, operatorGroup.data, subscription.data]);\n    const uniqueItems = _.uniqBy(items, 'uid');\n    if (uniqueItems.length !== items.length) {\n        // eslint-disable-next-line no-console\n        console.warn(`${items.length - uniqueItems.length} duplicate packagemanifests returned from olm query.`);\n    }\n    return (React.createElement(StatusBox, { skeleton: skeletonCatalog, data: items, loaded: loaded, loadError: loadError, label: \"Resources\", EmptyMsg: () => (React.createElement(MsgBox, { title: \"No OperatorHub Items Found\", detail: React.createElement(\"span\", null,\n                \"Please check that the OperatorHub is running and that you have created a valid OperatorSource. For more information about OperatorHub, please click\",\n                ' ',\n                React.createElement(ExternalLink, { href: \"https://github.com/operator-framework/operator-marketplace\", text: \"here\" }),\n                \".\") })) },\n        React.createElement(OperatorHubTileView, { items: uniqueItems, namespace: namespace })));\n};\nexport const OperatorHubPage = withFallback((props) => (React.createElement(React.Fragment, null,\n    React.createElement(Helmet, null,\n        React.createElement(\"title\", null, \"OperatorHub\")),\n    React.createElement(\"div\", { className: \"co-m-page__body\" },\n        React.createElement(\"div\", { className: \"co-catalog\" },\n            React.createElement(PageHeading, { title: \"OperatorHub\" }),\n            React.createElement(\"p\", { className: \"co-catalog-page__description\" },\n                \"Discover Operators from the Kubernetes community and Red Hat partners, curated by Red Hat. You can purchase commercial software through\",\n                ' ',\n                React.createElement(ExternalLink, { href: \"https://marketplace.redhat.com/en-us?utm_source=openshift_console\", text: \"Red Hat Marketplace\" }),\n                \". You can install Operators on your clusters to provide optional add-ons and shared services to your developers. After installation, the Operator capabilities will appear in the \",\n                React.createElement(Link, { to: \"/catalog\" }, \"Developer Catalog\"),\n                \" providing a self-service experience.\"),\n            React.createElement(\"div\", { className: \"co-catalog__body\" },\n                React.createElement(Firehose, { resources: [\n                        {\n                            isList: true,\n                            kind: referenceForModel(OperatorGroupModel),\n                            prop: 'operatorGroup',\n                        },\n                        {\n                            isList: true,\n                            kind: referenceForModel(PackageManifestModel),\n                            namespace: props.match.params.ns,\n                            selector: { 'openshift-marketplace': 'true' },\n                            prop: 'marketplacePackageManifest',\n                        },\n                        {\n                            isList: true,\n                            kind: referenceForModel(PackageManifestModel),\n                            namespace: props.match.params.ns,\n                            selector: fromRequirements([\n                                { key: 'opsrc-owner-name', operator: 'DoesNotExist' },\n                                { key: 'csc-owner-name', operator: 'DoesNotExist' },\n                            ]),\n                            prop: 'packageManifest',\n                        },\n                        {\n                            isList: true,\n                            kind: referenceForModel(SubscriptionModel),\n                            prop: 'subscription',\n                        },\n                    ] },\n                    React.createElement(OperatorHubList, Object.assign({}, props, { namespace: props.match.params.ns })))))))), ErrorBoundaryFallback);\nOperatorHubList.displayName = 'OperatorHubList';\nOperatorHubPage.displayName = 'OperatorHubPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-page.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { match } from 'react-router';\nimport {\n  Firehose,\n  PageHeading,\n  StatusBox,\n  MsgBox,\n  ExternalLink,\n  skeletonCatalog,\n} from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { ErrorBoundaryFallback } from '@console/internal/components/error';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { fromRequirements } from '@console/internal/module/k8s/selector';\nimport { PackageManifestModel, OperatorGroupModel, SubscriptionModel } from '../../models';\nimport { PackageManifestKind, OperatorGroupKind, SubscriptionKind } from '../../types';\nimport { iconFor } from '..';\nimport { installedFor, subscriptionFor } from '../operator-group';\nimport { getOperatorProviderType } from './operator-hub-utils';\nimport { OperatorHubTileView } from './operator-hub-items';\nimport {\n  OperatorHubItem,\n  OperatorHubCSVAnnotations,\n  InstalledState,\n  OperatorHubCSVAnnotationKey,\n} from './index';\nimport { parseJSONAnnotation } from '@console/shared';\n\nconst ANNOTATIONS_WITH_JSON = [\n  OperatorHubCSVAnnotationKey.infrastructureFeatures,\n  OperatorHubCSVAnnotationKey.validSubscription,\n];\n\nexport const OperatorHubList: React.SFC<OperatorHubListProps> = (props) => {\n  const { operatorGroup, subscription, loaded, loadError, namespace = '' } = props;\n  // FIXME optional chaining\n  const marketplaceItems = _.get(\n    props.marketplacePackageManifest,\n    'data',\n    [] as PackageManifestKind[],\n  );\n\n  const localItems = _.get(props, 'packageManifest.data', [] as PackageManifestKind[]); // FIXME optional chaining\n  const getPackageStatus = (pkg) => _.get(pkg, 'status'); // FIXME optional chaining and/or is this needed?\n\n  const items: OperatorHubItem[] = React.useMemo(() => {\n    return marketplaceItems\n      .concat(localItems)\n      .filter((pkg) => {\n        // if a package does not have status.defaultChannel, exclude it so the app doesn't fail\n        const { defaultChannel } = getPackageStatus(pkg);\n        if (!defaultChannel) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `PackageManifest ${pkg.metadata.name} has no status.defaultChannel and has been excluded`,\n          );\n          return false;\n        }\n        return true;\n      })\n      .map(\n        (pkg): OperatorHubItem => {\n          const { channels, defaultChannel } = getPackageStatus(pkg);\n          const { currentCSVDesc } = _.find(channels || [], { name: defaultChannel } as any);\n          // FIXME optional chaining\n          const currentCSVAnnotations: OperatorHubCSVAnnotations = _.get(\n            currentCSVDesc,\n            'annotations',\n            {},\n          );\n\n          const [infraFeatures, validSubscription] = ANNOTATIONS_WITH_JSON.map((annotationKey) => {\n            return parseJSONAnnotation(currentCSVAnnotations, annotationKey, () =>\n              // eslint-disable-next-line no-console\n              console.warn(`Error parsing annotation in PackageManifest ${pkg.metadata.name}`),\n            );\n          });\n\n          const {\n            certifiedLevel,\n            healthIndex,\n            repository,\n            containerImage,\n            createdAt,\n            support,\n            capabilities: capabilityLevel,\n            [OperatorHubCSVAnnotationKey.actionText]: marketplaceActionText,\n            [OperatorHubCSVAnnotationKey.remoteWorkflow]: marketplaceRemoteWorkflow,\n            [OperatorHubCSVAnnotationKey.supportWorkflow]: marketplaceSupportWorkflow,\n          } = currentCSVAnnotations;\n\n          return {\n            obj: pkg,\n            kind: PackageManifestModel.kind,\n            name: _.get(currentCSVDesc, 'displayName', pkg.metadata.name), // FIXME optional chaining\n            uid: `${pkg.metadata.name}-${pkg.status.catalogSource}-${pkg.status.catalogSourceNamespace}`,\n            installed: installedFor(subscription.data)(operatorGroup.data)(pkg.status.packageName)(\n              namespace,\n            ),\n            subscription: subscriptionFor(subscription.data)(operatorGroup.data)(\n              pkg.status.packageName,\n            )(namespace),\n            // FIXME: Just use `installed`\n            installState: installedFor(subscription.data)(operatorGroup.data)(\n              pkg.status.packageName,\n            )(namespace)\n              ? InstalledState.Installed\n              : InstalledState.NotInstalled,\n            imgUrl: iconFor(pkg),\n            description: currentCSVAnnotations.description || currentCSVDesc.description,\n            longDescription: currentCSVDesc.description || currentCSVAnnotations.description,\n            provider: _.get(pkg, 'status.provider.name', _.get(pkg, 'metadata.labels.provider')), // FIXME optional chaining\n            providerType: getOperatorProviderType(pkg),\n            tags: [],\n            version: _.get(currentCSVDesc, 'version'), // FIXME optional chaining\n            categories: _.get(currentCSVAnnotations, 'categories', '') // FIXME optional chaining\n              .split(',')\n              .map((category) => category.trim()),\n            catalogSource: _.get(pkg, 'status.catalogSource'), // FIXME optional chaining\n            catalogSourceNamespace: _.get(pkg, 'status.catalogSourceNamespace'), // FIXME optional chaining\n            certifiedLevel,\n            healthIndex,\n            repository,\n            containerImage,\n            createdAt,\n            support,\n            capabilityLevel,\n            marketplaceActionText,\n            marketplaceRemoteWorkflow,\n            marketplaceSupportWorkflow,\n            validSubscription,\n            infraFeatures,\n          };\n        },\n      );\n  }, [localItems, marketplaceItems, namespace, operatorGroup.data, subscription.data]);\n\n  const uniqueItems = _.uniqBy(items, 'uid');\n  if (uniqueItems.length !== items.length) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `${items.length - uniqueItems.length} duplicate packagemanifests returned from olm query.`,\n    );\n  }\n\n  return (\n    <StatusBox\n      skeleton={skeletonCatalog}\n      data={items}\n      loaded={loaded}\n      loadError={loadError}\n      label=\"Resources\"\n      EmptyMsg={() => (\n        <MsgBox\n          title=\"No OperatorHub Items Found\"\n          detail={\n            <span>\n              Please check that the OperatorHub is running and that you have created a valid\n              OperatorSource. For more information about OperatorHub, please click{' '}\n              <ExternalLink\n                href=\"https://github.com/operator-framework/operator-marketplace\"\n                text=\"here\"\n              />\n              .\n            </span>\n          }\n        />\n      )}\n    >\n      <OperatorHubTileView items={uniqueItems} namespace={namespace} />\n    </StatusBox>\n  );\n};\n\nexport const OperatorHubPage = withFallback(\n  (props: OperatorHubPageProps) => (\n    <>\n      <Helmet>\n        <title>OperatorHub</title>\n      </Helmet>\n      <div className=\"co-m-page__body\">\n        <div className=\"co-catalog\">\n          <PageHeading title=\"OperatorHub\" />\n          <p className=\"co-catalog-page__description\">\n            Discover Operators from the Kubernetes community and Red Hat partners, curated by Red\n            Hat. You can purchase commercial software through{' '}\n            <ExternalLink\n              href=\"https://marketplace.redhat.com/en-us?utm_source=openshift_console\"\n              text=\"Red Hat Marketplace\"\n            />\n            . You can install Operators on your clusters to provide optional add-ons and shared\n            services to your developers. After installation, the Operator capabilities will appear\n            in the <Link to=\"/catalog\">Developer Catalog</Link> providing a self-service experience.\n          </p>\n          <div className=\"co-catalog__body\">\n            <Firehose\n              resources={[\n                {\n                  isList: true,\n                  kind: referenceForModel(OperatorGroupModel),\n                  prop: 'operatorGroup',\n                },\n                {\n                  isList: true,\n                  kind: referenceForModel(PackageManifestModel),\n                  namespace: props.match.params.ns,\n                  selector: { 'openshift-marketplace': 'true' },\n                  prop: 'marketplacePackageManifest',\n                },\n                {\n                  isList: true,\n                  kind: referenceForModel(PackageManifestModel),\n                  namespace: props.match.params.ns,\n                  selector: fromRequirements([\n                    { key: 'opsrc-owner-name', operator: 'DoesNotExist' },\n                    { key: 'csc-owner-name', operator: 'DoesNotExist' },\n                  ]),\n                  prop: 'packageManifest',\n                },\n                {\n                  isList: true,\n                  kind: referenceForModel(SubscriptionModel),\n                  prop: 'subscription',\n                },\n              ]}\n            >\n              {/* FIXME(alecmerdler): Hack because `Firehose` injects props without TypeScript knowing about it */}\n              <OperatorHubList {...(props as any)} namespace={props.match.params.ns} />\n            </Firehose>\n          </div>\n        </div>\n      </div>\n    </>\n  ),\n  ErrorBoundaryFallback,\n);\n\nexport type OperatorHubPageProps = {\n  match: match<{ ns?: string }>;\n};\n\nexport type OperatorHubListProps = {\n  namespace?: string;\n  operatorGroup: { loaded: boolean; data?: OperatorGroupKind[] };\n  packageManifest: { loaded: boolean; data?: PackageManifestKind[] };\n  marketplacePackageManifest: { loaded: boolean; data?: PackageManifestKind[] };\n  subscription: { loaded: boolean; data?: SubscriptionKind[] };\n  loaded: boolean;\n  loadError?: string;\n};\n\nOperatorHubList.displayName = 'OperatorHubList';\nOperatorHubPage.displayName = 'OperatorHubPage';\n"]}]}