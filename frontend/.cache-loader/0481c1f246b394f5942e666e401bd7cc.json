{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/TrafficLink.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/TrafficLink.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer, EdgeConnectorArrow } from '@console/topology';\nimport { BaseEdge } from '@console/dev-console/src/components/topology';\nimport './TrafficLink.scss';\nconst TrafficLink = ({ element }) => {\n    const { percent } = element.getData().data;\n    let text = null;\n    if (percent != null) {\n        const startPoint = element.getStartPoint();\n        const endPoint = element.getEndPoint();\n        text = (React.createElement(\"text\", { className: \"odc-traffic-link__text\", x: (endPoint.x + startPoint.x) / 2, y: (endPoint.y + startPoint.y) / 2, textAnchor: \"middle\" },\n            percent,\n            \"%\"));\n    }\n    return (React.createElement(BaseEdge, { element: element, className: \"odc-traffic-link\" },\n        React.createElement(EdgeConnectorArrow, { edge: element }),\n        text));\n};\nexport default observer(TrafficLink);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/TrafficLink.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/TrafficLink.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAQ,QAAQ,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,8CAA8C,CAAC;AAExE,OAAO,oBAAoB,CAAC;AAM5B,MAAM,WAAW,GAA+B,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC9D,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;IAC3C,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,GAAG,CACL,8BACE,SAAS,EAAC,wBAAwB,EAClC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAClC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAClC,UAAU,EAAC,QAAQ;YAElB,OAAO;gBACH,CACR,CAAC;KACH;IACD,OAAO,CACL,oBAAC,QAAQ,IAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAC,kBAAkB;QACtD,oBAAC,kBAAkB,IAAC,IAAI,EAAE,OAAO,GAAI;QACpC,IAAI,CACI,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Edge, observer, EdgeConnectorArrow } from '@console/topology';\nimport { BaseEdge } from '@console/dev-console/src/components/topology';\n\nimport './TrafficLink.scss';\n\ntype TrafficLinkProps = {\n  element: Edge;\n};\n\nconst TrafficLink: React.FC<TrafficLinkProps> = ({ element }) => {\n  const { percent } = element.getData().data;\n  let text = null;\n  if (percent != null) {\n    const startPoint = element.getStartPoint();\n    const endPoint = element.getEndPoint();\n    text = (\n      <text\n        className=\"odc-traffic-link__text\"\n        x={(endPoint.x + startPoint.x) / 2}\n        y={(endPoint.y + startPoint.y) / 2}\n        textAnchor=\"middle\"\n      >\n        {percent}%\n      </text>\n    );\n  }\n  return (\n    <BaseEdge element={element} className=\"odc-traffic-link\">\n      <EdgeConnectorArrow edge={element} />\n      {text}\n    </BaseEdge>\n  );\n};\n\nexport default observer(TrafficLink);\n"]}]}