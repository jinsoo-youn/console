{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/edit-application/EditApplicationPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/edit-application/EditApplicationPage.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Firehose, LoadingBox } from '@console/internal/components/utils';\nimport { ImageStreamModel } from '@console/internal/models';\nimport { Helmet } from 'react-helmet';\nimport { ServiceModel } from '@console/knative-plugin';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport EditApplication from './EditApplication';\nconst INSTANCE_LABEL = 'app.kubernetes.io/instance';\nconst EditApplicationComponentLoader = (props) => {\n    const { loaded } = props;\n    return loaded ? React.createElement(EditApplication, Object.assign({}, props)) : React.createElement(LoadingBox, null);\n};\nconst EditApplicationPage = ({ match, location }) => {\n    const namespace = match.params.ns;\n    const queryParams = new URLSearchParams(location.search);\n    const editAppResourceKind = queryParams.get('kind');\n    const appName = queryParams.get('name');\n    const appResources = [\n        {\n            kind: 'Service',\n            prop: 'service',\n            name: appName,\n            namespace,\n            optional: true,\n        },\n        {\n            kind: 'BuildConfig',\n            prop: 'buildConfig',\n            name: appName,\n            namespace,\n            optional: true,\n        },\n        {\n            kind: 'Route',\n            prop: 'route',\n            name: appName,\n            namespace,\n            optional: true,\n        },\n        {\n            kind: 'ImageStream',\n            prop: 'imageStream',\n            isList: true,\n            namespace,\n            selector: {\n                matchLabels: { [INSTANCE_LABEL]: appName },\n            },\n            optional: true,\n        },\n        {\n            kind: ImageStreamModel.kind,\n            prop: 'imageStreams',\n            isList: true,\n            namespace: 'openshift',\n            optional: true,\n        },\n    ];\n    let kind = editAppResourceKind;\n    if (kind === ServiceModel.kind) {\n        kind = referenceForModel(ServiceModel);\n    }\n    appResources.push({\n        kind,\n        prop: 'editAppResource',\n        name: appName,\n        namespace,\n        optional: true,\n    });\n    return (React.createElement(NamespacedPage, { disabled: true, variant: NamespacedPageVariants.light },\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"Edit\")),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Firehose, { resources: appResources },\n                React.createElement(EditApplicationComponentLoader, { namespace: namespace, appName: appName })))));\n};\nexport default EditApplicationPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/edit-application/EditApplicationPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/edit-application/EditApplicationPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Firehose, FirehoseResource, LoadingBox } from '@console/internal/components/utils';\nimport { ImageStreamModel } from '@console/internal/models';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { ServiceModel } from '@console/knative-plugin';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport EditApplication from './EditApplication';\nimport { EditApplicationProps } from './edit-application-types';\n\nconst INSTANCE_LABEL = 'app.kubernetes.io/instance';\nconst EditApplicationComponentLoader: React.FunctionComponent<EditApplicationProps> = (\n  props: EditApplicationProps,\n) => {\n  const { loaded } = props;\n  return loaded ? <EditApplication {...props} /> : <LoadingBox />;\n};\n\nexport type ImportPageProps = RouteComponentProps<{ ns?: string }>;\n\nconst EditApplicationPage: React.FunctionComponent<ImportPageProps> = ({ match, location }) => {\n  const namespace = match.params.ns;\n  const queryParams = new URLSearchParams(location.search);\n  const editAppResourceKind = queryParams.get('kind');\n  const appName = queryParams.get('name');\n  const appResources: FirehoseResource[] = [\n    {\n      kind: 'Service',\n      prop: 'service',\n      name: appName,\n      namespace,\n      optional: true,\n    },\n    {\n      kind: 'BuildConfig',\n      prop: 'buildConfig',\n      name: appName,\n      namespace,\n      optional: true,\n    },\n    {\n      kind: 'Route',\n      prop: 'route',\n      name: appName,\n      namespace,\n      optional: true,\n    },\n    {\n      kind: 'ImageStream',\n      prop: 'imageStream',\n      isList: true,\n      namespace,\n      selector: {\n        matchLabels: { [INSTANCE_LABEL]: appName },\n      },\n      optional: true,\n    },\n    {\n      kind: ImageStreamModel.kind,\n      prop: 'imageStreams',\n      isList: true,\n      namespace: 'openshift',\n      optional: true,\n    },\n  ];\n  let kind = editAppResourceKind;\n  if (kind === ServiceModel.kind) {\n    kind = referenceForModel(ServiceModel);\n  }\n  appResources.push({\n    kind,\n    prop: 'editAppResource',\n    name: appName,\n    namespace,\n    optional: true,\n  });\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>Edit</title>\n      </Helmet>\n      <div className=\"co-m-pane__body\">\n        <Firehose resources={appResources}>\n          <EditApplicationComponentLoader namespace={namespace} appName={appName} />\n        </Firehose>\n      </div>\n    </NamespacedPage>\n  );\n};\n\nexport default EditApplicationPage;\n"]}]}