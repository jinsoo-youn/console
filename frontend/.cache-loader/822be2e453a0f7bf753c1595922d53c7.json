{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/RBAC/bindings.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/RBAC/bindings.jsx","mtime":1617163139970},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport * as classNames from 'classnames';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { ClusterRoleBindingModel } from '../../models';\nimport { getQN, k8sCreate, k8sPatch, referenceFor } from '../../module/k8s';\nimport * as UIActions from '../../actions/ui';\nimport { MultiListPage, Table, TableRow, TableData } from '../factory';\nimport { RadioGroup } from '../radio';\nimport { confirmModal } from '../modals';\nimport { ButtonBar, Kebab, Firehose, ListDropdown, MsgBox, NsDropdown, ResourceKebab, ResourceLink, ResourceName, StatusBox, getQueryArgument, history, kindObj, resourceObjPath, useAccessReview } from '../utils';\nimport { isSystemRole } from './index';\nimport { connectToFlags, flagPending } from '../../reducers/features';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst bindingKind = binding => (binding.metadata.namespace ? 'RoleBinding' : 'ClusterRoleBinding');\n// Split each binding into one row per subject\nexport const flatten = resources => _.flatMap(resources, resource => {\n    const ret = [];\n    _.each(resource.data, binding => {\n        if (!binding) {\n            return undefined;\n        }\n        if (_.isEmpty(binding.subjects)) {\n            const subject = { kind: '-', name: '-' };\n            return ret.push(Object.assign({}, binding, { subject }));\n        }\n        _.each(binding.subjects, (subject, subjectIndex) => {\n            ret.push(Object.assign({}, binding, {\n                subject,\n                subjectIndex,\n                rowKey: `${getQN(binding)}|${subject.kind}|${subject.name}${subject.namespace ? `|${subject.namespace}` : ''}`,\n            }));\n        });\n    });\n    return ret;\n});\nconst menuActions = ({ subjectIndex, subjects }, startImpersonate) => {\n    const subject = subjects[subjectIndex];\n    const { t } = useTranslation();\n    const actions = [\n        (kind, obj) => ({\n            label: `Duplicate ${kind.label}`,\n            href: `${resourceObjPath(obj, kind.kind)}/copy?subjectIndex=${subjectIndex}`,\n            // Only perform access checks when duplicating cluster role bindings.\n            // It's not practical to check namespace role bindings since we don't know what namespace the user will pick in the form.\n            accessReview: _.get(obj, 'metadata.namespace') ? null : { group: kind.apiGroup, resource: kind.plural, verb: 'create' },\n        }),\n        (kind, obj) => ({\n            label: t('COMMON:MSG_MAIN_ACTIONBUTTON_39', { 0: ResourceLabel(kind, t) }),\n            href: `${resourceObjPath(obj, kind.kind)}/edit?subjectIndex=${subjectIndex}`,\n            accessReview: {\n                group: kind.apiGroup,\n                resource: kind.plural,\n                name: obj.metadata.name,\n                namespace: obj.metadata.namespace,\n                verb: 'update',\n            },\n        }),\n        subjects.length === 1\n            ? Kebab.factory.Delete\n            : (kind, binding) => ({\n                label: t('COMMON:MSG_MAIN_ACTIONBUTTON_40', { 0: ResourceLabel(kind, t) }),\n                callback: () => confirmModal({\n                    title: t('COMMON:MSG_MAIN_ACTIONBUTTON_40', { 0: ResourceLabel(kind, t) }),\n                    message: t('COMMON:MSG_MAIN_POPUP_DESCRIPTION_2', { 0: subject.name, 1: ResourceLabel(modelFor(subject.kind), t) }),\n                    btnText: t('COMMON:MSG_MAIN_ACTIONBUTTON_41'),\n                    executeFn: () => k8sPatch(kind, binding, [{ op: 'remove', path: `/subjects/${subjectIndex}` }]),\n                }),\n                accessReview: {\n                    group: kind.apiGroup,\n                    resource: kind.plural,\n                    name: binding.metadata.name,\n                    namespace: binding.metadata.namespace,\n                    verb: 'patch',\n                },\n            }),\n    ];\n    if (subject.kind === 'User' || subject.kind === 'Group') {\n        actions.unshift(() => ({\n            label: t('COMMON:MSG_MAIN_ACTIONBUTTON_42', { 0: subject.kind, 1: subject.name }),\n            // label: `Impersonate ${subject.kind} \"${subject.name}\"`,\n            callback: () => startImpersonate(subject.kind, subject.name),\n        }));\n    }\n    return actions;\n};\nconst tableColumnClasses = [classNames('col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-md-3', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-3', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), Kebab.columnClass];\nconst RoleBindingsTableHeader = t => [\n    {\n        title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_1'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_2'),\n        sortField: 'roleRef.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_3'),\n        sortField: 'subject.kind',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_4'),\n        sortField: 'subject.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_5'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n    },\n    {\n        title: '',\n        props: { className: tableColumnClasses[5] },\n    },\n];\nRoleBindingsTableHeader.displayName = 'RoleBindingsTableHeader';\nexport const BindingName = ({ binding }) => {\n    React.createElement(ResourceLink, { kind: bindingKind(binding), name: binding.metadata.name, namespace: binding.metadata.namespace, className: \"co-resource-item__resource-name\" });\n};\nexport const BindingKebab = connect(null, {\n    startImpersonate: UIActions.startImpersonate,\n})(({ binding, startImpersonate }) => (binding.subjects ? React.createElement(ResourceKebab, { actions: menuActions(binding, startImpersonate), kind: bindingKind(binding), resource: binding }) : null));\nexport const RoleLink = ({ binding }) => {\n    const kind = binding.roleRef.kind;\n    // Cluster Roles have no namespace and for Roles, the Role's namespace matches the Role Binding's namespace\n    const ns = kind === 'ClusterRole' ? undefined : binding.metadata.namespace;\n    return React.createElement(ResourceLink, { kind: kind, name: binding.roleRef.name, namespace: ns });\n};\nconst RoleBindingsTableRow = ({ obj: binding, index, key, style }) => {\n    return (React.createElement(TableRow, { id: binding.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: bindingKind(binding), name: binding.metadata.name, namespace: binding.metadata.namespace, className: \"co-resource-item__resource-name\" })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(RoleLink, { binding: binding })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[2], 'co-break-word') }, binding.subject.kind),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[3], 'co-break-word') }, binding.subject.name),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[4], 'co-break-word') }, binding.metadata.namespace ? React.createElement(ResourceLink, { kind: \"Namespace\", name: binding.metadata.namespace }) : 'All Namespaces'),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(BindingKebab, { binding: binding }))));\n};\nconst EmptyMsg = () => {\n    const { t } = useTranslation();\n    return React.createElement(MsgBox, { title: t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_1'), detail: t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_2') });\n};\nexport const BindingsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Role Bindings\", EmptyMsg: EmptyMsg, Header: RoleBindingsTableHeader.bind(null, t), Row: RoleBindingsTableRow, virtualize: true }));\n};\nexport const bindingType = binding => {\n    if (!binding) {\n        return undefined;\n    }\n    if (binding.roleRef.name.startsWith('system:')) {\n        return 'system';\n    }\n    return binding.metadata.namespace ? 'namespace' : 'cluster';\n};\nconst roleResources = [\n    { kind: 'RoleBinding', namespaced: true },\n    { kind: 'ClusterRoleBinding', namespaced: false, optional: true },\n];\nconst rowFilters = [\n    {\n        filterGroupName: 'Kind',\n        type: 'role-binding-kind',\n        reducer: bindingType,\n        itemsGenerator: ({ ClusterRoleBinding: data }) => {\n            const items = [\n                { id: 'namespace', title: 'Namespace Role Bindings' },\n                { id: 'system', title: 'System Role Bindings' },\n            ];\n            if (data && data.loaded && !data.loadError) {\n                items.unshift({ id: 'cluster', title: 'Cluster-wide Role Bindings' });\n            }\n            return items;\n        },\n    },\n];\nexport const RoleBindingsPage = ({ namespace = undefined, showTitle = true, mock = false, staticFilters = undefined, createPath = '/k8s/cluster/rolebindings/~new' }) => {\n    const { t } = useTranslation();\n    return (React.createElement(MultiListPage, { canCreate: !mock, createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_3') }), createProps: {\n            to: createPath,\n        }, mock: mock, filterLabel: \"by role or subject\", flatten: flatten, label: t('COMMON:MSG_LNB_MENU_76'), ListComponent: BindingsList, namespace: namespace, resources: roleResources, rowFilters: staticFilters ? [] : rowFilters, staticFilters: staticFilters, showTitle: showTitle, textFilter: \"role-binding\", title: t('COMMON:MSG_LNB_MENU_76') }));\n};\nconst NsRoleDropdown_ = props => {\n    const openshiftFlag = props.flags[FLAGS.OPENSHIFT];\n    if (flagPending(openshiftFlag)) {\n        return null;\n    }\n    const roleFilter = role => !isSystemRole(role);\n    let kinds;\n    if (props.fixed) {\n        kinds = [props.selectedKeyKind];\n    }\n    else if (props.namespace) {\n        kinds = ['Role', 'ClusterRole'];\n    }\n    else {\n        kinds = ['ClusterRole'];\n    }\n    const resourceForKind = kind => ({ kind, namespace: kind === 'Role' ? props.namespace : null });\n    const resources = _.map(kinds, resourceForKind);\n    return React.createElement(ListDropdown, Object.assign({}, props, { dataFilter: roleFilter, desc: \"Namespace Roles (Role)\", resources: resources, placeholder: \"Select role name\" }));\n};\nconst NsRoleDropdown = connectToFlags(FLAGS.OPENSHIFT)(NsRoleDropdown_);\nconst ClusterRoleDropdown = props => React.createElement(ListDropdown, Object.assign({}, props, { dataFilter: role => !isSystemRole(role), desc: \"Cluster-wide Roles (ClusterRole)\", resources: [{ kind: 'ClusterRole' }], placeholder: \"Select role name\" }));\nconst bindingKinds = [\n    {\n        value: 'RoleBinding',\n        title: 'Namespace Role Binding (RoleBinding)',\n        desc: 'Grant the permissions to a user or set of users within the selected namespace.',\n    },\n    {\n        value: 'ClusterRoleBinding',\n        title: 'Cluster-wide Role Binding (ClusterRoleBinding)',\n        desc: 'Grant the permissions to a user or set of users at the cluster level and in all namespaces.',\n    },\n];\nconst subjectKinds = [\n    { value: 'User', title: 'User' },\n    { value: 'Group', title: 'Group' },\n    { value: 'ServiceAccount', title: 'Service Account' },\n];\nconst Section = ({ label, children }) => (React.createElement(\"div\", null,\n    React.createElement(\"div\", { className: \"co-form-section__label\" }, label),\n    React.createElement(\"div\", { className: \"co-form-subsection\" }, children)));\nconst BaseEditRoleBinding = connect(null, { setActiveNamespace: UIActions.setActiveNamespace })(class BaseEditRoleBinding_ extends React.Component {\n    constructor(props) {\n        super(props);\n        this.subjectIndex = props.subjectIndex || 0;\n        const existingData = _.pick(props.obj, ['metadata.name', 'metadata.namespace', 'roleRef', 'subjects']);\n        existingData.kind = props.kind;\n        const data = _.defaultsDeep({}, props.fixed, existingData, {\n            apiVersion: 'rbac.authorization.k8s.io/v1',\n            kind: 'RoleBinding',\n            metadata: {\n                name: '',\n            },\n            roleRef: {\n                apiGroup: 'rbac.authorization.k8s.io',\n            },\n            subjects: [\n                {\n                    apiGroup: 'rbac.authorization.k8s.io',\n                    kind: 'User',\n                    name: '',\n                },\n            ],\n        });\n        this.state = { data, inProgress: false };\n        this.setKind = this.setKind.bind(this);\n        this.setSubject = this.setSubject.bind(this);\n        this.save = this.save.bind(this);\n        this.setData = patch => this.setState({ data: _.defaultsDeep({}, patch, this.state.data) });\n        this.changeName = e => this.setData({ metadata: { name: e.target.value } });\n        this.changeNamespace = namespace => this.setData({ metadata: { namespace } });\n        this.changeRoleRef = (name, kindId) => this.setData({ roleRef: { name, kind: kindId } });\n        this.changeSubjectKind = e => this.setSubject({ kind: e.target.value });\n        this.changeSubjectName = e => this.setSubject({ name: e.target.value });\n        this.changeSubjectNamespace = namespace => this.setSubject({ namespace });\n    }\n    setKind(e) {\n        const kind = e.target.value;\n        const patch = { kind };\n        if (kind === 'ClusterRoleBinding') {\n            patch.metadata = { namespace: null };\n        }\n        this.setData(patch);\n    }\n    getSubject() {\n        return _.get(this.state.data, `subjects[${this.subjectIndex}]`);\n    }\n    setSubject(patch) {\n        const { kind, name, namespace } = Object.assign({}, this.getSubject(), patch);\n        const data = Object.assign({}, this.state.data);\n        data.subjects[this.subjectIndex] = kind === 'ServiceAccount' ? { kind, name, namespace } : { apiGroup: 'rbac.authorization.k8s.io', kind, name };\n        this.setState({ data });\n    }\n    save(e) {\n        e.preventDefault();\n        const { kind, metadata, roleRef } = this.state.data;\n        const subject = this.getSubject();\n        if (!kind || !metadata.name || !roleRef.kind || !roleRef.name || !subject.kind || !subject.name || (kind === 'RoleBinding' && !metadata.namespace) || (subject.kind === 'ServiceAccount' && !subject.namespace)) {\n            this.setState({ error: 'Please complete all fields.' });\n            return;\n        }\n        this.setState({ inProgress: true });\n        const ko = kindObj(kind);\n        (this.props.isCreate ? k8sCreate(ko, this.state.data) : k8sPatch(ko, { metadata }, [{ op: 'replace', path: `/subjects/${this.subjectIndex}`, value: subject }])).then(obj => {\n            this.setState({ inProgress: false });\n            if (metadata.namespace) {\n                this.props.setActiveNamespace(metadata.namespace);\n            }\n            history.push(resourceObjPath(obj, referenceFor(obj)));\n        }, err => this.setState({ error: err.message, inProgress: false }));\n    }\n    render() {\n        const { kind, metadata, roleRef } = this.state.data;\n        const subject = this.getSubject();\n        const { fixed, saveButtonText } = this.props;\n        const RoleDropdown = kind === 'RoleBinding' ? NsRoleDropdown : ClusterRoleDropdown;\n        const title = `${this.props.titleVerb} ${kindObj(kind).label}`;\n        return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, title)),\n            React.createElement(\"form\", { className: \"co-m-pane__body-group co-m-pane__form\", onSubmit: this.save },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, title),\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"Associate a user/group to the selected role to define the type of access and resources that are allowed.\"),\n                !_.get(fixed, 'kind') && (React.createElement(Section, { label: \"Binding Type\" },\n                    React.createElement(RadioGroup, { currentValue: kind, items: bindingKinds, onChange: this.setKind }))),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(Section, { label: \"Role Binding\" },\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { htmlFor: \"role-binding-name\", className: \"co-required\" }, \"Name\"),\n                        _.get(fixed, 'metadata.name') ? React.createElement(ResourceName, { kind: kind, name: metadata.name }) : React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", onChange: this.changeName, placeholder: \"Role binding name\", value: metadata.name, required: true, id: \"role-binding-name\" })),\n                    kind === 'RoleBinding' && (React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { htmlFor: \"ns-dropdown\", className: \"co-required\" }, \"Namespace\"),\n                        React.createElement(NsDropdown, { fixed: !!_.get(fixed, 'metadata.namespace'), selectedKey: metadata.namespace, onChange: this.changeNamespace, id: \"ns-dropdown\" })))),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(Section, { label: \"Role\" },\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { htmlFor: \"role-dropdown\", className: \"co-required\" }, \"Role Name\"),\n                        React.createElement(RoleDropdown, { fixed: !!_.get(fixed, 'roleRef.name'), namespace: metadata.namespace, onChange: this.changeRoleRef, selectedKey: _.get(fixed, 'roleRef.name') || roleRef.name, selectedKeyKind: _.get(fixed, 'roleRef.kind') || roleRef.kind, id: \"role-dropdown\" }))),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(Section, { label: \"Subject\" },\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(RadioGroup, { currentValue: subject.kind, items: subjectKinds, onChange: this.changeSubjectKind })),\n                    subject.kind === 'ServiceAccount' && (React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { htmlFor: \"subject-namespace\", className: \"co-required\" }, \"Subject Namespace\"),\n                        React.createElement(NsDropdown, { id: \"subject-namespace\", selectedKey: subject.namespace, onChange: this.changeSubjectNamespace }))),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { htmlFor: \"subject-name\", className: \"co-required\" }, \"Subject Name\"),\n                        React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", onChange: this.changeSubjectName, placeholder: \"Subject name\", value: subject.name, required: true, id: \"subject-name\" }))),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(ButtonBar, { errorMessage: this.state.error, inProgress: this.state.inProgress },\n                    React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                        React.createElement(Button, { type: \"submit\", id: \"save-changes\", variant: \"primary\" }, saveButtonText || 'Create'),\n                        React.createElement(Button, { onClick: history.goBack, id: \"cancel\", variant: \"secondary\" }, \"Cancel\"))))));\n    }\n});\nexport const CreateRoleBinding = ({ match: { params }, location }) => {\n    const searchParams = new URLSearchParams(location.search);\n    const roleKind = searchParams.get('rolekind');\n    const roleName = searchParams.get('rolename');\n    const metadata = { namespace: UIActions.getActiveNamespace() };\n    const clusterAllowed = useAccessReview({\n        group: ClusterRoleBindingModel.apiGroup,\n        resource: ClusterRoleBindingModel.plural,\n        verb: 'create',\n    });\n    const fixed = {\n        kind: params.ns || roleKind === 'Role' || !clusterAllowed ? 'RoleBinding' : undefined,\n        metadata: { namespace: params.ns },\n        roleRef: { kind: roleKind, name: roleName },\n    };\n    return React.createElement(BaseEditRoleBinding, { metadata: metadata, fixed: fixed, isCreate: true, titleVerb: \"Create\" });\n};\nconst getSubjectIndex = () => {\n    const subjectIndex = getQueryArgument('subjectIndex') || '0';\n    return parseInt(subjectIndex, 10);\n};\nconst BindingLoadingWrapper = props => {\n    const fixed = {};\n    _.each(props.fixedKeys, k => (fixed[k] = _.get(props.obj.data, k)));\n    return (React.createElement(StatusBox, Object.assign({}, props.obj),\n        React.createElement(BaseEditRoleBinding, Object.assign({}, props, { obj: props.obj.data, fixed: fixed }))));\n};\nexport const EditRoleBinding = ({ match: { params }, kind }) => (React.createElement(Firehose, { resources: [{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }] },\n    React.createElement(BindingLoadingWrapper, { fixedKeys: ['kind', 'metadata', 'roleRef'], subjectIndex: getSubjectIndex(), titleVerb: \"Edit\", saveButtonText: \"Save\" })));\nexport const CopyRoleBinding = ({ match: { params }, kind }) => (React.createElement(Firehose, { resources: [{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }] },\n    React.createElement(BindingLoadingWrapper, { isCreate: true, fixedKeys: ['kind'], subjectIndex: getSubjectIndex(), titleVerb: \"Duplicate\" })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/RBAC/bindings.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/RBAC/bindings.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport * as classNames from 'classnames';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { ClusterRoleBindingModel } from '../../models';\nimport { getQN, k8sCreate, k8sPatch, referenceFor } from '../../module/k8s';\nimport * as UIActions from '../../actions/ui';\nimport { MultiListPage, Table, TableRow, TableData } from '../factory';\nimport { RadioGroup } from '../radio';\nimport { confirmModal } from '../modals';\nimport { ButtonBar, Kebab, Firehose, ListDropdown, MsgBox, NsDropdown, ResourceKebab, ResourceLink, ResourceName, StatusBox, getQueryArgument, history, kindObj, resourceObjPath, useAccessReview } from '../utils';\nimport { isSystemRole } from './index';\nimport { connectToFlags, flagPending } from '../../reducers/features';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst bindingKind = binding => (binding.metadata.namespace ? 'RoleBinding' : 'ClusterRoleBinding');\n\n// Split each binding into one row per subject\nexport const flatten = resources =>\n  _.flatMap(resources, resource => {\n    const ret = [];\n\n    _.each(resource.data, binding => {\n      if (!binding) {\n        return undefined;\n      }\n      if (_.isEmpty(binding.subjects)) {\n        const subject = { kind: '-', name: '-' };\n        return ret.push(Object.assign({}, binding, { subject }));\n      }\n      _.each(binding.subjects, (subject, subjectIndex) => {\n        ret.push(\n          Object.assign({}, binding, {\n            subject,\n            subjectIndex,\n            rowKey: `${getQN(binding)}|${subject.kind}|${subject.name}${subject.namespace ? `|${subject.namespace}` : ''}`,\n          }),\n        );\n      });\n    });\n\n    return ret;\n  });\n\nconst menuActions = ({ subjectIndex, subjects }, startImpersonate) => {\n  const subject = subjects[subjectIndex];\n\n  const { t } = useTranslation();\n\n  const actions = [\n    (kind, obj) => ({\n      label: `Duplicate ${kind.label}`,\n      href: `${resourceObjPath(obj, kind.kind)}/copy?subjectIndex=${subjectIndex}`,\n      // Only perform access checks when duplicating cluster role bindings.\n      // It's not practical to check namespace role bindings since we don't know what namespace the user will pick in the form.\n      accessReview: _.get(obj, 'metadata.namespace') ? null : { group: kind.apiGroup, resource: kind.plural, verb: 'create' },\n    }),\n    (kind, obj) => ({\n      label: t('COMMON:MSG_MAIN_ACTIONBUTTON_39', { 0: ResourceLabel(kind, t) }),\n      href: `${resourceObjPath(obj, kind.kind)}/edit?subjectIndex=${subjectIndex}`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace: obj.metadata.namespace,\n        verb: 'update',\n      },\n    }),\n    subjects.length === 1\n      ? Kebab.factory.Delete\n      : (kind, binding) => ({\n          label: t('COMMON:MSG_MAIN_ACTIONBUTTON_40', { 0: ResourceLabel(kind, t) }),\n          callback: () =>\n            confirmModal({\n              title: t('COMMON:MSG_MAIN_ACTIONBUTTON_40', { 0: ResourceLabel(kind, t) }),\n              message: t('COMMON:MSG_MAIN_POPUP_DESCRIPTION_2', { 0: subject.name, 1: ResourceLabel(modelFor(subject.kind), t) }),\n              btnText: t('COMMON:MSG_MAIN_ACTIONBUTTON_41'),\n              executeFn: () => k8sPatch(kind, binding, [{ op: 'remove', path: `/subjects/${subjectIndex}` }]),\n            }),\n          accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: binding.metadata.name,\n            namespace: binding.metadata.namespace,\n            verb: 'patch',\n          },\n        }),\n  ];\n\n  if (subject.kind === 'User' || subject.kind === 'Group') {\n    actions.unshift(() => ({\n      label: t('COMMON:MSG_MAIN_ACTIONBUTTON_42', { 0: subject.kind, 1: subject.name }),\n      // label: `Impersonate ${subject.kind} \"${subject.name}\"`,\n      callback: () => startImpersonate(subject.kind, subject.name),\n    }));\n  }\n\n  return actions;\n};\n\nconst tableColumnClasses = [classNames('col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-md-3', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-3', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), Kebab.columnClass];\n\nconst RoleBindingsTableHeader = t => [\n  {\n    title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_1'),\n    sortField: 'metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_2'),\n    sortField: 'roleRef.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[1] },\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_3'),\n    sortField: 'subject.kind',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_4'),\n    sortField: 'subject.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[3] },\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABROLEBINDINGS_TABLEHEADER_5'),\n    sortField: 'metadata.namespace',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[4] },\n  },\n  {\n    title: '',\n    props: { className: tableColumnClasses[5] },\n  },\n];\n\nRoleBindingsTableHeader.displayName = 'RoleBindingsTableHeader';\n\nexport const BindingName = ({ binding }) => {\n  <ResourceLink kind={bindingKind(binding)} name={binding.metadata.name} namespace={binding.metadata.namespace} className=\"co-resource-item__resource-name\" />;\n};\n\nexport const BindingKebab = connect(null, {\n  startImpersonate: UIActions.startImpersonate,\n})(({ binding, startImpersonate }) => (binding.subjects ? <ResourceKebab actions={menuActions(binding, startImpersonate)} kind={bindingKind(binding)} resource={binding} /> : null));\n\nexport const RoleLink = ({ binding }) => {\n  const kind = binding.roleRef.kind;\n\n  // Cluster Roles have no namespace and for Roles, the Role's namespace matches the Role Binding's namespace\n  const ns = kind === 'ClusterRole' ? undefined : binding.metadata.namespace;\n  return <ResourceLink kind={kind} name={binding.roleRef.name} namespace={ns} />;\n};\n\nconst RoleBindingsTableRow = ({ obj: binding, index, key, style }) => {\n  return (\n    <TableRow id={binding.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={bindingKind(binding)} name={binding.metadata.name} namespace={binding.metadata.namespace} className=\"co-resource-item__resource-name\" />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <RoleLink binding={binding} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>{binding.subject.kind}</TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>{binding.subject.name}</TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>{binding.metadata.namespace ? <ResourceLink kind=\"Namespace\" name={binding.metadata.namespace} /> : 'All Namespaces'}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <BindingKebab binding={binding} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst EmptyMsg = () => {\n  const { t } = useTranslation();\n  return <MsgBox title={t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_1')} detail={t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_2')} />;\n};\n\nexport const BindingsList = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Role Bindings\" EmptyMsg={EmptyMsg} Header={RoleBindingsTableHeader.bind(null, t)} Row={RoleBindingsTableRow} virtualize />;\n};\n\nexport const bindingType = binding => {\n  if (!binding) {\n    return undefined;\n  }\n  if (binding.roleRef.name.startsWith('system:')) {\n    return 'system';\n  }\n  return binding.metadata.namespace ? 'namespace' : 'cluster';\n};\n\nconst roleResources = [\n  { kind: 'RoleBinding', namespaced: true },\n  { kind: 'ClusterRoleBinding', namespaced: false, optional: true },\n];\n\nconst rowFilters = [\n  {\n    filterGroupName: 'Kind',\n    type: 'role-binding-kind',\n    reducer: bindingType,\n    itemsGenerator: ({ ClusterRoleBinding: data }) => {\n      const items = [\n        { id: 'namespace', title: 'Namespace Role Bindings' },\n        { id: 'system', title: 'System Role Bindings' },\n      ];\n      if (data && data.loaded && !data.loadError) {\n        items.unshift({ id: 'cluster', title: 'Cluster-wide Role Bindings' });\n      }\n      return items;\n    },\n  },\n];\n\nexport const RoleBindingsPage = ({ namespace = undefined, showTitle = true, mock = false, staticFilters = undefined, createPath = '/k8s/cluster/rolebindings/~new' }) => {\n  const { t } = useTranslation();\n  return (\n    <MultiListPage\n      canCreate={!mock}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_DETAILS_TABDETAILS_ROLEBINDINGS_3') })}\n      createProps={{\n        to: createPath,\n      }}\n      mock={mock}\n      filterLabel=\"by role or subject\"\n      flatten={flatten}\n      label={t('COMMON:MSG_LNB_MENU_76')}\n      ListComponent={BindingsList}\n      namespace={namespace}\n      resources={roleResources}\n      rowFilters={staticFilters ? [] : rowFilters}\n      staticFilters={staticFilters}\n      showTitle={showTitle}\n      textFilter=\"role-binding\"\n      title={t('COMMON:MSG_LNB_MENU_76')}\n    />\n  );\n};\n\nconst NsRoleDropdown_ = props => {\n  const openshiftFlag = props.flags[FLAGS.OPENSHIFT];\n  if (flagPending(openshiftFlag)) {\n    return null;\n  }\n\n  const roleFilter = role => !isSystemRole(role);\n\n  let kinds;\n  if (props.fixed) {\n    kinds = [props.selectedKeyKind];\n  } else if (props.namespace) {\n    kinds = ['Role', 'ClusterRole'];\n  } else {\n    kinds = ['ClusterRole'];\n  }\n  const resourceForKind = kind => ({ kind, namespace: kind === 'Role' ? props.namespace : null });\n  const resources = _.map(kinds, resourceForKind);\n\n  return <ListDropdown {...props} dataFilter={roleFilter} desc=\"Namespace Roles (Role)\" resources={resources} placeholder=\"Select role name\" />;\n};\nconst NsRoleDropdown = connectToFlags(FLAGS.OPENSHIFT)(NsRoleDropdown_);\n\nconst ClusterRoleDropdown = props => <ListDropdown {...props} dataFilter={role => !isSystemRole(role)} desc=\"Cluster-wide Roles (ClusterRole)\" resources={[{ kind: 'ClusterRole' }]} placeholder=\"Select role name\" />;\n\nconst bindingKinds = [\n  {\n    value: 'RoleBinding',\n    title: 'Namespace Role Binding (RoleBinding)',\n    desc: 'Grant the permissions to a user or set of users within the selected namespace.',\n  },\n  {\n    value: 'ClusterRoleBinding',\n    title: 'Cluster-wide Role Binding (ClusterRoleBinding)',\n    desc: 'Grant the permissions to a user or set of users at the cluster level and in all namespaces.',\n  },\n];\nconst subjectKinds = [\n  { value: 'User', title: 'User' },\n  { value: 'Group', title: 'Group' },\n  { value: 'ServiceAccount', title: 'Service Account' },\n];\n\nconst Section = ({ label, children }) => (\n  <div>\n    <div className=\"co-form-section__label\">{label}</div>\n    <div className=\"co-form-subsection\">{children}</div>\n  </div>\n);\n\nconst BaseEditRoleBinding = connect(null, { setActiveNamespace: UIActions.setActiveNamespace })(\n  class BaseEditRoleBinding_ extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.subjectIndex = props.subjectIndex || 0;\n\n      const existingData = _.pick(props.obj, ['metadata.name', 'metadata.namespace', 'roleRef', 'subjects']);\n      existingData.kind = props.kind;\n      const data = _.defaultsDeep({}, props.fixed, existingData, {\n        apiVersion: 'rbac.authorization.k8s.io/v1',\n        kind: 'RoleBinding',\n        metadata: {\n          name: '',\n        },\n        roleRef: {\n          apiGroup: 'rbac.authorization.k8s.io',\n        },\n        subjects: [\n          {\n            apiGroup: 'rbac.authorization.k8s.io',\n            kind: 'User',\n            name: '',\n          },\n        ],\n      });\n      this.state = { data, inProgress: false };\n\n      this.setKind = this.setKind.bind(this);\n      this.setSubject = this.setSubject.bind(this);\n      this.save = this.save.bind(this);\n\n      this.setData = patch => this.setState({ data: _.defaultsDeep({}, patch, this.state.data) });\n      this.changeName = e => this.setData({ metadata: { name: e.target.value } });\n      this.changeNamespace = namespace => this.setData({ metadata: { namespace } });\n      this.changeRoleRef = (name, kindId) => this.setData({ roleRef: { name, kind: kindId } });\n      this.changeSubjectKind = e => this.setSubject({ kind: e.target.value });\n      this.changeSubjectName = e => this.setSubject({ name: e.target.value });\n      this.changeSubjectNamespace = namespace => this.setSubject({ namespace });\n    }\n\n    setKind(e) {\n      const kind = e.target.value;\n      const patch = { kind };\n      if (kind === 'ClusterRoleBinding') {\n        patch.metadata = { namespace: null };\n      }\n      this.setData(patch);\n    }\n\n    getSubject() {\n      return _.get(this.state.data, `subjects[${this.subjectIndex}]`);\n    }\n\n    setSubject(patch) {\n      const { kind, name, namespace } = Object.assign({}, this.getSubject(), patch);\n      const data = Object.assign({}, this.state.data);\n      data.subjects[this.subjectIndex] = kind === 'ServiceAccount' ? { kind, name, namespace } : { apiGroup: 'rbac.authorization.k8s.io', kind, name };\n      this.setState({ data });\n    }\n\n    save(e) {\n      e.preventDefault();\n\n      const { kind, metadata, roleRef } = this.state.data;\n      const subject = this.getSubject();\n\n      if (!kind || !metadata.name || !roleRef.kind || !roleRef.name || !subject.kind || !subject.name || (kind === 'RoleBinding' && !metadata.namespace) || (subject.kind === 'ServiceAccount' && !subject.namespace)) {\n        this.setState({ error: 'Please complete all fields.' });\n        return;\n      }\n\n      this.setState({ inProgress: true });\n\n      const ko = kindObj(kind);\n      (this.props.isCreate ? k8sCreate(ko, this.state.data) : k8sPatch(ko, { metadata }, [{ op: 'replace', path: `/subjects/${this.subjectIndex}`, value: subject }])).then(\n        obj => {\n          this.setState({ inProgress: false });\n          if (metadata.namespace) {\n            this.props.setActiveNamespace(metadata.namespace);\n          }\n          history.push(resourceObjPath(obj, referenceFor(obj)));\n        },\n        err => this.setState({ error: err.message, inProgress: false }),\n      );\n    }\n\n    render() {\n      const { kind, metadata, roleRef } = this.state.data;\n      const subject = this.getSubject();\n      const { fixed, saveButtonText } = this.props;\n      const RoleDropdown = kind === 'RoleBinding' ? NsRoleDropdown : ClusterRoleDropdown;\n      const title = `${this.props.titleVerb} ${kindObj(kind).label}`;\n\n      return (\n        <div className=\"co-m-pane__body\">\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          <form className=\"co-m-pane__body-group co-m-pane__form\" onSubmit={this.save}>\n            <h1 className=\"co-m-pane__heading\">{title}</h1>\n            <p className=\"co-m-pane__explanation\">Associate a user/group to the selected role to define the type of access and resources that are allowed.</p>\n\n            {!_.get(fixed, 'kind') && (\n              <Section label=\"Binding Type\">\n                <RadioGroup currentValue={kind} items={bindingKinds} onChange={this.setKind} />\n              </Section>\n            )}\n\n            <div className=\"co-form-section__separator\" />\n\n            <Section label=\"Role Binding\">\n              <div className=\"form-group\">\n                <label htmlFor=\"role-binding-name\" className=\"co-required\">\n                  Name\n                </label>\n                {_.get(fixed, 'metadata.name') ? <ResourceName kind={kind} name={metadata.name} /> : <input className=\"pf-c-form-control\" type=\"text\" onChange={this.changeName} placeholder=\"Role binding name\" value={metadata.name} required id=\"role-binding-name\" />}\n              </div>\n              {kind === 'RoleBinding' && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"ns-dropdown\" className=\"co-required\">\n                    Namespace\n                  </label>\n                  <NsDropdown fixed={!!_.get(fixed, 'metadata.namespace')} selectedKey={metadata.namespace} onChange={this.changeNamespace} id=\"ns-dropdown\" />\n                </div>\n              )}\n            </Section>\n\n            <div className=\"co-form-section__separator\" />\n\n            <Section label=\"Role\">\n              <div className=\"form-group\">\n                <label htmlFor=\"role-dropdown\" className=\"co-required\">\n                  Role Name\n                </label>\n                <RoleDropdown fixed={!!_.get(fixed, 'roleRef.name')} namespace={metadata.namespace} onChange={this.changeRoleRef} selectedKey={_.get(fixed, 'roleRef.name') || roleRef.name} selectedKeyKind={_.get(fixed, 'roleRef.kind') || roleRef.kind} id=\"role-dropdown\" />\n              </div>\n            </Section>\n\n            <div className=\"co-form-section__separator\" />\n\n            <Section label=\"Subject\">\n              <div className=\"form-group\">\n                <RadioGroup currentValue={subject.kind} items={subjectKinds} onChange={this.changeSubjectKind} />\n              </div>\n              {subject.kind === 'ServiceAccount' && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"subject-namespace\" className=\"co-required\">\n                    Subject Namespace\n                  </label>\n                  <NsDropdown id=\"subject-namespace\" selectedKey={subject.namespace} onChange={this.changeSubjectNamespace} />\n                </div>\n              )}\n              <div className=\"form-group\">\n                <label htmlFor=\"subject-name\" className=\"co-required\">\n                  Subject Name\n                </label>\n                <input className=\"pf-c-form-control\" type=\"text\" onChange={this.changeSubjectName} placeholder=\"Subject name\" value={subject.name} required id=\"subject-name\" />\n              </div>\n            </Section>\n\n            <div className=\"co-form-section__separator\" />\n\n            <ButtonBar errorMessage={this.state.error} inProgress={this.state.inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button type=\"submit\" id=\"save-changes\" variant=\"primary\">\n                  {saveButtonText || 'Create'}\n                </Button>\n                <Button onClick={history.goBack} id=\"cancel\" variant=\"secondary\">\n                  Cancel\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </form>\n        </div>\n      );\n    }\n  },\n);\n\nexport const CreateRoleBinding = ({ match: { params }, location }) => {\n  const searchParams = new URLSearchParams(location.search);\n  const roleKind = searchParams.get('rolekind');\n  const roleName = searchParams.get('rolename');\n  const metadata = { namespace: UIActions.getActiveNamespace() };\n  const clusterAllowed = useAccessReview({\n    group: ClusterRoleBindingModel.apiGroup,\n    resource: ClusterRoleBindingModel.plural,\n    verb: 'create',\n  });\n  const fixed = {\n    kind: params.ns || roleKind === 'Role' || !clusterAllowed ? 'RoleBinding' : undefined,\n    metadata: { namespace: params.ns },\n    roleRef: { kind: roleKind, name: roleName },\n  };\n  return <BaseEditRoleBinding metadata={metadata} fixed={fixed} isCreate={true} titleVerb=\"Create\" />;\n};\n\nconst getSubjectIndex = () => {\n  const subjectIndex = getQueryArgument('subjectIndex') || '0';\n  return parseInt(subjectIndex, 10);\n};\n\nconst BindingLoadingWrapper = props => {\n  const fixed = {};\n  _.each(props.fixedKeys, k => (fixed[k] = _.get(props.obj.data, k)));\n  return (\n    <StatusBox {...props.obj}>\n      <BaseEditRoleBinding {...props} obj={props.obj.data} fixed={fixed} />\n    </StatusBox>\n  );\n};\n\nexport const EditRoleBinding = ({ match: { params }, kind }) => (\n  <Firehose resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}>\n    <BindingLoadingWrapper fixedKeys={['kind', 'metadata', 'roleRef']} subjectIndex={getSubjectIndex()} titleVerb=\"Edit\" saveButtonText=\"Save\" />\n  </Firehose>\n);\n\nexport const CopyRoleBinding = ({ match: { params }, kind }) => (\n  <Firehose resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}>\n    <BindingLoadingWrapper isCreate={true} fixedKeys={['kind']} subjectIndex={getSubjectIndex()} titleVerb=\"Duplicate\" />\n  </Firehose>\n);\n"]}]}