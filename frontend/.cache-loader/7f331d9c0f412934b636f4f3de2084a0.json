{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { MatchExpressions } from './match-expressions';\nvar AffinityRuleType;\n(function (AffinityRuleType) {\n    AffinityRuleType[\"Preferred\"] = \"Preferred\";\n    AffinityRuleType[\"Required\"] = \"Required\";\n})(AffinityRuleType || (AffinityRuleType = {}));\nconst REQUIRED_TOOLTIP = 'Required rules must be met before a pod can be scheduled on a node.';\nconst PREFERRED_TOOLTIP = 'Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.';\nconst ALLOWED_MATCH_EXPRESSION_OPERATORS = [\n    'In',\n    'NotIn',\n    'Exists',\n    'DoesNotExist',\n];\nconst DEFAULT_MATCH_EXPRESSION = {\n    key: '',\n    operator: 'Exists',\n};\nexport const DEFAULT_NODE_AFFINITY = {\n    requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [{ matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] }],\n    },\n    preferredDuringSchedulingIgnoredDuringExecution: [\n        {\n            weight: 1,\n            preference: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n        },\n    ],\n};\nexport const DEFAULT_POD_AFFINITY = {\n    requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n            topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n            labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n        },\n    ],\n    preferredDuringSchedulingIgnoredDuringExecution: [\n        {\n            weight: 1,\n            podAffinityTerm: {\n                topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n                labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n            },\n        },\n    ],\n};\nconst NodeAffinityRule = ({ key, type, showRemoveButton = false, onClickRemove, onChange = () => { }, rule, }) => {\n    const { weight, selector } = rule;\n    const onChangeMatchExpressions = (matchExpressions) => onChange(Object.assign(Object.assign({}, rule), { selector: Object.assign(Object.assign({}, selector), { matchExpressions }) }));\n    const onChangeWeight = (e) => {\n        var _a;\n        const parsedValue = _.parseInt((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value);\n        onChange(Object.assign(Object.assign({}, rule), { weight: _.isFinite(parsedValue) ? parsedValue : undefined }));\n    };\n    return (React.createElement(\"div\", { className: \"co-affinity-term\" },\n        showRemoveButton && (React.createElement(Button, { type: \"button\", className: \"co-affinity-term__remove\", onClick: onClickRemove, variant: \"link\" },\n            React.createElement(MinusCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Remove \",\n            type)),\n        type === AffinityRuleType.Preferred && (React.createElement(\"div\", { className: \"co-affinity-term__weight-input\" },\n            React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `preference-${key}` }, \"Weight\"),\n            React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"number\", value: weight, onChange: onChangeWeight, required: true }))),\n        React.createElement(MatchExpressions, { matchExpressions: selector === null || selector === void 0 ? void 0 : selector.matchExpressions, onChange: onChangeMatchExpressions, allowedOperators: ALLOWED_MATCH_EXPRESSION_OPERATORS, uid: key })));\n};\nexport const NodeAffinity = ({ affinity, onChange, uid = '' }) => {\n    var _a;\n    const requiredRules = ((_a = affinity === null || affinity === void 0 ? void 0 : affinity.requiredDuringSchedulingIgnoredDuringExecution) === null || _a === void 0 ? void 0 : _a.nodeSelectorTerms) || [];\n    const preferredRules = (affinity === null || affinity === void 0 ? void 0 : affinity.preferredDuringSchedulingIgnoredDuringExecution) || [];\n    const addRequiredRule = () => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: {\n            nodeSelectorTerms: [...requiredRules, { matchExpressions: [] }],\n        } }));\n    const removeRequiredRule = (atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: {\n            nodeSelectorTerms: requiredRules.filter((_v, index) => index !== atIndex),\n        } }));\n    const updateRequiredRules = ({ selector }, atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: {\n            nodeSelectorTerms: requiredRules.map((current, index) => index === atIndex ? selector : current),\n        } }));\n    const addPreferredRule = () => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: [\n            ...preferredRules,\n            { weight: 1, preference: { matchExpressions: [] } },\n        ] }));\n    const removePreferredRule = (atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter((_v, index) => index !== atIndex) }));\n    const updatePreferredRules = ({ selector: preference, weight }, atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) => index === atIndex ? { preference, weight } : current) }));\n    return (React.createElement(\"dl\", null,\n        React.createElement(Tooltip, { content: REQUIRED_TOOLTIP },\n            React.createElement(\"dt\", null, \"Required During Scheduling Ignored During Execution\")),\n        React.createElement(\"dd\", null,\n            requiredRules.map((selector, requiredIndex) => (React.createElement(NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            , { \n                // Have to use array index in the key bc any other unique id whould have to use editable fields.\n                // eslint-disable-next-line react/no-array-index-key\n                key: `${uid}-node-affinity-required-${requiredIndex}`, onChange: (rule) => updateRequiredRules(rule, requiredIndex), onClickRemove: () => removeRequiredRule(requiredIndex), rule: { selector }, showRemoveButton: true, type: AffinityRuleType.Required }))),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(Button, { type: \"button\", onClick: addRequiredRule, variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                    \"Add Required\"))),\n        React.createElement(Tooltip, { content: PREFERRED_TOOLTIP },\n            React.createElement(\"dt\", null, \"Preferred During Scheduling Ignored During Execution\")),\n        React.createElement(\"dd\", null,\n            preferredRules.map(({ preference: selector, weight }, preferredIndex) => (React.createElement(NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            , { \n                // Have to use array index in the key bc any other unique id whould have to use editable fields.\n                // eslint-disable-next-line react/no-array-index-key\n                key: `${uid}-node-affinity-preferred-${preferredIndex}`, onChange: (rule) => updatePreferredRules(rule, preferredIndex), onClickRemove: () => removePreferredRule(preferredIndex), rule: { selector, weight }, showRemoveButton: true, type: AffinityRuleType.Preferred }))),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(Button, { type: \"button\", onClick: addPreferredRule, variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                    \"Add Preferred\")))));\n};\nconst PodAffinityRule = ({ key, onChange = () => { }, onClickRemove = () => { }, showRemoveButton = false, rule, type, }) => {\n    const { podAffinityTerm, weight } = rule;\n    const selector = (podAffinityTerm === null || podAffinityTerm === void 0 ? void 0 : podAffinityTerm.labelSelector) || {};\n    const topologyKey = podAffinityTerm === null || podAffinityTerm === void 0 ? void 0 : podAffinityTerm.topologyKey;\n    const onChangeWeight = (e) => {\n        var _a;\n        const parsed = _.parseInt((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value);\n        onChange(Object.assign(Object.assign({}, rule), { weight: _.isFinite(parsed) ? parsed : undefined }));\n    };\n    const onChangeTopologyKey = (e) => {\n        var _a;\n        return onChange(Object.assign(Object.assign({}, rule), { podAffinityTerm: Object.assign(Object.assign({}, podAffinityTerm), { topologyKey: (_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value }) }));\n    };\n    const onChangeMatchExpressions = (matchExpressions) => onChange(Object.assign(Object.assign({}, rule), { podAffinityTerm: Object.assign(Object.assign({}, podAffinityTerm), { labelSelector: Object.assign(Object.assign({}, selector), { matchExpressions }) }) }));\n    return podAffinityTerm ? (React.createElement(\"div\", { className: \"co-affinity-term\" },\n        showRemoveButton && (React.createElement(Button, { type: \"button\", className: \"co-affinity-term__remove\", onClick: onClickRemove, variant: \"link\" },\n            React.createElement(MinusCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Remove \",\n            type)),\n        React.createElement(\"div\", { className: \"co-affinity-term__topology\" },\n            type === AffinityRuleType.Preferred && (React.createElement(\"div\", { className: \"co-affinity-term__weight-input\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `preference-${key}` }, \"Weight\"),\n                React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"number\", value: weight, onChange: onChangeWeight, required: true }))),\n            React.createElement(\"div\", { className: \"co-affinity-term__topology-input\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `topology-${key}` }, \"Topology Key\"),\n                React.createElement(\"input\", { id: `topology-${key}`, className: \"pf-c-form-control\", type: \"text\", value: topologyKey, onChange: onChangeTopologyKey, required: true }))),\n        React.createElement(MatchExpressions, { matchExpressions: selector === null || selector === void 0 ? void 0 : selector.matchExpressions, onChange: onChangeMatchExpressions, allowedOperators: ALLOWED_MATCH_EXPRESSION_OPERATORS, uid: key }))) : null;\n};\nexport const PodAffinity = ({ affinity, onChange, uid = '' }) => {\n    const { requiredDuringSchedulingIgnoredDuringExecution: requiredRules = [], preferredDuringSchedulingIgnoredDuringExecution: preferredRules = [], } = affinity || {};\n    const addRequiredRule = () => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: [\n            ...requiredRules,\n            { topologyKey: '', labelSelector: { matchExpressions: [] } },\n        ] }));\n    const removeRequiredRule = (atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: requiredRules.filter((_v, index) => atIndex !== index) }));\n    const updateRequiredRules = ({ podAffinityTerm: next }, atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { requiredDuringSchedulingIgnoredDuringExecution: requiredRules.map((current, index) => index === atIndex ? next : current) }));\n    const addPreferredRule = () => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: [\n            ...preferredRules,\n            {\n                weight: 1,\n                podAffinityTerm: { topologyKey: '', labelSelector: { matchExpressions: [] } },\n            },\n        ] }));\n    const removePreferredRule = (atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter((_v, index) => atIndex !== index) }));\n    const updatePreferredRules = (next, atIndex) => onChange === null || onChange === void 0 ? void 0 : onChange(Object.assign(Object.assign({}, affinity), { preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) => index === atIndex ? next : current) }));\n    return (React.createElement(\"dl\", null,\n        React.createElement(Tooltip, { content: REQUIRED_TOOLTIP },\n            React.createElement(\"dt\", null, \"Required During Scheduling Ignored During Execution\")),\n        React.createElement(\"dd\", null,\n            _.map(requiredRules, (podAffinityTerm, ruleIndex) => (\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            React.createElement(PodAffinityRule, { key: `${uid}-pod-affinity-required-${ruleIndex}`, rule: { podAffinityTerm }, onChange: (rule) => updateRequiredRules(rule, ruleIndex), onClickRemove: () => removeRequiredRule(ruleIndex), showRemoveButton: true, type: AffinityRuleType.Required }))),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(Button, { type: \"button\", onClick: addRequiredRule, variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                    \"Add Required\"))),\n        React.createElement(Tooltip, { content: PREFERRED_TOOLTIP },\n            React.createElement(\"dt\", null, \"Preferred During Scheduling Ignored During Execution\")),\n        React.createElement(\"dd\", null,\n            preferredRules.map((preferredRule, ruleIndex) => {\n                // Have to use array index in the key bc any other unique id whould have to use editable fields.\n                return (React.createElement(PodAffinityRule\n                // eslint-disable-next-line react/no-array-index-key\n                , { \n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `${uid}-pod-affinity-preferred-${ruleIndex}`, onChange: (rule) => updatePreferredRules(rule, ruleIndex), onClickRemove: () => removePreferredRule(ruleIndex), showRemoveButton: true, rule: preferredRule, type: AffinityRuleType.Preferred }));\n            }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(Button, { type: \"button\", onClick: addPreferredRule, variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                    \"Add Preferred\")))));\n};\nNodeAffinity.displayName = 'NodeAffinity';\nPodAffinity.displayName = 'PodAffinity';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport {\n  NodeAffinity as NodeAffinityType,\n  MatchExpression,\n  PodAffinity as PodAffinityType,\n  PodAffinityTerm,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { MatchExpressions } from './match-expressions';\n\nenum AffinityRuleType {\n  Preferred = 'Preferred',\n  Required = 'Required',\n}\n\nconst REQUIRED_TOOLTIP = 'Required rules must be met before a pod can be scheduled on a node.';\nconst PREFERRED_TOOLTIP =\n  'Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.';\nconst ALLOWED_MATCH_EXPRESSION_OPERATORS: MatchExpression['operator'][] = [\n  'In',\n  'NotIn',\n  'Exists',\n  'DoesNotExist',\n];\nconst DEFAULT_MATCH_EXPRESSION: MatchExpression = {\n  key: '',\n  operator: 'Exists',\n};\n\nexport const DEFAULT_NODE_AFFINITY: NodeAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: {\n    nodeSelectorTerms: [{ matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] }],\n  },\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      preference: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n};\n\nexport const DEFAULT_POD_AFFINITY: PodAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: [\n    {\n      topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n      labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      podAffinityTerm: {\n        topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n        labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n      },\n    },\n  ],\n};\n\nconst NodeAffinityRule: React.FC<NodeAffinityRuleProps> = ({\n  key,\n  type,\n  showRemoveButton = false,\n  onClickRemove,\n  onChange = () => {},\n  rule,\n}) => {\n  const { weight, selector } = rule;\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      selector: {\n        ...selector,\n        matchExpressions,\n      },\n    });\n\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsedValue = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsedValue) ? parsedValue : undefined,\n    });\n  };\n\n  return (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          Remove {type}\n        </Button>\n      )}\n      {type === AffinityRuleType.Preferred && (\n        <div className=\"co-affinity-term__weight-input\">\n          <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n            Weight\n          </label>\n          <input\n            className=\"pf-c-form-control\"\n            type=\"number\"\n            value={weight}\n            onChange={onChangeWeight}\n            required\n          />\n        </div>\n      )}\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  );\n};\n\nexport const NodeAffinity: React.FC<NodeAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const requiredRules =\n    affinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms || [];\n  const preferredRules = affinity?.preferredDuringSchedulingIgnoredDuringExecution || [];\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [...requiredRules, { matchExpressions: [] }],\n      },\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.filter((_v, index) => index !== atIndex),\n      },\n    });\n\n  const updateRequiredRules = ({ selector }: NodeAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.map((current, index) =>\n          index === atIndex ? selector : current,\n        ),\n      },\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        { weight: 1, preference: { matchExpressions: [] } },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => index !== atIndex,\n      ),\n    });\n\n  const updatePreferredRules = (\n    { selector: preference, weight }: NodeAffinityRule,\n    atIndex: number,\n  ) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? { preference, weight } : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip content={REQUIRED_TOOLTIP}>\n        <dt>Required During Scheduling Ignored During Execution</dt>\n      </Tooltip>\n      <dd>\n        {requiredRules.map((selector, requiredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-required-${requiredIndex}`}\n            onChange={(rule) => updateRequiredRules(rule, requiredIndex)}\n            onClickRemove={() => removeRequiredRule(requiredIndex)}\n            rule={{ selector }}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            Add Required\n          </Button>\n        </div>\n      </dd>\n      <Tooltip content={PREFERRED_TOOLTIP}>\n        <dt>Preferred During Scheduling Ignored During Execution</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map(({ preference: selector, weight }, preferredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-preferred-${preferredIndex}`}\n            onChange={(rule) => updatePreferredRules(rule, preferredIndex)}\n            onClickRemove={() => removePreferredRule(preferredIndex)}\n            rule={{ selector, weight }}\n            showRemoveButton\n            type={AffinityRuleType.Preferred}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            Add Preferred\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\nconst PodAffinityRule: React.FC<PodAffinityRuleProps> = ({\n  key,\n  onChange = () => {},\n  onClickRemove = () => {},\n  showRemoveButton = false,\n  rule,\n  type,\n}) => {\n  const { podAffinityTerm, weight } = rule;\n  const selector = podAffinityTerm?.labelSelector || {};\n  const topologyKey = podAffinityTerm?.topologyKey;\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsed = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsed) ? parsed : undefined,\n    });\n  };\n\n  const onChangeTopologyKey = (e: React.ChangeEvent<HTMLInputElement>): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        topologyKey: e?.target?.value,\n      },\n    });\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        labelSelector: {\n          ...selector,\n          matchExpressions,\n        },\n      },\n    });\n\n  return podAffinityTerm ? (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          Remove {type}\n        </Button>\n      )}\n      <div className=\"co-affinity-term__topology\">\n        {type === AffinityRuleType.Preferred && (\n          <div className=\"co-affinity-term__weight-input\">\n            <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n              Weight\n            </label>\n            <input\n              className=\"pf-c-form-control\"\n              type=\"number\"\n              value={weight}\n              onChange={onChangeWeight}\n              required\n            />\n          </div>\n        )}\n        <div className=\"co-affinity-term__topology-input\">\n          <label className=\"control-label co-required\" htmlFor={`topology-${key}`}>\n            Topology Key\n          </label>\n          <input\n            id={`topology-${key}`}\n            className=\"pf-c-form-control\"\n            type=\"text\"\n            value={topologyKey}\n            onChange={onChangeTopologyKey}\n            required\n          />\n        </div>\n      </div>\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  ) : null;\n};\n\nexport const PodAffinity: React.FC<PodAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const {\n    requiredDuringSchedulingIgnoredDuringExecution: requiredRules = [],\n    preferredDuringSchedulingIgnoredDuringExecution: preferredRules = [],\n  } = affinity || {};\n\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        ...requiredRules,\n        { topologyKey: '', labelSelector: { matchExpressions: [] } },\n      ],\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updateRequiredRules = ({ podAffinityTerm: next }: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        {\n          weight: 1,\n          podAffinityTerm: { topologyKey: '', labelSelector: { matchExpressions: [] } },\n        },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updatePreferredRules = (next: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip content={REQUIRED_TOOLTIP}>\n        <dt>Required During Scheduling Ignored During Execution</dt>\n      </Tooltip>\n      <dd>\n        {_.map(requiredRules, (podAffinityTerm, ruleIndex) => (\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          // eslint-disable-next-line react/no-array-index-key\n          <PodAffinityRule\n            key={`${uid}-pod-affinity-required-${ruleIndex}`}\n            rule={{ podAffinityTerm }}\n            onChange={(rule) => updateRequiredRules(rule, ruleIndex)}\n            onClickRemove={() => removeRequiredRule(ruleIndex)}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            Add Required\n          </Button>\n        </div>\n      </dd>\n      <Tooltip content={PREFERRED_TOOLTIP}>\n        <dt>Preferred During Scheduling Ignored During Execution</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map((preferredRule, ruleIndex) => {\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          return (\n            <PodAffinityRule\n              // eslint-disable-next-line react/no-array-index-key\n              key={`${uid}-pod-affinity-preferred-${ruleIndex}`}\n              onChange={(rule) => updatePreferredRules(rule, ruleIndex)}\n              onClickRemove={() => removePreferredRule(ruleIndex)}\n              showRemoveButton\n              rule={preferredRule}\n              type={AffinityRuleType.Preferred}\n            />\n          );\n        })}\n\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            Add Preferred\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\ntype NodeAffinityRule = {\n  selector: Selector;\n  weight?: number;\n};\n\nexport type NodeAffinityRuleProps = {\n  key: string;\n  onChange?: (rule: NodeAffinityRule) => void;\n  onClickRemove?: () => void;\n  rule: NodeAffinityRule;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type NodeAffinityProps = {\n  uid?: string;\n  affinity: NodeAffinityType;\n  onChange: (affinity: NodeAffinityType) => void;\n};\n\ntype PodAffinityRule = {\n  podAffinityTerm: PodAffinityTerm;\n  weight?: number;\n};\n\nexport type PodAffinityRuleProps = {\n  key: string;\n  rule: PodAffinityRule;\n  onChange?: (rule: PodAffinityRule) => void;\n  onClickRemove?: () => void;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type PodAffinityProps = {\n  uid?: string;\n  affinity: PodAffinityType;\n  onChange: (affinity: PodAffinityType) => void;\n};\n\nNodeAffinity.displayName = 'NodeAffinity';\nPodAffinity.displayName = 'PodAffinity';\n"]}]}