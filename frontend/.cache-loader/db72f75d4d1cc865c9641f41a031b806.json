{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceSection.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { FieldArray, useField } from 'formik';\nimport FormSection from '../../../import/section/FormSection';\nimport PipelineResourceDropdownField from './PipelineResourceDropdownField';\nconst reduceToSections = (acc, resource, formikIndex) => {\n    const resourceType = resource.data.type;\n    if (!resourceType) {\n        return acc;\n    }\n    return Object.assign(Object.assign({}, acc), { [resourceType]: [...(acc[resourceType] || []), { formikIndex, resource }] });\n};\nconst PipelineResourceSection = () => {\n    const [{ value: resources }] = useField('resources');\n    const sections = resources.reduce(reduceToSections, {});\n    const types = Object.keys(sections);\n    return (React.createElement(React.Fragment, null, types.map((type) => (React.createElement(FieldArray, { name: type, key: type, render: () => {\n            const section = sections[type];\n            return (React.createElement(FormSection, { title: `${capitalize(type)} Resources`, fullWidth: true }, section.map((sectionData) => {\n                const { formikIndex, resource } = sectionData;\n                return (React.createElement(PipelineResourceDropdownField, { key: resource.name, name: `resources.${formikIndex}`, filterType: type, label: resource.name }));\n            })));\n        } })))));\n};\nexport default PipelineResourceSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,WAAW,MAAM,qCAAqC,CAAC;AAC9D,OAAO,6BAA6B,MAAM,iCAAiC,CAAC;AAc5E,MAAM,gBAAgB,GAAG,CACvB,GAAoB,EACpB,QAAmC,EACnC,WAAmB,EACnB,EAAE;IACF,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;IAExC,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,GAAG,CAAC;KACZ;IAED,uCACK,GAAG,KACN,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,IACzE;AACJ,CAAC,CAAC;AAEF,MAAM,uBAAuB,GAAa,GAAG,EAAE;IAC7C,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,GAAG,QAAQ,CAA8B,WAAW,CAAC,CAAC;IAElF,MAAM,QAAQ,GAAoB,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAqB,CAAC,CAAC;IAC5F,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAEpC,OAAO,CACL,0CACG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,oBAAC,UAAU,IACT,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,IAAI,EACT,MAAM,EAAE,GAAG,EAAE;YACX,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAE/B,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,UAC3D,OAAO,CAAC,GAAG,CAAC,CAAC,WAAgC,EAAE,EAAE;gBAChD,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,WAAW,CAAC;gBAE9C,OAAO,CACL,oBAAC,6BAA6B,IAC5B,GAAG,EAAE,QAAQ,CAAC,IAAI,EAClB,IAAI,EAAE,aAAa,WAAW,EAAE,EAChC,UAAU,EAAE,IAAI,EAChB,KAAK,EAAE,QAAQ,CAAC,IAAI,GACpB,CACH,CAAC;YACJ,CAAC,CAAC,CACU,CACf,CAAC;QACJ,CAAC,GACD,CACH,CAAC,CACD,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC","sourcesContent":["import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { FieldArray, useField } from 'formik';\nimport FormSection from '../../../import/section/FormSection';\nimport PipelineResourceDropdownField from './PipelineResourceDropdownField';\nimport { PipelineModalFormResource } from './types';\n\ntype ResourceSectionType = {\n  formikIndex: number;\n  resource: PipelineModalFormResource;\n};\ntype ResourceSection = {\n  cluster?: ResourceSectionType[];\n  git?: ResourceSectionType[];\n  image?: ResourceSectionType[];\n  storage?: ResourceSectionType[];\n};\n\nconst reduceToSections = (\n  acc: ResourceSection,\n  resource: PipelineModalFormResource,\n  formikIndex: number,\n) => {\n  const resourceType = resource.data.type;\n\n  if (!resourceType) {\n    return acc;\n  }\n\n  return {\n    ...acc,\n    [resourceType]: [...(acc[resourceType] || []), { formikIndex, resource }],\n  };\n};\n\nconst PipelineResourceSection: React.FC = () => {\n  const [{ value: resources }] = useField<PipelineModalFormResource[]>('resources');\n\n  const sections: ResourceSection = resources.reduce(reduceToSections, {} as ResourceSection);\n  const types = Object.keys(sections);\n\n  return (\n    <>\n      {types.map((type) => (\n        <FieldArray\n          name={type}\n          key={type}\n          render={() => {\n            const section = sections[type];\n\n            return (\n              <FormSection title={`${capitalize(type)} Resources`} fullWidth>\n                {section.map((sectionData: ResourceSectionType) => {\n                  const { formikIndex, resource } = sectionData;\n\n                  return (\n                    <PipelineResourceDropdownField\n                      key={resource.name}\n                      name={`resources.${formikIndex}`}\n                      filterType={type}\n                      label={resource.name}\n                    />\n                  );\n                })}\n              </FormSection>\n            );\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PipelineResourceSection;\n"]}]}