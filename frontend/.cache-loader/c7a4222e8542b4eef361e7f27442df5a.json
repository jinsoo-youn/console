{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/item-selector-field/SelectorCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/item-selector-field/SelectorCard.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { StarIcon } from '@patternfly/react-icons';\nimport './SelectorCard.scss';\nconst SelectorCard = ({ title, iconUrl, name, displayName, selected, recommended = false, onChange, }) => {\n    const classes = classNames('odc-selector-card', { 'is-selected': selected });\n    return (React.createElement(Card, { component: \"button\", type: \"button\", \"aria-label\": title, className: classes, onClick: () => onChange(name) },\n        React.createElement(CardHeader, null,\n            React.createElement(\"img\", { className: \"odc-selector-card__icon\", src: iconUrl, alt: displayName !== null && displayName !== void 0 ? displayName : title })),\n        React.createElement(CardBody, null,\n            React.createElement(\"span\", { className: \"odc-selector-card__title\" }, title)),\n        recommended && (React.createElement(\"span\", { className: \"odc-selector-card__recommended\" },\n            React.createElement(StarIcon, null)))));\n};\nexport default SelectorCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/item-selector-field/SelectorCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/item-selector-field/SelectorCard.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,qBAAqB,CAAC;AAY7B,MAAM,YAAY,GAAgC,CAAC,EACjD,KAAK,EACL,OAAO,EACP,IAAI,EACJ,WAAW,EACX,QAAQ,EACR,WAAW,GAAG,KAAK,EACnB,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,OAAO,GAAG,UAAU,CAAC,mBAAmB,EAAE,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC7E,OAAO,CACL,oBAAC,IAAI,IACH,SAAS,EAAC,QAAQ,EAClB,IAAI,EAAC,QAAQ,gBACD,KAAK,EACjB,SAAS,EAAE,OAAO,EAClB,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;QAE7B,oBAAC,UAAU;YACT,6BAAK,SAAS,EAAC,yBAAyB,EAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,KAAK,GAAI,CACzE;QACb,oBAAC,QAAQ;YACP,8BAAM,SAAS,EAAC,0BAA0B,IAAE,KAAK,CAAQ,CAChD;QACV,WAAW,IAAI,CACd,8BAAM,SAAS,EAAC,gCAAgC;YAC9C,oBAAC,QAAQ,OAAG,CACP,CACR,CACI,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { StarIcon } from '@patternfly/react-icons';\nimport './SelectorCard.scss';\n\ninterface SelectorCardProps {\n  title: string;\n  iconUrl: string;\n  name: string;\n  displayName?: string;\n  selected?: boolean;\n  recommended?: boolean;\n  onChange: (name: string) => void;\n}\n\nconst SelectorCard: React.FC<SelectorCardProps> = ({\n  title,\n  iconUrl,\n  name,\n  displayName,\n  selected,\n  recommended = false,\n  onChange,\n}) => {\n  const classes = classNames('odc-selector-card', { 'is-selected': selected });\n  return (\n    <Card\n      component=\"button\"\n      type=\"button\"\n      aria-label={title}\n      className={classes}\n      onClick={() => onChange(name)}\n    >\n      <CardHeader>\n        <img className=\"odc-selector-card__icon\" src={iconUrl} alt={displayName ?? title} />\n      </CardHeader>\n      <CardBody>\n        <span className=\"odc-selector-card__title\">{title}</span>\n      </CardBody>\n      {recommended && (\n        <span className=\"odc-selector-card__recommended\">\n          <StarIcon />\n        </span>\n      )}\n    </Card>\n  );\n};\n\nexport default SelectorCard;\n"]}]}