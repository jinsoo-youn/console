{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/webhooks.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/webhooks.tsx","mtime":1616735742490},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Base64 } from 'js-base64';\nimport { PasteIcon } from '@patternfly/react-icons';\nimport { Button, AlertVariant } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\nimport { k8sGet } from '../../module/k8s';\nimport { ExpandableAlert } from './alerts';\nimport { SectionHeading } from './headings';\nimport { ResourceLink } from './resource-link';\nimport { useAccessReview } from './rbac';\nimport { SecretModel } from '../../models';\nimport { errorModal } from '../modals/error-modal';\nconst kubeAPIServerURL = window.SERVER_FLAGS.kubeAPIServerURL || 'https://<api-server>';\nvar TriggerTypes;\n(function (TriggerTypes) {\n    TriggerTypes[\"Bitbucket\"] = \"Bitbucket\";\n    TriggerTypes[\"ConfigChange\"] = \"ConfigChange\";\n    TriggerTypes[\"Generic\"] = \"Generic\";\n    TriggerTypes[\"GitHub\"] = \"GitHub\";\n    TriggerTypes[\"GitLab\"] = \"GitLab\";\n    TriggerTypes[\"ImageChange\"] = \"ImageChange\";\n})(TriggerTypes || (TriggerTypes = {}));\nconst webhookTriggerTypes = new Set([\n    TriggerTypes.Bitbucket,\n    TriggerTypes.Generic,\n    TriggerTypes.GitHub,\n    TriggerTypes.GitLab,\n]);\nconst getTriggerProperty = (trigger) => trigger.type.toLowerCase();\nconst getTableColumnClasses = (canGetSecret) => {\n    if (canGetSecret) {\n        return [\n            classNames('col-lg-2', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n            classNames('col-lg-6', 'hidden-md', 'hidden-sm', 'hidden-xs', 'co-break-all'),\n            classNames('col-lg-2', 'col-md-4 ', 'col-sm-4', 'hidden-xs'),\n            classNames('col-lg-2', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n        ];\n    }\n    return [\n        classNames('col-sm-2'),\n        classNames('col-sm-7', 'co-break-all'),\n        classNames('col-sm-3', 'hidden-xs'),\n        classNames('hidden'),\n    ];\n};\nexport const WebhookTriggers = (props) => {\n    const { resource } = props;\n    const { name, namespace } = resource.metadata;\n    const { triggers } = resource.spec;\n    const canGetSecret = useAccessReview({\n        group: SecretModel.apiGroup,\n        resource: SecretModel.plural,\n        verb: 'get',\n        namespace,\n    });\n    const tableColumnClasses = getTableColumnClasses(canGetSecret);\n    const [webhookSecrets, setWebhookSecrets] = React.useState([]);\n    const [webhookTriggers, setWebhookTriggers] = React.useState([]);\n    const [secretNames, setSecretNames] = React.useState([]);\n    const [secretErrors, setSecretErrors] = React.useState([]);\n    const [isLoaded, setLoaded] = React.useState(false);\n    React.useEffect(() => {\n        setWebhookTriggers((previousTriggers) => {\n            const newTriggers = _.filter(triggers, ({ type }) => webhookTriggerTypes.has(type));\n            return _.isEqual(previousTriggers, newTriggers) ? previousTriggers : newTriggers;\n        });\n    }, [triggers]);\n    React.useEffect(() => {\n        const newSecretNames = _.uniq(webhookTriggers.reduce((acc, webhook) => {\n            const triggerProperty = getTriggerProperty(webhook);\n            const secretName = _.get(webhook, [triggerProperty, 'secretReference', 'name']);\n            return secretName ? [...acc, secretName] : acc;\n        }, []));\n        setSecretNames(newSecretNames);\n    }, [webhookTriggers]);\n    React.useEffect(() => {\n        if (!canGetSecret) {\n            return;\n        }\n        let errors = [];\n        Promise.all(secretNames.map((webhookName) => {\n            return k8sGet(SecretModel, webhookName, namespace).then((secret) => secret, (error) => {\n                errors = [...errors, `Error: ${error.message}`];\n                return null;\n            });\n        })).then((secrets) => {\n            setSecretErrors(errors);\n            setWebhookSecrets(_.compact(secrets));\n            setLoaded(true);\n        });\n    }, [secretNames, isLoaded, canGetSecret, namespace]);\n    if (_.isEmpty(webhookTriggers)) {\n        return null;\n    }\n    const getWebhookURL = (trigger, secret) => {\n        const triggerProperty = getTriggerProperty(trigger);\n        return `${kubeAPIServerURL}/apis/build.openshift.io/v1/namespaces/${namespace}/buildconfigs/${name}/webhooks/${secret ? secret : '<secret>'}/${triggerProperty}`;\n    };\n    const getSecretReference = (trigger) => {\n        const triggerProperty = getTriggerProperty(trigger);\n        const secretName = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n        if (!secretName) {\n            return React.createElement(\"span\", { className: \"text-muted\" }, \"No secret\");\n        }\n        const webhookSecret = webhookSecrets.find((secret) => secret.metadata.name === secretName);\n        if (!webhookSecret) {\n            return secretName;\n        }\n        return (React.createElement(ResourceLink, { kind: \"Secret\", name: secretName, namespace: namespace, title: secretName }));\n    };\n    const copyWebhookToClipboard = (trigger) => {\n        const triggerProperty = getTriggerProperty(trigger);\n        // In case of obsolete `secret` field on the trigger.\n        // https://github.com/openshift/api/blob/master/build/v1/types.go#L950\n        if (_.has(trigger, [triggerProperty, 'secret'])) {\n            const webhookSecret = _.get(trigger, [triggerProperty, 'secret']);\n            const url = getWebhookURL(trigger, webhookSecret);\n            navigator.clipboard.writeText(url);\n            return;\n        }\n        const secretName = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n        const webhookSecret = webhookSecrets.find((secret) => secret.metadata.name === secretName);\n        if (!_.has(webhookSecret, 'data.WebHookSecretKey')) {\n            errorModal({\n                error: `Secret referenced in the ${triggerProperty} webhook trigger does not contain 'WebHookSecretKey' key. Webhook trigger wonâ€™t work due to the invalid secret reference`,\n            });\n            return;\n        }\n        const webhookSecretValue = Base64.decode(webhookSecret.data.WebHookSecretKey);\n        const url = getWebhookURL(trigger, webhookSecretValue);\n        navigator.clipboard.writeText(url);\n    };\n    const getClipboardButton = (trigger) => {\n        const triggerProperty = getTriggerProperty(trigger);\n        const plainSecret = _.get(trigger, [triggerProperty, 'secret']);\n        const secretReference = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n        const webhookSecret = webhookSecrets.find((secret) => secret.metadata.name === secretReference);\n        return webhookSecret || plainSecret ? (React.createElement(Button, { variant: \"link\", type: \"button\", onClick: () => copyWebhookToClipboard(trigger) },\n            React.createElement(PasteIcon, null),\n            \"\\u00A0Copy URL with Secret\")) : null;\n    };\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        !_.isEmpty(secretErrors) && (React.createElement(ExpandableAlert, { variant: AlertVariant.warning, alerts: _.map(secretErrors, (error, i) => (React.createElement(\"div\", { className: \"co-pre-line\", key: i }, error))) })),\n        React.createElement(SectionHeading, { text: \"Webhooks\" }),\n        React.createElement(\"div\", { className: \"co-table-container\" },\n            React.createElement(\"table\", { className: \"table table--layout-fixed\" },\n                React.createElement(\"colgroup\", null,\n                    React.createElement(\"col\", { className: tableColumnClasses[0] }),\n                    React.createElement(\"col\", { className: tableColumnClasses[1] }),\n                    React.createElement(\"col\", { className: tableColumnClasses[2] }),\n                    React.createElement(\"col\", { className: tableColumnClasses[3] })),\n                React.createElement(\"thead\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", { className: tableColumnClasses[0] }, \"Type\"),\n                        React.createElement(\"th\", { className: tableColumnClasses[1] }, \"Webhook URL\"),\n                        React.createElement(\"th\", { className: tableColumnClasses[2] }, \"Secret\"),\n                        React.createElement(\"th\", { className: tableColumnClasses[3] }))),\n                React.createElement(\"tbody\", null, _.map(webhookTriggers, (trigger, i) => {\n                    const webhookURL = getWebhookURL(trigger);\n                    const secretReference = getSecretReference(trigger);\n                    const clipboardButton = getClipboardButton(trigger);\n                    return (React.createElement(\"tr\", { key: i },\n                        React.createElement(\"td\", { className: tableColumnClasses[0] }, trigger.type),\n                        React.createElement(\"td\", { className: tableColumnClasses[1] }, webhookURL || '-'),\n                        React.createElement(\"td\", { className: tableColumnClasses[2] }, secretReference),\n                        React.createElement(\"td\", { className: tableColumnClasses[3] }, clipboardButton)));\n                }))))));\n};\nWebhookTriggers.displayName = 'WebhookTriggers';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/webhooks.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/webhooks.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Base64 } from 'js-base64';\nimport { PasteIcon } from '@patternfly/react-icons';\nimport { Button, AlertVariant } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\n\nimport { K8sResourceKind, k8sGet } from '../../module/k8s';\nimport { ExpandableAlert } from './alerts';\nimport { SectionHeading } from './headings';\nimport { ResourceLink } from './resource-link';\nimport { useAccessReview } from './rbac';\nimport { SecretModel } from '../../models';\nimport { errorModal } from '../modals/error-modal';\n\nconst kubeAPIServerURL = window.SERVER_FLAGS.kubeAPIServerURL || 'https://<api-server>';\nenum TriggerTypes {\n  Bitbucket = 'Bitbucket',\n  ConfigChange = 'ConfigChange',\n  Generic = 'Generic',\n  GitHub = 'GitHub',\n  GitLab = 'GitLab',\n  ImageChange = 'ImageChange',\n}\nconst webhookTriggerTypes = new Set<TriggerTypes>([\n  TriggerTypes.Bitbucket,\n  TriggerTypes.Generic,\n  TriggerTypes.GitHub,\n  TriggerTypes.GitLab,\n]);\nconst getTriggerProperty = (trigger: WebhookTrigger) => trigger.type.toLowerCase();\n\nconst getTableColumnClasses = (canGetSecret: boolean) => {\n  if (canGetSecret) {\n    return [\n      classNames('col-lg-2', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n      classNames('col-lg-6', 'hidden-md', 'hidden-sm', 'hidden-xs', 'co-break-all'),\n      classNames('col-lg-2', 'col-md-4 ', 'col-sm-4', 'hidden-xs'),\n      classNames('col-lg-2', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n    ];\n  }\n  return [\n    classNames('col-sm-2'),\n    classNames('col-sm-7', 'co-break-all'),\n    classNames('col-sm-3', 'hidden-xs'),\n    classNames('hidden'),\n  ];\n};\n\nexport const WebhookTriggers: React.FC<WebhookTriggersProps> = (props) => {\n  const { resource } = props;\n  const { name, namespace } = resource.metadata;\n  const { triggers } = resource.spec;\n  const canGetSecret = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'get',\n    namespace,\n  });\n  const tableColumnClasses = getTableColumnClasses(canGetSecret);\n  const [webhookSecrets, setWebhookSecrets] = React.useState<K8sResourceKind[]>([]);\n  const [webhookTriggers, setWebhookTriggers] = React.useState<WebhookTrigger[]>([]);\n  const [secretNames, setSecretNames] = React.useState<string[]>([]);\n  const [secretErrors, setSecretErrors] = React.useState<string[]>([]);\n  const [isLoaded, setLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    setWebhookTriggers((previousTriggers) => {\n      const newTriggers = _.filter(triggers, ({ type }) => webhookTriggerTypes.has(type));\n      return _.isEqual(previousTriggers, newTriggers) ? previousTriggers : newTriggers;\n    });\n  }, [triggers]);\n\n  React.useEffect(() => {\n    const newSecretNames: string[] = _.uniq(\n      webhookTriggers.reduce((acc: string[], webhook: WebhookTrigger): string[] => {\n        const triggerProperty = getTriggerProperty(webhook);\n        const secretName = _.get(webhook, [triggerProperty, 'secretReference', 'name']);\n        return secretName ? [...acc, secretName] : acc;\n      }, []),\n    );\n    setSecretNames(newSecretNames);\n  }, [webhookTriggers]);\n\n  React.useEffect(() => {\n    if (!canGetSecret) {\n      return;\n    }\n    let errors: string[] = [];\n    Promise.all(\n      secretNames.map(\n        (webhookName: string): Promise<K8sResourceKind> => {\n          return k8sGet(SecretModel, webhookName, namespace).then(\n            (secret) => secret,\n            (error) => {\n              errors = [...errors, `Error: ${error.message}`];\n              return null;\n            },\n          );\n        },\n      ),\n    ).then((secrets) => {\n      setSecretErrors(errors);\n      setWebhookSecrets(_.compact(secrets));\n      setLoaded(true);\n    });\n  }, [secretNames, isLoaded, canGetSecret, namespace]);\n\n  if (_.isEmpty(webhookTriggers)) {\n    return null;\n  }\n\n  const getWebhookURL = (trigger: WebhookTrigger, secret?: string) => {\n    const triggerProperty = getTriggerProperty(trigger);\n    return `${kubeAPIServerURL}/apis/build.openshift.io/v1/namespaces/${namespace}/buildconfigs/${name}/webhooks/${\n      secret ? secret : '<secret>'\n    }/${triggerProperty}`;\n  };\n\n  const getSecretReference = (trigger: WebhookTrigger) => {\n    const triggerProperty = getTriggerProperty(trigger);\n    const secretName = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n    if (!secretName) {\n      return <span className=\"text-muted\">No secret</span>;\n    }\n    const webhookSecret: K8sResourceKind = webhookSecrets.find(\n      (secret: K8sResourceKind) => secret.metadata.name === secretName,\n    );\n    if (!webhookSecret) {\n      return secretName;\n    }\n    return (\n      <ResourceLink kind=\"Secret\" name={secretName} namespace={namespace} title={secretName} />\n    );\n  };\n\n  const copyWebhookToClipboard = (trigger: WebhookTrigger) => {\n    const triggerProperty = getTriggerProperty(trigger);\n\n    // In case of obsolete `secret` field on the trigger.\n    // https://github.com/openshift/api/blob/master/build/v1/types.go#L950\n    if (_.has(trigger, [triggerProperty, 'secret'])) {\n      const webhookSecret = _.get(trigger, [triggerProperty, 'secret']);\n      const url = getWebhookURL(trigger, webhookSecret);\n      navigator.clipboard.writeText(url);\n      return;\n    }\n\n    const secretName = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n    const webhookSecret: K8sResourceKind = webhookSecrets.find(\n      (secret: K8sResourceKind) => secret.metadata.name === secretName,\n    );\n    if (!_.has(webhookSecret, 'data.WebHookSecretKey')) {\n      errorModal({\n        error: `Secret referenced in the ${triggerProperty} webhook trigger does not contain 'WebHookSecretKey' key. Webhook trigger wonâ€™t work due to the invalid secret reference`,\n      });\n      return;\n    }\n    const webhookSecretValue = Base64.decode(webhookSecret.data.WebHookSecretKey);\n    const url = getWebhookURL(trigger, webhookSecretValue);\n    navigator.clipboard.writeText(url);\n  };\n\n  const getClipboardButton = (trigger: WebhookTrigger) => {\n    const triggerProperty = getTriggerProperty(trigger);\n    const plainSecret = _.get(trigger, [triggerProperty, 'secret']);\n    const secretReference = _.get(trigger, [triggerProperty, 'secretReference', 'name']);\n    const webhookSecret: K8sResourceKind = webhookSecrets.find(\n      (secret: K8sResourceKind) => secret.metadata.name === secretReference,\n    );\n    return webhookSecret || plainSecret ? (\n      <Button variant=\"link\" type=\"button\" onClick={() => copyWebhookToClipboard(trigger)}>\n        <PasteIcon />\n        &nbsp;Copy URL with Secret\n      </Button>\n    ) : null;\n  };\n\n  return (\n    <div className=\"co-m-pane__body\">\n      {!_.isEmpty(secretErrors) && (\n        <ExpandableAlert\n          variant={AlertVariant.warning}\n          alerts={_.map(secretErrors, (error, i) => (\n            <div className=\"co-pre-line\" key={i}>\n              {error}\n            </div>\n          ))}\n        />\n      )}\n      <SectionHeading text=\"Webhooks\" />\n      <div className=\"co-table-container\">\n        <table className=\"table table--layout-fixed\">\n          <colgroup>\n            <col className={tableColumnClasses[0]} />\n            <col className={tableColumnClasses[1]} />\n            <col className={tableColumnClasses[2]} />\n            <col className={tableColumnClasses[3]} />\n          </colgroup>\n          <thead>\n            <tr>\n              <th className={tableColumnClasses[0]}>Type</th>\n              <th className={tableColumnClasses[1]}>Webhook URL</th>\n              <th className={tableColumnClasses[2]}>Secret</th>\n              <th className={tableColumnClasses[3]} />\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(webhookTriggers, (trigger, i) => {\n              const webhookURL = getWebhookURL(trigger);\n              const secretReference = getSecretReference(trigger);\n              const clipboardButton = getClipboardButton(trigger);\n              return (\n                <tr key={i}>\n                  <td className={tableColumnClasses[0]}>{trigger.type}</td>\n                  <td className={tableColumnClasses[1]}>{webhookURL || '-'}</td>\n                  <td className={tableColumnClasses[2]}>{secretReference}</td>\n                  <td className={tableColumnClasses[3]}>{clipboardButton}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport type WebhookTriggersProps = {\n  resource: K8sResourceKind;\n};\n\nexport type WebhookTrigger = {\n  type: string;\n  [key: string]: any;\n};\n\nWebhookTriggers.displayName = 'WebhookTriggers';\n"]}]}