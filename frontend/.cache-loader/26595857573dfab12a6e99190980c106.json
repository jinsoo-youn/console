{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/api-explorer.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/api-explorer.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport * as fuzzy from 'fuzzysearch';\nimport { Tooltip } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { ALL_NAMESPACES_KEY, FLAGS } from '@console/shared';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { connectToModel } from '../kinds';\nimport { LocalResourceAccessReviewsModel, ResourceAccessReviewsModel } from '../models';\nimport { apiVersionForModel, k8sCreate, getResourceDescription, referenceForModel, } from '../module/k8s';\nimport { connectToFlags } from '../reducers/features';\nimport { CheckBox, CheckBoxControls } from './row-filter';\nimport { DefaultPage } from './default-resource';\nimport { Table, TextFilter } from './factory';\nimport { fuzzyCaseInsensitive } from './factory/table-filters';\nimport { resourceListPages } from './resource-pages';\nimport { ExploreType } from './sidebars/explore-type-sidebar';\nimport { AsyncComponent, BreadCrumbs, Dropdown, EmptyBox, HorizontalNav, LinkifyExternal, LoadError, LoadingBox, removeQueryArgument, ResourceIcon, ScrollToTopOnMount, setQueryArgument, } from './utils';\nconst mapStateToProps = (state) => {\n    return {\n        activeNamespace: state.UI.get('activeNamespace'),\n    };\n};\nconst getAPIResourceLink = (activeNamespace, model) => {\n    const ref = referenceForModel(model);\n    if (!model.namespaced) {\n        return `/api-resource/cluster/${ref}`;\n    }\n    if (activeNamespace === ALL_NAMESPACES_KEY) {\n        return `/api-resource/all-namespaces/${ref}`;\n    }\n    return `/api-resource/ns/${activeNamespace}/${ref}`;\n};\nconst APIResourceLink_ = ({ activeNamespace, model, }) => {\n    const to = getAPIResourceLink(activeNamespace, model);\n    return (React.createElement(\"span\", { className: \"co-resource-item\" },\n        React.createElement(\"span\", { className: \"co-resource-icon--fixed-width hidden-xs\" },\n            React.createElement(ResourceIcon, { kind: referenceForModel(model) })),\n        React.createElement(Link, { to: to, className: \"co-resource-item__resource-name\" }, model.kind)));\n};\nconst APIResourceLink = connect(mapStateToProps)(APIResourceLink_);\nconst EmptyAPIResourcesMsg = () => React.createElement(EmptyBox, { label: \"API Resources\" });\nconst Group = ({ value }) => {\n    if (!value) {\n        return React.createElement(React.Fragment, null, \"-\");\n    }\n    const [first, ...rest] = value.split('.');\n    return _.isEmpty(rest) ? (React.createElement(React.Fragment, null, value)) : (React.createElement(React.Fragment, null,\n        first,\n        React.createElement(\"span\", { className: \"text-muted\" },\n            \".\",\n            rest.join('.'))));\n};\nconst tableClasses = [\n    'col-lg-3 col-md-3 col-sm-5 col-xs-4',\n    'col-lg-2 col-md-2 col-sm-4 col-xs-4',\n    'col-lg-2 col-md-2 col-sm-3 col-xs-4',\n    'col-lg-2 hidden-md hidden-sm hidden-xs',\n    'col-lg-3 col-md-5 hidden-sm hidden-xs',\n];\nconst APIResourceHeader = () => [\n    {\n        title: 'Kind',\n        sortField: 'kind',\n        transforms: [sortable],\n        props: { className: tableClasses[0] },\n    },\n    {\n        title: 'Group',\n        sortField: 'apiGroup',\n        transforms: [sortable],\n        props: { className: tableClasses[1] },\n    },\n    {\n        title: 'Version',\n        sortField: 'apiVersion',\n        transforms: [sortable],\n        props: { className: tableClasses[2] },\n    },\n    {\n        title: 'Namespaced',\n        sortField: 'namespaced',\n        transforms: [sortable],\n        props: { className: tableClasses[3] },\n    },\n    {\n        title: 'Description',\n        props: { className: tableClasses[4] },\n    },\n];\nconst APIResourceRows = ({ componentProps: { data } }) => _.map(data, (model) => [\n    {\n        title: React.createElement(APIResourceLink, { model: model }),\n        props: { className: tableClasses[0] },\n    },\n    {\n        title: (React.createElement(\"span\", { className: \"co-select-to-copy\" },\n            React.createElement(Group, { value: model.apiGroup }))),\n        props: { className: tableClasses[1] },\n    },\n    {\n        title: model.apiVersion,\n        props: { className: tableClasses[2] },\n    },\n    {\n        title: model.namespaced ? 'true' : 'false',\n        props: { className: tableClasses[3] },\n    },\n    {\n        title: React.createElement(\"div\", { className: \"co-line-clamp\" }, getResourceDescription(model)),\n        props: { className: tableClasses[4] },\n    },\n]);\nconst stateToProps = ({ k8s }) => ({\n    models: k8s.getIn(['RESOURCES', 'models']),\n});\nconst APIResourcesList = compose(withRouter, connect(stateToProps))(({ models, location }) => {\n    const ALL = '#all#';\n    const GROUP_PARAM = 'g';\n    const VERSION_PARAM = 'v';\n    const TEXT_FILTER_PARAM = 'q';\n    const SCOPE_PARAM = 's';\n    const search = new URLSearchParams(location.search);\n    // Differentiate between an empty group and an unspecified param.\n    const groupFilter = search.has(GROUP_PARAM) ? search.get(GROUP_PARAM) : ALL;\n    const versionFilter = search.get(VERSION_PARAM) || ALL;\n    const textFilter = search.get(TEXT_FILTER_PARAM) || '';\n    const scopeFilter = search.get(SCOPE_PARAM) || ALL;\n    // group options\n    const groups = models.reduce((result, { apiGroup }) => {\n        return apiGroup ? result.add(apiGroup) : result;\n    }, new Set());\n    const sortedGroups = [...groups].sort();\n    const groupOptions = sortedGroups.reduce((result, group) => {\n        result[group] = React.createElement(Group, { value: group });\n        return result;\n    }, { [ALL]: 'All Groups', '': 'No Group' });\n    const groupSpacer = new Set();\n    if (sortedGroups.length) {\n        groupSpacer.add(sortedGroups[0]);\n    }\n    const autocompleteGroups = (text, item, key) => {\n        return key !== ALL && fuzzy(text, key);\n    };\n    // version options\n    const versions = models.reduce((result, { apiVersion }) => {\n        return result.add(apiVersion);\n    }, new Set());\n    const sortedVersions = [...versions].sort();\n    const versionOptions = sortedVersions.reduce((result, version) => {\n        result[version] = version;\n        return result;\n    }, { [ALL]: 'All Versions' });\n    const versionSpacer = new Set();\n    if (sortedVersions.length) {\n        versionSpacer.add(sortedVersions[0]);\n    }\n    const scopeOptions = {\n        [ALL]: 'All Scopes',\n        cluster: 'Cluster',\n        namespace: 'Namespace',\n    };\n    const scopeSpacer = new Set(['cluster']);\n    // filter by group, version, or text\n    const filteredResources = models.filter(({ kind, apiGroup, apiVersion, namespaced }) => {\n        if (groupFilter !== ALL && (apiGroup || '') !== groupFilter) {\n            return false;\n        }\n        if (versionFilter !== ALL && apiVersion !== versionFilter) {\n            return false;\n        }\n        if (scopeFilter === 'cluster' && namespaced) {\n            return false;\n        }\n        if (scopeFilter === 'namespace' && !namespaced) {\n            return false;\n        }\n        if (textFilter) {\n            return fuzzyCaseInsensitive(textFilter, kind);\n        }\n        return true;\n    });\n    // Put models with no API group (core k8s resources) at the top.\n    const sortedResources = _.sortBy(filteredResources.toArray(), [\n        ({ apiGroup }) => apiGroup || '1',\n        'apiVersion',\n        'kind',\n    ]);\n    const updateURL = (k, v) => {\n        if (v === ALL) {\n            removeQueryArgument(k);\n        }\n        else {\n            setQueryArgument(k, v);\n        }\n    };\n    const onGroupSelected = (group) => updateURL(GROUP_PARAM, group);\n    const onVersionSelected = (version) => updateURL(VERSION_PARAM, version);\n    const onScopeSelected = (scope) => updateURL(SCOPE_PARAM, scope);\n    const setTextFilter = (text) => {\n        if (!text) {\n            removeQueryArgument(TEXT_FILTER_PARAM);\n        }\n        else {\n            setQueryArgument(TEXT_FILTER_PARAM, text);\n        }\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__filter-bar\" },\n            React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group\" },\n                React.createElement(Dropdown, { autocompleteFilter: autocompleteGroups, items: groupOptions, onChange: onGroupSelected, selectedKey: groupFilter, spacerBefore: groupSpacer, title: groupOptions[groupFilter], className: \"btn-group\" }),\n                React.createElement(Dropdown, { items: versionOptions, onChange: onVersionSelected, selectedKey: versionFilter, spacerBefore: versionSpacer, title: versionOptions[versionFilter], className: \"btn-group\" }),\n                React.createElement(Dropdown, { items: scopeOptions, onChange: onScopeSelected, selectedKey: scopeFilter, spacerBefore: scopeSpacer, title: scopeOptions[scopeFilter], className: \"btn-group\" })),\n            React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\" },\n                React.createElement(TextFilter, { value: textFilter, label: \"by kind\", onChange: setTextFilter }))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Table, { EmptyMsg: EmptyAPIResourcesMsg, Header: APIResourceHeader, Rows: APIResourceRows, \"aria-label\": \"API Resources\", data: sortedResources, loaded: !!models.size, virtualize: false }))));\n});\nAPIResourcesList.displayName = 'APIResourcesList';\nexport const APIExplorerPage = () => (React.createElement(React.Fragment, null,\n    React.createElement(Helmet, null,\n        React.createElement(\"title\", null, \"Explore API Resources\")),\n    React.createElement(\"div\", { className: \"co-m-nav-title\" },\n        React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, \"Explore API Resources\")),\n    React.createElement(APIResourcesList, null)));\nAPIExplorerPage.displayName = 'APIExplorerPage';\nconst APIResourceDetails = ({ customData: { kindObj } }) => {\n    const { kind, apiGroup, apiVersion, namespaced, verbs, shortNames } = kindObj;\n    const description = getResourceDescription(kindObj);\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n            React.createElement(\"dt\", null, \"Kind\"),\n            React.createElement(\"dd\", null, kind),\n            React.createElement(\"dt\", null, \"API Group\"),\n            React.createElement(\"dd\", { className: \"co-select-to-copy\" }, apiGroup || '-'),\n            React.createElement(\"dt\", null, \"API Version\"),\n            React.createElement(\"dd\", null, apiVersion),\n            React.createElement(\"dt\", null, \"Namespaced\"),\n            React.createElement(\"dd\", null, namespaced ? 'true' : 'false'),\n            React.createElement(\"dt\", null, \"Verbs\"),\n            React.createElement(\"dd\", null, verbs.join(', ')),\n            shortNames && (React.createElement(React.Fragment, null,\n                React.createElement(\"dt\", null,\n                    React.createElement(Tooltip, { content: \"Short names can be used to match this resource on the CLI.\" },\n                        React.createElement(\"span\", null, \"Short Names\"))),\n                React.createElement(\"dd\", null, shortNames.join(', ')))),\n            description && (React.createElement(React.Fragment, null,\n                React.createElement(\"dt\", null, \"Description\"),\n                React.createElement(\"dd\", { className: \"co-break-word co-pre-wrap\" },\n                    React.createElement(LinkifyExternal, null, description)))))));\n};\nconst scrollTop = () => (document.getElementById('content-scrollable').scrollTop = 0);\nconst APIResourceSchema = ({ customData: { kindObj } }) => {\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(ExploreType, { kindObj: kindObj, scrollTop: scrollTop })));\n};\nconst APIResourceInstances = ({ customData: { kindObj, namespace }, }) => {\n    const componentLoader = resourceListPages.get(referenceForModel(kindObj), () => Promise.resolve(DefaultPage));\n    const ns = kindObj.namespaced ? namespace : undefined;\n    return (React.createElement(AsyncComponent, { loader: componentLoader, namespace: ns, kind: kindObj.crd ? referenceForModel(kindObj) : kindObj.kind, showTitle: false, autoFocus: false }));\n};\nconst Subject = ({ value }) => {\n    const [first, ...rest] = value.split(':');\n    return first === 'system' && !_.isEmpty(rest) ? (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", { className: \"text-muted\" },\n            first,\n            \":\"),\n        rest.join(':'))) : (React.createElement(React.Fragment, null, value));\n};\nconst AccessTableHeader = () => [\n    {\n        title: 'Subject',\n        sortField: 'name',\n        transforms: [sortable],\n    },\n    {\n        title: 'Type',\n        sortField: 'type',\n        transforms: [sortable],\n    },\n];\nconst AccessTableRows = ({ componentProps: { data } }) => _.map(data, (subject) => [\n    {\n        title: (React.createElement(\"span\", { className: \"co-break-word co-select-to-copy\" },\n            React.createElement(Subject, { value: subject.name }))),\n    },\n    {\n        title: subject.type,\n    },\n]);\nconst EmptyAccessReviewMsg = () => React.createElement(EmptyBox, { label: \"Subjects\" });\nconst APIResourceAccessReview = ({ customData: { kindObj, namespace }, }) => {\n    const { apiGroup, apiVersion, namespaced, plural, verbs } = kindObj;\n    // state\n    const [verb, setVerb] = React.useState(_.first(verbs));\n    const [filter, setFilter] = React.useState('');\n    const [showUsers, setShowUsers] = React.useState(true);\n    const [showGroups, setShowGroups] = React.useState(true);\n    const [showServiceAccounts, setShowServiceAccounts] = React.useState(false);\n    const [accessResponse, setAccessResponse] = React.useState();\n    const [error, setError] = React.useState();\n    // perform the access review\n    React.useEffect(() => {\n        setError(null);\n        const accessReviewModel = namespace\n            ? LocalResourceAccessReviewsModel\n            : ResourceAccessReviewsModel;\n        const req = {\n            apiVersion: apiVersionForModel(accessReviewModel),\n            kind: accessReviewModel.kind,\n            namespace,\n            resourceAPIVersion: apiVersion,\n            resourceAPIGroup: apiGroup,\n            resource: plural,\n            verb,\n        };\n        k8sCreate(accessReviewModel, req, { ns: namespace })\n            .then(setAccessResponse)\n            .catch(setError);\n    }, [apiGroup, apiVersion, plural, namespace, verb]);\n    if (error) {\n        return (React.createElement(LoadError, { message: error.message, label: \"Access Review\", className: \"loading-box loading-box__errored\" }));\n    }\n    if (!accessResponse) {\n        return React.createElement(LoadingBox, null);\n    }\n    // break into users, groups, and service accounts\n    const users = [];\n    const serviceAccounts = [];\n    _.each(accessResponse.users, (name) => {\n        if (name.startsWith('system:serviceaccount:')) {\n            serviceAccounts.push({ name, type: 'ServiceAccount' });\n        }\n        else {\n            users.push({ name, type: 'User' });\n        }\n    });\n    const groups = _.map(accessResponse.groups, (name) => ({ name, type: 'Group' }));\n    // filter and sort\n    const verbOptions = _.zipObject(verbs, verbs);\n    const data = [\n        ...(showUsers ? users : []),\n        ...(showGroups ? groups : []),\n        ...(showServiceAccounts ? serviceAccounts : []),\n    ];\n    const allSelected = showUsers && showGroups && showServiceAccounts;\n    const itemCount = accessResponse.users.length + accessResponse.groups.length;\n    const selectedCount = data.length;\n    const filteredData = data.filter(({ name }) => fuzzy(filter, name));\n    const sortedData = _.orderBy(filteredData, ['type', 'name'], ['asc', 'asc']);\n    // event handlers\n    const toggleShowUsers = (e) => {\n        e.preventDefault();\n        setShowUsers(!showUsers);\n    };\n    const toggleShowGroups = (e) => {\n        e.preventDefault();\n        setShowGroups(!showGroups);\n    };\n    const toggleShowServiceAccounts = (e) => {\n        e.preventDefault();\n        setShowServiceAccounts(!showServiceAccounts);\n    };\n    const onSelectAll = (e) => {\n        e.preventDefault();\n        setShowUsers(true);\n        setShowGroups(true);\n        setShowServiceAccounts(true);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__filter-bar\" },\n            React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group\" },\n                React.createElement(Dropdown, { items: verbOptions, onChange: (v) => setVerb(v), selectedKey: verb, titlePrefix: \"Verb\" })),\n            React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\" },\n                React.createElement(TextFilter, { defaultValue: filter, label: \"by subject\", onChange: (val) => setFilter(val) }))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(CheckBoxControls, { allSelected: allSelected, itemCount: itemCount, selectedCount: selectedCount, onSelectAll: onSelectAll },\n                React.createElement(CheckBox, { title: \"User\", active: showUsers, number: users.length, toggle: toggleShowUsers }),\n                React.createElement(CheckBox, { title: \"Group\", active: showGroups, number: groups.length, toggle: toggleShowGroups }),\n                React.createElement(CheckBox, { title: \"ServiceAccount\", active: showServiceAccounts, number: serviceAccounts.length, toggle: toggleShowServiceAccounts })),\n            React.createElement(\"p\", { className: \"co-m-pane__explanation\" },\n                \"The following subjects can \",\n                verb,\n                \" \",\n                plural,\n                namespaced && namespace && React.createElement(React.Fragment, null,\n                    \" in namespace \",\n                    namespace),\n                namespaced && !namespace && React.createElement(React.Fragment, null, \" in all namespaces\"),\n                !namespaced && React.createElement(React.Fragment, null, \" at the cluster scope\"),\n                \".\"),\n            React.createElement(Table, { EmptyMsg: EmptyAccessReviewMsg, Header: AccessTableHeader, Rows: AccessTableRows, \"aria-label\": \"API Resources\", data: sortedData, loaded: true, virtualize: false }))));\n};\nconst APIResourcePage_ = ({ match, kindObj, kindsInFlight, flags, }) => {\n    const namespace = (kindObj === null || kindObj === void 0 ? void 0 : kindObj.namespaced) ? match.params.ns : undefined;\n    const canCreateResourceAccessReview = useAccessReview({\n        group: namespace\n            ? LocalResourceAccessReviewsModel.apiGroup\n            : ResourceAccessReviewsModel.apiGroup,\n        resource: namespace\n            ? LocalResourceAccessReviewsModel.plural\n            : ResourceAccessReviewsModel.plural,\n        namespace,\n        verb: 'create',\n    });\n    if (!kindObj) {\n        return kindsInFlight ? (React.createElement(LoadingBox, null)) : (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading co-m-pane__heading--center\" }, \"404: Not Found\")));\n    }\n    const breadcrumbs = [\n        {\n            name: 'Explore',\n            path: '/api-explorer',\n        },\n        {\n            name: 'Resource Details',\n            path: match.url,\n        },\n    ];\n    const pages = [\n        {\n            href: '',\n            name: 'Details',\n            component: APIResourceDetails,\n        },\n        {\n            href: 'schema',\n            name: 'Schema',\n            component: APIResourceSchema,\n        },\n    ];\n    if (_.isEmpty(kindObj.verbs) || kindObj.verbs.includes('list')) {\n        pages.push({\n            href: 'instances',\n            name: 'Instances',\n            component: APIResourceInstances,\n        });\n    }\n    if (flags[FLAGS.OPENSHIFT] && canCreateResourceAccessReview) {\n        pages.push({\n            href: 'access',\n            name: 'Access Review',\n            component: APIResourceAccessReview,\n        });\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ScrollToTopOnMount, null),\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, kindObj.label)),\n        React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail co-m-nav-title--breadcrumbs\" },\n            React.createElement(BreadCrumbs, { breadcrumbs: breadcrumbs }),\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\", \"data-test-id\": \"api-explorer-resource-title\" }, kindObj.label)),\n        React.createElement(HorizontalNav, { pages: pages, match: match, customData: { kindObj, namespace }, noStatusBox: true })));\n};\nexport const APIResourcePage = connectToModel(connectToFlags(FLAGS.OPENSHIFT)(APIResourcePage_));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/api-explorer.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/api-explorer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport { Map as ImmutableMap } from 'immutable';\nimport * as fuzzy from 'fuzzysearch';\nimport { Tooltip } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\n\nimport { ALL_NAMESPACES_KEY, FLAGS, APIError } from '@console/shared';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { connectToModel } from '../kinds';\nimport { LocalResourceAccessReviewsModel, ResourceAccessReviewsModel } from '../models';\nimport {\n  apiVersionForModel,\n  k8sCreate,\n  K8sKind,\n  K8sResourceKindReference,\n  K8sVerb,\n  getResourceDescription,\n  referenceForModel,\n  ResourceAccessReviewRequest,\n  ResourceAccessReviewResponse,\n} from '../module/k8s';\nimport { connectToFlags, FlagsObject } from '../reducers/features';\nimport { RootState } from '../redux';\nimport { CheckBox, CheckBoxControls } from './row-filter';\nimport { DefaultPage } from './default-resource';\nimport { Table, TextFilter } from './factory';\nimport { fuzzyCaseInsensitive } from './factory/table-filters';\nimport { resourceListPages } from './resource-pages';\nimport { ExploreType } from './sidebars/explore-type-sidebar';\nimport {\n  AsyncComponent,\n  BreadCrumbs,\n  Dropdown,\n  EmptyBox,\n  HorizontalNav,\n  LinkifyExternal,\n  LoadError,\n  LoadingBox,\n  removeQueryArgument,\n  ResourceIcon,\n  ScrollToTopOnMount,\n  setQueryArgument,\n} from './utils';\n\nconst mapStateToProps = (state: RootState): APIResourceLinkStateProps => {\n  return {\n    activeNamespace: state.UI.get('activeNamespace'),\n  };\n};\n\nconst getAPIResourceLink = (activeNamespace: string, model: K8sKind) => {\n  const ref = referenceForModel(model);\n  if (!model.namespaced) {\n    return `/api-resource/cluster/${ref}`;\n  }\n\n  if (activeNamespace === ALL_NAMESPACES_KEY) {\n    return `/api-resource/all-namespaces/${ref}`;\n  }\n\n  return `/api-resource/ns/${activeNamespace}/${ref}`;\n};\n\nconst APIResourceLink_: React.FC<APIResourceLinkStateProps & APIResourceLinkOwnProps> = ({\n  activeNamespace,\n  model,\n}) => {\n  const to = getAPIResourceLink(activeNamespace, model);\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-icon--fixed-width hidden-xs\">\n        <ResourceIcon kind={referenceForModel(model)} />\n      </span>\n      <Link to={to} className=\"co-resource-item__resource-name\">\n        {model.kind}\n      </Link>\n    </span>\n  );\n};\nconst APIResourceLink = connect<APIResourceLinkStateProps, {}, APIResourceLinkOwnProps>(\n  mapStateToProps,\n)(APIResourceLink_);\n\nconst EmptyAPIResourcesMsg: React.FC<{}> = () => <EmptyBox label=\"API Resources\" />;\n\nconst Group: React.FC<{ value: string }> = ({ value }) => {\n  if (!value) {\n    return <>-</>;\n  }\n\n  const [first, ...rest] = value.split('.');\n  return _.isEmpty(rest) ? (\n    <>{value}</>\n  ) : (\n    <>\n      {first}\n      <span className=\"text-muted\">.{rest.join('.')}</span>\n    </>\n  );\n};\n\nconst tableClasses = [\n  'col-lg-3 col-md-3 col-sm-5 col-xs-4',\n  'col-lg-2 col-md-2 col-sm-4 col-xs-4',\n  'col-lg-2 col-md-2 col-sm-3 col-xs-4',\n  'col-lg-2 hidden-md hidden-sm hidden-xs',\n  'col-lg-3 col-md-5 hidden-sm hidden-xs',\n];\n\nconst APIResourceHeader = () => [\n  {\n    title: 'Kind',\n    sortField: 'kind',\n    transforms: [sortable],\n    props: { className: tableClasses[0] },\n  },\n  {\n    title: 'Group',\n    sortField: 'apiGroup',\n    transforms: [sortable],\n    props: { className: tableClasses[1] },\n  },\n  {\n    title: 'Version',\n    sortField: 'apiVersion',\n    transforms: [sortable],\n    props: { className: tableClasses[2] },\n  },\n  {\n    title: 'Namespaced',\n    sortField: 'namespaced',\n    transforms: [sortable],\n    props: { className: tableClasses[3] },\n  },\n  {\n    title: 'Description',\n    props: { className: tableClasses[4] },\n  },\n];\n\nconst APIResourceRows = ({ componentProps: { data } }) =>\n  _.map(data, (model: K8sKind) => [\n    {\n      title: <APIResourceLink model={model} />,\n      props: { className: tableClasses[0] },\n    },\n    {\n      title: (\n        <span className=\"co-select-to-copy\">\n          <Group value={model.apiGroup} />\n        </span>\n      ),\n      props: { className: tableClasses[1] },\n    },\n    {\n      title: model.apiVersion,\n      props: { className: tableClasses[2] },\n    },\n    {\n      title: model.namespaced ? 'true' : 'false',\n      props: { className: tableClasses[3] },\n    },\n    {\n      title: <div className=\"co-line-clamp\">{getResourceDescription(model)}</div>,\n      props: { className: tableClasses[4] },\n    },\n  ]);\n\nconst stateToProps = ({ k8s }) => ({\n  models: k8s.getIn(['RESOURCES', 'models']),\n});\n\nconst APIResourcesList = compose(\n  withRouter,\n  connect<APIResourcesListPropsFromState>(stateToProps),\n)(({ models, location }) => {\n  const ALL = '#all#';\n  const GROUP_PARAM = 'g';\n  const VERSION_PARAM = 'v';\n  const TEXT_FILTER_PARAM = 'q';\n  const SCOPE_PARAM = 's';\n  const search = new URLSearchParams(location.search);\n  // Differentiate between an empty group and an unspecified param.\n  const groupFilter = search.has(GROUP_PARAM) ? search.get(GROUP_PARAM) : ALL;\n  const versionFilter = search.get(VERSION_PARAM) || ALL;\n  const textFilter = search.get(TEXT_FILTER_PARAM) || '';\n  const scopeFilter = search.get(SCOPE_PARAM) || ALL;\n\n  // group options\n  const groups: Set<string> = models.reduce((result: Set<string>, { apiGroup }) => {\n    return apiGroup ? result.add(apiGroup) : result;\n  }, new Set<string>());\n  const sortedGroups: string[] = [...groups].sort();\n  const groupOptions = sortedGroups.reduce(\n    (result, group: string) => {\n      result[group] = <Group value={group} />;\n      return result;\n    },\n    { [ALL]: 'All Groups', '': 'No Group' },\n  );\n\n  const groupSpacer = new Set<string>();\n  if (sortedGroups.length) {\n    groupSpacer.add(sortedGroups[0]);\n  }\n\n  const autocompleteGroups = (text: string, item: string, key: string): boolean => {\n    return key !== ALL && fuzzy(text, key);\n  };\n\n  // version options\n  const versions: Set<string> = models.reduce((result: Set<string>, { apiVersion }) => {\n    return result.add(apiVersion);\n  }, new Set<string>());\n  const sortedVersions: string[] = [...versions].sort();\n  const versionOptions = sortedVersions.reduce(\n    (result, version: string) => {\n      result[version] = version;\n      return result;\n    },\n    { [ALL]: 'All Versions' },\n  );\n\n  const versionSpacer = new Set<string>();\n  if (sortedVersions.length) {\n    versionSpacer.add(sortedVersions[0]);\n  }\n\n  const scopeOptions = {\n    [ALL]: 'All Scopes',\n    cluster: 'Cluster',\n    namespace: 'Namespace',\n  };\n  const scopeSpacer = new Set<string>(['cluster']);\n\n  // filter by group, version, or text\n  const filteredResources = models.filter(({ kind, apiGroup, apiVersion, namespaced }) => {\n    if (groupFilter !== ALL && (apiGroup || '') !== groupFilter) {\n      return false;\n    }\n\n    if (versionFilter !== ALL && apiVersion !== versionFilter) {\n      return false;\n    }\n\n    if (scopeFilter === 'cluster' && namespaced) {\n      return false;\n    }\n\n    if (scopeFilter === 'namespace' && !namespaced) {\n      return false;\n    }\n\n    if (textFilter) {\n      return fuzzyCaseInsensitive(textFilter, kind);\n    }\n\n    return true;\n  });\n\n  // Put models with no API group (core k8s resources) at the top.\n  const sortedResources = _.sortBy(filteredResources.toArray(), [\n    ({ apiGroup }) => apiGroup || '1',\n    'apiVersion',\n    'kind',\n  ]);\n\n  const updateURL = (k: string, v: string) => {\n    if (v === ALL) {\n      removeQueryArgument(k);\n    } else {\n      setQueryArgument(k, v);\n    }\n  };\n  const onGroupSelected = (group: string) => updateURL(GROUP_PARAM, group);\n  const onVersionSelected = (version: string) => updateURL(VERSION_PARAM, version);\n  const onScopeSelected = (scope: string) => updateURL(SCOPE_PARAM, scope);\n  const setTextFilter = (text: string) => {\n    if (!text) {\n      removeQueryArgument(TEXT_FILTER_PARAM);\n    } else {\n      setQueryArgument(TEXT_FILTER_PARAM, text);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"co-m-pane__filter-bar\">\n        <div className=\"co-m-pane__filter-bar-group\">\n          <Dropdown\n            autocompleteFilter={autocompleteGroups}\n            items={groupOptions}\n            onChange={onGroupSelected}\n            selectedKey={groupFilter}\n            spacerBefore={groupSpacer}\n            title={groupOptions[groupFilter]}\n            className=\"btn-group\"\n          />\n          <Dropdown\n            items={versionOptions}\n            onChange={onVersionSelected}\n            selectedKey={versionFilter}\n            spacerBefore={versionSpacer}\n            title={versionOptions[versionFilter]}\n            className=\"btn-group\"\n          />\n          <Dropdown\n            items={scopeOptions}\n            onChange={onScopeSelected}\n            selectedKey={scopeFilter}\n            spacerBefore={scopeSpacer}\n            title={scopeOptions[scopeFilter]}\n            className=\"btn-group\"\n          />\n        </div>\n        <div className=\"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\">\n          <TextFilter value={textFilter} label=\"by kind\" onChange={setTextFilter} />\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <Table\n          EmptyMsg={EmptyAPIResourcesMsg}\n          Header={APIResourceHeader}\n          Rows={APIResourceRows}\n          aria-label=\"API Resources\"\n          data={sortedResources}\n          loaded={!!models.size}\n          virtualize={false}\n        />\n      </div>\n    </>\n  );\n});\nAPIResourcesList.displayName = 'APIResourcesList';\n\nexport const APIExplorerPage: React.FC<{}> = () => (\n  <>\n    <Helmet>\n      <title>Explore API Resources</title>\n    </Helmet>\n    <div className=\"co-m-nav-title\">\n      <h1 className=\"co-m-pane__heading\">Explore API Resources</h1>\n    </div>\n    <APIResourcesList />\n  </>\n);\nAPIExplorerPage.displayName = 'APIExplorerPage';\n\nconst APIResourceDetails: React.FC<APIResourceTabProps> = ({ customData: { kindObj } }) => {\n  const { kind, apiGroup, apiVersion, namespaced, verbs, shortNames } = kindObj;\n  const description = getResourceDescription(kindObj);\n  return (\n    <div className=\"co-m-pane__body\">\n      <dl className=\"co-m-pane__details\">\n        <dt>Kind</dt>\n        <dd>{kind}</dd>\n        <dt>API Group</dt>\n        <dd className=\"co-select-to-copy\">{apiGroup || '-'}</dd>\n        <dt>API Version</dt>\n        <dd>{apiVersion}</dd>\n        <dt>Namespaced</dt>\n        <dd>{namespaced ? 'true' : 'false'}</dd>\n        <dt>Verbs</dt>\n        <dd>{verbs.join(', ')}</dd>\n        {shortNames && (\n          <>\n            <dt>\n              <Tooltip content=\"Short names can be used to match this resource on the CLI.\">\n                <span>Short Names</span>\n              </Tooltip>\n            </dt>\n            <dd>{shortNames.join(', ')}</dd>\n          </>\n        )}\n        {description && (\n          <>\n            <dt>Description</dt>\n            <dd className=\"co-break-word co-pre-wrap\">\n              <LinkifyExternal>{description}</LinkifyExternal>\n            </dd>\n          </>\n        )}\n      </dl>\n    </div>\n  );\n};\n\nconst scrollTop = () => (document.getElementById('content-scrollable').scrollTop = 0);\nconst APIResourceSchema: React.FC<APIResourceTabProps> = ({ customData: { kindObj } }) => {\n  return (\n    <div className=\"co-m-pane__body\">\n      <ExploreType kindObj={kindObj} scrollTop={scrollTop} />\n    </div>\n  );\n};\n\nconst APIResourceInstances: React.FC<APIResourceTabProps> = ({\n  customData: { kindObj, namespace },\n}) => {\n  const componentLoader = resourceListPages.get(referenceForModel(kindObj), () =>\n    Promise.resolve(DefaultPage),\n  );\n  const ns = kindObj.namespaced ? namespace : undefined;\n\n  return (\n    <AsyncComponent\n      loader={componentLoader}\n      namespace={ns}\n      kind={kindObj.crd ? referenceForModel(kindObj) : kindObj.kind}\n      showTitle={false}\n      autoFocus={false}\n    />\n  );\n};\n\nconst Subject: React.FC<{ value: string }> = ({ value }) => {\n  const [first, ...rest] = value.split(':');\n  return first === 'system' && !_.isEmpty(rest) ? (\n    <>\n      <span className=\"text-muted\">{first}:</span>\n      {rest.join(':')}\n    </>\n  ) : (\n    <>{value}</>\n  );\n};\n\nconst AccessTableHeader = () => [\n  {\n    title: 'Subject',\n    sortField: 'name',\n    transforms: [sortable],\n  },\n  {\n    title: 'Type',\n    sortField: 'type',\n    transforms: [sortable],\n  },\n];\n\nconst AccessTableRows = ({ componentProps: { data } }) =>\n  _.map(data, (subject) => [\n    {\n      title: (\n        <span className=\"co-break-word co-select-to-copy\">\n          <Subject value={subject.name} />\n        </span>\n      ),\n    },\n    {\n      title: subject.type,\n    },\n  ]);\n\nconst EmptyAccessReviewMsg: React.FC<{}> = () => <EmptyBox label=\"Subjects\" />;\n\nconst APIResourceAccessReview: React.FC<APIResourceTabProps> = ({\n  customData: { kindObj, namespace },\n}) => {\n  const { apiGroup, apiVersion, namespaced, plural, verbs } = kindObj;\n\n  // state\n  const [verb, setVerb] = React.useState(_.first(verbs));\n  const [filter, setFilter] = React.useState('');\n  const [showUsers, setShowUsers] = React.useState(true);\n  const [showGroups, setShowGroups] = React.useState(true);\n  const [showServiceAccounts, setShowServiceAccounts] = React.useState(false);\n  const [accessResponse, setAccessResponse] = React.useState<ResourceAccessReviewResponse>();\n  const [error, setError] = React.useState<APIError>();\n\n  // perform the access review\n  React.useEffect(() => {\n    setError(null);\n    const accessReviewModel = namespace\n      ? LocalResourceAccessReviewsModel\n      : ResourceAccessReviewsModel;\n    const req: ResourceAccessReviewRequest = {\n      apiVersion: apiVersionForModel(accessReviewModel),\n      kind: accessReviewModel.kind,\n      namespace,\n      resourceAPIVersion: apiVersion,\n      resourceAPIGroup: apiGroup,\n      resource: plural,\n      verb,\n    };\n    k8sCreate(accessReviewModel, req, { ns: namespace })\n      .then(setAccessResponse)\n      .catch(setError);\n  }, [apiGroup, apiVersion, plural, namespace, verb]);\n\n  if (error) {\n    return (\n      <LoadError\n        message={error.message}\n        label=\"Access Review\"\n        className=\"loading-box loading-box__errored\"\n      />\n    );\n  }\n\n  if (!accessResponse) {\n    return <LoadingBox />;\n  }\n\n  // break into users, groups, and service accounts\n  const users = [];\n  const serviceAccounts = [];\n  _.each(accessResponse.users, (name: string) => {\n    if (name.startsWith('system:serviceaccount:')) {\n      serviceAccounts.push({ name, type: 'ServiceAccount' });\n    } else {\n      users.push({ name, type: 'User' });\n    }\n  });\n  const groups = _.map(accessResponse.groups, (name: string) => ({ name, type: 'Group' }));\n\n  // filter and sort\n  const verbOptions = _.zipObject(verbs, verbs);\n  const data = [\n    ...(showUsers ? users : []),\n    ...(showGroups ? groups : []),\n    ...(showServiceAccounts ? serviceAccounts : []),\n  ];\n  const allSelected = showUsers && showGroups && showServiceAccounts;\n  const itemCount = accessResponse.users.length + accessResponse.groups.length;\n  const selectedCount = data.length;\n  const filteredData = data.filter(({ name }: { name: string }) => fuzzy(filter, name));\n  const sortedData = _.orderBy(filteredData, ['type', 'name'], ['asc', 'asc']);\n\n  // event handlers\n  const toggleShowUsers = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    setShowUsers(!showUsers);\n  };\n  const toggleShowGroups = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    setShowGroups(!showGroups);\n  };\n  const toggleShowServiceAccounts = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    setShowServiceAccounts(!showServiceAccounts);\n  };\n  const onSelectAll = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    setShowUsers(true);\n    setShowGroups(true);\n    setShowServiceAccounts(true);\n  };\n\n  return (\n    <>\n      <div className=\"co-m-pane__filter-bar\">\n        <div className=\"co-m-pane__filter-bar-group\">\n          <Dropdown\n            items={verbOptions}\n            onChange={(v: K8sVerb) => setVerb(v)}\n            selectedKey={verb}\n            titlePrefix=\"Verb\"\n          />\n        </div>\n        <div className=\"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\">\n          <TextFilter defaultValue={filter} label=\"by subject\" onChange={(val) => setFilter(val)} />\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <CheckBoxControls\n          allSelected={allSelected}\n          itemCount={itemCount}\n          selectedCount={selectedCount}\n          onSelectAll={onSelectAll}\n        >\n          <CheckBox\n            title=\"User\"\n            active={showUsers}\n            number={users.length}\n            toggle={toggleShowUsers}\n          />\n          <CheckBox\n            title=\"Group\"\n            active={showGroups}\n            number={groups.length}\n            toggle={toggleShowGroups}\n          />\n          <CheckBox\n            title=\"ServiceAccount\"\n            active={showServiceAccounts}\n            number={serviceAccounts.length}\n            toggle={toggleShowServiceAccounts}\n          />\n        </CheckBoxControls>\n        <p className=\"co-m-pane__explanation\">\n          The following subjects can {verb} {plural}\n          {namespaced && namespace && <> in namespace {namespace}</>}\n          {namespaced && !namespace && <> in all namespaces</>}\n          {!namespaced && <> at the cluster scope</>}.\n        </p>\n        <Table\n          EmptyMsg={EmptyAccessReviewMsg}\n          Header={AccessTableHeader}\n          Rows={AccessTableRows}\n          aria-label=\"API Resources\"\n          data={sortedData}\n          loaded\n          virtualize={false}\n        />\n      </div>\n    </>\n  );\n};\n\nconst APIResourcePage_ = ({\n  match,\n  kindObj,\n  kindsInFlight,\n  flags,\n}: {\n  match: any;\n  kindObj: K8sKind;\n  kindsInFlight: boolean;\n  flags: FlagsObject;\n}) => {\n  const namespace = kindObj?.namespaced ? match.params.ns : undefined;\n\n  const canCreateResourceAccessReview = useAccessReview({\n    group: namespace\n      ? LocalResourceAccessReviewsModel.apiGroup\n      : ResourceAccessReviewsModel.apiGroup,\n    resource: namespace\n      ? LocalResourceAccessReviewsModel.plural\n      : ResourceAccessReviewsModel.plural,\n    namespace,\n    verb: 'create',\n  });\n\n  if (!kindObj) {\n    return kindsInFlight ? (\n      <LoadingBox />\n    ) : (\n      <div className=\"co-m-pane__body\">\n        <h1 className=\"co-m-pane__heading co-m-pane__heading--center\">404: Not Found</h1>\n      </div>\n    );\n  }\n\n  const breadcrumbs = [\n    {\n      name: 'Explore',\n      path: '/api-explorer',\n    },\n    {\n      name: 'Resource Details',\n      path: match.url,\n    },\n  ];\n\n  const pages = [\n    {\n      href: '',\n      name: 'Details',\n      component: APIResourceDetails,\n    },\n    {\n      href: 'schema',\n      name: 'Schema',\n      component: APIResourceSchema,\n    },\n  ];\n\n  if (_.isEmpty(kindObj.verbs) || kindObj.verbs.includes('list')) {\n    pages.push({\n      href: 'instances',\n      name: 'Instances',\n      component: APIResourceInstances,\n    });\n  }\n\n  if (flags[FLAGS.OPENSHIFT] && canCreateResourceAccessReview) {\n    pages.push({\n      href: 'access',\n      name: 'Access Review',\n      component: APIResourceAccessReview,\n    });\n  }\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <Helmet>\n        <title>{kindObj.label}</title>\n      </Helmet>\n      <div className=\"co-m-nav-title co-m-nav-title--detail co-m-nav-title--breadcrumbs\">\n        <BreadCrumbs breadcrumbs={breadcrumbs} />\n        <h1 className=\"co-m-pane__heading\" data-test-id=\"api-explorer-resource-title\">\n          {kindObj.label}\n        </h1>\n      </div>\n      <HorizontalNav pages={pages} match={match} customData={{ kindObj, namespace }} noStatusBox />\n    </>\n  );\n};\nexport const APIResourcePage = connectToModel(connectToFlags(FLAGS.OPENSHIFT)(APIResourcePage_));\n\ntype APIResourceLinkStateProps = {\n  activeNamespace: string;\n};\n\ntype APIResourcesListPropsFromState = {\n  models: ImmutableMap<K8sResourceKindReference, K8sKind>;\n};\n\ntype APIResourceLinkOwnProps = {\n  model: K8sKind;\n};\n\ntype APIResourceTabProps = {\n  customData: {\n    kindObj: K8sKind;\n    namespace?: string;\n  };\n};\n"]}]}