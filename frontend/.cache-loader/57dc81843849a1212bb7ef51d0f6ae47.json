{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/const.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/const.ts","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { \n/* eslint-disable @typescript-eslint/camelcase */\nchart_color_red_400 as red400, chart_color_red_300 as red300, chart_color_red_100 as red100, chart_color_orange_300 as orange300, chart_color_gold_400 as gold400, chart_color_black_500 as black500, } from '@patternfly/react-tokens';\nimport { Map as ImmutableMap } from 'immutable';\nexport const ContainerSecurityFlag = 'SECURITY_LABELLER';\nexport var Priority;\n(function (Priority) {\n    Priority[\"Defcon1\"] = \"Defcon1\";\n    Priority[\"Critical\"] = \"Critical\";\n    Priority[\"High\"] = \"High\";\n    Priority[\"Medium\"] = \"Medium\";\n    Priority[\"Low\"] = \"Low\";\n    Priority[\"Negligible\"] = \"Negligible\";\n    Priority[\"Unknown\"] = \"Unknown\";\n})(Priority || (Priority = {}));\nexport const vulnPriority = ImmutableMap()\n    .set(Priority.Defcon1, {\n    color: red400,\n    description: 'Defcon1 is a Critical problem which has been manually highlighted by the Quay team. It requires immediate attention.',\n    index: 0,\n    level: 'error',\n    score: 11,\n    title: 'Defcon 1',\n    value: 'Defcon1',\n})\n    .set(Priority.Critical, {\n    color: red300,\n    description: 'Critical is a world-burning problem, exploitable for nearly all people in a installation of the package. Includes remote root privilege escalations, or massive data loss.',\n    index: 1,\n    level: 'error',\n    score: 10,\n    title: 'Critical',\n    value: 'Critical',\n})\n    .set(Priority.High, {\n    color: red100,\n    description: 'High is a real problem, exploitable for many people in a default installation. Includes serious remote denial of services, local root privilege escalations, or data loss.',\n    index: 2,\n    level: 'warning',\n    score: 9,\n    title: 'High',\n    value: 'High',\n})\n    .set(Priority.Medium, {\n    color: gold400,\n    description: 'Medium is a real security problem, and is exploitable for many people. Includes network daemon denial of service attacks, cross-site scripting, and gaining user privileges.',\n    index: 3,\n    level: 'warning',\n    score: 6,\n    title: 'Medium',\n    value: 'Medium',\n})\n    .set(Priority.Low, {\n    color: orange300,\n    description: 'Low is a security problem, but is hard to exploit due to environment, requires a user-assisted attack, a small install base, or does very little damage.',\n    index: 4,\n    level: 'warning',\n    score: 3,\n    title: 'Low',\n    value: 'Low',\n})\n    .set(Priority.Negligible, {\n    color: black500,\n    description: 'Negligible is technically a security problem, but is only theoretical in nature, requires a very special situation, has almost no install base, or does no real damage.',\n    index: 5,\n    level: 'info',\n    score: 1,\n    title: 'Negligible',\n    value: 'Negligible',\n})\n    .set(Priority.Unknown, {\n    color: black500,\n    description: 'Unknown is either a security problem that has not been assigned to a priority yet or a priority that our system did not recognize',\n    index: 6,\n    level: 'info',\n    score: 0,\n    title: 'Unknown',\n    value: 'Unknown',\n});\nexport const totalFor = (priority) => (obj) => {\n    switch (priority) {\n        case Priority.Defcon1:\n            return obj.status.defcon1Count || 0;\n        case Priority.Critical:\n            return obj.status.criticalCount || 0;\n        case Priority.High:\n            return obj.status.highCount || 0;\n        case Priority.Medium:\n            return obj.status.mediumCount || 0;\n        case Priority.Low:\n            return obj.status.lowCount || 0;\n        case Priority.Negligible:\n            return obj.status.negligibleCount || 0;\n        case Priority.Unknown:\n            return obj.status.unknownCount || 0;\n        default:\n            return 0;\n    }\n};\nexport const priorityFor = (severity) => vulnPriority.find(({ title }) => title === severity) || vulnPriority.get(Priority.Unknown);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/const.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/const.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  /* eslint-disable @typescript-eslint/camelcase */\n  chart_color_red_400 as red400,\n  chart_color_red_300 as red300,\n  chart_color_red_100 as red100,\n  chart_color_orange_300 as orange300,\n  chart_color_gold_400 as gold400,\n  chart_color_black_500 as black500,\n  /* eslint-enable @typescript-eslint/camelcase */\n} from '@patternfly/react-tokens';\nimport { Map as ImmutableMap } from 'immutable';\nimport { ImageManifestVuln } from './types';\n\nexport const ContainerSecurityFlag = 'SECURITY_LABELLER';\n\nexport enum Priority {\n  Defcon1 = 'Defcon1',\n  Critical = 'Critical',\n  High = 'High',\n  Medium = 'Medium',\n  Low = 'Low',\n  Negligible = 'Negligible',\n  Unknown = 'Unknown',\n}\n\nexport const vulnPriority = ImmutableMap<Priority, VulnPriorityDescription>()\n  .set(Priority.Defcon1, {\n    color: red400,\n    description:\n      'Defcon1 is a Critical problem which has been manually highlighted by the Quay team. It requires immediate attention.',\n    index: 0,\n    level: 'error',\n    score: 11,\n    title: 'Defcon 1',\n    value: 'Defcon1',\n  })\n  .set(Priority.Critical, {\n    color: red300,\n    description:\n      'Critical is a world-burning problem, exploitable for nearly all people in a installation of the package. Includes remote root privilege escalations, or massive data loss.',\n    index: 1,\n    level: 'error',\n    score: 10,\n    title: 'Critical',\n    value: 'Critical',\n  })\n  .set(Priority.High, {\n    color: red100,\n    description:\n      'High is a real problem, exploitable for many people in a default installation. Includes serious remote denial of services, local root privilege escalations, or data loss.',\n    index: 2,\n    level: 'warning',\n    score: 9,\n    title: 'High',\n    value: 'High',\n  })\n  .set(Priority.Medium, {\n    color: gold400,\n    description:\n      'Medium is a real security problem, and is exploitable for many people. Includes network daemon denial of service attacks, cross-site scripting, and gaining user privileges.',\n    index: 3,\n    level: 'warning',\n    score: 6,\n    title: 'Medium',\n    value: 'Medium',\n  })\n  .set(Priority.Low, {\n    color: orange300,\n    description:\n      'Low is a security problem, but is hard to exploit due to environment, requires a user-assisted attack, a small install base, or does very little damage.',\n    index: 4,\n    level: 'warning',\n    score: 3,\n    title: 'Low',\n    value: 'Low',\n  })\n  .set(Priority.Negligible, {\n    color: black500,\n    description:\n      'Negligible is technically a security problem, but is only theoretical in nature, requires a very special situation, has almost no install base, or does no real damage.',\n    index: 5,\n    level: 'info',\n    score: 1,\n    title: 'Negligible',\n    value: 'Negligible',\n  })\n  .set(Priority.Unknown, {\n    color: black500,\n    description:\n      'Unknown is either a security problem that has not been assigned to a priority yet or a priority that our system did not recognize',\n    index: 6,\n    level: 'info',\n    score: 0,\n    title: 'Unknown',\n    value: 'Unknown',\n  });\n\nexport type VulnPriorityDescription = {\n  color: any;\n  description: string;\n  index: number;\n  level: 'error' | 'warning' | 'info';\n  score: number;\n  title: string;\n  value: string;\n};\n\nexport const totalFor = (priority: Priority) => (obj: ImageManifestVuln) => {\n  switch (priority) {\n    case Priority.Defcon1:\n      return obj.status.defcon1Count || 0;\n    case Priority.Critical:\n      return obj.status.criticalCount || 0;\n    case Priority.High:\n      return obj.status.highCount || 0;\n    case Priority.Medium:\n      return obj.status.mediumCount || 0;\n    case Priority.Low:\n      return obj.status.lowCount || 0;\n    case Priority.Negligible:\n      return obj.status.negligibleCount || 0;\n    case Priority.Unknown:\n      return obj.status.unknownCount || 0;\n    default:\n      return 0;\n  }\n};\n\nexport const priorityFor = (severity: string) =>\n  vulnPriority.find(({ title }) => title === severity) || vulnPriority.get(Priority.Unknown);\n"]}]}