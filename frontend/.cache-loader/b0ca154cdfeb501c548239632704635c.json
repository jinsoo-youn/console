{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/RadioGroupField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/RadioGroupField.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { getFieldId } from './field-utils';\nimport RadioButtonField from './RadioButtonField';\nimport './RadioGroupField.scss';\nconst RadioGroupField = (_a) => {\n    var { label, options, helpText, required } = _a, props = __rest(_a, [\"label\", \"options\", \"helpText\", \"required\"]);\n    const [field, { touched, error }] = useField(props.name);\n    const fieldId = getFieldId(props.name, 'radiogroup');\n    const isValid = !(touched && error);\n    const errorMessage = !isValid ? error : '';\n    return (React.createElement(FormGroup, { className: \"ocs-radio-group-field\", fieldId: fieldId, helperText: helpText, helperTextInvalid: errorMessage, isValid: isValid, isRequired: required, label: label }, options.map((option) => {\n        const activeChild = field.value === option.value && option.activeChildren;\n        const staticChild = option.children;\n        const description = (activeChild || staticChild) && (React.createElement(\"div\", { className: \"ocs-radio-group-field__children\" },\n            staticChild,\n            activeChild));\n        return (React.createElement(React.Fragment, { key: option.value },\n            React.createElement(RadioButtonField, Object.assign({}, field, props, { value: option.value, label: option.label, isDisabled: option.isDisabled, \"aria-describedby\": `${fieldId}-helper`, description: description }))));\n    })));\n};\nexport default RadioGroupField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/RadioGroupField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/RadioGroupField.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClC,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEnD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,OAAO,wBAAwB,CAAC;AAEhC,MAAM,eAAe,GAAmC,CAAC,EAMxD,EAAE,EAAE;QANoD,EACvD,KAAK,EACL,OAAO,EACP,QAAQ,EACR,QAAQ,OAET,EADC,gEAAQ;IAER,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzD,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACrD,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3C,OAAO,CACL,oBAAC,SAAS,IACR,SAAS,EAAC,uBAAuB,EACjC,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,QAAQ,EACpB,iBAAiB,EAAE,YAAY,EAC/B,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,QAAQ,EACpB,KAAK,EAAE,KAAK,IAEX,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;QACtB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,cAAc,CAAC;QAC1E,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEpC,MAAM,WAAW,GAAG,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,CAClD,6BAAK,SAAS,EAAC,iCAAiC;YAC7C,WAAW;YACX,WAAW,CACR,CACP,CAAC;QAEF,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,MAAM,CAAC,KAAK;YAC/B,oBAAC,gBAAgB,oBACX,KAAK,EACL,KAAK,IACT,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,UAAU,EAAE,MAAM,CAAC,UAAU,sBACX,GAAG,OAAO,SAAS,EACrC,WAAW,EAAE,WAAW,IACxB,CACa,CAClB,CAAC;IACJ,CAAC,CAAC,CACQ,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { RadioGroupFieldProps } from './field-types';\nimport { getFieldId } from './field-utils';\nimport RadioButtonField from './RadioButtonField';\nimport './RadioGroupField.scss';\n\nconst RadioGroupField: React.FC<RadioGroupFieldProps> = ({\n  label,\n  options,\n  helpText,\n  required,\n  ...props\n}) => {\n  const [field, { touched, error }] = useField(props.name);\n  const fieldId = getFieldId(props.name, 'radiogroup');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n  return (\n    <FormGroup\n      className=\"ocs-radio-group-field\"\n      fieldId={fieldId}\n      helperText={helpText}\n      helperTextInvalid={errorMessage}\n      isValid={isValid}\n      isRequired={required}\n      label={label}\n    >\n      {options.map((option) => {\n        const activeChild = field.value === option.value && option.activeChildren;\n        const staticChild = option.children;\n\n        const description = (activeChild || staticChild) && (\n          <div className=\"ocs-radio-group-field__children\">\n            {staticChild}\n            {activeChild}\n          </div>\n        );\n\n        return (\n          <React.Fragment key={option.value}>\n            <RadioButtonField\n              {...field}\n              {...props}\n              value={option.value}\n              label={option.label}\n              isDisabled={option.isDisabled}\n              aria-describedby={`${fieldId}-helper`}\n              description={description}\n            />\n          </React.Fragment>\n        );\n      })}\n    </FormGroup>\n  );\n};\n\nexport default RadioGroupField;\n"]}]}