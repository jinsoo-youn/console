{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/link.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/link.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport Linkify from 'react-linkify';\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\n// Kubernetes \"dns-friendly\" names match\n// [a-z0-9]([-a-z0-9]*[a-z0-9])?  and are 63 or fewer characters\n// long. This pattern checks the pattern but not the length.\n//\n// Don't capture anything in legalNamePattern, since it's used\n// in expressions like\n//\n//    new RegExp(\"PREFIX\" + legalNamePattern.source + \"(SUFFIX)\")\n//\n// And it's ok for users to make assumptions about capturing groups.\nexport const legalNamePattern = /[a-z0-9](?:[-a-z0-9]*[a-z0-9])?/;\nconst basePathPattern = new RegExp(`^/?${window.SERVER_FLAGS.basePath}`);\nexport const namespacedPrefixes = ['/api-resource', '/catalog', '/k8s', '/operatorhub', '/operatormanagement', '/operators', '/details', '/provisionedservices', '/search', '/status'];\nexport const stripBasePath = (path) => path.replace(basePathPattern, '/');\nexport const getNamespace = (path) => {\n    path = stripBasePath(path);\n    const split = path.split('/').filter(x => x);\n    if (split[1] === 'all-namespaces') {\n        return ALL_NAMESPACES_KEY;\n    }\n    let ns;\n    if (split[1] === 'cluster' && ['namespaces', 'projects'].includes(split[2]) && split[3]) {\n        ns = split[3];\n    }\n    else if (split[1] === 'ns' && split[2]) {\n        ns = split[2];\n    }\n    else {\n        return;\n    }\n    const match = ns.match(legalNamePattern);\n    return match && match.length > 0 && match[0];\n};\nexport const getURLSearchParams = () => {\n    const all = {};\n    const params = new URLSearchParams(window.location.search);\n    // The URLSearchParams type definition does not include `entries()`.\n    // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries\n    for (const [k, v] of params.entries()) {\n        all[k] = v;\n    }\n    return all;\n};\nexport const ExternalLink = ({ href, text, additionalClassName = '', dataTestID }) => (React.createElement(\"a\", { className: classNames('co-external-link', additionalClassName), href: href, target: \"_blank\", rel: \"noopener noreferrer\", \"data-test-id\": dataTestID }, text));\nexport const HyperCloudManualLink = ({ href, text, additionalClassName = '', dataTestID }) => (React.createElement(\"a\", { className: classNames('co-external-link', additionalClassName), href: href, target: \"_blank\", rel: \"noopener noreferrer\", \"data-test-id\": dataTestID }, text));\n// Open links in a new window and set noopener/noreferrer.\nexport const LinkifyExternal = ({ children }) => React.createElement(Linkify, { properties: { target: '_blank', rel: 'noopener noreferrer' } }, children);\nLinkifyExternal.displayName = 'LinkifyExternal';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/link.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/link.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport Linkify from 'react-linkify';\n\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\n\n// Kubernetes \"dns-friendly\" names match\n// [a-z0-9]([-a-z0-9]*[a-z0-9])?  and are 63 or fewer characters\n// long. This pattern checks the pattern but not the length.\n//\n// Don't capture anything in legalNamePattern, since it's used\n// in expressions like\n//\n//    new RegExp(\"PREFIX\" + legalNamePattern.source + \"(SUFFIX)\")\n//\n// And it's ok for users to make assumptions about capturing groups.\n\nexport const legalNamePattern = /[a-z0-9](?:[-a-z0-9]*[a-z0-9])?/;\n\nconst basePathPattern = new RegExp(`^/?${window.SERVER_FLAGS.basePath}`);\n\nexport const namespacedPrefixes = ['/api-resource', '/catalog', '/k8s', '/operatorhub', '/operatormanagement', '/operators', '/details', '/provisionedservices', '/search', '/status'];\n\nexport const stripBasePath = (path: string): string => path.replace(basePathPattern, '/');\n\nexport const getNamespace = (path: string): string => {\n  path = stripBasePath(path);\n  const split = path.split('/').filter(x => x);\n\n  if (split[1] === 'all-namespaces') {\n    return ALL_NAMESPACES_KEY;\n  }\n\n  let ns: string;\n  if (split[1] === 'cluster' && ['namespaces', 'projects'].includes(split[2]) && split[3]) {\n    ns = split[3];\n  } else if (split[1] === 'ns' && split[2]) {\n    ns = split[2];\n  } else {\n    return;\n  }\n\n  const match = ns.match(legalNamePattern);\n  return match && match.length > 0 && match[0];\n};\n\nexport const getURLSearchParams = () => {\n  const all: any = {};\n  const params = new URLSearchParams(window.location.search);\n  // The URLSearchParams type definition does not include `entries()`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries\n  for (const [k, v] of (params as any).entries()) {\n    all[k] = v;\n  }\n  return all;\n};\n\nexport const ExternalLink: React.FC<ExternalLinkProps> = ({ href, text, additionalClassName = '', dataTestID }) => (\n  <a className={classNames('co-external-link', additionalClassName)} href={href} target=\"_blank\" rel=\"noopener noreferrer\" data-test-id={dataTestID}>\n    {text}\n  </a>\n);\nexport const HyperCloudManualLink: React.FC<HyperCloudManualLinkProps> = ({ href, text, additionalClassName = '', dataTestID }) => (\n  <a className={classNames('co-external-link', additionalClassName)} href={href} target=\"_blank\" rel=\"noopener noreferrer\" data-test-id={dataTestID}>\n    {text}\n  </a>\n);\n\n// Open links in a new window and set noopener/noreferrer.\nexport const LinkifyExternal: React.FC<{ children: React.ReactNode }> = ({ children }) => <Linkify properties={{ target: '_blank', rel: 'noopener noreferrer' }}>{children}</Linkify>;\nLinkifyExternal.displayName = 'LinkifyExternal';\n\ntype ExternalLinkProps = {\n  href: string;\n  text: React.ReactNode;\n  additionalClassName?: string;\n  dataTestID?: string;\n};\n\ntype HyperCloudManualLinkProps = {\n  href: string;\n  text: React.ReactNode;\n  additionalClassName?: string;\n  dataTestID?: string;\n};\n"]}]}