{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm-import/vm-import-wrapper.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm-import/vm-import-wrapper.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { VirtualMachineImportModel } from '../../../models';\nimport { K8sResourceObjectWithTypePropertyWrapper } from '../common/k8s-resource-object-with-type-property-wrapper';\nimport { VMImportType } from '../../../constants/v2v-import/ovirt/vm-import-type';\nimport { VMImportOvirtSourceWrappper } from './vm-import-ovirt-source-wrapper';\nexport class VMImportWrappper extends K8sResourceObjectWithTypePropertyWrapper {\n    constructor(vmImport, copy = false) {\n        super(VirtualMachineImportModel, vmImport, copy, VMImportType, ['spec', 'source']);\n        this.setTargetVMName = (name) => {\n            this.ensurePath('spec');\n            this.data.spec.targetVmName = name;\n            return this;\n        };\n        this.setStartVM = (startVM = false) => {\n            this.ensurePath('spec');\n            this.data.spec.startVm = startVM;\n            return this;\n        };\n        this.setCredentialsSecret = (secretName, secretNamespace = undefined) => {\n            this.ensurePath('spec.providerCredentialsSecret');\n            this.data.spec.providerCredentialsSecret.name = secretName;\n            this.data.spec.providerCredentialsSecret.namespace = secretNamespace;\n            this.clearIfEmpty('spec.providerCredentialsSecret');\n            return this;\n        };\n        this.setResourceMapping = (mappingName, mappingNamespace = undefined) => {\n            this.ensurePath('spec.resourceMapping');\n            this.data.spec.resourceMapping.name = mappingName;\n            this.data.spec.resourceMapping.namespace = mappingNamespace;\n            this.clearIfEmpty('spec.resourceMapping');\n            return this;\n        };\n        this.getOvirtSourceWrapper = () => {\n            return this.getType() === VMImportType.OVIRT\n                ? new VMImportOvirtSourceWrappper(this.getTypeData(VMImportType.OVIRT))\n                : undefined;\n        };\n        this.getResolvedVMTargetName = () => { var _a, _b; return ((_a = this.data.status) === null || _a === void 0 ? void 0 : _a.targetVmName) || ((_b = this.data.spec) === null || _b === void 0 ? void 0 : _b.targetVmName); };\n    }\n    init(data = {}) {\n        super.init(data);\n        this.setStartVM(false);\n        return this;\n    }\n    sanitize(type, data) {\n        return super.sanitize(type, data) || {};\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm-import/vm-import-wrapper.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm-import/vm-import-wrapper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,yBAAyB,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,wCAAwC,EAAE,MAAM,0DAA0D,CAAC;AAEpH,OAAO,EAAE,YAAY,EAAE,MAAM,oDAAoD,CAAC;AAElF,OAAO,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAI/E,MAAM,OAAO,gBAAiB,SAAQ,wCAKrC;IACC,YAAY,QAAgD,EAAE,IAAI,GAAG,KAAK;QACxE,KAAK,CAAC,yBAAyB,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;QASrF,oBAAe,GAAG,CAAC,IAAY,EAAE,EAAE;YACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACjC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,yBAAoB,GAAG,CAAC,UAAkB,EAAE,kBAA0B,SAAS,EAAE,EAAE;YACjF,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,GAAG,UAAU,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,GAAG,eAAe,CAAC;YACrE,IAAI,CAAC,YAAY,CAAC,gCAAgC,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,WAAmB,EAAE,mBAA2B,SAAS,EAAE,EAAE;YACjF,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,WAAW,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,gBAAgB,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC3B,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,YAAY,CAAC,KAAK;gBAC1C,CAAC,CAAC,IAAI,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACvE,CAAC,CAAC,SAAS,CAAC;QAChB,CAAC,CAAC;QAEF,4BAAuB,GAAG,GAAG,EAAE,eAAC,OAAA,OAAA,IAAI,CAAC,IAAI,CAAC,MAAM,0CAAE,YAAY,YAAI,IAAI,CAAC,IAAI,CAAC,IAAI,0CAAE,YAAY,CAAA,CAAA,EAAA,CAAC;IA1C/F,CAAC;IAED,IAAI,CAAC,OAAqB,EAAE;QAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAsCS,QAAQ,CAAC,IAAkB,EAAE,IAAyB;QAC9D,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAK,EAAU,CAAC;IACnD,CAAC;CACF","sourcesContent":["import { VirtualMachineImportModel } from '../../../models';\nimport { K8sResourceObjectWithTypePropertyWrapper } from '../common/k8s-resource-object-with-type-property-wrapper';\nimport { VMImportKind, VMImportOvirtSource } from '../../../types/vm-import/ovirt/vm-import';\nimport { VMImportType } from '../../../constants/v2v-import/ovirt/vm-import-type';\nimport { K8sInitAddon } from '../common/util/k8s-mixin';\nimport { VMImportOvirtSourceWrappper } from './vm-import-ovirt-source-wrapper';\n\ntype CombinedTypeData = VMImportOvirtSource; // add other sources once available\n\nexport class VMImportWrappper extends K8sResourceObjectWithTypePropertyWrapper<\n  VMImportKind,\n  VMImportType,\n  CombinedTypeData,\n  VMImportWrappper\n> {\n  constructor(vmImport?: VMImportKind | VMImportWrappper | any, copy = false) {\n    super(VirtualMachineImportModel, vmImport, copy, VMImportType, ['spec', 'source']);\n  }\n\n  init(data: K8sInitAddon = {}) {\n    super.init(data);\n    this.setStartVM(false);\n    return this;\n  }\n\n  setTargetVMName = (name: string) => {\n    this.ensurePath('spec');\n    this.data.spec.targetVmName = name;\n    return this;\n  };\n\n  setStartVM = (startVM = false) => {\n    this.ensurePath('spec');\n    this.data.spec.startVm = startVM;\n    return this;\n  };\n\n  setCredentialsSecret = (secretName: string, secretNamespace: string = undefined) => {\n    this.ensurePath('spec.providerCredentialsSecret');\n    this.data.spec.providerCredentialsSecret.name = secretName;\n    this.data.spec.providerCredentialsSecret.namespace = secretNamespace;\n    this.clearIfEmpty('spec.providerCredentialsSecret');\n    return this;\n  };\n\n  setResourceMapping = (mappingName: string, mappingNamespace: string = undefined) => {\n    this.ensurePath('spec.resourceMapping');\n    this.data.spec.resourceMapping.name = mappingName;\n    this.data.spec.resourceMapping.namespace = mappingNamespace;\n    this.clearIfEmpty('spec.resourceMapping');\n    return this;\n  };\n\n  getOvirtSourceWrapper = () => {\n    return this.getType() === VMImportType.OVIRT\n      ? new VMImportOvirtSourceWrappper(this.getTypeData(VMImportType.OVIRT))\n      : undefined;\n  };\n\n  getResolvedVMTargetName = () => this.data.status?.targetVmName || this.data.spec?.targetVmName;\n\n  protected sanitize(type: VMImportType, data: VMImportOvirtSource) {\n    return super.sanitize(type, data) || ({} as any);\n  }\n}\n"]}]}