{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { useFormikValidationFix } from '@console/shared';\nimport PipelineResourceParam from '../../pipeline-resource/PipelineResourceParam';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\nimport PipelineResourceDropdown from './PipelineResourceDropdown';\nconst PipelineResourceDropdownField = (props) => {\n    const { filterType, name, label } = props;\n    const [field] = useField(name);\n    const { values } = useFormikContext();\n    const { namespace } = values;\n    const { value: { selection }, } = field;\n    const creating = selection === CREATE_PIPELINE_RESOURCE;\n    useFormikValidationFix(field.value);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FormGroup, { fieldId: name, label: label, isRequired: true },\n            React.createElement(PipelineResourceDropdown, Object.assign({}, props, { autoSelect: selection == null, filterType: filterType, namespace: namespace, name: `${name}.selection`, selectedKey: selection }))),\n        creating && React.createElement(PipelineResourceParam, { name: `${name}.data`, type: filterType })));\n};\nexport default PipelineResourceDropdownField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAsB,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAC7E,OAAO,qBAAqB,MAAM,+CAA+C,CAAC;AAClF,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAEnD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAKlE,MAAM,6BAA6B,GAAiD,CAAC,KAAK,EAAE,EAAE;IAC5F,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAE1C,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAA4B,IAAI,CAAC,CAAC;IAC1D,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;IAC7B,MAAM,EACJ,KAAK,EAAE,EAAE,SAAS,EAAE,GACrB,GAAG,KAAK,CAAC;IACV,MAAM,QAAQ,GAAG,SAAS,KAAK,wBAAwB,CAAC;IAExD,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEpC,OAAO,CACL;QACE,oBAAC,SAAS,IAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU;YAChD,oBAAC,wBAAwB,oBACnB,KAAK,IACT,UAAU,EAAE,SAAS,IAAI,IAAI,EAC7B,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,GAAG,IAAI,YAAY,EACzB,WAAW,EAAE,SAAS,IACtB,CACQ;QAEX,QAAQ,IAAI,oBAAC,qBAAqB,IAAC,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,GAAI,CAC7E,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,6BAA6B,CAAC","sourcesContent":["import * as React from 'react';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { DropdownFieldProps, useFormikValidationFix } from '@console/shared';\nimport PipelineResourceParam from '../../pipeline-resource/PipelineResourceParam';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\nimport { PipelineModalFormResource } from './types';\nimport PipelineResourceDropdown from './PipelineResourceDropdown';\n\ntype PipelineResourceDropdownFieldProps = DropdownFieldProps & {\n  filterType?: string;\n};\nconst PipelineResourceDropdownField: React.FC<PipelineResourceDropdownFieldProps> = (props) => {\n  const { filterType, name, label } = props;\n\n  const [field] = useField<PipelineModalFormResource>(name);\n  const { values } = useFormikContext<FormikValues>();\n  const { namespace } = values;\n  const {\n    value: { selection },\n  } = field;\n  const creating = selection === CREATE_PIPELINE_RESOURCE;\n\n  useFormikValidationFix(field.value);\n\n  return (\n    <>\n      <FormGroup fieldId={name} label={label} isRequired>\n        <PipelineResourceDropdown\n          {...props}\n          autoSelect={selection == null}\n          filterType={filterType}\n          namespace={namespace}\n          name={`${name}.selection`}\n          selectedKey={selection}\n        />\n      </FormGroup>\n\n      {creating && <PipelineResourceParam name={`${name}.data`} type={filterType} />}\n    </>\n  );\n};\n\nexport default PipelineResourceDropdownField;\n"]}]}