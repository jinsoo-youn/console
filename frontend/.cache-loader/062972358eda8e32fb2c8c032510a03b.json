{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/key-value-list-editor.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/key-value-list-editor.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useFormContext, useFieldArray } from 'react-hook-form';\nimport { Button } from '@patternfly/react-core';\nimport { PficonDragdropIcon, MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nexport const KeyValueListEditor = ({ name, disableReorder = false }) => {\n    const { control, register, getValues } = useFormContext();\n    const { fields, append, remove, move } = useFieldArray({ control, name: name });\n    const deleteIcon = (React.createElement(React.Fragment, null,\n        React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }),\n        React.createElement(\"span\", { className: \"sr-only\" }, \"Delete\")));\n    // 중복되는 key 유무에 대한 validation\n    const validateKey = keyInput => {\n        let count = 0;\n        const itemArray = _.get(getValues(), name);\n        for (let item of itemArray) {\n            if (keyInput === item['key'] && ++count > 1) {\n                return false;\n            }\n        }\n        return true;\n    };\n    const validateValue = valueInput => {\n        // value에 대한 validation은 아직 없음\n        return true;\n    };\n    const onDragEnd = result => {\n        if (!result.destination) {\n            return;\n        }\n        if (result.destination.index === result.source.index) {\n            return;\n        }\n        move(result.source.index, result.destination.index);\n    };\n    const renderList = () => {\n        return fields.map((item, index) => (React.createElement(Draggable, { draggableId: item.id, index: index, key: item.id }, provided => (React.createElement(\"div\", Object.assign({ ref: provided.innerRef }, provided.draggableProps),\n            React.createElement(\"div\", Object.assign({ className: 'col-xs-1 pairs-list__action ' + (disableReorder ? 'hide' : '') }, provided.dragHandleProps),\n                React.createElement(PficonDragdropIcon, { className: \"vertical-center\" })),\n            React.createElement(\"div\", { className: \"col-xs-5 pairs-list__name-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", ref: register({ validate: validateKey }), name: `${name}[${index}].key`, defaultValue: item.key })),\n            React.createElement(\"div\", { className: \"col-xs-5 pairs-list__value-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", ref: register({ validate: validateValue }), name: `${name}[${index}].value`, defaultValue: item.value })),\n            React.createElement(Button, { type: \"button\", \"data-test-id\": \"pairs-list__delete-btn\", className: \"pairs-list__span-btns\", onClick: () => {\n                    remove(index);\n                }, variant: \"plain\" }, deleteIcon))))));\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"row pairs-list__heading\" },\n            !disableReorder && React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" }),\n            React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, \"KEY\"),\n            React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, \"VALUE\"),\n            React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" })),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(DragDropContext, { onDragEnd: onDragEnd },\n                React.createElement(Droppable, { droppableId: \"list\" }, provided => (React.createElement(\"div\", Object.assign({ ref: provided.innerRef }, provided.droppableProps),\n                    renderList(),\n                    provided.placeholder))),\n                React.createElement(Button, { className: \"pf-m-link--align-left\", \"data-test-id\": \"pairs-list__add-btn\", onClick: () => {\n                        append({ key: '', value: '' });\n                    }, type: \"button\", variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                    \"Add\")))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/key-value-list-editor.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/key-value-list-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useFormContext, useFieldArray } from 'react-hook-form';\nimport { Button } from '@patternfly/react-core';\nimport { PficonDragdropIcon, MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport const KeyValueListEditor: React.FC<KeyValueListEditorProps> = ({ name, disableReorder = false }) => {\n  const { control, register, getValues } = useFormContext();\n  const { fields, append, remove, move } = useFieldArray<{ key: string; value: string }>({ control, name: name });\n\n  const deleteIcon = (\n    <>\n      <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n      <span className=\"sr-only\">Delete</span>\n    </>\n  );\n\n  // 중복되는 key 유무에 대한 validation\n  const validateKey = keyInput => {\n    let count = 0;\n    const itemArray = _.get(getValues(), name);\n    for (let item of itemArray) {\n      if (keyInput === item['key'] && ++count > 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const validateValue = valueInput => {\n    // value에 대한 validation은 아직 없음\n    return true;\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    move(result.source.index, result.destination.index);\n  };\n\n  const renderList = () => {\n    return fields.map((item, index) => (\n      <Draggable draggableId={item.id} index={index} key={item.id}>\n        {provided => (\n          <div ref={provided.innerRef} {...provided.draggableProps}>\n            <div className={'col-xs-1 pairs-list__action ' + (disableReorder ? 'hide' : '')} {...provided.dragHandleProps}>\n              <PficonDragdropIcon className=\"vertical-center\" />\n            </div>\n            <div className=\"col-xs-5 pairs-list__name-field\">\n              <input type=\"text\" className=\"pf-c-form-control\" ref={register({ validate: validateKey })} name={`${name}[${index}].key`} defaultValue={item.key} />\n            </div>\n            <div className=\"col-xs-5 pairs-list__value-field\">\n              <input type=\"text\" className=\"pf-c-form-control\" ref={register({ validate: validateValue })} name={`${name}[${index}].value`} defaultValue={item.value} />\n            </div>\n            <Button\n              type=\"button\"\n              data-test-id=\"pairs-list__delete-btn\"\n              className=\"pairs-list__span-btns\"\n              onClick={() => {\n                remove(index);\n              }}\n              variant=\"plain\"\n            >\n              {deleteIcon}\n            </Button>\n          </div>\n        )}\n      </Draggable>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"row pairs-list__heading\">\n        {!disableReorder && <div className=\"col-xs-1 co-empty__header\" />}\n        <div className=\"col-xs-5 text-secondary text-uppercase\">KEY</div>\n        <div className=\"col-xs-5 text-secondary text-uppercase\">VALUE</div>\n        <div className=\"col-xs-1 co-empty__header\" />\n      </div>\n      <div className=\"row\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"list\">\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {renderList()}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <Button\n            className=\"pf-m-link--align-left\"\n            data-test-id=\"pairs-list__add-btn\"\n            onClick={() => {\n              append({ key: '', value: '' });\n            }}\n            type=\"button\"\n            variant=\"link\"\n          >\n            <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n            Add\n          </Button>\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\ntype KeyValueListEditorProps = {\n  name: string;\n  disableReorder?: boolean;\n};\n"]}]}