{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/NodeDashboardContext.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/NodeDashboardContext.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nexport const NodeDashboardContext = React.createContext({\n    setCPULimit: () => { },\n    setMemoryLimit: () => { },\n    setHealthCheck: () => { },\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/NodeDashboardContext.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/NodeDashboardContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,CAAC,aAAa,CAAuB;IAC5E,WAAW,EAAE,GAAG,EAAE,GAAE,CAAC;IACrB,cAAc,EAAE,GAAG,EAAE,GAAE,CAAC;IACxB,cAAc,EAAE,GAAG,EAAE,GAAE,CAAC;CACzB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { NodeKind } from '@console/internal/module/k8s';\nimport { LimitRequested } from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\n\nexport const NodeDashboardContext = React.createContext<NodeDashboardContext>({\n  setCPULimit: () => {},\n  setMemoryLimit: () => {},\n  setHealthCheck: () => {},\n});\n\nexport type HealthCheck = {\n  failingHealthCheck: boolean;\n  reboot: boolean;\n};\n\ntype NodeDashboardContext = {\n  obj?: NodeKind;\n  cpuLimit?: LimitRequested;\n  setCPULimit: (state: LimitRequested) => void;\n  memoryLimit?: LimitRequested;\n  setMemoryLimit: (state: LimitRequested) => void;\n  healthCheck?: HealthCheck;\n  setHealthCheck: (state: HealthCheck) => void;\n};\n"]}]}