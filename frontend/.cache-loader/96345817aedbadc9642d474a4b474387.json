{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceGroup.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceGroup.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { observer, useDragNode, Layer, useHover, createSvgIdUrl, useCombineRefs } from '@console/topology';\nimport SvgBoxedText from '../../../svg/SvgBoxedText';\nimport { nodeDragSourceSpec } from '../../components/componentUtils';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './const';\nimport { useDisplayFilters, useSearchFilter } from '../../filters';\nimport { NodeShadows, NODE_SHADOW_FILTER_ID, NODE_SHADOW_FILTER_ID_HOVER } from '../../components/NodeShadows';\nconst OperatorBackedServiceGroup = ({ element, editAccess, selected, onSelect, onContextMenu, contextMenuOpen, dndDropRef }) => {\n    var _a;\n    const [hover, hoverRef] = useHover();\n    const [innerHover, innerHoverRef] = useHover();\n    const [{ dragging, regrouping }, dragNodeRef] = useDragNode(nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, false), {\n        element,\n    });\n    const [{ dragging: labelDragging, regrouping: labelRegrouping }, dragLabelRef] = useDragNode(nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, false), {\n        element,\n    });\n    const nodeRefs = useCombineRefs(innerHoverRef, dragNodeRef);\n    const hasChildren = ((_a = element.getChildren()) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    const { data } = element.getData();\n    const [filtered] = useSearchFilter(element.getLabel());\n    const displayFilters = useDisplayFilters();\n    const showLabels = displayFilters.showLabels || hover || innerHover;\n    const { x, y, width, height } = element.getBounds();\n    return (React.createElement(\"g\", { ref: hoverRef, onClick: onSelect, onContextMenu: editAccess ? onContextMenu : null, className: classNames('odc-operator-backed-service', {\n            'is-dragging': dragging || labelDragging,\n            'is-filtered': filtered,\n        }) },\n        React.createElement(NodeShadows, null),\n        React.createElement(Layer, { id: (dragging || labelDragging) && (regrouping || labelRegrouping) ? undefined : 'groups2' },\n            React.createElement(\"g\", { ref: nodeRefs, className: classNames('odc-operator-backed-service', {\n                    'is-selected': selected,\n                    'is-dragging': dragging || labelDragging,\n                    'is-filtered': filtered,\n                }) },\n                React.createElement(\"rect\", { ref: dndDropRef, className: \"odc-operator-backed-service__bg\", x: x, y: y, width: width, height: height, rx: \"5\", ry: \"5\", filter: createSvgIdUrl(hover || innerHover || contextMenuOpen || dragging || labelDragging ? NODE_SHADOW_FILTER_ID_HOVER : NODE_SHADOW_FILTER_ID) }),\n                !hasChildren && (React.createElement(\"text\", { x: x + width / 2, y: y + height / 2, dy: \"0.35em\", textAnchor: \"middle\" }, \"No Resources\")))),\n        showLabels && (data.kind || element.getLabel()) && (React.createElement(SvgBoxedText, { className: \"odc-base-node__label\", x: x + width / 2, y: y + height + 20, paddingX: 8, paddingY: 4, kind: \"Operator\", dragRef: dragLabelRef, typeIconClass: element.getData().data.builderImage }, element.getLabel()))));\n};\nexport default observer(OperatorBackedServiceGroup);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceGroup.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceGroup.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAQ,QAAQ,EAA8D,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAC7K,OAAO,YAAY,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAE,4BAA4B,EAAE,MAAM,SAAS,CAAC;AACvD,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,MAAM,8BAA8B,CAAC;AAS/G,MAAM,0BAA0B,GAA8C,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,eAAe,EAAE,UAAU,EAAE,EAAE,EAAE;;IACxK,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAE,CAAC;IACrC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,EAAE,CAAC;IAC/C,MAAM,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,KAAK,CAAC,EAAE;QACnH,OAAO;KACR,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,eAAe,EAAE,EAAE,YAAY,CAAC,GAAG,WAAW,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,KAAK,CAAC,EAAE;QACpJ,OAAO;KACR,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,cAAc,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;IAC5D,MAAM,WAAW,GAAG,OAAA,OAAO,CAAC,WAAW,EAAE,0CAAE,MAAM,IAAG,CAAC,CAAC;IACtD,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IACnC,MAAM,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,MAAM,cAAc,GAAG,iBAAiB,EAAE,CAAC;IAC3C,MAAM,UAAU,GAAG,cAAc,CAAC,UAAU,IAAI,KAAK,IAAI,UAAU,CAAC;IACpE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;IAEpD,OAAO,CACL,2BACE,GAAG,EAAE,QAAQ,EACb,OAAO,EAAE,QAAQ,EACjB,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAChD,SAAS,EAAE,UAAU,CAAC,6BAA6B,EAAE;YACnD,aAAa,EAAE,QAAQ,IAAI,aAAa;YACxC,aAAa,EAAE,QAAQ;SACxB,CAAC;QAEF,oBAAC,WAAW,OAAG;QACf,oBAAC,KAAK,IAAC,EAAE,EAAE,CAAC,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YAC/F,2BACE,GAAG,EAAE,QAAQ,EACb,SAAS,EAAE,UAAU,CAAC,6BAA6B,EAAE;oBACnD,aAAa,EAAE,QAAQ;oBACvB,aAAa,EAAE,QAAQ,IAAI,aAAa;oBACxC,aAAa,EAAE,QAAQ;iBACxB,CAAC;gBAEF,8BAAM,GAAG,EAAE,UAAU,EAAE,SAAS,EAAC,iCAAiC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,MAAM,EAAE,cAAc,CAAC,KAAK,IAAI,UAAU,IAAI,eAAe,IAAI,QAAQ,IAAI,aAAa,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,qBAAqB,CAAC,GAAI;gBAC/Q,CAAC,WAAW,IAAI,CACf,8BAAM,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,EAAE,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,mBAEnE,CACR,CACC,CACE;QACP,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CAClD,oBAAC,YAAY,IAAC,SAAS,EAAC,sBAAsB,EAAC,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAC,UAAU,EAAC,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,IACrM,OAAO,CAAC,QAAQ,EAAE,CACN,CAChB,CACC,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,0BAA0B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Node, observer, WithSelectionProps, WithDndDropProps, WithContextMenuProps, useDragNode, Layer, useHover, createSvgIdUrl, useCombineRefs } from '@console/topology';\nimport SvgBoxedText from '../../../svg/SvgBoxedText';\nimport { nodeDragSourceSpec } from '../../components/componentUtils';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './const';\nimport { useDisplayFilters, useSearchFilter } from '../../filters';\nimport { NodeShadows, NODE_SHADOW_FILTER_ID, NODE_SHADOW_FILTER_ID_HOVER } from '../../components/NodeShadows';\n\nexport type OperatorBackedServiceGroupProps = {\n  element: Node;\n  editAccess: boolean;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDndDropProps;\n\nconst OperatorBackedServiceGroup: React.FC<OperatorBackedServiceGroupProps> = ({ element, editAccess, selected, onSelect, onContextMenu, contextMenuOpen, dndDropRef }) => {\n  const [hover, hoverRef] = useHover();\n  const [innerHover, innerHoverRef] = useHover();\n  const [{ dragging, regrouping }, dragNodeRef] = useDragNode(nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, false), {\n    element,\n  });\n  const [{ dragging: labelDragging, regrouping: labelRegrouping }, dragLabelRef] = useDragNode(nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, false), {\n    element,\n  });\n\n  const nodeRefs = useCombineRefs(innerHoverRef, dragNodeRef);\n  const hasChildren = element.getChildren()?.length > 0;\n  const { data } = element.getData();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const displayFilters = useDisplayFilters();\n  const showLabels = displayFilters.showLabels || hover || innerHover;\n  const { x, y, width, height } = element.getBounds();\n\n  return (\n    <g\n      ref={hoverRef}\n      onClick={onSelect}\n      onContextMenu={editAccess ? onContextMenu : null}\n      className={classNames('odc-operator-backed-service', {\n        'is-dragging': dragging || labelDragging,\n        'is-filtered': filtered,\n      })}\n    >\n      <NodeShadows />\n      <Layer id={(dragging || labelDragging) && (regrouping || labelRegrouping) ? undefined : 'groups2'}>\n        <g\n          ref={nodeRefs}\n          className={classNames('odc-operator-backed-service', {\n            'is-selected': selected,\n            'is-dragging': dragging || labelDragging,\n            'is-filtered': filtered,\n          })}\n        >\n          <rect ref={dndDropRef} className=\"odc-operator-backed-service__bg\" x={x} y={y} width={width} height={height} rx=\"5\" ry=\"5\" filter={createSvgIdUrl(hover || innerHover || contextMenuOpen || dragging || labelDragging ? NODE_SHADOW_FILTER_ID_HOVER : NODE_SHADOW_FILTER_ID)} />\n          {!hasChildren && (\n            <text x={x + width / 2} y={y + height / 2} dy=\"0.35em\" textAnchor=\"middle\">\n              No Resources\n            </text>\n          )}\n        </g>\n      </Layer>\n      {showLabels && (data.kind || element.getLabel()) && (\n        <SvgBoxedText className=\"odc-base-node__label\" x={x + width / 2} y={y + height + 20} paddingX={8} paddingY={4} kind=\"Operator\" dragRef={dragLabelRef} typeIconClass={element.getData().data.builderImage}>\n          {element.getLabel()}\n        </SvgBoxedText>\n      )}\n    </g>\n  );\n};\n\nexport default observer(OperatorBackedServiceGroup);\n"]}]}