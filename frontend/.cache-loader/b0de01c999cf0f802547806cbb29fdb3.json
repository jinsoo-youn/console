{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/create-form.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/create-form.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { Alert, ActionGroup, Button, Form, FormGroup } from '@patternfly/react-core';\nimport { k8sPatch, k8sCreate, referenceForModel, } from '@console/internal/module/k8s';\nimport { ListPage } from '@console/internal/components/factory';\nimport { NodeModel } from '@console/internal/models';\nimport { hasLabel, getName } from '@console/shared';\nimport { withHandlePromise, history, FieldLevelHelp, ButtonBar, } from '@console/internal/components/utils';\nimport { setFlag } from '@console/internal/actions/features';\nimport { ocsRequestData, labelTooltip, minSelectedNode, storageClassTooltip, defaultRequestSize, } from '../../constants/ocs-install';\nimport { NO_PROVISIONER } from '../../constants';\nimport { OCSServiceModel } from '../../models';\nimport { OCSStorageClassDropdown } from '../modals/storage-class-dropdown';\nimport { OSDSizeDropdown } from '../../utils/osd-size-dropdown';\nimport { cephStorageLabel } from '../../selectors';\nimport NodeTable from './node-list';\nimport { PVsAvailableCapacity } from './pvs-available-capacity';\nimport { OCS_FLAG, OCS_CONVERGED_FLAG } from '../../features';\nimport './ocs-install.scss';\nconst makeLabelNodesRequest = (selectedNodes) => {\n    const patch = [\n        {\n            op: 'add',\n            path: '/metadata/labels/cluster.ocs.openshift.io~1openshift-storage',\n            value: '',\n        },\n    ];\n    return _.reduce(selectedNodes, (accumulator, node) => {\n        return hasLabel(node, cephStorageLabel)\n            ? accumulator\n            : [...accumulator, k8sPatch(NodeModel, node, patch)];\n    }, []);\n};\nconst makeOCSRequest = (selectedData, storageClass, osdSize) => {\n    const promises = makeLabelNodesRequest(selectedData);\n    const ocsObj = _.cloneDeep(ocsRequestData);\n    // for baremetal infra\n    if ((storageClass === null || storageClass === void 0 ? void 0 : storageClass.provisioner) === NO_PROVISIONER) {\n        ocsObj.spec.monDataDirHostPath = '/var/lib/rook';\n        ocsObj.spec.storageDeviceSets[0].portable = false;\n    }\n    const scName = getName(storageClass);\n    ocsObj.spec.storageDeviceSets[0].dataPVCTemplate.spec.storageClassName = scName;\n    ocsObj.spec.storageDeviceSets[0].dataPVCTemplate.spec.resources.requests.storage = osdSize;\n    return Promise.all(promises).then(() => {\n        if (!scName) {\n            throw new Error('No StorageClass selected');\n        }\n        return k8sCreate(OCSServiceModel, ocsObj);\n    });\n};\nexport const CreateOCSServiceForm = withHandlePromise((props) => {\n    var _a;\n    const { handlePromise, errorMessage, inProgress, match: { params: { appName, ns }, }, } = props;\n    const [selectedNodes, setSelectedNodes] = React.useState(null);\n    const [visibleRows, setVisibleRows] = React.useState(null);\n    const [osdSize, setOSDSize] = React.useState(defaultRequestSize.NON_BAREMETAL);\n    const [storageClass, setStorageClass] = React.useState(null);\n    const dispatch = useDispatch();\n    const submit = (event) => {\n        event.preventDefault();\n        // eslint-disable-next-line promise/catch-or-return\n        handlePromise(makeOCSRequest(selectedNodes, storageClass, osdSize)).then(() => {\n            dispatch(setFlag(OCS_CONVERGED_FLAG, true));\n            dispatch(setFlag(OCS_FLAG, true));\n            history.push(`/k8s/ns/${ns}/clusterserviceversions/${appName}/${referenceForModel(OCSServiceModel)}/${getName(ocsRequestData)}`);\n        });\n    };\n    const handleStorageClass = (sc) => {\n        setStorageClass(sc);\n        const provisioner = sc === null || sc === void 0 ? void 0 : sc.provisioner; // required if user selects 'No Default Storage Class' option\n        if (provisioner === NO_PROVISIONER) {\n            setOSDSize(defaultRequestSize.BAREMETAL); // for baremetal environment, set requested capacity as 1 Byte\n        }\n        else {\n            setOSDSize(defaultRequestSize.NON_BAREMETAL);\n        }\n    };\n    return (React.createElement(Form, { className: \"co-m-pane__body-group\" },\n        React.createElement(FormGroup, { fieldId: \"select-nodes\", label: \"Nodes\" },\n            React.createElement(\"p\", null,\n                \"Selected nodes will be labeled with\",\n                ' ',\n                React.createElement(\"code\", null, \"cluster.ocs.openshift.io/openshift-storage=\\\"\\\"\"),\n                \" to create the OCS Service unless they are already labeled.\"),\n            React.createElement(Alert, { className: \"co-alert\", variant: \"info\", title: \"A bucket will be created to provide the OCS Service.\", isInline: true }),\n            React.createElement(\"p\", { className: \"co-legend\", \"data-test-id\": \"warning\" }, \"Select at least 3 nodes in different failure domains with minimum requirements of 16 CPUs and 64 GiB of RAM per node.\"),\n            React.createElement(\"p\", null, \"3 selected nodes are used for initial deployment. The remaining selected nodes will be used by OpenShift as scheduling targets for OCS scaling.\"),\n            React.createElement(ListPage, { kind: NodeModel.kind, showTitle: false, ListComponent: NodeTable, customData: { selectedNodes, setSelectedNodes, visibleRows, setVisibleRows } })),\n        React.createElement(FormGroup, { fieldId: \"select-sc\", label: React.createElement(React.Fragment, null,\n                \"Storage Class\",\n                React.createElement(FieldLevelHelp, null, storageClassTooltip)) },\n            React.createElement(\"div\", { className: \"ceph-ocs-install__ocs-service-capacity--dropdown\" },\n                React.createElement(OCSStorageClassDropdown, { onChange: handleStorageClass, \"data-test-id\": \"ocs-dropdown\" })),\n            (storageClass === null || storageClass === void 0 ? void 0 : storageClass.provisioner) === NO_PROVISIONER && (React.createElement(PVsAvailableCapacity, { replica: ocsRequestData.spec.storageDeviceSets[0].replica, \"data-test-id\": \"ceph-ocs-install-pvs-available-capacity\", sc: storageClass }))),\n        (storageClass === null || storageClass === void 0 ? void 0 : storageClass.provisioner) !== NO_PROVISIONER && (React.createElement(FormGroup, { fieldId: \"select-osd-size\", label: React.createElement(React.Fragment, null,\n                \"OCS Service Capacity\",\n                React.createElement(FieldLevelHelp, null, labelTooltip)) },\n            React.createElement(OSDSizeDropdown, { className: \"ceph-ocs-install__ocs-service-capacity--dropdown\", selectedKey: osdSize, onChange: setOSDSize, \"data-test-id\": \"osd-dropdown\" }))),\n        React.createElement(ButtonBar, { errorMessage: errorMessage, inProgress: inProgress },\n            React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                React.createElement(Button, { type: \"button\", variant: \"primary\", onClick: submit, isDisabled: ((_a = selectedNodes === null || selectedNodes === void 0 ? void 0 : selectedNodes.length) !== null && _a !== void 0 ? _a : 0) < minSelectedNode }, \"Create\"),\n                React.createElement(Button, { type: \"button\", variant: \"secondary\", onClick: history.goBack }, \"Cancel\")))));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/create-form.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/create-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { match } from 'react-router';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { Alert, ActionGroup, Button, Form, FormGroup } from '@patternfly/react-core';\nimport {\n  NodeKind,\n  k8sPatch,\n  k8sCreate,\n  referenceForModel,\n  StorageClassResourceKind,\n} from '@console/internal/module/k8s';\nimport { ListPage } from '@console/internal/components/factory';\nimport { NodeModel } from '@console/internal/models';\nimport { hasLabel, getName } from '@console/shared';\nimport {\n  withHandlePromise,\n  HandlePromiseProps,\n  history,\n  FieldLevelHelp,\n  ButtonBar,\n} from '@console/internal/components/utils';\nimport { setFlag } from '@console/internal/actions/features';\nimport {\n  ocsRequestData,\n  labelTooltip,\n  minSelectedNode,\n  storageClassTooltip,\n  defaultRequestSize,\n} from '../../constants/ocs-install';\nimport { NO_PROVISIONER } from '../../constants';\nimport { OCSServiceModel } from '../../models';\nimport { OCSStorageClassDropdown } from '../modals/storage-class-dropdown';\nimport { OSDSizeDropdown } from '../../utils/osd-size-dropdown';\nimport { cephStorageLabel } from '../../selectors';\nimport NodeTable from './node-list';\nimport { PVsAvailableCapacity } from './pvs-available-capacity';\nimport { OCS_FLAG, OCS_CONVERGED_FLAG } from '../../features';\nimport './ocs-install.scss';\n\nconst makeLabelNodesRequest = (selectedNodes: NodeKind[]): Promise<NodeKind>[] => {\n  const patch = [\n    {\n      op: 'add',\n      path: '/metadata/labels/cluster.ocs.openshift.io~1openshift-storage',\n      value: '',\n    },\n  ];\n  return _.reduce(\n    selectedNodes,\n    (accumulator, node) => {\n      return hasLabel(node, cephStorageLabel)\n        ? accumulator\n        : [...accumulator, k8sPatch(NodeModel, node, patch)];\n    },\n    [],\n  );\n};\n\nconst makeOCSRequest = (\n  selectedData: NodeKind[],\n  storageClass: StorageClassResourceKind,\n  osdSize: string,\n): Promise<any> => {\n  const promises = makeLabelNodesRequest(selectedData);\n  const ocsObj = _.cloneDeep(ocsRequestData);\n\n  // for baremetal infra\n  if (storageClass?.provisioner === NO_PROVISIONER) {\n    ocsObj.spec.monDataDirHostPath = '/var/lib/rook';\n    ocsObj.spec.storageDeviceSets[0].portable = false;\n  }\n\n  const scName = getName(storageClass);\n  ocsObj.spec.storageDeviceSets[0].dataPVCTemplate.spec.storageClassName = scName;\n  ocsObj.spec.storageDeviceSets[0].dataPVCTemplate.spec.resources.requests.storage = osdSize;\n\n  return Promise.all(promises).then(() => {\n    if (!scName) {\n      throw new Error('No StorageClass selected');\n    }\n    return k8sCreate(OCSServiceModel, ocsObj);\n  });\n};\n\nexport const CreateOCSServiceForm = withHandlePromise<\n  CreateOCSServiceFormProps & HandlePromiseProps\n>((props) => {\n  const {\n    handlePromise,\n    errorMessage,\n    inProgress,\n    match: {\n      params: { appName, ns },\n    },\n  } = props;\n  const [selectedNodes, setSelectedNodes] = React.useState<NodeKind[]>(null);\n  const [visibleRows, setVisibleRows] = React.useState<NodeKind[]>(null);\n  const [osdSize, setOSDSize] = React.useState(defaultRequestSize.NON_BAREMETAL);\n  const [storageClass, setStorageClass] = React.useState<StorageClassResourceKind>(null);\n  const dispatch = useDispatch();\n\n  const submit = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    // eslint-disable-next-line promise/catch-or-return\n    handlePromise(makeOCSRequest(selectedNodes, storageClass, osdSize)).then(() => {\n      dispatch(setFlag(OCS_CONVERGED_FLAG, true));\n      dispatch(setFlag(OCS_FLAG, true));\n      history.push(\n        `/k8s/ns/${ns}/clusterserviceversions/${appName}/${referenceForModel(\n          OCSServiceModel,\n        )}/${getName(ocsRequestData)}`,\n      );\n    });\n  };\n\n  const handleStorageClass = (sc: StorageClassResourceKind) => {\n    setStorageClass(sc);\n    const provisioner: string = sc?.provisioner; // required if user selects 'No Default Storage Class' option\n\n    if (provisioner === NO_PROVISIONER) {\n      setOSDSize(defaultRequestSize.BAREMETAL); // for baremetal environment, set requested capacity as 1 Byte\n    } else {\n      setOSDSize(defaultRequestSize.NON_BAREMETAL);\n    }\n  };\n\n  return (\n    <Form className=\"co-m-pane__body-group\">\n      <FormGroup fieldId=\"select-nodes\" label=\"Nodes\">\n        <p>\n          Selected nodes will be labeled with{' '}\n          <code>cluster.ocs.openshift.io/openshift-storage=&quot;&quot;</code> to create the OCS\n          Service unless they are already labeled.\n        </p>\n        <Alert\n          className=\"co-alert\"\n          variant=\"info\"\n          title=\"A bucket will be created to provide the OCS Service.\"\n          isInline\n        />\n        <p className=\"co-legend\" data-test-id=\"warning\">\n          Select at least 3 nodes in different failure domains with minimum requirements of 16 CPUs\n          and 64 GiB of RAM per node.\n        </p>\n        <p>\n          3 selected nodes are used for initial deployment. The remaining selected nodes will be\n          used by OpenShift as scheduling targets for OCS scaling.\n        </p>\n        <ListPage\n          kind={NodeModel.kind}\n          showTitle={false}\n          ListComponent={NodeTable}\n          customData={{ selectedNodes, setSelectedNodes, visibleRows, setVisibleRows }}\n        />\n      </FormGroup>\n      <FormGroup\n        fieldId=\"select-sc\"\n        label={\n          <>\n            Storage Class\n            <FieldLevelHelp>{storageClassTooltip}</FieldLevelHelp>\n          </>\n        }\n      >\n        <div className=\"ceph-ocs-install__ocs-service-capacity--dropdown\">\n          <OCSStorageClassDropdown onChange={handleStorageClass} data-test-id=\"ocs-dropdown\" />\n        </div>\n        {storageClass?.provisioner === NO_PROVISIONER && (\n          <PVsAvailableCapacity\n            replica={ocsRequestData.spec.storageDeviceSets[0].replica}\n            data-test-id=\"ceph-ocs-install-pvs-available-capacity\"\n            sc={storageClass}\n          />\n        )}\n      </FormGroup>\n      {storageClass?.provisioner !== NO_PROVISIONER && (\n        <FormGroup\n          fieldId=\"select-osd-size\"\n          label={\n            <>\n              OCS Service Capacity\n              <FieldLevelHelp>{labelTooltip}</FieldLevelHelp>\n            </>\n          }\n        >\n          <OSDSizeDropdown\n            className=\"ceph-ocs-install__ocs-service-capacity--dropdown\"\n            selectedKey={osdSize}\n            onChange={setOSDSize}\n            data-test-id=\"osd-dropdown\"\n          />\n        </FormGroup>\n      )}\n      <ButtonBar errorMessage={errorMessage} inProgress={inProgress}>\n        <ActionGroup className=\"pf-c-form\">\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            onClick={submit}\n            isDisabled={(selectedNodes?.length ?? 0) < minSelectedNode}\n          >\n            Create\n          </Button>\n          <Button type=\"button\" variant=\"secondary\" onClick={history.goBack}>\n            Cancel\n          </Button>\n        </ActionGroup>\n      </ButtonBar>\n    </Form>\n  );\n});\n\ntype CreateOCSServiceFormProps = {\n  match: match<{ appName: string; ns: string }>;\n};\n"]}]}