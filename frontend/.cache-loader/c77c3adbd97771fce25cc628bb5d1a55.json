{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-deployment.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-deployment.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedDeploymentModel } from '../../models';\nexport const menuActions = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedDeploymentModel), EditHealthChecks, ...Kebab.factory.common];\nconst kind = FederatedDeploymentModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst FederatedDeploymentTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n            sortField: 'spec.selector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nFederatedDeploymentTableHeader.displayName = 'FederatedDeploymentTableHeader';\nconst FederatedDeploymentTableRow = ({ obj: deployment, index, key, style }) => {\n    return (React.createElement(TableRow, { id: deployment.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: deployment.metadata.name, namespace: deployment.metadata.namespace, title: deployment.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: deployment.metadata.namespace, title: deployment.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(LabelList, { kind: kind, labels: deployment.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Selector, { selector: deployment.spec.selector, namespace: deployment.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: deployment }))));\n};\nconst FederatedDeploymentDetails = ({ obj: deployment }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: `${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_24') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}` }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: deployment, showPodSelector: true, showNodeSelector: true, showTolerations: true }))))));\n};\nconst { details, editYaml, events } = navFactory;\nexport const FederatedDeployments = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Federated Deployments\", Header: FederatedDeploymentTableHeader.bind(null, t), Row: FederatedDeploymentTableRow, virtualize: true }));\n};\nexport const FederatedDeploymentsPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: FederatedDeployments, kind: kind }, props));\nexport const FederatedDeploymentsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(FederatedDeploymentDetails)), editYaml(), events(ResourceEventStream)] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-deployment.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-deployment.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedDeploymentModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedDeploymentModel), EditHealthChecks, ...Kebab.factory.common];\n\nconst kind = FederatedDeploymentModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedDeploymentTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nFederatedDeploymentTableHeader.displayName = 'FederatedDeploymentTableHeader';\n\nconst FederatedDeploymentTableRow: RowFunction<K8sResourceKind> = ({ obj: deployment, index, key, style }) => {\n  return (\n    <TableRow id={deployment.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={deployment.metadata.name} namespace={deployment.metadata.namespace} title={deployment.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={deployment.metadata.namespace} title={deployment.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={kind} labels={deployment.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Selector selector={deployment.spec.selector} namespace={deployment.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={deployment} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst FederatedDeploymentDetails: React.FC<FederatedDeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={`${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_24') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={deployment} showPodSelector showNodeSelector showTolerations />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml, events } = navFactory;\nexport const FederatedDeployments: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Federated Deployments\" Header={FederatedDeploymentTableHeader.bind(null, t)} Row={FederatedDeploymentTableRow} virtualize />;\n}\n\nexport const FederatedDeploymentsPage: React.FC<FederatedDeploymentsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedDeployments} kind={kind} {...props} />;\n\nexport const FederatedDeploymentsDetailsPage: React.FC<FederatedDeploymentsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedDeploymentDetails)), editYaml(), events(ResourceEventStream)]} />;\n\ntype FederatedDeploymentDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedDeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedDeploymentsDetailsPageProps = {\n  match: any;\n};\n"]}]}