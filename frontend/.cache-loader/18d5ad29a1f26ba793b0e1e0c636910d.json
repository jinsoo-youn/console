{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/modals/update-strategy-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/modals/update-strategy-modal.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { k8sPatch } from '@console/internal/module/k8s';\nimport { createModalLauncher, ModalBody, ModalSubmitFooter, ModalTitle, } from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { ConfigureUpdateStrategy, getNumberOrPercent, } from '@console/internal/components/modals/configure-update-strategy-modal';\nexport const UpdateStrategyModal = withHandlePromise((props) => {\n    const { path, resource, resourceKind, title, handlePromise, errorMessage, inProgress, defaultValue, cancel, close, } = props;\n    const getPath = path.substring(1).replace('/', '.');\n    const [strategyType, setStrategyType] = React.useState(_.get(resource, `${getPath}.type`) || defaultValue);\n    const [maxUnavailable, setMaxUnavailable] = React.useState(_.get(resource, `${getPath}.rollingUpdate.maxUnavailable`, '25%'));\n    const [maxSurge, setMaxSurge] = React.useState(_.get(resource, `${getPath}.rollingUpdate.maxSurge`, '25%'));\n    const submit = (event) => {\n        event.preventDefault();\n        const patch = { path: `${path}/rollingUpdate`, op: 'remove' };\n        if (strategyType === 'RollingUpdate') {\n            patch.value = {\n                maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n                maxSurge: getNumberOrPercent(maxSurge || '25%'),\n            };\n            patch.op = 'add';\n        }\n        return handlePromise(k8sPatch(resourceKind, resource, [\n            patch,\n            { path: `${path}/type`, value: strategyType, op: 'replace' },\n        ])).then(close, () => { });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content\" },\n        React.createElement(ModalTitle, null, title),\n        React.createElement(ModalBody, null,\n            React.createElement(ConfigureUpdateStrategy, { strategyType: strategyType, maxUnavailable: maxUnavailable, maxSurge: maxSurge, onChangeStrategyType: setStrategyType, onChangeMaxUnavailable: setMaxUnavailable, onChangeMaxSurge: setMaxSurge })),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, inProgress: inProgress, submitText: \"Save\", cancel: cancel })));\n});\nexport const updateStrategyModal = createModalLauncher(UpdateStrategyModal);\nUpdateStrategyModal.displayName = 'UpdateStrategyModal';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/modals/update-strategy-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/modals/update-strategy-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { K8sKind, k8sPatch, K8sResourceKind, Patch } from '@console/internal/module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport {\n  ConfigureUpdateStrategy,\n  getNumberOrPercent,\n} from '@console/internal/components/modals/configure-update-strategy-modal';\n\nexport const UpdateStrategyModal = withHandlePromise((props: UpdateStrategyModalProps) => {\n  const {\n    path,\n    resource,\n    resourceKind,\n    title,\n    handlePromise,\n    errorMessage,\n    inProgress,\n    defaultValue,\n    cancel,\n    close,\n  } = props;\n  const getPath = path.substring(1).replace('/', '.');\n  const [strategyType, setStrategyType] = React.useState(\n    _.get(resource, `${getPath}.type`) || defaultValue,\n  );\n  const [maxUnavailable, setMaxUnavailable] = React.useState(\n    _.get(resource, `${getPath}.rollingUpdate.maxUnavailable`, '25%'),\n  );\n  const [maxSurge, setMaxSurge] = React.useState(\n    _.get(resource, `${getPath}.rollingUpdate.maxSurge`, '25%'),\n  );\n\n  const submit = (event) => {\n    event.preventDefault();\n\n    const patch: Patch = { path: `${path}/rollingUpdate`, op: 'remove' };\n    if (strategyType === 'RollingUpdate') {\n      patch.value = {\n        maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n        maxSurge: getNumberOrPercent(maxSurge || '25%'),\n      };\n      patch.op = 'add';\n    }\n\n    return handlePromise(\n      k8sPatch(resourceKind, resource, [\n        patch,\n        { path: `${path}/type`, value: strategyType, op: 'replace' },\n      ]),\n    ).then(close, () => {});\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>\n        <ConfigureUpdateStrategy\n          strategyType={strategyType}\n          maxUnavailable={maxUnavailable}\n          maxSurge={maxSurge}\n          onChangeStrategyType={setStrategyType}\n          onChangeMaxUnavailable={setMaxUnavailable}\n          onChangeMaxSurge={setMaxSurge}\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitText=\"Save\"\n        cancel={cancel}\n      />\n    </form>\n  );\n});\n\nexport const updateStrategyModal = createModalLauncher(UpdateStrategyModal);\n\nUpdateStrategyModal.displayName = 'UpdateStrategyModal';\n\nexport type UpdateStrategyModalProps = {\n  defaultValue: any;\n  path: string;\n  resource: K8sResourceKind;\n  resourceKind: K8sKind;\n  title: string;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n"]}]}