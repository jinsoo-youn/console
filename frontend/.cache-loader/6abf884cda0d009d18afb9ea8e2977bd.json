{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/useCloudShellWorkspace.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/useCloudShellWorkspace.ts","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as React from 'react';\nimport { referenceForModel, k8sList } from '@console/internal/module/k8s';\nimport { useK8sWatchResource, } from '@console/internal/components/utils/k8s-watch-hook';\nimport { CLOUD_SHELL_LABEL, CLOUD_SHELL_CREATOR_LABEL, CLOUD_SHELL_RESTRICTED_ANNOTATION, startWorkspace, } from './cloud-shell-utils';\nimport { useAccessReview2 } from '@console/internal/components/utils';\nimport { ProjectModel } from '@console/internal/models';\nimport { useSafetyFirst } from '@console/internal/components/safety-first';\nimport { WorkspaceModel } from '../../models';\nconst findWorkspace = (data) => {\n    if (Array.isArray(data)) {\n        return data.find((d) => {\n            var _a, _b, _c;\n            return ((_b = (_a = d === null || d === void 0 ? void 0 : d.metadata) === null || _a === void 0 ? void 0 : _a.annotations) === null || _b === void 0 ? void 0 : _b[CLOUD_SHELL_RESTRICTED_ANNOTATION]) === 'true' &&\n                !((_c = d === null || d === void 0 ? void 0 : d.metadata) === null || _c === void 0 ? void 0 : _c.deletionTimestamp);\n        });\n    }\n    return undefined;\n};\nconst useCloudShellWorkspace = (user, defaultNamespace = null) => {\n    var _a, _b, _c, _d;\n    const [namespace, setNamespace] = useSafetyFirst(defaultNamespace);\n    const [searching, setSearching] = useSafetyFirst(false);\n    const [noNamespaceFound, setNoNamespaceFound] = useSafetyFirst(false);\n    // sync defaultNamespace to namespace\n    React.useEffect(() => {\n        setNamespace(defaultNamespace);\n        // a new namespace means we can start a new search\n        setNoNamespaceFound(false);\n    }, [defaultNamespace, setNamespace, setNoNamespaceFound]);\n    const [canListWorkspaces, loadingAccessReview] = useAccessReview2({\n        group: WorkspaceModel.apiGroup,\n        resource: WorkspaceModel.plural,\n        verb: 'list',\n    });\n    const uid = (_a = user === null || user === void 0 ? void 0 : user.metadata) === null || _a === void 0 ? void 0 : _a.uid;\n    const username = (_b = user === null || user === void 0 ? void 0 : user.metadata) === null || _b === void 0 ? void 0 : _b.name;\n    const isKubeAdmin = !uid && username === 'kube:admin';\n    const resource = React.useMemo(() => {\n        if (loadingAccessReview || (!canListWorkspaces && !namespace)) {\n            return undefined;\n        }\n        const result = {\n            kind: referenceForModel(WorkspaceModel),\n            isList: true,\n            selector: {\n                matchLabels: {\n                    [CLOUD_SHELL_LABEL]: 'true',\n                    [CLOUD_SHELL_CREATOR_LABEL]: isKubeAdmin ? '' : uid,\n                },\n            },\n        };\n        if (!canListWorkspaces) {\n            result.namespace = namespace;\n        }\n        return result;\n    }, [isKubeAdmin, uid, namespace, loadingAccessReview, canListWorkspaces]);\n    // call k8s api to fetch workspace\n    const [data, loaded, loadError] = useK8sWatchResource(resource);\n    const workspace = findWorkspace(data);\n    const searchNamespaces = \n    // are we currently searching\n    searching ||\n        // wait for access review to return\n        (!loadingAccessReview &&\n            // user cannot list workspaces at the cluster scope\n            !canListWorkspaces &&\n            // fetching the workspace succeeded or failed\n            (loaded || loadError) &&\n            // was a workspace was found\n            !workspace &&\n            // did a previous search result in no namespace found\n            !noNamespaceFound);\n    // FIXME need to use a service account on the backend to find the workspace instead of inefficiently looping through namespaces\n    React.useEffect(() => {\n        let unmounted = false;\n        if (searchNamespaces) {\n            (() => __awaiter(void 0, void 0, void 0, function* () {\n                setNoNamespaceFound(false);\n                setSearching(true);\n                setNamespace(undefined);\n                try {\n                    const projects = yield k8sList(ProjectModel);\n                    if (unmounted)\n                        return;\n                    if (Array.isArray(projects)) {\n                        for (const project of projects) {\n                            const projectName = project.metadata.name;\n                            try {\n                                // search each project sequentially\n                                // eslint-disable-next-line no-await-in-loop\n                                const workspaceList = yield k8sList(WorkspaceModel, {\n                                    ns: projectName,\n                                    labelSelector: {\n                                        matchLabels: {\n                                            [CLOUD_SHELL_LABEL]: 'true',\n                                            [CLOUD_SHELL_CREATOR_LABEL]: isKubeAdmin ? '' : uid,\n                                        },\n                                    },\n                                });\n                                if (unmounted)\n                                    return;\n                                const foundWorkspace = findWorkspace(workspaceList);\n                                if (foundWorkspace) {\n                                    setNamespace(projectName);\n                                    return;\n                                }\n                            }\n                            catch (_a) {\n                                // ignore and move on to the next namespace\n                            }\n                        }\n                    }\n                    setNoNamespaceFound(true);\n                }\n                catch (e) {\n                    setNoNamespaceFound(true);\n                }\n                finally {\n                    setSearching(false);\n                }\n            }))();\n        }\n        return () => {\n            unmounted = true;\n        };\n    }, [isKubeAdmin, searchNamespaces, setNamespace, uid, setNoNamespaceFound, setSearching]);\n    React.useEffect(() => {\n        if ((workspace === null || workspace === void 0 ? void 0 : workspace.spec) && !workspace.spec.started) {\n            startWorkspace(workspace);\n        }\n        // Run this effect if the workspace name or namespace changes.\n        // This effect should only be run once per workspace.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_c = workspace === null || workspace === void 0 ? void 0 : workspace.metadata) === null || _c === void 0 ? void 0 : _c.name, (_d = workspace === null || workspace === void 0 ? void 0 : workspace.metadata) === null || _d === void 0 ? void 0 : _d.namespace]);\n    return [\n        workspace,\n        // loaded if we have a resource loaded and currently not searching\n        // or if the search resulted in no namespace found\n        (!!resource && !searching && !searchNamespaces && loaded) || noNamespaceFound,\n        // provide the error associated with fetching the workspace\n        resource && !searching && !searchNamespaces ? loadError : undefined,\n    ];\n};\nexport default useCloudShellWorkspace;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/useCloudShellWorkspace.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/useCloudShellWorkspace.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { UserKind, referenceForModel, k8sList } from '@console/internal/module/k8s';\nimport {\n  WatchK8sResource,\n  useK8sWatchResource,\n  WatchK8sResult,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  CLOUD_SHELL_LABEL,\n  CLOUD_SHELL_CREATOR_LABEL,\n  CloudShellResource,\n  CLOUD_SHELL_RESTRICTED_ANNOTATION,\n  startWorkspace,\n} from './cloud-shell-utils';\nimport { useAccessReview2 } from '@console/internal/components/utils';\nimport { ProjectModel } from '@console/internal/models';\nimport { useSafetyFirst } from '@console/internal/components/safety-first';\nimport { WorkspaceModel } from '../../models';\n\nconst findWorkspace = (data?: CloudShellResource[]): CloudShellResource | undefined => {\n  if (Array.isArray(data)) {\n    return data.find(\n      (d) =>\n        d?.metadata?.annotations?.[CLOUD_SHELL_RESTRICTED_ANNOTATION] === 'true' &&\n        !d?.metadata?.deletionTimestamp,\n    );\n  }\n  return undefined;\n};\n\nconst useCloudShellWorkspace = (\n  user: UserKind,\n  defaultNamespace: string = null,\n): WatchK8sResult<CloudShellResource> => {\n  const [namespace, setNamespace] = useSafetyFirst(defaultNamespace);\n  const [searching, setSearching] = useSafetyFirst<boolean>(false);\n  const [noNamespaceFound, setNoNamespaceFound] = useSafetyFirst<boolean>(false);\n\n  // sync defaultNamespace to namespace\n  React.useEffect(() => {\n    setNamespace(defaultNamespace);\n    // a new namespace means we can start a new search\n    setNoNamespaceFound(false);\n  }, [defaultNamespace, setNamespace, setNoNamespaceFound]);\n\n  const [canListWorkspaces, loadingAccessReview] = useAccessReview2({\n    group: WorkspaceModel.apiGroup,\n    resource: WorkspaceModel.plural,\n    verb: 'list',\n  });\n\n  const uid = user?.metadata?.uid;\n  const username = user?.metadata?.name;\n  const isKubeAdmin = !uid && username === 'kube:admin';\n  const resource = React.useMemo<WatchK8sResource>(() => {\n    if (loadingAccessReview || (!canListWorkspaces && !namespace)) {\n      return undefined;\n    }\n    const result: WatchK8sResource = {\n      kind: referenceForModel(WorkspaceModel),\n      isList: true,\n      selector: {\n        matchLabels: {\n          [CLOUD_SHELL_LABEL]: 'true',\n          [CLOUD_SHELL_CREATOR_LABEL]: isKubeAdmin ? '' : uid,\n        },\n      },\n    };\n\n    if (!canListWorkspaces) {\n      result.namespace = namespace;\n    }\n    return result;\n  }, [isKubeAdmin, uid, namespace, loadingAccessReview, canListWorkspaces]);\n\n  // call k8s api to fetch workspace\n  const [data, loaded, loadError] = useK8sWatchResource<CloudShellResource[]>(resource);\n  const workspace = findWorkspace(data);\n\n  const searchNamespaces =\n    // are we currently searching\n    searching ||\n    // wait for access review to return\n    (!loadingAccessReview &&\n      // user cannot list workspaces at the cluster scope\n      !canListWorkspaces &&\n      // fetching the workspace succeeded or failed\n      (loaded || loadError) &&\n      // was a workspace was found\n      !workspace &&\n      // did a previous search result in no namespace found\n      !noNamespaceFound);\n\n  // FIXME need to use a service account on the backend to find the workspace instead of inefficiently looping through namespaces\n  React.useEffect(() => {\n    let unmounted = false;\n    if (searchNamespaces) {\n      (async () => {\n        setNoNamespaceFound(false);\n        setSearching(true);\n        setNamespace(undefined);\n        try {\n          const projects = await k8sList(ProjectModel);\n          if (unmounted) return;\n          if (Array.isArray(projects)) {\n            for (const project of projects) {\n              const projectName = project.metadata.name;\n              try {\n                // search each project sequentially\n                // eslint-disable-next-line no-await-in-loop\n                const workspaceList = await k8sList(WorkspaceModel, {\n                  ns: projectName,\n                  labelSelector: {\n                    matchLabels: {\n                      [CLOUD_SHELL_LABEL]: 'true',\n                      [CLOUD_SHELL_CREATOR_LABEL]: isKubeAdmin ? '' : uid,\n                    },\n                  },\n                });\n                if (unmounted) return;\n                const foundWorkspace = findWorkspace(workspaceList);\n                if (foundWorkspace) {\n                  setNamespace(projectName);\n                  return;\n                }\n              } catch {\n                // ignore and move on to the next namespace\n              }\n            }\n          }\n          setNoNamespaceFound(true);\n        } catch (e) {\n          setNoNamespaceFound(true);\n        } finally {\n          setSearching(false);\n        }\n      })();\n    }\n    return () => {\n      unmounted = true;\n    };\n  }, [isKubeAdmin, searchNamespaces, setNamespace, uid, setNoNamespaceFound, setSearching]);\n\n  React.useEffect(() => {\n    if (workspace?.spec && !workspace.spec.started) {\n      startWorkspace(workspace);\n    }\n    // Run this effect if the workspace name or namespace changes.\n    // This effect should only be run once per workspace.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [workspace?.metadata?.name, workspace?.metadata?.namespace]);\n\n  return [\n    workspace,\n    // loaded if we have a resource loaded and currently not searching\n    // or if the search resulted in no namespace found\n    (!!resource && !searching && !searchNamespaces && loaded) || noNamespaceFound,\n    // provide the error associated with fetching the workspace\n    resource && !searching && !searchNamespaces ? loadError : undefined,\n  ];\n};\n\nexport default useCloudShellWorkspace;\n"]}]}