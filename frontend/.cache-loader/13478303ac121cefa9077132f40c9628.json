{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/remove-member-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/remove-member-modal.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ModalBody, ModalSubmitFooter, ModalTitle, createModalLauncher, } from '../../factory/modal';\nimport { withHandlePromise } from '../../utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId } from '../../../hypercloud/auth';\nexport const RemoveMemberModal = withHandlePromise((props) => {\n    const [errorMsg, setError] = React.useState('');\n    const submit = (e) => {\n        e.preventDefault();\n        // Append to an existing array, but handle the special case when the array is null.\n        coFetchJSON(`/api/multi-hypercloud/cluster/remove_member?userId=${getId()}&cluster=${props.clusterName}&target${props.type}=${props.member}`, 'POST')\n            .then((res) => {\n            props.close();\n        })\n            .catch((err) => {\n            setError(\"Fail to remove member(s). \" + err);\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content \" },\n        React.createElement(ModalTitle, null,\n            React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r\" }),\n            `Delete ${props.member}?`),\n        React.createElement(ModalBody, { className: \"modal-body\" },\n            React.createElement(\"div\", null,\n                \"Are you sure you want to delete \",\n                props.type,\n                \" \",\n                React.createElement(\"strong\", { className: \"co-break-word\" }, props.member),\n                \" in cluster \",\n                React.createElement(\"strong\", null, props.clusterName),\n                \"?\")),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMsg, inProgress: props.inProgress, submitText: 'Delete', cancel: props.cancel })));\n});\nexport const removeMemberModal = createModalLauncher(RemoveMemberModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/remove-member-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/remove-member-modal.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EACL,SAAS,EAET,iBAAiB,EACjB,UAAU,EACV,mBAAmB,GACpB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAsB,iBAAiB,EAAE,MAAM,aAAa,CAAC;AACpE,OAAO,EAAE,6BAA6B,EAAE,MAAM,iBAAiB,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAEjD,MAAM,CAAC,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,CAAC,KAA6B,EAAE,EAAE;IACnF,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;IAE/C,MAAM,MAAM,GAA4C,CAAC,CAAC,EAAE,EAAE;QAC5D,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,mFAAmF;QACnF,WAAW,CAAC,sDAAsD,KAAK,EAAE,YAAY,KAAK,CAAC,WAAW,UAAU,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC;aAClJ,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,KAAK,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,QAAQ,CAAC,4BAA4B,GAAG,GAAG,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAA;IACN,CAAC,CAAC;IAEF,OAAO,CACL,8BAAM,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,gBAAgB;QAC1D,oBAAC,UAAU;YACT,oBAAC,6BAA6B,IAAC,SAAS,EAAC,iBAAiB,GAAG;YAC5D,UAAU,KAAK,CAAC,MAAM,GAAG,CACf;QACb,oBAAC,SAAS,IAAC,SAAS,EAAC,YAAY;YAC/B;;gBACmC,KAAK,CAAC,IAAI;;gBAAE,gCAAQ,SAAS,EAAC,eAAe,IAAE,KAAK,CAAC,MAAM,CAAU;;gBAAY,oCAAS,KAAK,CAAC,WAAW,CAAU;oBAClJ,CACI;QACZ,oBAAC,iBAAiB,IAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,UAAU,EAAC,QAAQ,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,GAAI,CAChH,CACV,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAG,mBAAmB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '../../factory/modal';\nimport { HandlePromiseProps, withHandlePromise } from '../../utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId } from '../../../hypercloud/auth';\n\nexport const RemoveMemberModal = withHandlePromise((props: RemoveMemberModalProps) => {\n  const [errorMsg, setError] = React.useState('')\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    // Append to an existing array, but handle the special case when the array is null.\n    coFetchJSON(`/api/multi-hypercloud/cluster/remove_member?userId=${getId()}&cluster=${props.clusterName}&target${props.type}=${props.member}`, 'POST')\n      .then((res) => {\n        props.close();\n      })\n      .catch((err) => {\n        setError(\"Fail to remove member(s). \" + err);\n      })\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n        <ModalTitle>\n          <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />\n          {`Delete ${props.member}?`}\n        </ModalTitle>\n        <ModalBody className=\"modal-body\">\n          <div>\n            Are you sure you want to delete {props.type} <strong className=\"co-break-word\">{props.member}</strong> in cluster <strong>{props.clusterName}</strong>?\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter errorMessage={errorMsg} inProgress={props.inProgress} submitText='Delete' cancel={props.cancel} />\n      </form>\n  );\n});\n\nexport const removeMemberModal = createModalLauncher(RemoveMemberModal);\n\nexport type RemoveMemberModalProps = {\n  clusterName: string;\n  type: string;\n  member: string;\n} & ModalComponentProps &\n  HandlePromiseProps;\n"]}]}