{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/features.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/features.ts","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const isModelFeatureFlag = (e) => {\n    return e.type === 'FeatureFlag/Model';\n};\nexport const isCustomFeatureFlag = (e) => {\n    return e.type === 'FeatureFlag/Custom';\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/features.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/features.ts"],"names":[],"mappings":"AA2BA,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,CAAY,EAAyB,EAAE;IACxE,OAAO,CAAC,CAAC,IAAI,KAAK,mBAAmB,CAAC;AACxC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,CAAY,EAA0B,EAAE;IAC1E,OAAO,CAAC,CAAC,IAAI,KAAK,oBAAoB,CAAC;AACzC,CAAC,CAAC","sourcesContent":["import { Dispatch } from 'react-redux';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { Extension, AlwaysOnExtension } from './base';\nimport { Action } from 'typesafe-actions';\n\nnamespace ExtensionProperties {\n  export interface ModelFeatureFlag {\n    /** The name of the feature flag. */\n    flag: string;\n    /** If a CRD for this model exists, the feature will be enabled. */\n    model: K8sKind;\n  }\n\n  export interface CustomFeatureFlag {\n    /** Function used to detect the feature and set arbitrary flag name/value via Redux action dispatch. */\n    detect: FeatureDetector;\n  }\n}\n\nexport interface ModelFeatureFlag extends AlwaysOnExtension<ExtensionProperties.ModelFeatureFlag> {\n  type: 'FeatureFlag/Model';\n}\n\nexport interface CustomFeatureFlag extends Extension<ExtensionProperties.CustomFeatureFlag> {\n  type: 'FeatureFlag/Custom';\n}\n\nexport const isModelFeatureFlag = (e: Extension): e is ModelFeatureFlag => {\n  return e.type === 'FeatureFlag/Model';\n};\n\nexport const isCustomFeatureFlag = (e: Extension): e is CustomFeatureFlag => {\n  return e.type === 'FeatureFlag/Custom';\n};\n\nexport type FeatureDetector = (dispatch: Dispatch) => Promise<void | Action>;\n"]}]}