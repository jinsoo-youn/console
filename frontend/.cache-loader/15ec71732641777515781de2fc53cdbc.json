{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/index.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/index.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { AsyncComponent } from '../utils/async';\n// Constants\nexport const PROMETHEUS_BASE_PATH = window.SERVER_FLAGS.prometheusBaseURL;\nexport const PROMETHEUS_TENANCY_BASE_PATH = window.SERVER_FLAGS.prometheusTenancyBaseURL;\nexport const ALERT_MANAGER_BASE_PATH = window.SERVER_FLAGS.alertManagerBaseURL;\n// Components\nexport * from './require-prometheus';\nexport { errorStatus, Status } from './status';\nexport const Area = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('./graph-loader').then((c) => c.Area) }, props)));\nexport const Bar = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('./graph-loader').then((c) => c.Bar) }, props)));\nexport const Gauge = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('./graph-loader').then((c) => c.Gauge) }, props)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/index.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAEhD,YAAY;AACZ,MAAM,CAAC,MAAM,oBAAoB,GAAG,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC;AAC1E,MAAM,CAAC,MAAM,4BAA4B,GAAG,MAAM,CAAC,YAAY,CAAC,wBAAwB,CAAC;AACzF,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC;AAE/E,aAAa;AACb,cAAc,sBAAsB,CAAC;AACrC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAC/C,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAC7B,oBAAC,cAAc,kBAAC,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAM,KAAK,EAAI,CAC1F,CAAC;AACF,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAC5B,oBAAC,cAAc,kBAAC,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAM,KAAK,EAAI,CACzF,CAAC;AACF,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAC9B,oBAAC,cAAc,kBAAC,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAM,KAAK,EAAI,CAC3F,CAAC","sourcesContent":["import * as React from 'react';\nimport { AsyncComponent } from '../utils/async';\n\n// Constants\nexport const PROMETHEUS_BASE_PATH = window.SERVER_FLAGS.prometheusBaseURL;\nexport const PROMETHEUS_TENANCY_BASE_PATH = window.SERVER_FLAGS.prometheusTenancyBaseURL;\nexport const ALERT_MANAGER_BASE_PATH = window.SERVER_FLAGS.alertManagerBaseURL;\n\n// Components\nexport * from './require-prometheus';\nexport { errorStatus, Status } from './status';\nexport const Area = (props) => (\n  <AsyncComponent loader={() => import('./graph-loader').then((c) => c.Area)} {...props} />\n);\nexport const Bar = (props) => (\n  <AsyncComponent loader={() => import('./graph-loader').then((c) => c.Bar)} {...props} />\n);\nexport const Gauge = (props) => (\n  <AsyncComponent loader={() => import('./graph-loader').then((c) => c.Gauge)} {...props} />\n);\n\n// Types\nexport type DataPoint<X = Date | number | string> = {\n  x?: X;\n  y?: number;\n  label?: string;\n  metric?: { [key: string]: string };\n  description?: (date: string, value: string) => string;\n};\n\nexport type PrometheusLabels = { [key: string]: string };\nexport type PrometheusValue = [number, string];\n\n// Only covers range and instant vector responses for now.\nexport type PrometheusResult = {\n  metric: PrometheusLabels;\n  values?: PrometheusValue[];\n  value?: PrometheusValue;\n};\n\nexport type PrometheusData = {\n  resultType: 'matrix' | 'vector' | 'scalar' | 'string';\n  result: PrometheusResult[];\n};\n\nexport type PrometheusResponse = {\n  status: string;\n  data: PrometheusData;\n  errorType?: string;\n  error?: string;\n  warnings?: string[];\n};\n\nexport type DomainPadding =\n  | number\n  | {\n      x?: number | [number, number];\n      y?: number | [number, number];\n    };\n"]}]}