{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/resource-label-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/resource-label-utils.ts","mtime":1616735742400},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nexport const getAppLabels = (name, application, imageStreamName, selectedTag, namespace) => {\n    const labels = Object.assign({ app: name, 'app.kubernetes.io/instance': name, 'app.kubernetes.io/component': name }, (imageStreamName && {\n        'app.kubernetes.io/name': imageStreamName,\n        'app.openshift.io/runtime': imageStreamName,\n    }));\n    if (application && application.trim().length > 0) {\n        labels['app.kubernetes.io/part-of'] = application;\n    }\n    if (selectedTag) {\n        labels['app.openshift.io/runtime-version'] = selectedTag;\n    }\n    if (namespace) {\n        labels['app.openshift.io/runtime-namespace'] = namespace;\n    }\n    return labels;\n};\nexport const getGitAnnotations = (gitURL, gitRef) => {\n    const ref = gitRef || 'master';\n    return {\n        'app.openshift.io/vcs-uri': gitURL,\n        'app.openshift.io/vcs-ref': ref,\n    };\n};\nexport const getCommonAnnotations = () => {\n    return {\n        'openshift.io/generated-by': 'OpenShiftWebConsole',\n    };\n};\nexport const getTriggerAnnotation = (name, namespace, imageTrigger, tag = 'latest') => ({\n    [TRIGGERS_ANNOTATION]: JSON.stringify([\n        {\n            from: { kind: 'ImageStreamTag', name: `${name}:${tag}`, namespace },\n            fieldPath: `spec.template.spec.containers[?(@.name==\"${name}\")].image`,\n            pause: `${!imageTrigger}`,\n        },\n    ]),\n});\nexport const getPodLabels = (name) => {\n    return {\n        app: name,\n        deploymentconfig: name,\n    };\n};\nexport const mergeData = (originalResource, newResource) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const mergedData = _.merge({}, originalResource || {}, newResource);\n    mergedData.metadata.labels = newResource.metadata.labels;\n    if (mergedData.metadata.annotations) {\n        mergedData.metadata.annotations = newResource.metadata.annotations;\n    }\n    if ((_c = (_b = (_a = mergedData.spec) === null || _a === void 0 ? void 0 : _a.template) === null || _b === void 0 ? void 0 : _b.metadata) === null || _c === void 0 ? void 0 : _c.labels) {\n        mergedData.spec.template.metadata.labels = (_f = (_e = (_d = newResource.spec) === null || _d === void 0 ? void 0 : _d.template) === null || _e === void 0 ? void 0 : _e.metadata) === null || _f === void 0 ? void 0 : _f.labels;\n    }\n    if ((_j = (_h = (_g = mergedData.spec) === null || _g === void 0 ? void 0 : _g.template) === null || _h === void 0 ? void 0 : _h.spec) === null || _j === void 0 ? void 0 : _j.containers) {\n        mergedData.spec.template.spec.containers = newResource.spec.template.spec.containers;\n    }\n    if ((_k = mergedData === null || mergedData === void 0 ? void 0 : mergedData.spec) === null || _k === void 0 ? void 0 : _k.strategy) {\n        mergedData.spec.strategy = newResource.spec.strategy;\n    }\n    if ((_l = mergedData.spec) === null || _l === void 0 ? void 0 : _l.triggers) {\n        mergedData.spec.triggers = newResource.spec.triggers;\n    }\n    return mergedData;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/resource-label-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/resource-label-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\n\nexport const getAppLabels = (\n  name: string,\n  application?: string,\n  imageStreamName?: string,\n  selectedTag?: string,\n  namespace?: string,\n) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    ...(imageStreamName && {\n      'app.kubernetes.io/name': imageStreamName,\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (application && application.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = application;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  const ref = gitRef || 'master';\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': ref,\n  };\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  name: string,\n  namespace: string,\n  imageTrigger: boolean,\n  tag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${name}:${tag}`, namespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${name}\")].image`,\n      pause: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getPodLabels = (name: string) => {\n  return {\n    app: name,\n    deploymentconfig: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  mergedData.metadata.labels = newResource.metadata.labels;\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = newResource.metadata.annotations;\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (mergedData.spec?.template?.spec?.containers) {\n    mergedData.spec.template.spec.containers = newResource.spec.template.spec.containers;\n  }\n  if (mergedData?.spec?.strategy) {\n    mergedData.spec.strategy = newResource.spec.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  return mergedData;\n};\n"]}]}