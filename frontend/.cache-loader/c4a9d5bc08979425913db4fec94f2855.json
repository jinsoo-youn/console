{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/helmComponentFactory.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/helmComponentFactory.ts","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { withDragNode, withSelection, withDndDrop, } from '@console/topology';\nimport { kebabOptionsToMenu } from '@console/internal/components/utils';\nimport { WorkloadNode } from '../../components/nodes';\nimport { noRegroupWorkloadContextMenu, createMenuItems } from '../../components/nodeContextMenu';\nimport { nodeDragSourceSpec, nodeDropTargetSpec, withContextMenu, withNoDrop, } from '../../components/componentUtils';\nimport { withEditReviewAccess } from '../../components/withEditReviewAccess';\nimport { AbstractSBRComponentFactory } from '../../components/AbstractSBRComponentFactory';\nimport { helmReleaseActions } from '../actions/helmReleaseActions';\nimport { TYPE_HELM_RELEASE, TYPE_HELM_WORKLOAD } from './const';\nimport HelmRelease from './HelmRelease';\nexport const helmReleaseContextMenu = (element) => createMenuItems(kebabOptionsToMenu(helmReleaseActions(element)));\nclass HelmComponentFactory extends AbstractSBRComponentFactory {\n    constructor() {\n        super(...arguments);\n        this.getFactory = () => {\n            return (kind, type) => {\n                switch (type) {\n                    case TYPE_HELM_RELEASE:\n                        return withSelection(false, true)(withContextMenu(helmReleaseContextMenu)(withNoDrop()(HelmRelease)));\n                    case TYPE_HELM_WORKLOAD:\n                        return this.withAddResourceConnector()(withDndDrop(nodeDropTargetSpec)(withEditReviewAccess('patch')(withDragNode(nodeDragSourceSpec(type, false))(withSelection(false, true)(withContextMenu(noRegroupWorkloadContextMenu)(WorkloadNode))))));\n                    default:\n                        return undefined;\n                }\n            };\n        };\n    }\n}\nexport { HelmComponentFactory };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/helmComponentFactory.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/helmComponentFactory.ts"],"names":[],"mappings":"AACA,OAAO,EAIL,YAAY,EACZ,aAAa,EACb,WAAW,GACZ,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AACxE,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,4BAA4B,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AACjG,OAAO,EAEL,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,UAAU,GACX,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uCAAuC,CAAC;AAC7E,OAAO,EAAE,2BAA2B,EAAE,MAAM,8CAA8C,CAAC;AAC3F,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AACnE,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,SAAS,CAAC;AAChE,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,OAAa,EAAE,EAAE,CACtD,eAAe,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAEnE,MAAM,oBAAqB,SAAQ,2BAA2B;IAA9D;;QACE,eAAU,GAAG,GAA6B,EAAE;YAC1C,OAAO,CAAC,IAAI,EAAE,IAAI,EAA8D,EAAE;gBAChF,QAAQ,IAAI,EAAE;oBACZ,KAAK,iBAAiB;wBACpB,OAAO,aAAa,CAClB,KAAK,EACL,IAAI,CACL,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBACxE,KAAK,kBAAkB;wBACrB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CACpC,WAAW,CAKT,kBAAkB,CAAC,CACnB,oBAAoB,CAAC,OAAO,CAAC,CAC3B,YAAY,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAC3C,aAAa,CACX,KAAK,EACL,IAAI,CACL,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAC,YAAY,CAAC,CAAC,CAC/D,CACF,CACF,CACF,CAAC;oBACJ;wBACE,OAAO,SAAS,CAAC;iBACpB;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAED,OAAO,EAAE,oBAAoB,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  Node,\n  GraphElement,\n  ComponentFactory as TopologyComponentFactory,\n  withDragNode,\n  withSelection,\n  withDndDrop,\n} from '@console/topology';\nimport { kebabOptionsToMenu } from '@console/internal/components/utils';\nimport { WorkloadNode } from '../../components/nodes';\nimport { noRegroupWorkloadContextMenu, createMenuItems } from '../../components/nodeContextMenu';\nimport {\n  NodeComponentProps,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  withContextMenu,\n  withNoDrop,\n} from '../../components/componentUtils';\nimport { withEditReviewAccess } from '../../components/withEditReviewAccess';\nimport { AbstractSBRComponentFactory } from '../../components/AbstractSBRComponentFactory';\nimport { helmReleaseActions } from '../actions/helmReleaseActions';\nimport { TYPE_HELM_RELEASE, TYPE_HELM_WORKLOAD } from './const';\nimport HelmRelease from './HelmRelease';\n\nexport const helmReleaseContextMenu = (element: Node) =>\n  createMenuItems(kebabOptionsToMenu(helmReleaseActions(element)));\n\nclass HelmComponentFactory extends AbstractSBRComponentFactory {\n  getFactory = (): TopologyComponentFactory => {\n    return (kind, type): React.ComponentType<{ element: GraphElement }> | undefined => {\n      switch (type) {\n        case TYPE_HELM_RELEASE:\n          return withSelection(\n            false,\n            true,\n          )(withContextMenu(helmReleaseContextMenu)(withNoDrop()(HelmRelease)));\n        case TYPE_HELM_WORKLOAD:\n          return this.withAddResourceConnector()(\n            withDndDrop<\n              any,\n              any,\n              { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n              NodeComponentProps\n            >(nodeDropTargetSpec)(\n              withEditReviewAccess('patch')(\n                withDragNode(nodeDragSourceSpec(type, false))(\n                  withSelection(\n                    false,\n                    true,\n                  )(withContextMenu(noRegroupWorkloadContextMenu)(WorkloadNode)),\n                ),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n    };\n  };\n}\n\nexport { HelmComponentFactory };\n"]}]}