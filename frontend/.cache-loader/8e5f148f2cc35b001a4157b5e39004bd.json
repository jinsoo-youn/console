{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport UtilizationItem, { MultilineUtilizationItem } from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { useExtensions, isDashboardsOverviewUtilizationItem } from '@console/plugin-sdk';\nimport { PopoverPosition } from '@patternfly/react-core';\nimport { withDashboardResources } from '../../with-dashboard-resources';\nimport { humanizeBinaryBytes, humanizeCpuCores, humanizeNumber, humanizeDecimalBytesPerSec } from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport { Dropdown } from '../../../utils/dropdown';\nimport { OverviewQuery, utilizationQueries, top25ConsumerQueries, multilineQueries } from './queries';\nimport { NodeModel, PodModel, ProjectModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { useMetricDuration, UTILIZATION_QUERY_HOUR_MAP } from '@console/shared/src/components/dashboard/duration-hook';\nimport { useTranslation } from 'react-i18next';\nconst cpuQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_CPU],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.PODS_BY_CPU],\n        model: PodModel,\n        metric: 'pod',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_CPU],\n        model: NodeModel,\n        metric: 'instance',\n    },\n];\nconst memQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_MEMORY],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.PODS_BY_MEMORY],\n        model: PodModel,\n        metric: 'pod',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_MEMORY],\n        model: NodeModel,\n        metric: 'instance',\n    },\n];\nconst storageQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_STORAGE],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.PODS_BY_STORAGE],\n        model: PodModel,\n        metric: 'pod',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_STORAGE],\n        model: NodeModel,\n        metric: 'instance',\n    },\n];\nconst podQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n    },\n];\nconst networkInQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_NETWORK_IN],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.PODS_BY_NETWORK_IN],\n        model: PodModel,\n        metric: 'pod',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_NETWORK_IN],\n        model: NodeModel,\n        metric: 'node',\n    },\n];\nconst networkOutQueriesPopup = [\n    {\n        query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_NETWORK_OUT],\n        model: ProjectModel,\n        metric: 'namespace',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.PODS_BY_NETWORK_OUT],\n        model: PodModel,\n        metric: 'pod',\n    },\n    {\n        query: top25ConsumerQueries[OverviewQuery.NODES_BY_NETWORK_OUT],\n        model: NodeModel,\n        metric: 'node',\n    },\n];\nconst mapStatsWithDesc = (stats, description) => getRangeVectorStats(stats).map(dp => {\n    dp.x.setSeconds(0, 0);\n    return Object.assign(Object.assign({}, dp), { description });\n});\nexport const PrometheusUtilizationItem = withDashboardResources(({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, utilizationQuery, totalQuery, duration, adjustDuration, title, TopConsumerPopover, humanizeValue, byteDataType, setTimestamps, namespace, isDisabled = false, limitQuery, requestQuery, setLimitReqState }) => {\n    let stats = [];\n    let limitStats;\n    let requestStats;\n    let utilization, utilizationError;\n    let total, totalError;\n    let max;\n    let limit, limitError;\n    let request, requestError;\n    let isLoading = false;\n    const effectiveDuration = React.useMemo(() => (adjustDuration ? adjustDuration(UTILIZATION_QUERY_HOUR_MAP[duration]) : UTILIZATION_QUERY_HOUR_MAP[duration]), [adjustDuration, duration]);\n    React.useEffect(() => {\n        if (!isDisabled) {\n            watchPrometheus(utilizationQuery, namespace, effectiveDuration);\n            totalQuery && watchPrometheus(totalQuery, namespace);\n            limitQuery && watchPrometheus(limitQuery, namespace, effectiveDuration);\n            requestQuery && watchPrometheus(requestQuery, namespace, effectiveDuration);\n            return () => {\n                stopWatchPrometheusQuery(utilizationQuery, effectiveDuration);\n                totalQuery && stopWatchPrometheusQuery(totalQuery);\n                limitQuery && stopWatchPrometheusQuery(limitQuery, effectiveDuration);\n                requestQuery && stopWatchPrometheusQuery(requestQuery, effectiveDuration);\n            };\n        }\n    }, [watchPrometheus, stopWatchPrometheusQuery, effectiveDuration, utilizationQuery, totalQuery, namespace, isDisabled, limitQuery, requestQuery]);\n    if (!isDisabled) {\n        [utilization, utilizationError] = getPrometheusQueryResponse(prometheusResults, utilizationQuery, effectiveDuration);\n        [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n        [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, effectiveDuration);\n        [request, requestError] = getPrometheusQueryResponse(prometheusResults, requestQuery, effectiveDuration);\n        stats = mapStatsWithDesc(utilization, (date, value) => `${value} at ${date}`);\n        max = getInstantVectorStats(total);\n        if (limit) {\n            limitStats = mapStatsWithDesc(limit, (date, value) => `${value} total limit`);\n        }\n        if (request) {\n            requestStats = mapStatsWithDesc(request, (date, value) => `${value} total requested`);\n        }\n        setTimestamps && setTimestamps(stats.map(stat => stat.x));\n        isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n    return React.createElement(UtilizationItem, { title: title, data: stats, limit: limitStats, requested: requestStats, error: utilizationError || totalError || limitError || requestError, isLoading: isLoading, humanizeValue: humanizeValue, byteDataType: byteDataType, query: utilizationQuery, max: max && max.length ? max[0].y : null, TopConsumerPopover: TopConsumerPopover, setLimitReqState: setLimitReqState });\n});\nexport const PrometheusMultilineUtilizationItem = withDashboardResources(({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, queries, duration, adjustDuration, title, TopConsumerPopovers, humanizeValue, byteDataType, namespace, isDisabled = false }) => {\n    const effectiveDuration = React.useMemo(() => (adjustDuration ? adjustDuration(UTILIZATION_QUERY_HOUR_MAP[duration]) : UTILIZATION_QUERY_HOUR_MAP[duration]), [adjustDuration, duration]);\n    React.useEffect(() => {\n        if (!isDisabled) {\n            queries.forEach(q => watchPrometheus(q.query, namespace, effectiveDuration));\n            return () => {\n                queries.forEach(q => stopWatchPrometheusQuery(q.query, effectiveDuration));\n            };\n        }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled, effectiveDuration]);\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n        _.forEach(queries, (query, index) => {\n            const [response, responseError] = getPrometheusQueryResponse(prometheusResults, query.query, effectiveDuration);\n            if (responseError) {\n                hasError = true;\n                return false;\n            }\n            if (!response) {\n                isLoading = true;\n                return false;\n            }\n            stats.push(mapStatsWithDesc(response, (date, value) => {\n                const text = `${query.desc.toUpperCase()}: ${value}`;\n                return index ? text : `${date}\\n${text}`;\n            }));\n        });\n    }\n    return React.createElement(MultilineUtilizationItem, { title: title, data: stats, error: hasError, isLoading: isLoading, humanizeValue: humanizeValue, byteDataType: byteDataType, queries: queries, TopConsumerPopovers: TopConsumerPopovers });\n});\nconst getQueries = (itemExtensions) => {\n    const pluginQueries = {};\n    itemExtensions.forEach(e => {\n        if (!pluginQueries[e.properties.id]) {\n            pluginQueries[e.properties.id] = {\n                utilization: e.properties.query,\n                total: e.properties.totalQuery,\n            };\n        }\n    });\n    return _.defaults(pluginQueries, utilizationQueries);\n};\nexport const UtilizationCard = () => {\n    const { t } = useTranslation();\n    const itemExtensions = useExtensions(isDashboardsOverviewUtilizationItem);\n    const queries = React.useMemo(() => getQueries(itemExtensions), [itemExtensions]);\n    const [timestamps, setTimestamps] = React.useState();\n    const [duration, setDuration] = useMetricDuration();\n    const cpuPopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"CPU\", current: current, consumers: cpuQueriesPopup, humanize: humanizeCpuCores, position: PopoverPosition.top })), []);\n    const memPopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"Memory\", current: current, consumers: memQueriesPopup, humanize: humanizeBinaryBytes, position: PopoverPosition.top })), []);\n    const storagePopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"Filesystem\", current: current, consumers: storageQueriesPopup, humanize: humanizeBinaryBytes, position: PopoverPosition.top })), []);\n    const podPopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"Pod count\", current: current, consumers: podQueriesPopup, humanize: humanizeNumber, position: PopoverPosition.top })), []);\n    const networkInPopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"Network in\", current: current, consumers: networkInQueriesPopup, humanize: humanizeDecimalBytesPerSec, position: PopoverPosition.top })), []);\n    const networkOutPopover = React.useCallback(React.memo(({ current }) => React.createElement(ConsumerPopover, { title: \"Network out\", current: current, consumers: networkOutQueriesPopup, humanize: humanizeDecimalBytesPerSec, position: PopoverPosition.top })), []);\n    let durationItems = {\n        ['ONE_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1'),\n        ['SIX_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1'),\n        ['TWENTY_FOUR_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1'),\n    };\n    let durationValues = {\n        [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1')]: '1 Hour',\n        [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1')]: '6 Hours',\n        [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1')]: '24 Hours',\n    };\n    React.useEffect(() => {\n        durationItems = {\n            ['ONE_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1'),\n            ['SIX_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1'),\n            ['TWENTY_FOUR_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1'),\n        };\n        durationValues = {\n            [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1')]: '1 Hour',\n            [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1')]: '6 Hours',\n            [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1')]: '24 Hours',\n        };\n    }, [duration]);\n    return (React.createElement(DashboardCard, { \"data-test-id\": \"utilization-card\" },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_CLUSTERUTILIZATION_1')),\n            React.createElement(Dropdown, { items: durationItems, onChange: setDuration, selectedKey: durationValues[duration], title: duration })),\n        React.createElement(UtilizationBody, { timestamps: timestamps },\n            React.createElement(PrometheusUtilizationItem, { title: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_CPU_1'), utilizationQuery: queries[OverviewQuery.CPU_UTILIZATION].utilization, totalQuery: queries[OverviewQuery.CPU_UTILIZATION].total, TopConsumerPopover: cpuPopover, duration: durationValues[duration], humanizeValue: humanizeCpuCores, setTimestamps: setTimestamps }),\n            React.createElement(PrometheusUtilizationItem, { title: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_MEMORY_1'), utilizationQuery: queries[OverviewQuery.MEMORY_UTILIZATION].utilization, totalQuery: queries[OverviewQuery.MEMORY_UTILIZATION].total, TopConsumerPopover: memPopover, duration: durationValues[duration], humanizeValue: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes }),\n            React.createElement(PrometheusUtilizationItem, { title: 'Filesystem', utilizationQuery: queries[OverviewQuery.STORAGE_UTILIZATION].utilization, totalQuery: queries[OverviewQuery.STORAGE_UTILIZATION].total, TopConsumerPopover: storagePopover, duration: durationValues[duration], humanizeValue: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes }),\n            React.createElement(PrometheusMultilineUtilizationItem, { title: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_NETWORK_1'), queries: multilineQueries[OverviewQuery.NETWORK_UTILIZATION], duration: durationValues[duration], humanizeValue: humanizeDecimalBytesPerSec, TopConsumerPopovers: [networkInPopover, networkOutPopover] }),\n            React.createElement(PrometheusUtilizationItem, { title: \"Pod count\", utilizationQuery: queries[OverviewQuery.POD_UTILIZATION].utilization, TopConsumerPopover: podPopover, duration: durationValues[duration], humanizeValue: humanizeNumber }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport UtilizationItem, { TopConsumerPopoverProp, MultilineUtilizationItem, QueryWithDescription, LimitRequested } from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { useExtensions, DashboardsOverviewUtilizationItem, isDashboardsOverviewUtilizationItem } from '@console/plugin-sdk';\nimport { PopoverPosition } from '@patternfly/react-core';\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport { humanizeBinaryBytes, humanizeCpuCores, humanizeNumber, humanizeDecimalBytesPerSec } from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport { Dropdown } from '../../../utils/dropdown';\nimport { OverviewQuery, utilizationQueries, top25ConsumerQueries, multilineQueries } from './queries';\nimport { NodeModel, PodModel, ProjectModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { Humanize } from '../../../utils/types';\nimport { useMetricDuration, UTILIZATION_QUERY_HOUR_MAP } from '@console/shared/src/components/dashboard/duration-hook';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useTranslation } from 'react-i18next';\n\nconst cpuQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_CPU],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.PODS_BY_CPU],\n    model: PodModel,\n    metric: 'pod',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_CPU],\n    model: NodeModel,\n    metric: 'instance',\n  },\n];\n\nconst memQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_MEMORY],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.PODS_BY_MEMORY],\n    model: PodModel,\n    metric: 'pod',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_MEMORY],\n    model: NodeModel,\n    metric: 'instance',\n  },\n];\n\nconst storageQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_STORAGE],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.PODS_BY_STORAGE],\n    model: PodModel,\n    metric: 'pod',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_STORAGE],\n    model: NodeModel,\n    metric: 'instance',\n  },\n];\n\nconst podQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_PODS],\n    model: NodeModel,\n    metric: 'node',\n  },\n];\n\nconst networkInQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_NETWORK_IN],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.PODS_BY_NETWORK_IN],\n    model: PodModel,\n    metric: 'pod',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_NETWORK_IN],\n    model: NodeModel,\n    metric: 'node',\n  },\n];\n\nconst networkOutQueriesPopup = [\n  {\n    query: top25ConsumerQueries[OverviewQuery.PROJECTS_BY_NETWORK_OUT],\n    model: ProjectModel,\n    metric: 'namespace',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.PODS_BY_NETWORK_OUT],\n    model: PodModel,\n    metric: 'pod',\n  },\n  {\n    query: top25ConsumerQueries[OverviewQuery.NODES_BY_NETWORK_OUT],\n    model: NodeModel,\n    metric: 'node',\n  },\n];\n\nconst mapStatsWithDesc = (stats: PrometheusResponse, description: DataPoint['description']): DataPoint[] =>\n  getRangeVectorStats(stats).map(dp => {\n    dp.x.setSeconds(0, 0);\n    return {\n      ...dp,\n      description,\n    };\n  });\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, utilizationQuery, totalQuery, duration, adjustDuration, title, TopConsumerPopover, humanizeValue, byteDataType, setTimestamps, namespace, isDisabled = false, limitQuery, requestQuery, setLimitReqState }) => {\n  let stats: DataPoint[] = [];\n  let limitStats: DataPoint[];\n  let requestStats: DataPoint[];\n  let utilization: PrometheusResponse, utilizationError: any;\n  let total: PrometheusResponse, totalError: any;\n  let max: DataPoint<number>[];\n  let limit: PrometheusResponse, limitError: any;\n  let request: PrometheusResponse, requestError: any;\n  let isLoading = false;\n\n  const effectiveDuration = React.useMemo(() => (adjustDuration ? adjustDuration(UTILIZATION_QUERY_HOUR_MAP[duration]) : UTILIZATION_QUERY_HOUR_MAP[duration]), [adjustDuration, duration]);\n  React.useEffect(() => {\n    if (!isDisabled) {\n      watchPrometheus(utilizationQuery, namespace, effectiveDuration);\n      totalQuery && watchPrometheus(totalQuery, namespace);\n      limitQuery && watchPrometheus(limitQuery, namespace, effectiveDuration);\n      requestQuery && watchPrometheus(requestQuery, namespace, effectiveDuration);\n      return () => {\n        stopWatchPrometheusQuery(utilizationQuery, effectiveDuration);\n        totalQuery && stopWatchPrometheusQuery(totalQuery);\n        limitQuery && stopWatchPrometheusQuery(limitQuery, effectiveDuration);\n        requestQuery && stopWatchPrometheusQuery(requestQuery, effectiveDuration);\n      };\n    }\n  }, [watchPrometheus, stopWatchPrometheusQuery, effectiveDuration, utilizationQuery, totalQuery, namespace, isDisabled, limitQuery, requestQuery]);\n\n  if (!isDisabled) {\n    [utilization, utilizationError] = getPrometheusQueryResponse(prometheusResults, utilizationQuery, effectiveDuration);\n    [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n    [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, effectiveDuration);\n    [request, requestError] = getPrometheusQueryResponse(prometheusResults, requestQuery, effectiveDuration);\n\n    stats = mapStatsWithDesc(utilization, (date, value) => `${value} at ${date}`);\n    max = getInstantVectorStats(total);\n    if (limit) {\n      limitStats = mapStatsWithDesc(limit, (date, value) => `${value} total limit`);\n    }\n    if (request) {\n      requestStats = mapStatsWithDesc(request, (date, value) => `${value} total requested`);\n    }\n\n    setTimestamps && setTimestamps(stats.map(stat => stat.x as Date));\n    isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n  }\n\n  return <UtilizationItem title={title} data={stats} limit={limitStats} requested={requestStats} error={utilizationError || totalError || limitError || requestError} isLoading={isLoading} humanizeValue={humanizeValue} byteDataType={byteDataType} query={utilizationQuery} max={max && max.length ? max[0].y : null} TopConsumerPopover={TopConsumerPopover} setLimitReqState={setLimitReqState} />;\n});\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<PrometheusMultilineUtilizationItemProps>(({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, queries, duration, adjustDuration, title, TopConsumerPopovers, humanizeValue, byteDataType, namespace, isDisabled = false }) => {\n  const effectiveDuration = React.useMemo(() => (adjustDuration ? adjustDuration(UTILIZATION_QUERY_HOUR_MAP[duration]) : UTILIZATION_QUERY_HOUR_MAP[duration]), [adjustDuration, duration]);\n  React.useEffect(() => {\n    if (!isDisabled) {\n      queries.forEach(q => watchPrometheus(q.query, namespace, effectiveDuration));\n      return () => {\n        queries.forEach(q => stopWatchPrometheusQuery(q.query, effectiveDuration));\n      };\n    }\n  }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled, effectiveDuration]);\n\n  const stats = [];\n  let hasError = false;\n  let isLoading = false;\n  if (!isDisabled) {\n    _.forEach(queries, (query, index) => {\n      const [response, responseError] = getPrometheusQueryResponse(prometheusResults, query.query, effectiveDuration);\n      if (responseError) {\n        hasError = true;\n        return false;\n      }\n      if (!response) {\n        isLoading = true;\n        return false;\n      }\n      stats.push(\n        mapStatsWithDesc(response, (date, value) => {\n          const text = `${query.desc.toUpperCase()}: ${value}`;\n          return index ? text : `${date}\\n${text}`;\n        }),\n      );\n    });\n  }\n\n  return <MultilineUtilizationItem title={title} data={stats} error={hasError} isLoading={isLoading} humanizeValue={humanizeValue} byteDataType={byteDataType} queries={queries} TopConsumerPopovers={TopConsumerPopovers} />;\n});\n\nconst getQueries = (itemExtensions: DashboardsOverviewUtilizationItem[]) => {\n  const pluginQueries = {};\n  itemExtensions.forEach(e => {\n    if (!pluginQueries[e.properties.id]) {\n      pluginQueries[e.properties.id] = {\n        utilization: e.properties.query,\n        total: e.properties.totalQuery,\n      };\n    }\n  });\n  return _.defaults(pluginQueries, utilizationQueries);\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const itemExtensions = useExtensions<DashboardsOverviewUtilizationItem>(isDashboardsOverviewUtilizationItem);\n\n  const queries = React.useMemo(() => getQueries(itemExtensions), [itemExtensions]);\n\n  const [timestamps, setTimestamps] = React.useState<Date[]>();\n  const [duration, setDuration] = useMetricDuration();\n\n  const cpuPopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"CPU\" current={current} consumers={cpuQueriesPopup} humanize={humanizeCpuCores} position={PopoverPosition.top} />),\n    [],\n  );\n\n  const memPopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"Memory\" current={current} consumers={memQueriesPopup} humanize={humanizeBinaryBytes} position={PopoverPosition.top} />),\n    [],\n  );\n\n  const storagePopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"Filesystem\" current={current} consumers={storageQueriesPopup} humanize={humanizeBinaryBytes} position={PopoverPosition.top} />),\n    [],\n  );\n\n  const podPopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"Pod count\" current={current} consumers={podQueriesPopup} humanize={humanizeNumber} position={PopoverPosition.top} />),\n    [],\n  );\n\n  const networkInPopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"Network in\" current={current} consumers={networkInQueriesPopup} humanize={humanizeDecimalBytesPerSec} position={PopoverPosition.top} />),\n    [],\n  );\n\n  const networkOutPopover = React.useCallback(\n    React.memo<TopConsumerPopoverProp>(({ current }) => <ConsumerPopover title=\"Network out\" current={current} consumers={networkOutQueriesPopup} humanize={humanizeDecimalBytesPerSec} position={PopoverPosition.top} />),\n    [],\n  );\n\n  let durationItems = {\n    ['ONE_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1'),\n    ['SIX_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1'),\n    ['TWENTY_FOUR_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1'),\n  };\n\n  let durationValues = {\n    [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1')]: '1 Hour',\n    [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1')]: '6 Hours',\n    [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1')]: '24 Hours',\n  };\n\n  React.useEffect(() => {\n    durationItems = {\n      ['ONE_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1'),\n      ['SIX_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1'),\n      ['TWENTY_FOUR_HR']: t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1'),\n    };\n    durationValues = {\n      [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_1_1')]: '1 Hour',\n      [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_6_1')]: '6 Hours',\n      [t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_24_1')]: '24 Hours',\n    };\n  }, [duration]);\n\n  return (\n    <DashboardCard data-test-id=\"utilization-card\">\n      <DashboardCardHeader>\n        <DashboardCardTitle>{t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_CLUSTERUTILIZATION_1')}</DashboardCardTitle>\n        <Dropdown items={durationItems} onChange={setDuration} selectedKey={durationValues[duration]} title={duration} />\n      </DashboardCardHeader>\n      <UtilizationBody timestamps={timestamps}>\n        <PrometheusUtilizationItem title={t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_CPU_1')} utilizationQuery={queries[OverviewQuery.CPU_UTILIZATION].utilization} totalQuery={queries[OverviewQuery.CPU_UTILIZATION].total} TopConsumerPopover={cpuPopover} duration={durationValues[duration]} humanizeValue={humanizeCpuCores} setTimestamps={setTimestamps} />\n        <PrometheusUtilizationItem title={t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_MEMORY_1')} utilizationQuery={queries[OverviewQuery.MEMORY_UTILIZATION].utilization} totalQuery={queries[OverviewQuery.MEMORY_UTILIZATION].total} TopConsumerPopover={memPopover} duration={durationValues[duration]} humanizeValue={humanizeBinaryBytes} byteDataType={ByteDataTypes.BinaryBytes} />\n        <PrometheusUtilizationItem title={'Filesystem'} utilizationQuery={queries[OverviewQuery.STORAGE_UTILIZATION].utilization} totalQuery={queries[OverviewQuery.STORAGE_UTILIZATION].total} TopConsumerPopover={storagePopover} duration={durationValues[duration]} humanizeValue={humanizeBinaryBytes} byteDataType={ByteDataTypes.BinaryBytes} />\n        <PrometheusMultilineUtilizationItem title={t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_NETWORK_1')} queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]} duration={durationValues[duration]} humanizeValue={humanizeDecimalBytesPerSec} TopConsumerPopovers={[networkInPopover, networkOutPopover]} />\n        <PrometheusUtilizationItem title=\"Pod count\" utilizationQuery={queries[OverviewQuery.POD_UTILIZATION].utilization} TopConsumerPopover={podPopover} duration={durationValues[duration]} humanizeValue={humanizeNumber} />\n      </UtilizationBody>\n    </DashboardCard>\n  );\n};\n\ntype PrometheusCommonProps = {\n  duration: string;\n  adjustDuration?: (start: number) => number;\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProp>;\n    setTimestamps?: (timestamps: Date[]) => void;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProp>[];\n  };\n"]}]}