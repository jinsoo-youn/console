{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/baremetal-hosts.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/baremetal-hosts.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { getName, getAnnotations } from '@console/shared/src/selectors/common';\nimport { HOST_POWER_STATUS_POWERED_ON, HOST_POWER_STATUS_POWERING_OFF, HOST_POWER_STATUS_POWERING_ON, HOST_POWER_STATUS_POWERED_OFF, } from '../constants';\nconst ANNOTATION_HOST_RESTART = 'reboot.metal3.io';\nexport const getHostOperationalStatus = (host) => _.get(host, 'status.operationalStatus');\nexport const getHostErrorType = (host) => { var _a; return (_a = host.status) === null || _a === void 0 ? void 0 : _a.errorType; };\nexport const getHostProvisioningState = (host) => _.get(host, 'status.provisioning.state');\nexport const getHostMachineName = (host) => _.get(host, 'spec.consumerRef.name');\nexport const getHostBMCAddress = (host) => _.get(host, 'spec.bmc.address');\nexport const getHostDisableCertificateVerification = (host) => _.get(host, 'spec.bmc.disableCertificateVerification', false);\nexport const getHostBootMACAddress = (host) => _.get(host, 'spec') && host.spec.bootMACAddress;\nexport const isHostOnline = (host) => _.get(host, 'spec.online', false);\nexport const getHostNICs = (host) => _.get(host, 'status.hardware.nics', []);\nexport const getHostStorage = (host) => _.get(host, 'status.hardware.storage', []);\nexport const getHostCPU = (host) => _.get(host, 'status.hardware.cpu', {});\nexport const getHostRAMMiB = (host) => _.get(host, 'status.hardware.ramMebibytes');\nexport const getHostErrorMessage = (host) => _.get(host, 'status.errorMessage');\nexport const getHostDescription = (host) => _.get(host, 'spec.description', '');\nexport const isHostPoweredOn = (host) => _.get(host, 'status.poweredOn', false);\nexport const isHostScheduledForRestart = (host) => !!Object.getOwnPropertyNames(getAnnotations(host, {})).find((annotation) => annotation === ANNOTATION_HOST_RESTART ||\n    annotation.startsWith(`${ANNOTATION_HOST_RESTART}/`));\nexport const getHostPowerStatus = (host) => {\n    const isOnline = isHostOnline(host);\n    const isPoweredOn = isHostPoweredOn(host);\n    if (isOnline && isPoweredOn)\n        return HOST_POWER_STATUS_POWERED_ON;\n    if (!isOnline && isPoweredOn)\n        return HOST_POWER_STATUS_POWERING_OFF;\n    if (isOnline && !isPoweredOn)\n        return HOST_POWER_STATUS_POWERING_ON;\n    return HOST_POWER_STATUS_POWERED_OFF;\n};\nexport const getHostVendorInfo = (host) => _.get(host, 'status.hardware.systemVendor', {});\nexport const getHostTotalStorageCapacity = (host) => _.reduce(getHostStorage(host), (sum, disk) => sum + disk.sizeBytes, 0);\nexport const getHostBios = (host) => _.get(host, 'status.hardware.firmware.bios');\nexport const getHostMachine = (host, machines = []) => machines.find((machine) => getHostMachineName(host) === getName(machine));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/baremetal-hosts.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/baremetal-hosts.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { getName, getAnnotations } from '@console/shared/src/selectors/common';\nimport { MachineKind } from '@console/internal/module/k8s';\nimport {\n  BareMetalHostDisk,\n  BareMetalHostNIC,\n  BareMetalHostCPU,\n  BareMetalHostSystemVendor,\n  BareMetalHostBios,\n  BareMetalHostKind,\n} from '../types';\nimport {\n  HOST_POWER_STATUS_POWERED_ON,\n  HOST_POWER_STATUS_POWERING_OFF,\n  HOST_POWER_STATUS_POWERING_ON,\n  HOST_POWER_STATUS_POWERED_OFF,\n} from '../constants';\n\nconst ANNOTATION_HOST_RESTART = 'reboot.metal3.io';\n\nexport const getHostOperationalStatus = (host: BareMetalHostKind): string =>\n  _.get(host, 'status.operationalStatus');\nexport const getHostErrorType = (host: BareMetalHostKind): string => host.status?.errorType;\nexport const getHostProvisioningState = (host: BareMetalHostKind): string =>\n  _.get(host, 'status.provisioning.state');\nexport const getHostMachineName = (host: BareMetalHostKind): string =>\n  _.get(host, 'spec.consumerRef.name');\nexport const getHostBMCAddress = (host: BareMetalHostKind): string =>\n  _.get(host, 'spec.bmc.address');\nexport const getHostDisableCertificateVerification = (host: BareMetalHostKind): boolean =>\n  _.get(host, 'spec.bmc.disableCertificateVerification', false);\nexport const getHostBootMACAddress = (host: BareMetalHostKind) =>\n  _.get(host, 'spec') && host.spec.bootMACAddress;\nexport const isHostOnline = (host: BareMetalHostKind): boolean => _.get(host, 'spec.online', false);\nexport const getHostNICs = (host: BareMetalHostKind): BareMetalHostNIC[] =>\n  _.get(host, 'status.hardware.nics', []);\nexport const getHostStorage = (host: BareMetalHostKind): BareMetalHostDisk[] =>\n  _.get(host, 'status.hardware.storage', []);\nexport const getHostCPU = (host: BareMetalHostKind): BareMetalHostCPU =>\n  _.get(host, 'status.hardware.cpu', {});\nexport const getHostRAMMiB = (host: BareMetalHostKind): number =>\n  _.get(host, 'status.hardware.ramMebibytes');\nexport const getHostErrorMessage = (host: BareMetalHostKind): string =>\n  _.get(host, 'status.errorMessage');\nexport const getHostDescription = (host: BareMetalHostKind): string =>\n  _.get(host, 'spec.description', '');\nexport const isHostPoweredOn = (host: BareMetalHostKind): boolean =>\n  _.get(host, 'status.poweredOn', false);\nexport const isHostScheduledForRestart = (host: BareMetalHostKind) =>\n  !!Object.getOwnPropertyNames(getAnnotations(host, {})).find(\n    (annotation) =>\n      annotation === ANNOTATION_HOST_RESTART ||\n      annotation.startsWith(`${ANNOTATION_HOST_RESTART}/`),\n  );\nexport const getHostPowerStatus = (host: BareMetalHostKind): string => {\n  const isOnline = isHostOnline(host);\n  const isPoweredOn = isHostPoweredOn(host);\n  if (isOnline && isPoweredOn) return HOST_POWER_STATUS_POWERED_ON;\n  if (!isOnline && isPoweredOn) return HOST_POWER_STATUS_POWERING_OFF;\n  if (isOnline && !isPoweredOn) return HOST_POWER_STATUS_POWERING_ON;\n  return HOST_POWER_STATUS_POWERED_OFF;\n};\nexport const getHostVendorInfo = (host: BareMetalHostKind): BareMetalHostSystemVendor =>\n  _.get(host, 'status.hardware.systemVendor', {});\nexport const getHostTotalStorageCapacity = (host: BareMetalHostKind): number =>\n  _.reduce(\n    getHostStorage(host),\n    (sum: number, disk: BareMetalHostDisk): number => sum + disk.sizeBytes,\n    0,\n  );\nexport const getHostBios = (host: BareMetalHostKind): BareMetalHostBios =>\n  _.get(host, 'status.hardware.firmware.bios');\n\nexport const getHostMachine = (\n  host: BareMetalHostKind,\n  machines: MachineKind[] = [],\n): MachineKind =>\n  machines.find((machine: MachineKind) => getHostMachineName(host) === getName(machine));\n"]}]}