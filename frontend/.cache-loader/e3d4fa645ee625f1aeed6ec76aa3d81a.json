{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/helm-topology-model.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/helm-topology-model.ts","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { TYPE_HELM_RELEASE, HELM_GROUP_WIDTH, HELM_GROUP_HEIGHT, HELM_GROUP_PADDING } from './components/const';\nimport { dataObjectFromModel } from '../data-transforms/transform-utils';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmGroupModel = (d, model, filters) => {\n    if (d.type === TYPE_HELM_RELEASE) {\n        const data = model.topology[d.id] || dataObjectFromModel(d);\n        data.groupResources = d.nodes.map(id => model.topology[id]);\n        return {\n            width: HELM_GROUP_WIDTH,\n            height: HELM_GROUP_HEIGHT,\n            id: d.id,\n            group: true,\n            type: d.type,\n            visible: true,\n            collapsed: filters && !filters.display.helmGrouping,\n            data,\n            children: d.nodes,\n            label: d.name,\n            style: {\n                padding: HELM_GROUP_PADDING,\n            },\n        };\n    }\n    return null;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmNodeModel = (d, model, filters) => {\n    return null;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmEdgeModel = (d, model, filters) => {\n    return null;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/helm-topology-model.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/helm-topology-model.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAChH,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AAEzE,6DAA6D;AAC7D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,CAAQ,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IAC3F,IAAI,CAAC,CAAC,IAAI,KAAK,iBAAiB,EAAE;QAChC,MAAM,IAAI,GAAuB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5D,OAAO;YACL,KAAK,EAAE,gBAAgB;YACvB,MAAM,EAAE,iBAAiB;YACzB,EAAE,EAAE,CAAC,CAAC,EAAE;YACR,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY;YACnD,IAAI;YACJ,QAAQ,EAAE,CAAC,CAAC,KAAK;YACjB,KAAK,EAAE,CAAC,CAAC,IAAI;YACb,KAAK,EAAE;gBACL,OAAO,EAAE,kBAAkB;aAC5B;SACF,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,6DAA6D;AAC7D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,CAAO,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IACzF,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,6DAA6D;AAC7D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,CAAO,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IACzF,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import { NodeModel, EdgeModel } from '@console/topology';\nimport { TopologyFilters as Filters } from '../filters';\nimport { TopologyDataModel as DataModel, TopologyDataObject, Node, Group, Edge } from '../topology-types';\nimport { TYPE_HELM_RELEASE, HELM_GROUP_WIDTH, HELM_GROUP_HEIGHT, HELM_GROUP_PADDING } from './components/const';\nimport { dataObjectFromModel } from '../data-transforms/transform-utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmGroupModel = (d: Group, model: DataModel, filters: Filters): NodeModel => {\n  if (d.type === TYPE_HELM_RELEASE) {\n    const data: TopologyDataObject = model.topology[d.id] || dataObjectFromModel(d);\n    data.groupResources = d.nodes.map(id => model.topology[id]);\n\n    return {\n      width: HELM_GROUP_WIDTH,\n      height: HELM_GROUP_HEIGHT,\n      id: d.id,\n      group: true,\n      type: d.type,\n      visible: true,\n      collapsed: filters && !filters.display.helmGrouping,\n      data,\n      children: d.nodes,\n      label: d.name,\n      style: {\n        padding: HELM_GROUP_PADDING,\n      },\n    };\n  }\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmNodeModel = (d: Node, model: DataModel, filters: Filters): NodeModel => {\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getHelmEdgeModel = (d: Edge, model: DataModel, filters: Filters): EdgeModel => {\n  return null;\n};\n"]}]}