{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Firehose } from '@console/internal/components/utils';\nimport MonitoringOverview from './MonitoringOverview';\nimport { PodModel } from '@console/internal/models';\nconst MonitoringTab = ({ item }) => {\n    const { pods } = item;\n    const { kind, metadata: { uid, name, namespace }, } = item.obj;\n    const resources = [\n        {\n            isList: true,\n            kind: 'Event',\n            namespace,\n            prop: 'resourceEvents',\n            fieldSelector: `involvedObject.uid=${uid},involvedObject.name=${name},involvedObject.kind=${kind}`,\n        },\n    ];\n    if (pods) {\n        pods.forEach((pod) => {\n            const fieldSelector = `involvedObject.uid=${pod.metadata.uid},involvedObject.name=${pod.metadata.name},involvedObject.kind=${PodModel.kind}`;\n            resources.push({\n                isList: true,\n                kind: 'Event',\n                namespace: pod.metadata.namespace,\n                prop: pod.metadata.uid,\n                fieldSelector,\n            });\n        });\n    }\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(MonitoringOverview, { resource: item.obj, pods: pods })));\n};\nexport default MonitoringTab;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAMpD,MAAM,aAAa,GAAiC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/D,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;IACtB,MAAM,EACJ,IAAI,EACJ,QAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,GACnC,GAAG,IAAI,CAAC,GAAG,CAAC;IACb,MAAM,SAAS,GAAG;QAChB;YACE,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,OAAO;YACb,SAAS;YACT,IAAI,EAAE,gBAAgB;YACtB,aAAa,EAAE,sBAAsB,GAAG,wBAAwB,IAAI,wBAAwB,IAAI,EAAE;SACnG;KACF,CAAC;IAEF,IAAI,IAAI,EAAE;QACR,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACnB,MAAM,aAAa,GAAG,sBAAsB,GAAG,CAAC,QAAQ,CAAC,GAAG,wBAAwB,GAAG,CAAC,QAAQ,CAAC,IAAI,wBAAwB,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC7I,SAAS,CAAC,IAAI,CAAC;gBACb,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS;gBACjC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG;gBACtB,aAAa;aACd,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,CACL,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;QAC5B,oBAAC,kBAAkB,IAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,GAAI,CAC7C,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import * as React from 'react';\nimport { OverviewItem } from '@console/shared';\nimport { Firehose } from '@console/internal/components/utils';\nimport MonitoringOverview from './MonitoringOverview';\nimport { PodModel } from '@console/internal/models';\n\ntype MonitoringTabProps = {\n  item: OverviewItem;\n};\n\nconst MonitoringTab: React.FC<MonitoringTabProps> = ({ item }) => {\n  const { pods } = item;\n  const {\n    kind,\n    metadata: { uid, name, namespace },\n  } = item.obj;\n  const resources = [\n    {\n      isList: true,\n      kind: 'Event',\n      namespace,\n      prop: 'resourceEvents',\n      fieldSelector: `involvedObject.uid=${uid},involvedObject.name=${name},involvedObject.kind=${kind}`,\n    },\n  ];\n\n  if (pods) {\n    pods.forEach((pod) => {\n      const fieldSelector = `involvedObject.uid=${pod.metadata.uid},involvedObject.name=${pod.metadata.name},involvedObject.kind=${PodModel.kind}`;\n      resources.push({\n        isList: true,\n        kind: 'Event',\n        namespace: pod.metadata.namespace,\n        prop: pod.metadata.uid,\n        fieldSelector,\n      });\n    });\n  }\n\n  return (\n    <Firehose resources={resources}>\n      <MonitoringOverview resource={item.obj} pods={pods} />\n    </Firehose>\n  );\n};\n\nexport default MonitoringTab;\n"]}]}