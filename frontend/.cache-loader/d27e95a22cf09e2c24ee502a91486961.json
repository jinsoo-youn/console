{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/label-list.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/label-list.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { kindForReference } from '../../module/k8s';\nexport const Label = ({ kind, name, value, expand }) => {\n    const href = `/search?kind=${kind}&q=${value ? encodeURIComponent(`${name}=${value}`) : name}`;\n    const klass = classNames('co-m-label', { 'co-m-label--expand': expand });\n    return (React.createElement(Link, { className: `co-text-${kindForReference(kind.toLowerCase())}`, to: href },\n        React.createElement(\"div\", { className: klass },\n            React.createElement(\"span\", { className: \"co-m-label__key\" }, name),\n            value && React.createElement(\"span\", { className: \"co-m-label__eq\" }, \"=\"),\n            value && React.createElement(\"span\", { className: \"co-m-label__value\" }, value))));\n};\nexport class LabelList extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return !_.isEqual(nextProps, this.props);\n    }\n    render() {\n        const { labels, kind, expand = true } = this.props;\n        let list = _.map(labels, (label, key) => (React.createElement(Label, { key: key, kind: kind, name: key, value: label, expand: expand })));\n        if (_.isEmpty(list)) {\n            list = [\n                React.createElement(\"div\", { className: \"text-muted\", key: \"0\" }, \"No labels\"),\n            ];\n        }\n        return React.createElement(\"div\", { className: \"co-m-label-list\" }, list);\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/label-list.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/label-list.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAA4B,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAE9E,MAAM,CAAC,MAAM,KAAK,GAA0B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE;IAC5E,MAAM,IAAI,GAAG,gBAAgB,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,GAAG,IAAI,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/F,MAAM,KAAK,GAAG,UAAU,CAAC,YAAY,EAAE,EAAE,oBAAoB,EAAE,MAAM,EAAE,CAAC,CAAC;IAEzE,OAAO,CACL,oBAAC,IAAI,IAAC,SAAS,EAAE,WAAW,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI;QAC1E,6BAAK,SAAS,EAAE,KAAK;YACnB,8BAAM,SAAS,EAAC,iBAAiB,IAAE,IAAI,CAAQ;YAC9C,KAAK,IAAI,8BAAM,SAAS,EAAC,gBAAgB,QAAS;YAClD,KAAK,IAAI,8BAAM,SAAS,EAAC,mBAAmB,IAAE,KAAK,CAAQ,CACxD,CACD,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,OAAO,SAAU,SAAQ,KAAK,CAAC,SAAyB;IAC5D,qBAAqB,CAAC,SAAS;QAC7B,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnD,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CACvC,oBAAC,KAAK,IAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,GAAI,CACzE,CAAC,CAAC;QAEH,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,GAAG;gBACL,6BAAK,SAAS,EAAC,YAAY,EAAC,GAAG,EAAC,GAAG,gBAE7B;aACP,CAAC;SACH;QAED,OAAO,6BAAK,SAAS,EAAC,iBAAiB,IAAE,IAAI,CAAO,CAAC;IACvD,CAAC;CACF","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { K8sResourceKindReference, kindForReference } from '../../module/k8s';\n\nexport const Label: React.SFC<LabelProps> = ({ kind, name, value, expand }) => {\n  const href = `/search?kind=${kind}&q=${value ? encodeURIComponent(`${name}=${value}`) : name}`;\n  const klass = classNames('co-m-label', { 'co-m-label--expand': expand });\n\n  return (\n    <Link className={`co-text-${kindForReference(kind.toLowerCase())}`} to={href}>\n      <div className={klass}>\n        <span className=\"co-m-label__key\">{name}</span>\n        {value && <span className=\"co-m-label__eq\">=</span>}\n        {value && <span className=\"co-m-label__value\">{value}</span>}\n      </div>\n    </Link>\n  );\n};\n\nexport class LabelList extends React.Component<LabelListProps> {\n  shouldComponentUpdate(nextProps) {\n    return !_.isEqual(nextProps, this.props);\n  }\n\n  render() {\n    const { labels, kind, expand = true } = this.props;\n    let list = _.map(labels, (label, key) => (\n      <Label key={key} kind={kind} name={key} value={label} expand={expand} />\n    ));\n\n    if (_.isEmpty(list)) {\n      list = [\n        <div className=\"text-muted\" key=\"0\">\n          No labels\n        </div>,\n      ];\n    }\n\n    return <div className=\"co-m-label-list\">{list}</div>;\n  }\n}\n\nexport type LabelProps = {\n  kind: K8sResourceKindReference;\n  name: string;\n  value: string;\n  expand: boolean;\n};\n\nexport type LabelListProps = {\n  labels: { [key: string]: string };\n  kind: K8sResourceKindReference;\n  expand?: boolean;\n};\n"]}]}