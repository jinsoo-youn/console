{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/PipelinesResourceList.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/PipelinesResourceList.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { getBadgeFromType } from '@console/shared';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Firehose } from '@console/internal/components/utils';\nimport { FireMan_ as FireMan } from '@console/internal/components/factory';\nimport { PipelineModel } from '../../models';\nimport PipelineAugmentRunsWrapper from './list-page/PipelineAugmentRunsWrapper';\nimport { filters } from './list-page/PipelineAugmentRuns';\nconst PipelinesResourceList = (props) => {\n    const { namespace, showTitle = true } = props;\n    const resources = [\n        {\n            isList: true,\n            kind: referenceForModel(PipelineModel),\n            namespace,\n            prop: PipelineModel.id,\n            filters: Object.assign({}, filters),\n        },\n    ];\n    return (React.createElement(FireMan, Object.assign({}, props, { canCreate: true, createButtonText: `Create ${PipelineModel.label}`, createProps: {\n            to: namespace\n                ? `/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/~new/builder`\n                : `/k8s/cluster/${referenceForModel(PipelineModel)}/~new`,\n        }, createAccessReview: { model: PipelineModel, namespace }, filterLabel: \"by name\", textFilter: \"name\", resources: resources, title: showTitle ? PipelineModel.labelPlural : null, badge: getBadgeFromType(PipelineModel.badge) }),\n        React.createElement(Firehose, { resources: resources },\n            React.createElement(PipelineAugmentRunsWrapper, null))));\n};\nexport default PipelinesResourceList;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/PipelinesResourceList.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/PipelinesResourceList.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,QAAQ,IAAI,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,0BAA0B,MAAM,wCAAwC,CAAC;AAChF,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAM1D,MAAM,qBAAqB,GAAyC,CAAC,KAAK,EAAE,EAAE;IAC5E,MAAM,EAAE,SAAS,EAAE,SAAS,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;IAE9C,MAAM,SAAS,GAAG;QAChB;YACE,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,iBAAiB,CAAC,aAAa,CAAC;YACtC,SAAS;YACT,IAAI,EAAE,aAAa,CAAC,EAAE;YACtB,OAAO,oBAAO,OAAO,CAAE;SACxB;KACF,CAAC;IAEF,OAAO,CACL,oBAAC,OAAO,oBACF,KAAK,IACT,SAAS,QACT,gBAAgB,EAAE,UAAU,aAAa,CAAC,KAAK,EAAE,EACjD,WAAW,EAAE;YACX,EAAE,EAAE,SAAS;gBACX,CAAC,CAAC,WAAW,SAAS,IAAI,iBAAiB,CAAC,aAAa,CAAC,eAAe;gBACzE,CAAC,CAAC,gBAAgB,iBAAiB,CAAC,aAAa,CAAC,OAAO;SAC5D,EACD,kBAAkB,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,EACvD,WAAW,EAAC,SAAS,EACrB,UAAU,EAAC,MAAM,EACjB,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EACnD,KAAK,EAAE,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE5C,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;YAC5B,oBAAC,0BAA0B,OAAG,CACrB,CACH,CACX,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport { getBadgeFromType } from '@console/shared';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Firehose } from '@console/internal/components/utils';\nimport { FireMan_ as FireMan } from '@console/internal/components/factory';\nimport { PipelineModel } from '../../models';\nimport PipelineAugmentRunsWrapper from './list-page/PipelineAugmentRunsWrapper';\nimport { filters } from './list-page/PipelineAugmentRuns';\n\ninterface PipelinesResourceListProps extends React.ComponentProps<typeof FireMan> {\n  namespace: string;\n}\n\nconst PipelinesResourceList: React.FC<PipelinesResourceListProps> = (props) => {\n  const { namespace, showTitle = true } = props;\n\n  const resources = [\n    {\n      isList: true,\n      kind: referenceForModel(PipelineModel),\n      namespace,\n      prop: PipelineModel.id,\n      filters: { ...filters },\n    },\n  ];\n\n  return (\n    <FireMan\n      {...props}\n      canCreate\n      createButtonText={`Create ${PipelineModel.label}`}\n      createProps={{\n        to: namespace\n          ? `/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/~new/builder`\n          : `/k8s/cluster/${referenceForModel(PipelineModel)}/~new`,\n      }}\n      createAccessReview={{ model: PipelineModel, namespace }}\n      filterLabel=\"by name\"\n      textFilter=\"name\"\n      resources={resources}\n      title={showTitle ? PipelineModel.labelPlural : null}\n      badge={getBadgeFromType(PipelineModel.badge)}\n    >\n      <Firehose resources={resources}>\n        <PipelineAugmentRunsWrapper />\n      </Firehose>\n    </FireMan>\n  );\n};\n\nexport default PipelinesResourceList;\n"]}]}