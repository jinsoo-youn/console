{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/bar.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/bar.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ChartBar, ChartLabel, ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { useRefWidth } from '../utils/ref-width-hook';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { barTheme } from './themes';\nimport { humanizeNumber } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { GraphEmpty } from './graph-empty';\nconst DEFAULT_BAR_WIDTH = 10;\nconst PADDING_RATIO = 1 / 3;\nexport const BarChart = ({ barSpacing = 15, barWidth = DEFAULT_BAR_WIDTH, data = [], LabelComponent, loading = false, noLink = false, query, theme = getCustomTheme(ChartThemeColor.blue, ChartThemeVariant.light, barTheme), title, titleClassName, }) => {\n    const [containerRef, width] = useRefWidth();\n    // Max space that horizontal padding should take up. By default, 2/3 of the horizontal space is always available for the actual bar graph.\n    const maxHorizontalPadding = PADDING_RATIO * width;\n    const padding = {\n        bottom: barSpacing,\n        left: 0,\n        right: Math.min(100, maxHorizontalPadding),\n        top: 0,\n    };\n    return (React.createElement(PrometheusGraph, { ref: containerRef, title: title, className: titleClassName }, data.length ? (React.createElement(PrometheusGraphLink, { query: noLink ? undefined : query }, data.map((datum, index) => (React.createElement(React.Fragment, { key: index },\n        React.createElement(\"div\", { className: \"graph-bar__label\" }, LabelComponent ? (React.createElement(LabelComponent, { title: datum.x, metric: datum.metric })) : (datum.x)),\n        React.createElement(\"div\", { className: \"graph-bar__chart\" },\n            React.createElement(ChartBar, { barWidth: barWidth, data: [datum], horizontal: true, labelComponent: React.createElement(ChartLabel, { x: width }), theme: theme, height: barWidth + padding.bottom, width: width, domain: { y: [0, data[0].y] }, padding: padding }))))))) : (React.createElement(GraphEmpty, { loading: loading }))));\n};\nexport const Bar = ({ barSpacing, barWidth, delay = undefined, humanize = humanizeNumber, LabelComponent, metric, namespace, noLink = false, query, theme, title, }) => {\n    const [response, , loading] = usePrometheusPoll({\n        delay,\n        endpoint: PrometheusEndpoint.QUERY,\n        namespace,\n        query,\n    });\n    const data = getInstantVectorStats(response, metric, humanize);\n    return (React.createElement(BarChart, { barSpacing: barSpacing, barWidth: barWidth, data: data, LabelComponent: LabelComponent, loading: loading, noLink: noLink, query: query, theme: theme, title: title }));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/bar.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/bar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ChartBar,\n  ChartLabel,\n  ChartThemeColor,\n  ChartThemeVariant,\n  getCustomTheme,\n} from '@patternfly/react-charts';\n\nimport { useRefWidth } from '../utils/ref-width-hook';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { barTheme } from './themes';\nimport { humanizeNumber, Humanize } from '../utils';\nimport { DataPoint } from '.';\nimport { getInstantVectorStats } from './utils';\nimport { GraphEmpty } from './graph-empty';\n\nconst DEFAULT_BAR_WIDTH = 10;\nconst PADDING_RATIO = 1 / 3;\n\nexport const BarChart: React.FC<BarChartProps> = ({\n  barSpacing = 15,\n  barWidth = DEFAULT_BAR_WIDTH,\n  data = [],\n  LabelComponent,\n  loading = false,\n  noLink = false,\n  query,\n  theme = getCustomTheme(ChartThemeColor.blue, ChartThemeVariant.light, barTheme),\n  title,\n  titleClassName,\n}) => {\n  const [containerRef, width] = useRefWidth();\n\n  // Max space that horizontal padding should take up. By default, 2/3 of the horizontal space is always available for the actual bar graph.\n  const maxHorizontalPadding = PADDING_RATIO * width;\n\n  const padding = {\n    bottom: barSpacing,\n    left: 0,\n    right: Math.min(100, maxHorizontalPadding),\n    top: 0,\n  };\n\n  return (\n    <PrometheusGraph ref={containerRef} title={title} className={titleClassName}>\n      {data.length ? (\n        <PrometheusGraphLink query={noLink ? undefined : query}>\n          {data.map((datum, index) => (\n            <React.Fragment key={index}>\n              <div className=\"graph-bar__label\">\n                {LabelComponent ? (\n                  <LabelComponent title={datum.x} metric={datum.metric} />\n                ) : (\n                  datum.x\n                )}\n              </div>\n              <div className=\"graph-bar__chart\">\n                <ChartBar\n                  barWidth={barWidth}\n                  data={[datum]}\n                  horizontal\n                  labelComponent={<ChartLabel x={width} />}\n                  theme={theme}\n                  height={barWidth + padding.bottom}\n                  width={width}\n                  domain={{ y: [0, data[0].y] }}\n                  padding={padding}\n                />\n              </div>\n            </React.Fragment>\n          ))}\n        </PrometheusGraphLink>\n      ) : (\n        <GraphEmpty loading={loading} />\n      )}\n    </PrometheusGraph>\n  );\n};\n\nexport const Bar: React.FC<BarProps> = ({\n  barSpacing,\n  barWidth,\n  delay = undefined,\n  humanize = humanizeNumber,\n  LabelComponent,\n  metric,\n  namespace,\n  noLink = false,\n  query,\n  theme,\n  title,\n}) => {\n  const [response, , loading] = usePrometheusPoll({\n    delay,\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n  const data = getInstantVectorStats(response, metric, humanize);\n\n  return (\n    <BarChart\n      barSpacing={barSpacing}\n      barWidth={barWidth}\n      data={data}\n      LabelComponent={LabelComponent}\n      loading={loading}\n      noLink={noLink}\n      query={query}\n      theme={theme}\n      title={title}\n    />\n  );\n};\n\ntype LabelComponentProps = {\n  title: Date | string | number;\n  metric?: { [key: string]: string };\n};\n\ntype BarChartProps = {\n  barSpacing?: number;\n  barWidth?: number;\n  data?: DataPoint[];\n  LabelComponent?: React.ComponentType<LabelComponentProps>;\n  loading?: boolean;\n  noLink?: boolean;\n  query?: string;\n  theme?: any; // TODO figure out the best way to import VictoryThemeDefinition\n  title?: string;\n  titleClassName?: string;\n};\n\ntype BarProps = {\n  barSpacing?: number;\n  barWidth?: number;\n  delay?: number;\n  humanize?: Humanize;\n  LabelComponent?: React.ComponentType<LabelComponentProps>;\n  metric: string;\n  namespace?: string;\n  noLink?: boolean;\n  query: string;\n  theme?: any; // TODO figure out the best way to import VictoryThemeDefinition\n  title?: string;\n  titleClassName: string;\n};\n"]}]}