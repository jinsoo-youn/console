{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/create-catalog-source.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/create-catalog-source.tsx","mtime":1615298458680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { ActionGroup, Button, Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport { ButtonBar, history, NsDropdown, withHandlePromise, } from '@console/internal/components/utils';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { CatalogSourceModel } from '../models';\nvar AvailabilityValue;\n(function (AvailabilityValue) {\n    AvailabilityValue[\"ALL_NAMESPACES\"] = \"0\";\n    AvailabilityValue[\"SINGLE_NAMESPACE\"] = \"1\";\n})(AvailabilityValue || (AvailabilityValue = {}));\nconst availabilityKinds = [\n    {\n        value: AvailabilityValue.ALL_NAMESPACES,\n        title: 'Cluster-wide catalog source',\n        desc: 'Catalog will be available in all namespaces',\n    },\n    {\n        value: AvailabilityValue.SINGLE_NAMESPACE,\n        title: 'Namespace catalog source',\n        desc: 'Catalog will only be available in a single namespace',\n    },\n];\nexport const CreateCatalogSource = withHandlePromise(({ handlePromise, inProgress, errorMessage }) => {\n    const [availability, setAvailability] = React.useState(AvailabilityValue.ALL_NAMESPACES);\n    const [image, setImage] = React.useState('');\n    const [displayName, setDisplayName] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [namespace, setNamespace] = React.useState('');\n    const [publisher, setPublisher] = React.useState('');\n    const onSave = React.useCallback((e) => {\n        e.preventDefault();\n        return handlePromise(k8sCreate(CatalogSourceModel, {\n            apiVersion: `${CatalogSourceModel.apiGroup}/${CatalogSourceModel.apiVersion}`,\n            kind: CatalogSourceModel.kind,\n            metadata: {\n                name,\n                namespace: availability === AvailabilityValue.ALL_NAMESPACES\n                    ? 'openshift-marketplace'\n                    : namespace,\n            },\n            spec: {\n                displayName,\n                image,\n                publisher,\n                sourceType: 'grpc',\n            },\n        })).then(() => history.goBack());\n    }, [availability, displayName, handlePromise, image, name, namespace, publisher]);\n    const onNamespaceChange = React.useCallback((value) => {\n        setNamespace(value);\n    }, []);\n    const onAvailabiltiyChange = ({ target: { value } }) => {\n        setAvailability(value);\n    };\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"Create Catalog Source\")),\n        React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, \"Create Catalog Source\"),\n        React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"Create a catalog source in order to make operators available in OperatorHub.\"),\n        React.createElement(Form, { onSubmit: onSave },\n            React.createElement(FormGroup, { fieldId: \"catalog-source-name\", isRequired: true, label: \"Catalog source name\" },\n                React.createElement(TextInput, { id: \"catalog-source-name\", isRequired: true, name: \"catalog-source-name\", onChange: setName, placeholder: \"e.g. custom-catalog-source\", type: \"text\", value: name })),\n            React.createElement(FormGroup, { fieldId: \"catalog-source-display-name\", label: \"Display name\" },\n                React.createElement(TextInput, { id: \"catalog-source-display-name\", name: \"caltalog-source-display-name\", onChange: setDisplayName, placeholder: \"e.g. Custom Catalog Source\", type: \"text\", value: displayName })),\n            React.createElement(FormGroup, { fieldId: \"catalog-source-publisher\", label: \"Publisher name\" },\n                React.createElement(TextInput, { id: \"catalog-source-publisher\", isRequired: true, name: \"catalog-source-publisher\", onChange: setPublisher, placeholder: \"e.g. John Doe\", type: \"text\", value: publisher })),\n            React.createElement(FormGroup, { label: \"Image (URL of container image)\", isRequired: true, fieldId: \"catalog-source-image\", helperText: \"URL of container image hosted on a registry\" },\n                React.createElement(TextInput, { \"aria-describedby\": \"catalog-source-image-helper\", isRequired: true, type: \"text\", id: \"catalog-source-image\", name: \"catalog-source-image\", onChange: setImage, placeholder: \"e.g. quay.io/johndoe/catalog-registry:latest\", value: image })),\n            React.createElement(FormGroup, { fieldId: \"catalog-source-availability\", label: \"Availability\" },\n                React.createElement(RadioGroup, { currentValue: availability, items: availabilityKinds, onChange: onAvailabiltiyChange })),\n            availability === AvailabilityValue.SINGLE_NAMESPACE && (React.createElement(FormGroup, { fieldId: \"catalog-source-namespace\", label: \"Namespace\", isRequired: true },\n                React.createElement(NsDropdown, { selectedKey: namespace, onChange: onNamespaceChange, id: \"catalog-source-namespace\" }))),\n            React.createElement(ButtonBar, { errorMessage: errorMessage, inProgress: inProgress },\n                React.createElement(ActionGroup, { className: \"pf-c-form__group--no-top-margin\" },\n                    React.createElement(Button, { type: \"submit\", variant: \"primary\", id: \"save-changes\" }, \"Create\"),\n                    React.createElement(Button, { type: \"button\", variant: \"secondary\", id: \"cancel\", onClick: history.goBack }, \"Cancel\"))))));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/create-catalog-source.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/create-catalog-source.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { match } from 'react-router-dom';\nimport { ActionGroup, Button, Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport {\n  ButtonBar,\n  history,\n  NsDropdown,\n  withHandlePromise,\n  HandlePromiseProps,\n} from '@console/internal/components/utils';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { CatalogSourceModel } from '../models';\n\nenum AvailabilityValue {\n  ALL_NAMESPACES = '0',\n  SINGLE_NAMESPACE = '1',\n}\n\nconst availabilityKinds = [\n  {\n    value: AvailabilityValue.ALL_NAMESPACES,\n    title: 'Cluster-wide catalog source',\n    desc: 'Catalog will be available in all namespaces',\n  },\n  {\n    value: AvailabilityValue.SINGLE_NAMESPACE,\n    title: 'Namespace catalog source',\n    desc: 'Catalog will only be available in a single namespace',\n  },\n];\n\nexport const CreateCatalogSource: React.FC<CreateCatalogSourceProps> = withHandlePromise(\n  ({ handlePromise, inProgress, errorMessage }) => {\n    const [availability, setAvailability] = React.useState(AvailabilityValue.ALL_NAMESPACES);\n    const [image, setImage] = React.useState('');\n    const [displayName, setDisplayName] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [namespace, setNamespace] = React.useState('');\n    const [publisher, setPublisher] = React.useState('');\n    const onSave = React.useCallback(\n      (e: React.FormEvent<EventTarget>) => {\n        e.preventDefault();\n        return handlePromise(\n          k8sCreate(CatalogSourceModel, {\n            apiVersion: `${CatalogSourceModel.apiGroup}/${CatalogSourceModel.apiVersion}`,\n            kind: CatalogSourceModel.kind,\n            metadata: {\n              name,\n              namespace:\n                availability === AvailabilityValue.ALL_NAMESPACES\n                  ? 'openshift-marketplace'\n                  : namespace,\n            },\n            spec: {\n              displayName,\n              image,\n              publisher,\n              sourceType: 'grpc',\n            },\n          }),\n        ).then(() => history.goBack());\n      },\n      [availability, displayName, handlePromise, image, name, namespace, publisher],\n    );\n\n    const onNamespaceChange = React.useCallback((value: string) => {\n      setNamespace(value);\n    }, []);\n\n    const onAvailabiltiyChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setAvailability(value as AvailabilityValue);\n    };\n\n    return (\n      <div className=\"co-m-pane__body\">\n        <Helmet>\n          <title>Create Catalog Source</title>\n        </Helmet>\n        <h1 className=\"co-m-pane__heading\">Create Catalog Source</h1>\n        <p className=\"co-m-pane__explanation\">\n          Create a catalog source in order to make operators available in OperatorHub.\n        </p>\n        <Form onSubmit={onSave}>\n          <FormGroup fieldId=\"catalog-source-name\" isRequired label=\"Catalog source name\">\n            <TextInput\n              id=\"catalog-source-name\"\n              isRequired\n              name=\"catalog-source-name\"\n              onChange={setName}\n              placeholder=\"e.g. custom-catalog-source\"\n              type=\"text\"\n              value={name}\n            />\n          </FormGroup>\n          <FormGroup fieldId=\"catalog-source-display-name\" label=\"Display name\">\n            <TextInput\n              id=\"catalog-source-display-name\"\n              name=\"caltalog-source-display-name\"\n              onChange={setDisplayName}\n              placeholder=\"e.g. Custom Catalog Source\"\n              type=\"text\"\n              value={displayName}\n            />\n          </FormGroup>\n          <FormGroup fieldId=\"catalog-source-publisher\" label=\"Publisher name\">\n            <TextInput\n              id=\"catalog-source-publisher\"\n              isRequired\n              name=\"catalog-source-publisher\"\n              onChange={setPublisher}\n              placeholder=\"e.g. John Doe\"\n              type=\"text\"\n              value={publisher}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Image (URL of container image)\"\n            isRequired\n            fieldId=\"catalog-source-image\"\n            helperText=\"URL of container image hosted on a registry\"\n          >\n            <TextInput\n              aria-describedby=\"catalog-source-image-helper\"\n              isRequired\n              type=\"text\"\n              id=\"catalog-source-image\"\n              name=\"catalog-source-image\"\n              onChange={setImage}\n              placeholder=\"e.g. quay.io/johndoe/catalog-registry:latest\"\n              value={image}\n            />\n          </FormGroup>\n          <FormGroup fieldId=\"catalog-source-availability\" label=\"Availability\">\n            <RadioGroup\n              currentValue={availability}\n              items={availabilityKinds}\n              onChange={onAvailabiltiyChange}\n            />\n          </FormGroup>\n          {availability === AvailabilityValue.SINGLE_NAMESPACE && (\n            <FormGroup fieldId=\"catalog-source-namespace\" label=\"Namespace\" isRequired>\n              <NsDropdown\n                selectedKey={namespace}\n                onChange={onNamespaceChange}\n                id=\"catalog-source-namespace\"\n              />\n            </FormGroup>\n          )}\n          <ButtonBar errorMessage={errorMessage} inProgress={inProgress}>\n            <ActionGroup className=\"pf-c-form__group--no-top-margin\">\n              <Button type=\"submit\" variant=\"primary\" id=\"save-changes\">\n                Create\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={history.goBack}>\n                Cancel\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </Form>\n      </div>\n    );\n  },\n);\n\ntype CreateCatalogSourceProps = HandlePromiseProps & {\n  match: match;\n};\n"]}]}