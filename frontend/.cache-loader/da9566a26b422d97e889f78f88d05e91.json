{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-machine-autoscaler-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-machine-autoscaler-modal.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { MachineAutoscalerModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { history, NumberSpinner, PromiseComponent, resourcePathFromModel } from '../utils';\nimport { k8sCreate } from '../../module/k8s';\nexport class ConfigureMachineAutoscalerModal extends PromiseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            inProgress: false,\n            errorMessage: '',\n            minReplicas: 1,\n            maxReplicas: 12,\n        };\n        this.changeMinReplicas = (event) => {\n            const minReplicas = _.toInteger(event.target.value);\n            this.setState({ minReplicas });\n        };\n        this.changeMinReplicasBy = (operation) => {\n            const minReplicas = this.state.minReplicas + operation;\n            this.setState({ minReplicas });\n        };\n        this.changeMaxReplicas = (event) => {\n            const maxReplicas = _.toInteger(event.target.value);\n            this.setState({ maxReplicas });\n        };\n        this.changeMaxReplicasBy = (operation) => {\n            const maxReplicas = this.state.maxReplicas + operation;\n            this.setState({ maxReplicas });\n        };\n        this.createAutoscaler = () => {\n            const { apiVersion, kind, metadata: { name, namespace }, } = this.props.machineSet;\n            const { minReplicas, maxReplicas } = this.state;\n            const machineAutoscaler = {\n                apiVersion: 'autoscaling.openshift.io/v1beta1',\n                kind: 'MachineAutoscaler',\n                metadata: {\n                    name,\n                    namespace,\n                },\n                spec: {\n                    minReplicas,\n                    maxReplicas,\n                    scaleTargetRef: {\n                        apiVersion,\n                        kind,\n                        name,\n                    },\n                },\n            };\n            return k8sCreate(MachineAutoscalerModel, machineAutoscaler);\n        };\n        this.submit = (event) => {\n            event.preventDefault();\n            const { close } = this.props;\n            const promise = this.createAutoscaler();\n            this.handlePromise(promise).then((obj) => {\n                close();\n                history.push(resourcePathFromModel(MachineAutoscalerModel, obj.metadata.name, obj.metadata.namespace));\n            });\n        };\n    }\n    render() {\n        const { name } = this.props.machineSet.metadata;\n        return (React.createElement(\"form\", { onSubmit: this.submit, name: \"form\", className: \"modal-content\" },\n            React.createElement(ModalTitle, { className: \"modal-header\" }, \"Create Machine Autoscaler\"),\n            React.createElement(ModalBody, null,\n                React.createElement(\"p\", null,\n                    \"This will automatically scale machine set \",\n                    React.createElement(\"b\", null, name),\n                    \".\"),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null,\n                        \"Minimum Replicas:\",\n                        React.createElement(NumberSpinner, { className: \"pf-c-form-control\", value: this.state.minReplicas, onChange: this.changeMinReplicas, changeValueBy: this.changeMinReplicasBy, autoFocus: true, required: true }))),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null,\n                        \"Maximum Replicas:\",\n                        React.createElement(NumberSpinner, { className: \"pf-c-form-control\", value: this.state.maxReplicas, onChange: this.changeMaxReplicas, changeValueBy: this.changeMaxReplicasBy, required: true })))),\n            React.createElement(ModalSubmitFooter, { inProgress: this.state.inProgress, errorMessage: this.state.errorMessage, cancel: this.props.cancel, submitText: \"Create\" })));\n    }\n}\nexport const configureMachineAutoscalerModal = createModalLauncher(ConfigureMachineAutoscalerModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-machine-autoscaler-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-machine-autoscaler-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { MachineAutoscalerModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { history, NumberSpinner, PromiseComponent, resourcePathFromModel } from '../utils';\nimport { k8sCreate, K8sResourceKind } from '../../module/k8s';\n\nexport class ConfigureMachineAutoscalerModal extends PromiseComponent<\n  ConfigureMachineAutoscalerModalProps,\n  ConfigureMachineAutoscalerModalState\n> {\n  readonly state: ConfigureMachineAutoscalerModalState = {\n    inProgress: false,\n    errorMessage: '',\n    minReplicas: 1,\n    maxReplicas: 12,\n  };\n\n  changeMinReplicas = (event) => {\n    const minReplicas = _.toInteger(event.target.value);\n    this.setState({ minReplicas });\n  };\n\n  changeMinReplicasBy = (operation) => {\n    const minReplicas = this.state.minReplicas + operation;\n    this.setState({ minReplicas });\n  };\n\n  changeMaxReplicas = (event) => {\n    const maxReplicas = _.toInteger(event.target.value);\n    this.setState({ maxReplicas });\n  };\n\n  changeMaxReplicasBy = (operation) => {\n    const maxReplicas = this.state.maxReplicas + operation;\n    this.setState({ maxReplicas });\n  };\n\n  createAutoscaler = (): Promise<K8sResourceKind> => {\n    const {\n      apiVersion,\n      kind,\n      metadata: { name, namespace },\n    } = this.props.machineSet;\n    const { minReplicas, maxReplicas } = this.state;\n\n    const machineAutoscaler = {\n      apiVersion: 'autoscaling.openshift.io/v1beta1',\n      kind: 'MachineAutoscaler',\n      metadata: {\n        name,\n        namespace,\n      },\n      spec: {\n        minReplicas,\n        maxReplicas,\n        scaleTargetRef: {\n          apiVersion,\n          kind,\n          name,\n        },\n      },\n    };\n\n    return k8sCreate(MachineAutoscalerModel, machineAutoscaler);\n  };\n\n  submit = (event): void => {\n    event.preventDefault();\n    const { close } = this.props;\n    const promise = this.createAutoscaler();\n    this.handlePromise(promise).then((obj: K8sResourceKind) => {\n      close();\n      history.push(\n        resourcePathFromModel(MachineAutoscalerModel, obj.metadata.name, obj.metadata.namespace),\n      );\n    });\n  };\n\n  render() {\n    const { name } = this.props.machineSet.metadata;\n\n    return (\n      <form onSubmit={this.submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle className=\"modal-header\">Create Machine Autoscaler</ModalTitle>\n        <ModalBody>\n          <p>\n            This will automatically scale machine set <b>{name}</b>.\n          </p>\n          <div className=\"form-group\">\n            <label>\n              Minimum Replicas:\n              <NumberSpinner\n                className=\"pf-c-form-control\"\n                value={this.state.minReplicas}\n                onChange={this.changeMinReplicas}\n                changeValueBy={this.changeMinReplicasBy}\n                autoFocus\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              Maximum Replicas:\n              <NumberSpinner\n                className=\"pf-c-form-control\"\n                value={this.state.maxReplicas}\n                onChange={this.changeMaxReplicas}\n                changeValueBy={this.changeMaxReplicasBy}\n                required\n              />\n            </label>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={this.state.inProgress}\n          errorMessage={this.state.errorMessage}\n          cancel={this.props.cancel}\n          submitText=\"Create\"\n        />\n      </form>\n    );\n  }\n}\n\nexport const configureMachineAutoscalerModal = createModalLauncher(ConfigureMachineAutoscalerModal);\n\nexport type ConfigureMachineAutoscalerModalProps = {\n  machineSet: K8sResourceKind;\n  cancel: (e: React.SyntheticEvent<any, Event>) => void;\n  close: () => void;\n};\n\nexport type ConfigureMachineAutoscalerModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n  minReplicas: number;\n  maxReplicas: number;\n};\n"]}]}