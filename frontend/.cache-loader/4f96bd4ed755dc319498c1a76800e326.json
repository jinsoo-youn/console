{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/route/CreateRoute.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/route/CreateRoute.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useFormikContext } from 'formik';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, DropdownField } from '@console/shared';\nimport { makePortName } from '../../../utils/imagestream-utils';\nconst CreateRoute = () => {\n    const { values: { image: { ports }, route: { defaultUnknownPort, targetPort }, }, } = useFormikContext();\n    const portOptions = ports.reduce((acc, port) => {\n        const name = makePortName(port);\n        acc[name] = (React.createElement(React.Fragment, null,\n            port.containerPort,\n            \" \\u2192 \",\n            port.containerPort,\n            \" (\",\n            port.protocol,\n            \")\"));\n        return acc;\n    }, {});\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputField, { type: TextInputTypes.text, name: \"route.hostname\", label: \"Hostname\", helpText: \"Public hostname for the route. If not specified, a hostname is generated.\" }),\n        React.createElement(InputField, { type: TextInputTypes.text, name: \"route.path\", label: \"Path\", placeholder: \"/\", helpText: \"Path that the router watches to route traffic to the service.\" }),\n        _.isEmpty(ports) ? (React.createElement(InputField, { type: TextInputTypes.text, name: \"route.unknownTargetPort\", label: \"Target Port\", placeholder: defaultUnknownPort, helpText: \"Target port for traffic.\" })) : (React.createElement(DropdownField, { name: \"route.targetPort\", label: \"Target Port\", items: portOptions, title: portOptions[targetPort] || 'Select target port', helpText: \"Target port for traffic.\", fullWidth: true }))));\n};\nexport default CreateRoute;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/route/CreateRoute.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/route/CreateRoute.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAEhE,MAAM,WAAW,GAAa,GAAG,EAAE;IACjC,MAAM,EACJ,MAAM,EAAE,EACN,KAAK,EAAE,EAAE,KAAK,EAAE,EAChB,KAAK,EAAE,EAAE,kBAAkB,EAAE,UAAU,EAAE,GAC1C,GACF,GAAG,gBAAgB,EAAgB,CAAC;IACrC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QAChC,GAAG,CAAC,IAAI,CAAC,GAAG,CACV;YACG,IAAI,CAAC,aAAa;;YAAU,IAAI,CAAC,aAAa;;YAAI,IAAI,CAAC,QAAQ;gBAC/D,CACJ,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL;QACE,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,gBAAgB,EACrB,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAC,2EAA2E,GACpF;QACF,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,YAAY,EACjB,KAAK,EAAC,MAAM,EACZ,WAAW,EAAC,GAAG,EACf,QAAQ,EAAC,+DAA+D,GACxE;QACD,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAClB,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,yBAAyB,EAC9B,KAAK,EAAC,aAAa,EACnB,WAAW,EAAE,kBAAkB,EAC/B,QAAQ,EAAC,0BAA0B,GACnC,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,aAAa,IACZ,IAAI,EAAC,kBAAkB,EACvB,KAAK,EAAC,aAAa,EACnB,KAAK,EAAE,WAAW,EAClB,KAAK,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,oBAAoB,EACtD,QAAQ,EAAC,0BAA0B,EACnC,SAAS,SACT,CACH,CACA,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, DropdownField } from '@console/shared';\nimport { makePortName } from '../../../utils/imagestream-utils';\n\nconst CreateRoute: React.FC = () => {\n  const {\n    values: {\n      image: { ports },\n      route: { defaultUnknownPort, targetPort },\n    },\n  } = useFormikContext<FormikValues>();\n  const portOptions = ports.reduce((acc, port) => {\n    const name = makePortName(port);\n    acc[name] = (\n      <>\n        {port.containerPort} &rarr; {port.containerPort} ({port.protocol})\n      </>\n    );\n    return acc;\n  }, {});\n\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.hostname\"\n        label=\"Hostname\"\n        helpText=\"Public hostname for the route. If not specified, a hostname is generated.\"\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.path\"\n        label=\"Path\"\n        placeholder=\"/\"\n        helpText=\"Path that the router watches to route traffic to the service.\"\n      />\n      {_.isEmpty(ports) ? (\n        <InputField\n          type={TextInputTypes.text}\n          name=\"route.unknownTargetPort\"\n          label=\"Target Port\"\n          placeholder={defaultUnknownPort}\n          helpText=\"Target port for traffic.\"\n        />\n      ) : (\n        <DropdownField\n          name=\"route.targetPort\"\n          label=\"Target Port\"\n          items={portOptions}\n          title={portOptions[targetPort] || 'Select target port'}\n          helpText=\"Target port for traffic.\"\n          fullWidth\n        />\n      )}\n    </>\n  );\n};\n\nexport default CreateRoute;\n"]}]}