{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/createConnection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/createConnection.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { createTopologyResourceConnection } from '../topology-utils';\nexport const createConnection = (sourceNode, targetNode, replaceTargetNode = null, serviceBindingFlag = false) => {\n    return createTopologyResourceConnection(sourceNode.getData(), targetNode.getData(), replaceTargetNode ? replaceTargetNode.getData() : null, serviceBindingFlag);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/createConnection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/createConnection.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,gCAAgC,EAAE,MAAM,mBAAmB,CAAC;AAErE,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,UAAgB,EAAE,UAAgB,EAAE,oBAA0B,IAAI,EAAE,qBAA8B,KAAK,EAAgD,EAAE;IACxL,OAAO,gCAAgC,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,OAAO,EAAE,EAAE,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;AAClK,CAAC,CAAC","sourcesContent":["import { Node } from '@console/topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection } from '../topology-utils';\n\nexport const createConnection = (sourceNode: Node, targetNode: Node, replaceTargetNode: Node = null, serviceBindingFlag: boolean = false): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(sourceNode.getData(), targetNode.getData(), replaceTargetNode ? replaceTargetNode.getData() : null, serviceBindingFlag);\n};\n"]}]}