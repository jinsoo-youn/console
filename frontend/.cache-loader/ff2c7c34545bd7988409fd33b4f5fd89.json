{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/models/hypercloud/yaml-templates.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/models/hypercloud/yaml-templates.ts","mtime":1616735742510},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { Map as ImmutableMap } from 'immutable';\nimport { referenceForModel } from '../../module/k8s';\nimport * as k8sModels from '..';\nexport const hyperCloudTemplates = ImmutableMap()\n    .setIn([referenceForModel(k8sModels.RegistryModel), 'default'], `\n        apiVersion: tmax.io/v1\n        kind: Registry\n        metadata:\n          name: tmax-registry\n          namespace: reg-test\n        spec:\n          image: registry:2.7.1\n          description: test\n          loginId: tmax\n          loginPassword: tmax123\n          notary:\n            enabled: true\n            serviceType: LoadBalancer\n            persistentVolumeClaim:\n              create:\n                accessModes: [ReadWriteOnce]\n                storageSize: 10Gi\n                storageClassName: csi-cephfs-sc\n                volumeMode: Filesystem\n                deleteWithPvc: true\n          service:\n            serviceType: LoadBalancer\n          persistentVolumeClaim:\n            mountPath: /var/lib/registry\n            create:\n              accessModes: [ReadWriteOnce]\n              storageSize: 10Gi\n              storageClassName: csi-cephfs-sc\n              volumeMode: Filesystem\n              deleteWithPvc: true\n        `)\n    .setIn([referenceForModel(k8sModels.ImageSignerModel), 'default'], `\n        apiVersion: tmax.io/v1\n        kind: ImageSigner\n        metadata:\n          name: signer-a\n        spec:\n          # Add fields here\n          description: for develope\n          email: signer@tmax.co.kr\n          name: signer-name\n          phone: 010-1234-5678\n          team: ck1-2\n        \n        `)\n    .setIn([referenceForModel(k8sModels.ImageSignRequestModel), 'default'], `\n        apiVersion: tmax.io/v1\n        kind: ImageSignRequest\n        metadata:\n        name: image-sign-request-a\n        namespace: reg-test\n        spec:\n        image: <registry>/<image>:<tag> # 172.22.11.13:443/alpine:3\n        registryLogin:\n            certSecretName: hpcd-registry-rootca\n            dcjSecretName: hpcd-registry-<registry_name> # hpcd-registry-tmax-registry\n        signer: signer-a\n        `);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/models/hypercloud/yaml-templates.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/models/hypercloud/yaml-templates.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,IAAI,YAAY,EAAE,MAAM,WAAW,CAAC;AAGhD,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAA;AACpD,OAAO,KAAK,SAAS,MAAM,IAAI,CAAC;AAEhC,MAAM,CAAC,MAAM,mBAAmB,GAAG,YAAY,EAAkD;KAC5F,KAAK,CACF,CAAC,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,EACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA+BC,CACJ;KACA,KAAK,CACF,CAAC,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,SAAS,CAAC,EAC1D;;;;;;;;;;;;;SAaC,CACJ;KACA,KAAK,CACF,CAAC,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,SAAS,CAAC,EAC/D;;;;;;;;;;;;SAYC,CACJ,CAAC","sourcesContent":["import { Map as ImmutableMap } from 'immutable';\n\nimport { GroupVersionKind } from '../../module/k8s';\nimport { referenceForModel } from '../../module/k8s'\nimport * as k8sModels from '..';\n\nexport const hyperCloudTemplates = ImmutableMap<GroupVersionKind, ImmutableMap<string, string>>()\n    .setIn(\n        [referenceForModel(k8sModels.RegistryModel), 'default'],\n        `\n        apiVersion: tmax.io/v1\n        kind: Registry\n        metadata:\n          name: tmax-registry\n          namespace: reg-test\n        spec:\n          image: registry:2.7.1\n          description: test\n          loginId: tmax\n          loginPassword: tmax123\n          notary:\n            enabled: true\n            serviceType: LoadBalancer\n            persistentVolumeClaim:\n              create:\n                accessModes: [ReadWriteOnce]\n                storageSize: 10Gi\n                storageClassName: csi-cephfs-sc\n                volumeMode: Filesystem\n                deleteWithPvc: true\n          service:\n            serviceType: LoadBalancer\n          persistentVolumeClaim:\n            mountPath: /var/lib/registry\n            create:\n              accessModes: [ReadWriteOnce]\n              storageSize: 10Gi\n              storageClassName: csi-cephfs-sc\n              volumeMode: Filesystem\n              deleteWithPvc: true\n        `,\n    )\n    .setIn(\n        [referenceForModel(k8sModels.ImageSignerModel), 'default'],\n        `\n        apiVersion: tmax.io/v1\n        kind: ImageSigner\n        metadata:\n          name: signer-a\n        spec:\n          # Add fields here\n          description: for develope\n          email: signer@tmax.co.kr\n          name: signer-name\n          phone: 010-1234-5678\n          team: ck1-2\n        \n        `,\n    )\n    .setIn(\n        [referenceForModel(k8sModels.ImageSignRequestModel), 'default'],\n        `\n        apiVersion: tmax.io/v1\n        kind: ImageSignRequest\n        metadata:\n        name: image-sign-request-a\n        namespace: reg-test\n        spec:\n        image: <registry>/<image>:<tag> # 172.22.11.13:443/alpine:3\n        registryLogin:\n            certSecretName: hpcd-registry-rootca\n            dcjSecretName: hpcd-registry-<registry_name> # hpcd-registry-tmax-registry\n        signer: signer-a\n        `,\n    );\n\n"]}]}