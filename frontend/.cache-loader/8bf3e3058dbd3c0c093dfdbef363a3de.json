{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-broker.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-broker.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, SectionHeading, detailsPage, navFactory, ResourceLink, ResourceKebab, ResourceSummary, StatusWithIcon, Timestamp, ExternalLink } from './utils';\nimport { referenceForModel } from '../module/k8s';\nimport { ClusterServiceBrokerModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ClusterServiceClassPage } from './cluster-service-class';\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ClusterServiceBrokerModel), ...Kebab.factory.common];\nconst tableColumnClasses = [classNames('col-sm-3', 'col-xs-6'), classNames('col-sm-3', 'col-xs-6'), classNames('col-sm-3', 'hidden-xs'), classNames('col-sm-3', 'hidden-xs'), Kebab.columnClass];\nconst ClusterServiceBrokerTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Status',\n            sortFunc: 'serviceCatalogStatus',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Provider',\n            sortFunc: 'spec',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        // {\n        //   title: 'Relist Behavior',\n        //   sortField: 'spec.relistBehavior',\n        //   transforms: [sortable],\n        //   props: { className: tableColumnClasses[2] },\n        // },\n        // {\n        //   title: 'Last Retrieved',\n        //   sortField: 'status.lastCatalogRetrievalTime',\n        //   transforms: [sortable],\n        //   props: { className: tableColumnClasses[3] },\n        // },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nClusterServiceBrokerTableHeader.displayName = 'ClusterServiceBrokerTableHeader';\nconst ClusterServiceBrokerTableRow = ({ obj: serviceBroker, index, key, style }) => {\n    return (React.createElement(TableRow, { id: serviceBroker.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: referenceForModel(ClusterServiceBrokerModel), name: serviceBroker.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(StatusWithIcon, { obj: serviceBroker })),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, serviceBroker.spec.relistBehavior),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: serviceBroker.status.lastCatalogRetrievalTime })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: referenceForModel(ClusterServiceBrokerModel), resource: serviceBroker }))));\n};\nconst ClusterServiceBrokerDetails = ({ obj: serviceBroker }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Service Broker Details\" }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourceSummary, { resource: serviceBroker }),\n                    React.createElement(\"dt\", null, \"Last Catalog Retrieval Time\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Timestamp, { timestamp: serviceBroker.status.lastCatalogRetrievalTime })),\n                    serviceBroker.spec.insecureSkipTLSVerify && React.createElement(\"dt\", null, \"Insecure Skip TLS Verify\"),\n                    serviceBroker.spec.insecureSkipTLSVerify && React.createElement(\"dd\", null, serviceBroker.spec.insecureSkipTLSVerify)),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", null, \"Status\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(StatusWithIcon, { obj: serviceBroker })),\n                        React.createElement(\"dt\", null, \"Broker URL\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(ExternalLink, { href: serviceBroker.spec.url, text: serviceBroker.spec.url })),\n                        React.createElement(\"dt\", null, \"Relist Behavior\"),\n                        React.createElement(\"dd\", null, serviceBroker.spec.relistBehavior),\n                        serviceBroker.spec.relistBehavior === 'Duration' && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Relist Duration\"),\n                            React.createElement(\"dd\", null, serviceBroker.spec.relistDuration || '-'))))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: serviceBroker.status.conditions }))));\n};\nconst ServiceClassTabPage = ({ obj }) => React.createElement(ClusterServiceClassPage, { showTitle: false, fieldSelector: `spec.clusterServiceBrokerName=${obj.metadata.name}` });\nexport const ClusterServiceBrokerDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: referenceForModel(ClusterServiceBrokerModel), menuActions: menuActions, pages: [navFactory.details(detailsPage(ClusterServiceBrokerDetails)), navFactory.editYaml(), navFactory.clusterServiceClasses(ServiceClassTabPage)] }));\nexport const ClusterServiceBrokerList = props => React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Cluster Service Brokers\", Header: ClusterServiceBrokerTableHeader, Row: ClusterServiceBrokerTableRow, virtualize: true }));\nexport const ClusterServiceBrokerPage = props => React.createElement(ListPage, Object.assign({}, props, { ListComponent: ClusterServiceBrokerList, kind: referenceForModel(ClusterServiceBrokerModel), canCreate: true, showTitle: false }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-broker.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-broker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { Kebab, SectionHeading, detailsPage, navFactory, ResourceLink, ResourceKebab, ResourceSummary, StatusWithIcon, Timestamp, ExternalLink } from './utils';\nimport { K8sResourceKind, referenceForModel } from '../module/k8s';\nimport { ClusterServiceBrokerModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ClusterServiceClassPage } from './cluster-service-class';\n\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ClusterServiceBrokerModel), ...Kebab.factory.common];\n\nconst tableColumnClasses = [classNames('col-sm-3', 'col-xs-6'), classNames('col-sm-3', 'col-xs-6'), classNames('col-sm-3', 'hidden-xs'), classNames('col-sm-3', 'hidden-xs'), Kebab.columnClass];\n\nconst ClusterServiceBrokerTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'serviceCatalogStatus',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Provider',\n      sortFunc: 'spec',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    // {\n    //   title: 'Relist Behavior',\n    //   sortField: 'spec.relistBehavior',\n    //   transforms: [sortable],\n    //   props: { className: tableColumnClasses[2] },\n    // },\n    // {\n    //   title: 'Last Retrieved',\n    //   sortField: 'status.lastCatalogRetrievalTime',\n    //   transforms: [sortable],\n    //   props: { className: tableColumnClasses[3] },\n    // },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nClusterServiceBrokerTableHeader.displayName = 'ClusterServiceBrokerTableHeader';\n\nconst ClusterServiceBrokerTableRow: RowFunction<K8sResourceKind> = ({ obj: serviceBroker, index, key, style }) => {\n  return (\n    <TableRow id={serviceBroker.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={referenceForModel(ClusterServiceBrokerModel)} name={serviceBroker.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <StatusWithIcon obj={serviceBroker} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{serviceBroker.spec.relistBehavior}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={serviceBroker.status.lastCatalogRetrievalTime} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={referenceForModel(ClusterServiceBrokerModel)} resource={serviceBroker} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterServiceBrokerDetails: React.SFC<ClusterServiceBrokerDetailsProps> = ({ obj: serviceBroker }) => {\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Service Broker Details\" />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={serviceBroker} />\n            <dt>Last Catalog Retrieval Time</dt>\n            <dd>\n              <Timestamp timestamp={serviceBroker.status.lastCatalogRetrievalTime} />\n            </dd>\n            {serviceBroker.spec.insecureSkipTLSVerify && <dt>Insecure Skip TLS Verify</dt>}\n            {serviceBroker.spec.insecureSkipTLSVerify && <dd>{serviceBroker.spec.insecureSkipTLSVerify}</dd>}\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Status</dt>\n              <dd>\n                <StatusWithIcon obj={serviceBroker} />\n              </dd>\n              <dt>Broker URL</dt>\n              <dd>\n                <ExternalLink href={serviceBroker.spec.url} text={serviceBroker.spec.url} />\n              </dd>\n              <dt>Relist Behavior</dt>\n              <dd>{serviceBroker.spec.relistBehavior}</dd>\n              {serviceBroker.spec.relistBehavior === 'Duration' && (\n                <>\n                  <dt>Relist Duration</dt>\n                  <dd>{serviceBroker.spec.relistDuration || '-'}</dd>\n                </>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={serviceBroker.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst ServiceClassTabPage = ({ obj }) => <ClusterServiceClassPage showTitle={false} fieldSelector={`spec.clusterServiceBrokerName=${obj.metadata.name}`} />;\nexport const ClusterServiceBrokerDetailsPage: React.SFC<ClusterServiceBrokerDetailsPageProps> = props => <DetailsPage {...props} kind={referenceForModel(ClusterServiceBrokerModel)} menuActions={menuActions} pages={[navFactory.details(detailsPage(ClusterServiceBrokerDetails)), navFactory.editYaml(), navFactory.clusterServiceClasses(ServiceClassTabPage)]} />;\nexport const ClusterServiceBrokerList: React.SFC = props => <Table {...props} aria-label=\"Cluster Service Brokers\" Header={ClusterServiceBrokerTableHeader} Row={ClusterServiceBrokerTableRow} virtualize />;\n\nexport const ClusterServiceBrokerPage: React.SFC<ClusterServiceBrokerPageProps> = props => <ListPage {...props} ListComponent={ClusterServiceBrokerList} kind={referenceForModel(ClusterServiceBrokerModel)} canCreate={true} showTitle={false} />;\n\nexport type ClusterServiceBrokerPageProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ClusterServiceBrokerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ClusterServiceBrokerDetailsPageProps = {\n  match: any;\n};\n"]}]}