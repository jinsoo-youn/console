{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/template/disk-bus-validation-result.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/template/disk-bus-validation-result.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { ValidationErrorType } from '@console/shared/src/utils/validation/types';\nimport { joinGrammaticallyListOfItems, asValidationObject } from '@console/shared';\nexport class DiskBusValidationResult {\n    constructor({ allowedBuses, type, isValid }) {\n        this.getErrorMsg = () => {\n            if (this.isValid) {\n                return null;\n            }\n            const isWarn = this.type === ValidationErrorType.Warn;\n            const adj = isWarn ? 'Recommended' : 'Valid';\n            const adj2 = isWarn ? 'Not recommended' : 'Invalid';\n            if (this.allowedBuses.size === 0) {\n                return `There are no ${adj.toLowerCase()} bus types`;\n            }\n            if (this.allowedBuses.size === 1) {\n                return `${adj2} bus type. ${adj} type is ${[...this.allowedBuses][0]}`;\n            }\n            return `${adj2} bus type. ${adj} types are: ${joinGrammaticallyListOfItems([...this.allowedBuses].map((b) => b.toString()))}`;\n        };\n        this.asValidationObject = () => {\n            return !this.isValid ? asValidationObject(this.getErrorMsg(), this.type) : null;\n        };\n        this.allowedBuses = allowedBuses;\n        this.type = type;\n        this.isValid = isValid;\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/template/disk-bus-validation-result.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/template/disk-bus-validation-result.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,mBAAmB,EAAoB,MAAM,4CAA4C,CAAC;AACnG,OAAO,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAEnF,MAAM,OAAO,uBAAuB;IAOlC,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE;QAMpC,gBAAW,GAAG,GAAG,EAAE;YACxB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,KAAK,mBAAmB,CAAC,IAAI,CAAC;YACtD,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,EAAE;gBAChC,OAAO,gBAAgB,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC;aACtD;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,EAAE;gBAChC,OAAO,GAAG,IAAI,cAAc,GAAG,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACxE;YACD,OAAO,GAAG,IAAI,cAAc,GAAG,eAAe,4BAA4B,CACxE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAChD,EAAE,CAAC;QACN,CAAC,CAAC;QAEK,uBAAkB,GAAG,GAAqB,EAAE;YACjD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAClF,CAAC,CAAC;QAzBA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CAuBF","sourcesContent":["import { DiskBus } from '../../../constants/vm/storage/disk-bus';\nimport { ValidationErrorType, ValidationObject } from '@console/shared/src/utils/validation/types';\nimport { joinGrammaticallyListOfItems, asValidationObject } from '@console/shared';\n\nexport class DiskBusValidationResult {\n  allowedBuses: Set<DiskBus>;\n\n  type: ValidationErrorType;\n\n  isValid: boolean;\n\n  constructor({ allowedBuses, type, isValid }) {\n    this.allowedBuses = allowedBuses;\n    this.type = type;\n    this.isValid = isValid;\n  }\n\n  public getErrorMsg = () => {\n    if (this.isValid) {\n      return null;\n    }\n    const isWarn = this.type === ValidationErrorType.Warn;\n    const adj = isWarn ? 'Recommended' : 'Valid';\n    const adj2 = isWarn ? 'Not recommended' : 'Invalid';\n    if (this.allowedBuses.size === 0) {\n      return `There are no ${adj.toLowerCase()} bus types`;\n    }\n    if (this.allowedBuses.size === 1) {\n      return `${adj2} bus type. ${adj} type is ${[...this.allowedBuses][0]}`;\n    }\n    return `${adj2} bus type. ${adj} types are: ${joinGrammaticallyListOfItems(\n      [...this.allowedBuses].map((b) => b.toString()),\n    )}`;\n  };\n\n  public asValidationObject = (): ValidationObject => {\n    return !this.isValid ? asValidationObject(this.getErrorMsg(), this.type) : null;\n  };\n}\n"]}]}