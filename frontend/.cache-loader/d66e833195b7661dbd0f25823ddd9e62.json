{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-row.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Kebab, pluralize } from '@console/internal/components/utils';\nimport { isVMI } from '../../../../../../selectors/check-type';\nimport { TableData, TableRow } from '@console/internal/components/factory';\nimport { DASH, dimensifyRow } from '@console/shared';\nimport { ValidationCell } from '../../../../../table/validation-cell';\nimport { AFFINITY_CONDITION_LABELS, AFFINITY_TYPE_LABLES } from '../../../shared/consts';\nconst menuActionDelete = (affinity, onDelete) => ({\n    label: 'Delete',\n    callback: () => onDelete(affinity),\n});\nconst menuActionEdit = (affinity, onEdit) => ({\n    label: 'Edit',\n    callback: () => onEdit(affinity),\n});\nconst getActions = (affinity, vmLikeEntity, onEdit, onDelete) => {\n    const actions = [];\n    if (isVMI(vmLikeEntity)) {\n        return actions;\n    }\n    actions.push(menuActionEdit(affinity, onEdit));\n    actions.push(menuActionDelete(affinity, onDelete));\n    return actions;\n};\nexport const AffinityRow = (props) => {\n    const { obj, customData: { isDisabled, columnClasses, vmLikeEntity, onEdit, onDelete }, index, style, } = props;\n    const { type, condition, weight, expressions, fields } = obj;\n    const dimensify = dimensifyRow(columnClasses);\n    const expressionsLabel = (expressions === null || expressions === void 0 ? void 0 : expressions.length) > 0 && pluralize(expressions.length, 'Expression');\n    const fieldsLabel = (fields === null || fields === void 0 ? void 0 : fields.length) > 0 && pluralize(fields.length, 'Node Field');\n    return (React.createElement(TableRow, { id: \"affinity-row\", index: index, trKey: condition, style: style },\n        React.createElement(TableData, { className: dimensify() },\n            React.createElement(ValidationCell, null, AFFINITY_TYPE_LABLES[type])),\n        React.createElement(TableData, { className: dimensify() },\n            React.createElement(ValidationCell, null, AFFINITY_CONDITION_LABELS[condition])),\n        React.createElement(TableData, { className: dimensify() },\n            React.createElement(ValidationCell, null, weight || DASH)),\n        React.createElement(TableData, { className: dimensify() },\n            React.createElement(ValidationCell, null,\n                React.createElement(\"div\", null, expressionsLabel),\n                \" \",\n                React.createElement(\"div\", null, fieldsLabel))),\n        React.createElement(TableData, { className: dimensify(true) },\n            React.createElement(Kebab, { options: getActions(obj, vmLikeEntity, onEdit, onDelete), isDisabled: isDisabled || isVMI(vmLikeEntity) }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-row.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Kebab, KebabOption, pluralize } from '@console/internal/components/utils';\nimport { isVMI } from '../../../../../../selectors/check-type';\nimport { VMLikeEntityKind } from '../../../../../../types/vmLike';\nimport { TableData, TableRow, RowFunction } from '@console/internal/components/factory';\nimport { DASH, dimensifyRow } from '@console/shared';\nimport { ValidationCell } from '../../../../../table/validation-cell';\nimport { AffinityRowData } from '../../types';\nimport { AFFINITY_CONDITION_LABELS, AFFINITY_TYPE_LABLES } from '../../../shared/consts';\n\ntype AffinityRowCustomData = {\n  isDisabled: boolean;\n  columnClasses: string[];\n  vmLikeEntity: VMLikeEntityKind;\n  onEdit: (affinity: AffinityRowData) => void;\n  onDelete: (affinity: AffinityRowData) => void;\n};\n\nconst menuActionDelete = (affinity: AffinityRowData, onDelete): KebabOption => ({\n  label: 'Delete',\n  callback: () => onDelete(affinity),\n});\n\nconst menuActionEdit = (affinity: AffinityRowData, onEdit): KebabOption => ({\n  label: 'Edit',\n  callback: () => onEdit(affinity),\n});\n\nconst getActions = (\n  affinity: AffinityRowData,\n  vmLikeEntity: VMLikeEntityKind,\n  onEdit,\n  onDelete,\n) => {\n  const actions = [];\n  if (isVMI(vmLikeEntity)) {\n    return actions;\n  }\n  actions.push(menuActionEdit(affinity, onEdit));\n  actions.push(menuActionDelete(affinity, onDelete));\n  return actions;\n};\n\nexport const AffinityRow: RowFunction<AffinityRowData, AffinityRowCustomData> = (props) => {\n  const {\n    obj,\n    customData: { isDisabled, columnClasses, vmLikeEntity, onEdit, onDelete },\n    index,\n    style,\n  } = props;\n  const { type, condition, weight, expressions, fields } = obj;\n  const dimensify = dimensifyRow(columnClasses);\n  const expressionsLabel = expressions?.length > 0 && pluralize(expressions.length, 'Expression');\n  const fieldsLabel = fields?.length > 0 && pluralize(fields.length, 'Node Field');\n\n  return (\n    <TableRow id=\"affinity-row\" index={index} trKey={condition} style={style}>\n      <TableData className={dimensify()}>\n        <ValidationCell>{AFFINITY_TYPE_LABLES[type]}</ValidationCell>\n      </TableData>\n      <TableData className={dimensify()}>\n        <ValidationCell>{AFFINITY_CONDITION_LABELS[condition]}</ValidationCell>\n      </TableData>\n      <TableData className={dimensify()}>\n        <ValidationCell>{weight || DASH}</ValidationCell>\n      </TableData>\n      <TableData className={dimensify()}>\n        <ValidationCell>\n          <div>{expressionsLabel}</div> <div>{fieldsLabel}</div>\n        </ValidationCell>\n      </TableData>\n      <TableData className={dimensify(true)}>\n        <Kebab\n          options={getActions(obj, vmLikeEntity, onEdit, onDelete)}\n          isDisabled={isDisabled || isVMI(vmLikeEntity)}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n"]}]}