{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/volume-mode.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/volume-mode.ts","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\nexport class VolumeMode extends ObjectEnum {\n}\nVolumeMode.BLOCK = new VolumeMode('Block');\nVolumeMode.FILESYSTEM = new VolumeMode('Filesystem');\nVolumeMode.ALL = Object.freeze(ObjectEnum.getAllClassEnumProperties(VolumeMode));\nVolumeMode.stringMapper = VolumeMode.ALL.reduce((accumulator, volumeMode) => (Object.assign(Object.assign({}, accumulator), { [volumeMode.value]: volumeMode })), {});\nVolumeMode.getAll = () => VolumeMode.ALL;\nVolumeMode.fromString = (model) => VolumeMode.stringMapper[model];\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/volume-mode.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/volume-mode.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,OAAO,UAAW,SAAQ,UAAkB;;AAChC,gBAAK,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AAChC,qBAAU,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;AAElC,cAAG,GAAG,MAAM,CAAC,MAAM,CACzC,UAAU,CAAC,yBAAyB,CAAa,UAAU,CAAC,CAC7D,CAAC;AAEsB,uBAAY,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAC1D,CAAC,WAAW,EAAE,UAAsB,EAAE,EAAE,CAAC,iCACpC,WAAW,KACd,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,IAC9B,EACF,EAAE,CACH,CAAC;AAEK,iBAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC;AAE9B,qBAAU,GAAG,CAAC,KAAa,EAAc,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC","sourcesContent":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\n\nexport class VolumeMode extends ObjectEnum<string> {\n  static readonly BLOCK = new VolumeMode('Block');\n  static readonly FILESYSTEM = new VolumeMode('Filesystem');\n\n  private static readonly ALL = Object.freeze(\n    ObjectEnum.getAllClassEnumProperties<VolumeMode>(VolumeMode),\n  );\n\n  private static readonly stringMapper = VolumeMode.ALL.reduce(\n    (accumulator, volumeMode: VolumeMode) => ({\n      ...accumulator,\n      [volumeMode.value]: volumeMode,\n    }),\n    {},\n  );\n\n  static getAll = () => VolumeMode.ALL;\n\n  static fromString = (model: string): VolumeMode => VolumeMode.stringMapper[model];\n}\n"]}]}