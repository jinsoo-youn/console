{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/BuilderNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/BuilderNode.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from '@console/topology';\nimport { AddNodeDirection, BUILDER_NODE_ADD_RADIUS, BUILDER_NODE_ERROR_RADIUS, BUILDER_NODE_ADD_PADDING, } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskNode from './TaskNode';\nimport { TooltipPosition } from '@patternfly/react-core';\nconst BuilderNode = ({ element }) => {\n    const [showAdd, setShowAdd] = React.useState(false);\n    const { width, height } = element.getBounds();\n    const data = element.getData();\n    const { error, onAddNode, onNodeSelection } = data;\n    return (React.createElement(\"g\", { className: \"odc-builder-node\", onFocus: () => setShowAdd(true), onBlur: () => setShowAdd(false), onMouseOver: () => setShowAdd(true), onMouseOut: () => setShowAdd(false) },\n        React.createElement(\"rect\", { x: -BUILDER_NODE_ADD_RADIUS * 2, y: 0, width: width + BUILDER_NODE_ADD_RADIUS * 4, height: height + BUILDER_NODE_ADD_RADIUS * 2, fill: \"transparent\" }),\n        React.createElement(\"g\", { onClick: () => onNodeSelection(data) },\n            React.createElement(TaskNode, { element: element, disableTooltip: true }),\n            error && (React.createElement(ErrorNodeDecorator, { x: BUILDER_NODE_ERROR_RADIUS / 2, y: BUILDER_NODE_ERROR_RADIUS / 4, errorStr: error }))),\n        React.createElement(\"g\", { style: { display: showAdd ? 'block' : 'none' } },\n            React.createElement(PlusNodeDecorator, { x: width + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING, y: height / 2, tooltip: \"Add a sequential task after this task\", onClick: () => onAddNode(AddNodeDirection.AFTER) }),\n            React.createElement(PlusNodeDecorator, { x: -BUILDER_NODE_ADD_RADIUS - BUILDER_NODE_ADD_PADDING, y: height / 2, tooltip: \"Add a sequential task before this task\", onClick: () => onAddNode(AddNodeDirection.BEFORE) }),\n            React.createElement(PlusNodeDecorator, { x: width / 2, y: height + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING, tooltip: \"Add a parallel task\", tooltipPosition: TooltipPosition.bottom, onClick: () => onAddNode(AddNodeDirection.PARALLEL) }))));\n};\nexport default observer(BuilderNode);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/BuilderNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/BuilderNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Node, NodeModel, observer } from '@console/topology';\nimport {\n  AddNodeDirection,\n  BUILDER_NODE_ADD_RADIUS,\n  BUILDER_NODE_ERROR_RADIUS,\n  BUILDER_NODE_ADD_PADDING,\n} from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskNode from './TaskNode';\nimport { BuilderNodeModelData } from './types';\nimport { TooltipPosition } from '@patternfly/react-core';\n\ntype BuilderNodeProps = {\n  element: Node<NodeModel, BuilderNodeModelData>;\n};\n\nconst BuilderNode: React.FC<BuilderNodeProps> = ({ element }) => {\n  const [showAdd, setShowAdd] = React.useState(false);\n  const { width, height } = element.getBounds();\n  const data = element.getData();\n  const { error, onAddNode, onNodeSelection } = data;\n\n  return (\n    <g\n      className=\"odc-builder-node\"\n      onFocus={() => setShowAdd(true)}\n      onBlur={() => setShowAdd(false)}\n      onMouseOver={() => setShowAdd(true)}\n      onMouseOut={() => setShowAdd(false)}\n    >\n      <rect\n        x={-BUILDER_NODE_ADD_RADIUS * 2}\n        y={0}\n        width={width + BUILDER_NODE_ADD_RADIUS * 4}\n        height={height + BUILDER_NODE_ADD_RADIUS * 2}\n        fill=\"transparent\"\n      />\n      <g onClick={() => onNodeSelection(data)}>\n        <TaskNode element={element} disableTooltip />\n        {error && (\n          <ErrorNodeDecorator\n            x={BUILDER_NODE_ERROR_RADIUS / 2}\n            y={BUILDER_NODE_ERROR_RADIUS / 4}\n            errorStr={error}\n          />\n        )}\n      </g>\n      <g style={{ display: showAdd ? 'block' : 'none' }}>\n        <PlusNodeDecorator\n          x={width + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip=\"Add a sequential task after this task\"\n          onClick={() => onAddNode(AddNodeDirection.AFTER)}\n        />\n        <PlusNodeDecorator\n          x={-BUILDER_NODE_ADD_RADIUS - BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip=\"Add a sequential task before this task\"\n          onClick={() => onAddNode(AddNodeDirection.BEFORE)}\n        />\n        <PlusNodeDecorator\n          x={width / 2}\n          y={height + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          tooltip=\"Add a parallel task\"\n          tooltipPosition={TooltipPosition.bottom}\n          onClick={() => onAddNode(AddNodeDirection.PARALLEL)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default observer(BuilderNode);\n"]}]}