{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/TriggerLastRunButton.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/TriggerLastRunButton.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { impersonateStateToProps } from '@console/internal/reducers/ui';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { rerunPipelineAndStay } from '../../../utils/pipeline-actions';\nimport { PipelineRunModel } from '../../../models';\nimport { usePipelineRunWithUserLabel } from '../../pipelineruns/triggered-by';\nimport { getLatestRun } from '../../../utils/pipeline-augment';\nconst TriggerLastRunButton = ({ pipelineRuns, namespace, impersonate, }) => {\n    const latestRun = usePipelineRunWithUserLabel(getLatestRun({ data: pipelineRuns }, 'startTimestamp'));\n    const { label, callback, accessReview: utilityAccessReview } = rerunPipelineAndStay(PipelineRunModel, latestRun);\n    const defaultAccessReview = {\n        group: PipelineRunModel.apiGroup,\n        resource: PipelineRunModel.plural,\n        namespace,\n        verb: 'create',\n    };\n    const accessReview = _.isEmpty(utilityAccessReview) ? defaultAccessReview : utilityAccessReview;\n    const isAllowed = useAccessReview(accessReview, impersonate);\n    return (isAllowed && (React.createElement(Button, { variant: \"secondary\", onClick: callback, isDisabled: pipelineRuns.length === 0 && !callback }, label)));\n};\nexport default connect(impersonateStateToProps)(TriggerLastRunButton);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/TriggerLastRunButton.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/TriggerLastRunButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EAAE,oBAAoB,EAAE,MAAM,iCAAiC,CAAC;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,2BAA2B,EAAE,MAAM,iCAAiC,CAAC;AAC9E,OAAO,EAAE,YAAY,EAAe,MAAM,iCAAiC,CAAC;AAQ5E,MAAM,oBAAoB,GAAwC,CAAC,EACjE,YAAY,EACZ,SAAS,EACT,WAAW,GACZ,EAAE,EAAE;IACH,MAAM,SAAS,GAAG,2BAA2B,CAC3C,YAAY,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,gBAAgB,CAAC,CACvD,CAAC;IACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,mBAAmB,EAAE,GAAG,oBAAoB,CACjF,gBAAgB,EAChB,SAAS,CACV,CAAC;IACF,MAAM,mBAAmB,GAAmC;QAC1D,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,QAAQ,EAAE,gBAAgB,CAAC,MAAM;QACjC,SAAS;QACT,IAAI,EAAE,QAAQ;KACf,CAAC;IACF,MAAM,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;IAChG,MAAM,SAAS,GAAG,eAAe,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IAC7D,OAAO,CACL,SAAS,IAAI,CACX,oBAAC,MAAM,IACL,OAAO,EAAC,WAAW,EACnB,OAAO,EAAE,QAAQ,EACjB,UAAU,EAAE,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,IAEjD,KAAK,CACC,CACV,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,uBAAuB,CAAC,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { impersonateStateToProps } from '@console/internal/reducers/ui';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { AccessReviewResourceAttributes } from '@console/internal/module/k8s';\nimport { rerunPipelineAndStay } from '../../../utils/pipeline-actions';\nimport { PipelineRunModel } from '../../../models';\nimport { usePipelineRunWithUserLabel } from '../../pipelineruns/triggered-by';\nimport { getLatestRun, PipelineRun } from '../../../utils/pipeline-augment';\n\ntype TriggerLastRunButtonProps = {\n  pipelineRuns: PipelineRun[];\n  namespace: string;\n  impersonate?;\n};\n\nconst TriggerLastRunButton: React.FC<TriggerLastRunButtonProps> = ({\n  pipelineRuns,\n  namespace,\n  impersonate,\n}) => {\n  const latestRun = usePipelineRunWithUserLabel(\n    getLatestRun({ data: pipelineRuns }, 'startTimestamp'),\n  );\n  const { label, callback, accessReview: utilityAccessReview } = rerunPipelineAndStay(\n    PipelineRunModel,\n    latestRun,\n  );\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace,\n    verb: 'create',\n  };\n  const accessReview = _.isEmpty(utilityAccessReview) ? defaultAccessReview : utilityAccessReview;\n  const isAllowed = useAccessReview(accessReview, impersonate);\n  return (\n    isAllowed && (\n      <Button\n        variant=\"secondary\"\n        onClick={callback}\n        isDisabled={pipelineRuns.length === 0 && !callback}\n      >\n        {label}\n      </Button>\n    )\n  );\n};\n\nexport default connect(impersonateStateToProps)(TriggerLastRunButton);\n"]}]}