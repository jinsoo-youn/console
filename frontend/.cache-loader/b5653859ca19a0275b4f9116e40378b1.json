{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-count-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-count-modal.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { k8sPatch } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { NumberSpinner, withHandlePromise } from '../utils';\nexport const ConfigureCountModal = withHandlePromise((props) => {\n    const getPath = props.path.substring(1).replace('/', '.');\n    const [value, setValue] = React.useState(_.get(props.resource, getPath) || props.defaultValue);\n    const submit = (e) => {\n        e.preventDefault();\n        const patch = [{ op: 'replace', path: props.path, value: _.toInteger(value) }];\n        const invalidateState = props.invalidateState || _.noop;\n        invalidateState(true, _.toInteger(value));\n        props\n            .handlePromise(k8sPatch(props.resourceKind, props.resource, patch))\n            .then(props.close)\n            .catch((error) => {\n            invalidateState(false);\n            throw error;\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content \" },\n        React.createElement(ModalTitle, null, props.title),\n        React.createElement(ModalBody, null,\n            React.createElement(\"p\", null, props.message),\n            React.createElement(NumberSpinner, { className: \"pf-c-form-control\", value: value, onChange: (e) => setValue(e.target.value), changeValueBy: (operation) => setValue(_.toInteger(value) + operation), autoFocus: true, required: true, min: 0 })),\n        React.createElement(ModalSubmitFooter, { errorMessage: props.errorMessage, inProgress: props.inProgress, submitText: props.buttonText, cancel: props.cancel })));\n});\nexport const configureCountModal = createModalLauncher(ConfigureCountModal);\nexport const configureReplicaCountModal = (props) => {\n    return configureCountModal(_.assign({}, {\n        defaultValue: 0,\n        title: 'Edit Pod Count',\n        message: `${props.resourceKind.labelPlural} maintain the desired number of healthy pods.`,\n        path: '/spec/replicas',\n        buttonText: 'Save',\n    }, props));\n};\nexport const configureJobParallelismModal = (props) => {\n    return configureCountModal(_.defaults({}, {\n        defaultValue: 1,\n        title: 'Edit Parallelism',\n        message: `${props.resourceKind.labelPlural} create one or more pods and ensure that a specified number of them successfully terminate. When the specified number of completions is successfully reached, the job is complete.`,\n        path: '/spec/parallelism',\n        buttonText: 'Save',\n    }, props));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-count-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/configure-count-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { k8sPatch, K8sResourceKind, K8sKind } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { NumberSpinner, withHandlePromise } from '../utils';\n\nexport const ConfigureCountModal = withHandlePromise((props: ConfigureCountModalProps) => {\n  const getPath = props.path.substring(1).replace('/', '.');\n  const [value, setValue] = React.useState<number>(\n    _.get(props.resource, getPath) || props.defaultValue,\n  );\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    const patch = [{ op: 'replace', path: props.path, value: _.toInteger(value) }];\n\n    const invalidateState = props.invalidateState || _.noop;\n\n    invalidateState(true, _.toInteger(value));\n    props\n      .handlePromise(k8sPatch(props.resourceKind, props.resource, patch))\n      .then(props.close)\n      .catch((error) => {\n        invalidateState(false);\n        throw error;\n      });\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>{props.title}</ModalTitle>\n      <ModalBody>\n        <p>{props.message}</p>\n        <NumberSpinner\n          className=\"pf-c-form-control\"\n          value={value}\n          onChange={(e: any) => setValue(e.target.value)}\n          changeValueBy={(operation) => setValue(_.toInteger(value) + operation)}\n          autoFocus\n          required\n          min={0}\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={props.errorMessage}\n        inProgress={props.inProgress}\n        submitText={props.buttonText}\n        cancel={props.cancel}\n      />\n    </form>\n  );\n});\n\nexport const configureCountModal = createModalLauncher(ConfigureCountModal);\n\nexport const configureReplicaCountModal = (props) => {\n  return configureCountModal(\n    _.assign(\n      {},\n      {\n        defaultValue: 0,\n        title: 'Edit Pod Count',\n        message: `${props.resourceKind.labelPlural} maintain the desired number of healthy pods.`,\n        path: '/spec/replicas',\n        buttonText: 'Save',\n      },\n      props,\n    ),\n  );\n};\n\nexport const configureJobParallelismModal = (props) => {\n  return configureCountModal(\n    _.defaults(\n      {},\n      {\n        defaultValue: 1,\n        title: 'Edit Parallelism',\n        message: `${props.resourceKind.labelPlural} create one or more pods and ensure that a specified number of them successfully terminate. When the specified number of completions is successfully reached, the job is complete.`,\n        path: '/spec/parallelism',\n        buttonText: 'Save',\n      },\n      props,\n    ),\n  );\n};\n\nexport type ConfigureCountModalProps = {\n  message: string;\n  buttonText: string;\n  defaultValue: number;\n  path: string;\n  resource: K8sResourceKind;\n  resourceKind: K8sKind;\n  title: string;\n  invalidateState?: (isInvalid: boolean, count?: number) => void;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n"]}]}