{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/knativeComponentFactory.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/knativeComponentFactory.ts","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { withDragNode, withTargetDrag, withSelection, withDndDrop, } from '@console/topology';\nimport { AbstractSBRComponentFactory, withContextMenu, withNoDrop, nodeDragSourceSpec, withEditReviewAccess, createMenuItems, getTopologyResourceObject, } from '@console/dev-console/src/components/topology';\nimport { ModifyApplication } from '@console/dev-console/src/actions/modify-application';\nimport { Kebab, kebabOptionsToMenu } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RevisionModel } from '../../models';\nimport { getRevisionActions } from '../../actions/getRevisionActions';\nimport { TYPE_EVENT_SOURCE, TYPE_EVENT_SOURCE_LINK, TYPE_KNATIVE_REVISION, TYPE_KNATIVE_SERVICE, TYPE_REVISION_TRAFFIC, } from '../const';\nimport KnativeService from './groups/KnativeService';\nimport RevisionNode from './nodes/RevisionNode';\nimport TrafficLink from './edges/TrafficLink';\nimport EventSourceLink from './edges/EventSourceLink';\nimport EventSource from './nodes/EventSource';\nimport { eventSourceLinkDragSourceSpec, eventSourceTargetSpec, knativeServiceDropTargetSpec, } from './knativeComponentUtils';\nexport const knativeContextMenu = (element) => {\n    const item = getTopologyResourceObject(element.getData());\n    const model = modelFor(referenceFor(item));\n    const actions = [];\n    if (model.kind === RevisionModel.kind) {\n        actions.push(...getRevisionActions());\n    }\n    else {\n        actions.push(ModifyApplication, ...Kebab.getExtensionsActionsForKind(model), ...Kebab.factory.common);\n    }\n    const kebabOptions = actions.map((action) => {\n        return action(model, item);\n    });\n    return createMenuItems(kebabOptionsToMenu(kebabOptions));\n};\nclass KnativeComponentFactory extends AbstractSBRComponentFactory {\n    constructor() {\n        super(...arguments);\n        this.getFactory = () => {\n            return (kind, type) => {\n                switch (type) {\n                    case TYPE_KNATIVE_SERVICE:\n                        return this.withAddResourceConnector()(withDndDrop(knativeServiceDropTargetSpec)(withEditReviewAccess('update')(withSelection(false, true)(withContextMenu(knativeContextMenu)(KnativeService)))));\n                    case TYPE_EVENT_SOURCE:\n                        return withEditReviewAccess('patch')(withDragNode(nodeDragSourceSpec(type))(withSelection(false, true)(withContextMenu(knativeContextMenu)(withDndDrop(eventSourceTargetSpec)(EventSource)))));\n                    case TYPE_KNATIVE_REVISION:\n                        return withDragNode(nodeDragSourceSpec(type, false))(withSelection(false, true)(withContextMenu(knativeContextMenu)(withNoDrop()(RevisionNode))));\n                    case TYPE_REVISION_TRAFFIC:\n                        return TrafficLink;\n                    case TYPE_EVENT_SOURCE_LINK:\n                        return withTargetDrag(eventSourceLinkDragSourceSpec())(EventSourceLink);\n                    default:\n                        return undefined;\n                }\n            };\n        };\n    }\n}\nexport default KnativeComponentFactory;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/knativeComponentFactory.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/knativeComponentFactory.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  GraphElement,\n  Node,\n  ComponentFactory as TopologyComponentFactory,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n} from '@console/topology';\nimport {\n  AbstractSBRComponentFactory,\n  NodeComponentProps,\n  withContextMenu,\n  withNoDrop,\n  nodeDragSourceSpec,\n  withEditReviewAccess,\n  createMenuItems,\n  getTopologyResourceObject,\n} from '@console/dev-console/src/components/topology';\nimport { ModifyApplication } from '@console/dev-console/src/actions/modify-application';\nimport { Kebab, kebabOptionsToMenu } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RevisionModel } from '../../models';\nimport { getRevisionActions } from '../../actions/getRevisionActions';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_REVISION_TRAFFIC,\n} from '../const';\nimport KnativeService from './groups/KnativeService';\nimport RevisionNode from './nodes/RevisionNode';\nimport TrafficLink from './edges/TrafficLink';\nimport EventSourceLink from './edges/EventSourceLink';\nimport EventSource from './nodes/EventSource';\nimport {\n  eventSourceLinkDragSourceSpec,\n  eventSourceTargetSpec,\n  knativeServiceDropTargetSpec,\n} from './knativeComponentUtils';\n\nexport const knativeContextMenu = (element: Node) => {\n  const item = getTopologyResourceObject(element.getData());\n  const model = modelFor(referenceFor(item));\n\n  const actions = [];\n  if (model.kind === RevisionModel.kind) {\n    actions.push(...getRevisionActions());\n  } else {\n    actions.push(\n      ModifyApplication,\n      ...Kebab.getExtensionsActionsForKind(model),\n      ...Kebab.factory.common,\n    );\n  }\n\n  const kebabOptions = actions.map((action) => {\n    return action(model, item);\n  });\n\n  return createMenuItems(kebabOptionsToMenu(kebabOptions));\n};\n\nclass KnativeComponentFactory extends AbstractSBRComponentFactory {\n  getFactory = (): TopologyComponentFactory => {\n    return (kind, type): React.ComponentType<{ element: GraphElement }> | undefined => {\n      switch (type) {\n        case TYPE_KNATIVE_SERVICE:\n          return this.withAddResourceConnector()(\n            withDndDrop<\n              any,\n              any,\n              { droppable?: boolean; hover?: boolean; canDrop?: boolean; dropTarget?: boolean },\n              NodeComponentProps\n            >(knativeServiceDropTargetSpec)(\n              withEditReviewAccess('update')(\n                withSelection(false, true)(withContextMenu(knativeContextMenu)(KnativeService)),\n              ),\n            ),\n          );\n        case TYPE_EVENT_SOURCE:\n          return withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection(\n                false,\n                true,\n              )(\n                withContextMenu(knativeContextMenu)(\n                  withDndDrop<any, any, {}, NodeComponentProps>(eventSourceTargetSpec)(EventSource),\n                ),\n              ),\n            ),\n          );\n        case TYPE_KNATIVE_REVISION:\n          return withDragNode(nodeDragSourceSpec(type, false))(\n            withSelection(\n              false,\n              true,\n            )(withContextMenu(knativeContextMenu)(withNoDrop()(RevisionNode))),\n          );\n        case TYPE_REVISION_TRAFFIC:\n          return TrafficLink;\n        case TYPE_EVENT_SOURCE_LINK:\n          return withTargetDrag(eventSourceLinkDragSourceSpec())(EventSourceLink);\n        default:\n          return undefined;\n      }\n    };\n  };\n}\n\nexport default KnativeComponentFactory;\n"]}]}