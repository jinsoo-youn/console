{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/useCombineRefs.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/useCombineRefs.ts","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nexport const useCombineRefs = (...refs) => React.useCallback((element) => refs.forEach((ref) => {\n    if (ref) {\n        if (typeof ref === 'function') {\n            ref(element);\n        }\n        else {\n            ref.current = element;\n        }\n    }\n}), \n// eslint-disable-next-line react-hooks/exhaustive-deps\nrefs);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/useCombineRefs.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/useCombineRefs.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,MAAM,CAAC,MAAM,cAAc,GAAG,CAAsB,GAAG,IAAwC,EAAE,EAAE,CACjG,KAAK,CAAC,WAAW,CACf,CAAC,OAAuB,EAAQ,EAAE,CAChC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;IACnB,IAAI,GAAG,EAAE;QACP,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;YAC7B,GAAG,CAAC,OAAO,CAAC,CAAC;SACd;aAAM;YACJ,GAAmC,CAAC,OAAO,GAAG,OAAO,CAAC;SACxD;KACF;AACH,CAAC,CAAC;AACJ,uDAAuD;AACvD,IAAI,CACL,CAAC","sourcesContent":["import * as React from 'react';\n\nexport const useCombineRefs = <RefType extends any>(...refs: (React.Ref<RefType> | undefined)[]) =>\n  React.useCallback(\n    (element: RefType | null): void =>\n      refs.forEach((ref) => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(element);\n          } else {\n            (ref as React.MutableRefObject<any>).current = element;\n          }\n        }\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs,\n  );\n"]}]}