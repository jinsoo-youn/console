{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/sorts/nodes.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/sorts/nodes.ts","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as UIActions from '@console/internal/actions/ui';\nexport const nodeMemory = (node) => {\n    const used = UIActions.getNodeMetric(node, 'usedMemory');\n    const total = UIActions.getNodeMetric(node, 'totalMemory');\n    return total === 0 ? 0 : used / total;\n};\nexport const nodeFS = (node) => {\n    const used = UIActions.getNodeMetric(node, 'usedStorage');\n    const total = UIActions.getNodeMetric(node, 'totalStorage');\n    return total === 0 ? 0 : used / total;\n};\nexport const nodeCPU = (node) => Number(UIActions.getNodeMetric(node, 'cpu'));\nexport const nodePods = (node) => Number(UIActions.getNodeMetric(node, 'pods'));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/sorts/nodes.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/sorts/nodes.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,SAAS,MAAM,8BAA8B,CAAC;AAG1D,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,IAAc,EAAU,EAAE;IACnD,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC3D,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;AACxC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,IAAc,EAAU,EAAE;IAC/C,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC1D,MAAM,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC5D,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;AACxC,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,IAAc,EAAU,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAChG,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAc,EAAU,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC","sourcesContent":["import * as UIActions from '@console/internal/actions/ui';\nimport { NodeKind } from '@console/internal/module/k8s';\n\nexport const nodeMemory = (node: NodeKind): number => {\n  const used = UIActions.getNodeMetric(node, 'usedMemory');\n  const total = UIActions.getNodeMetric(node, 'totalMemory');\n  return total === 0 ? 0 : used / total;\n};\nexport const nodeFS = (node: NodeKind): number => {\n  const used = UIActions.getNodeMetric(node, 'usedStorage');\n  const total = UIActions.getNodeMetric(node, 'totalStorage');\n  return total === 0 ? 0 : used / total;\n};\nexport const nodeCPU = (node: NodeKind): number => Number(UIActions.getNodeMetric(node, 'cpu'));\nexport const nodePods = (node: NodeKind): number => Number(UIActions.getNodeMetric(node, 'pods'));\n"]}]}