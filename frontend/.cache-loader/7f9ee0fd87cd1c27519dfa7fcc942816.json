{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/chargeback.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/chargeback.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { connectToFlags } from '../reducers/features';\nimport { FLAGS } from '@console/shared';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { coFetchJSON } from '../co-fetch';\nimport { ChargebackReportModel, ReportQueryModel } from '../models';\nimport { LoadError, LoadingInline, MsgBox } from './utils/status-box';\nimport { modelFor, referenceForModel } from '../module/k8s';\nimport { Kebab, DownloadButton, LabelList, NavBar, navFactory, PageHeading, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, } from './utils';\nexport const ReportReference = referenceForModel(ChargebackReportModel);\nexport const ScheduledReportReference = 'metering.openshift.io~ScheduledReport';\nexport const ReportGenerationQueryReference = referenceForModel(ReportQueryModel);\nconst reportPages = [\n    { name: 'All Reports', href: ReportReference },\n    { name: 'Report Queries', href: ReportGenerationQueryReference },\n];\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ChargebackReportModel), ...common];\nconst dataURL = (obj, format = 'json') => {\n    return `${window.SERVER_FLAGS.meteringBaseURL}/api/v2/reports/${obj.metadata.namespace}/${obj.metadata.name}/table?format=${format}`;\n};\nconst removeLastPathElement = (path) => path\n    .split('/')\n    .slice(0, -1)\n    .join('/');\nconst ChargebackNavBar = (props) => (React.createElement(\"div\", null,\n    React.createElement(PageHeading, { title: \"Chargeback Reporting\", style: { paddingBottom: 15 } }),\n    React.createElement(NavBar, { pages: reportPages, basePath: removeLastPathElement(props.match.path), baseURL: removeLastPathElement(props.match.url) })));\nconst tableColumnClasses = [\n    classNames('col-lg-3', 'col-md-3', 'col-xs-4'),\n    classNames('col-lg-2', 'col-md-3', 'col-xs-4'),\n    classNames('col-lg-3', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n    classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst ReportsTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Report Query',\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Reporting Start',\n            sortField: 'spec.reportingStart',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Reporting End',\n            sortField: 'spec.reportingEnd',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nReportsTableHeader.displayName = 'ReportsTableHeader';\nconst ReportsTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: ReportReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, namespace: undefined, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(ResourceLink, { kind: ReportGenerationQueryReference, name: _.get(obj, ['spec', 'query']), namespace: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: _.get(obj, ['spec', 'reportingStart']) })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: _.get(obj, ['spec', 'reportingEnd']) })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: ReportReference, resource: obj }))));\n};\nclass ReportsDetails extends React.Component {\n    render() {\n        const { obj } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(SectionHeading, { text: \"Report Details\" }),\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6 col-xs-12\" },\n                        React.createElement(ResourceSummary, { resource: obj })),\n                    React.createElement(\"div\", { className: \"col-sm-6 col-xs-12\" },\n                        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                            React.createElement(\"dt\", null, \"Reporting Start\"),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Timestamp, { timestamp: _.get(obj, ['spec', 'reportingStart']) })),\n                            React.createElement(\"dt\", null, \"Reporting End\"),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Timestamp, { timestamp: _.get(obj, ['spec', 'reportingEnd']) })),\n                            React.createElement(\"dt\", null, \"Report Query\"),\n                            React.createElement(\"dd\", null,\n                                React.createElement(ResourceLink, { kind: ReportGenerationQueryReference, name: _.get(obj, ['spec', 'query']), namespace: obj.metadata.namespace, title: obj.metadata.namespace })),\n                            React.createElement(\"dt\", null, \"Run Immediately?\"),\n                            React.createElement(\"dd\", null, Boolean(_.get(obj, ['spec', 'runImmediately'])).toString()))))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(SectionHeading, { text: \"Conditions\" }),\n                React.createElement(Conditions, { conditions: _.get(obj, 'status.conditions') })),\n            React.createElement(ReportData, { obj: obj })));\n    }\n}\nconst numericUnits = new Set([\n    'bytes',\n    'byte_seconds',\n    'cpu_core_seconds',\n    'cpu_cores',\n    'memory_bytes',\n    'memory_byte_seconds',\n    'numeric',\n    'seconds',\n]);\nconst DataCell = ({ name, value, unit }) => {\n    if (numericUnits.has(unit)) {\n        return React.createElement(\"div\", { className: \"text-right\" }, _.round(value, 2).toLocaleString());\n    }\n    if (unit === 'date' || unit === 'time') {\n        return React.createElement(Timestamp, { timestamp: value });\n    }\n    name = _.startCase(name);\n    const model = modelFor(name);\n    if (model) {\n        return React.createElement(ResourceLink, { kind: name, name: value, title: value, linkTo: !model.namespaced });\n    }\n    return value;\n};\nconst DataTable = ({ cols, rows, schema }) => {\n    const getUnit = (col) => {\n        const colSchema = _.find(schema.values, { name: col });\n        return _.get(colSchema, 'unit', _.isFinite(_.get(colSchema, 'value')) ? 'numeric' : null);\n    };\n    const DataTableHeader = () => _.map(cols, (col) => {\n        return {\n            sortField: col,\n            title: React.createElement(\"span\", { className: \"pf-m-wrap co-break-word\" }, col.replace(/_/g, ' ')),\n            transforms: [sortable],\n        };\n    });\n    const DataTableRows = ({ componentProps: { data } }) => _.map(data, (r) => _.map(r, (v, c) => {\n        return { title: React.createElement(DataCell, { name: c, value: v, unit: getUnit(c) }) };\n    }));\n    return (React.createElement(Table, { \"aria-label\": \"Usage Report\", Header: DataTableHeader, Rows: DataTableRows, data: rows, virtualize: false, loaded: true }));\n};\nclass ReportData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inFlight: false,\n            error: null,\n            data: null,\n            sortBy: null,\n            orderBy: null,\n            cols: [],\n            rows: null,\n        };\n    }\n    fetchData() {\n        this.setState({\n            inFlight: true,\n            error: null,\n        }, () => coFetchJSON(dataURL(this.props.obj))\n            .then((data) => this.makeTable(data))\n            .catch((e) => this.setState({ error: e }))\n            .then(() => this.setState({ inFlight: false })));\n    }\n    componentDidMount() {\n        this.fetchData();\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // if request is still inFlight or props haven't changed then return\n        if (this.state.inFlight || _.isEqual(this.props, nextProps)) {\n            return;\n        }\n        const conditions = _.get(nextProps.obj, 'status.conditions');\n        const isReportFinished = _.some(conditions, { type: 'Running', status: 'False' });\n        if (isReportFinished) {\n            this.fetchData();\n        }\n    }\n    makeTable(data = this.state.data) {\n        if (!data || _.isEmpty(data.results)) {\n            return;\n        }\n        const cols = this.getColumns(data);\n        const rows = this.getRows(data);\n        this.setState({\n            data,\n            cols,\n            rows,\n        });\n    }\n    getColumns(data) {\n        const firstRow = _.head(data.results);\n        return _.map(firstRow.values, (item) => item.name);\n    }\n    getRows(data) {\n        /* Converts data to rows:\n        //  data = {\n        //   results: [\n        //     {\n        //       values: [\n        //         {\n        //           name: \"period_start\",\n        //           value: \"2019-01-01T00:00:00Z\",\n        //           unit: \"date\"\n        //         },\n        //         {\n        //           name: \"pod_usage_cpu_core_seconds\",\n        //           value: 235.73856000000004,\n        //           unit: \"core_seconds\"\n        //         },\n        //         ...\n        //       ]\n        //     },\n        //     {\n        //       values: [\n        //         {\n        //           name: \"period_start\",\n        //           value: \"2019-01-01T00:00:00Z\",\n        //           unit: \"date\"\n        //         },\n        //         {\n        //           name: \"pod_usage_cpu_core_seconds\",\n        //           value: 21.864000000000004,\n        //           unit: \"core_seconds\"\n        //\n        //   ... to ...\n        //\n        //   rows = [\n        //   {\n        //   \"period_start\": \"2019-01-01T00:00:00Z\",\n        //   \"pod_usage_cpu_core_seconds\": 235.73856000000004\n        //   ...\n        //  },\n        //  {\n        //   \"period_start\": \"2019-01-01T00:00:00Z\",\n        //   \"pod_usage_cpu_core_seconds\": 21.864000000000004\n        //   ...\n        //  },\n        //  ...\n         */\n        const rows = _.map(data.results, ({ values }) => {\n            return _.reduce(values, (acc, { name, value }) => {\n                acc[name] = value;\n                return acc;\n            }, {});\n        });\n        return rows;\n    }\n    render() {\n        const { obj } = this.props;\n        const { data, cols, rows, inFlight, error } = this.state;\n        let dataElem = React.createElement(MsgBox, { title: \"No Data\", detail: \"Report contains no results.\" });\n        if (inFlight) {\n            dataElem = (React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12 text-center\" },\n                    React.createElement(LoadingInline, null))));\n        }\n        else if (error) {\n            dataElem = React.createElement(LoadError, { label: \"Report\", message: _.get(error, 'json.error') || error.message });\n        }\n        else if (data) {\n            if (data.error) {\n                dataElem = React.createElement(LoadError, { label: \"Report\", message: data.error });\n            }\n            else {\n                dataElem = React.createElement(DataTable, { cols: cols, rows: rows, schema: _.head(data.results) });\n            }\n        }\n        const format = 'csv';\n        const downloadURL = dataURL(obj, format);\n        return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Usage Report\" }),\n            React.createElement(DownloadButton, { url: downloadURL }),\n            dataElem));\n    }\n}\nconst reportsPages = [navFactory.details(ReportsDetails), navFactory.editYaml()];\nconst EmptyMsg = () => (React.createElement(MsgBox, { title: \"No reports have been generated\", detail: \"Reports allow resource usage and cost to be tracked per namespace, pod, and more.\" }));\nexport const ReportsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Reports\", Header: ReportsTableHeader, Row: ReportsTableRow, EmptyMsg: EmptyMsg, virtualize: true })));\nconst ReportsPage_ = (props) => {\n    return (React.createElement(\"div\", null,\n        React.createElement(ChargebackNavBar, { match: props.match }),\n        React.createElement(ListPage, Object.assign({}, props, { showTitle: false, kind: ReportReference, ListComponent: ReportsList, canCreate: true }))));\n};\nexport const ReportsPage = connectToFlags(FLAGS.CHARGEBACK)(ReportsPage_);\nexport const ReportsDetailsPage = (props) => {\n    return (React.createElement(DetailsPage, Object.assign({}, props, { kind: ReportReference, menuActions: menuActions, pages: reportsPages })));\n};\nconst reportsGenerationColumnClasses = [\n    classNames('col-md-3', 'col-sm-4'),\n    classNames('col-md-3', 'col-sm-4'),\n    classNames('col-md-3', 'hidden-sm', 'hidden-xs'),\n    classNames('col-md-3', 'col-sm-4'),\n    Kebab.columnClass,\n];\nconst ReportGenerationQueriesTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: reportsGenerationColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: reportsGenerationColumnClasses[1] },\n        },\n        {\n            title: 'Labels',\n            props: { className: reportsGenerationColumnClasses[2] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: reportsGenerationColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: reportsGenerationColumnClasses[4] },\n        },\n    ];\n};\nReportGenerationQueriesTableHeader.displayName = 'ReportGenerationQueriesTableHeader';\nconst ReportGenerationQueriesTableRow = ({ obj, index, key, style, }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: reportsGenerationColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: ReportGenerationQueryReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: reportsGenerationColumnClasses[1] },\n            React.createElement(ResourceLink, { kind: \"Namespace\", namespace: undefined, name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: reportsGenerationColumnClasses[2] },\n            React.createElement(LabelList, { kind: ReportGenerationQueryReference, labels: _.get(obj, ['metadata', 'labels']) })),\n        React.createElement(TableData, { className: reportsGenerationColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: _.get(obj, ['metadata', 'creationTimestamp']) })),\n        React.createElement(TableData, { className: reportsGenerationColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: ReportGenerationQueryReference, resource: obj }))));\n};\nconst ReportGenerationQueriesDetails = ({ obj, }) => {\n    const columns = _.get(obj, ['spec', 'columns'], []).map((column, i) => (React.createElement(\"tr\", { key: i },\n        React.createElement(\"td\", null, column.name),\n        React.createElement(\"td\", null, column.type))));\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Chargeback Report Generation Query\" }),\n            React.createElement(ResourceSummary, { resource: obj },\n                React.createElement(\"dt\", null, \"Query\"),\n                React.createElement(\"dd\", null,\n                    React.createElement(\"pre\", null,\n                        React.createElement(\"code\", null, _.get(obj, ['spec', 'query'])))),\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-xs-12\" },\n                        React.createElement(\"h3\", null, \"Columns\"),\n                        React.createElement(\"div\", { className: \"co-table-container\" },\n                            React.createElement(\"table\", { className: \"table\" },\n                                React.createElement(\"thead\", null,\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"th\", null, \"Column\"),\n                                        React.createElement(\"th\", null, \"Type\"))),\n                                React.createElement(\"tbody\", null, columns)))))))));\n};\nexport const ReportGenerationQueriesList = (props) => (React.createElement(Table, Object.assign({ \"aria-label\": \"Chargeback Queries List\" }, props, { Header: ReportGenerationQueriesTableHeader, Row: ReportGenerationQueriesTableRow, virtualize: true })));\nexport const ReportGenerationQueriesPage = (props) => (React.createElement(\"div\", null,\n    React.createElement(ChargebackNavBar, { match: props.match }),\n    React.createElement(ListPage, Object.assign({}, props, { showTitle: false, kind: ReportGenerationQueryReference, ListComponent: ReportGenerationQueriesList, canCreate: true, filterLabel: props.filterLabel }))));\nconst reportGenerationQueryPages = [\n    navFactory.details(ReportGenerationQueriesDetails),\n    navFactory.editYaml(),\n];\nexport const ReportGenerationQueriesDetailsPage = (props) => {\n    return (React.createElement(DetailsPage, Object.assign({}, props, { kind: ReportGenerationQueryReference, menuActions: menuActions, pages: reportGenerationQueryPages })));\n};\nReportsList.displayName = 'ReportsList';\nReportsPage.displayName = 'ReportsPage';\nReportsDetailsPage.displayName = 'ReportsDetailsPage';\nReportGenerationQueriesDetails.displayName = 'ReportGenerationQueriesDetails';\nReportGenerationQueriesList.displayName = 'ReportGenerationQueriesList';\nReportGenerationQueriesPage.displayName = 'ReportGenerationQueriesPage';\nReportGenerationQueriesDetailsPage.displayName = 'ReportGenerationQueriesDetailsPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/chargeback.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/chargeback.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { connectToFlags } from '../reducers/features';\nimport { FLAGS } from '@console/shared';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { coFetchJSON } from '../co-fetch';\nimport { ChargebackReportModel, ReportQueryModel } from '../models';\nimport { LoadError, LoadingInline, MsgBox } from './utils/status-box';\nimport { GroupVersionKind, K8sResourceKind, modelFor, referenceForModel } from '../module/k8s';\nimport {\n  Kebab,\n  DownloadButton,\n  LabelList,\n  NavBar,\n  navFactory,\n  PageHeading,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\n\nexport const ReportReference: GroupVersionKind = referenceForModel(ChargebackReportModel);\nexport const ScheduledReportReference: GroupVersionKind = 'metering.openshift.io~ScheduledReport';\nexport const ReportGenerationQueryReference: GroupVersionKind = referenceForModel(ReportQueryModel);\n\nconst reportPages = [\n  { name: 'All Reports', href: ReportReference },\n  { name: 'Report Queries', href: ReportGenerationQueryReference },\n];\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ChargebackReportModel), ...common];\n\nconst dataURL = (obj: K8sResourceKind, format = 'json') => {\n  return `${window.SERVER_FLAGS.meteringBaseURL}/api/v2/reports/${obj.metadata.namespace}/${obj.metadata.name}/table?format=${format}`;\n};\n\nconst removeLastPathElement = (path: string) =>\n  path\n    .split('/')\n    .slice(0, -1)\n    .join('/');\n\nconst ChargebackNavBar: React.SFC<{ match: { url: string; path: string } }> = (props) => (\n  <div>\n    <PageHeading title=\"Chargeback Reporting\" style={{ paddingBottom: 15 }} />\n    <NavBar\n      pages={reportPages}\n      basePath={removeLastPathElement(props.match.path)}\n      baseURL={removeLastPathElement(props.match.url)}\n    />\n  </div>\n);\n\nconst tableColumnClasses = [\n  classNames('col-lg-3', 'col-md-3', 'col-xs-4'),\n  classNames('col-lg-2', 'col-md-3', 'col-xs-4'),\n  classNames('col-lg-3', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst ReportsTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Report Query',\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Reporting Start',\n      sortField: 'spec.reportingStart',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Reporting End',\n      sortField: 'spec.reportingEnd',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nReportsTableHeader.displayName = 'ReportsTableHeader';\n\nconst ReportsTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ReportReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink\n          kind=\"Namespace\"\n          name={obj.metadata.namespace}\n          namespace={undefined}\n          title={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <ResourceLink\n          kind={ReportGenerationQueryReference}\n          name={_.get(obj, ['spec', 'query'])}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={_.get(obj, ['spec', 'reportingStart'])} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={_.get(obj, ['spec', 'reportingEnd'])} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={ReportReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nclass ReportsDetails extends React.Component<ReportsDetailsProps> {\n  render() {\n    const { obj } = this.props;\n    return (\n      <div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text=\"Report Details\" />\n          <div className=\"row\">\n            <div className=\"col-sm-6 col-xs-12\">\n              <ResourceSummary resource={obj} />\n            </div>\n            <div className=\"col-sm-6 col-xs-12\">\n              <dl className=\"co-m-pane__details\">\n                <dt>Reporting Start</dt>\n                <dd>\n                  <Timestamp timestamp={_.get(obj, ['spec', 'reportingStart'])} />\n                </dd>\n                <dt>Reporting End</dt>\n                <dd>\n                  <Timestamp timestamp={_.get(obj, ['spec', 'reportingEnd'])} />\n                </dd>\n                <dt>Report Query</dt>\n                <dd>\n                  <ResourceLink\n                    kind={ReportGenerationQueryReference}\n                    name={_.get(obj, ['spec', 'query'])}\n                    namespace={obj.metadata.namespace}\n                    title={obj.metadata.namespace}\n                  />\n                </dd>\n                <dt>Run Immediately?</dt>\n                <dd>{Boolean(_.get(obj, ['spec', 'runImmediately'])).toString()}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text=\"Conditions\" />\n          <Conditions conditions={_.get(obj, 'status.conditions')} />\n        </div>\n        <ReportData obj={obj} />\n      </div>\n    );\n  }\n}\n\nconst numericUnits = new Set([\n  'bytes',\n  'byte_seconds',\n  'cpu_core_seconds',\n  'cpu_cores',\n  'memory_bytes',\n  'memory_byte_seconds',\n  'numeric',\n  'seconds',\n]);\n\nconst DataCell = ({ name, value, unit }: DataTableCellProps) => {\n  if (numericUnits.has(unit)) {\n    return <div className=\"text-right\">{_.round(value, 2).toLocaleString()}</div>;\n  }\n  if (unit === 'date' || unit === 'time') {\n    return <Timestamp timestamp={value} />;\n  }\n  name = _.startCase(name);\n  const model = modelFor(name);\n  if (model) {\n    return <ResourceLink kind={name} name={value} title={value} linkTo={!model.namespaced} />;\n  }\n  return value;\n};\n\nconst DataTable = ({ cols, rows, schema }: DataTableProps) => {\n  const getUnit = (col: string) => {\n    const colSchema = _.find(schema.values, { name: col });\n    return _.get(colSchema, 'unit', _.isFinite(_.get(colSchema, 'value')) ? 'numeric' : null);\n  };\n\n  const DataTableHeader = () =>\n    _.map(cols, (col) => {\n      return {\n        sortField: col,\n        title: <span className=\"pf-m-wrap co-break-word\">{col.replace(/_/g, ' ')}</span>,\n        transforms: [sortable],\n      };\n    });\n\n  const DataTableRows = ({ componentProps: { data } }: DataTableRowsProps) =>\n    _.map(data, (r) =>\n      _.map(r, (v, c) => {\n        return { title: <DataCell name={c} value={v} unit={getUnit(c)} /> };\n      }),\n    );\n\n  return (\n    <Table\n      aria-label=\"Usage Report\"\n      Header={DataTableHeader}\n      Rows={DataTableRows}\n      data={rows}\n      virtualize={false}\n      loaded={true}\n    />\n  );\n};\n\nclass ReportData extends React.Component<ReportDataProps, ReportDataState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inFlight: false,\n      error: null,\n      data: null,\n      sortBy: null,\n      orderBy: null,\n      cols: [],\n      rows: null,\n    };\n  }\n\n  fetchData() {\n    this.setState(\n      {\n        inFlight: true,\n        error: null,\n        // setState is async. Re-render with inFlight = true so that we don't show a \"No data\" msg while data is loading\n      },\n      () =>\n        coFetchJSON(dataURL(this.props.obj))\n          .then((data) => this.makeTable(data))\n          .catch((e) => this.setState({ error: e }))\n          .then(() => this.setState({ inFlight: false })),\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // if request is still inFlight or props haven't changed then return\n    if (this.state.inFlight || _.isEqual(this.props, nextProps)) {\n      return;\n    }\n\n    const conditions = _.get(nextProps.obj, 'status.conditions');\n    const isReportFinished = _.some(conditions, { type: 'Running', status: 'False' });\n    if (isReportFinished) {\n      this.fetchData();\n    }\n  }\n\n  makeTable(data = this.state.data) {\n    if (!data || _.isEmpty(data.results)) {\n      return;\n    }\n    const cols = this.getColumns(data);\n    const rows = this.getRows(data);\n\n    this.setState({\n      data,\n      cols,\n      rows,\n    });\n  }\n\n  getColumns(data: { results: any[] }) {\n    const firstRow = _.head(data.results);\n    return _.map(firstRow.values, (item) => item.name);\n  }\n\n  getRows(data: { results: any[] }) {\n    /* Converts data to rows:\n    //  data = {\n    //   results: [\n    //     {\n    //       values: [\n    //         {\n    //           name: \"period_start\",\n    //           value: \"2019-01-01T00:00:00Z\",\n    //           unit: \"date\"\n    //         },\n    //         {\n    //           name: \"pod_usage_cpu_core_seconds\",\n    //           value: 235.73856000000004,\n    //           unit: \"core_seconds\"\n    //         },\n    //         ...\n    //       ]\n    //     },\n    //     {\n    //       values: [\n    //         {\n    //           name: \"period_start\",\n    //           value: \"2019-01-01T00:00:00Z\",\n    //           unit: \"date\"\n    //         },\n    //         {\n    //           name: \"pod_usage_cpu_core_seconds\",\n    //           value: 21.864000000000004,\n    //           unit: \"core_seconds\"\n    //\n    //   ... to ...\n    //\n    //   rows = [\n    //   {\n    //   \"period_start\": \"2019-01-01T00:00:00Z\",\n    //   \"pod_usage_cpu_core_seconds\": 235.73856000000004\n    //   ...\n    //  },\n    //  {\n    //   \"period_start\": \"2019-01-01T00:00:00Z\",\n    //   \"pod_usage_cpu_core_seconds\": 21.864000000000004\n    //   ...\n    //  },\n    //  ...\n     */\n    const rows = _.map(data.results, ({ values }) => {\n      return _.reduce(\n        values,\n        (acc, { name, value }) => {\n          acc[name] = value;\n          return acc;\n        },\n        {},\n      );\n    });\n\n    return rows;\n  }\n\n  render() {\n    const { obj } = this.props;\n    const { data, cols, rows, inFlight, error } = this.state;\n\n    let dataElem = <MsgBox title=\"No Data\" detail=\"Report contains no results.\" />;\n    if (inFlight) {\n      dataElem = (\n        <div className=\"row\">\n          <div className=\"col-xs-12 text-center\">\n            <LoadingInline />\n          </div>\n        </div>\n      );\n    } else if (error) {\n      dataElem = <LoadError label=\"Report\" message={_.get(error, 'json.error') || error.message} />;\n    } else if (data) {\n      if (data.error) {\n        dataElem = <LoadError label=\"Report\" message={data.error} />;\n      } else {\n        dataElem = <DataTable cols={cols} rows={rows} schema={_.head(data.results)} />;\n      }\n    }\n    const format = 'csv';\n    const downloadURL = dataURL(obj, format);\n\n    return (\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Usage Report\" />\n        <DownloadButton url={downloadURL} />\n        {dataElem}\n      </div>\n    );\n  }\n}\n\nconst reportsPages = [navFactory.details(ReportsDetails), navFactory.editYaml()];\n\nconst EmptyMsg = () => (\n  <MsgBox\n    title=\"No reports have been generated\"\n    detail=\"Reports allow resource usage and cost to be tracked per namespace, pod, and more.\"\n  />\n);\n\nexport const ReportsList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Reports\"\n    Header={ReportsTableHeader}\n    Row={ReportsTableRow}\n    EmptyMsg={EmptyMsg}\n    virtualize\n  />\n);\n\nconst ReportsPage_: React.SFC<ReportsPageProps> = (props) => {\n  return (\n    <div>\n      <ChargebackNavBar match={props.match} />\n      <ListPage\n        {...props}\n        showTitle={false}\n        kind={ReportReference}\n        ListComponent={ReportsList}\n        canCreate={true}\n      />\n    </div>\n  );\n};\n\nexport const ReportsPage = connectToFlags(FLAGS.CHARGEBACK)(ReportsPage_);\n\nexport const ReportsDetailsPage: React.SFC<ReportsDetailsPageProps> = (props) => {\n  return (\n    <DetailsPage {...props} kind={ReportReference} menuActions={menuActions} pages={reportsPages} />\n  );\n};\n\nconst reportsGenerationColumnClasses = [\n  classNames('col-md-3', 'col-sm-4'),\n  classNames('col-md-3', 'col-sm-4'),\n  classNames('col-md-3', 'hidden-sm', 'hidden-xs'),\n  classNames('col-md-3', 'col-sm-4'),\n  Kebab.columnClass,\n];\n\nconst ReportGenerationQueriesTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: reportsGenerationColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: reportsGenerationColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      props: { className: reportsGenerationColumnClasses[2] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: reportsGenerationColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: reportsGenerationColumnClasses[4] },\n    },\n  ];\n};\nReportGenerationQueriesTableHeader.displayName = 'ReportGenerationQueriesTableHeader';\n\nconst ReportGenerationQueriesTableRow: RowFunction<K8sResourceKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={reportsGenerationColumnClasses[0]}>\n        <ResourceLink\n          kind={ReportGenerationQueryReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={reportsGenerationColumnClasses[1]}>\n        <ResourceLink\n          kind=\"Namespace\"\n          namespace={undefined}\n          name={obj.metadata.namespace}\n          title={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={reportsGenerationColumnClasses[2]}>\n        <LabelList\n          kind={ReportGenerationQueryReference}\n          labels={_.get(obj, ['metadata', 'labels'])}\n        />\n      </TableData>\n      <TableData className={reportsGenerationColumnClasses[3]}>\n        <Timestamp timestamp={_.get(obj, ['metadata', 'creationTimestamp'])} />\n      </TableData>\n      <TableData className={reportsGenerationColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ReportGenerationQueryReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ReportGenerationQueriesDetails: React.SFC<ReportGenerationQueriesDetailsProps> = ({\n  obj,\n}) => {\n  const columns = _.get(obj, ['spec', 'columns'], []).map((column, i) => (\n    <tr key={i}>\n      <td>{column.name}</td>\n      <td>{column.type}</td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Chargeback Report Generation Query\" />\n        <ResourceSummary resource={obj}>\n          <dt>Query</dt>\n          <dd>\n            <pre>\n              <code>{_.get(obj, ['spec', 'query'])}</code>\n            </pre>\n          </dd>\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <h3>Columns</h3>\n              <div className=\"co-table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>Column</th>\n                      <th>Type</th>\n                    </tr>\n                  </thead>\n                  <tbody>{columns}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </ResourceSummary>\n      </div>\n    </div>\n  );\n};\n\nexport const ReportGenerationQueriesList: React.SFC = (props) => (\n  <Table\n    aria-label=\"Chargeback Queries List\"\n    {...props}\n    Header={ReportGenerationQueriesTableHeader}\n    Row={ReportGenerationQueriesTableRow}\n    virtualize\n  />\n);\n\nexport const ReportGenerationQueriesPage: React.SFC<ReportGenerationQueriesPageProps> = (props) => (\n  <div>\n    <ChargebackNavBar match={props.match} />\n    <ListPage\n      {...props}\n      showTitle={false}\n      kind={ReportGenerationQueryReference}\n      ListComponent={ReportGenerationQueriesList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n    />\n  </div>\n);\n\nconst reportGenerationQueryPages = [\n  navFactory.details(ReportGenerationQueriesDetails),\n  navFactory.editYaml(),\n];\nexport const ReportGenerationQueriesDetailsPage: React.SFC<ReportGenerationQueriesDetailsPageProps> = (\n  props,\n) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={ReportGenerationQueryReference}\n      menuActions={menuActions}\n      pages={reportGenerationQueryPages}\n    />\n  );\n};\n\nexport type ReportsDetailsProps = {\n  obj: any;\n};\n\nexport type ReportDataProps = {\n  obj: any;\n};\nexport type ReportDataState = {\n  error: any;\n  data: any;\n  inFlight: boolean;\n  sortBy: string;\n  orderBy: string;\n  cols: string[];\n  rows: any[];\n};\n\nexport type DataTableProps = {\n  rows: any[];\n  cols: string[];\n  schema: any;\n};\n\nexport type DataTableCellProps = {\n  name: string;\n  value: any;\n  unit: string;\n};\n\nexport type DataTableRowsProps = {\n  componentProps: { data: any[] };\n};\n\nexport type ReportsPageProps = {\n  filterLabel: string;\n  flags: { [_: string]: boolean };\n  match: {\n    url: string;\n    path: string;\n  };\n};\n\nexport type ReportsDetailsPageProps = {\n  match: any;\n};\n\nexport type ReportGenerationQueriesRowProps = {\n  obj: any;\n};\n\nexport type ReportGenerationQueriesDetailsProps = {\n  obj: any;\n};\n\nexport type ReportGenerationQueriesPageProps = {\n  filterLabel: string;\n  match: {\n    url: string;\n    path: string;\n  };\n};\n\nexport type ReportGenerationQueriesDetailsPageProps = {\n  match: any;\n};\n\nReportsList.displayName = 'ReportsList';\nReportsPage.displayName = 'ReportsPage';\nReportsDetailsPage.displayName = 'ReportsDetailsPage';\n\nReportGenerationQueriesDetails.displayName = 'ReportGenerationQueriesDetails';\nReportGenerationQueriesList.displayName = 'ReportGenerationQueriesList';\nReportGenerationQueriesPage.displayName = 'ReportGenerationQueriesPage';\nReportGenerationQueriesDetailsPage.displayName = 'ReportGenerationQueriesDetailsPage';\n"]}]}