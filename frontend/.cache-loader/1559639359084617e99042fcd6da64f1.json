{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostsTable.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostsTable.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Kebab, ResourceLink } from '@console/internal/components/utils';\nimport { sortable } from '@patternfly/react-table';\nimport { getName, getUID, getNamespace, DASH } from '@console/shared';\nimport { TableRow, TableData, Table, } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { getHostBMCAddress, getHostVendorInfo } from '../../selectors';\nimport { BareMetalHostModel } from '../../models';\nimport NodeLink from './NodeLink';\nimport BareMetalHostStatus from './BareMetalHostStatus';\nimport BareMetalHostRole from './BareMetalHostRole';\nimport { menuActions } from './host-menu-actions';\nimport BareMetalHostSecondaryStatus from './BareMetalHostSecondaryStatus';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\nconst tableColumnClasses = {\n    name: classNames('col-lg-2', 'col-md-4', 'col-sm-12', 'col-xs-12'),\n    status: classNames('col-lg-2', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n    node: classNames('col-lg-2', 'col-md-4', 'hidden-sm', 'hidden-xs'),\n    role: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    address: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    serialNumber: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    kebab: Kebab.columnClass,\n};\nconst HostsTableHeader = () => [\n    {\n        title: 'Name',\n        sortField: 'host.metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.name },\n    },\n    {\n        title: 'Status',\n        sortField: 'status.status',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.status },\n    },\n    {\n        title: 'Node',\n        sortField: 'node.metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.node },\n    },\n    {\n        title: 'Role',\n        sortField: 'machine.metadata.labels[\"machine.openshift.io/cluster-api-machine-role\"]',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.role },\n    },\n    {\n        title: 'Management Address',\n        sortField: 'host.spec.bmc.address',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.address },\n    },\n    {\n        title: 'Serial Number',\n        sortField: 'host.status.hardware.systemVendor.serialNumber',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.serialNumber },\n    },\n    {\n        title: '',\n        props: { className: tableColumnClasses.kebab },\n    },\n];\nconst HostsTableRow = ({ obj: { host, node, nodeMaintenance, machine, machineSet, status }, index, key, style, }) => {\n    const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n    const name = getName(host);\n    const namespace = getNamespace(host);\n    const address = getHostBMCAddress(host);\n    const uid = getUID(host);\n    const nodeName = getName(node);\n    const { serialNumber } = getHostVendorInfo(host);\n    return (React.createElement(TableRow, { id: uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses.name },\n            React.createElement(ResourceLink, { kind: referenceForModel(BareMetalHostModel), name: name, namespace: namespace })),\n        React.createElement(TableData, { className: tableColumnClasses.status },\n            React.createElement(BareMetalHostStatus, Object.assign({}, status, { nodeMaintenance: nodeMaintenance, host: host })),\n            React.createElement(BareMetalHostSecondaryStatus, { host: host })),\n        React.createElement(TableData, { className: tableColumnClasses.node },\n            React.createElement(NodeLink, { nodeName: nodeName })),\n        React.createElement(TableData, { className: tableColumnClasses.role },\n            React.createElement(BareMetalHostRole, { machine: machine, node: node })),\n        React.createElement(TableData, { className: tableColumnClasses.address }, address || DASH),\n        React.createElement(TableData, { className: tableColumnClasses.serialNumber }, serialNumber || DASH),\n        React.createElement(TableData, { className: tableColumnClasses.kebab },\n            React.createElement(Kebab, { options: menuActions.map((action) => action(BareMetalHostModel, host, {\n                    nodeMaintenance,\n                    nodeName,\n                    hasNodeMaintenanceCapability,\n                    machine,\n                    machineSet,\n                    status,\n                })), key: `kebab-for-${uid}`, id: `kebab-for-${uid}` }))));\n};\nconst BareMetalHostsTable = (props) => {\n    const row = React.useCallback((rowProps) => React.createElement(HostsTableRow, Object.assign({}, rowProps)), []);\n    return (React.createElement(Table, Object.assign({}, props, { defaultSortField: \"host.metadata.name\", \"aria-label\": \"Bare Metal Hosts\", Header: HostsTableHeader, Row: row, virtualize: true })));\n};\nexport default BareMetalHostsTable;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostsTable.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostsTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Kebab, ResourceLink } from '@console/internal/components/utils';\nimport { sortable } from '@patternfly/react-table';\nimport { getName, getUID, getNamespace, DASH } from '@console/shared';\nimport {\n  TableRow,\n  TableData,\n  Table,\n  RowFunction,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { BareMetalHostBundle } from '../types';\nimport { getHostBMCAddress, getHostVendorInfo } from '../../selectors';\nimport { BareMetalHostModel } from '../../models';\nimport NodeLink from './NodeLink';\nimport BareMetalHostStatus from './BareMetalHostStatus';\nimport BareMetalHostRole from './BareMetalHostRole';\nimport { menuActions } from './host-menu-actions';\nimport BareMetalHostSecondaryStatus from './BareMetalHostSecondaryStatus';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\n\nconst tableColumnClasses = {\n  name: classNames('col-lg-2', 'col-md-4', 'col-sm-12', 'col-xs-12'),\n  status: classNames('col-lg-2', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n  node: classNames('col-lg-2', 'col-md-4', 'hidden-sm', 'hidden-xs'),\n  role: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  address: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  serialNumber: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  kebab: Kebab.columnClass,\n};\n\nconst HostsTableHeader = () => [\n  {\n    title: 'Name',\n    sortField: 'host.metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.name },\n  },\n  {\n    title: 'Status',\n    sortField: 'status.status',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.status },\n  },\n  {\n    title: 'Node',\n    sortField: 'node.metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.node },\n  },\n  {\n    title: 'Role',\n    sortField: 'machine.metadata.labels[\"machine.openshift.io/cluster-api-machine-role\"]',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.role },\n  },\n  {\n    title: 'Management Address',\n    sortField: 'host.spec.bmc.address',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.address },\n  },\n  {\n    title: 'Serial Number',\n    sortField: 'host.status.hardware.systemVendor.serialNumber',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.serialNumber },\n  },\n  {\n    title: '',\n    props: { className: tableColumnClasses.kebab },\n  },\n];\n\nconst HostsTableRow: React.FC<RowFunctionArgs<BareMetalHostBundle>> = ({\n  obj: { host, node, nodeMaintenance, machine, machineSet, status },\n  index,\n  key,\n  style,\n}) => {\n  const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n  const name = getName(host);\n  const namespace = getNamespace(host);\n  const address = getHostBMCAddress(host);\n  const uid = getUID(host);\n  const nodeName = getName(node);\n  const { serialNumber } = getHostVendorInfo(host);\n\n  return (\n    <TableRow id={uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses.name}>\n        <ResourceLink\n          kind={referenceForModel(BareMetalHostModel)}\n          name={name}\n          namespace={namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <BareMetalHostStatus {...status} nodeMaintenance={nodeMaintenance} host={host} />\n        <BareMetalHostSecondaryStatus host={host} />\n      </TableData>\n      <TableData className={tableColumnClasses.node}>\n        <NodeLink nodeName={nodeName} />\n      </TableData>\n      <TableData className={tableColumnClasses.role}>\n        <BareMetalHostRole machine={machine} node={node} />\n      </TableData>\n      <TableData className={tableColumnClasses.address}>{address || DASH}</TableData>\n      <TableData className={tableColumnClasses.serialNumber}>{serialNumber || DASH}</TableData>\n      <TableData className={tableColumnClasses.kebab}>\n        <Kebab\n          options={menuActions.map((action) =>\n            action(BareMetalHostModel, host, {\n              nodeMaintenance,\n              nodeName,\n              hasNodeMaintenanceCapability,\n              machine,\n              machineSet,\n              status,\n            }),\n          )}\n          key={`kebab-for-${uid}`}\n          id={`kebab-for-${uid}`}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\ntype BareMetalHostsTableProps = React.ComponentProps<typeof Table> & {\n  data: BareMetalHostBundle[];\n};\n\nconst BareMetalHostsTable: React.FC<BareMetalHostsTableProps> = (props) => {\n  const row = React.useCallback<RowFunction<BareMetalHostBundle>>(\n    (rowProps) => <HostsTableRow {...rowProps} />,\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      defaultSortField=\"host.metadata.name\"\n      aria-label=\"Bare Metal Hosts\"\n      Header={HostsTableHeader}\n      Row={row}\n      virtualize\n    />\n  );\n};\n\nexport default BareMetalHostsTable;\n"]}]}