{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/cluster-operator.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/cluster-operator.ts","mtime":1615298458760},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nexport var OperatorStatus;\n(function (OperatorStatus) {\n    OperatorStatus[\"Available\"] = \"Available\";\n    OperatorStatus[\"Updating\"] = \"Updating\";\n    OperatorStatus[\"Degraded\"] = \"Degraded\";\n    OperatorStatus[\"Unknown\"] = \"Unknown\";\n})(OperatorStatus || (OperatorStatus = {}));\nexport const getStatusAndMessage = (operator) => {\n    const conditions = _.get(operator, 'status.conditions');\n    const degraded = _.find(conditions, { type: 'Degraded', status: 'True' });\n    if (degraded) {\n        return { status: OperatorStatus.Degraded, message: degraded.message };\n    }\n    const progressing = _.find(conditions, { type: 'Progressing', status: 'True' });\n    if (progressing) {\n        return { status: OperatorStatus.Updating, message: progressing.message };\n    }\n    const available = _.find(conditions, { type: 'Available', status: 'True' });\n    if (available) {\n        return { status: OperatorStatus.Available, message: available.message };\n    }\n    return { status: OperatorStatus.Unknown, message: '' };\n};\nexport const getClusterOperatorStatus = (operator) => {\n    const { status } = getStatusAndMessage(operator);\n    return status;\n};\nexport const getClusterOperatorVersion = (operator) => {\n    const versions = _.get(operator, 'status.versions', []);\n    const operatorVersion = _.find(versions, (v) => v.name === 'operator');\n    return operatorVersion ? operatorVersion.version : '';\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/cluster-operator.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/cluster-operator.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAG/B,MAAM,CAAN,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,yCAAuB,CAAA;IACvB,uCAAqB,CAAA;IACrB,uCAAqB,CAAA;IACrB,qCAAmB,CAAA;AACrB,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,QAAyB,EAAE,EAAE;IAC/D,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IACxD,MAAM,QAAQ,GAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/E,IAAI,QAAQ,EAAE;QACZ,OAAO,EAAE,MAAM,EAAE,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;KACvE;IAED,MAAM,WAAW,GAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACrF,IAAI,WAAW,EAAE;QACf,OAAO,EAAE,MAAM,EAAE,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;KAC1E;IAED,MAAM,SAAS,GAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACjF,IAAI,SAAS,EAAE;QACb,OAAO,EAAE,MAAM,EAAE,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC;KACzE;IAED,OAAO,EAAE,MAAM,EAAE,cAAc,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,QAAyB,EAAE,EAAE;IACpE,MAAM,EAAE,MAAM,EAAE,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACjD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,QAAyB,EAAE,EAAE;IACrE,MAAM,QAAQ,GAAqB,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;IACvE,OAAO,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;AACxD,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport { ClusterOperator, OperandVersion } from '.';\n\nexport enum OperatorStatus {\n  Available = 'Available',\n  Updating = 'Updating',\n  Degraded = 'Degraded',\n  Unknown = 'Unknown',\n}\n\nexport const getStatusAndMessage = (operator: ClusterOperator) => {\n  const conditions = _.get(operator, 'status.conditions');\n  const degraded: any = _.find(conditions, { type: 'Degraded', status: 'True' });\n  if (degraded) {\n    return { status: OperatorStatus.Degraded, message: degraded.message };\n  }\n\n  const progressing: any = _.find(conditions, { type: 'Progressing', status: 'True' });\n  if (progressing) {\n    return { status: OperatorStatus.Updating, message: progressing.message };\n  }\n\n  const available: any = _.find(conditions, { type: 'Available', status: 'True' });\n  if (available) {\n    return { status: OperatorStatus.Available, message: available.message };\n  }\n\n  return { status: OperatorStatus.Unknown, message: '' };\n};\n\nexport const getClusterOperatorStatus = (operator: ClusterOperator) => {\n  const { status } = getStatusAndMessage(operator);\n  return status;\n};\n\nexport const getClusterOperatorVersion = (operator: ClusterOperator) => {\n  const versions: OperandVersion[] = _.get(operator, 'status.versions', []);\n  const operatorVersion = _.find(versions, (v) => v.name === 'operator');\n  return operatorVersion ? operatorVersion.version : '';\n};\n"]}]}