{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-class.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-class.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { history, SectionHeading, detailsPage, navFactory, ResourceSummary, resourcePathFromModel, ResourceLink, } from './utils';\nimport { viewYamlComponent } from './utils/horizontal-nav';\nimport { ClusterServiceClassModel, ClusterServiceBrokerModel } from '../models';\nimport { referenceForModel, serviceClassDisplayName } from '../module/k8s';\nimport { ClusterServiceClassIcon } from './catalog/catalog-item-icon';\nimport { ClusterServicePlanPage } from './cluster-service-plan';\nimport { ClusterServiceClassInfo } from './cluster-service-class-info';\nconst createInstance = (kindObj, serviceClass) => {\n    if (!_.get(serviceClass, 'status.removedFromBrokerCatalog')) {\n        return {\n            btnClass: 'pf-c-button pf-m-primary',\n            callback: () => {\n                history.push(`/catalog/create-service-instance?cluster-service-class=${serviceClass.metadata.name}`);\n            },\n            label: 'Create Instance',\n        };\n    }\n};\nconst actionButtons = [createInstance];\nconst tableColumnClasses = [\n    classNames('col-sm-6', 'col-xs-12'),\n    classNames('col-sm-3', 'hidden-xs'),\n    classNames('col-sm-3', 'hidden-xs'),\n];\nconst ClusterServiceClassTableHeader = () => {\n    return [\n        {\n            title: 'Display Name',\n            sortFunc: 'serviceClassDisplayName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'External Name',\n            sortField: 'spec.externalName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Broker',\n            sortField: 'spec.clusterServiceBrokerName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n    ];\n};\nClusterServiceClassTableHeader.displayName = 'ClusterServiceClassTableHeader';\nconst ClusterServiceClassTableRow = ({ obj: serviceClass, index, key, style, }) => {\n    const path = resourcePathFromModel(ClusterServiceClassModel, serviceClass.metadata.name);\n    return (React.createElement(TableRow, { id: serviceClass.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ClusterServiceClassIcon, { serviceClass: serviceClass }),\n            React.createElement(Link, { className: \"co-cluster-service-class-link\", to: path }, serviceClassDisplayName(serviceClass))),\n        React.createElement(TableData, { className: tableColumnClasses[1] }, serviceClass.spec.externalName),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[2], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: referenceForModel(ClusterServiceBrokerModel), name: serviceClass.spec.clusterServiceBrokerName }))));\n};\nconst ClusterServiceClassDetails = ({ obj: serviceClass, }) => (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n    React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-md-7 col-md-push-5\", style: { marginBottom: '20px' } },\n            React.createElement(ClusterServiceClassInfo, { obj: serviceClass })),\n        React.createElement(\"div\", { className: \"col-md-5 col-md-pull-7\" },\n            React.createElement(SectionHeading, { text: \"Service Class Details\" }),\n            React.createElement(ResourceSummary, { resource: serviceClass },\n                React.createElement(\"dt\", null, \"External Name\"),\n                React.createElement(\"dd\", null, serviceClass.spec.externalName || '-')),\n            serviceClass.status.removedFromBrokerCatalog && (React.createElement(React.Fragment, null,\n                React.createElement(\"dt\", null, \"Removed From Catalog\"),\n                React.createElement(\"dd\", null, serviceClass.status.removedFromBrokerCatalog)))))));\nconst ClusterServicePlanTab = ({ obj }) => {\n    return (React.createElement(ClusterServicePlanPage, { showTitle: false, fieldSelector: `spec.clusterServiceClassRef.name=${obj.metadata.name}` }));\n};\nexport const ClusterServiceClassDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { buttonActions: actionButtons, titleFunc: serviceClassDisplayName, kind: referenceForModel(ClusterServiceClassModel), pages: [\n        navFactory.details(detailsPage(ClusterServiceClassDetails)),\n        navFactory.editYaml(viewYamlComponent),\n        navFactory.clusterServicePlans(ClusterServicePlanTab),\n    ] })));\nexport const ClusterServiceClassList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Cluster Service Classes\", Header: ClusterServiceClassTableHeader, Row: ClusterServiceClassTableRow, defaultSortFunc: \"serviceClassDisplayName\", virtualize: true })));\nexport const ClusterServiceClassPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { showTitle: false, ListComponent: ClusterServiceClassList, kind: referenceForModel(ClusterServiceClassModel), textFilter: \"service-class\", canCreate: false })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-class.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-service-class.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  history,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n  ResourceSummary,\n  resourcePathFromModel,\n  ResourceLink,\n} from './utils';\nimport { viewYamlComponent } from './utils/horizontal-nav';\nimport { ClusterServiceClassModel, ClusterServiceBrokerModel } from '../models';\nimport { K8sResourceKind, referenceForModel, serviceClassDisplayName } from '../module/k8s';\nimport { ClusterServiceClassIcon } from './catalog/catalog-item-icon';\nimport { ClusterServicePlanPage } from './cluster-service-plan';\nimport { ClusterServiceClassInfo } from './cluster-service-class-info';\n\nconst createInstance = (kindObj, serviceClass) => {\n  if (!_.get(serviceClass, 'status.removedFromBrokerCatalog')) {\n    return {\n      btnClass: 'pf-c-button pf-m-primary',\n      callback: () => {\n        history.push(\n          `/catalog/create-service-instance?cluster-service-class=${serviceClass.metadata.name}`,\n        );\n      },\n      label: 'Create Instance',\n    };\n  }\n};\n\nconst actionButtons = [createInstance];\n\nconst tableColumnClasses = [\n  classNames('col-sm-6', 'col-xs-12'),\n  classNames('col-sm-3', 'hidden-xs'),\n  classNames('col-sm-3', 'hidden-xs'),\n];\n\nconst ClusterServiceClassTableHeader = () => {\n  return [\n    {\n      title: 'Display Name',\n      sortFunc: 'serviceClassDisplayName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'External Name',\n      sortField: 'spec.externalName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Broker',\n      sortField: 'spec.clusterServiceBrokerName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n  ];\n};\nClusterServiceClassTableHeader.displayName = 'ClusterServiceClassTableHeader';\n\nconst ClusterServiceClassTableRow: RowFunction<K8sResourceKind> = ({\n  obj: serviceClass,\n  index,\n  key,\n  style,\n}) => {\n  const path = resourcePathFromModel(ClusterServiceClassModel, serviceClass.metadata.name);\n  return (\n    <TableRow id={serviceClass.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ClusterServiceClassIcon serviceClass={serviceClass} />\n        <Link className=\"co-cluster-service-class-link\" to={path}>\n          {serviceClassDisplayName(serviceClass)}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{serviceClass.spec.externalName}</TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <ResourceLink\n          kind={referenceForModel(ClusterServiceBrokerModel)}\n          name={serviceClass.spec.clusterServiceBrokerName}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterServiceClassDetails: React.FC<ClusterServiceClassDetailsProps> = ({\n  obj: serviceClass,\n}) => (\n  <div className=\"co-m-pane__body\">\n    <div className=\"row\">\n      <div className=\"col-md-7 col-md-push-5\" style={{ marginBottom: '20px' }}>\n        <ClusterServiceClassInfo obj={serviceClass} />\n      </div>\n      <div className=\"col-md-5 col-md-pull-7\">\n        <SectionHeading text=\"Service Class Details\" />\n        <ResourceSummary resource={serviceClass}>\n          <dt>External Name</dt>\n          <dd>{serviceClass.spec.externalName || '-'}</dd>\n        </ResourceSummary>\n        {serviceClass.status.removedFromBrokerCatalog && (\n          <>\n            <dt>Removed From Catalog</dt>\n            <dd>{serviceClass.status.removedFromBrokerCatalog}</dd>\n          </>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nconst ClusterServicePlanTab: React.FC<{ obj: K8sResourceKind }> = ({ obj }) => {\n  return (\n    <ClusterServicePlanPage\n      showTitle={false}\n      fieldSelector={`spec.clusterServiceClassRef.name=${obj.metadata.name}`}\n    />\n  );\n};\n\nexport const ClusterServiceClassDetailsPage: React.FC<ClusterServiceClassDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    buttonActions={actionButtons}\n    titleFunc={serviceClassDisplayName}\n    kind={referenceForModel(ClusterServiceClassModel)}\n    pages={[\n      navFactory.details(detailsPage(ClusterServiceClassDetails)),\n      navFactory.editYaml(viewYamlComponent),\n      navFactory.clusterServicePlans(ClusterServicePlanTab),\n    ]}\n  />\n);\n\nexport const ClusterServiceClassList: React.FC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Cluster Service Classes\"\n    Header={ClusterServiceClassTableHeader}\n    Row={ClusterServiceClassTableRow}\n    defaultSortFunc=\"serviceClassDisplayName\"\n    virtualize\n  />\n);\n\nexport const ClusterServiceClassPage: React.FC<ClusterServiceClassPageProps> = (props) => (\n  <ListPage\n    {...props}\n    showTitle={false}\n    ListComponent={ClusterServiceClassList}\n    kind={referenceForModel(ClusterServiceClassModel)}\n    textFilter=\"service-class\"\n    canCreate={false}\n  />\n);\n\nexport type ClusterServiceClassPageProps = {\n  showTitle?: boolean;\n  fieldSelector?: string;\n};\n\nexport type ClusterServiceClassDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ClusterServiceClassDetailsPageProps = {\n  match: any;\n  name: string;\n};\n"]}]}