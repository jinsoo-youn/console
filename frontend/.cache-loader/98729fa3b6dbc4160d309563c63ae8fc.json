{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-horizontalpodautoscaler.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-horizontalpodautoscaler.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, LabelList, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading } from '../utils';\nimport { Status } from '@console/shared';\nimport { FederatedHPAModel } from '../../models';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(FederatedHPAModel), ...Kebab.factory.common];\nconst kind = FederatedHPAModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst FederatedHPATableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Status',\n            sortFunc: 'horizontalpodautoscalerPhase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Annotations',\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nFederatedHPATableHeader.displayName = 'FederatedHPATableHeader';\nconst FederatedHPATableRow = ({ obj: horizontalpodautoscaler, index, key, style }) => {\n    return (React.createElement(TableRow, { id: horizontalpodautoscaler.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: horizontalpodautoscaler.metadata.name, namespace: horizontalpodautoscaler.metadata.namespace, title: horizontalpodautoscaler.metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: horizontalpodautoscaler.status.phase })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(LabelList, { kind: kind, labels: horizontalpodautoscaler.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, `${_.size(horizontalpodautoscaler.metadata.annotations)} Annotation`),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: horizontalpodautoscaler.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: horizontalpodautoscaler }))));\n};\nexport const ClusterRow = ({ horizontalpodautoscaler }) => {\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" },\n            React.createElement(ResourceIcon, { kind: kind }),\n            horizontalpodautoscaler.metadata.name),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" },\n            React.createElement(ResourceLink, { kind: \"Cluster\", name: horizontalpodautoscaler.spec.placement.clusters[0].name })),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" },\n            React.createElement(Status, { status: horizontalpodautoscaler.status.phase })),\n        React.createElement(\"div\", { className: \"col-lg-2 hidden-md hidden-sm hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: horizontalpodautoscaler.metadata.creationTimestamp }))));\n};\nexport const HPADistributionTable = ({ heading, horizontalpodautoscaler }) => (React.createElement(React.Fragment, null,\n    React.createElement(SectionHeading, { text: heading }),\n    React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n        React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n            React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" }, \"Resource Name\"),\n            React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" }, \"Cluster Name\"),\n            React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" }, \"Result\"),\n            React.createElement(\"div\", { className: \"col-lg-1 col-md-2 hidden-sm hidden-xs\" }, \"Time\")),\n        React.createElement(\"div\", { className: \"co-m-table-grid__body\" },\n            React.createElement(ClusterRow, { horizontalpodautoscaler: horizontalpodautoscaler })))));\nconst FederatedHPADetails = ({ obj: horizontalpodautoscaler }) => (React.createElement(React.Fragment, null,\n    React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Federated HPA Details\" }),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-lg-6\" },\n                React.createElement(ResourceSummary, { resource: horizontalpodautoscaler })))),\n    React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(HPADistributionTable, { key: \"distributionTable\", heading: \"Distribution\", horizontalpodautoscaler: horizontalpodautoscaler }))));\nconst { details, editYaml } = navFactory;\nexport const FederatedHPAs = props => React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Federated HPAs\", Header: FederatedHPATableHeader, Row: FederatedHPATableRow, virtualize: true }));\nexport const FederatedHPAsPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: FederatedHPAs, kind: kind }, props));\nexport const FederatedHPAsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(FederatedHPADetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-horizontalpodautoscaler.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-horizontalpodautoscaler.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, LabelList, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading } from '../utils';\nimport { Status } from '@console/shared';\nimport { FederatedHPAModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(FederatedHPAModel), ...Kebab.factory.common];\n\nconst kind = FederatedHPAModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedHPATableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'horizontalpodautoscalerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Annotations',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nFederatedHPATableHeader.displayName = 'FederatedHPATableHeader';\n\nconst FederatedHPATableRow: RowFunction<K8sResourceKind> = ({ obj: horizontalpodautoscaler, index, key, style }) => {\n  return (\n    <TableRow id={horizontalpodautoscaler.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={horizontalpodautoscaler.metadata.name} namespace={horizontalpodautoscaler.metadata.namespace} title={horizontalpodautoscaler.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={horizontalpodautoscaler.status.phase} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <LabelList kind={kind} labels={horizontalpodautoscaler.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {`${_.size(horizontalpodautoscaler.metadata.annotations)} Annotation`}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={horizontalpodautoscaler.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={horizontalpodautoscaler} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterRow: React.FC<ClusterRowProps> = ({ horizontalpodautoscaler }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ResourceIcon kind={kind} />\n        {horizontalpodautoscaler.metadata.name}\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">\n        <ResourceLink kind=\"Cluster\" name={horizontalpodautoscaler.spec.placement.clusters[0].name} />\n      </div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={horizontalpodautoscaler.status.phase} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={horizontalpodautoscaler.metadata.creationTimestamp} />\n      </div>\n    </div>\n  );\n};\n\nexport const HPADistributionTable: React.FC<HPADistributionTableProps> = ({\n  heading,\n  horizontalpodautoscaler\n}) => (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">Resource Name</div>\n          <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">Cluster Name</div>\n          <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">Result</div>\n          <div className=\"col-lg-1 col-md-2 hidden-sm hidden-xs\">Time</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {/*containers.map((c: any, i: number) => (\n          <ClusterRow key={i} horizontalpodautoscaler={horizontalpodautoscaler} container={c} />\n        ))*/}\n          <ClusterRow horizontalpodautoscaler={horizontalpodautoscaler} />\n        </div>\n      </div>\n    </>\n  );\n\nconst FederatedHPADetails: React.FC<FederatedHPADetailsProps> = ({ obj: horizontalpodautoscaler }) => (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Federated HPA Details\" />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={horizontalpodautoscaler} />\n        </div>\n      </div>\n    </div>\n    <div className=\"co-m-pane__body\">\n      <HPADistributionTable\n        key=\"distributionTable\"\n        heading=\"Distribution\"\n        horizontalpodautoscaler={horizontalpodautoscaler} />\n    </div>\n  </>\n);\n\nconst { details, editYaml } = navFactory;\nexport const FederatedHPAs: React.FC = props => <Table {...props} aria-label=\"Federated HPAs\" Header={FederatedHPATableHeader} Row={FederatedHPATableRow} virtualize />;\n\nexport const FederatedHPAsPage: React.FC<FederatedHPAsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedHPAs} kind={kind} {...props} />;\n\nexport const FederatedHPAsDetailsPage: React.FC<FederatedHPAsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedHPADetails)), editYaml()]} />;\n\ntype ClusterRowProps = {\n  horizontalpodautoscaler: K8sResourceKind;\n}\n\ntype HPADistributionTableProps = {\n  horizontalpodautoscaler: K8sResourceKind;\n  heading: string;\n};\n\ntype FederatedHPADetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedHPAsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedHPAsDetailsPageProps = {\n  match: any;\n};\n"]}]}