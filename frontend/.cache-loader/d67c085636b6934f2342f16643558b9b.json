{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useField } from 'formik';\nimport { DropdownField } from '@console/shared/src';\nimport { usePipelineTriggerTemplateNames } from '../../utils/triggers';\nimport './TriggerTemplateSelector.scss';\nconst TriggerTemplateSelector = (props) => {\n    const { name, pipeline, placeholder } = props;\n    const { metadata: { name: pipelineName, namespace }, } = pipeline;\n    const [field] = useField(name);\n    const selection = field.value;\n    const templateNames = usePipelineTriggerTemplateNames(pipelineName, namespace) || [];\n    const items = templateNames.reduce((acc, { triggerTemplateName }) => (Object.assign(Object.assign({}, acc), { [triggerTemplateName]: triggerTemplateName })), {});\n    return (React.createElement(\"div\", { className: \"odc-trigger-template-selector\" },\n        React.createElement(DropdownField, { fullWidth: true, disabled: templateNames.length === 0, items: items, name: name, title: placeholder }),\n        selection ? (React.createElement(\"div\", { className: \"co-break-word odc-trigger-template-selector__confirmationMessage\" },\n            \"Are you sure you want to remove \",\n            React.createElement(\"b\", null, selection),\n            \" from \",\n            React.createElement(\"b\", null, pipeline.metadata.name),\n            \"?\")) : (React.createElement(\"div\", { className: \"odc-trigger-template-selector__pfModalHack\" }))));\n};\nexport default TriggerTemplateSelector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,OAAO,EAAiB,+BAA+B,EAAE,MAAM,sBAAsB,CAAC;AAEtF,OAAO,gCAAgC,CAAC;AAQxC,MAAM,uBAAuB,GAA2C,CAAC,KAAK,EAAE,EAAE;IAChF,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;IAC9C,MAAM,EACJ,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,GAC5C,GAAG,QAAQ,CAAC;IAEb,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;IAE9B,MAAM,aAAa,GACjB,+BAA+B,CAAC,YAAY,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;IACjE,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAChC,CAAC,GAAG,EAAE,EAAE,mBAAmB,EAAE,EAAE,EAAE,CAAC,iCAAM,GAAG,KAAE,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,IAAG,EAC1F,EAAE,CACH,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAC,+BAA+B;QAC5C,oBAAC,aAAa,IACZ,SAAS,QACT,QAAQ,EAAE,aAAa,CAAC,MAAM,KAAK,CAAC,EACpC,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,WAAW,GAClB;QACD,SAAS,CAAC,CAAC,CAAC,CACX,6BAAK,SAAS,EAAC,kEAAkE;;YAC/C,+BAAI,SAAS,CAAK;;YAAM,+BAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAK;gBACnF,CACP,CAAC,CAAC,CAAC,CACF,6BAAK,SAAS,EAAC,4CAA4C,GAAG,CAC/D,CACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC","sourcesContent":["import * as React from 'react';\nimport { useField } from 'formik';\nimport { DropdownField } from '@console/shared/src';\nimport { Pipeline } from '../../../../utils/pipeline-augment';\nimport { RouteTemplate, usePipelineTriggerTemplateNames } from '../../utils/triggers';\n\nimport './TriggerTemplateSelector.scss';\n\ntype TriggerTemplateSelectorProps = {\n  name: string;\n  pipeline: Pipeline;\n  placeholder: string;\n};\n\nconst TriggerTemplateSelector: React.FC<TriggerTemplateSelectorProps> = (props) => {\n  const { name, pipeline, placeholder } = props;\n  const {\n    metadata: { name: pipelineName, namespace },\n  } = pipeline;\n\n  const [field] = useField(name);\n  const selection = field.value;\n\n  const templateNames: RouteTemplate[] =\n    usePipelineTriggerTemplateNames(pipelineName, namespace) || [];\n  const items = templateNames.reduce(\n    (acc, { triggerTemplateName }) => ({ ...acc, [triggerTemplateName]: triggerTemplateName }),\n    {},\n  );\n\n  return (\n    <div className=\"odc-trigger-template-selector\">\n      <DropdownField\n        fullWidth\n        disabled={templateNames.length === 0}\n        items={items}\n        name={name}\n        title={placeholder}\n      />\n      {selection ? (\n        <div className=\"co-break-word odc-trigger-template-selector__confirmationMessage\">\n          Are you sure you want to remove <b>{selection}</b> from <b>{pipeline.metadata.name}</b>?\n        </div>\n      ) : (\n        <div className=\"odc-trigger-template-selector__pfModalHack\" />\n      )}\n    </div>\n  );\n};\n\nexport default TriggerTemplateSelector;\n"]}]}