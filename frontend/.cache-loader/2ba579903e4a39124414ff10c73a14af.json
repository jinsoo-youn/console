{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/DroppableFileInputField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/DroppableFileInputField.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport { DroppableFileInput } from '@console/internal/components/utils/file-input';\nimport { FormGroup } from '@patternfly/react-core';\nimport { getFieldId } from './field-utils';\nconst DroppableFileInputField = ({ name, label, helpText }) => {\n    const [field] = useField(name);\n    const { setFieldValue } = useFormikContext();\n    const fieldId = getFieldId(name, 'droppable-input');\n    return (React.createElement(FormGroup, { fieldId: fieldId },\n        React.createElement(DroppableFileInput, { label: label, onChange: (fileData) => setFieldValue(name, fileData), inputFileData: field.value, inputFieldHelpText: helpText, \"aria-describedby\": `${fieldId}-helper` })));\n};\nexport default DroppableFileInputField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/DroppableFileInputField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/DroppableFileInputField.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAgB,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AAClE,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AACnF,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEnD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,MAAM,uBAAuB,GAAyB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAClF,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IAC3D,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IACpD,OAAO,CACL,oBAAC,SAAS,IAAC,OAAO,EAAE,OAAO;QACzB,oBAAC,kBAAkB,IACjB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,CAAC,QAAgB,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,EAC7D,aAAa,EAAE,KAAK,CAAC,KAAK,EAC1B,kBAAkB,EAAE,QAAQ,sBACV,GAAG,OAAO,SAAS,GACrC,CACQ,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC","sourcesContent":["import * as React from 'react';\nimport { FormikValues, useField, useFormikContext } from 'formik';\nimport { DroppableFileInput } from '@console/internal/components/utils/file-input';\nimport { FormGroup } from '@patternfly/react-core';\nimport { FieldProps } from './field-types';\nimport { getFieldId } from './field-utils';\n\nconst DroppableFileInputField: React.FC<FieldProps> = ({ name, label, helpText }) => {\n  const [field] = useField(name);\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const fieldId = getFieldId(name, 'droppable-input');\n  return (\n    <FormGroup fieldId={fieldId}>\n      <DroppableFileInput\n        label={label}\n        onChange={(fileData: string) => setFieldValue(name, fileData)}\n        inputFileData={field.value}\n        inputFieldHelpText={helpText}\n        aria-describedby={`${fieldId}-helper`}\n      />\n    </FormGroup>\n  );\n};\n\nexport default DroppableFileInputField;\n"]}]}