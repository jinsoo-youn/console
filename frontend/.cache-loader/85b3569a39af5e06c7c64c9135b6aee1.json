{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField } from '@console/shared';\nconst PipelineStorageOptions = ({ prefixName }) => (React.createElement(React.Fragment, null,\n    React.createElement(InputField, { type: TextInputTypes.text, name: `${prefixName}.params.type`, label: \"Type\", helpText: \"Represents the type of blob storage i.e gcs\", required: true }),\n    React.createElement(InputField, { type: TextInputTypes.text, name: `${prefixName}.params.location`, label: \"Location\", helpText: \"Represents the location of the blob storage i.e gs://some-private-bucket\", required: true }),\n    React.createElement(InputField, { type: TextInputTypes.text, name: `${prefixName}.params.dir`, label: \"Directory\", helpText: \"Represents whether the blob storage is a directory or not\" })));\nexport default PipelineStorageOptions;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAI7C,MAAM,sBAAsB,GAA0C,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CACxF;IACE,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAE,GAAG,UAAU,cAAc,EACjC,KAAK,EAAC,MAAM,EACZ,QAAQ,EAAC,6CAA6C,EACtD,QAAQ,SACR;IACF,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAE,GAAG,UAAU,kBAAkB,EACrC,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAC,0EAA0E,EACnF,QAAQ,SACR;IACF,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAE,GAAG,UAAU,aAAa,EAChC,KAAK,EAAC,WAAW,EACjB,QAAQ,EAAC,2DAA2D,GACpE,CACD,CACJ,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField } from '@console/shared';\n\ntype PipelineStorageOptionsProps = { prefixName: string };\n\nconst PipelineStorageOptions: React.FC<PipelineStorageOptionsProps> = ({ prefixName }) => (\n  <>\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.type`}\n      label=\"Type\"\n      helpText=\"Represents the type of blob storage i.e gcs\"\n      required\n    />\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.location`}\n      label=\"Location\"\n      helpText=\"Represents the location of the blob storage i.e gs://some-private-bucket\"\n      required\n    />\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.dir`}\n      label=\"Directory\"\n      helpText=\"Represents whether the blob storage is a directory or not\"\n    />\n  </>\n);\n\nexport default PipelineStorageOptions;\n"]}]}