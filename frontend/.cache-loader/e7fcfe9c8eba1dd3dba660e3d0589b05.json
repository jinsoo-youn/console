{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/actions/helmReleaseActions.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/actions/helmReleaseActions.ts","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { deleteHelmRelease, upgradeHelmRelease, rollbackHelmRelease, } from '../../../../actions/modify-helm-release';\nimport { HelmActionOrigins } from '../../../helm/helm-types';\nexport const helmReleaseActions = (helmRelease) => {\n    const name = helmRelease.getLabel();\n    const { namespace } = helmRelease.getData().groupResources[0].resources.obj.metadata;\n    return name && namespace\n        ? [\n            upgradeHelmRelease(name, namespace, HelmActionOrigins.topology),\n            rollbackHelmRelease(name, namespace, HelmActionOrigins.topology),\n            deleteHelmRelease(name, namespace),\n        ]\n        : [];\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/actions/helmReleaseActions.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/actions/helmReleaseActions.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,GACpB,MAAM,yCAAyC,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAE7D,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,WAAiB,EAAiB,EAAE;IACrE,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;IACpC,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;IACrF,OAAO,IAAI,IAAI,SAAS;QACtB,CAAC,CAAC;YACE,kBAAkB,CAAC,IAAI,EAAE,SAAS,EAAE,iBAAiB,CAAC,QAAQ,CAAC;YAC/D,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,iBAAiB,CAAC,QAAQ,CAAC;YAChE,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC;SACnC;QACH,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import { KebabOption } from '@console/internal/components/utils/kebab';\nimport { Node } from '@console/topology';\nimport {\n  deleteHelmRelease,\n  upgradeHelmRelease,\n  rollbackHelmRelease,\n} from '../../../../actions/modify-helm-release';\nimport { HelmActionOrigins } from '../../../helm/helm-types';\n\nexport const helmReleaseActions = (helmRelease: Node): KebabOption[] => {\n  const name = helmRelease.getLabel();\n  const { namespace } = helmRelease.getData().groupResources[0].resources.obj.metadata;\n  return name && namespace\n    ? [\n        upgradeHelmRelease(name, namespace, HelmActionOrigins.topology),\n        rollbackHelmRelease(name, namespace, HelmActionOrigins.topology),\n        deleteHelmRelease(name, namespace),\n      ]\n    : [];\n};\n"]}]}