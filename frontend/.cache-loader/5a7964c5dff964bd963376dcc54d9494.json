{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/firehose.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/firehose.jsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { inject } from './inject';\nimport { makeReduxID, makeQuery } from './k8s-watcher';\nimport * as k8sActions from '../../actions/k8s';\nconst shallowMapEquals = (a, b) => {\n    if (a === b || (a.size === 0 && b.size === 0)) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    return a.every((v, k) => b.get(k) === v);\n};\nconst processReduxId = ({ k8s }, props) => {\n    const { reduxID, isList, filters } = props;\n    if (!reduxID) {\n        return {};\n    }\n    if (!isList) {\n        let stuff = k8s.get(reduxID);\n        if (stuff) {\n            stuff = stuff.toJS();\n            stuff.optional = props.optional;\n        }\n        return stuff || {};\n    }\n    const data = k8s.getIn([reduxID, 'data']);\n    const _filters = k8s.getIn([reduxID, 'filters']);\n    const selected = k8s.getIn([reduxID, 'selected']);\n    return {\n        data: data && data.toArray().map((p) => p.toJSON()),\n        // This is a hack to allow filters passed down from props to make it to\n        // the injected component. Ideally filters should all come from redux.\n        filters: _.extend({}, _filters && _filters.toJS(), filters),\n        kind: props.kind,\n        loadError: k8s.getIn([reduxID, 'loadError']),\n        loaded: k8s.getIn([reduxID, 'loaded']),\n        optional: props.optional,\n        selected,\n    };\n};\nconst worstError = (errors) => {\n    let worst = errors && errors[0];\n    for (const e of errors) {\n        if (e.status === 403) {\n            return e;\n        }\n        if (e.status === 401) {\n            worst = e;\n            continue;\n        }\n        if (worst.status === 401) {\n            continue;\n        }\n        if (e.status > worst.status) {\n            worst = e;\n            continue;\n        }\n    }\n    return worst;\n};\nconst mapStateToProps = ({ k8s }) => ({\n    k8s,\n});\nconst propsAreEqual = (prevProps, nextProps) => {\n    if (nextProps.children === prevProps.children && nextProps.reduxes === prevProps.reduxes) {\n        return nextProps.reduxes.every(({ reduxID }) => prevProps.k8s.get(reduxID) === nextProps.k8s.get(reduxID));\n    }\n    return false;\n};\n// A wrapper Component that takes data out of redux for a list or object at some reduxID ...\n// passing it to children\nconst ConnectToState = connect(mapStateToProps)(React.memo(({ k8s, reduxes, children }) => {\n    const resources = {};\n    reduxes.forEach((redux) => {\n        resources[redux.prop] = processReduxId({ k8s }, redux);\n    });\n    const required = _.filter(resources, (r) => !r.optional);\n    const loaded = _.every(resources, (resource) => resource.optional ? resource.loaded || !_.isEmpty(resource.loadError) : resource.loaded);\n    const loadError = worstError(_.map(required, 'loadError').filter(Boolean));\n    const k8sResults = Object.assign({}, resources, {\n        filters: Object.assign({}, ..._.map(resources, 'filters')),\n        loaded,\n        loadError,\n        reduxIDs: _.map(reduxes, 'reduxID'),\n        resources,\n    });\n    return inject(children, k8sResults);\n}, propsAreEqual));\nconst stateToProps = ({ k8s }, { resources }) => {\n    const k8sModels = resources.reduce((models, { kind }) => models.set(kind, k8s.getIn(['RESOURCES', 'models', kind])), ImmutableMap());\n    const loaded = (r) => r.optional ||\n        k8s.getIn([\n            makeReduxID(k8sModels.get(r.kind), makeQuery(r.namespace, r.selector, r.fieldSelector, r.name)),\n            'loaded',\n        ]);\n    return {\n        k8sModels,\n        loaded: resources.every(loaded),\n        inFlight: k8s.getIn(['RESOURCES', 'inFlight']),\n    };\n};\nexport const Firehose = connect(stateToProps, {\n    stopK8sWatch: k8sActions.stopK8sWatch,\n    watchK8sObject: k8sActions.watchK8sObject,\n    watchK8sList: k8sActions.watchK8sList,\n}, null, {\n    areStatesEqual: (next, prev) => next.k8s === prev.k8s,\n    areStatePropsEqual: (next, prev) => next.loaded === prev.loaded &&\n        next.inFlight === prev.inFlight &&\n        shallowMapEquals(next.k8sModels, prev.k8sModels),\n})(\n/** @augments {React.Component<{k8sModels?: Map<string, K8sKind>, doNotConnectToState?: boolean}>} */\nclass Firehose extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            firehoses: [],\n        };\n    }\n    // TODO: Convert this to `componentDidMount`\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillMount() {\n        this.start();\n    }\n    componentWillUnmount() {\n        this.clear();\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        if (Object.keys(nextProps).length === Object.keys(this.props).length &&\n            Object.keys(nextProps)\n                .filter((key) => key !== 'inFlight')\n                .every((key) => nextProps[key] === this.props[key]) &&\n            (nextState === this.state ||\n                (nextState.firehoses.length === 0 && this.state.firehoses.length === 0))) {\n            return this.props.loaded ? false : this.props.inFlight !== nextProps.inFlight;\n        }\n        return true;\n    }\n    componentDidUpdate(prevProps) {\n        const discoveryComplete = !this.props.inFlight && !this.props.loaded && this.state.firehoses.length === 0;\n        const resourcesChanged = _.intersectionWith(prevProps.resources, this.props.resources, _.isEqual).length !==\n            this.props.resources.length;\n        if (discoveryComplete || resourcesChanged) {\n            this.clear();\n            this.start();\n        }\n    }\n    start() {\n        const { watchK8sList, watchK8sObject, resources, k8sModels, inFlight } = this.props;\n        let firehoses = [];\n        if (!(inFlight && _.some(resources, ({ kind }) => !k8sModels.get(kind)))) {\n            firehoses = resources\n                .map((resource) => {\n                const query = makeQuery(resource.namespace, resource.selector, resource.fieldSelector, resource.name, resource.limit);\n                // console.log('firehose중간');\n                // console.log(location.href);\n                // const splitUrl = location.href.split('/');\n                // console.log(splitUrl);\n                // console.log(splitUrl[splitUrl.length - 2]);\n                const name = resource.name;\n                const k8sKind = k8sModels.get(resource.kind);\n                const id = makeReduxID(k8sKind, query);\n                // return _.extend({}, resource, { query, id, k8sKind, listName: splitUrl[splitUrl.length - 2] });\n                return _.extend({}, resource, { query, id, k8sKind });\n            })\n                .filter((f) => {\n                if (_.isEmpty(f.k8sKind)) {\n                    // eslint-disable-next-line no-console\n                    console.warn(`No model registered for ${f.kind}`);\n                }\n                return !_.isEmpty(f.k8sKind);\n            });\n        }\n        // firehoses.forEach(({ id, query, k8sKind, isList, name, namespace, listName }) =>\n        //   isList\n        //     ? watchK8sList(id, query, k8sKind, null, listName)\n        //     : watchK8sObject(id, name, namespace, query, k8sKind),\n        // );\n        firehoses.forEach(({ id, query, k8sKind, isList, name, namespace }) => isList\n            ? watchK8sList(id, query, k8sKind)\n            : watchK8sObject(id, name, namespace, query, k8sKind));\n        this.setState({ firehoses });\n    }\n    clear() {\n        this.state.firehoses.forEach(({ id }) => this.props.stopK8sWatch(id));\n    }\n    render() {\n        if (this.props.loaded || this.state.firehoses.length > 0) {\n            const children = inject(this.props.children, _.omit(this.props, ['children', 'resources']));\n            if (this.props.doNotConnectToState) {\n                return children;\n            }\n            const reduxes = this.state.firehoses.map(({ id, prop, isList, filters, optional, kind }) => ({\n                reduxID: id,\n                prop,\n                isList,\n                filters,\n                optional,\n                kind,\n            }));\n            return React.createElement(ConnectToState, { reduxes: reduxes }, children);\n        }\n        return null;\n    }\n});\nFirehose.WrappedComponent.contextTypes = {\n    router: PropTypes.object,\n};\nFirehose.contextTypes = {\n    store: PropTypes.object,\n};\nFirehose.propTypes = {\n    children: PropTypes.node,\n    expand: PropTypes.bool,\n    doNotConnectToState: PropTypes.bool,\n    resources: PropTypes.arrayOf(PropTypes.shape({\n        kind: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n        name: PropTypes.string,\n        namespace: PropTypes.string,\n        selector: PropTypes.object,\n        fieldSelector: PropTypes.string,\n        isList: PropTypes.bool,\n        optional: PropTypes.bool,\n        limit: PropTypes.number,\n    })).isRequired,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/firehose.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/firehose.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\n\nimport { inject } from './inject';\nimport { makeReduxID, makeQuery } from './k8s-watcher';\nimport * as k8sActions from '../../actions/k8s';\n\nconst shallowMapEquals = (a, b) => {\n  if (a === b || (a.size === 0 && b.size === 0)) {\n    return true;\n  }\n  if (a.size !== b.size) {\n    return false;\n  }\n  return a.every((v, k) => b.get(k) === v);\n};\n\nconst processReduxId = ({ k8s }, props) => {\n  const { reduxID, isList, filters } = props;\n\n  if (!reduxID) {\n    return {};\n  }\n\n  if (!isList) {\n    let stuff = k8s.get(reduxID);\n    if (stuff) {\n      stuff = stuff.toJS();\n      stuff.optional = props.optional;\n    }\n    return stuff || {};\n  }\n\n  const data = k8s.getIn([reduxID, 'data']);\n  const _filters = k8s.getIn([reduxID, 'filters']);\n  const selected = k8s.getIn([reduxID, 'selected']);\n\n  return {\n    data: data && data.toArray().map((p) => p.toJSON()),\n    // This is a hack to allow filters passed down from props to make it to\n    // the injected component. Ideally filters should all come from redux.\n    filters: _.extend({}, _filters && _filters.toJS(), filters),\n    kind: props.kind,\n    loadError: k8s.getIn([reduxID, 'loadError']),\n    loaded: k8s.getIn([reduxID, 'loaded']),\n    optional: props.optional,\n    selected,\n  };\n};\n\nconst worstError = (errors) => {\n  let worst = errors && errors[0];\n  for (const e of errors) {\n    if (e.status === 403) {\n      return e;\n    }\n    if (e.status === 401) {\n      worst = e;\n      continue;\n    }\n    if (worst.status === 401) {\n      continue;\n    }\n    if (e.status > worst.status) {\n      worst = e;\n      continue;\n    }\n  }\n  return worst;\n};\n\nconst mapStateToProps = ({ k8s }) => ({\n  k8s,\n});\n\nconst propsAreEqual = (prevProps, nextProps) => {\n  if (nextProps.children === prevProps.children && nextProps.reduxes === prevProps.reduxes) {\n    return nextProps.reduxes.every(\n      ({ reduxID }) => prevProps.k8s.get(reduxID) === nextProps.k8s.get(reduxID),\n    );\n  }\n  return false;\n};\n\n// A wrapper Component that takes data out of redux for a list or object at some reduxID ...\n// passing it to children\nconst ConnectToState = connect(mapStateToProps)(\n  React.memo(({ k8s, reduxes, children }) => {\n    const resources = {};\n\n    reduxes.forEach((redux) => {\n      resources[redux.prop] = processReduxId({ k8s }, redux);\n    });\n\n    const required = _.filter(resources, (r) => !r.optional);\n    const loaded = _.every(resources, (resource) =>\n      resource.optional ? resource.loaded || !_.isEmpty(resource.loadError) : resource.loaded,\n    );\n    const loadError = worstError(_.map(required, 'loadError').filter(Boolean));\n\n    const k8sResults = Object.assign({}, resources, {\n      filters: Object.assign({}, ..._.map(resources, 'filters')),\n      loaded,\n      loadError,\n      reduxIDs: _.map(reduxes, 'reduxID'),\n      resources,\n    });\n\n    return inject(children, k8sResults);\n  }, propsAreEqual),\n);\n\nconst stateToProps = ({ k8s }, { resources }) => {\n  const k8sModels = resources.reduce(\n    (models, { kind }) => models.set(kind, k8s.getIn(['RESOURCES', 'models', kind])),\n    ImmutableMap(),\n  );\n  const loaded = (r) =>\n    r.optional ||\n    k8s.getIn([\n      makeReduxID(\n        k8sModels.get(r.kind),\n        makeQuery(r.namespace, r.selector, r.fieldSelector, r.name),\n      ),\n      'loaded',\n    ]);\n\n  return {\n    k8sModels,\n    loaded: resources.every(loaded),\n    inFlight: k8s.getIn(['RESOURCES', 'inFlight']),\n  };\n};\n\nexport const Firehose = connect(\n  stateToProps,\n  {\n    stopK8sWatch: k8sActions.stopK8sWatch,\n    watchK8sObject: k8sActions.watchK8sObject,\n    watchK8sList: k8sActions.watchK8sList,\n  },\n  null,\n  {\n    areStatesEqual: (next, prev) => next.k8s === prev.k8s,\n    areStatePropsEqual: (next, prev) =>\n      next.loaded === prev.loaded &&\n      next.inFlight === prev.inFlight &&\n      shallowMapEquals(next.k8sModels, prev.k8sModels),\n  },\n)(\n  /** @augments {React.Component<{k8sModels?: Map<string, K8sKind>, doNotConnectToState?: boolean}>} */\n  class Firehose extends React.Component {\n    state = {\n      firehoses: [],\n    };\n\n    // TODO: Convert this to `componentDidMount`\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillMount() {\n      this.start();\n    }\n\n    componentWillUnmount() {\n      this.clear();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      if (\n        Object.keys(nextProps).length === Object.keys(this.props).length &&\n        Object.keys(nextProps)\n          .filter((key) => key !== 'inFlight')\n          .every((key) => nextProps[key] === this.props[key]) &&\n        (nextState === this.state ||\n          (nextState.firehoses.length === 0 && this.state.firehoses.length === 0))\n      ) {\n        return this.props.loaded ? false : this.props.inFlight !== nextProps.inFlight;\n      }\n      return true;\n    }\n\n    componentDidUpdate(prevProps) {\n      const discoveryComplete =\n        !this.props.inFlight && !this.props.loaded && this.state.firehoses.length === 0;\n      const resourcesChanged =\n        _.intersectionWith(prevProps.resources, this.props.resources, _.isEqual).length !==\n        this.props.resources.length;\n\n      if (discoveryComplete || resourcesChanged) {\n        this.clear();\n        this.start();\n      }\n    }\n\n    start() {\n      const { watchK8sList, watchK8sObject, resources, k8sModels, inFlight } = this.props;\n\n      let firehoses = [];\n      if (!(inFlight && _.some(resources, ({ kind }) => !k8sModels.get(kind)))) {\n        firehoses = resources\n          .map((resource) => {\n            const query = makeQuery(\n              resource.namespace,\n              resource.selector,\n              resource.fieldSelector,\n              resource.name,\n              resource.limit,\n            );\n            // console.log('firehose중간');\n            // console.log(location.href);\n            // const splitUrl = location.href.split('/');\n            // console.log(splitUrl);\n            // console.log(splitUrl[splitUrl.length - 2]);\n\n            const name = resource.name;\n            const k8sKind = k8sModels.get(resource.kind);\n            const id = makeReduxID(k8sKind, query);\n            // return _.extend({}, resource, { query, id, k8sKind, listName: splitUrl[splitUrl.length - 2] });\n            return _.extend({}, resource, { query, id, k8sKind });\n          })\n          .filter((f) => {\n            if (_.isEmpty(f.k8sKind)) {\n              // eslint-disable-next-line no-console\n              console.warn(`No model registered for ${f.kind}`);\n            }\n            return !_.isEmpty(f.k8sKind);\n          });\n      }\n\n      // firehoses.forEach(({ id, query, k8sKind, isList, name, namespace, listName }) =>\n      //   isList\n      //     ? watchK8sList(id, query, k8sKind, null, listName)\n      //     : watchK8sObject(id, name, namespace, query, k8sKind),\n      // );\n      firehoses.forEach(({ id, query, k8sKind, isList, name, namespace }) =>\n        isList\n          ? watchK8sList(id, query, k8sKind)\n          : watchK8sObject(id, name, namespace, query, k8sKind),\n      );\n      this.setState({ firehoses });\n    }\n\n    clear() {\n      this.state.firehoses.forEach(({ id }) => this.props.stopK8sWatch(id));\n    }\n\n    render() {\n      if (this.props.loaded || this.state.firehoses.length > 0) {\n        const children = inject(this.props.children, _.omit(this.props, ['children', 'resources']));\n\n        if (this.props.doNotConnectToState) {\n          return children;\n        }\n\n        const reduxes = this.state.firehoses.map(\n          ({ id, prop, isList, filters, optional, kind }) => ({\n            reduxID: id,\n            prop,\n            isList,\n            filters,\n            optional,\n            kind,\n          }),\n        );\n        return <ConnectToState reduxes={reduxes}>{children}</ConnectToState>;\n      }\n      return null;\n    }\n  },\n);\nFirehose.WrappedComponent.contextTypes = {\n  router: PropTypes.object,\n};\n\nFirehose.contextTypes = {\n  store: PropTypes.object,\n};\n\nFirehose.propTypes = {\n  children: PropTypes.node,\n  expand: PropTypes.bool,\n  doNotConnectToState: PropTypes.bool,\n  resources: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      name: PropTypes.string,\n      namespace: PropTypes.string,\n      selector: PropTypes.object,\n      fieldSelector: PropTypes.string,\n      isList: PropTypes.bool,\n      optional: PropTypes.bool, // do not block children-rendering while resource is still being loaded; do not fail if resource is missing (404)\n      limit: PropTypes.number,\n    }),\n  ).isRequired,\n};\n"]}]}