{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsOverview.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsOverview.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useAccessReview, SectionHeading, LabelList, Kebab, ResourceLink, cloudProviderNames, cloudProviderID, Timestamp, } from '@console/internal/components/utils';\nimport { NodeModel, MachineModel } from '@console/internal/models';\nimport { Button, pluralize } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { getNodeMachineNameAndNamespace, getNodeAddresses } from '@console/shared';\nimport NodeIPList from './NodeIPList';\nimport NodeStatus from './NodeStatus';\nconst NodeDetailsOverview = ({ node }) => {\n    const machine = getNodeMachineNameAndNamespace(node);\n    const canUpdate = useAccessReview({\n        group: NodeModel.apiGroup,\n        resource: NodeModel.plural,\n        verb: 'patch',\n        name: node.metadata.name,\n        namespace: node.metadata.namespace,\n    });\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Node Details\" }),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-md-6 col-xs-12\" },\n                React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                    React.createElement(\"dt\", null, \"Node Name\"),\n                    React.createElement(\"dd\", null, node.metadata.name || '-'),\n                    React.createElement(\"dt\", null, \"Status\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(NodeStatus, { node: node })),\n                    React.createElement(\"dt\", null, \"External ID\"),\n                    React.createElement(\"dd\", null, _.get(node, 'spec.externalID', '-')),\n                    React.createElement(\"dt\", null, \"Node Addresses\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(NodeIPList, { ips: getNodeAddresses(node), expand: true })),\n                    React.createElement(\"dt\", null, \"Node Labels\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(LabelList, { kind: \"Node\", labels: node.metadata.labels })),\n                    React.createElement(\"dt\", null, \"Taints\"),\n                    React.createElement(\"dd\", null, canUpdate ? (React.createElement(Button, { variant: \"link\", type: \"button\", isInline: true, onClick: Kebab.factory.ModifyTaints(NodeModel, node).callback },\n                        pluralize(_.size(node.spec.taints), 'Taint'),\n                        React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" }))) : (pluralize(_.size(node.spec.taints), 'Taint'))),\n                    React.createElement(\"dt\", null, \"Annotations\"),\n                    React.createElement(\"dd\", null, canUpdate ? (React.createElement(Button, { variant: \"link\", type: \"button\", isInline: true, onClick: Kebab.factory.ModifyAnnotations(NodeModel, node).callback },\n                        pluralize(_.size(node.metadata.annotations), 'Annotation'),\n                        React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" }))) : (pluralize(_.size(node.metadata.annotations), 'Annotation'))),\n                    machine.name && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Machine\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(ResourceLink, { kind: referenceForModel(MachineModel), name: machine.name, namespace: machine.namespace })))),\n                    React.createElement(\"dt\", null, \"Provider ID\"),\n                    React.createElement(\"dd\", null, cloudProviderNames([cloudProviderID(node)])),\n                    _.has(node, 'spec.unschedulable') && React.createElement(\"dt\", null, \"Unschedulable\"),\n                    _.has(node, 'spec.unschedulable') && (React.createElement(\"dd\", { className: \"text-capitalize\" }, _.get(node, 'spec.unschedulable', '-').toString())),\n                    React.createElement(\"dt\", null, \"Created\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Timestamp, { timestamp: node.metadata.creationTimestamp })))),\n            React.createElement(\"div\", { className: \"col-md-6 col-xs-12\" },\n                React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                    React.createElement(\"dt\", null, \"Operating System\"),\n                    React.createElement(\"dd\", { className: \"text-capitalize\" }, _.get(node, 'status.nodeInfo.operatingSystem', '-')),\n                    React.createElement(\"dt\", null, \"OS Image\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.osImage', '-')),\n                    React.createElement(\"dt\", null, \"Architecture\"),\n                    React.createElement(\"dd\", { className: \"text-uppercase\" }, _.get(node, 'status.nodeInfo.architecture', '-')),\n                    React.createElement(\"dt\", null, \"Kernel Version\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.kernelVersion', '-')),\n                    React.createElement(\"dt\", null, \"Boot ID\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.bootID', '-')),\n                    React.createElement(\"dt\", null, \"Container Runtime\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.containerRuntimeVersion', '-')),\n                    React.createElement(\"dt\", null, \"Kubelet Version\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.kubeletVersion', '-')),\n                    React.createElement(\"dt\", null, \"Kube-Proxy Version\"),\n                    React.createElement(\"dd\", null, _.get(node, 'status.nodeInfo.kubeProxyVersion', '-')))))));\n};\nexport default NodeDetailsOverview;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsOverview.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsOverview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { NodeKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  useAccessReview,\n  SectionHeading,\n  LabelList,\n  Kebab,\n  ResourceLink,\n  cloudProviderNames,\n  cloudProviderID,\n  Timestamp,\n} from '@console/internal/components/utils';\nimport { NodeModel, MachineModel } from '@console/internal/models';\nimport { Button, pluralize } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { getNodeMachineNameAndNamespace, getNodeAddresses } from '@console/shared';\nimport NodeIPList from './NodeIPList';\nimport NodeStatus from './NodeStatus';\n\ntype NodeDetailsOverviewProps = {\n  node: NodeKind;\n};\n\nconst NodeDetailsOverview: React.FC<NodeDetailsOverviewProps> = ({ node }) => {\n  const machine = getNodeMachineNameAndNamespace(node);\n  const canUpdate = useAccessReview({\n    group: NodeModel.apiGroup,\n    resource: NodeModel.plural,\n    verb: 'patch',\n    name: node.metadata.name,\n    namespace: node.metadata.namespace,\n  });\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Node Details\" />\n      <div className=\"row\">\n        <div className=\"col-md-6 col-xs-12\">\n          <dl className=\"co-m-pane__details\">\n            <dt>Node Name</dt>\n            <dd>{node.metadata.name || '-'}</dd>\n            <dt>Status</dt>\n            <dd>\n              <NodeStatus node={node} />\n            </dd>\n            <dt>External ID</dt>\n            <dd>{_.get(node, 'spec.externalID', '-')}</dd>\n            <dt>Node Addresses</dt>\n            <dd>\n              <NodeIPList ips={getNodeAddresses(node)} expand />\n            </dd>\n            <dt>Node Labels</dt>\n            <dd>\n              <LabelList kind=\"Node\" labels={node.metadata.labels} />\n            </dd>\n            <dt>Taints</dt>\n            <dd>\n              {canUpdate ? (\n                <Button\n                  variant=\"link\"\n                  type=\"button\"\n                  isInline\n                  onClick={Kebab.factory.ModifyTaints(NodeModel, node).callback}\n                >\n                  {pluralize(_.size(node.spec.taints), 'Taint')}\n                  <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n                </Button>\n              ) : (\n                pluralize(_.size(node.spec.taints), 'Taint')\n              )}\n            </dd>\n            <dt>Annotations</dt>\n            <dd>\n              {canUpdate ? (\n                <Button\n                  variant=\"link\"\n                  type=\"button\"\n                  isInline\n                  onClick={Kebab.factory.ModifyAnnotations(NodeModel, node).callback}\n                >\n                  {pluralize(_.size(node.metadata.annotations), 'Annotation')}\n                  <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n                </Button>\n              ) : (\n                pluralize(_.size(node.metadata.annotations), 'Annotation')\n              )}\n            </dd>\n            {machine.name && (\n              <>\n                <dt>Machine</dt>\n                <dd>\n                  <ResourceLink\n                    kind={referenceForModel(MachineModel)}\n                    name={machine.name}\n                    namespace={machine.namespace}\n                  />\n                </dd>\n              </>\n            )}\n            <dt>Provider ID</dt>\n            <dd>{cloudProviderNames([cloudProviderID(node)])}</dd>\n            {_.has(node, 'spec.unschedulable') && <dt>Unschedulable</dt>}\n            {_.has(node, 'spec.unschedulable') && (\n              <dd className=\"text-capitalize\">\n                {_.get(node, 'spec.unschedulable', '-').toString()}\n              </dd>\n            )}\n            <dt>Created</dt>\n            <dd>\n              <Timestamp timestamp={node.metadata.creationTimestamp} />\n            </dd>\n          </dl>\n        </div>\n        <div className=\"col-md-6 col-xs-12\">\n          <dl className=\"co-m-pane__details\">\n            <dt>Operating System</dt>\n            <dd className=\"text-capitalize\">\n              {_.get(node, 'status.nodeInfo.operatingSystem', '-')}\n            </dd>\n            <dt>OS Image</dt>\n            <dd>{_.get(node, 'status.nodeInfo.osImage', '-')}</dd>\n            <dt>Architecture</dt>\n            <dd className=\"text-uppercase\">{_.get(node, 'status.nodeInfo.architecture', '-')}</dd>\n            <dt>Kernel Version</dt>\n            <dd>{_.get(node, 'status.nodeInfo.kernelVersion', '-')}</dd>\n            <dt>Boot ID</dt>\n            <dd>{_.get(node, 'status.nodeInfo.bootID', '-')}</dd>\n            <dt>Container Runtime</dt>\n            <dd>{_.get(node, 'status.nodeInfo.containerRuntimeVersion', '-')}</dd>\n            <dt>Kubelet Version</dt>\n            <dd>{_.get(node, 'status.nodeInfo.kubeletVersion', '-')}</dd>\n            <dt>Kube-Proxy Version</dt>\n            <dd>{_.get(node, 'status.nodeInfo.kubeProxyVersion', '-')}</dd>\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NodeDetailsOverview;\n"]}]}