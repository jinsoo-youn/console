{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/dropdown.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/dropdown.jsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CaretDownIcon, MinusCircleIcon, PlusCircleIcon, StarIcon } from '@patternfly/react-icons';\nimport { impersonateStateToProps } from '../../reducers/ui';\nimport { checkAccess } from './rbac';\nimport { history } from './router';\nimport { KebabItems } from './kebab';\nimport { ResourceName } from './resource-icon';\nimport { useSafetyFirst } from '../safety-first';\nimport { useTranslation } from 'react-i18next';\nexport class DropdownMixin extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.listener = this._onWindowClick.bind(this);\n        this.state = { active: !!props.active, selectedKey: props.selectedKey };\n        this.toggle = this.toggle.bind(this);\n        this.dropdownElement = React.createRef();\n        this.dropdownList = React.createRef();\n    }\n    _onWindowClick(event) {\n        if (!this.state.active) {\n            return;\n        }\n        const { current } = this.dropdownElement;\n        if (!current) {\n            return;\n        }\n        if (event.target === current || (current && current.contains(event.target))) {\n            return;\n        }\n        this.hide(event);\n    }\n    UNSAFE_componentWillReceiveProps({ selectedKey, items }) {\n        if (selectedKey !== this.props.selectedKey) {\n            this.setState({ selectedKey, title: items[selectedKey] });\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('click', this.listener);\n    }\n    onClick_(selectedKey, e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const { items, actionItems, onChange, noSelection, title, type } = this.props;\n        if (onChange) {\n            onChange(selectedKey, e);\n        }\n        const newTitle = items[selectedKey];\n        if (!actionItems || !_.some(actionItems, { actionKey: selectedKey })) {\n            this.setState({\n                selectedKey,\n                title: noSelection ? title : newTitle,\n            });\n        }\n        if (type !== 'multiple') {\n            this.hide();\n        }\n    }\n    toggle(e) {\n        e.preventDefault();\n        if (this.props.disabled) {\n            return;\n        }\n        if (this.state.active) {\n            this.hide(e);\n        }\n        else {\n            this.show(e);\n        }\n    }\n    show() {\n        /* If you're wondering why this isn't in componentDidMount, it's because\n         * kebabs are dropdowns. A list of 200 pods would mean 200 global event\n         * listeners. This is bad for performance. - ggreer\n         */\n        window.removeEventListener('click', this.listener);\n        window.addEventListener('click', this.listener);\n        this.setState({ active: true });\n    }\n    hide(e) {\n        e && e.stopPropagation();\n        window.removeEventListener('click', this.listener);\n        this.setState({ active: false });\n    }\n}\nclass DropDownRow extends React.PureComponent {\n    render() {\n        const { itemKey, content, onclick, onBookmark, onUnBookmark, className, selected, hover, canFavorite, onFavorite, favoriteKey, autocompleteFilter } = this.props;\n        let prefix;\n        if (!autocompleteFilter && !onBookmark && !onUnBookmark) {\n            //use pf4 markup if not using the autocomplete dropdown\n            return (React.createElement(\"li\", { key: itemKey },\n                React.createElement(\"button\", { className: \"pf-c-dropdown__menu-item\", id: `${itemKey}-link`, \"data-test-id\": \"dropdown-menu\", \"data-test-dropdown-menu\": itemKey, onClick: e => onclick(itemKey, e) }, content)));\n        }\n        if (onUnBookmark) {\n            prefix = (React.createElement(\"a\", { href: \"#\", className: classNames('bookmarker', { hover, focus: selected }), onClick: e => onUnBookmark(e, itemKey) },\n                React.createElement(MinusCircleIcon, null)));\n        }\n        if (onBookmark) {\n            prefix = (React.createElement(\"a\", { href: \"#\", className: classNames('bookmarker', { hover, focus: selected }), onClick: e => onBookmark(e, itemKey, content) },\n                React.createElement(PlusCircleIcon, null)));\n        }\n        let suffix;\n        if (onUnBookmark && canFavorite) {\n            const isFavorite = favoriteKey === itemKey;\n            suffix = (React.createElement(\"a\", { href: \"#\", className: classNames('bookmarker', { hover, focus: selected }), onClick: e => onFavorite(e, isFavorite ? undefined : itemKey) },\n                React.createElement(StarIcon, { className: classNames({ favorite: isFavorite }) })));\n        }\n        return (React.createElement(\"li\", { role: \"option\", className: classNames(className), key: itemKey },\n            prefix,\n            React.createElement(\"a\", { href: \"#\", ref: this.link, id: `${itemKey}-link`, className: classNames('pf-c-dropdown__menu-item', {\n                    'next-to-bookmark': !!prefix,\n                    hover,\n                    focus: selected,\n                }), onClick: e => onclick(itemKey, e) }, content),\n            suffix));\n    }\n}\n/** @augments {React.Component<any>} */\nexport class Dropdown extends DropdownMixin {\n    constructor(props) {\n        super(props);\n        this.onUnBookmark = (...args) => this.onUnBookmark_(...args);\n        this.onBookmark = (...args) => this.onBookmark_(...args);\n        this.onFavorite = (...args) => this.onFavorite_(...args);\n        this.onClick = (...args) => this.onClick_(...args);\n        let bookmarks = props.defaultBookmarks || {};\n        let favoriteKey;\n        if (props.storageKey) {\n            try {\n                const parsedBookmarks = JSON.parse(localStorage.getItem(this.bookmarkStorageKey));\n                if (_.isPlainObject(parsedBookmarks)) {\n                    bookmarks = parsedBookmarks;\n                }\n                const parsedFavorite = localStorage.getItem(props.storageKey);\n                if (props.canFavorite && _.isString(parsedFavorite)) {\n                    favoriteKey = parsedFavorite;\n                }\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                console.warn(`could not load bookmarks for ${props.storageKey}: ${e}`);\n            }\n        }\n        this.state.favoriteKey = favoriteKey;\n        this.state.bookmarks = bookmarks;\n        this.state.items = Object.assign({}, bookmarks, props.items);\n        this.state.title = props.noSelection ? props.title : _.get(props.items, props.selectedKey, props.title);\n        this.onKeyDown = e => this.onKeyDown_(e);\n        this.changeTextFilter = e => this.applyTextFilter_(e.target.value, this.props.items);\n        const { shortCut } = this.props;\n        this.globalKeyDown = e => {\n            const { nodeName } = e.target;\n            if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n                return;\n            }\n            if (!shortCut || e.key !== shortCut) {\n                return;\n            }\n            if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey) {\n                return;\n            }\n            e.stopPropagation();\n            e.preventDefault();\n            this.show(e);\n        };\n    }\n    get bookmarkStorageKey() {\n        return `${this.props.storageKey}-bookmarks`;\n    }\n    componentDidMount() {\n        if (this.props.shortCut) {\n            window.addEventListener('keydown', this.globalKeyDown);\n        }\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        window.removeEventListener('keydown', this.globalKeyDown);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        super.UNSAFE_componentWillReceiveProps(nextProps);\n        const props = this.props;\n        if (_.isEqual(nextProps.items, props.items) && nextProps.title === props.title) {\n            return;\n        }\n        const title = nextProps.title || props.title;\n        this.setState({ title });\n        this.applyTextFilter_(this.state.autocompleteText, nextProps.items);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (!prevState.active && this.state.active && this.input) {\n            // Clear any previous filter when reopening the dropdown.\n            this.applyTextFilter_('', this.props.items);\n        }\n    }\n    applyTextFilter_(autocompleteText, items) {\n        const { autocompleteFilter } = this.props;\n        items = Object.assign({}, this.state.bookmarks, items);\n        if (autocompleteFilter && !_.isEmpty(autocompleteText)) {\n            items = _.pickBy(items, (item, key) => autocompleteFilter(autocompleteText, item, key));\n        }\n        this.setState({ autocompleteText, items });\n    }\n    onKeyDown_(e) {\n        const { key } = e;\n        if (key === 'Escape') {\n            this.hide(e);\n            return;\n        }\n        if (key !== 'ArrowDown' && key !== 'ArrowUp' && key !== 'Enter') {\n            return;\n        }\n        const { items, keyboardHoverKey } = this.state;\n        if (key === 'Enter') {\n            if (this.state.active && items[keyboardHoverKey]) {\n                this.onClick(keyboardHoverKey, e);\n            }\n            return;\n        }\n        const keys = _.keys(items);\n        let index = _.indexOf(keys, keyboardHoverKey);\n        if (key === 'ArrowDown') {\n            index += 1;\n        }\n        else {\n            index -= 1;\n        }\n        // periodic boundaries\n        if (index >= keys.length) {\n            index = 0;\n        }\n        if (index < 0) {\n            index = keys.length - 1;\n        }\n        const newKey = keys[index];\n        this.setState({ keyboardHoverKey: newKey });\n        e.stopPropagation();\n    }\n    onFavorite_(e, favoriteKey) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ favoriteKey });\n        if (favoriteKey) {\n            localStorage.setItem(this.props.storageKey, favoriteKey);\n        }\n        else {\n            // do not set `undefined` as a value in localstorage\n            localStorage.removeItem(this.props.storageKey, favoriteKey);\n        }\n    }\n    onBookmark_(e, key, value) {\n        e.preventDefault();\n        e.stopPropagation();\n        const bookmarks = Object.assign({}, this.state.bookmarks);\n        bookmarks[key] = value;\n        this.setState({ bookmarks });\n        localStorage.setItem(this.bookmarkStorageKey, JSON.stringify(bookmarks));\n    }\n    onUnBookmark_(e, key) {\n        e.preventDefault();\n        e.stopPropagation();\n        const bookmarks = Object.assign({}, this.state.bookmarks);\n        delete bookmarks[key];\n        this.setState({ bookmarks });\n        localStorage.setItem(this.bookmarkStorageKey, JSON.stringify(bookmarks));\n    }\n    renderActionItem() {\n        const { actionItems } = this.props;\n        if (actionItems) {\n            const { selectedKey, keyboardHoverKey, noSelection } = this.props;\n            return (React.createElement(React.Fragment, null,\n                actionItems.map(ai => (React.createElement(DropDownRow, { className: classNames({ active: ai.actionKey === selectedKey && !noSelection }), key: `${ai.actionKey}-${ai.actionTitle}`, itemKey: ai.actionKey, content: ai.actionTitle, onclick: this.onClick, selected: ai.actionKey === selectedKey && !noSelection, hover: ai.actionKey === keyboardHoverKey }))),\n                React.createElement(\"li\", { className: \"co-namespace-selector__divider\" },\n                    React.createElement(\"div\", { className: \"dropdown-menu__divider\" }))));\n        }\n        return null;\n    }\n    render() {\n        const { active, autocompleteText, selectedKey, items, title, bookmarks, keyboardHoverKey, favoriteKey } = this.state;\n        const { ariaLabel, autocompleteFilter, autocompletePlaceholder, className, buttonClassName, menuClassName, storageKey, canFavorite, dropDownClassName, titlePrefix, describedBy, disabled } = this.props;\n        const spacerBefore = this.props.spacerBefore || new Set();\n        const headerBefore = this.props.headerBefore || {};\n        const rows = [];\n        const bookMarkRows = [];\n        const noBookmark = this.props.noBookmark || false;\n        const addItem = (key, content) => {\n            const selected = key === selectedKey && !this.props.noSelection;\n            const hover = key === keyboardHoverKey;\n            const klass = classNames({ active: selected });\n            if (storageKey && bookmarks && bookmarks[key]) {\n                bookMarkRows.push(React.createElement(DropDownRow, { className: klass, key: key, itemKey: key, content: content, onUnBookmark: this.onUnBookmark, onclick: this.onClick, selected: selected, hover: hover, canFavorite: canFavorite, onFavorite: this.onFavorite, favoriteKey: favoriteKey }));\n                return;\n            }\n            if (spacerBefore.has(key)) {\n                rows.push(React.createElement(\"li\", { key: `${key}-spacer` },\n                    React.createElement(\"div\", { className: \"dropdown-menu__divider\" })));\n            }\n            if (_.has(headerBefore, key)) {\n                rows.push(React.createElement(\"li\", { key: `${key}-header` },\n                    React.createElement(\"div\", { className: \"dropdown-menu__header\" }, headerBefore[key])));\n            }\n            rows.push(React.createElement(DropDownRow, { className: klass, key: key, itemKey: key, content: content, onBookmark: !noBookmark && storageKey && this.onBookmark, onclick: this.onClick, selected: selected, hover: hover, autocompleteFilter: autocompleteFilter }));\n        };\n        _.each(items, (v, k) => addItem(k, v));\n        //render PF4 dropdown markup if this is not the autocomplete filter\n        if (autocompleteFilter) {\n            return (React.createElement(\"div\", { className: className, ref: this.dropdownElement, style: this.props.style },\n                React.createElement(\"div\", { className: classNames('dropdown pf-c-dropdown', { 'pf-m-expanded': this.state.active }, dropDownClassName) },\n                    React.createElement(\"button\", { \"aria-haspopup\": \"true\", onClick: this.toggle, onKeyDown: this.onKeyDown, type: \"button\", className: classNames('pf-c-dropdown__toggle', buttonClassName), id: this.props.id, \"aria-describedby\": describedBy, disabled: disabled },\n                        React.createElement(\"div\", { className: \"btn-dropdown__content-wrap\" },\n                            React.createElement(\"span\", { className: \"pf-c-dropdown__toggle-text\" },\n                                titlePrefix && `${titlePrefix}: `,\n                                title),\n                            React.createElement(CaretDownIcon, { className: \"pf-c-dropdown__toggle-icon\" }))),\n                    active && (React.createElement(\"ul\", { role: \"listbox\", ref: this.dropdownList, className: classNames('dropdown-menu__autocomplete-filter', 'pf-c-dropdown__menu', menuClassName) },\n                        autocompleteFilter && (React.createElement(\"div\", { className: \"dropdown-menu__filter\" },\n                            React.createElement(\"input\", { autoFocus: true, type: \"text\", ref: input => (this.input = input), onChange: this.changeTextFilter, placeholder: autocompletePlaceholder, value: autocompleteText || '', autoCapitalize: \"none\", onKeyDown: this.onKeyDown, className: \"pf-c-form-control\", onClick: e => e.stopPropagation(), \"data-test-id\": \"dropdown-text-filter\" }))),\n                        this.renderActionItem(),\n                        bookMarkRows,\n                        _.size(bookMarkRows) ? (React.createElement(\"li\", { className: \"co-namespace-selector__divider\" },\n                            React.createElement(\"div\", { className: \"dropdown-menu__divider\" }))) : null,\n                        rows)))));\n        }\n        //pf4 markup\n        return (React.createElement(\"div\", { className: className, ref: this.dropdownElement, style: this.props.style },\n            React.createElement(\"div\", { className: classNames({ 'dropdown pf-c-dropdown': true, 'pf-m-expanded': this.state.active }, dropDownClassName) },\n                React.createElement(\"button\", { \"aria-label\": ariaLabel, \"aria-haspopup\": \"true\", \"aria-expanded\": this.state.active, className: classNames('pf-c-dropdown__toggle', buttonClassName), \"data-test-id\": \"dropdown-button\", onClick: this.toggle, onKeyDown: this.onKeyDown, type: \"button\", id: this.props.id, \"aria-describedby\": describedBy, disabled: disabled },\n                    React.createElement(\"span\", { className: \"pf-c-dropdown__toggle-text\" },\n                        titlePrefix && `${titlePrefix}: `,\n                        title),\n                    React.createElement(CaretDownIcon, { className: \"pf-c-dropdown__toggle-icon\" })),\n                active && (React.createElement(\"ul\", { ref: this.dropdownList, className: classNames('pf-c-dropdown__menu', menuClassName) }, rows)))));\n    }\n}\nDropdown.propTypes = {\n    actionItems: PropTypes.arrayOf(PropTypes.shape({\n        actionKey: PropTypes.string,\n        actionTitle: PropTypes.string,\n    })),\n    autocompleteFilter: PropTypes.func,\n    autocompletePlaceholder: PropTypes.string,\n    canFavorite: PropTypes.bool,\n    className: PropTypes.string,\n    defaultBookmarks: PropTypes.objectOf(PropTypes.string),\n    dropDownClassName: PropTypes.string,\n    enableBookmarks: PropTypes.bool,\n    headerBefore: PropTypes.objectOf(PropTypes.string),\n    items: PropTypes.object.isRequired,\n    menuClassName: PropTypes.string,\n    buttonClassName: PropTypes.string,\n    noSelection: PropTypes.bool,\n    storageKey: PropTypes.string,\n    spacerBefore: PropTypes.instanceOf(Set),\n    textFilter: PropTypes.string,\n    title: PropTypes.node,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n};\nDropdown.defaultProps = {\n    type: 'single',\n};\nclass ActionsMenuDropdown extends DropdownMixin {\n    render() {\n        const { actions, title = undefined, t } = this.props;\n        const onClick = (event, option) => {\n            event.preventDefault();\n            if (option.callback) {\n                option.callback();\n            }\n            if (option.href) {\n                history.push(option.href);\n            }\n            this.hide();\n        };\n        return (React.createElement(\"div\", { ref: this.dropdownElement, className: classNames({\n                'co-actions-menu pf-c-dropdown': true,\n                'pf-m-expanded': this.state.active,\n            }) },\n            React.createElement(\"button\", { type: \"button\", \"aria-haspopup\": \"true\", \"aria-label\": \"Actions\", \"aria-expanded\": this.state.active, className: \"pf-c-dropdown__toggle\", onClick: this.toggle, \"data-test-id\": \"actions-menu-button\" },\n                React.createElement(\"span\", { className: \"pf-c-dropdown__toggle-text\" }, title || t('COMMON:MSG_MAIN_ACTIONBUTTON_1')),\n                React.createElement(CaretDownIcon, { className: \"pf-c-dropdown__toggle-icon\" })),\n            this.state.active && React.createElement(KebabItems, { options: actions, onClick: onClick })));\n    }\n}\nconst ActionsMenu_ = ({ actions, impersonate, title = undefined }) => {\n    const { t } = useTranslation();\n    const [isVisible, setVisible] = useSafetyFirst(false);\n    // Check if any actions are visible when actions have access reviews.\n    React.useEffect(() => {\n        if (!actions.length) {\n            setVisible(false);\n            return;\n        }\n        const promises = actions.reduce((acc, action) => {\n            if (action.accessReview) {\n                acc.push(checkAccess(action.accessReview));\n            }\n            return acc;\n        }, []);\n        // Only need to resolve if all actions require access review\n        if (promises.length !== actions.length) {\n            setVisible(true);\n            return;\n        }\n        Promise.all(promises)\n            .then(results => setVisible(_.some(results, 'status.allowed')))\n            .catch(() => setVisible(true));\n    }, [actions, impersonate, setVisible]);\n    return isVisible ? React.createElement(ActionsMenuDropdown, { actions: actions, title: title, t: t }) : null;\n};\nexport const ActionsMenu = connect(impersonateStateToProps)(ActionsMenu_);\nActionsMenu.propTypes = {\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node.isRequired,\n        href: PropTypes.string,\n        callback: PropTypes.func,\n        accessReview: PropTypes.object,\n    })).isRequired,\n    title: PropTypes.node,\n};\nconst containerLabel = container => React.createElement(ResourceName, { name: container ? container.name : '', kind: \"Container\" });\nexport class ContainerDropdown extends React.PureComponent {\n    getSpacer(container) {\n        const spacerBefore = new Set();\n        return container ? spacerBefore.add(container.name) : spacerBefore;\n    }\n    getHeaders(container, initContainer) {\n        return initContainer\n            ? {\n                [container.name]: 'Containers',\n                [initContainer.name]: 'Init Containers',\n            }\n            : {};\n    }\n    render() {\n        const { currentKey, containers, initContainers, onChange } = this.props;\n        if (_.isEmpty(containers) && _.isEmpty(initContainers)) {\n            return null;\n        }\n        const firstInitContainer = _.find(initContainers, { order: 0 });\n        const firstContainer = _.find(containers, { order: 0 });\n        const spacerBefore = this.getSpacer(firstInitContainer);\n        const headerBefore = this.getHeaders(firstContainer, firstInitContainer);\n        const dropdownItems = _.mapValues(_.merge(containers, initContainers), containerLabel);\n        const title = _.get(dropdownItems, currentKey) || containerLabel(firstContainer);\n        return React.createElement(Dropdown, { className: \"btn-group\", menuClassName: \"dropdown-menu--text-wrap\", headerBefore: headerBefore, items: dropdownItems, spacerBefore: spacerBefore, title: title, onChange: onChange, selectedKey: currentKey });\n    }\n}\nContainerDropdown.propTypes = {\n    containers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n    currentKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    initContainers: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n};\nContainerDropdown.defaultProps = {\n    currentKey: '',\n    initContainers: {},\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/dropdown.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/dropdown.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CaretDownIcon, MinusCircleIcon, PlusCircleIcon, StarIcon } from '@patternfly/react-icons';\nimport { impersonateStateToProps } from '../../reducers/ui';\nimport { checkAccess } from './rbac';\nimport { history } from './router';\nimport { KebabItems } from './kebab';\nimport { ResourceName } from './resource-icon';\nimport { useSafetyFirst } from '../safety-first';\nimport { useTranslation } from 'react-i18next';\n\nexport class DropdownMixin extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.listener = this._onWindowClick.bind(this);\n    this.state = { active: !!props.active, selectedKey: props.selectedKey };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownElement = React.createRef();\n    this.dropdownList = React.createRef();\n  }\n\n  _onWindowClick(event) {\n    if (!this.state.active) {\n      return;\n    }\n\n    const { current } = this.dropdownElement;\n    if (!current) {\n      return;\n    }\n\n    if (event.target === current || (current && current.contains(event.target))) {\n      return;\n    }\n\n    this.hide(event);\n  }\n\n  UNSAFE_componentWillReceiveProps({ selectedKey, items }) {\n    if (selectedKey !== this.props.selectedKey) {\n      this.setState({ selectedKey, title: items[selectedKey] });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.listener);\n  }\n\n  onClick_(selectedKey, e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { items, actionItems, onChange, noSelection, title, type } = this.props;\n\n    if (onChange) {\n      onChange(selectedKey, e);\n    }\n\n    const newTitle = items[selectedKey];\n\n    if (!actionItems || !_.some(actionItems, { actionKey: selectedKey })) {\n      this.setState({\n        selectedKey,\n        title: noSelection ? title : newTitle,\n      });\n    }\n\n    if (type !== 'multiple') {\n      this.hide();\n    }\n  }\n\n  toggle(e) {\n    e.preventDefault();\n\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.state.active) {\n      this.hide(e);\n    } else {\n      this.show(e);\n    }\n  }\n\n  show() {\n    /* If you're wondering why this isn't in componentDidMount, it's because\n     * kebabs are dropdowns. A list of 200 pods would mean 200 global event\n     * listeners. This is bad for performance. - ggreer\n     */\n    window.removeEventListener('click', this.listener);\n    window.addEventListener('click', this.listener);\n    this.setState({ active: true });\n  }\n\n  hide(e) {\n    e && e.stopPropagation();\n    window.removeEventListener('click', this.listener);\n    this.setState({ active: false });\n  }\n}\n\nclass DropDownRow extends React.PureComponent {\n  render() {\n    const { itemKey, content, onclick, onBookmark, onUnBookmark, className, selected, hover, canFavorite, onFavorite, favoriteKey, autocompleteFilter } = this.props;\n    let prefix;\n\n    if (!autocompleteFilter && !onBookmark && !onUnBookmark) {\n      //use pf4 markup if not using the autocomplete dropdown\n      return (\n        <li key={itemKey}>\n          <button className=\"pf-c-dropdown__menu-item\" id={`${itemKey}-link`} data-test-id=\"dropdown-menu\" data-test-dropdown-menu={itemKey} onClick={e => onclick(itemKey, e)}>\n            {content}\n          </button>\n        </li>\n      );\n    }\n    if (onUnBookmark) {\n      prefix = (\n        <a href=\"#\" className={classNames('bookmarker', { hover, focus: selected })} onClick={e => onUnBookmark(e, itemKey)}>\n          <MinusCircleIcon />\n        </a>\n      );\n    }\n    if (onBookmark) {\n      prefix = (\n        <a href=\"#\" className={classNames('bookmarker', { hover, focus: selected })} onClick={e => onBookmark(e, itemKey, content)}>\n          <PlusCircleIcon />\n        </a>\n      );\n    }\n\n    let suffix;\n    if (onUnBookmark && canFavorite) {\n      const isFavorite = favoriteKey === itemKey;\n      suffix = (\n        <a href=\"#\" className={classNames('bookmarker', { hover, focus: selected })} onClick={e => onFavorite(e, isFavorite ? undefined : itemKey)}>\n          <StarIcon className={classNames({ favorite: isFavorite })} />\n        </a>\n      );\n    }\n\n    return (\n      <li role=\"option\" className={classNames(className)} key={itemKey}>\n        {prefix}\n        <a\n          href=\"#\"\n          ref={this.link}\n          id={`${itemKey}-link`}\n          className={classNames('pf-c-dropdown__menu-item', {\n            'next-to-bookmark': !!prefix,\n            hover,\n            focus: selected,\n          })}\n          onClick={e => onclick(itemKey, e)}\n        >\n          {content}\n        </a>\n        {suffix}\n      </li>\n    );\n  }\n}\n\n/** @augments {React.Component<any>} */\nexport class Dropdown extends DropdownMixin {\n  constructor(props) {\n    super(props);\n    this.onUnBookmark = (...args) => this.onUnBookmark_(...args);\n    this.onBookmark = (...args) => this.onBookmark_(...args);\n    this.onFavorite = (...args) => this.onFavorite_(...args);\n    this.onClick = (...args) => this.onClick_(...args);\n\n    let bookmarks = props.defaultBookmarks || {};\n    let favoriteKey;\n    if (props.storageKey) {\n      try {\n        const parsedBookmarks = JSON.parse(localStorage.getItem(this.bookmarkStorageKey));\n        if (_.isPlainObject(parsedBookmarks)) {\n          bookmarks = parsedBookmarks;\n        }\n        const parsedFavorite = localStorage.getItem(props.storageKey);\n        if (props.canFavorite && _.isString(parsedFavorite)) {\n          favoriteKey = parsedFavorite;\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn(`could not load bookmarks for ${props.storageKey}: ${e}`);\n      }\n    }\n    this.state.favoriteKey = favoriteKey;\n    this.state.bookmarks = bookmarks;\n\n    this.state.items = Object.assign({}, bookmarks, props.items);\n\n    this.state.title = props.noSelection ? props.title : _.get(props.items, props.selectedKey, props.title);\n\n    this.onKeyDown = e => this.onKeyDown_(e);\n    this.changeTextFilter = e => this.applyTextFilter_(e.target.value, this.props.items);\n    const { shortCut } = this.props;\n    this.globalKeyDown = e => {\n      const { nodeName } = e.target;\n\n      if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n        return;\n      }\n\n      if (!shortCut || e.key !== shortCut) {\n        return;\n      }\n\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey) {\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n      this.show(e);\n    };\n  }\n\n  get bookmarkStorageKey() {\n    return `${this.props.storageKey}-bookmarks`;\n  }\n\n  componentDidMount() {\n    if (this.props.shortCut) {\n      window.addEventListener('keydown', this.globalKeyDown);\n    }\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    window.removeEventListener('keydown', this.globalKeyDown);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    super.UNSAFE_componentWillReceiveProps(nextProps);\n    const props = this.props;\n\n    if (_.isEqual(nextProps.items, props.items) && nextProps.title === props.title) {\n      return;\n    }\n    const title = nextProps.title || props.title;\n    this.setState({ title });\n\n    this.applyTextFilter_(this.state.autocompleteText, nextProps.items);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.active && this.state.active && this.input) {\n      // Clear any previous filter when reopening the dropdown.\n      this.applyTextFilter_('', this.props.items);\n    }\n  }\n\n  applyTextFilter_(autocompleteText, items) {\n    const { autocompleteFilter } = this.props;\n    items = Object.assign({}, this.state.bookmarks, items);\n    if (autocompleteFilter && !_.isEmpty(autocompleteText)) {\n      items = _.pickBy(items, (item, key) => autocompleteFilter(autocompleteText, item, key));\n    }\n    this.setState({ autocompleteText, items });\n  }\n\n  onKeyDown_(e) {\n    const { key } = e;\n    if (key === 'Escape') {\n      this.hide(e);\n      return;\n    }\n\n    if (key !== 'ArrowDown' && key !== 'ArrowUp' && key !== 'Enter') {\n      return;\n    }\n\n    const { items, keyboardHoverKey } = this.state;\n\n    if (key === 'Enter') {\n      if (this.state.active && items[keyboardHoverKey]) {\n        this.onClick(keyboardHoverKey, e);\n      }\n      return;\n    }\n\n    const keys = _.keys(items);\n\n    let index = _.indexOf(keys, keyboardHoverKey);\n\n    if (key === 'ArrowDown') {\n      index += 1;\n    } else {\n      index -= 1;\n    }\n\n    // periodic boundaries\n    if (index >= keys.length) {\n      index = 0;\n    }\n    if (index < 0) {\n      index = keys.length - 1;\n    }\n\n    const newKey = keys[index];\n    this.setState({ keyboardHoverKey: newKey });\n    e.stopPropagation();\n  }\n\n  onFavorite_(e, favoriteKey) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ favoriteKey });\n    if (favoriteKey) {\n      localStorage.setItem(this.props.storageKey, favoriteKey);\n    } else {\n      // do not set `undefined` as a value in localstorage\n      localStorage.removeItem(this.props.storageKey, favoriteKey);\n    }\n  }\n\n  onBookmark_(e, key, value) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const bookmarks = Object.assign({}, this.state.bookmarks);\n    bookmarks[key] = value;\n    this.setState({ bookmarks });\n    localStorage.setItem(this.bookmarkStorageKey, JSON.stringify(bookmarks));\n  }\n\n  onUnBookmark_(e, key) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const bookmarks = Object.assign({}, this.state.bookmarks);\n    delete bookmarks[key];\n    this.setState({ bookmarks });\n    localStorage.setItem(this.bookmarkStorageKey, JSON.stringify(bookmarks));\n  }\n\n  renderActionItem() {\n    const { actionItems } = this.props;\n    if (actionItems) {\n      const { selectedKey, keyboardHoverKey, noSelection } = this.props;\n      return (\n        <>\n          {actionItems.map(ai => (\n            <DropDownRow className={classNames({ active: ai.actionKey === selectedKey && !noSelection })} key={`${ai.actionKey}-${ai.actionTitle}`} itemKey={ai.actionKey} content={ai.actionTitle} onclick={this.onClick} selected={ai.actionKey === selectedKey && !noSelection} hover={ai.actionKey === keyboardHoverKey} />\n          ))}\n          <li className=\"co-namespace-selector__divider\">\n            <div className=\"dropdown-menu__divider\" />\n          </li>\n        </>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { active, autocompleteText, selectedKey, items, title, bookmarks, keyboardHoverKey, favoriteKey } = this.state;\n    const { ariaLabel, autocompleteFilter, autocompletePlaceholder, className, buttonClassName, menuClassName, storageKey, canFavorite, dropDownClassName, titlePrefix, describedBy, disabled } = this.props;\n\n    const spacerBefore = this.props.spacerBefore || new Set();\n    const headerBefore = this.props.headerBefore || {};\n    const rows = [];\n    const bookMarkRows = [];\n    const noBookmark = this.props.noBookmark || false;\n    const addItem = (key, content) => {\n      const selected = key === selectedKey && !this.props.noSelection;\n      const hover = key === keyboardHoverKey;\n      const klass = classNames({ active: selected });\n      if (storageKey && bookmarks && bookmarks[key]) {\n        bookMarkRows.push(<DropDownRow className={klass} key={key} itemKey={key} content={content} onUnBookmark={this.onUnBookmark} onclick={this.onClick} selected={selected} hover={hover} canFavorite={canFavorite} onFavorite={this.onFavorite} favoriteKey={favoriteKey} />);\n        return;\n      }\n      if (spacerBefore.has(key)) {\n        rows.push(\n          <li key={`${key}-spacer`}>\n            <div className=\"dropdown-menu__divider\" />\n          </li>,\n        );\n      }\n\n      if (_.has(headerBefore, key)) {\n        rows.push(\n          <li key={`${key}-header`}>\n            <div className=\"dropdown-menu__header\">{headerBefore[key]}</div>\n          </li>,\n        );\n      }\n      rows.push(<DropDownRow className={klass} key={key} itemKey={key} content={content} onBookmark={!noBookmark && storageKey && this.onBookmark} onclick={this.onClick} selected={selected} hover={hover} autocompleteFilter={autocompleteFilter} />);\n    };\n\n    _.each(items, (v, k) => addItem(k, v));\n\n    //render PF4 dropdown markup if this is not the autocomplete filter\n    if (autocompleteFilter) {\n      return (\n        <div className={className} ref={this.dropdownElement} style={this.props.style}>\n          <div className={classNames('dropdown pf-c-dropdown', { 'pf-m-expanded': this.state.active }, dropDownClassName)}>\n            <button aria-haspopup=\"true\" onClick={this.toggle} onKeyDown={this.onKeyDown} type=\"button\" className={classNames('pf-c-dropdown__toggle', buttonClassName)} id={this.props.id} aria-describedby={describedBy} disabled={disabled}>\n              <div className=\"btn-dropdown__content-wrap\">\n                <span className=\"pf-c-dropdown__toggle-text\">\n                  {titlePrefix && `${titlePrefix}: `}\n                  {title}\n                </span>\n                <CaretDownIcon className=\"pf-c-dropdown__toggle-icon\" />\n              </div>\n            </button>\n            {active && (\n              <ul role=\"listbox\" ref={this.dropdownList} className={classNames('dropdown-menu__autocomplete-filter', 'pf-c-dropdown__menu', menuClassName)}>\n                {autocompleteFilter && (\n                  <div className=\"dropdown-menu__filter\">\n                    <input autoFocus type=\"text\" ref={input => (this.input = input)} onChange={this.changeTextFilter} placeholder={autocompletePlaceholder} value={autocompleteText || ''} autoCapitalize=\"none\" onKeyDown={this.onKeyDown} className=\"pf-c-form-control\" onClick={e => e.stopPropagation()} data-test-id=\"dropdown-text-filter\" />\n                  </div>\n                )}\n                {this.renderActionItem()}\n                {bookMarkRows}\n                {_.size(bookMarkRows) ? (\n                  <li className=\"co-namespace-selector__divider\">\n                    <div className=\"dropdown-menu__divider\" />\n                  </li>\n                ) : null}\n                {rows}\n              </ul>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    //pf4 markup\n    return (\n      <div className={className} ref={this.dropdownElement} style={this.props.style}>\n        <div className={classNames({ 'dropdown pf-c-dropdown': true, 'pf-m-expanded': this.state.active }, dropDownClassName)}>\n          <button aria-label={ariaLabel} aria-haspopup=\"true\" aria-expanded={this.state.active} className={classNames('pf-c-dropdown__toggle', buttonClassName)} data-test-id=\"dropdown-button\" onClick={this.toggle} onKeyDown={this.onKeyDown} type=\"button\" id={this.props.id} aria-describedby={describedBy} disabled={disabled}>\n            <span className=\"pf-c-dropdown__toggle-text\">\n              {titlePrefix && `${titlePrefix}: `}\n              {title}\n            </span>\n            <CaretDownIcon className=\"pf-c-dropdown__toggle-icon\" />\n          </button>\n          {active && (\n            <ul ref={this.dropdownList} className={classNames('pf-c-dropdown__menu', menuClassName)}>\n              {rows}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  actionItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      actionKey: PropTypes.string,\n      actionTitle: PropTypes.string,\n    }),\n  ),\n  autocompleteFilter: PropTypes.func,\n  autocompletePlaceholder: PropTypes.string,\n  canFavorite: PropTypes.bool,\n  className: PropTypes.string,\n  defaultBookmarks: PropTypes.objectOf(PropTypes.string),\n  dropDownClassName: PropTypes.string,\n  enableBookmarks: PropTypes.bool,\n  headerBefore: PropTypes.objectOf(PropTypes.string),\n  items: PropTypes.object.isRequired,\n  menuClassName: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  noSelection: PropTypes.bool,\n  storageKey: PropTypes.string,\n  spacerBefore: PropTypes.instanceOf(Set),\n  textFilter: PropTypes.string,\n  title: PropTypes.node,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nDropdown.defaultProps = {\n  type: 'single',\n};\n\nclass ActionsMenuDropdown extends DropdownMixin {\n  render() {\n    const { actions, title = undefined, t } = this.props;\n    const onClick = (event, option) => {\n      event.preventDefault();\n\n      if (option.callback) {\n        option.callback();\n      }\n\n      if (option.href) {\n        history.push(option.href);\n      }\n\n      this.hide();\n    };\n    return (\n      <div\n        ref={this.dropdownElement}\n        className={classNames({\n          'co-actions-menu pf-c-dropdown': true,\n          'pf-m-expanded': this.state.active,\n        })}\n      >\n        <button type=\"button\" aria-haspopup=\"true\" aria-label=\"Actions\" aria-expanded={this.state.active} className=\"pf-c-dropdown__toggle\" onClick={this.toggle} data-test-id=\"actions-menu-button\">\n          <span className=\"pf-c-dropdown__toggle-text\">{title || t('COMMON:MSG_MAIN_ACTIONBUTTON_1')}</span>\n          <CaretDownIcon className=\"pf-c-dropdown__toggle-icon\" />\n        </button>\n        {this.state.active && <KebabItems options={actions} onClick={onClick} />}\n      </div>\n    );\n  }\n}\n\nconst ActionsMenu_ = ({ actions, impersonate, title = undefined }) => {\n  const { t } = useTranslation();\n  const [isVisible, setVisible] = useSafetyFirst(false);\n\n  // Check if any actions are visible when actions have access reviews.\n  React.useEffect(() => {\n    if (!actions.length) {\n      setVisible(false);\n      return;\n    }\n\n    const promises = actions.reduce((acc, action) => {\n      if (action.accessReview) {\n        acc.push(checkAccess(action.accessReview));\n      }\n      return acc;\n    }, []);\n\n    // Only need to resolve if all actions require access review\n    if (promises.length !== actions.length) {\n      setVisible(true);\n      return;\n    }\n\n    Promise.all(promises)\n      .then(results => setVisible(_.some(results, 'status.allowed')))\n      .catch(() => setVisible(true));\n  }, [actions, impersonate, setVisible]);\n\n  return isVisible ? <ActionsMenuDropdown actions={actions} title={title} t={t} /> : null;\n};\nexport const ActionsMenu = connect(impersonateStateToProps)(ActionsMenu_);\n\nActionsMenu.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.node.isRequired,\n      href: PropTypes.string,\n      callback: PropTypes.func,\n      accessReview: PropTypes.object,\n    }),\n  ).isRequired,\n  title: PropTypes.node,\n};\n\nconst containerLabel = container => <ResourceName name={container ? container.name : ''} kind=\"Container\" />;\n\nexport class ContainerDropdown extends React.PureComponent {\n  getSpacer(container) {\n    const spacerBefore = new Set();\n    return container ? spacerBefore.add(container.name) : spacerBefore;\n  }\n\n  getHeaders(container, initContainer) {\n    return initContainer\n      ? {\n          [container.name]: 'Containers',\n          [initContainer.name]: 'Init Containers',\n        }\n      : {};\n  }\n\n  render() {\n    const { currentKey, containers, initContainers, onChange } = this.props;\n    if (_.isEmpty(containers) && _.isEmpty(initContainers)) {\n      return null;\n    }\n    const firstInitContainer = _.find(initContainers, { order: 0 });\n    const firstContainer = _.find(containers, { order: 0 });\n    const spacerBefore = this.getSpacer(firstInitContainer);\n    const headerBefore = this.getHeaders(firstContainer, firstInitContainer);\n    const dropdownItems = _.mapValues(_.merge(containers, initContainers), containerLabel);\n    const title = _.get(dropdownItems, currentKey) || containerLabel(firstContainer);\n    return <Dropdown className=\"btn-group\" menuClassName=\"dropdown-menu--text-wrap\" headerBefore={headerBefore} items={dropdownItems} spacerBefore={spacerBefore} title={title} onChange={onChange} selectedKey={currentKey} />;\n  }\n}\n\nContainerDropdown.propTypes = {\n  containers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  currentKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  initContainers: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nContainerDropdown.defaultProps = {\n  currentKey: '',\n  initContainers: {},\n};\n"]}]}