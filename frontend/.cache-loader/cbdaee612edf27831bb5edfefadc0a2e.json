{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/PopoverStatus.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/PopoverStatus.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport StatusIconAndText from './StatusIconAndText';\nconst PopoverStatus = (_a) => {\n    var { title, hideHeader, icon, activeIcon, children, isVisible = null, shouldClose = null } = _a, other = __rest(_a, [\"title\", \"hideHeader\", \"icon\", \"activeIcon\", \"children\", \"isVisible\", \"shouldClose\"]);\n    const [isActive, setActive] = React.useState(false);\n    const onHide = React.useCallback(() => setActive(false), [setActive]);\n    const onShow = React.useCallback(() => setActive(true), [setActive]);\n    return (React.createElement(Popover, { position: PopoverPosition.right, headerContent: hideHeader ? null : title, bodyContent: children, \"aria-label\": title, onHide: onHide, onShow: onShow, isVisible: isVisible, shouldClose: shouldClose },\n        React.createElement(Button, { variant: \"link\", isInline: true },\n            React.createElement(StatusIconAndText, Object.assign({}, other, { title: title, icon: isActive && activeIcon ? activeIcon : icon })))));\n};\nexport default PopoverStatus;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/PopoverStatus.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/PopoverStatus.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAE1E,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD,MAAM,aAAa,GAAiC,CAAC,EASpD,EAAE,EAAE;QATgD,EACnD,KAAK,EACL,UAAU,EACV,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,SAAS,GAAG,IAAI,EAChB,WAAW,GAAG,IAAI,OAEnB,EADC,yGAAQ;IAER,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IACtE,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAErE,OAAO,CACL,oBAAC,OAAO,IACN,QAAQ,EAAE,eAAe,CAAC,KAAK,EAC/B,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EACxC,WAAW,EAAE,QAAQ,gBACT,KAAK,EACjB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW;QAExB,oBAAC,MAAM,IAAC,OAAO,EAAC,MAAM,EAAC,QAAQ;YAC7B,oBAAC,iBAAiB,oBACZ,KAAK,IACT,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAChD,CACK,CACD,CACX,CAAC;AACJ,CAAC,CAAC;AASF,eAAe,aAAa,CAAC","sourcesContent":["import * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { Instance as TippyInstance } from 'tippy.js';\nimport StatusIconAndText from './StatusIconAndText';\n\nconst PopoverStatus: React.FC<PopoverStatusProps> = ({\n  title,\n  hideHeader,\n  icon,\n  activeIcon,\n  children,\n  isVisible = null,\n  shouldClose = null,\n  ...other\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const onHide = React.useCallback(() => setActive(false), [setActive]);\n  const onShow = React.useCallback(() => setActive(true), [setActive]);\n\n  return (\n    <Popover\n      position={PopoverPosition.right}\n      headerContent={hideHeader ? null : title}\n      bodyContent={children}\n      aria-label={title}\n      onHide={onHide}\n      onShow={onShow}\n      isVisible={isVisible}\n      shouldClose={shouldClose}\n    >\n      <Button variant=\"link\" isInline>\n        <StatusIconAndText\n          {...other}\n          title={title}\n          icon={isActive && activeIcon ? activeIcon : icon}\n        />\n      </Button>\n    </Popover>\n  );\n};\n\ntype PopoverStatusProps = React.ComponentProps<typeof StatusIconAndText> & {\n  activeIcon?: React.ReactElement;\n  hideHeader?: boolean;\n  isVisible?: boolean;\n  shouldClose?: (tip: TippyInstance) => void;\n};\n\nexport default PopoverStatus;\n"]}]}