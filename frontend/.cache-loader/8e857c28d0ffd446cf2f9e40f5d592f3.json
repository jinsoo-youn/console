{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmResourcesPanel.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmResourcesPanel.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from '@console/topology';\nimport { PodsOverview } from '@console/internal/components/overview/pods-overview';\nimport { NetworkingOverview } from '@console/internal/components/overview/networking-overview';\nexport const TopologyVmResourcesPanel = observer(({ vmNode }) => {\n    const vmData = vmNode.getData();\n    const { obj: vm, pods, services, routes } = vmData === null || vmData === void 0 ? void 0 : vmData.resources;\n    return (React.createElement(\"div\", { className: \"overview__sidebar-pane-body\" },\n        React.createElement(PodsOverview, { pods: pods, obj: vm }),\n        React.createElement(NetworkingOverview, { services: services, routes: routes })));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmResourcesPanel.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmResourcesPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,qDAAqD,CAAC;AACnF,OAAO,EAAE,kBAAkB,EAAE,MAAM,2DAA2D,CAAC;AAO/F,MAAM,CAAC,MAAM,wBAAwB,GAA2C,QAAQ,CACtF,CAAC,EAAE,MAAM,EAAgC,EAAE,EAAE;IAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAChC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC;IAE9D,OAAO,CACL,6BAAK,SAAS,EAAC,6BAA6B;QAC1C,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,GAAI;QACrC,oBAAC,kBAAkB,IAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,GAAI,CACtD,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport { observer } from '@console/topology';\nimport { PodsOverview } from '@console/internal/components/overview/pods-overview';\nimport { NetworkingOverview } from '@console/internal/components/overview/networking-overview';\nimport { VMNode } from './types';\n\ntype TopologyVmResourcePanelProps = {\n  vmNode: VMNode;\n};\n\nexport const TopologyVmResourcesPanel: React.FC<TopologyVmResourcePanelProps> = observer(\n  ({ vmNode }: TopologyVmResourcePanelProps) => {\n    const vmData = vmNode.getData();\n    const { obj: vm, pods, services, routes } = vmData?.resources;\n\n    return (\n      <div className=\"overview__sidebar-pane-body\">\n        <PodsOverview pods={pods} obj={vm} />\n        <NetworkingOverview services={services} routes={routes} />\n      </div>\n    );\n  },\n);\n"]}]}