{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/clusterserviceversion.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/clusterserviceversion.tsx","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as classNames from 'classnames';\nimport { sortable, wrappable } from '@patternfly/react-table';\nimport { Helmet } from 'react-helmet';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport { Alert, Button, Card, CardBody, CardFooter, CardHeader, Popover, } from '@patternfly/react-core';\nimport { ALL_NAMESPACES_KEY, Status, WarningStatus, getNamespace, getUID } from '@console/shared';\nimport { DetailsPage, Table, TableRow, TableData, MultiListPage, } from '@console/internal/components/factory';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { modelFor, referenceForModel, referenceFor, k8sKill, k8sPatch, k8sGet, } from '@console/internal/module/k8s';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { Kebab, MsgBox, navFactory, ResourceKebab, ResourceLink, Timestamp, SectionHeading, ResourceSummary, ScrollToTopOnMount, AsyncComponent, ExternalLink, StatusBox, RequireCreatePermission, resourcePathFromModel, resourceObjPath, } from '@console/internal/components/utils';\nimport { useAccessReview } from '@console/internal/components/utils/rbac';\nimport { ClusterServiceVersionModel, SubscriptionModel, PackageManifestModel, CatalogSourceModel, InstallPlanModel, OperatorGroupModel, } from '../models';\nimport { ClusterServiceVersionPhase, } from '../types';\nimport { subscriptionForCSV, getSubscriptionStatus } from '../status/csv-status';\nimport { getInternalObjects, isInternalObject } from '../utils';\nimport { ProvidedAPIsPage, ProvidedAPIPage } from './operand';\nimport { createUninstallOperatorModal } from './modals/uninstall-operator-modal';\nimport { operatorGroupFor, operatorNamespaceFor } from './operator-group';\nimport { SubscriptionDetails, catalogSourceForSubscription } from './subscription';\nimport { ClusterServiceVersionLogo, referenceForProvidedAPI, providedAPIsFor } from './index';\nconst clusterServiceVersionStateToProps = (state) => {\n    return {\n        activeNamespace: state.UI.get('activeNamespace'),\n    };\n};\nconst isSubscription = (obj) => referenceFor(obj) === referenceForModel(SubscriptionModel);\nconst isCSV = (obj) => referenceFor(obj) === referenceForModel(ClusterServiceVersionModel);\nconst isPackageServer = (obj) => obj.metadata.name === 'packageserver' &&\n    obj.metadata.namespace === 'openshift-operator-lifecycle-manager';\nconst nameColumnClass = '';\nconst namespaceColumnClass = '';\nconst managedNamespacesColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-sm');\nconst statusColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-lg');\nconst lastUpdatedColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-2xl');\nconst providedAPIsColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-xl');\nconst nameHeader = {\n    title: 'Name',\n    sortField: 'metadata.name',\n    transforms: [sortable],\n    props: { className: nameColumnClass },\n};\nconst namespaceHeader = {\n    title: 'Namespace',\n    sortFunc: 'getOperatorNamespace',\n    transforms: [sortable],\n    props: { className: namespaceColumnClass },\n};\nconst managedNamespacesHeader = {\n    title: 'Managed Namespaces',\n    sortFunc: 'formatTargetNamespaces',\n    transforms: [sortable, wrappable],\n    props: { className: managedNamespacesColumnClass },\n};\nconst statusHeader = {\n    title: 'Status',\n    props: { className: statusColumnClass },\n};\nconst lastUpdatedHeader = {\n    title: 'Last Updated',\n    props: { className: lastUpdatedColumnClass },\n};\nconst providedAPIsHeader = {\n    title: 'Provided APIs',\n    props: { className: providedAPIsColumnClass },\n};\nconst kebabHeader = {\n    title: '',\n    props: { className: Kebab.columnClass },\n};\nexport const AllProjectsTableHeader = () => [\n    nameHeader,\n    namespaceHeader,\n    managedNamespacesHeader,\n    statusHeader,\n    lastUpdatedHeader,\n    providedAPIsHeader,\n    kebabHeader,\n];\nexport const SingleProjectTableHeader = () => [\n    nameHeader,\n    managedNamespacesHeader,\n    statusHeader,\n    lastUpdatedHeader,\n    providedAPIsHeader,\n    kebabHeader,\n];\nconst editSubscription = (sub) => !_.isNil(sub)\n    ? {\n        label: 'Edit Subscription',\n        href: `${resourcePathFromModel(SubscriptionModel, sub.metadata.name, sub.metadata.namespace)}/yaml`,\n    }\n    : null;\nconst uninstall = (sub, csv) => !_.isNil(sub)\n    ? {\n        label: 'Uninstall Operator',\n        callback: () => createUninstallOperatorModal({\n            k8sKill,\n            k8sGet,\n            k8sPatch,\n            subscription: sub,\n            csv,\n        }),\n        accessReview: {\n            group: SubscriptionModel.apiGroup,\n            resource: SubscriptionModel.plural,\n            name: sub.metadata.name,\n            namespace: sub.metadata.namespace,\n            verb: 'delete',\n        },\n    }\n    : null;\nconst menuActionsForCSV = (csv, subscription) => {\n    return _.isEmpty(subscription)\n        ? [Kebab.factory.Delete]\n        : [() => editSubscription(subscription), () => uninstall(subscription, csv)];\n};\nconst ClusterServiceVersionStatus = ({ catalogSourceMissing, obj, subscription, }) => {\n    const status = _.get(obj, 'status.phase');\n    const subscriptionStatus = getSubscriptionStatus(subscription);\n    if (obj.metadata.deletionTimestamp) {\n        return (React.createElement(\"span\", { className: \"co-icon-and-text\" },\n            React.createElement(Status, { status: ClusterServiceVersionPhase.CSVPhaseDeleting })));\n    }\n    if (catalogSourceMissing) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(WarningStatus, { title: \"Cannot update\" }),\n            React.createElement(\"span\", { className: \"text-muted\" }, \"Catalog source was removed\")));\n    }\n    return status ? (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", { className: \"co-icon-and-text\" },\n            React.createElement(Status, { status: status })),\n        subscription && React.createElement(\"span\", { className: \"text-muted\" }, subscriptionStatus.title))) : null;\n};\nconst ManagedNamespaces = ({ obj }) => {\n    var _a;\n    const { 'olm.targetNamespaces': olmTargetNamespaces = '' } = ((_a = obj.metadata) === null || _a === void 0 ? void 0 : _a.annotations) || {};\n    const managedNamespaces = (olmTargetNamespaces === null || olmTargetNamespaces === void 0 ? void 0 : olmTargetNamespaces.split(',')) || [];\n    if (managedNamespaces.length === 1 && managedNamespaces[0] === '') {\n        return React.createElement(React.Fragment, null, \"All Namespaces\");\n    }\n    switch (managedNamespaces.length) {\n        case 0:\n            return React.createElement(\"span\", { className: \"text-muted\" }, \"All Namespaces\");\n        case 1:\n            return (React.createElement(ResourceLink, { kind: \"Namespace\", title: managedNamespaces[0], name: managedNamespaces[0] }));\n        default:\n            return (React.createElement(Popover, { headerContent: \"Managed Namespaces\", bodyContent: managedNamespaces.map((namespace) => (React.createElement(ResourceLink, { kind: \"Namespace\", title: namespace, name: namespace }))) },\n                React.createElement(Button, { variant: \"link\", isInline: true },\n                    managedNamespaces.length,\n                    \" Namespaces\")));\n    }\n};\nexport const NamespacedClusterServiceVersionTableRow = withFallback(({ activeNamespace, obj, rowKey, subscription, catalogSourceMissing, index, style }) => {\n    var _a;\n    const { displayName, provider, version } = _.get(obj, 'spec');\n    const { 'olm.operatorNamespace': olmOperatorNamespace = '' } = ((_a = obj.metadata) === null || _a === void 0 ? void 0 : _a.annotations) || {};\n    const [icon] = _.get(obj, 'spec.icon', []);\n    const route = resourceObjPath(obj, referenceFor(obj));\n    const uid = getUID(obj);\n    const internalObjects = getInternalObjects(obj);\n    const providedAPIs = providedAPIsFor(obj).filter((desc) => !isInternalObject(internalObjects, desc.name));\n    return (React.createElement(TableRow, { id: uid, trKey: rowKey, index: index, style: style },\n        React.createElement(TableData, { className: nameColumnClass },\n            React.createElement(Link, { to: route, className: \"co-clusterserviceversion-link\", \"data-test-operator-row\": displayName },\n                React.createElement(ClusterServiceVersionLogo, { icon: icon, displayName: displayName, version: version, provider: provider }))),\n        activeNamespace === ALL_NAMESPACES_KEY ? (React.createElement(TableData, { className: namespaceColumnClass },\n            React.createElement(ResourceLink, { kind: \"Namespace\", title: olmOperatorNamespace, name: olmOperatorNamespace }))) : null,\n        React.createElement(TableData, { className: managedNamespacesColumnClass },\n            React.createElement(ManagedNamespaces, { obj: obj })),\n        React.createElement(TableData, { className: statusColumnClass },\n            React.createElement(\"div\", { className: \"co-clusterserviceversion-row__status\" },\n                React.createElement(ClusterServiceVersionStatus, { catalogSourceMissing: catalogSourceMissing, obj: obj, subscription: subscription }))),\n        React.createElement(TableData, { className: lastUpdatedColumnClass }, obj.status == null ? '-' : React.createElement(Timestamp, { timestamp: obj.status.lastUpdateTime })),\n        React.createElement(TableData, { className: providedAPIsColumnClass },\n            !_.isEmpty(providedAPIs)\n                ? _.take(providedAPIs, 4).map((desc) => (React.createElement(\"div\", { key: referenceForProvidedAPI(desc) },\n                    React.createElement(Link, { to: `${route}/${referenceForProvidedAPI(desc)}`, title: desc.name }, desc.displayName || desc.kind))))\n                : '-',\n            providedAPIs.length > 4 && (React.createElement(Link, { to: route, title: `View ${providedAPIsFor(obj).length - 4} more...` }, `View ${providedAPIsFor(obj).length - 4} more...`))),\n        React.createElement(TableData, { className: Kebab.columnClass },\n            React.createElement(ResourceKebab, { resource: obj, kind: referenceFor(obj), actions: menuActionsForCSV(obj, subscription) }))));\n});\nexport const ClusterServiceVersionTableRow = connect(clusterServiceVersionStateToProps)(NamespacedClusterServiceVersionTableRow);\nconst NamespacedSubscriptionTableRow = ({ activeNamespace, catalogSourceMissing, rowKey, obj, index, style, }) => {\n    const csvName = _.get(obj, 'spec.name');\n    const menuActions = [Kebab.factory.Edit, () => uninstall(obj)];\n    const namespace = getNamespace(obj);\n    const route = resourceObjPath(obj, referenceForModel(SubscriptionModel));\n    const subscriptionState = _.get(obj, 'status.state', 'Unknown');\n    const uid = getUID(obj);\n    const getStatus = () => {\n        if (catalogSourceMissing) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(WarningStatus, { title: \"Cannot update\" }),\n                React.createElement(\"span\", { className: \"text-muted\" }, \"Catalog source was removed\")));\n        }\n        return (React.createElement(\"span\", { className: \"co-icon-and-text\" },\n            React.createElement(Status, { status: subscriptionState })));\n    };\n    return (React.createElement(TableRow, { id: uid, trKey: rowKey, index: index, style: style },\n        React.createElement(TableData, { className: nameColumnClass },\n            React.createElement(Link, { to: route },\n                React.createElement(ClusterServiceVersionLogo, { icon: null, displayName: csvName, version: null, provider: null }))),\n        activeNamespace === ALL_NAMESPACES_KEY ? (React.createElement(TableData, { className: namespaceColumnClass },\n            React.createElement(ResourceLink, { kind: \"Namespace\", title: namespace, name: namespace }))) : null,\n        React.createElement(TableData, { className: managedNamespacesColumnClass },\n            React.createElement(\"span\", { className: \"text-muted\" }, \"None\")),\n        React.createElement(TableData, { className: statusColumnClass }, getStatus()),\n        React.createElement(TableData, { className: lastUpdatedColumnClass }, obj.status == null ? '-' : React.createElement(Timestamp, { timestamp: obj.status.lastUpdated })),\n        React.createElement(TableData, { className: providedAPIsColumnClass },\n            React.createElement(\"span\", { className: \"text-muted\" }, \"None\")),\n        React.createElement(TableData, { className: Kebab.columnClass },\n            React.createElement(ResourceKebab, { resource: obj, kind: referenceFor(obj), actions: menuActions }))));\n};\nexport const SubscriptionTableRow = connect(clusterServiceVersionStateToProps)(NamespacedSubscriptionTableRow);\nconst InstalledOperatorTableRow = (_a) => {\n    var { obj, catalogSources = [], subscriptions = [] } = _a, rest = __rest(_a, [\"obj\", \"catalogSources\", \"subscriptions\"]);\n    const subscription = isCSV(obj)\n        ? subscriptionForCSV(subscriptions, obj)\n        : obj;\n    // Only warn about missing catalog sources if the user was able to list them\n    // but exclude PackageServer as it does not have a subscription.\n    const catalogSourceMissing = !_.isEmpty(catalogSources) &&\n        !catalogSourceForSubscription(catalogSources, subscription) &&\n        !isPackageServer(obj);\n    return isCSV(obj) ? (React.createElement(ClusterServiceVersionTableRow, Object.assign({}, rest, { catalogSourceMissing: catalogSourceMissing, obj: obj, subscription: subscription }))) : (React.createElement(SubscriptionTableRow, Object.assign({}, rest, { catalogSourceMissing: catalogSourceMissing, obj: subscription })));\n};\nconst NoOperatorsMatchFilterMsg = () => React.createElement(MsgBox, { title: \"No Operators Found\" });\nexport const NamespacedClusterServiceVersionList = (_a) => {\n    var { activeNamespace, subscriptions, catalogSources, data } = _a, rest = __rest(_a, [\"activeNamespace\", \"subscriptions\", \"catalogSources\", \"data\"]);\n    const noDataDetail = (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null,\n            \"No Operators are available\",\n            activeNamespace !== ALL_NAMESPACES_KEY && (React.createElement(React.Fragment, null,\n                ' ',\n                \"for project\",\n                ' ',\n                React.createElement(\"span\", { className: \"co-clusterserviceversion-empty__state__namespace\" }, activeNamespace))),\n            \".\"),\n        React.createElement(\"div\", null,\n            \"Discover and install Operators from the \",\n            React.createElement(\"a\", { href: \"/operatorhub\" }, \"OperatorHub\"),\n            \".\")));\n    const NoDataEmptyMsg = () => React.createElement(MsgBox, { title: \"No Operators Found\", detail: noDataDetail });\n    const isCopiedCSV = (source, kind) => {\n        var _a;\n        return (referenceForModel(ClusterServiceVersionModel) === kind && ((_a = source.status) === null || _a === void 0 ? void 0 : _a.reason) === 'Copied');\n    };\n    const removeCopiedCSVs = (operators) => {\n        return operators.filter((source) => {\n            const kind = referenceFor(source);\n            if (isSubscription(kind)) {\n                return true;\n            }\n            return !isCopiedCSV(source, kind);\n        });\n    };\n    const formatTargetNamespaces = (obj) => {\n        var _a, _b;\n        if (obj.kind === 'Subscription') {\n            return 'None';\n        }\n        const namespaces = ((_b = (_a = obj.metadata.annotations) === null || _a === void 0 ? void 0 : _a['olm.targetNamespaces']) === null || _b === void 0 ? void 0 : _b.split(',')) || [];\n        if (namespaces.length === 1 && namespaces[0] === '') {\n            return 'All Namespaces';\n        }\n        switch (namespaces.length) {\n            case 0:\n                return 'All Namespaces';\n            case 1:\n                return namespaces[0];\n            default:\n                return `${namespaces.length} Namespaces`;\n        }\n    };\n    const getOperatorNamespace = (obj) => {\n        var _a, _b;\n        const olmOperatorNamespace = (_b = (_a = obj.metadata) === null || _a === void 0 ? void 0 : _a.annotations) === null || _b === void 0 ? void 0 : _b['olm.operatorNamespace'];\n        return olmOperatorNamespace !== null && olmOperatorNamespace !== void 0 ? olmOperatorNamespace : getNamespace(obj);\n    };\n    return activeNamespace === ALL_NAMESPACES_KEY ? (React.createElement(Table, Object.assign({ data: removeCopiedCSVs(data) }, rest, { \"aria-label\": \"Installed Operators\", Header: AllProjectsTableHeader, Row: (rowArgs) => (React.createElement(InstalledOperatorTableRow, { obj: rowArgs.obj, index: rowArgs.index, rowKey: rowArgs.key, style: rowArgs.style, catalogSources: catalogSources.data, subscriptions: subscriptions.data })), EmptyMsg: NoOperatorsMatchFilterMsg, NoDataEmptyMsg: NoDataEmptyMsg, virtualize: true, customSorts: {\n            formatTargetNamespaces,\n            getOperatorNamespace,\n        } }))) : (React.createElement(Table, Object.assign({ data: data }, rest, { \"aria-label\": \"Installed Operators\", Header: SingleProjectTableHeader, Row: (rowArgs) => (React.createElement(InstalledOperatorTableRow, { obj: rowArgs.obj, index: rowArgs.index, rowKey: rowArgs.key, style: rowArgs.style, catalogSources: catalogSources.data, subscriptions: subscriptions.data })), EmptyMsg: NoOperatorsMatchFilterMsg, NoDataEmptyMsg: NoDataEmptyMsg, virtualize: true, customSorts: {\n            formatTargetNamespaces,\n            getOperatorNamespace,\n        } })));\n};\nexport const ClusterServiceVersionList = connect(clusterServiceVersionStateToProps)(NamespacedClusterServiceVersionList);\nexport const ClusterServiceVersionsPage = (props) => {\n    const title = 'Installed Operators';\n    const helpText = (React.createElement(\"p\", { className: \"co-help-text\" },\n        \"Installed Operators are represented by Cluster Service Versions within this namespace. For more information, see the\",\n        ' ',\n        React.createElement(ExternalLink, { href: \"https://github.com/operator-framework/operator-lifecycle-manager/blob/master/doc/design/architecture.md\", text: \"Operator Lifecycle Manager documentation\" }),\n        \". Or create an Operator and Cluster Service Version using the\",\n        ' ',\n        React.createElement(ExternalLink, { href: \"https://github.com/operator-framework/operator-sdk\", text: \"Operator SDK\" }),\n        \".\"));\n    const flatten = ({ clusterServiceVersions, subscriptions }) => [\n        ..._.get(clusterServiceVersions, 'data', []),\n        ..._.get(subscriptions, 'data', []).filter((sub) => ['', sub.metadata.namespace].includes(props.namespace) &&\n            _.isNil(_.get(sub, 'status.installedCSV'))),\n    ].filter((obj, i, all) => isSubscription(obj) ||\n        _.isUndefined(all.find(({ metadata }) => [_.get(obj, 'status.currentCSV'), _.get(obj, 'spec.startingCSV')].includes(metadata.name))));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, title)),\n        React.createElement(MultiListPage, Object.assign({}, props, { resources: [\n                {\n                    kind: referenceForModel(ClusterServiceVersionModel),\n                    namespace: props.namespace,\n                    prop: 'clusterServiceVersions',\n                },\n                {\n                    kind: referenceForModel(SubscriptionModel),\n                    prop: 'subscriptions',\n                    optional: true,\n                },\n                {\n                    kind: referenceForModel(CatalogSourceModel),\n                    prop: 'catalogSources',\n                    optional: true,\n                },\n            ], title: title, flatten: flatten, namespace: props.namespace, ListComponent: ClusterServiceVersionList, helpText: helpText }))));\n};\nexport const MarkdownView = (props) => {\n    return (React.createElement(AsyncComponent, Object.assign({ loader: () => import('@console/internal/components/markdown-view').then((c) => c.SyncMarkdownView) }, props)));\n};\nexport const CRDCard = (props) => {\n    const { csv, crd, canCreate } = props;\n    const reference = referenceForProvidedAPI(crd);\n    const model = modelFor(reference);\n    const createRoute = () => `/k8s/ns/${csv.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csv.metadata.name}/${reference}/~new`;\n    return (React.createElement(Card, null,\n        React.createElement(CardHeader, null,\n            React.createElement(ResourceLink, { kind: referenceForProvidedAPI(crd), title: crd.name, linkTo: false, displayName: crd.displayName || crd.kind })),\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null, crd.description)),\n        canCreate && (React.createElement(RequireCreatePermission, { model: model, namespace: csv.metadata.namespace },\n            React.createElement(CardFooter, null,\n                React.createElement(Link, { to: createRoute() },\n                    React.createElement(AddCircleOIcon, { className: \"co-icon-space-r\" }),\n                    \"Create Instance\"))))));\n};\nconst crdCardRowStateToProps = ({ k8s }, { crdDescs }) => {\n    const models = _.compact(crdDescs.map((desc) => k8s.getIn(['RESOURCES', 'models', referenceForProvidedAPI(desc)])));\n    return {\n        crdDescs: crdDescs.filter((desc) => models.find((m) => referenceForModel(m) === referenceForProvidedAPI(desc))),\n        createable: models\n            .filter((m) => (m.verbs || []).includes('create'))\n            .map((m) => referenceForModel(m)),\n    };\n};\nexport const CRDCardRow = connect(crdCardRowStateToProps)((props) => {\n    var _a;\n    const internalObjects = getInternalObjects(props.csv);\n    const crds = (_a = props.crdDescs) === null || _a === void 0 ? void 0 : _a.filter(({ name }) => !isInternalObject(internalObjects, name));\n    return (React.createElement(\"div\", { className: \"co-crd-card-row\" }, _.isEmpty(crds) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"No Kubernetes APIs are being provided by this Operator.\")) : (crds.map((crd) => (React.createElement(CRDCard, { key: referenceForProvidedAPI(crd), crd: crd, csv: props.csv, canCreate: props.createable.includes(referenceForProvidedAPI(crd)) }))))));\n});\nexport const ClusterServiceVersionDetails = (props) => {\n    const { spec, metadata, status } = props.obj;\n    const { 'marketplace.openshift.io/support-workflow': marketplaceSupportWorkflow, 'olm.targetNamespaces': olmTargetNamespaces = '', } = metadata.annotations || {};\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ScrollToTopOnMount, null),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-9\" },\n                        status && status.phase === ClusterServiceVersionPhase.CSVPhaseFailed && (React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"danger\", title: `${status.phase}: ${status.message}` })),\n                        React.createElement(SectionHeading, { text: \"Provided APIs\" }),\n                        React.createElement(CRDCardRow, { csv: props.obj, crdDescs: providedAPIsFor(props.obj) }),\n                        React.createElement(SectionHeading, { text: \"Description\" }),\n                        React.createElement(MarkdownView, { content: spec.description || 'Not available' })),\n                    React.createElement(\"div\", { className: \"col-sm-3\" },\n                        React.createElement(\"dl\", { className: \"co-clusterserviceversion-details__field\" },\n                            React.createElement(\"dt\", null, \"Provider\"),\n                            React.createElement(\"dd\", null, spec.provider && spec.provider.name ? spec.provider.name : 'Not available'),\n                            marketplaceSupportWorkflow && (React.createElement(React.Fragment, null,\n                                React.createElement(\"dt\", null, \"Support\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(ExternalLink, { href: marketplaceSupportWorkflow, text: \"Get support\" })))),\n                            React.createElement(\"dt\", null, \"Created At\"),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Timestamp, { timestamp: metadata.creationTimestamp }))),\n                        React.createElement(\"dl\", { className: \"co-clusterserviceversion-details__field\" },\n                            React.createElement(\"dt\", null, \"Links\"),\n                            spec.links && spec.links.length > 0 ? (spec.links.map((link) => (React.createElement(\"dd\", { key: link.url, style: { display: 'flex', flexDirection: 'column' } },\n                                link.name,\n                                ' ',\n                                React.createElement(ExternalLink, { href: link.url, text: link.url || '-', additionalClassName: \"co-break-all\" }))))) : (React.createElement(\"dd\", null, \"Not available\"))),\n                        React.createElement(\"dl\", { className: \"co-clusterserviceversion-details__field\" },\n                            React.createElement(\"dt\", null, \"Maintainers\"),\n                            spec.maintainers && spec.maintainers.length > 0 ? (spec.maintainers.map((maintainer) => (React.createElement(\"dd\", { key: maintainer.email, style: { display: 'flex', flexDirection: 'column' } },\n                                maintainer.name,\n                                ' ',\n                                React.createElement(\"a\", { href: `mailto:${maintainer.email}`, className: \"co-break-all\" }, maintainer.email || '-'))))) : (React.createElement(\"dd\", null, \"Not available\"))))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"ClusterServiceVersion Details\" }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { resource: props.obj },\n                            React.createElement(\"dt\", null,\n                                React.createElement(Popover, { headerContent: React.createElement(\"div\", null, \"Managed Namespaces\"), bodyContent: React.createElement(\"div\", null, \"Operands in this Namespace are managed by the Operator.\"), maxWidth: \"30rem\" },\n                                    React.createElement(Button, { variant: \"plain\", className: \"co-m-pane__details-popover-button\" }, \"Managed Namespaces\"))),\n                            React.createElement(\"dd\", null, olmTargetNamespaces === '' ? ('All Namespaces') : (React.createElement(ResourceLink, { kind: \"Namespace\", name: props.obj.metadata.namespace, title: props.obj.metadata.uid }))))),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(\"dt\", null, \"Status\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Status, { status: status ? status.phase : 'Unknown' })),\n                        React.createElement(\"dt\", null, \"Status Reason\"),\n                        React.createElement(\"dd\", null, status ? status.message : 'Unknown'),\n                        React.createElement(\"dt\", null, \"Operator Deployments\"),\n                        spec.install.spec.deployments.map(({ name }) => (React.createElement(\"dd\", { key: name },\n                            React.createElement(ResourceLink, { name: name, kind: \"Deployment\", namespace: operatorNamespaceFor(props.obj) })))),\n                        _.get(spec.install.spec, 'permissions') && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Operator Service Accounts\"),\n                            spec.install.spec.permissions.map(({ serviceAccountName }) => (React.createElement(\"dd\", { key: serviceAccountName },\n                                React.createElement(ResourceLink, { name: serviceAccountName, kind: \"ServiceAccount\", namespace: operatorNamespaceFor(props.obj) })))))),\n                        React.createElement(\"dt\", null, \"Operator Group\"),\n                        React.createElement(\"dd\", null, operatorGroupFor(props.obj) ? (React.createElement(ResourceLink, { name: operatorGroupFor(props.obj), namespace: operatorNamespaceFor(props.obj), kind: referenceForModel(OperatorGroupModel) })) : ('-')))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: _.get(status, 'conditions', []).map((c) => (Object.assign(Object.assign({}, c), { type: c.phase, status: 'True' }))) }))));\n};\nexport const CSVSubscription = (_a) => {\n    var { obj, subscriptions = [] } = _a, rest = __rest(_a, [\"obj\", \"subscriptions\"]);\n    const EmptyMsg = () => (React.createElement(MsgBox, { title: \"No Operator Subscription\", detail: \"This Operator will not receive updates.\" }));\n    const subscription = React.useMemo(() => subscriptionForCSV(subscriptions, obj), [\n        obj,\n        subscriptions,\n    ]);\n    return (React.createElement(StatusBox, { EmptyMsg: EmptyMsg, loaded: true, data: subscription },\n        React.createElement(SubscriptionDetails, Object.assign({}, rest, { obj: subscription, clusterServiceVersions: [obj] }))));\n};\nexport const ClusterServiceVersionsDetailsPage = (props) => {\n    const instancePagesFor = (obj) => {\n        const internalObjects = getInternalObjects(obj);\n        const allInstancesPage = {\n            href: 'instances',\n            name: 'All Instances',\n            component: ProvidedAPIsPage,\n        };\n        return (providedAPIsFor(obj).length > 1 ? [allInstancesPage] : []).concat(providedAPIsFor(obj).reduce((acc, desc) => !isInternalObject(internalObjects, desc.name)\n            ? [\n                ...acc,\n                {\n                    href: referenceForProvidedAPI(desc),\n                    name: ['Details', 'YAML', 'Subscription', 'Events'].includes(desc.displayName)\n                        ? `${desc.displayName} Operand`\n                        : desc.displayName || desc.kind,\n                    component: ProvidedAPIPage,\n                    pageData: {\n                        csv: obj,\n                        kind: referenceForProvidedAPI(desc),\n                        namespace: obj.metadata.namespace,\n                    },\n                },\n            ]\n            : acc, []));\n    };\n    const menuActions = (model, obj, { subscriptions }) => {\n        const subscription = subscriptionForCSV(subscriptions, obj);\n        return [\n            ...(_.isEmpty(subscription)\n                ? [Kebab.factory.Delete(model, obj)]\n                : [editSubscription(subscription), uninstall(subscription, obj)]),\n        ];\n    };\n    const canListSubscriptions = useAccessReview({\n        group: SubscriptionModel.apiGroup,\n        resource: SubscriptionModel.plural,\n        verb: 'list',\n    });\n    const pagesFor = React.useCallback((obj) => _.compact([\n        navFactory.details(ClusterServiceVersionDetails),\n        navFactory.editYaml(),\n        canListSubscriptions\n            ? { href: 'subscription', name: 'Subscription', component: CSVSubscription }\n            : null,\n        navFactory.events(ResourceEventStream),\n        ...instancePagesFor(obj),\n    ]), [canListSubscriptions]);\n    return (React.createElement(DetailsPage, Object.assign({}, props, { breadcrumbsFor: () => [\n            {\n                name: 'Installed Operators',\n                path: `/k8s/ns/${props.match.params.ns}/${props.match.params.plural}`,\n            },\n            { name: 'Operator Details', path: props.match.url },\n        ], resources: [\n            { kind: referenceForModel(SubscriptionModel), isList: true, prop: 'subscriptions' },\n            { kind: referenceForModel(PackageManifestModel), isList: true, prop: 'packageManifests' },\n            { kind: referenceForModel(CatalogSourceModel), isList: true, prop: 'catalogSources' },\n            { kind: referenceForModel(InstallPlanModel), isList: true, prop: 'installPlans' },\n        ], icon: ({ obj }) => (React.createElement(ClusterServiceVersionLogo, { displayName: _.get(obj.spec, 'displayName'), icon: _.get(obj.spec, 'icon[0]'), provider: _.get(obj.spec, 'provider'), version: _.get(obj.spec, 'version') })), namespace: props.match.params.ns, kind: referenceForModel(ClusterServiceVersionModel), name: props.match.params.name, pagesFor: pagesFor, menuActions: menuActions })));\n};\n// TODO(alecmerdler): Find Webpack loader/plugin to add `displayName` to React components automagically\nClusterServiceVersionList.displayName = 'ClusterServiceVersionList';\nNamespacedClusterServiceVersionList.displayName = 'ClusterServiceVersionList';\nClusterServiceVersionsPage.displayName = 'ClusterServiceVersionsPage';\nClusterServiceVersionTableRow.displayName = 'ClusterServiceVersionTableRow';\nSingleProjectTableHeader.displayName = 'SingleProjectClusterServiceVersionTableHeader';\nAllProjectsTableHeader.displayName = 'AllProjectsClusterServiceVersionTableHeader';\nCRDCard.displayName = 'CRDCard';\nClusterServiceVersionsDetailsPage.displayName = 'ClusterServiceVersionsDetailsPage';\nClusterServiceVersionDetails.displayName = 'ClusterServiceVersionDetails';\nCSVSubscription.displayName = 'CSVSubscription';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/clusterserviceversion.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/clusterserviceversion.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link, match as RouterMatch } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as classNames from 'classnames';\nimport { sortable, wrappable } from '@patternfly/react-table';\nimport { Helmet } from 'react-helmet';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Popover,\n} from '@patternfly/react-core';\nimport { ALL_NAMESPACES_KEY, Status, WarningStatus, getNamespace, getUID } from '@console/shared';\nimport {\n  DetailsPage,\n  Table,\n  TableRow,\n  TableData,\n  MultiListPage,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport {\n  modelFor,\n  referenceForModel,\n  referenceFor,\n  GroupVersionKind,\n  K8sKind,\n  k8sKill,\n  k8sPatch,\n  k8sGet,\n} from '@console/internal/module/k8s';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport { Conditions } from '@console/internal/components/conditions';\nimport {\n  Kebab,\n  MsgBox,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  Timestamp,\n  SectionHeading,\n  ResourceSummary,\n  ScrollToTopOnMount,\n  AsyncComponent,\n  ExternalLink,\n  FirehoseResult,\n  StatusBox,\n  Page,\n  RequireCreatePermission,\n  resourcePathFromModel,\n  KebabOption,\n  resourceObjPath,\n  KebabAction,\n} from '@console/internal/components/utils';\nimport { useAccessReview } from '@console/internal/components/utils/rbac';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ClusterServiceVersionModel,\n  SubscriptionModel,\n  PackageManifestModel,\n  CatalogSourceModel,\n  InstallPlanModel,\n  OperatorGroupModel,\n} from '../models';\nimport {\n  APIServiceDefinition,\n  CatalogSourceKind,\n  ClusterServiceVersionKind,\n  ClusterServiceVersionPhase,\n  CRDDescription,\n  InstallPlanKind,\n  PackageManifestKind,\n  SubscriptionKind,\n} from '../types';\nimport { subscriptionForCSV, getSubscriptionStatus } from '../status/csv-status';\nimport { getInternalObjects, isInternalObject } from '../utils';\nimport { ProvidedAPIsPage, ProvidedAPIPage } from './operand';\nimport { createUninstallOperatorModal } from './modals/uninstall-operator-modal';\nimport { operatorGroupFor, operatorNamespaceFor } from './operator-group';\nimport { SubscriptionDetails, catalogSourceForSubscription } from './subscription';\nimport { ClusterServiceVersionLogo, referenceForProvidedAPI, providedAPIsFor } from './index';\n\nconst clusterServiceVersionStateToProps = (state: RootState): ClusterServiceVersionStateProps => {\n  return {\n    activeNamespace: state.UI.get('activeNamespace'),\n  };\n};\n\nconst isSubscription = (obj) => referenceFor(obj) === referenceForModel(SubscriptionModel);\nconst isCSV = (obj) => referenceFor(obj) === referenceForModel(ClusterServiceVersionModel);\nconst isPackageServer = (obj) =>\n  obj.metadata.name === 'packageserver' &&\n  obj.metadata.namespace === 'openshift-operator-lifecycle-manager';\n\nconst nameColumnClass = '';\nconst namespaceColumnClass = '';\nconst managedNamespacesColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-sm');\nconst statusColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-lg');\nconst lastUpdatedColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-2xl');\nconst providedAPIsColumnClass = classNames('pf-m-hidden', 'pf-m-visible-on-xl');\n\nconst nameHeader: Header = {\n  title: 'Name',\n  sortField: 'metadata.name',\n  transforms: [sortable],\n  props: { className: nameColumnClass },\n};\n\nconst namespaceHeader: Header = {\n  title: 'Namespace',\n  sortFunc: 'getOperatorNamespace',\n  transforms: [sortable],\n  props: { className: namespaceColumnClass },\n};\n\nconst managedNamespacesHeader: Header = {\n  title: 'Managed Namespaces',\n  sortFunc: 'formatTargetNamespaces',\n  transforms: [sortable, wrappable],\n  props: { className: managedNamespacesColumnClass },\n};\n\nconst statusHeader: Header = {\n  title: 'Status',\n  props: { className: statusColumnClass },\n};\n\nconst lastUpdatedHeader: Header = {\n  title: 'Last Updated',\n  props: { className: lastUpdatedColumnClass },\n};\n\nconst providedAPIsHeader: Header = {\n  title: 'Provided APIs',\n  props: { className: providedAPIsColumnClass },\n};\n\nconst kebabHeader: Header = {\n  title: '',\n  props: { className: Kebab.columnClass },\n};\n\nexport const AllProjectsTableHeader = (): Header[] => [\n  nameHeader,\n  namespaceHeader,\n  managedNamespacesHeader,\n  statusHeader,\n  lastUpdatedHeader,\n  providedAPIsHeader,\n  kebabHeader,\n];\nexport const SingleProjectTableHeader = (): Header[] => [\n  nameHeader,\n  managedNamespacesHeader,\n  statusHeader,\n  lastUpdatedHeader,\n  providedAPIsHeader,\n  kebabHeader,\n];\n\nconst editSubscription = (sub: SubscriptionKind): KebabOption =>\n  !_.isNil(sub)\n    ? {\n        label: 'Edit Subscription',\n        href: `${resourcePathFromModel(\n          SubscriptionModel,\n          sub.metadata.name,\n          sub.metadata.namespace,\n        )}/yaml`,\n      }\n    : null;\n\nconst uninstall = (sub: SubscriptionKind, csv?: ClusterServiceVersionKind): KebabOption =>\n  !_.isNil(sub)\n    ? {\n        label: 'Uninstall Operator',\n        callback: () =>\n          createUninstallOperatorModal({\n            k8sKill,\n            k8sGet,\n            k8sPatch,\n            subscription: sub,\n            csv,\n          }),\n        accessReview: {\n          group: SubscriptionModel.apiGroup,\n          resource: SubscriptionModel.plural,\n          name: sub.metadata.name,\n          namespace: sub.metadata.namespace,\n          verb: 'delete',\n        },\n      }\n    : null;\n\nconst menuActionsForCSV = (\n  csv: ClusterServiceVersionKind,\n  subscription: SubscriptionKind,\n): KebabAction[] => {\n  return _.isEmpty(subscription)\n    ? [Kebab.factory.Delete]\n    : [() => editSubscription(subscription), () => uninstall(subscription, csv)];\n};\n\nconst ClusterServiceVersionStatus: React.FC<ClusterServiceVersionStatusProps> = ({\n  catalogSourceMissing,\n  obj,\n  subscription,\n}) => {\n  const status = _.get(obj, 'status.phase');\n  const subscriptionStatus = getSubscriptionStatus(subscription);\n\n  if (obj.metadata.deletionTimestamp) {\n    return (\n      <span className=\"co-icon-and-text\">\n        <Status status={ClusterServiceVersionPhase.CSVPhaseDeleting} />\n      </span>\n    );\n  }\n\n  if (catalogSourceMissing) {\n    return (\n      <>\n        <WarningStatus title=\"Cannot update\" />\n        <span className=\"text-muted\">Catalog source was removed</span>\n      </>\n    );\n  }\n\n  return status ? (\n    <>\n      <span className=\"co-icon-and-text\">\n        <Status status={status} />\n      </span>\n      {subscription && <span className=\"text-muted\">{subscriptionStatus.title}</span>}\n    </>\n  ) : null;\n};\n\nconst ManagedNamespaces: React.FC<ManagedNamespacesProps> = ({ obj }) => {\n  const { 'olm.targetNamespaces': olmTargetNamespaces = '' } = obj.metadata?.annotations || {};\n  const managedNamespaces = olmTargetNamespaces?.split(',') || [];\n\n  if (managedNamespaces.length === 1 && managedNamespaces[0] === '') {\n    return <>All Namespaces</>;\n  }\n\n  switch (managedNamespaces.length) {\n    case 0:\n      return <span className=\"text-muted\">All Namespaces</span>;\n    case 1:\n      return (\n        <ResourceLink kind=\"Namespace\" title={managedNamespaces[0]} name={managedNamespaces[0]} />\n      );\n    default:\n      return (\n        <Popover\n          headerContent=\"Managed Namespaces\"\n          bodyContent={managedNamespaces.map((namespace) => (\n            <ResourceLink kind=\"Namespace\" title={namespace} name={namespace} />\n          ))}\n        >\n          <Button variant=\"link\" isInline>\n            {managedNamespaces.length} Namespaces\n          </Button>\n        </Popover>\n      );\n  }\n};\n\nexport const NamespacedClusterServiceVersionTableRow = withFallback<\n  ClusterServiceVersionTableRowProps\n>(({ activeNamespace, obj, rowKey, subscription, catalogSourceMissing, index, style }) => {\n  const { displayName, provider, version } = _.get(obj, 'spec');\n  const { 'olm.operatorNamespace': olmOperatorNamespace = '' } = obj.metadata?.annotations || {};\n  const [icon] = _.get(obj, 'spec.icon', []);\n  const route = resourceObjPath(obj, referenceFor(obj));\n  const uid = getUID(obj);\n  const internalObjects = getInternalObjects(obj);\n  const providedAPIs = providedAPIsFor(obj).filter(\n    (desc) => !isInternalObject(internalObjects, desc.name),\n  );\n\n  return (\n    <TableRow id={uid} trKey={rowKey} index={index} style={style}>\n      {/* Name */}\n      <TableData className={nameColumnClass}>\n        <Link\n          to={route}\n          className=\"co-clusterserviceversion-link\"\n          data-test-operator-row={displayName}\n        >\n          <ClusterServiceVersionLogo\n            icon={icon}\n            displayName={displayName}\n            version={version}\n            provider={provider}\n          />\n        </Link>\n      </TableData>\n\n      {/* Operator Namespace */}\n      {activeNamespace === ALL_NAMESPACES_KEY ? (\n        <TableData className={namespaceColumnClass}>\n          <ResourceLink kind=\"Namespace\" title={olmOperatorNamespace} name={olmOperatorNamespace} />\n        </TableData>\n      ) : null}\n\n      {/* Managed Namespaces */}\n      <TableData className={managedNamespacesColumnClass}>\n        <ManagedNamespaces obj={obj} />\n      </TableData>\n\n      {/* Status */}\n      <TableData className={statusColumnClass}>\n        <div className=\"co-clusterserviceversion-row__status\">\n          <ClusterServiceVersionStatus\n            catalogSourceMissing={catalogSourceMissing}\n            obj={obj}\n            subscription={subscription}\n          />\n        </div>\n      </TableData>\n\n      {/* Last Updated */}\n      <TableData className={lastUpdatedColumnClass}>\n        {obj.status == null ? '-' : <Timestamp timestamp={obj.status.lastUpdateTime} />}\n      </TableData>\n\n      {/* Provided APIs */}\n      <TableData className={providedAPIsColumnClass}>\n        {!_.isEmpty(providedAPIs)\n          ? _.take(providedAPIs, 4).map((desc) => (\n              <div key={referenceForProvidedAPI(desc)}>\n                <Link to={`${route}/${referenceForProvidedAPI(desc)}`} title={desc.name}>\n                  {desc.displayName || desc.kind}\n                </Link>\n              </div>\n            ))\n          : '-'}\n        {providedAPIs.length > 4 && (\n          <Link to={route} title={`View ${providedAPIsFor(obj).length - 4} more...`}>\n            {`View ${providedAPIsFor(obj).length - 4} more...`}\n          </Link>\n        )}\n      </TableData>\n\n      {/* Kebab */}\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab\n          resource={obj}\n          kind={referenceFor(obj)}\n          actions={menuActionsForCSV(obj, subscription)}\n        />\n      </TableData>\n    </TableRow>\n  );\n});\n\nexport const ClusterServiceVersionTableRow = connect(clusterServiceVersionStateToProps)(\n  NamespacedClusterServiceVersionTableRow,\n);\n\nconst NamespacedSubscriptionTableRow: React.FC<SubscriptionTableRowProps> = ({\n  activeNamespace,\n  catalogSourceMissing,\n  rowKey,\n  obj,\n  index,\n  style,\n}) => {\n  const csvName = _.get(obj, 'spec.name');\n  const menuActions = [Kebab.factory.Edit, () => uninstall(obj)];\n  const namespace = getNamespace(obj);\n  const route = resourceObjPath(obj, referenceForModel(SubscriptionModel));\n  const subscriptionState = _.get(obj, 'status.state', 'Unknown');\n  const uid = getUID(obj);\n  const getStatus = () => {\n    if (catalogSourceMissing) {\n      return (\n        <>\n          <WarningStatus title=\"Cannot update\" />\n          <span className=\"text-muted\">Catalog source was removed</span>\n        </>\n      );\n    }\n    return (\n      <span className=\"co-icon-and-text\">\n        <Status status={subscriptionState} />\n      </span>\n    );\n  };\n\n  return (\n    <TableRow id={uid} trKey={rowKey} index={index} style={style}>\n      {/* Name */}\n      <TableData className={nameColumnClass}>\n        <Link to={route}>\n          <ClusterServiceVersionLogo\n            icon={null}\n            displayName={csvName}\n            version={null}\n            provider={null}\n          />\n        </Link>\n      </TableData>\n\n      {/* Operator Namespace */}\n      {activeNamespace === ALL_NAMESPACES_KEY ? (\n        <TableData className={namespaceColumnClass}>\n          <ResourceLink kind=\"Namespace\" title={namespace} name={namespace} />\n        </TableData>\n      ) : null}\n\n      {/* Managed Namespaces */}\n      <TableData className={managedNamespacesColumnClass}>\n        <span className=\"text-muted\">None</span>\n      </TableData>\n\n      {/* Status */}\n      <TableData className={statusColumnClass}>{getStatus()}</TableData>\n\n      {/* Last Updated */}\n      <TableData className={lastUpdatedColumnClass}>\n        {obj.status == null ? '-' : <Timestamp timestamp={obj.status.lastUpdated} />}\n      </TableData>\n\n      {/* Provided APIs */}\n      <TableData className={providedAPIsColumnClass}>\n        <span className=\"text-muted\">None</span>\n      </TableData>\n\n      {/* Kebab */}\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab resource={obj} kind={referenceFor(obj)} actions={menuActions} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const SubscriptionTableRow = connect(clusterServiceVersionStateToProps)(\n  NamespacedSubscriptionTableRow,\n);\n\nconst InstalledOperatorTableRow: React.FC<InstalledOperatorTableRowProps> = ({\n  obj,\n  catalogSources = [],\n  subscriptions = [],\n  ...rest\n}) => {\n  const subscription = isCSV(obj)\n    ? subscriptionForCSV(subscriptions, obj as ClusterServiceVersionKind)\n    : (obj as SubscriptionKind);\n  // Only warn about missing catalog sources if the user was able to list them\n  // but exclude PackageServer as it does not have a subscription.\n  const catalogSourceMissing =\n    !_.isEmpty(catalogSources) &&\n    !catalogSourceForSubscription(catalogSources, subscription) &&\n    !isPackageServer(obj);\n\n  return isCSV(obj) ? (\n    <ClusterServiceVersionTableRow\n      {...rest}\n      catalogSourceMissing={catalogSourceMissing}\n      obj={obj as ClusterServiceVersionKind}\n      subscription={subscription}\n    />\n  ) : (\n    <SubscriptionTableRow\n      {...rest}\n      catalogSourceMissing={catalogSourceMissing}\n      obj={subscription as SubscriptionKind}\n    />\n  );\n};\n\nconst NoOperatorsMatchFilterMsg = () => <MsgBox title=\"No Operators Found\" />;\n\nexport const NamespacedClusterServiceVersionList: React.SFC<ClusterServiceVersionListProps> = ({\n  activeNamespace,\n  subscriptions,\n  catalogSources,\n  data,\n  ...rest\n}) => {\n  const noDataDetail = (\n    <>\n      <div>\n        No Operators are available\n        {activeNamespace !== ALL_NAMESPACES_KEY && (\n          <>\n            {' '}\n            for project{' '}\n            <span className=\"co-clusterserviceversion-empty__state__namespace\">\n              {activeNamespace}\n            </span>\n          </>\n        )}\n        .\n      </div>\n      <div>\n        Discover and install Operators from the <a href=\"/operatorhub\">OperatorHub</a>.\n      </div>\n    </>\n  );\n  const NoDataEmptyMsg = () => <MsgBox title=\"No Operators Found\" detail={noDataDetail} />;\n\n  const isCopiedCSV = (source, kind) => {\n    return (\n      referenceForModel(ClusterServiceVersionModel) === kind && source.status?.reason === 'Copied'\n    );\n  };\n\n  const removeCopiedCSVs = (operators: (ClusterServiceVersionKind | SubscriptionKind)[]) => {\n    return operators.filter((source) => {\n      const kind = referenceFor(source);\n      if (isSubscription(kind)) {\n        return true;\n      }\n      return !isCopiedCSV(source, kind);\n    });\n  };\n\n  const formatTargetNamespaces = (obj: ClusterServiceVersionKind | SubscriptionKind): string => {\n    if (obj.kind === 'Subscription') {\n      return 'None';\n    }\n\n    const namespaces = obj.metadata.annotations?.['olm.targetNamespaces']?.split(',') || [];\n\n    if (namespaces.length === 1 && namespaces[0] === '') {\n      return 'All Namespaces';\n    }\n\n    switch (namespaces.length) {\n      case 0:\n        return 'All Namespaces';\n      case 1:\n        return namespaces[0];\n      default:\n        return `${namespaces.length} Namespaces`;\n    }\n  };\n  const getOperatorNamespace = (\n    obj: ClusterServiceVersionKind | SubscriptionKind,\n  ): string | null => {\n    const olmOperatorNamespace = obj.metadata?.annotations?.['olm.operatorNamespace'];\n    return olmOperatorNamespace ?? getNamespace(obj);\n  };\n\n  return activeNamespace === ALL_NAMESPACES_KEY ? (\n    <Table\n      data={removeCopiedCSVs(data) as any[]}\n      {...rest}\n      aria-label=\"Installed Operators\"\n      Header={AllProjectsTableHeader}\n      Row={(rowArgs: RowFunctionArgs<ClusterServiceVersionKind | SubscriptionKind>) => (\n        <InstalledOperatorTableRow\n          obj={rowArgs.obj}\n          index={rowArgs.index}\n          rowKey={rowArgs.key}\n          style={rowArgs.style}\n          catalogSources={catalogSources.data}\n          subscriptions={subscriptions.data}\n        />\n      )}\n      EmptyMsg={NoOperatorsMatchFilterMsg}\n      NoDataEmptyMsg={NoDataEmptyMsg}\n      virtualize\n      customSorts={{\n        formatTargetNamespaces,\n        getOperatorNamespace,\n      }}\n    />\n  ) : (\n    <Table\n      data={data}\n      {...rest}\n      aria-label=\"Installed Operators\"\n      Header={SingleProjectTableHeader}\n      Row={(rowArgs: RowFunctionArgs<ClusterServiceVersionKind | SubscriptionKind>) => (\n        <InstalledOperatorTableRow\n          obj={rowArgs.obj}\n          index={rowArgs.index}\n          rowKey={rowArgs.key}\n          style={rowArgs.style}\n          catalogSources={catalogSources.data}\n          subscriptions={subscriptions.data}\n        />\n      )}\n      EmptyMsg={NoOperatorsMatchFilterMsg}\n      NoDataEmptyMsg={NoDataEmptyMsg}\n      virtualize\n      customSorts={{\n        formatTargetNamespaces,\n        getOperatorNamespace,\n      }}\n    />\n  );\n};\n\nexport const ClusterServiceVersionList = connect(clusterServiceVersionStateToProps)(\n  NamespacedClusterServiceVersionList,\n);\n\nexport const ClusterServiceVersionsPage: React.FC<ClusterServiceVersionsPageProps> = (props) => {\n  const title = 'Installed Operators';\n  const helpText = (\n    <p className=\"co-help-text\">\n      Installed Operators are represented by Cluster Service Versions within this namespace. For\n      more information, see the{' '}\n      <ExternalLink\n        href=\"https://github.com/operator-framework/operator-lifecycle-manager/blob/master/doc/design/architecture.md\"\n        text=\"Operator Lifecycle Manager documentation\"\n      />\n      . Or create an Operator and Cluster Service Version using the{' '}\n      <ExternalLink href=\"https://github.com/operator-framework/operator-sdk\" text=\"Operator SDK\" />\n      .\n    </p>\n  );\n\n  const flatten = ({ clusterServiceVersions, subscriptions }) =>\n    [\n      ..._.get(clusterServiceVersions, 'data', []),\n      ..._.get(subscriptions, 'data', []).filter(\n        (sub) =>\n          ['', sub.metadata.namespace].includes(props.namespace) &&\n          _.isNil(_.get(sub, 'status.installedCSV')),\n      ),\n    ].filter(\n      (obj, i, all) =>\n        isSubscription(obj) ||\n        _.isUndefined(\n          all.find(({ metadata }) =>\n            [_.get(obj, 'status.currentCSV'), _.get(obj, 'spec.startingCSV')].includes(\n              metadata.name,\n            ),\n          ),\n        ),\n    );\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <MultiListPage\n        {...props}\n        resources={[\n          {\n            kind: referenceForModel(ClusterServiceVersionModel),\n            namespace: props.namespace,\n            prop: 'clusterServiceVersions',\n          },\n          {\n            kind: referenceForModel(SubscriptionModel),\n            prop: 'subscriptions',\n            optional: true,\n          },\n          {\n            kind: referenceForModel(CatalogSourceModel),\n            prop: 'catalogSources',\n            optional: true,\n          },\n        ]}\n        title={title}\n        flatten={flatten}\n        namespace={props.namespace}\n        ListComponent={ClusterServiceVersionList}\n        helpText={helpText}\n      />\n    </>\n  );\n};\n\nexport const MarkdownView = (props: {\n  content: string;\n  styles?: string;\n  exactHeight?: boolean;\n}) => {\n  return (\n    <AsyncComponent\n      loader={() =>\n        import('@console/internal/components/markdown-view').then((c) => c.SyncMarkdownView)\n      }\n      {...props}\n    />\n  );\n};\n\nexport const CRDCard: React.SFC<CRDCardProps> = (props) => {\n  const { csv, crd, canCreate } = props;\n  const reference = referenceForProvidedAPI(crd);\n  const model = modelFor(reference);\n  const createRoute = () =>\n    `/k8s/ns/${csv.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csv.metadata.name}/${reference}/~new`;\n  return (\n    <Card>\n      <CardHeader>\n        <ResourceLink\n          kind={referenceForProvidedAPI(crd)}\n          title={crd.name}\n          linkTo={false}\n          displayName={crd.displayName || crd.kind}\n        />\n      </CardHeader>\n      <CardBody>\n        <p>{crd.description}</p>\n      </CardBody>\n      {canCreate && (\n        <RequireCreatePermission model={model} namespace={csv.metadata.namespace}>\n          <CardFooter>\n            <Link to={createRoute()}>\n              <AddCircleOIcon className=\"co-icon-space-r\" />\n              Create Instance\n            </Link>\n          </CardFooter>\n        </RequireCreatePermission>\n      )}\n    </Card>\n  );\n};\n\nconst crdCardRowStateToProps = ({ k8s }, { crdDescs }) => {\n  const models: K8sKind[] = _.compact(\n    crdDescs.map((desc) => k8s.getIn(['RESOURCES', 'models', referenceForProvidedAPI(desc)])),\n  );\n  return {\n    crdDescs: crdDescs.filter((desc) =>\n      models.find((m) => referenceForModel(m) === referenceForProvidedAPI(desc)),\n    ),\n    createable: models\n      .filter((m) => (m.verbs || []).includes('create'))\n      .map((m) => referenceForModel(m)),\n  };\n};\n\nexport const CRDCardRow = connect(crdCardRowStateToProps)((props: CRDCardRowProps) => {\n  const internalObjects = getInternalObjects(props.csv);\n  const crds = props.crdDescs?.filter(({ name }) => !isInternalObject(internalObjects, name));\n  return (\n    <div className=\"co-crd-card-row\">\n      {_.isEmpty(crds) ? (\n        <span className=\"text-muted\">No Kubernetes APIs are being provided by this Operator.</span>\n      ) : (\n        crds.map((crd) => (\n          <CRDCard\n            key={referenceForProvidedAPI(crd)}\n            crd={crd}\n            csv={props.csv}\n            canCreate={props.createable.includes(referenceForProvidedAPI(crd))}\n          />\n        ))\n      )}\n    </div>\n  );\n});\n\nexport const ClusterServiceVersionDetails: React.SFC<ClusterServiceVersionDetailsProps> = (\n  props,\n) => {\n  const { spec, metadata, status } = props.obj;\n  const {\n    'marketplace.openshift.io/support-workflow': marketplaceSupportWorkflow,\n    'olm.targetNamespaces': olmTargetNamespaces = '',\n  } = metadata.annotations || {};\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n\n      <div className=\"co-m-pane__body\">\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-9\">\n              {status && status.phase === ClusterServiceVersionPhase.CSVPhaseFailed && (\n                <Alert\n                  isInline\n                  className=\"co-alert\"\n                  variant=\"danger\"\n                  title={`${status.phase}: ${status.message}`}\n                />\n              )}\n              <SectionHeading text=\"Provided APIs\" />\n              <CRDCardRow csv={props.obj} crdDescs={providedAPIsFor(props.obj)} />\n              <SectionHeading text=\"Description\" />\n              <MarkdownView content={spec.description || 'Not available'} />\n            </div>\n            <div className=\"col-sm-3\">\n              <dl className=\"co-clusterserviceversion-details__field\">\n                <dt>Provider</dt>\n                <dd>\n                  {spec.provider && spec.provider.name ? spec.provider.name : 'Not available'}\n                </dd>\n                {marketplaceSupportWorkflow && (\n                  <>\n                    <dt>Support</dt>\n                    <dd>\n                      <ExternalLink href={marketplaceSupportWorkflow} text=\"Get support\" />\n                    </dd>\n                  </>\n                )}\n                <dt>Created At</dt>\n                <dd>\n                  <Timestamp timestamp={metadata.creationTimestamp} />\n                </dd>\n              </dl>\n              <dl className=\"co-clusterserviceversion-details__field\">\n                <dt>Links</dt>\n                {spec.links && spec.links.length > 0 ? (\n                  spec.links.map((link) => (\n                    <dd key={link.url} style={{ display: 'flex', flexDirection: 'column' }}>\n                      {link.name}{' '}\n                      <ExternalLink\n                        href={link.url}\n                        text={link.url || '-'}\n                        additionalClassName=\"co-break-all\"\n                      />\n                    </dd>\n                  ))\n                ) : (\n                  <dd>Not available</dd>\n                )}\n              </dl>\n              <dl className=\"co-clusterserviceversion-details__field\">\n                <dt>Maintainers</dt>\n                {spec.maintainers && spec.maintainers.length > 0 ? (\n                  spec.maintainers.map((maintainer) => (\n                    <dd key={maintainer.email} style={{ display: 'flex', flexDirection: 'column' }}>\n                      {maintainer.name}{' '}\n                      <a href={`mailto:${maintainer.email}`} className=\"co-break-all\">\n                        {maintainer.email || '-'}\n                      </a>\n                    </dd>\n                  ))\n                ) : (\n                  <dd>Not available</dd>\n                )}\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"ClusterServiceVersion Details\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={props.obj}>\n                <dt>\n                  <Popover\n                    headerContent={<div>Managed Namespaces</div>}\n                    bodyContent={<div>Operands in this Namespace are managed by the Operator.</div>}\n                    maxWidth=\"30rem\"\n                  >\n                    <Button variant=\"plain\" className=\"co-m-pane__details-popover-button\">\n                      Managed Namespaces\n                    </Button>\n                  </Popover>\n                </dt>\n                <dd>\n                  {olmTargetNamespaces === '' ? (\n                    'All Namespaces'\n                  ) : (\n                    <ResourceLink\n                      kind=\"Namespace\"\n                      name={props.obj.metadata.namespace}\n                      title={props.obj.metadata.uid}\n                    />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <dt>Status</dt>\n              <dd>\n                <Status status={status ? status.phase : 'Unknown'} />\n              </dd>\n              <dt>Status Reason</dt>\n              <dd>{status ? status.message : 'Unknown'}</dd>\n              <dt>Operator Deployments</dt>\n              {spec.install.spec.deployments.map(({ name }) => (\n                <dd key={name}>\n                  <ResourceLink\n                    name={name}\n                    kind=\"Deployment\"\n                    namespace={operatorNamespaceFor(props.obj)}\n                  />\n                </dd>\n              ))}\n              {_.get(spec.install.spec, 'permissions') && (\n                <>\n                  <dt>Operator Service Accounts</dt>\n                  {spec.install.spec.permissions.map(({ serviceAccountName }) => (\n                    <dd key={serviceAccountName}>\n                      <ResourceLink\n                        name={serviceAccountName}\n                        kind=\"ServiceAccount\"\n                        namespace={operatorNamespaceFor(props.obj)}\n                      />\n                    </dd>\n                  ))}\n                </>\n              )}\n              <dt>Operator Group</dt>\n              <dd>\n                {operatorGroupFor(props.obj) ? (\n                  <ResourceLink\n                    name={operatorGroupFor(props.obj)}\n                    namespace={operatorNamespaceFor(props.obj)}\n                    kind={referenceForModel(OperatorGroupModel)}\n                  />\n                ) : (\n                  '-'\n                )}\n              </dd>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions\n          conditions={_.get(status, 'conditions', []).map((c) => ({\n            ...c,\n            type: c.phase,\n            status: 'True',\n          }))}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const CSVSubscription: React.FC<CSVSubscriptionProps> = ({\n  obj,\n  subscriptions = [],\n  ...rest\n}) => {\n  const EmptyMsg = () => (\n    <MsgBox title=\"No Operator Subscription\" detail=\"This Operator will not receive updates.\" />\n  );\n\n  const subscription = React.useMemo(() => subscriptionForCSV(subscriptions, obj), [\n    obj,\n    subscriptions,\n  ]);\n\n  return (\n    <StatusBox EmptyMsg={EmptyMsg} loaded data={subscription}>\n      <SubscriptionDetails {...rest} obj={subscription} clusterServiceVersions={[obj]} />\n    </StatusBox>\n  );\n};\n\nexport const ClusterServiceVersionsDetailsPage: React.FC<ClusterServiceVersionsDetailsPageProps> = (\n  props,\n) => {\n  const instancePagesFor = (obj: ClusterServiceVersionKind) => {\n    const internalObjects = getInternalObjects(obj);\n    const allInstancesPage: Page = {\n      href: 'instances',\n      name: 'All Instances',\n      component: ProvidedAPIsPage,\n    };\n\n    return (providedAPIsFor(obj).length > 1 ? [allInstancesPage] : ([] as Page[])).concat(\n      providedAPIsFor(obj).reduce(\n        (acc, desc: CRDDescription) =>\n          !isInternalObject(internalObjects, desc.name)\n            ? [\n                ...acc,\n                {\n                  href: referenceForProvidedAPI(desc),\n                  name: ['Details', 'YAML', 'Subscription', 'Events'].includes(desc.displayName)\n                    ? `${desc.displayName} Operand`\n                    : desc.displayName || desc.kind,\n                  component: ProvidedAPIPage,\n                  pageData: {\n                    csv: obj,\n                    kind: referenceForProvidedAPI(desc),\n                    namespace: obj.metadata.namespace,\n                  },\n                },\n              ]\n            : acc,\n        [],\n      ),\n    );\n  };\n\n  type ExtraResources = { subscriptions: SubscriptionKind[] };\n  const menuActions = (\n    model,\n    obj: ClusterServiceVersionKind,\n    { subscriptions }: ExtraResources,\n  ) => {\n    const subscription = subscriptionForCSV(subscriptions, obj);\n    return [\n      ...(_.isEmpty(subscription)\n        ? [Kebab.factory.Delete(model, obj)]\n        : [editSubscription(subscription), uninstall(subscription, obj)]),\n    ];\n  };\n\n  const canListSubscriptions = useAccessReview({\n    group: SubscriptionModel.apiGroup,\n    resource: SubscriptionModel.plural,\n    verb: 'list',\n  });\n\n  const pagesFor = React.useCallback(\n    (obj: ClusterServiceVersionKind) =>\n      _.compact([\n        navFactory.details(ClusterServiceVersionDetails),\n        navFactory.editYaml(),\n        canListSubscriptions\n          ? { href: 'subscription', name: 'Subscription', component: CSVSubscription }\n          : null,\n        navFactory.events(ResourceEventStream),\n        ...instancePagesFor(obj),\n      ]),\n    [canListSubscriptions],\n  );\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => [\n        {\n          name: 'Installed Operators',\n          path: `/k8s/ns/${props.match.params.ns}/${props.match.params.plural}`,\n        },\n        { name: 'Operator Details', path: props.match.url },\n      ]}\n      resources={[\n        { kind: referenceForModel(SubscriptionModel), isList: true, prop: 'subscriptions' },\n        { kind: referenceForModel(PackageManifestModel), isList: true, prop: 'packageManifests' },\n        { kind: referenceForModel(CatalogSourceModel), isList: true, prop: 'catalogSources' },\n        { kind: referenceForModel(InstallPlanModel), isList: true, prop: 'installPlans' },\n      ]}\n      icon={({ obj }) => (\n        <ClusterServiceVersionLogo\n          displayName={_.get(obj.spec, 'displayName')}\n          icon={_.get(obj.spec, 'icon[0]')}\n          provider={_.get(obj.spec, 'provider')}\n          version={_.get(obj.spec, 'version')}\n        />\n      )}\n      namespace={props.match.params.ns}\n      kind={referenceForModel(ClusterServiceVersionModel)}\n      name={props.match.params.name}\n      pagesFor={pagesFor}\n      menuActions={menuActions}\n    />\n  );\n};\n\ntype ClusterServiceVersionStatusProps = {\n  catalogSourceMissing: boolean;\n  obj: ClusterServiceVersionKind;\n  subscription: SubscriptionKind;\n};\n\nexport type ClusterServiceVersionsPageProps = {\n  kind: string;\n  namespace: string;\n  resourceDescriptions: CRDDescription[];\n};\n\nexport type ClusterServiceVersionListProps = {\n  loaded: boolean;\n  loadError?: string;\n  data: ClusterServiceVersionKind[];\n  subscriptions: FirehoseResult<SubscriptionKind[]>;\n  catalogSources: FirehoseResult<CatalogSourceKind[]>;\n  activeNamespace?: string;\n};\n\nexport type CRDCardProps = {\n  crd: CRDDescription | APIServiceDefinition;\n  csv: ClusterServiceVersionKind;\n  canCreate: boolean;\n};\n\nexport type CRDCardRowProps = {\n  crdDescs: (CRDDescription | APIServiceDefinition)[];\n  csv: ClusterServiceVersionKind;\n  createable: GroupVersionKind[];\n};\n\nexport type CRDCardRowState = {\n  expand: boolean;\n};\n\nexport type ClusterServiceVersionsDetailsPageProps = {\n  match: RouterMatch<any>;\n};\n\nexport type ClusterServiceVersionDetailsProps = {\n  obj: ClusterServiceVersionKind;\n};\n\ntype InstalledOperatorTableRowProps = {\n  obj: ClusterServiceVersionKind | SubscriptionKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  catalogSources: CatalogSourceKind[];\n  subscriptions: SubscriptionKind[];\n};\n\nexport type ClusterServiceVersionTableRowProps = {\n  obj: ClusterServiceVersionKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  catalogSourceMissing: boolean;\n  subscription: SubscriptionKind;\n  activeNamespace?: string;\n};\n\ntype SubscriptionTableRowProps = {\n  obj: SubscriptionKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  catalogSourceMissing: boolean;\n  activeNamespace?: string;\n};\n\ntype ManagedNamespacesProps = {\n  obj: ClusterServiceVersionKind;\n};\n\nexport type CSVSubscriptionProps = {\n  catalogSources: CatalogSourceKind[];\n  installPlans: InstallPlanKind[];\n  obj: ClusterServiceVersionKind;\n  packageManifests: PackageManifestKind[];\n  subscriptions: SubscriptionKind[];\n};\n\ntype ClusterServiceVersionStateProps = {\n  activeNamespace?: string;\n};\n\ntype Header = {\n  title: string;\n  sortField?: string;\n  sortFunc?: string;\n  transforms?: any;\n  props: { className: string };\n};\n\n// TODO(alecmerdler): Find Webpack loader/plugin to add `displayName` to React components automagically\nClusterServiceVersionList.displayName = 'ClusterServiceVersionList';\nNamespacedClusterServiceVersionList.displayName = 'ClusterServiceVersionList';\nClusterServiceVersionsPage.displayName = 'ClusterServiceVersionsPage';\nClusterServiceVersionTableRow.displayName = 'ClusterServiceVersionTableRow';\nSingleProjectTableHeader.displayName = 'SingleProjectClusterServiceVersionTableHeader';\nAllProjectsTableHeader.displayName = 'AllProjectsClusterServiceVersionTableHeader';\nCRDCard.displayName = 'CRDCard';\nClusterServiceVersionsDetailsPage.displayName = 'ClusterServiceVersionsDetailsPage';\nClusterServiceVersionDetails.displayName = 'ClusterServiceVersionDetails';\nCSVSubscription.displayName = 'CSVSubscription';\n"]}]}