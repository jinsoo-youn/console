{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/section.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/section.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\nimport { NavExpandable } from '@patternfly/react-core';\nimport { withExtensions, isNavItem, isPerspective, } from '@console/plugin-sdk';\nimport { featureReducerName, flagPending } from '../../reducers/features';\nimport { stripBasePath } from '../utils';\nimport { stripNS, createLink } from './items';\nimport { getActivePerspective } from '../../reducers/ui';\nconst navSectionStateToProps = (state, { required }) => {\n    const flags = state[featureReducerName];\n    const canRender = required ? flags.get(required) : true;\n    return {\n        flags,\n        canRender,\n        activeNamespace: state.UI.get('activeNamespace'),\n        location: state.UI.get('location'),\n        perspective: getActivePerspective(state),\n    };\n};\nconst mergePluginChild = (Children, pluginChild, mergeBefore) => {\n    const index = Children.findIndex((c) => c.props.name === mergeBefore);\n    if (index >= 0) {\n        Children.splice(index, 0, pluginChild);\n    }\n    else {\n        Children.push(pluginChild);\n    }\n};\nexport const NavSection = connect(navSectionStateToProps)(withExtensions({\n    navItemExtensions: isNavItem,\n    perspectiveExtensions: isPerspective,\n})(class NavSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = (e, expandState) => {\n            this.setState({ isOpen: expandState });\n        };\n        this.getNavItemExtensions = (perspective, section) => {\n            const { navItemExtensions /*, perspectiveExtensions*/ } = this.props;\n            // const defaultPerspective = _.find(perspectiveExtensions, (p) => p.properties.default);\n            // const isDefaultPerspective =\n            //   defaultPerspective && perspective === defaultPerspective.properties.id;\n            return navItemExtensions.filter((item) => \n            // check if the item is contributed to the current perspective,\n            // or if no perspective specified, are we in the default perspective\n            // (item.properties.perspective === perspective ||\n            //   (!item.properties.perspective && isDefaultPerspective)) &&\n            item.properties.section === section);\n        };\n        this.mapChild = (c) => {\n            if (!c) {\n                return null;\n            }\n            const { activeChild } = this.state;\n            const { flags, activeNamespace } = this.props;\n            const { name, required, disallowed, id } = c.props;\n            const requiredArray = required ? _.castArray(required) : [];\n            const requirementMissing = _.some(requiredArray, (flag) => flag && (flagPending(flags.get(flag)) || !flags.get(flag)));\n            if (requirementMissing) {\n                return null;\n            }\n            if (disallowed && (flagPending(flags.get(disallowed)) || flags.get(disallowed))) {\n                return null;\n            }\n            return React.cloneElement(c, {\n                key: name,\n                isActive: `${id}-${name}` === activeChild,\n                activeNamespace,\n                flags,\n            });\n        };\n        this.state = { isOpen: false, activeChild: null };\n        const activeChild = this.getActiveChild();\n        if (activeChild) {\n            this.state.activeChild = activeChild;\n            this.state.isOpen = true;\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const { isOpen } = this.state;\n        if (isOpen !== nextProps.isOpen) {\n            return true;\n        }\n        if (!isOpen && !nextState.isOpen) {\n            return false;\n        }\n        return nextProps.location !== this.props.location || nextProps.flags !== this.props.flags;\n    }\n    getActiveChild() {\n        const { activeNamespace, location } = this.props;\n        const children = this.getChildren();\n        if (!children) {\n            return stripBasePath(location).startsWith(this.props.activePath);\n        }\n        const resourcePath = location ? stripNS(location) : '';\n        //current bug? - we should be checking if children is a single item or .filter is undefined\n        return children\n            .filter((c) => {\n            if (!c) {\n                return false;\n            }\n            if (c.props.startsWith) {\n                const active = c.type.startsWith(resourcePath, c.props.startsWith);\n                if (active || !c.props.activePath) {\n                    return active;\n                }\n            }\n            return c.type.isActive && c.type.isActive(c.props, resourcePath, activeNamespace);\n        })\n            .map((c) => `${c.props.id}-${c.props.name}`)[0];\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const activeChild = this.getActiveChild();\n        if (prevState.activeChild !== activeChild) {\n            const state = { activeChild };\n            if (activeChild && !prevState.activeChild) {\n                state.isOpen = true;\n            }\n            this.setState(state);\n        }\n    }\n    getChildren() {\n        const { title, children, perspective } = this.props;\n        const Children = React.Children.map(children, this.mapChild) || [];\n        this.getNavItemExtensions(perspective, title).forEach((item) => {\n            const pluginChild = this.mapChild(createLink(item));\n            if (pluginChild) {\n                mergePluginChild(Children, pluginChild, item.properties.mergeBefore);\n            }\n        });\n        return Children;\n    }\n    render() {\n        if (!this.props.canRender) {\n            return null;\n        }\n        const { title } = this.props;\n        const { isOpen, activeChild } = this.state;\n        const isActive = !!activeChild;\n        const children = this.getChildren();\n        return children.length > 0 ? (React.createElement(NavExpandable, { title: title, isActive: isActive, isExpanded: isOpen, onExpand: this.toggle }, children)) : null;\n    }\n}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/section.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/section.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAEvD,OAAO,EACL,cAAc,EAGd,SAAS,EACT,aAAa,GACd,MAAM,qBAAqB,CAAC;AAE7B,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAgB,MAAM,yBAAyB,CAAC;AACxF,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAC;AAEzD,MAAM,sBAAsB,GAAG,CAC7B,KAAgB,EAChB,EAAE,QAAQ,EAAmB,EACP,EAAE;IACxB,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACxC,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAExD,OAAO;QACL,KAAK;QACL,SAAS;QACT,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAChD,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC;QAClC,WAAW,EAAE,oBAAoB,CAAC,KAAK,CAAC;KACzC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CACvB,QAA8B,EAC9B,WAA+B,EAC/B,WAAoB,EACpB,EAAE;IACF,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;IACtE,IAAI,KAAK,IAAI,CAAC,EAAE;QACd,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;KACxC;SAAM;QACL,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5B;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,OAAO,CAAC,sBAAsB,CAAC,CACvD,cAAc,CAA2B;IACvC,iBAAiB,EAAE,SAAS;IAC5B,qBAAqB,EAAE,aAAa;CACrC,CAAC,CACA,MAAM,UAAW,SAAQ,KAAK,CAAC,SAAiC;IAG9D,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QA+Df,WAAM,GAAG,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,yBAAoB,GAAG,CAAC,WAAmB,EAAE,OAAe,EAAE,EAAE;YAC9D,MAAM,EAAE,iBAAiB,CAAC,2BAA2B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAErE,yFAAyF;YACzF,+BAA+B;YAC/B,4EAA4E;YAE5E,OAAO,iBAAiB,CAAC,MAAM,CAC7B,CAAC,IAAI,EAAE,EAAE;YACP,+DAA+D;YAC/D,oEAAoE;YACpE,kDAAkD;YAClD,+DAA+D;YAC/D,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,OAAO,CACtC,CAAC;QACJ,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,CAAqB,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,EAAE;gBACN,OAAO,IAAI,CAAC;aACb;YAED,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9C,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;YAEnD,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5D,MAAM,kBAAkB,GAAG,CAAC,CAAC,IAAI,CAC/B,aAAa,EACb,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACrE,CAAC;YACF,IAAI,kBAAkB,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;YACD,IAAI,UAAU,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE;gBAC/E,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE;gBAC3B,GAAG,EAAE,IAAI;gBACT,QAAQ,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,KAAK,WAAW;gBACzC,eAAe;gBACf,KAAK;aACN,CAAC,CAAC;QACL,CAAC,CAAC;QA9GA,IAAI,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QAElD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IAED,qBAAqB,CAAC,SAAS,EAAE,SAAS;QACxC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,MAAM,KAAK,SAAS,CAAC,MAAM,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;QAED,OAAO,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IAC5F,CAAC;IAED,cAAc;QACZ,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEpC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAClE;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEvD,2FAA2F;QAC3F,OAAQ,QAAkB;aACvB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YACZ,IAAI,CAAC,CAAC,EAAE;gBACN,OAAO,KAAK,CAAC;aACd;YACD,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE;gBACtB,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACnE,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE;oBACjC,OAAO,MAAM,CAAC;iBACf;aACF;YACD,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACpF,CAAC,CAAC;aACD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB,CAAC,SAAS,EAAE,SAAS;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAE1C,IAAI,SAAS,CAAC,WAAW,KAAK,WAAW,EAAE;YACzC,MAAM,KAAK,GAA6B,EAAE,WAAW,EAAE,CAAC;YACxD,IAAI,WAAW,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBACzC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;aACrB;YACD,IAAI,CAAC,QAAQ,CAAC,KAAwB,CAAC,CAAC;SACzC;IACH,CAAC;IAoDD,WAAW;QACT,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAEnE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YACpD,IAAI,WAAW,EAAE;gBACf,gBAAgB,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3C,MAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEpC,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC3B,oBAAC,aAAa,IACZ,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,MAAM,EAClB,QAAQ,EAAE,IAAI,CAAC,MAAM,IAEpB,QAAQ,CACK,CACjB,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;CACF,CACF,CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\nimport { NavExpandable } from '@patternfly/react-core';\n\nimport {\n  withExtensions,\n  NavItem,\n  Perspective,\n  isNavItem,\n  isPerspective,\n} from '@console/plugin-sdk';\nimport { RootState } from '../../redux';\nimport { featureReducerName, flagPending, FeatureState } from '../../reducers/features';\nimport { stripBasePath } from '../utils';\nimport { stripNS, createLink } from './items';\nimport { getActivePerspective } from '../../reducers/ui';\n\nconst navSectionStateToProps = (\n  state: RootState,\n  { required }: NavSectionProps,\n): NavSectionStateProps => {\n  const flags = state[featureReducerName];\n  const canRender = required ? flags.get(required) : true;\n\n  return {\n    flags,\n    canRender,\n    activeNamespace: state.UI.get('activeNamespace'),\n    location: state.UI.get('location'),\n    perspective: getActivePerspective(state),\n  };\n};\n\nconst mergePluginChild = (\n  Children: React.ReactElement[],\n  pluginChild: React.ReactElement,\n  mergeBefore?: string,\n) => {\n  const index = Children.findIndex((c) => c.props.name === mergeBefore);\n  if (index >= 0) {\n    Children.splice(index, 0, pluginChild);\n  } else {\n    Children.push(pluginChild);\n  }\n};\n\nexport const NavSection = connect(navSectionStateToProps)(\n  withExtensions<NavSectionExtensionProps>({\n    navItemExtensions: isNavItem,\n    perspectiveExtensions: isPerspective,\n  })(\n    class NavSection extends React.Component<Props, NavSectionState> {\n      public state: NavSectionState;\n\n      constructor(props) {\n        super(props);\n        this.state = { isOpen: false, activeChild: null };\n\n        const activeChild = this.getActiveChild();\n        if (activeChild) {\n          this.state.activeChild = activeChild;\n          this.state.isOpen = true;\n        }\n      }\n\n      shouldComponentUpdate(nextProps, nextState) {\n        const { isOpen } = this.state;\n\n        if (isOpen !== nextProps.isOpen) {\n          return true;\n        }\n\n        if (!isOpen && !nextState.isOpen) {\n          return false;\n        }\n\n        return nextProps.location !== this.props.location || nextProps.flags !== this.props.flags;\n      }\n\n      getActiveChild() {\n        const { activeNamespace, location } = this.props;\n        const children = this.getChildren();\n\n        if (!children) {\n          return stripBasePath(location).startsWith(this.props.activePath);\n        }\n\n        const resourcePath = location ? stripNS(location) : '';\n\n        //current bug? - we should be checking if children is a single item or .filter is undefined\n        return (children as any[])\n          .filter((c) => {\n            if (!c) {\n              return false;\n            }\n            if (c.props.startsWith) {\n              const active = c.type.startsWith(resourcePath, c.props.startsWith);\n              if (active || !c.props.activePath) {\n                return active;\n              }\n            }\n            return c.type.isActive && c.type.isActive(c.props, resourcePath, activeNamespace);\n          })\n          .map((c) => `${c.props.id}-${c.props.name}`)[0];\n      }\n\n      componentDidUpdate(prevProps, prevState) {\n        const activeChild = this.getActiveChild();\n\n        if (prevState.activeChild !== activeChild) {\n          const state: Partial<NavSectionState> = { activeChild };\n          if (activeChild && !prevState.activeChild) {\n            state.isOpen = true;\n          }\n          this.setState(state as NavSectionState);\n        }\n      }\n\n      toggle = (e, expandState) => {\n        this.setState({ isOpen: expandState });\n      };\n\n      getNavItemExtensions = (perspective: string, section: string) => {\n        const { navItemExtensions /*, perspectiveExtensions*/ } = this.props;\n\n        // const defaultPerspective = _.find(perspectiveExtensions, (p) => p.properties.default);\n        // const isDefaultPerspective =\n        //   defaultPerspective && perspective === defaultPerspective.properties.id;\n\n        return navItemExtensions.filter(\n          (item) =>\n            // check if the item is contributed to the current perspective,\n            // or if no perspective specified, are we in the default perspective\n            // (item.properties.perspective === perspective ||\n            //   (!item.properties.perspective && isDefaultPerspective)) &&\n            item.properties.section === section,\n        );\n      };\n\n      mapChild = (c: React.ReactElement) => {\n        if (!c) {\n          return null;\n        }\n\n        const { activeChild } = this.state;\n        const { flags, activeNamespace } = this.props;\n        const { name, required, disallowed, id } = c.props;\n\n        const requiredArray = required ? _.castArray(required) : [];\n        const requirementMissing = _.some(\n          requiredArray,\n          (flag) => flag && (flagPending(flags.get(flag)) || !flags.get(flag)),\n        );\n        if (requirementMissing) {\n          return null;\n        }\n        if (disallowed && (flagPending(flags.get(disallowed)) || flags.get(disallowed))) {\n          return null;\n        }\n\n        return React.cloneElement(c, {\n          key: name,\n          isActive: `${id}-${name}` === activeChild,\n          activeNamespace,\n          flags,\n        });\n      };\n\n      getChildren() {\n        const { title, children, perspective } = this.props;\n        const Children = React.Children.map(children, this.mapChild) || [];\n\n        this.getNavItemExtensions(perspective, title).forEach((item) => {\n          const pluginChild = this.mapChild(createLink(item));\n          if (pluginChild) {\n            mergePluginChild(Children, pluginChild, item.properties.mergeBefore);\n          }\n        });\n\n        return Children;\n      }\n\n      render() {\n        if (!this.props.canRender) {\n          return null;\n        }\n\n        const { title } = this.props;\n        const { isOpen, activeChild } = this.state;\n        const isActive = !!activeChild;\n        const children = this.getChildren();\n\n        return children.length > 0 ? (\n          <NavExpandable\n            title={title}\n            isActive={isActive}\n            isExpanded={isOpen}\n            onExpand={this.toggle}\n          >\n            {children}\n          </NavExpandable>\n        ) : null;\n      }\n    },\n  ),\n);\n\nexport type NavSectionTitle =\n  | 'Administration'\n  | 'Builds'\n  | 'Compute'\n  | 'Home'\n  | 'Monitoring'\n  | 'Networking'\n  | 'Operators'\n  | 'Service Catalog'\n  | 'Storage'\n  | 'Workloads';\n\ntype NavSectionStateProps = {\n  flags?: FeatureState;\n  canRender?: boolean;\n  activeNamespace?: string;\n  activePath?: string;\n  location?: string;\n  perspective: string;\n};\n\ntype NavSectionExtensionProps = {\n  navItemExtensions: NavItem[];\n  perspectiveExtensions: Perspective[];\n};\n\ntype NavSectionProps = {\n  title: NavSectionTitle | string;\n  required?: string;\n};\n\ntype Props = NavSectionProps & NavSectionStateProps & NavSectionExtensionProps;\n\ntype NavSectionState = {\n  isOpen: boolean;\n  activeChild: React.ReactNode;\n};\n"]}]}