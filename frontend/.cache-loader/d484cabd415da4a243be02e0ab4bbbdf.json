{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils.ts","mtime":1615298458650},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport { useEffect } from 'react';\nimport { coFetch } from '@console/internal/co-fetch';\nimport { useSafetyFirst } from '@console/internal/components/safety-first';\nimport { kindToAbbr, referenceForModel } from '@console/internal/module/k8s';\nimport { chart_color_red_300 as knativeEventingColor } from '@patternfly/react-tokens';\nimport { EventSourceContainerModel, EventSourceApiServerModel, EventSourceSinkBindingModel, EventSourceCamelModel, EventSourcePingModel, EventSourceKafkaModel, EventSourceCronJobModel, } from '../models';\nconst eventSourceData = {\n    loaded: false,\n    eventSourceModels: [],\n};\n// To order sources with known followed by CamelSource and everything else\nexport const orderedEventSourceModelData = (allModels) => {\n    const sortModels = _.orderBy(allModels, ['kind'], ['asc']);\n    const knownSourcesList = [\n        EventSourceApiServerModel.kind,\n        EventSourceContainerModel.kind,\n        EventSourceCronJobModel.kind,\n        EventSourceKafkaModel.kind,\n        EventSourcePingModel.kind,\n        EventSourceSinkBindingModel.kind,\n    ];\n    const knownSourcesCrd = _.filter(sortModels, (model) => knownSourcesList.includes(model.kind));\n    const camelSourcesCrd = _.filter(sortModels, (model) => (model === null || model === void 0 ? void 0 : model.kind) === EventSourceCamelModel.kind);\n    const dynamicSourcesCrd = _.filter(sortModels, (model) => !knownSourcesList.includes(model.kind) && model.kind !== EventSourceCamelModel.kind);\n    return [...knownSourcesCrd, ...camelSourcesCrd, ...dynamicSourcesCrd];\n};\nexport const fetchEventSourcesCrd = () => __awaiter(void 0, void 0, void 0, function* () {\n    const url = 'api/console/knative-event-sources';\n    try {\n        const res = yield coFetch(url);\n        const resolvedRes = yield res.json();\n        const allModels = _.reduce(resolvedRes === null || resolvedRes === void 0 ? void 0 : resolvedRes.items, (accumulator, crd) => {\n            const { metadata: { labels }, spec: { group, versions, names: { kind, plural, singular }, }, } = crd;\n            const { name: version } = versions === null || versions === void 0 ? void 0 : versions.find((ver) => ver.served && ver.storage);\n            if (version) {\n                const sourceModel = {\n                    apiGroup: group,\n                    apiVersion: version,\n                    kind,\n                    plural,\n                    id: singular,\n                    label: singular,\n                    labelPlural: plural,\n                    abbr: kindToAbbr(kind),\n                    namespaced: true,\n                    crd: true,\n                    color: knativeEventingColor.value,\n                };\n                const sourceIndex = _.findIndex(accumulator, ['kind', kind]);\n                // added check as some sources has multiple entries with deprecated APIgroups\n                if (sourceIndex === -1) {\n                    accumulator.push(sourceModel);\n                }\n                else if (!(labels === null || labels === void 0 ? void 0 : labels['eventing.knative.dev/deprecated']) === true) {\n                    accumulator.splice(sourceIndex, 1, sourceModel);\n                }\n            }\n            return accumulator;\n        }, []);\n        eventSourceData.eventSourceModels = orderedEventSourceModelData(allModels);\n    }\n    catch (err) {\n        // show warning if there is an error fetching the CRDs\n        // eslint-disable-next-line no-console\n        console.warn('Error fetching CRDs for dynamic event sources', err);\n        eventSourceData.eventSourceModels = [];\n    }\n    eventSourceData.loaded = true;\n    return eventSourceData.eventSourceModels;\n});\nexport const useEventSourceModels = () => {\n    const [modelsData, setModelsData] = useSafetyFirst({ loaded: false, eventSourceModels: [] });\n    useEffect(() => {\n        if (!eventSourceData.loaded) {\n            fetchEventSourcesCrd()\n                .then((data) => {\n                setModelsData({ loaded: true, eventSourceModels: data });\n            })\n                .catch((err) => {\n                setModelsData({ loaded: true, eventSourceModels: eventSourceData.eventSourceModels });\n                // eslint-disable-next-line no-console\n                console.warn('Error fetching CRDs for dynamic event sources', err);\n            });\n        }\n        else {\n            setModelsData({ loaded: true, eventSourceModels: eventSourceData.eventSourceModels });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return modelsData;\n};\nexport const getEventSourceModels = () => eventSourceData.eventSourceModels;\nexport const getDynamicEventSourcesResourceList = (namespace) => {\n    return eventSourceData.eventSourceModels.map((model) => {\n        return {\n            isList: true,\n            kind: referenceForModel(model),\n            namespace,\n            prop: referenceForModel(model),\n            optional: true,\n        };\n    });\n};\nexport const getDynamicEventSourceModel = (resourceRef) => {\n    return eventSourceData.eventSourceModels.find((model) => referenceForModel(model) === resourceRef);\n};\nexport const getDynamicEventSourcesModelRefs = () => {\n    return eventSourceData.eventSourceModels.map((model) => referenceForModel(model));\n};\nexport const isDynamicEventResourceKind = (resourceRef) => {\n    const index = eventSourceData.eventSourceModels.findIndex((model) => referenceForModel(model) === resourceRef);\n    return index !== -1;\n};\nexport const hideDynamicEventSourceCard = () => eventSourceData.eventSourceModels && eventSourceData.eventSourceModels.length > 0;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { useEffect } from 'react';\nimport { coFetch } from '@console/internal/co-fetch';\nimport { useSafetyFirst } from '@console/internal/components/safety-first';\nimport { K8sKind, kindToAbbr, referenceForModel } from '@console/internal/module/k8s';\nimport { chart_color_red_300 as knativeEventingColor } from '@patternfly/react-tokens';\nimport {\n  EventSourceContainerModel,\n  EventSourceApiServerModel,\n  EventSourceSinkBindingModel,\n  EventSourceCamelModel,\n  EventSourcePingModel,\n  EventSourceKafkaModel,\n  EventSourceCronJobModel,\n} from '../models';\n\ninterface EventSourcetData {\n  loaded: boolean;\n  eventSourceModels: K8sKind[];\n}\n\nconst eventSourceData: EventSourcetData = {\n  loaded: false,\n  eventSourceModels: [],\n};\n\n// To order sources with known followed by CamelSource and everything else\nexport const orderedEventSourceModelData = (allModels: K8sKind[]): K8sKind[] => {\n  const sortModels = _.orderBy(allModels, ['kind'], ['asc']);\n  const knownSourcesList = [\n    EventSourceApiServerModel.kind,\n    EventSourceContainerModel.kind,\n    EventSourceCronJobModel.kind,\n    EventSourceKafkaModel.kind,\n    EventSourcePingModel.kind,\n    EventSourceSinkBindingModel.kind,\n  ];\n  const knownSourcesCrd = _.filter(sortModels, (model) => knownSourcesList.includes(model.kind));\n  const camelSourcesCrd = _.filter(\n    sortModels,\n    (model) => model?.kind === EventSourceCamelModel.kind,\n  );\n  const dynamicSourcesCrd = _.filter(\n    sortModels,\n    (model) => !knownSourcesList.includes(model.kind) && model.kind !== EventSourceCamelModel.kind,\n  );\n  return [...knownSourcesCrd, ...camelSourcesCrd, ...dynamicSourcesCrd];\n};\n\nexport const fetchEventSourcesCrd = async () => {\n  const url = 'api/console/knative-event-sources';\n  try {\n    const res = await coFetch(url);\n    const resolvedRes = await res.json();\n    const allModels = _.reduce(\n      resolvedRes?.items,\n      (accumulator, crd) => {\n        const {\n          metadata: { labels },\n          spec: {\n            group,\n            versions,\n            names: { kind, plural, singular },\n          },\n        } = crd;\n        const { name: version } = versions?.find((ver) => ver.served && ver.storage);\n        if (version) {\n          const sourceModel = {\n            apiGroup: group,\n            apiVersion: version,\n            kind,\n            plural,\n            id: singular,\n            label: singular,\n            labelPlural: plural,\n            abbr: kindToAbbr(kind),\n            namespaced: true,\n            crd: true,\n            color: knativeEventingColor.value,\n          };\n          const sourceIndex = _.findIndex(accumulator, ['kind', kind]);\n          // added check as some sources has multiple entries with deprecated APIgroups\n          if (sourceIndex === -1) {\n            accumulator.push(sourceModel);\n          } else if (!labels?.['eventing.knative.dev/deprecated'] === true) {\n            accumulator.splice(sourceIndex, 1, sourceModel);\n          }\n        }\n        return accumulator;\n      },\n      [],\n    );\n\n    eventSourceData.eventSourceModels = orderedEventSourceModelData(allModels);\n  } catch (err) {\n    // show warning if there is an error fetching the CRDs\n    // eslint-disable-next-line no-console\n    console.warn('Error fetching CRDs for dynamic event sources', err);\n    eventSourceData.eventSourceModels = [];\n  }\n  eventSourceData.loaded = true;\n  return eventSourceData.eventSourceModels;\n};\n\nexport const useEventSourceModels = (): EventSourcetData => {\n  const [modelsData, setModelsData] = useSafetyFirst({ loaded: false, eventSourceModels: [] });\n  useEffect(() => {\n    if (!eventSourceData.loaded) {\n      fetchEventSourcesCrd()\n        .then((data) => {\n          setModelsData({ loaded: true, eventSourceModels: data });\n        })\n        .catch((err) => {\n          setModelsData({ loaded: true, eventSourceModels: eventSourceData.eventSourceModels });\n          // eslint-disable-next-line no-console\n          console.warn('Error fetching CRDs for dynamic event sources', err);\n        });\n    } else {\n      setModelsData({ loaded: true, eventSourceModels: eventSourceData.eventSourceModels });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return modelsData;\n};\n\nexport const getEventSourceModels = (): K8sKind[] => eventSourceData.eventSourceModels;\n\nexport const getDynamicEventSourcesResourceList = (namespace: string) => {\n  return eventSourceData.eventSourceModels.map((model) => {\n    return {\n      isList: true,\n      kind: referenceForModel(model),\n      namespace,\n      prop: referenceForModel(model),\n      optional: true,\n    };\n  });\n};\n\nexport const getDynamicEventSourceModel = (resourceRef: string): K8sKind => {\n  return eventSourceData.eventSourceModels.find(\n    (model: K8sKind) => referenceForModel(model) === resourceRef,\n  );\n};\n\nexport const getDynamicEventSourcesModelRefs = (): string[] => {\n  return eventSourceData.eventSourceModels.map((model: K8sKind) => referenceForModel(model));\n};\n\nexport const isDynamicEventResourceKind = (resourceRef: string): boolean => {\n  const index = eventSourceData.eventSourceModels.findIndex(\n    (model: K8sKind) => referenceForModel(model) === resourceRef,\n  );\n  return index !== -1;\n};\n\nexport const hideDynamicEventSourceCard = () =>\n  eventSourceData.eventSourceModels && eventSourceData.eventSourceModels.length > 0;\n"]}]}