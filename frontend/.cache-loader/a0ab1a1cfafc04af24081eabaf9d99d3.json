{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/utils.ts","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { referenceForProvidedAPI } from './components';\nexport const getInternalObjects = (csv, path = 'metadata.annotations') => {\n    const internals = _.get(csv, [\n        ..._.toPath(path),\n        'operators.operatorframework.io/internal-objects',\n    ]);\n    if (!internals) {\n        return [];\n    }\n    try {\n        return JSON.parse(internals);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing internal object annotation.', e);\n        return [];\n    }\n};\nexport const isInternalObject = (internalObjects, objectName) => internalObjects.some((obj) => obj === objectName);\nexport const getInternalAPIReferences = (csv) => {\n    var _a, _b;\n    const owned = ((_b = (_a = csv === null || csv === void 0 ? void 0 : csv.spec) === null || _a === void 0 ? void 0 : _a.customresourcedefinitions) === null || _b === void 0 ? void 0 : _b.owned) || [];\n    const internalObjects = getInternalObjects(csv);\n    return owned.reduce((acc, obj) => isInternalObject(internalObjects, obj.name) ? [referenceForProvidedAPI(obj), ...acc] : acc, []);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,uBAAuB,EAAE,MAAM,cAAc,CAAC;AAEvD,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,GAAQ,EAAE,OAAe,sBAAsB,EAAE,EAAE;IACpF,MAAM,SAAS,GAAW,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;QACnC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;QACjB,iDAAiD;KAClD,CAAC,CAAC;IACH,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,EAAE,CAAC;KACX;IACD,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAC9B;IAAC,OAAO,CAAC,EAAE;QACV,sCAAsC;QACtC,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAC;QAC9D,OAAO,EAAE,CAAC;KACX;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,eAAyB,EAAE,UAAkB,EAAW,EAAE,CACzF,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;AAEpD,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,GAA8B,EAAY,EAAE;;IACnF,MAAM,KAAK,GAAqB,aAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,0CAAE,yBAAyB,0CAAE,KAAK,KAAI,EAAE,CAAC;IAClF,MAAM,eAAe,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAChD,OAAO,KAAK,CAAC,MAAM,CACjB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CACX,gBAAgB,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAC5F,EAAE,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { ClusterServiceVersionKind, CRDDescription } from './types';\nimport { referenceForProvidedAPI } from './components';\n\nexport const getInternalObjects = (csv: any, path: string = 'metadata.annotations') => {\n  const internals: string = _.get(csv, [\n    ..._.toPath(path),\n    'operators.operatorframework.io/internal-objects',\n  ]);\n  if (!internals) {\n    return [];\n  }\n  try {\n    return JSON.parse(internals);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Error parsing internal object annotation.', e);\n    return [];\n  }\n};\n\nexport const isInternalObject = (internalObjects: string[], objectName: string): boolean =>\n  internalObjects.some((obj) => obj === objectName);\n\nexport const getInternalAPIReferences = (csv: ClusterServiceVersionKind): string[] => {\n  const owned: CRDDescription[] = csv?.spec?.customresourcedefinitions?.owned || [];\n  const internalObjects = getInternalObjects(csv);\n  return owned.reduce(\n    (acc, obj) =>\n      isInternalObject(internalObjects, obj.name) ? [referenceForProvidedAPI(obj), ...acc] : acc,\n    [],\n  );\n};\n"]}]}