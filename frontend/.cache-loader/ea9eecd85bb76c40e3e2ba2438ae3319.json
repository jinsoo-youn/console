{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/dropdowns/ServiceAccountDropdown.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/dropdowns/ServiceAccountDropdown.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { connect } from 'react-redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nconst ServiceAccountDropdown = ({ name, namespace, }) => {\n    const autocompleteFilter = (strText, item) => { var _a; return fuzzy(strText, (_a = item === null || item === void 0 ? void 0 : item.props) === null || _a === void 0 ? void 0 : _a.name); };\n    const resources = [\n        {\n            isList: true,\n            kind: ServiceAccountModel.kind,\n            namespace,\n            prop: ServiceAccountModel.id,\n            optional: true,\n        },\n    ];\n    return (React.createElement(ResourceDropdownField, { name: name, label: \"Service Account Name\", resources: resources, dataSelector: ['metadata', 'name'], placeholder: \"Select a Service Account Name\", autocompleteFilter: autocompleteFilter, helpText: \"The name of Service Account use to run this\", fullWidth: true, showBadge: true }));\n};\nconst mapStateToProps = (state) => ({\n    namespace: getActiveNamespace(state),\n});\nexport default connect(mapStateToProps)(ServiceAccountDropdown);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/dropdowns/ServiceAccountDropdown.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/dropdowns/ServiceAccountDropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAUnE,MAAM,sBAAsB,GAAuD,CAAC,EAClF,IAAI,EACJ,SAAS,GACV,EAAE,EAAE;IACH,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,IAAI,EAAW,EAAE,WAAC,OAAA,KAAK,CAAC,OAAO,QAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,0CAAE,IAAI,CAAC,CAAA,EAAA,CAAC;IACzF,MAAM,SAAS,GAAG;QAChB;YACE,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,mBAAmB,CAAC,IAAI;YAC9B,SAAS;YACT,IAAI,EAAE,mBAAmB,CAAC,EAAE;YAC5B,QAAQ,EAAE,IAAI;SACf;KACF,CAAC;IACF,OAAO,CACL,oBAAC,qBAAqB,IACpB,IAAI,EAAE,IAAI,EACV,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,EAClC,WAAW,EAAC,+BAA+B,EAC3C,kBAAkB,EAAE,kBAAkB,EACtC,QAAQ,EAAC,6CAA6C,EACtD,SAAS,QACT,SAAS,SACT,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,KAAgB,EAAc,EAAE,CAAC,CAAC;IACzD,SAAS,EAAE,kBAAkB,CAAC,KAAK,CAAC;CACrC,CAAC,CAAC;AAEH,eAAe,OAAO,CAAgD,eAAe,CAAC,CACpF,sBAAsB,CACvB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { connect } from 'react-redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport { RootState } from '@console/internal/redux';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\n\ninterface ServiceAccountDropdownProps {\n  name: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst ServiceAccountDropdown: React.FC<ServiceAccountDropdownProps & StateProps> = ({\n  name,\n  namespace,\n}) => {\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const resources = [\n    {\n      isList: true,\n      kind: ServiceAccountModel.kind,\n      namespace,\n      prop: ServiceAccountModel.id,\n      optional: true,\n    },\n  ];\n  return (\n    <ResourceDropdownField\n      name={name}\n      label=\"Service Account Name\"\n      resources={resources}\n      dataSelector={['metadata', 'name']}\n      placeholder=\"Select a Service Account Name\"\n      autocompleteFilter={autocompleteFilter}\n      helpText=\"The name of Service Account use to run this\"\n      fullWidth\n      showBadge\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, ServiceAccountDropdownProps>(mapStateToProps)(\n  ServiceAccountDropdown,\n);\n"]}]}