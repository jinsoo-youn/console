{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/vmlike.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/vmlike.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { TemplateModel } from '@console/internal/models';\nimport { VirtualMachineInstanceModel, VirtualMachineModel } from '../../models';\nimport { selectVM } from '../vm-template/basic';\nimport { isVM, isVMI } from '../check-type';\nexport const getVMLikeModel = (vmLikeEntity) => isVM(vmLikeEntity)\n    ? VirtualMachineModel\n    : isVMI(vmLikeEntity)\n        ? VirtualMachineInstanceModel\n        : TemplateModel;\nexport const asVM = (vmLikeEntity) => {\n    if (!vmLikeEntity || isVMI(vmLikeEntity)) {\n        return null;\n    }\n    return isVM(vmLikeEntity) ? vmLikeEntity : selectVM(vmLikeEntity);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/vmlike.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/selectors/vm/vmlike.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AAGzD,OAAO,EAAE,2BAA2B,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAChF,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,YAAqC,EAAW,EAAE,CAC/E,IAAI,CAAC,YAAY,CAAC;IAChB,CAAC,CAAC,mBAAmB;IACrB,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;QACrB,CAAC,CAAC,2BAA2B;QAC7B,CAAC,CAAC,aAAa,CAAC;AAEpB,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,YAAqC,EAAU,EAAE;IACpE,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AACpE,CAAC,CAAC","sourcesContent":["import { K8sKind } from '@console/internal/module/k8s';\nimport { TemplateModel } from '@console/internal/models';\nimport { VMKind } from '../../types/vm';\nimport { VMGenericLikeEntityKind } from '../../types/vmLike';\nimport { VirtualMachineInstanceModel, VirtualMachineModel } from '../../models';\nimport { selectVM } from '../vm-template/basic';\nimport { isVM, isVMI } from '../check-type';\n\nexport const getVMLikeModel = (vmLikeEntity: VMGenericLikeEntityKind): K8sKind =>\n  isVM(vmLikeEntity)\n    ? VirtualMachineModel\n    : isVMI(vmLikeEntity)\n    ? VirtualMachineInstanceModel\n    : TemplateModel;\n\nexport const asVM = (vmLikeEntity: VMGenericLikeEntityKind): VMKind => {\n  if (!vmLikeEntity || isVMI(vmLikeEntity)) {\n    return null;\n  }\n\n  return isVM(vmLikeEntity) ? vmLikeEntity : selectVM(vmLikeEntity);\n};\n"]}]}