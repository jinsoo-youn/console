{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/YAMLEditor.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/YAMLEditor.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport Measure from 'react-measure';\nimport MonacoEditor from 'react-monaco-editor';\nimport { registerYAMLinMonaco, defaultEditorOptions } from './yaml-editor-utils';\nimport YAMLEditorToolbar from './YAMLEditorToolbar';\nimport './YAMLEditor.scss';\nconst YAMLEditor = React.forwardRef((props, ref) => {\n    const { value, options = defaultEditorOptions, showShortcuts, toolbarLinks, minHeight, onChange, onSave, } = props;\n    const editorDidMount = (editor, monaco) => {\n        editor.layout();\n        editor.focus();\n        registerYAMLinMonaco(monaco);\n        monaco.editor.getModels()[0].updateOptions({ tabSize: 2 });\n        onSave && editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, onSave); // eslint-disable-line no-bitwise\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(YAMLEditorToolbar, { showShortcuts: showShortcuts, toolbarLinks: toolbarLinks }),\n        React.createElement(Measure, { bounds: true }, ({ measureRef, contentRect }) => (React.createElement(\"div\", { ref: measureRef, className: \"ocs-yaml-editor__root\", style: { minHeight } },\n            React.createElement(\"div\", { className: \"ocs-yaml-editor__wrapper\" },\n                React.createElement(MonacoEditor, { ref: ref, language: \"yaml\", theme: \"console\", height: contentRect.bounds.height, width: contentRect.bounds.width, value: value, options: options, editorDidMount: editorDidMount, onChange: onChange })))))));\n});\nexport default YAMLEditor;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/YAMLEditor.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/YAMLEditor.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,OAAO,MAAM,eAAe,CAAC;AACpC,OAAO,YAAY,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AACjF,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD,OAAO,mBAAmB,CAAC;AAY3B,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAgC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IAChF,MAAM,EACJ,KAAK,EACL,OAAO,GAAG,oBAAoB,EAC9B,aAAa,EACb,YAAY,EACZ,SAAS,EACT,QAAQ,EACR,MAAM,GACP,GAAG,KAAK,CAAC;IAEV,MAAM,cAAc,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;QACxC,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,iCAAiC;IACtH,CAAC,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,iBAAiB,IAAC,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,GAAI;QAC/E,oBAAC,OAAO,IAAC,MAAM,UACZ,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAChC,6BAAK,GAAG,EAAE,UAAU,EAAE,SAAS,EAAC,uBAAuB,EAAC,KAAK,EAAE,EAAE,SAAS,EAAE;YAC1E,6BAAK,SAAS,EAAC,0BAA0B;gBACvC,oBAAC,YAAY,IACX,GAAG,EAAE,GAAG,EACR,QAAQ,EAAC,MAAM,EACf,KAAK,EAAC,SAAS,EACf,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,EACjC,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,EAC/B,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,OAAO,EAChB,cAAc,EAAE,cAAc,EAC9B,QAAQ,EAAE,QAAQ,GAClB,CACE,CACF,CACP,CACO,CACT,CACJ,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,eAAe,UAAU,CAAC","sourcesContent":["import * as React from 'react';\nimport Measure from 'react-measure';\nimport MonacoEditor from 'react-monaco-editor';\n\nimport { registerYAMLinMonaco, defaultEditorOptions } from './yaml-editor-utils';\nimport YAMLEditorToolbar from './YAMLEditorToolbar';\n\nimport './YAMLEditor.scss';\n\ninterface YAMLEditorProps {\n  value?: string;\n  options?: object;\n  minHeight?: string | number;\n  showShortcuts?: boolean;\n  toolbarLinks?: React.ReactNodeArray;\n  onChange?: (newValue, event) => {};\n  onSave?: () => {};\n}\n\nconst YAMLEditor = React.forwardRef<MonacoEditor, YAMLEditorProps>((props, ref) => {\n  const {\n    value,\n    options = defaultEditorOptions,\n    showShortcuts,\n    toolbarLinks,\n    minHeight,\n    onChange,\n    onSave,\n  } = props;\n\n  const editorDidMount = (editor, monaco) => {\n    editor.layout();\n    editor.focus();\n    registerYAMLinMonaco(monaco);\n    monaco.editor.getModels()[0].updateOptions({ tabSize: 2 });\n    onSave && editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, onSave); // eslint-disable-line no-bitwise\n  };\n\n  return (\n    <>\n      <YAMLEditorToolbar showShortcuts={showShortcuts} toolbarLinks={toolbarLinks} />\n      <Measure bounds>\n        {({ measureRef, contentRect }) => (\n          <div ref={measureRef} className=\"ocs-yaml-editor__root\" style={{ minHeight }}>\n            <div className=\"ocs-yaml-editor__wrapper\">\n              <MonacoEditor\n                ref={ref}\n                language=\"yaml\"\n                theme=\"console\"\n                height={contentRect.bounds.height}\n                width={contentRect.bounds.width}\n                value={value}\n                options={options}\n                editorDidMount={editorDidMount}\n                onChange={onChange}\n              />\n            </div>\n          </div>\n        )}\n      </Measure>\n    </>\n  );\n});\n\nexport default YAMLEditor;\n"]}]}