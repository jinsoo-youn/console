{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/storage-class-dropdown.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/storage-class-dropdown.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\nexport class StorageClassDropdownInner extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            items: {},\n            name: this.props.name,\n            selectedKey: null,\n            title: React.createElement(LoadingInline, null),\n            defaultClass: this.props.defaultClass,\n        };\n        this.autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n        this.getTitle = (storageClass) => {\n            return storageClass.kindLabel ? (React.createElement(ResourceName, { kind: \"StorageClass\", name: storageClass.name })) : (React.createElement(\"span\", null, storageClass.name));\n        };\n        this.onChange = (key) => {\n            const storageClass = _.get(this.state, ['items', key], {});\n            this.setState({\n                selectedKey: key,\n                title: this.getTitle(storageClass),\n            }, () => this.props.onChange(storageClass.resource));\n        };\n    }\n    UNSAFE_componentWillMount() {\n        this.UNSAFE_componentWillReceiveProps(this.props);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { loaded, loadError, resources } = nextProps;\n        if (loadError) {\n            this.setState({\n                title: React.createElement(\"div\", { className: \"cos-error-title\" },\n                    \"Error Loading \",\n                    nextProps.desc),\n            });\n            return;\n        }\n        if (!loaded) {\n            return;\n        }\n        const state = {\n            items: {},\n            title: {},\n            defaultClass: '',\n        };\n        let unorderedItems = {};\n        const noStorageClass = 'No default storage class';\n        _.map(resources.StorageClass.data, (resource) => {\n            unorderedItems[resource.metadata.name] = {\n                kindLabel: 'StorageClass',\n                name: resource.metadata.name,\n                description: _.get(resource, 'metadata.annotations.description', ''),\n                default: isDefaultClass(resource),\n                accessMode: _.get(resource, ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'], ''),\n                provisioner: resource.provisioner,\n                type: _.get(resource, 'parameters.type', ''),\n                zone: _.get(resource, 'parameters.zone', ''),\n                resource,\n            };\n        });\n        //Filter if user provides a custom function\n        if (nextProps.filter) {\n            unorderedItems = Object.keys(unorderedItems)\n                .filter((sc) => nextProps.filter(unorderedItems[sc]))\n                .reduce((acc, key) => {\n                acc[key] = unorderedItems[key];\n                return acc;\n            }, {});\n        }\n        // Determine if there is a default storage class\n        state.defaultClass = _.findKey(unorderedItems, 'default');\n        const { selectedKey } = this.state;\n        if (!state.defaultClass) {\n            // Add No Storage Class option if there is not a default storage class\n            unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n        }\n        if (!this.props.loaded || !selectedKey) {\n            state.title = React.createElement(\"span\", { className: \"text-muted\" }, \"Select storage class\");\n        }\n        const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n        if (selectedItem) {\n            state.title = this.getTitle(selectedItem);\n        }\n        Object.keys(unorderedItems)\n            .sort()\n            .forEach((key) => {\n            state.items[key] = unorderedItems[key];\n        });\n        this.setState(state);\n    }\n    componentDidUpdate() {\n        const { defaultClass, selectedKey } = this.state;\n        if (!selectedKey && defaultClass) {\n            this.onChange(defaultClass);\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return !_.isEqual(this.state, nextState);\n    }\n    render() {\n        const { id, loaded, describedBy } = this.props;\n        const items = {};\n        _.each(this.state.items, (props, key) => (items[key] = key ? (React.createElement(StorageClassDropdownEntry, Object.assign({}, props))) : (React.createElement(StorageClassDropdownNoStorageClassOption, Object.assign({}, props)))));\n        const { selectedKey, defaultClass } = this.state;\n        // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n        const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n        return (React.createElement(React.Fragment, null, loaded && itemsAvailableToShow && (React.createElement(\"div\", null,\n            React.createElement(\"label\", { className: this.props.hideClassName\n                    ? `${this.props.hideClassName} control-label`\n                    : 'control-label', htmlFor: id }, \"Storage Class\"),\n            React.createElement(Dropdown, { className: \"co-storage-class-dropdown\", dropDownClassName: \"dropdown--full-width\", autocompleteFilter: this.autocompleteFilter, autocompletePlaceholder: \"Select storage class\", items: items, selectedKey: selectedKey, title: this.state.title, onChange: this.onChange, id: id, menuClassName: \"dropdown-menu--text-wrap\" }),\n            describedBy && (React.createElement(\"p\", { className: \"help-block\", id: describedBy }, \"Storage class for the new claim.\"))))));\n    }\n}\nexport const StorageClassDropdown = (props) => {\n    return (React.createElement(Firehose, { resources: [{ kind: 'StorageClass', prop: 'StorageClass', isList: true }] },\n        React.createElement(StorageClassDropdownInner, Object.assign({}, props))));\n};\nconst StorageClassDropdownEntry = (props) => {\n    const storageClassProperties = [\n        props.default ? ' (default)' : '',\n        props.description,\n        props.accessMode,\n        props.provisioner,\n        props.type,\n        props.zone,\n    ];\n    const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n    return (React.createElement(\"span\", { className: \"co-resource-item\" },\n        React.createElement(ResourceIcon, { kind: props.kindLabel }),\n        React.createElement(\"span\", { className: \"co-resource-item__resource-name\" },\n            props.name,\n            React.createElement(\"div\", { className: \"text-muted small\" },\n                \" \",\n                storageClassDescriptionLine))));\n};\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n    return (React.createElement(\"span\", { className: \"co-resource-item\" },\n        React.createElement(\"span\", { className: \"co-resource-item__resource-name\" }, props.name)));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/storage-class-dropdown.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/storage-class-dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\n\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\n\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\n\nexport class StorageClassDropdownInner extends React.Component<\n  StorageClassDropdownInnerProps,\n  StorageClassDropdownInnerState\n> {\n  readonly state: StorageClassDropdownInnerState = {\n    items: {},\n    name: this.props.name,\n    selectedKey: null,\n    title: <LoadingInline />,\n    defaultClass: this.props.defaultClass,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { loaded, loadError, resources } = nextProps;\n\n    if (loadError) {\n      this.setState({\n        title: <div className=\"cos-error-title\">Error Loading {nextProps.desc}</div>,\n      });\n      return;\n    }\n    if (!loaded) {\n      return;\n    }\n\n    const state = {\n      items: {},\n      title: {},\n      defaultClass: '',\n    };\n    let unorderedItems = {};\n    const noStorageClass = 'No default storage class';\n    _.map(resources.StorageClass.data, (resource) => {\n      unorderedItems[resource.metadata.name] = {\n        kindLabel: 'StorageClass',\n        name: resource.metadata.name,\n        description: _.get(resource, 'metadata.annotations.description', ''),\n        default: isDefaultClass(resource),\n        accessMode: _.get(\n          resource,\n          ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'],\n          '',\n        ),\n        provisioner: resource.provisioner,\n        type: _.get(resource, 'parameters.type', ''),\n        zone: _.get(resource, 'parameters.zone', ''),\n        resource,\n      };\n    });\n\n    //Filter if user provides a custom function\n    if (nextProps.filter) {\n      unorderedItems = Object.keys(unorderedItems)\n        .filter((sc) => nextProps.filter(unorderedItems[sc]))\n        .reduce((acc, key) => {\n          acc[key] = unorderedItems[key];\n          return acc;\n        }, {});\n    }\n\n    // Determine if there is a default storage class\n    state.defaultClass = _.findKey(unorderedItems, 'default');\n    const { selectedKey } = this.state;\n    if (!state.defaultClass) {\n      // Add No Storage Class option if there is not a default storage class\n      unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n    }\n\n    if (!this.props.loaded || !selectedKey) {\n      state.title = <span className=\"text-muted\">Select storage class</span>;\n    }\n\n    const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n    if (selectedItem) {\n      state.title = this.getTitle(selectedItem);\n    }\n\n    Object.keys(unorderedItems)\n      .sort()\n      .forEach((key) => {\n        state.items[key] = unorderedItems[key];\n      });\n    this.setState(state);\n  }\n\n  componentDidUpdate() {\n    const { defaultClass, selectedKey } = this.state;\n    if (!selectedKey && defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n\n  getTitle = (storageClass) => {\n    return storageClass.kindLabel ? (\n      <ResourceName kind=\"StorageClass\" name={storageClass.name} />\n    ) : (\n      <span>{storageClass.name}</span>\n    );\n  };\n\n  onChange = (key) => {\n    const storageClass = _.get(this.state, ['items', key], {});\n    this.setState(\n      {\n        selectedKey: key,\n        title: this.getTitle(storageClass),\n      },\n      () => this.props.onChange(storageClass.resource),\n    );\n  };\n\n  render() {\n    const { id, loaded, describedBy } = this.props;\n    const items = {};\n    _.each(\n      this.state.items,\n      (props, key) =>\n        (items[key] = key ? (\n          <StorageClassDropdownEntry {...props} />\n        ) : (\n          <StorageClassDropdownNoStorageClassOption {...props} />\n        )),\n    );\n\n    const { selectedKey, defaultClass } = this.state;\n\n    // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n    const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n    return (\n      <>\n        {loaded && itemsAvailableToShow && (\n          <div>\n            <label\n              className={\n                this.props.hideClassName\n                  ? `${this.props.hideClassName} control-label`\n                  : 'control-label'\n              }\n              htmlFor={id}\n            >\n              Storage Class\n            </label>\n            <Dropdown\n              className=\"co-storage-class-dropdown\"\n              dropDownClassName=\"dropdown--full-width\"\n              autocompleteFilter={this.autocompleteFilter}\n              autocompletePlaceholder=\"Select storage class\"\n              items={items}\n              selectedKey={selectedKey}\n              title={this.state.title}\n              onChange={this.onChange}\n              id={id}\n              menuClassName=\"dropdown-menu--text-wrap\"\n            />\n            {describedBy && (\n              <p className=\"help-block\" id={describedBy}>\n                Storage class for the new claim.\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const StorageClassDropdown = (props) => {\n  return (\n    <Firehose resources={[{ kind: 'StorageClass', prop: 'StorageClass', isList: true }]}>\n      <StorageClassDropdownInner {...props} />\n    </Firehose>\n  );\n};\n\nconst StorageClassDropdownEntry = (props) => {\n  const storageClassProperties = [\n    props.default ? ' (default)' : '',\n    props.description,\n    props.accessMode,\n    props.provisioner,\n    props.type,\n    props.zone,\n  ];\n  const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n  return (\n    <span className=\"co-resource-item\">\n      <ResourceIcon kind={props.kindLabel} />\n      <span className=\"co-resource-item__resource-name\">\n        {props.name}\n        <div className=\"text-muted small\"> {storageClassDescriptionLine}</div>\n      </span>\n    </span>\n  );\n};\n\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-item__resource-name\">{props.name}</span>\n    </span>\n  );\n};\n\nexport type StorageClassDropdownInnerState = {\n  items: any;\n  name: string;\n  selectedKey: string;\n  title: React.ReactNode;\n  defaultClass: string;\n};\n\nexport type StorageClassDropdownInnerProps = {\n  id?: string;\n  loaded?: boolean;\n  resources?: any;\n  name: string;\n  onChange: (object) => void;\n  describedBy: string;\n  defaultClass: string;\n  required?: boolean;\n  hideClassName?: string;\n  filter?: (param) => boolean;\n};\n"]}]}