{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/number-spinner.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/number-spinner.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { MinusSquareIcon, PlusSquareIcon } from '@patternfly/react-icons';\nimport { useFormContext } from 'react-hook-form';\nexport const NumberSpinner = (_a) => {\n    var { className, initialValue, min, max, name } = _a, inputProps = __rest(_a, [\"className\", \"initialValue\", \"min\", \"max\", \"name\"]);\n    const { register } = useFormContext();\n    const [value, setValue] = React.useState(initialValue);\n    const changeValueBy = operation => {\n        setValue(_.toInteger(value) + operation);\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(Button, { onClick: () => changeValueBy(-1), type: \"button\", variant: \"plain\", isDisabled: !_.isNil(min) && value <= min, \"aria-label\": \"Decrement\", className: \"co-m-number-spinner__button\" },\n            React.createElement(MinusSquareIcon, { className: \"co-m-number-spinner__down-icon\" })),\n        React.createElement(\"input\", Object.assign({ name: name, type: \"number\", ref: register({ min: min, max: max }), value: value, onChange: (e) => setValue(e.target.value), className: classNames(className, 'co-m-number-spinner__input', 'hc-number-spinner__input') }, inputProps)),\n        React.createElement(Button, { onClick: () => changeValueBy(1), type: \"button\", variant: \"plain\", isDisabled: !_.isNil(max) && value >= max, \"aria-label\": \"Increment\", className: \"co-m-number-spinner__button\" },\n            React.createElement(PlusSquareIcon, { className: \"co-m-number-spinner__up-icon\" }))));\n};\nNumberSpinner.defaultProps = {\n    name: 'numberSpinner',\n    initialValue: 0,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/number-spinner.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/number-spinner.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,MAAM,aAAa,GAAiC,CAAC,EAA0D,EAAE,EAAE;QAA9D,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,OAAiB,EAAf,4EAAa;IAClH,MAAM,EAAE,QAAQ,EAAE,GAAG,cAAc,EAAE,CAAC;IACtC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACvD,MAAM,aAAa,GAAG,SAAS,CAAC,EAAE;QAChC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF,OAAO,CACL;QACE,oBAAC,MAAM,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAC,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,gBAAa,WAAW,EAAC,SAAS,EAAC,6BAA6B;YAC/K,oBAAC,eAAe,IAAC,SAAS,EAAC,gCAAgC,GAAG,CACvD;QACT,6CAAO,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,QAAQ,EAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,4BAA4B,EAAE,0BAA0B,CAAC,IAAM,UAAU,EAAU;QAC1P,oBAAC,MAAM,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAC,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,gBAAa,WAAW,EAAC,SAAS,EAAC,6BAA6B;YAC9K,oBAAC,cAAc,IAAC,SAAS,EAAC,8BAA8B,GAAG,CACpD,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAUF,aAAa,CAAC,YAAY,GAAG;IAC3B,IAAI,EAAE,eAAe;IACrB,YAAY,EAAE,CAAC;CAChB,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { MinusSquareIcon, PlusSquareIcon } from '@patternfly/react-icons';\nimport { useFormContext } from 'react-hook-form';\n\nexport const NumberSpinner: React.FC<NumberSpinnerProps> = ({ className, initialValue, min, max, name, ...inputProps }) => {\n  const { register } = useFormContext();\n  const [value, setValue] = React.useState(initialValue);\n  const changeValueBy = operation => {\n    setValue(_.toInteger(value) + operation);\n  };\n  return (\n    <div>\n      <Button onClick={() => changeValueBy(-1)} type=\"button\" variant=\"plain\" isDisabled={!_.isNil(min) && value <= min} aria-label=\"Decrement\" className=\"co-m-number-spinner__button\">\n        <MinusSquareIcon className=\"co-m-number-spinner__down-icon\" />\n      </Button>\n      <input name={name} type=\"number\" ref={register({ min: min, max: max })} value={value} onChange={(e: any) => setValue(e.target.value)} className={classNames(className, 'co-m-number-spinner__input', 'hc-number-spinner__input')} {...inputProps}></input>\n      <Button onClick={() => changeValueBy(1)} type=\"button\" variant=\"plain\" isDisabled={!_.isNil(max) && value >= max} aria-label=\"Increment\" className=\"co-m-number-spinner__button\">\n        <PlusSquareIcon className=\"co-m-number-spinner__up-icon\" />\n      </Button>\n    </div>\n  );\n};\n\ntype NumberSpinnerProps = {\n  className?: string;\n  initialValue?: number;\n  min?: number;\n  max?: number;\n  name?: string;\n} & React.HTMLProps<HTMLInputElement>;\n\nNumberSpinner.defaultProps = {\n  name: 'numberSpinner',\n  initialValue: 0,\n};\n"]}]}