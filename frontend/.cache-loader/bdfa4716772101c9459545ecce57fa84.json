{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/factory/table.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/factory/table.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport * as _ from 'lodash-es';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getNodeRoles, getMachinePhase, nodeMemory, nodeCPU, nodeFS, nodePods } from '@console/shared';\nimport * as UIActions from '../../actions/ui';\nimport { alertStateOrder, silenceFiringAlertsOrder, silenceStateOrder } from '../../reducers/monitoring';\nimport { ingressValidHosts } from '../ingress';\nimport { convertToBaseValue, EmptyBox, StatusBox, WithScrollContainer } from '../utils';\nimport { getClusterOperatorStatus, getClusterOperatorVersion, getJobTypeAndCompletions, getTemplateInstanceStatus, planExternalName, podPhase, podReadiness, podRestarts, serviceCatalogStatus, serviceClassDisplayName } from '../../module/k8s';\nimport { // eslint-disable-line no-unused-vars\nTable as PfTable, TableHeader, TableBody, TableGridBreakpoint, SortByDirection, } from '@patternfly/react-table';\nimport { CellMeasurerCache, CellMeasurer } from 'react-virtualized';\nimport { AutoSizer, VirtualTableBody, WindowScroller } from '@patternfly/react-virtualized-extension';\nimport { tableFilters } from './table-filters';\nconst rowFiltersToFilterFuncs = rowFilters => {\n    return (rowFilters || []).filter(f => f.type && _.isFunction(f.filter)).reduce((acc, f) => (Object.assign(Object.assign({}, acc), { [f.type]: f.filter })), {});\n};\nconst getAllTableFilters = rowFilters => (Object.assign(Object.assign({}, tableFilters), rowFiltersToFilterFuncs(rowFilters)));\nconst getFilteredRows = (_filters, rowFilters, objects) => {\n    if (_.isEmpty(_filters)) {\n        return objects;\n    }\n    const allTableFilters = getAllTableFilters(rowFilters);\n    let filteredObjects = objects;\n    _.each(_filters, (value, name) => {\n        const filter = allTableFilters[name];\n        if (_.isFunction(filter)) {\n            filteredObjects = _.filter(filteredObjects, o => filter(value, o));\n        }\n    });\n    return filteredObjects;\n};\nconst filterPropType = (props, propName, componentName) => {\n    if (!props) {\n        return;\n    }\n    const allTableFilters = getAllTableFilters(props.rowFilters);\n    for (const key of _.keys(props[propName])) {\n        if (key in allTableFilters || key === 'loadTest') {\n            continue;\n        }\n        return new Error(`Invalid prop '${propName}' in '${componentName}'. '${key}' is not a valid filter type!`);\n    }\n};\nconst sorts = {\n    alertStateOrder,\n    daemonsetNumScheduled: daemonset => _.toInteger(_.get(daemonset, 'status.currentNumberScheduled')),\n    dataSize: resource => _.size(_.get(resource, 'data')) + _.size(_.get(resource, 'binaryData')),\n    ingressValidHosts,\n    serviceCatalogStatus,\n    jobCompletions: job => getJobTypeAndCompletions(job).completions,\n    jobType: job => getJobTypeAndCompletions(job).type,\n    nodeReadiness: (node) => {\n        let readiness = _.get(node, 'status.conditions');\n        readiness = _.find(readiness, { type: 'Ready' });\n        return _.get(readiness, 'status');\n    },\n    numReplicas: resource => _.toInteger(_.get(resource, 'status.replicas')),\n    planExternalName,\n    namespaceCPU: (ns) => UIActions.getNamespaceMetric(ns, 'cpu'),\n    namespaceMemory: (ns) => UIActions.getNamespaceMetric(ns, 'memory'),\n    podCPU: (pod) => UIActions.getPodMetric(pod, 'cpu'),\n    podMemory: (pod) => UIActions.getPodMetric(pod, 'memory'),\n    podPhase,\n    podReadiness: (pod) => podReadiness(pod).readyCount,\n    podRestarts,\n    pvStorage: pv => { var _a, _b; return _.toInteger(convertToBaseValue((_b = (_a = pv === null || pv === void 0 ? void 0 : pv.spec) === null || _a === void 0 ? void 0 : _a.capacity) === null || _b === void 0 ? void 0 : _b.storage)); },\n    pvcStorage: pvc => { var _a, _b; return _.toInteger(convertToBaseValue((_b = (_a = pvc === null || pvc === void 0 ? void 0 : pvc.status) === null || _a === void 0 ? void 0 : _a.capacity) === null || _b === void 0 ? void 0 : _b.storage)); },\n    serviceClassDisplayName,\n    silenceFiringAlertsOrder,\n    silenceStateOrder,\n    string: val => JSON.stringify(val),\n    number: val => _.toNumber(val),\n    getClusterOperatorStatus,\n    getClusterOperatorVersion,\n    getTemplateInstanceStatus,\n    nodeRoles: (node) => {\n        const roles = getNodeRoles(node);\n        return roles.sort().join(', ');\n    },\n    nodeMemory: (node) => nodeMemory(node),\n    nodeCPU: (node) => nodeCPU(node),\n    nodeFS: (node) => nodeFS(node),\n    machinePhase: (machine) => getMachinePhase(machine),\n    nodePods: (node) => nodePods(node),\n};\nconst stateToProps = ({ UI }, { customSorts = {}, data = [], defaultSortField = 'metadata.name', defaultSortFunc = undefined, defaultSortOrder = SortByDirection.asc, filters = {}, loaded = false, reduxID = null, reduxIDs = null, staticFilters = [{}], rowFilters = [] }) => {\n    const allFilters = staticFilters ? Object.assign({}, filters, ...staticFilters) : filters;\n    const newData = getFilteredRows(allFilters, rowFilters, data);\n    const listId = reduxIDs ? reduxIDs.join(',') : reduxID;\n    // Only default to 'metadata.name' if no `defaultSortFunc`\n    const currentSortField = UI.getIn(['listSorts', listId, 'field'], defaultSortFunc ? undefined : defaultSortField);\n    const currentSortFunc = UI.getIn(['listSorts', listId, 'func'], defaultSortFunc);\n    const currentSortOrder = UI.getIn(['listSorts', listId, 'orderBy'], defaultSortOrder);\n    if (loaded) {\n        let sortBy = 'metadata.name';\n        if (currentSortField) {\n            sortBy = resource => sorts.string(_.get(resource, currentSortField, ''));\n        }\n        else if (currentSortFunc && customSorts[currentSortFunc]) {\n            // Sort resources by a function in the 'customSorts' prop\n            sortBy = customSorts[currentSortFunc];\n        }\n        else if (currentSortFunc && sorts[currentSortFunc]) {\n            // Sort resources by a function in the 'sorts' object\n            sortBy = sorts[currentSortFunc];\n        }\n        const getSortValue = resource => {\n            const val = _.isFunction(sortBy) ? sortBy(resource) : _.get(resource, sortBy);\n            return val !== null && val !== void 0 ? val : '';\n        };\n        newData === null || newData === void 0 ? void 0 : newData.sort((a, b) => {\n            var _a, _b;\n            const lang = navigator.languages[0] || navigator.language;\n            // Use `localCompare` with `numeric: true` for a natural sort order (e.g., pv-1, pv-9, pv-10)\n            const compareOpts = { numeric: true, ignorePunctuation: true };\n            const aValue = getSortValue(a);\n            const bValue = getSortValue(b);\n            const result = Number.isFinite(aValue) && Number.isFinite(bValue) ? aValue - bValue : `${aValue}`.localeCompare(`${bValue}`, lang, compareOpts);\n            if (result !== 0) {\n                return currentSortOrder === SortByDirection.asc ? result : result * -1;\n            }\n            // Use name as a secondary sort for a stable sort.\n            const aName = ((_a = a === null || a === void 0 ? void 0 : a.metadata) === null || _a === void 0 ? void 0 : _a.name) || '';\n            const bName = ((_b = b === null || b === void 0 ? void 0 : b.metadata) === null || _b === void 0 ? void 0 : _b.name) || '';\n            return aName.localeCompare(bName, lang, compareOpts);\n        });\n    }\n    return {\n        currentSortField,\n        currentSortFunc,\n        currentSortOrder,\n        data: newData,\n        unfilteredData: data,\n        listId,\n    };\n};\n// Common table row/columns helper SFCs for implementing accessible data grid\nexport const TableRow = (_a) => {\n    var { id, index, trKey, style, className } = _a, props = __rest(_a, [\"id\", \"index\", \"trKey\", \"style\", \"className\"]);\n    return React.createElement(\"tr\", Object.assign({}, props, { \"data-id\": id, \"data-index\": index, \"data-test-rows\": \"resource-row\", \"data-key\": trKey, style: style, className: className, role: \"row\" }));\n};\nTableRow.displayName = 'TableRow';\nexport const TableData = (_a) => {\n    var { className } = _a, props = __rest(_a, [\"className\"]);\n    return React.createElement(\"td\", Object.assign({}, props, { className: className, role: \"gridcell\" }));\n};\nTableData.displayName = 'TableData';\nconst TableWrapper = (_a) => {\n    var { virtualize, ariaLabel, ariaRowCount } = _a, props = __rest(_a, [\"virtualize\", \"ariaLabel\", \"ariaRowCount\"]);\n    return virtualize ? React.createElement(\"div\", Object.assign({}, props, { role: \"grid\", \"aria-label\": ariaLabel, \"aria-rowcount\": ariaRowCount })) : React.createElement(React.Fragment, Object.assign({}, props));\n};\nconst VirtualBody = props => {\n    const { customData, Row, height, isScrolling, onChildScroll, data, columns, scrollTop, width } = props;\n    const cellMeasurementCache = new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: 44,\n        keyMapper: rowIndex => _.get(props.data[rowIndex], 'metadata.uid', rowIndex),\n    });\n    const rowRenderer = ({ index, isScrolling: scrolling, isVisible, key, style, parent }) => {\n        const rowArgs = {\n            obj: data[index],\n            index,\n            columns,\n            isScrolling: scrolling,\n            key,\n            style,\n            customData,\n        };\n        const row = Row(rowArgs);\n        // do not render non visible elements (this excludes overscan)\n        if (!isVisible) {\n            return null;\n        }\n        return (React.createElement(CellMeasurer, { cache: cellMeasurementCache, columnIndex: 0, key: key, parent: parent, rowIndex: index }, row));\n    };\n    return React.createElement(VirtualTableBody, { autoHeight: true, className: \"pf-c-table pf-m-compact pf-m-border-rows pf-c-virtualized pf-c-window-scroller\", deferredMeasurementCache: cellMeasurementCache, rowHeight: cellMeasurementCache.rowHeight, height: height || 0, isScrolling: isScrolling, onScroll: onChildScroll, overscanRowCount: 10, columns: columns, rows: data, rowCount: data.length, rowRenderer: rowRenderer, scrollTop: scrollTop, width: width });\n};\nexport const Table = connect(stateToProps, { sortList: UIActions.sortList }, null, {\n    areStatesEqual: ({ UI: next }, { UI: prev }) => next.get('listSorts') === prev.get('listSorts'),\n})((_a = class TableInner extends React.Component {\n        constructor(props) {\n            super(props);\n            this._onExpand = (event, rowIndex, colIndex, isOpen, rowData, extraData) => {\n                const { expandableData } = this.state;\n                let rows = _.cloneDeep(expandableData);\n                if (!isOpen) {\n                    rows[rowIndex].cells.forEach((cell) => {\n                        if (cell.props)\n                            cell.props.isOpen = false;\n                    });\n                    rows[rowIndex].cells[colIndex].props.isOpen = true;\n                    rows[rowIndex].isOpen = true;\n                }\n                else {\n                    rows[rowIndex].cells[colIndex].props.isOpen = false;\n                    rows[rowIndex].isOpen = rows[rowIndex].cells.some((cell) => cell.props && cell.props.isOpen);\n                }\n                this.setState({\n                    expandableData: rows,\n                });\n            };\n            const componentProps = _.pick(props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n            const columns = props.Header(componentProps);\n            const { currentSortField, currentSortFunc, currentSortOrder } = props;\n            this._columnShift = props.onSelect ? 1 : 0; //shift indexes by 1 if select provided\n            this._applySort = this._applySort.bind(this);\n            this._onSort = this._onSort.bind(this);\n            this._onExpand = this._onExpand.bind(this);\n            this._handleResize = _.debounce(this._handleResize.bind(this), 100);\n            let sortBy = {};\n            if (currentSortField && currentSortOrder) {\n                const columnIndex = _.findIndex(columns, { sortField: currentSortField });\n                if (columnIndex > -1) {\n                    sortBy = { index: columnIndex + this._columnShift, direction: currentSortOrder };\n                }\n            }\n            else if (currentSortFunc && currentSortOrder) {\n                const columnIndex = _.findIndex(columns, { sortFunc: currentSortFunc });\n                if (columnIndex > -1) {\n                    sortBy = { index: columnIndex + this._columnShift, direction: currentSortOrder };\n                }\n            }\n            this.state = { sortBy, expandableData: [] };\n        }\n        componentDidMount() {\n            const componentProps = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n            const columns = this.props.Header(componentProps);\n            const sp = new URLSearchParams(window.location.search);\n            const columnIndex = _.findIndex(columns, { title: sp.get('sortBy') });\n            if (columnIndex > -1) {\n                const sortOrder = sp.get('orderBy') || SortByDirection.asc;\n                const column = columns[columnIndex];\n                this._applySort(column.sortField, column.sortFunc, sortOrder, column.title);\n                this.setState({\n                    sortBy: {\n                        index: columnIndex + this._columnShift,\n                        direction: sortOrder,\n                    },\n                });\n            }\n            // re-render after resize\n            window.addEventListener('resize', this._handleResize);\n        }\n        componentDidUpdate(prevProps) {\n            if (this.props.expandable && !!this.props.expandableRows) {\n                this.props.expandableRows(this.props.data).then(res => {\n                    if (_.isEqual(this.props.currentSortField, prevProps.currentSortField) && _.isEqual(this.props.currentSortOrder, prevProps.currentSortOrder) && res.length === this.state.expandableData.length) {\n                        // do nothing\n                        console.log('do nothing');\n                    }\n                    else {\n                        console.log('setstate change');\n                        this.setState({\n                            expandableData: res,\n                        });\n                    }\n                });\n            }\n        }\n        componentWillUnmount() {\n            window.removeEventListener('resize', this._handleResize);\n        }\n        _handleResize() {\n            this.forceUpdate();\n        }\n        _applySort(sortField, sortFunc, direction, columnTitle) {\n            const { sortList, listId, currentSortFunc } = this.props;\n            const applySort = _.partial(sortList, listId);\n            applySort(sortField, sortFunc || currentSortFunc, direction, columnTitle);\n        }\n        _onSort(event, index, direction) {\n            event.preventDefault();\n            const componentProps = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n            const columns = this.props.Header(componentProps);\n            const sortColumn = columns[index - this._columnShift];\n            this._applySort(sortColumn.sortField, sortColumn.sortFunc, direction, sortColumn.title);\n            this.setState({\n                sortBy: {\n                    index,\n                    direction,\n                },\n            });\n        }\n        render() {\n            const { scrollElement, Rows, Row, expand, label, mock, onSelect, selectedResourcesForKind, 'aria-label': ariaLabel, virtualize = true, expandable = false, customData, gridBreakPoint = TableGridBreakpoint.none, Header } = this.props;\n            const { sortBy, expandableData } = this.state;\n            const componentProps = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n            const columns = Header(componentProps);\n            const ariaRowCount = componentProps.data && componentProps.data.length;\n            const scrollNode = typeof scrollElement === 'function' ? scrollElement() : scrollElement;\n            const renderVirtualizedTable = scrollContainer => (React.createElement(WindowScroller, { scrollElement: scrollContainer }, ({ height, isScrolling, registerChild, onChildScroll, scrollTop }) => (React.createElement(AutoSizer, { disableHeight: true }, ({ width }) => (React.createElement(\"div\", { ref: registerChild },\n                React.createElement(VirtualBody, { Row: Row, customData: customData, height: height, isScrolling: isScrolling, onChildScroll: onChildScroll, data: componentProps.data, columns: columns, scrollTop: scrollTop, width: width, expand: expand })))))));\n            const children = mock ? (React.createElement(EmptyBox, { label: label })) : (React.createElement(TableWrapper, { virtualize: virtualize, ariaLabel: ariaLabel, ariaRowCount: ariaRowCount },\n                React.createElement(PfTable, { cells: columns, rows: virtualize && !expandable ? [] : !!Rows ? Rows({ componentProps, selectedResourcesForKind, customData }) : expandableData, gridBreakPoint: gridBreakPoint, onSort: this._onSort, onSelect: onSelect, onExpand: this._onExpand, sortBy: sortBy, className: \"pf-m-compact pf-m-border-rows\", role: virtualize ? 'presentation' : 'grid', \"aria-label\": virtualize ? null : ariaLabel },\n                    React.createElement(TableHeader, null),\n                    !virtualize && React.createElement(TableBody, null)),\n                virtualize && (scrollNode ? renderVirtualizedTable(scrollNode) : React.createElement(WithScrollContainer, null, renderVirtualizedTable))));\n            return (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" }, mock ? (children) : (React.createElement(StatusBox, Object.assign({ skeleton: React.createElement(\"div\", { className: \"loading-skeleton--table\" }) }, this.props), children))));\n        }\n    },\n    _a.propTypes = {\n        customData: PropTypes.any,\n        data: PropTypes.array,\n        unfilteredData: PropTypes.array,\n        NoDataEmptyMsg: PropTypes.func,\n        EmptyMsg: PropTypes.func,\n        expand: PropTypes.bool,\n        fieldSelector: PropTypes.string,\n        filters: filterPropType,\n        Header: PropTypes.func.isRequired,\n        Row: PropTypes.func,\n        Rows: PropTypes.func,\n        loaded: PropTypes.bool,\n        loadError: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n        mock: PropTypes.bool,\n        namespace: PropTypes.string,\n        reduxID: PropTypes.string,\n        reduxIDs: PropTypes.array,\n        selector: PropTypes.object,\n        staticFilters: PropTypes.array,\n        virtualize: PropTypes.bool,\n        currentSortField: PropTypes.string,\n        currentSortFunc: PropTypes.string,\n        currentSortOrder: PropTypes.any,\n        defaultSortField: PropTypes.string,\n        defaultSortFunc: PropTypes.string,\n        label: PropTypes.string,\n        listId: PropTypes.string,\n        sortList: PropTypes.func,\n        onSelect: PropTypes.func,\n        scrollElement: PropTypes.oneOf([PropTypes.object, PropTypes.func]),\n        expandable: PropTypes.bool,\n        expandableRows: PropTypes.func,\n    },\n    _a));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/factory/table.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/factory/table.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getNodeRoles, getMachinePhase, nodeMemory, nodeCPU, nodeFS, nodePods } from '@console/shared';\nimport * as UIActions from '../../actions/ui';\nimport { alertStateOrder, silenceFiringAlertsOrder, silenceStateOrder } from '../../reducers/monitoring';\nimport { ingressValidHosts } from '../ingress';\nimport { convertToBaseValue, EmptyBox, StatusBox, WithScrollContainer } from '../utils';\nimport { getClusterOperatorStatus, getClusterOperatorVersion, getJobTypeAndCompletions, getTemplateInstanceStatus, K8sResourceKind, K8sResourceKindReference, NodeKind, planExternalName, PodKind, podPhase, podReadiness, podRestarts, serviceCatalogStatus, serviceClassDisplayName, MachineKind } from '../../module/k8s';\n\nimport {\n  IRowData, // eslint-disable-line no-unused-vars\n  IExtraData, // eslint-disable-line no-unused-vars\n  Table as PfTable,\n  TableHeader,\n  TableBody,\n  TableGridBreakpoint,\n  SortByDirection,\n  OnSelect,\n  ICell,\n} from '@patternfly/react-table';\n\nimport { CellMeasurerCache, CellMeasurer } from 'react-virtualized';\n\nimport { AutoSizer, VirtualTableBody, WindowScroller } from '@patternfly/react-virtualized-extension';\n\nimport { tableFilters } from './table-filters';\n\nconst rowFiltersToFilterFuncs = rowFilters => {\n  return (rowFilters || []).filter(f => f.type && _.isFunction(f.filter)).reduce((acc, f) => ({ ...acc, [f.type]: f.filter }), {});\n};\n\nconst getAllTableFilters = rowFilters => ({\n  ...tableFilters,\n  ...rowFiltersToFilterFuncs(rowFilters),\n});\n\nconst getFilteredRows = (_filters, rowFilters, objects) => {\n  if (_.isEmpty(_filters)) {\n    return objects;\n  }\n\n  const allTableFilters = getAllTableFilters(rowFilters);\n  let filteredObjects = objects;\n  _.each(_filters, (value, name) => {\n    const filter = allTableFilters[name];\n    if (_.isFunction(filter)) {\n      filteredObjects = _.filter(filteredObjects, o => filter(value, o));\n    }\n  });\n\n  return filteredObjects;\n};\n\nconst filterPropType = (props, propName, componentName) => {\n  if (!props) {\n    return;\n  }\n\n  const allTableFilters = getAllTableFilters(props.rowFilters);\n  for (const key of _.keys(props[propName])) {\n    if (key in allTableFilters || key === 'loadTest') {\n      continue;\n    }\n    return new Error(`Invalid prop '${propName}' in '${componentName}'. '${key}' is not a valid filter type!`);\n  }\n};\n\nconst sorts = {\n  alertStateOrder,\n  daemonsetNumScheduled: daemonset => _.toInteger(_.get(daemonset, 'status.currentNumberScheduled')),\n  dataSize: resource => _.size(_.get(resource, 'data')) + _.size(_.get(resource, 'binaryData')),\n  ingressValidHosts,\n  serviceCatalogStatus,\n  jobCompletions: job => getJobTypeAndCompletions(job).completions,\n  jobType: job => getJobTypeAndCompletions(job).type,\n  nodeReadiness: (node: NodeKind) => {\n    let readiness = _.get(node, 'status.conditions');\n    readiness = _.find(readiness, { type: 'Ready' });\n    return _.get(readiness, 'status');\n  },\n  numReplicas: resource => _.toInteger(_.get(resource, 'status.replicas')),\n  planExternalName,\n  namespaceCPU: (ns: K8sResourceKind): number => UIActions.getNamespaceMetric(ns, 'cpu'),\n  namespaceMemory: (ns: K8sResourceKind): number => UIActions.getNamespaceMetric(ns, 'memory'),\n  podCPU: (pod: PodKind): number => UIActions.getPodMetric(pod, 'cpu'),\n  podMemory: (pod: PodKind): number => UIActions.getPodMetric(pod, 'memory'),\n  podPhase,\n  podReadiness: (pod: PodKind): number => podReadiness(pod).readyCount,\n  podRestarts,\n  pvStorage: pv => _.toInteger(convertToBaseValue(pv?.spec?.capacity?.storage)),\n  pvcStorage: pvc => _.toInteger(convertToBaseValue(pvc?.status?.capacity?.storage)),\n  serviceClassDisplayName,\n  silenceFiringAlertsOrder,\n  silenceStateOrder,\n  string: val => JSON.stringify(val),\n  number: val => _.toNumber(val),\n  getClusterOperatorStatus,\n  getClusterOperatorVersion,\n  getTemplateInstanceStatus,\n  nodeRoles: (node: NodeKind): string => {\n    const roles = getNodeRoles(node);\n    return roles.sort().join(', ');\n  },\n  nodeMemory: (node: NodeKind): number => nodeMemory(node),\n  nodeCPU: (node: NodeKind): number => nodeCPU(node),\n  nodeFS: (node: NodeKind): number => nodeFS(node),\n  machinePhase: (machine: MachineKind): string => getMachinePhase(machine),\n  nodePods: (node: NodeKind): number => nodePods(node),\n};\n\nconst stateToProps = ({ UI }, { customSorts = {}, data = [], defaultSortField = 'metadata.name', defaultSortFunc = undefined, defaultSortOrder = SortByDirection.asc, filters = {}, loaded = false, reduxID = null, reduxIDs = null, staticFilters = [{}], rowFilters = [] }) => {\n  const allFilters = staticFilters ? Object.assign({}, filters, ...staticFilters) : filters;\n  const newData = getFilteredRows(allFilters, rowFilters, data);\n\n  const listId = reduxIDs ? reduxIDs.join(',') : reduxID;\n  // Only default to 'metadata.name' if no `defaultSortFunc`\n  const currentSortField = UI.getIn(['listSorts', listId, 'field'], defaultSortFunc ? undefined : defaultSortField);\n  const currentSortFunc = UI.getIn(['listSorts', listId, 'func'], defaultSortFunc);\n  const currentSortOrder = UI.getIn(['listSorts', listId, 'orderBy'], defaultSortOrder);\n\n  if (loaded) {\n    let sortBy: string | Function = 'metadata.name';\n    if (currentSortField) {\n      sortBy = resource => sorts.string(_.get(resource, currentSortField, ''));\n    } else if (currentSortFunc && customSorts[currentSortFunc]) {\n      // Sort resources by a function in the 'customSorts' prop\n      sortBy = customSorts[currentSortFunc];\n    } else if (currentSortFunc && sorts[currentSortFunc]) {\n      // Sort resources by a function in the 'sorts' object\n      sortBy = sorts[currentSortFunc];\n    }\n\n    const getSortValue = resource => {\n      const val = _.isFunction(sortBy) ? sortBy(resource) : _.get(resource, sortBy as string);\n      return val ?? '';\n    };\n    newData?.sort((a, b) => {\n      const lang = navigator.languages[0] || navigator.language;\n      // Use `localCompare` with `numeric: true` for a natural sort order (e.g., pv-1, pv-9, pv-10)\n      const compareOpts = { numeric: true, ignorePunctuation: true };\n      const aValue = getSortValue(a);\n      const bValue = getSortValue(b);\n      const result: number = Number.isFinite(aValue) && Number.isFinite(bValue) ? aValue - bValue : `${aValue}`.localeCompare(`${bValue}`, lang, compareOpts);\n      if (result !== 0) {\n        return currentSortOrder === SortByDirection.asc ? result : result * -1;\n      }\n\n      // Use name as a secondary sort for a stable sort.\n      const aName = a?.metadata?.name || '';\n      const bName = b?.metadata?.name || '';\n      return aName.localeCompare(bName, lang, compareOpts);\n    });\n  }\n\n  return {\n    currentSortField,\n    currentSortFunc,\n    currentSortOrder,\n    data: newData,\n    unfilteredData: data,\n    listId,\n  };\n};\n\n// Common table row/columns helper SFCs for implementing accessible data grid\nexport const TableRow: React.SFC<TableRowProps> = ({ id, index, trKey, style, className, ...props }) => {\n  return <tr {...props} data-id={id} data-index={index} data-test-rows=\"resource-row\" data-key={trKey} style={style} className={className} role=\"row\" />;\n};\nTableRow.displayName = 'TableRow';\nexport type TableRowProps = {\n  id: any;\n  index: number;\n  trKey: string;\n  style: object;\n  className?: string;\n};\n\nexport const TableData: React.SFC<TableDataProps> = ({ className, ...props }) => {\n  return <td {...props} className={className} role=\"gridcell\" />;\n};\nTableData.displayName = 'TableData';\nexport type TableDataProps = {\n  id?: string;\n  className?: string;\n};\n\nconst TableWrapper: React.SFC<TableWrapperProps> = ({ virtualize, ariaLabel, ariaRowCount, ...props }) => {\n  return virtualize ? <div {...props} role=\"grid\" aria-label={ariaLabel} aria-rowcount={ariaRowCount} /> : <React.Fragment {...props} />;\n};\nexport type TableWrapperProps = {\n  virtualize: boolean;\n  ariaLabel: string;\n  ariaRowCount: number | undefined;\n};\n\nconst VirtualBody: React.SFC<VirtualBodyProps> = props => {\n  const { customData, Row, height, isScrolling, onChildScroll, data, columns, scrollTop, width } = props;\n\n  const cellMeasurementCache = new CellMeasurerCache({\n    fixedWidth: true,\n    minHeight: 44,\n    keyMapper: rowIndex => _.get(props.data[rowIndex], 'metadata.uid', rowIndex),\n  });\n\n  const rowRenderer = ({ index, isScrolling: scrolling, isVisible, key, style, parent }) => {\n    const rowArgs = {\n      obj: data[index],\n      index,\n      columns,\n      isScrolling: scrolling,\n      key,\n      style,\n      customData,\n    };\n\n    const row = Row(rowArgs);\n\n    // do not render non visible elements (this excludes overscan)\n    if (!isVisible) {\n      return null;\n    }\n    return (\n      <CellMeasurer cache={cellMeasurementCache} columnIndex={0} key={key} parent={parent} rowIndex={index}>\n        {row}\n      </CellMeasurer>\n    );\n  };\n\n  return <VirtualTableBody autoHeight className=\"pf-c-table pf-m-compact pf-m-border-rows pf-c-virtualized pf-c-window-scroller\" deferredMeasurementCache={cellMeasurementCache} rowHeight={cellMeasurementCache.rowHeight} height={height || 0} isScrolling={isScrolling} onScroll={onChildScroll} overscanRowCount={10} columns={columns} rows={data} rowCount={data.length} rowRenderer={rowRenderer} scrollTop={scrollTop} width={width} />;\n};\n\nexport type RowFunctionArgs<T = any, C = any> = {\n  obj: T;\n  index: number;\n  columns: any[];\n  isScrolling: boolean;\n  key: string;\n  style: object;\n  customData?: C;\n};\n\nexport type RowFunction<T = any, C = any> = (args: RowFunctionArgs<T, C>) => React.ReactElement;\n\nexport type VirtualBodyProps = {\n  customData?: any;\n  Row: RowFunction;\n  height: number;\n  isScrolling: boolean;\n  onChildScroll: (...args) => any;\n  data: any[];\n  columns: any[];\n  scrollTop: number;\n  width: number;\n  expand: boolean;\n};\n\nexport type TableProps = {\n  customData?: any;\n  customSorts?: { [key: string]: any };\n  data?: any[];\n  defaultSortFunc?: string;\n  defaultSortField?: string;\n  defaultSortOrder?: SortByDirection;\n  filters?: { [key: string]: any };\n  Header: (...args) => any[];\n  loadError?: string | Object;\n  Row?: RowFunction;\n  Rows?: (...args) => any[];\n  'aria-label': string;\n  onSelect?: OnSelect;\n  virtualize?: boolean;\n  NoDataEmptyMsg?: React.ComponentType<{}>;\n  EmptyMsg?: React.ComponentType<{}>;\n  loaded?: boolean;\n  reduxID?: string;\n  reduxIDs?: string[];\n  label?: string;\n  expandable?: boolean;\n  expandableRows?: (...args) => any[];\n};\n\ntype TablePropsFromState = {};\n\ntype TablePropsFromDispatch = {};\n\ntype TableOptionProps = {\n  UI: any;\n};\n\ntype ComponentProps = {\n  data?: any[];\n  filters?: Object;\n  selected?: any;\n  match?: any;\n  kindObj?: K8sResourceKindReference;\n};\n\nexport const Table = connect<TablePropsFromState, TablePropsFromDispatch, TableProps, TableOptionProps>(stateToProps, { sortList: UIActions.sortList }, null, {\n  areStatesEqual: ({ UI: next }, { UI: prev }) => next.get('listSorts') === prev.get('listSorts'),\n})(\n  class TableInner extends React.Component<TableInnerProps, TableInnerState> {\n    static propTypes = {\n      customData: PropTypes.any,\n      data: PropTypes.array,\n      unfilteredData: PropTypes.array,\n      NoDataEmptyMsg: PropTypes.func,\n      EmptyMsg: PropTypes.func,\n      expand: PropTypes.bool,\n      fieldSelector: PropTypes.string,\n      filters: filterPropType,\n      Header: PropTypes.func.isRequired,\n      Row: PropTypes.func,\n      Rows: PropTypes.func,\n      loaded: PropTypes.bool,\n      loadError: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      mock: PropTypes.bool,\n      namespace: PropTypes.string,\n      reduxID: PropTypes.string,\n      reduxIDs: PropTypes.array,\n      selector: PropTypes.object,\n      staticFilters: PropTypes.array,\n      virtualize: PropTypes.bool,\n      currentSortField: PropTypes.string,\n      currentSortFunc: PropTypes.string,\n      currentSortOrder: PropTypes.any,\n      defaultSortField: PropTypes.string,\n      defaultSortFunc: PropTypes.string,\n      label: PropTypes.string,\n      listId: PropTypes.string,\n      sortList: PropTypes.func,\n      onSelect: PropTypes.func,\n      scrollElement: PropTypes.oneOf([PropTypes.object, PropTypes.func]),\n      expandable: PropTypes.bool,\n      expandableRows: PropTypes.func,\n    };\n    _columnShift: number;\n\n    constructor(props) {\n      super(props);\n      const componentProps: ComponentProps = _.pick(props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n      const columns = props.Header(componentProps);\n      const { currentSortField, currentSortFunc, currentSortOrder } = props;\n\n      this._columnShift = props.onSelect ? 1 : 0; //shift indexes by 1 if select provided\n      this._applySort = this._applySort.bind(this);\n      this._onSort = this._onSort.bind(this);\n      this._onExpand = this._onExpand.bind(this);\n      this._handleResize = _.debounce(this._handleResize.bind(this), 100);\n\n      let sortBy = {};\n      if (currentSortField && currentSortOrder) {\n        const columnIndex = _.findIndex(columns, { sortField: currentSortField });\n        if (columnIndex > -1) {\n          sortBy = { index: columnIndex + this._columnShift, direction: currentSortOrder };\n        }\n      } else if (currentSortFunc && currentSortOrder) {\n        const columnIndex = _.findIndex(columns, { sortFunc: currentSortFunc });\n        if (columnIndex > -1) {\n          sortBy = { index: columnIndex + this._columnShift, direction: currentSortOrder };\n        }\n      }\n      this.state = { sortBy, expandableData: [] };\n    }\n\n    componentDidMount() {\n      const componentProps: ComponentProps = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n      const columns = this.props.Header(componentProps);\n      const sp = new URLSearchParams(window.location.search);\n      const columnIndex = _.findIndex(columns, { title: sp.get('sortBy') });\n\n      if (columnIndex > -1) {\n        const sortOrder = sp.get('orderBy') || SortByDirection.asc;\n        const column = columns[columnIndex];\n        this._applySort(column.sortField, column.sortFunc, sortOrder, column.title);\n        this.setState({\n          sortBy: {\n            index: columnIndex + this._columnShift,\n            direction: sortOrder,\n          },\n        });\n      }\n\n      // re-render after resize\n      window.addEventListener('resize', this._handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.expandable && !!this.props.expandableRows) {\n        this.props.expandableRows(this.props.data).then(res => {\n          if (_.isEqual(this.props.currentSortField, prevProps.currentSortField) && _.isEqual(this.props.currentSortOrder, prevProps.currentSortOrder) && res.length === this.state.expandableData.length) {\n            // do nothing\n            console.log('do nothing');\n          } else {\n            console.log('setstate change');\n            this.setState({\n              expandableData: res,\n            });\n          }\n        });\n      }\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this._handleResize);\n    }\n\n    _handleResize() {\n      this.forceUpdate();\n    }\n\n    _applySort(sortField, sortFunc, direction, columnTitle) {\n      const { sortList, listId, currentSortFunc } = this.props;\n      const applySort = _.partial(sortList, listId);\n      applySort(sortField, sortFunc || currentSortFunc, direction, columnTitle);\n    }\n\n    _onSort(event, index, direction) {\n      event.preventDefault();\n      const componentProps: ComponentProps = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n      const columns = this.props.Header(componentProps);\n      const sortColumn = columns[index - this._columnShift];\n      this._applySort(sortColumn.sortField, sortColumn.sortFunc, direction, sortColumn.title);\n      this.setState({\n        sortBy: {\n          index,\n          direction,\n        },\n      });\n    }\n\n    _onExpand = (event, rowIndex, colIndex, isOpen, rowData, extraData) => {\n      const { expandableData } = this.state;\n      let rows = _.cloneDeep(expandableData);\n      if (!isOpen) {\n        rows[rowIndex].cells.forEach((cell: ICell) => {\n          if (cell.props) cell.props.isOpen = false;\n        });\n        (rows[rowIndex].cells[colIndex] as ICell).props.isOpen = true;\n        rows[rowIndex].isOpen = true;\n      } else {\n        (rows[rowIndex].cells[colIndex] as ICell).props.isOpen = false;\n        rows[rowIndex].isOpen = rows[rowIndex].cells.some((cell: ICell) => cell.props && cell.props.isOpen);\n      }\n      this.setState({\n        expandableData: rows,\n      });\n    };\n\n    render() {\n      const { scrollElement, Rows, Row, expand, label, mock, onSelect, selectedResourcesForKind, 'aria-label': ariaLabel, virtualize = true, expandable = false, customData, gridBreakPoint = TableGridBreakpoint.none, Header } = this.props;\n      const { sortBy, expandableData } = this.state;\n      const componentProps: any = _.pick(this.props, ['data', 'filters', 'selected', 'match', 'kindObj']);\n      const columns = Header(componentProps);\n      const ariaRowCount = componentProps.data && componentProps.data.length;\n      const scrollNode = typeof scrollElement === 'function' ? scrollElement() : scrollElement;\n      const renderVirtualizedTable = scrollContainer => (\n        <WindowScroller scrollElement={scrollContainer}>\n          {({ height, isScrolling, registerChild, onChildScroll, scrollTop }) => (\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <div ref={registerChild}>\n                  <VirtualBody Row={Row} customData={customData} height={height} isScrolling={isScrolling} onChildScroll={onChildScroll} data={componentProps.data} columns={columns} scrollTop={scrollTop} width={width} expand={expand} />\n                </div>\n              )}\n            </AutoSizer>\n          )}\n        </WindowScroller>\n      );\n      const children = mock ? (\n        <EmptyBox label={label} />\n      ) : (\n        <TableWrapper virtualize={virtualize} ariaLabel={ariaLabel} ariaRowCount={ariaRowCount}>\n          <PfTable cells={columns} rows={virtualize && !expandable ? [] : !!Rows ? Rows({ componentProps, selectedResourcesForKind, customData }) : expandableData} gridBreakPoint={gridBreakPoint} onSort={this._onSort} onSelect={onSelect} onExpand={this._onExpand} sortBy={sortBy} className=\"pf-m-compact pf-m-border-rows\" role={virtualize ? 'presentation' : 'grid'} aria-label={virtualize ? null : ariaLabel}>\n            <TableHeader />\n            {!virtualize && <TableBody />}\n          </PfTable>\n          {virtualize && (scrollNode ? renderVirtualizedTable(scrollNode) : <WithScrollContainer>{renderVirtualizedTable}</WithScrollContainer>)}\n        </TableWrapper>\n      );\n      return (\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          {mock ? (\n            children\n          ) : (\n            <StatusBox skeleton={<div className=\"loading-skeleton--table\" />} {...this.props}>\n              {children}\n            </StatusBox>\n          )}\n        </div>\n      );\n    }\n  },\n);\n\nexport type TableInnerProps = {\n  'aria-label': string;\n  customData?: any;\n  currentSortField?: string;\n  currentSortFunc?: string;\n  currentSortOrder?: any;\n  data?: any[];\n  defaultSortField?: string;\n  defaultSortFunc?: string;\n  unfilteredData?: any[];\n  NoDataEmptyMsg?: React.ComponentType<{}>;\n  EmptyMsg?: React.ComponentType<{}>;\n  expand?: boolean;\n  fieldSelector?: string;\n  filters?: { [name: string]: any };\n  Header: (...args) => any[];\n  label?: string;\n  listId?: string;\n  loaded?: boolean;\n  loadError?: string | Object;\n  mock?: boolean;\n  namespace?: string;\n  reduxID?: string;\n  reduxIDs?: string[];\n  Row?: RowFunction;\n  Rows?: (...args) => any[];\n  selector?: Object;\n  sortList?: (listId: string, field: string, func: any, orderBy: string, column: string) => any;\n  selectedResourcesForKind?: string[];\n  onSelect?: (event: React.MouseEvent, isSelected: boolean, rowIndex: number, rowData: IRowData, extraData: IExtraData) => void;\n  staticFilters?: any[];\n  rowFilters?: any[];\n  virtualize?: boolean;\n  gridBreakPoint?: 'grid' | 'grid-md' | 'grid-lg' | 'grid-xl' | 'grid-2xl';\n  scrollElement?: HTMLElement | (() => HTMLElement);\n  expandable?: boolean;\n  expandableRows?: (...args) => any;\n};\n\nexport type TableInnerState = {\n  sortBy: object;\n  expandableData: any[];\n};\n"]}]}