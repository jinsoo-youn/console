{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/pagerduty-receiver-form.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/pagerduty-receiver-form.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable camelcase */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { RadioInput } from '../../radio';\nimport { SendResolvedAlertsCheckbox, SaveAsDefaultCheckbox, } from './alert-manager-receiver-forms';\nimport { ExpandCollapse } from '../../utils';\nconst GLOBAL_FIELDS = [\n    'pagerduty_url',\n    'pagerduty_send_resolved',\n    'pagerduty_client',\n    'pagerduty_client_url',\n    'pagerduty_description',\n    'pagerduty_severity',\n];\nexport const Form = ({ globals, formValues, dispatchFormChange }) => {\n    return (React.createElement(\"div\", { \"data-test-id\": \"pagerduty-receiver-form\" },\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(\"label\", { className: \"control-label\", htmlFor: \"integration-type-events\" }, \"Integration Type\"),\n            React.createElement(\"div\", null,\n                React.createElement(RadioInput, { title: \"Events API v2\", id: \"integration-type-events\", value: \"events\", onChange: (e) => dispatchFormChange({\n                        type: 'setFormValues',\n                        payload: { pagerdutyIntegrationKeyType: e.target.value },\n                    }), checked: formValues.pagerdutyIntegrationKeyType === 'events', \"aria-checked\": formValues.pagerdutyIntegrationKeyType === 'events', inline: true }),\n                React.createElement(RadioInput, { title: \"Prometheus\", name: \"pagerdutyIntegrationKeyType\", \"data-test-id\": \"integration-type-prometheus\", value: \"prometheus\", onChange: (e) => dispatchFormChange({\n                        type: 'setFormValues',\n                        payload: { pagerdutyIntegrationKeyType: e.target.value },\n                    }), checked: formValues.pagerdutyIntegrationKeyType === 'prometheus', \"aria-checked\": formValues.pagerdutyIntegrationKeyType === 'prometheus', inline: true }))),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(\"label\", { \"data-test-id\": \"pagerduty-key-label\", className: \"control-label co-required\", htmlFor: \"integration-key\" },\n                formValues.pagerdutyIntegrationKeyType === 'events' ? 'Routing' : 'Service',\n                \" Key\"),\n            React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", \"aria-describedby\": \"integration-key-help\", id: \"integration-key\", \"data-test-id\": \"integration-key\", value: formValues.pagerdutyIntegrationKey, onChange: (e) => dispatchFormChange({\n                    type: 'setFormValues',\n                    payload: { pagerdutyIntegrationKey: e.target.value },\n                }) }),\n            React.createElement(\"div\", { className: \"help-block\", id: \"integration-key-help\" }, \"PagerDuty integration key.\")),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(\"label\", { \"data-test-id\": \"pagerduty-url-label\", className: \"control-label co-required\", htmlFor: \"pagerduty-url\" }, \"PagerDuty URL\"),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-7\" },\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", id: \"pagerduty-url\", \"aria-describedby\": \"pagerduty-url-help\", \"data-test-id\": \"pagerduty-url\", value: formValues.pagerduty_url, onChange: (e) => dispatchFormChange({\n                            type: 'setFormValues',\n                            payload: { pagerduty_url: e.target.value },\n                        }) })),\n                React.createElement(\"div\", { className: \"col-sm-5\" },\n                    React.createElement(SaveAsDefaultCheckbox, { formField: \"pagerdutySaveAsDefault\", disabled: formValues.pagerduty_url === (globals === null || globals === void 0 ? void 0 : globals.pagerduty_url), label: \"Save as default PagerDuty URL\", formValues: formValues, dispatchFormChange: dispatchFormChange, tooltip: \"Checking this box will write the url to the global section of the\\n                configuration file where it will become default url for future PagerDuty receivers.\" }))),\n            React.createElement(\"div\", { className: \"help-block\", id: \"pagerduty-url-help\" }, \"The URL of your PagerDuty Installation.\")),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(ExpandCollapse, { textCollapsed: \"Show advanced configuration\", textExpanded: \"Hide advanced configuration\" },\n                React.createElement(\"div\", { className: \"co-form-subsection\" },\n                    React.createElement(SendResolvedAlertsCheckbox, { formField: \"pagerduty_send_resolved\", formValues: formValues, dispatchFormChange: dispatchFormChange }),\n                    React.createElement(\"h3\", null, \"Client Details\"),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"control-label\", htmlFor: \"pagerduty-client\" }, \"Client\"),\n                        React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", \"aria-describedby\": \"client-help\", id: \"pagerduty-client\", \"data-test-id\": \"pagerduty-client\", value: formValues.pagerduty_client, onChange: (e) => dispatchFormChange({\n                                type: 'setFormValues',\n                                payload: { pagerduty_client: e.target.value },\n                            }) }),\n                        React.createElement(\"div\", { className: \"help-block\", id: \"client-help\" }, \"The client identification of the Alertmanager.\")),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"control-label\", htmlFor: \"pagerduty-client-url\" }, \"Client URL\"),\n                        React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", \"aria-describedby\": \"client-url-help\", id: \"pagerduty-client-url\", \"data-test-id\": \"pagerduty-client-url\", value: formValues.pagerduty_client_url, onChange: (e) => dispatchFormChange({\n                                type: 'setFormValues',\n                                payload: { pagerduty_client_url: e.target.value },\n                            }) }),\n                        React.createElement(\"div\", { className: \"help-block\", id: \"client-url-help\" }, \"A backlink to the sender of the notification.\")),\n                    React.createElement(\"h3\", null, \"Incident Details\"),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"control-label\", htmlFor: \"pagerduty-description\" }, \"Description\"),\n                        React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", \"aria-describedby\": \"description-help\", id: \"pagerduty-description\", \"data-test-id\": \"pagerduty-description\", value: formValues.pagerduty_description, onChange: (e) => dispatchFormChange({\n                                type: 'setFormValues',\n                                payload: { pagerduty_description: e.target.value },\n                            }) }),\n                        React.createElement(\"div\", { className: \"help-block\", id: \"description-help\" }, \"Description of the incident.\")),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"control-label\", htmlFor: \"pagerduty-severity\" }, \"Severity\"),\n                        React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", \"aria-describedby\": \"severity-help\", id: \"pagerduty-severity\", \"data-test-id\": \"pagerduty-severity\", value: formValues.pagerduty_severity, onChange: (e) => dispatchFormChange({\n                                type: 'setFormValues',\n                                payload: { pagerduty_severity: e.target.value },\n                            }) }),\n                        React.createElement(\"div\", { className: \"help-block\", id: \"severity-help\" }, \"Severity of the incident.\")))))));\n};\nexport const getInitialValues = (globals, receiverConfig) => {\n    const initValues = { pagerdutySaveAsDefault: false };\n    initValues.pagerdutyIntegrationKeyType = _.has(receiverConfig, 'service_key')\n        ? 'prometheus'\n        : 'events';\n    initValues.pagerdutyIntegrationKey = (receiverConfig === null || receiverConfig === void 0 ? void 0 : receiverConfig.service_key) || (receiverConfig === null || receiverConfig === void 0 ? void 0 : receiverConfig.routing_key);\n    GLOBAL_FIELDS.forEach((fld) => {\n        const configFieldName = fld.substring(fld.indexOf('_') + 1); //strip off leading 'pagerduty_' prefix\n        initValues[fld] = _.get(receiverConfig, configFieldName, globals[fld]);\n    });\n    return initValues;\n};\nexport const isFormInvalid = (formValues) => {\n    return !formValues.pagerdutyIntegrationKey;\n};\nexport const updateGlobals = (globals, formValues) => {\n    const updatedGlobals = {};\n    if (formValues.pagerdutySaveAsDefault && formValues.pagerduty_url) {\n        _.set(updatedGlobals, 'pagerduty_url', formValues.pagerduty_url);\n    }\n    return updatedGlobals;\n};\nexport const createReceiverConfig = (globals, formValues, receiverConfig) => {\n    // handle integration key props\n    _.unset(receiverConfig, 'routing_key');\n    _.unset(receiverConfig, 'service_key');\n    const pagerdutyIntegrationKeyName = `${formValues.pagerdutyIntegrationKeyType === 'events' ? 'routing' : 'service'}_key`;\n    _.set(receiverConfig, pagerdutyIntegrationKeyName, formValues.pagerdutyIntegrationKey);\n    // Only save these props in formValues different from globals\n    GLOBAL_FIELDS.forEach((fld) => {\n        const formValue = formValues[fld];\n        const configFieldName = fld.substring(fld.indexOf('_') + 1); //strip off leading 'pagerduty_' prefix\n        if (formValue !== globals[fld]) {\n            if (fld === 'pagerduty_url' && formValues.pagerdutySaveAsDefault) {\n                _.unset(receiverConfig, 'url'); // saving as global so unset in config\n            }\n            else {\n                _.set(receiverConfig, configFieldName, formValue);\n            }\n        }\n        else {\n            _.unset(receiverConfig, configFieldName); // equals global, unset in config so global is used\n        }\n    });\n    return receiverConfig;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/pagerduty-receiver-form.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/pagerduty-receiver-form.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { RadioInput } from '../../radio';\nimport {\n  FormProps,\n  SendResolvedAlertsCheckbox,\n  SaveAsDefaultCheckbox,\n} from './alert-manager-receiver-forms';\nimport { ExpandCollapse } from '../../utils';\n\nconst GLOBAL_FIELDS = [\n  'pagerduty_url',\n  'pagerduty_send_resolved',\n  'pagerduty_client',\n  'pagerduty_client_url',\n  'pagerduty_description',\n  'pagerduty_severity',\n];\n\nexport const Form: React.FC<FormProps> = ({ globals, formValues, dispatchFormChange }) => {\n  return (\n    <div data-test-id=\"pagerduty-receiver-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor=\"integration-type-events\">\n          Integration Type\n        </label>\n        <div>\n          <RadioInput\n            title=\"Events API v2\"\n            id=\"integration-type-events\"\n            value=\"events\"\n            onChange={(e) =>\n              dispatchFormChange({\n                type: 'setFormValues',\n                payload: { pagerdutyIntegrationKeyType: e.target.value },\n              })\n            }\n            checked={formValues.pagerdutyIntegrationKeyType === 'events'}\n            aria-checked={formValues.pagerdutyIntegrationKeyType === 'events'}\n            inline\n          />\n          <RadioInput\n            title=\"Prometheus\"\n            name=\"pagerdutyIntegrationKeyType\"\n            data-test-id=\"integration-type-prometheus\"\n            value=\"prometheus\"\n            onChange={(e) =>\n              dispatchFormChange({\n                type: 'setFormValues',\n                payload: { pagerdutyIntegrationKeyType: e.target.value },\n              })\n            }\n            checked={formValues.pagerdutyIntegrationKeyType === 'prometheus'}\n            aria-checked={formValues.pagerdutyIntegrationKeyType === 'prometheus'}\n            inline\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label\n          data-test-id=\"pagerduty-key-label\"\n          className=\"control-label co-required\"\n          htmlFor=\"integration-key\"\n        >\n          {formValues.pagerdutyIntegrationKeyType === 'events' ? 'Routing' : 'Service'} Key\n        </label>\n        <input\n          className=\"pf-c-form-control\"\n          type=\"text\"\n          aria-describedby=\"integration-key-help\"\n          id=\"integration-key\"\n          data-test-id=\"integration-key\"\n          value={formValues.pagerdutyIntegrationKey}\n          onChange={(e) =>\n            dispatchFormChange({\n              type: 'setFormValues',\n              payload: { pagerdutyIntegrationKey: e.target.value },\n            })\n          }\n        />\n        <div className=\"help-block\" id=\"integration-key-help\">\n          PagerDuty integration key.\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label\n          data-test-id=\"pagerduty-url-label\"\n          className=\"control-label co-required\"\n          htmlFor=\"pagerduty-url\"\n        >\n          PagerDuty URL\n        </label>\n        <div className=\"row\">\n          <div className=\"col-sm-7\">\n            <input\n              className=\"pf-c-form-control\"\n              type=\"text\"\n              id=\"pagerduty-url\"\n              aria-describedby=\"pagerduty-url-help\"\n              data-test-id=\"pagerduty-url\"\n              value={formValues.pagerduty_url}\n              onChange={(e) =>\n                dispatchFormChange({\n                  type: 'setFormValues',\n                  payload: { pagerduty_url: e.target.value },\n                })\n              }\n            />\n          </div>\n          <div className=\"col-sm-5\">\n            <SaveAsDefaultCheckbox\n              formField=\"pagerdutySaveAsDefault\"\n              disabled={formValues.pagerduty_url === globals?.pagerduty_url}\n              label=\"Save as default PagerDuty URL\"\n              formValues={formValues}\n              dispatchFormChange={dispatchFormChange}\n              tooltip=\"Checking this box will write the url to the global section of the\n                configuration file where it will become default url for future PagerDuty receivers.\"\n            />\n          </div>\n        </div>\n        <div className=\"help-block\" id=\"pagerduty-url-help\">\n          The URL of your PagerDuty Installation.\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <ExpandCollapse\n          textCollapsed=\"Show advanced configuration\"\n          textExpanded=\"Hide advanced configuration\"\n        >\n          <div className=\"co-form-subsection\">\n            <SendResolvedAlertsCheckbox\n              formField=\"pagerduty_send_resolved\"\n              formValues={formValues}\n              dispatchFormChange={dispatchFormChange}\n            />\n            <h3>Client Details</h3>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"pagerduty-client\">\n                Client\n              </label>\n              <input\n                className=\"pf-c-form-control\"\n                type=\"text\"\n                aria-describedby=\"client-help\"\n                id=\"pagerduty-client\"\n                data-test-id=\"pagerduty-client\"\n                value={formValues.pagerduty_client}\n                onChange={(e) =>\n                  dispatchFormChange({\n                    type: 'setFormValues',\n                    payload: { pagerduty_client: e.target.value },\n                  })\n                }\n              />\n              <div className=\"help-block\" id=\"client-help\">\n                The client identification of the Alertmanager.\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"pagerduty-client-url\">\n                Client URL\n              </label>\n              <input\n                className=\"pf-c-form-control\"\n                type=\"text\"\n                aria-describedby=\"client-url-help\"\n                id=\"pagerduty-client-url\"\n                data-test-id=\"pagerduty-client-url\"\n                value={formValues.pagerduty_client_url}\n                onChange={(e) =>\n                  dispatchFormChange({\n                    type: 'setFormValues',\n                    payload: { pagerduty_client_url: e.target.value },\n                  })\n                }\n              />\n              <div className=\"help-block\" id=\"client-url-help\">\n                A backlink to the sender of the notification.\n              </div>\n            </div>\n            <h3>Incident Details</h3>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"pagerduty-description\">\n                Description\n              </label>\n              <input\n                className=\"pf-c-form-control\"\n                type=\"text\"\n                aria-describedby=\"description-help\"\n                id=\"pagerduty-description\"\n                data-test-id=\"pagerduty-description\"\n                value={formValues.pagerduty_description}\n                onChange={(e) =>\n                  dispatchFormChange({\n                    type: 'setFormValues',\n                    payload: { pagerduty_description: e.target.value },\n                  })\n                }\n              />\n              <div className=\"help-block\" id=\"description-help\">\n                Description of the incident.\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"pagerduty-severity\">\n                Severity\n              </label>\n              <input\n                className=\"pf-c-form-control\"\n                type=\"text\"\n                aria-describedby=\"severity-help\"\n                id=\"pagerduty-severity\"\n                data-test-id=\"pagerduty-severity\"\n                value={formValues.pagerduty_severity}\n                onChange={(e) =>\n                  dispatchFormChange({\n                    type: 'setFormValues',\n                    payload: { pagerduty_severity: e.target.value },\n                  })\n                }\n              />\n              <div className=\"help-block\" id=\"severity-help\">\n                Severity of the incident.\n              </div>\n            </div>\n          </div>\n        </ExpandCollapse>\n      </div>\n    </div>\n  );\n};\n\nexport const getInitialValues = (globals, receiverConfig) => {\n  const initValues: any = { pagerdutySaveAsDefault: false };\n\n  initValues.pagerdutyIntegrationKeyType = _.has(receiverConfig, 'service_key')\n    ? 'prometheus'\n    : 'events';\n  initValues.pagerdutyIntegrationKey = receiverConfig?.service_key || receiverConfig?.routing_key;\n\n  GLOBAL_FIELDS.forEach((fld) => {\n    const configFieldName = fld.substring(fld.indexOf('_') + 1); //strip off leading 'pagerduty_' prefix\n    initValues[fld] = _.get(receiverConfig, configFieldName, globals[fld]);\n  });\n\n  return initValues;\n};\n\nexport const isFormInvalid = (formValues): boolean => {\n  return !formValues.pagerdutyIntegrationKey;\n};\n\nexport const updateGlobals = (globals, formValues) => {\n  const updatedGlobals = {};\n  if (formValues.pagerdutySaveAsDefault && formValues.pagerduty_url) {\n    _.set(updatedGlobals, 'pagerduty_url', formValues.pagerduty_url);\n  }\n  return updatedGlobals;\n};\n\nexport const createReceiverConfig = (globals, formValues, receiverConfig) => {\n  // handle integration key props\n  _.unset(receiverConfig, 'routing_key');\n  _.unset(receiverConfig, 'service_key');\n  const pagerdutyIntegrationKeyName = `${\n    formValues.pagerdutyIntegrationKeyType === 'events' ? 'routing' : 'service'\n  }_key`;\n  _.set(receiverConfig, pagerdutyIntegrationKeyName, formValues.pagerdutyIntegrationKey);\n\n  // Only save these props in formValues different from globals\n  GLOBAL_FIELDS.forEach((fld) => {\n    const formValue = formValues[fld];\n    const configFieldName = fld.substring(fld.indexOf('_') + 1); //strip off leading 'pagerduty_' prefix\n    if (formValue !== globals[fld]) {\n      if (fld === 'pagerduty_url' && formValues.pagerdutySaveAsDefault) {\n        _.unset(receiverConfig, 'url'); // saving as global so unset in config\n      } else {\n        _.set(receiverConfig, configFieldName, formValue);\n      }\n    } else {\n      _.unset(receiverConfig, configFieldName); // equals global, unset in config so global is used\n    }\n  });\n\n  return receiverConfig;\n};\n"]}]}