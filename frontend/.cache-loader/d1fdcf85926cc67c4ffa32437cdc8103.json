{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/resources/HelmReleaseResources.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/resources/HelmReleaseResources.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { safeLoadAll } from 'js-yaml';\nimport { MultiListPage } from '@console/internal/components/factory';\nimport { referenceFor, modelFor, referenceForModel, } from '@console/internal/module/k8s';\nimport { flattenReleaseResources } from '../../helm-utils';\nimport HelmReleaseResourcesList from './HelmReleaseResourcesList';\nconst HelmReleaseResources = ({ match, customData }) => {\n    const namespace = match.params.ns;\n    const helmManifest = customData ? safeLoadAll(customData.manifest) : [];\n    const helmManifestResources = helmManifest.map((resource) => {\n        const resourceKind = referenceFor(resource);\n        const model = modelFor(resourceKind);\n        return Object.assign(Object.assign({}, (model.namespaced ? { namespace } : {})), { kind: model.crd ? referenceForModel(model) : model.kind, name: resource.metadata.name, prop: `${resource.metadata.name}-${resource.kind.toLowerCase()}`, isList: false, optional: true });\n    });\n    return (React.createElement(MultiListPage, { filterLabel: \"Resources by name\", resources: helmManifestResources, flatten: flattenReleaseResources, label: \"Resources\", ListComponent: HelmReleaseResourcesList }));\n};\nexport default HelmReleaseResources;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/resources/HelmReleaseResources.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/resources/HelmReleaseResources.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AACtC,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AAErE,OAAO,EAEL,YAAY,EACZ,QAAQ,EACR,iBAAiB,GAClB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,uBAAuB,EAAE,MAAM,kBAAkB,CAAC;AAE3D,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAUlE,MAAM,oBAAoB,GAAwC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE;IAC1F,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IAClC,MAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,MAAM,qBAAqB,GAAuB,YAAY,CAAC,GAAG,CAChE,CAAC,QAAyB,EAAE,EAAE;QAC5B,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrC,uCACK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAC1C,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EACvD,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAC5B,IAAI,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAChE,MAAM,EAAE,KAAK,EACb,QAAQ,EAAE,IAAI,IACd;IACJ,CAAC,CACF,CAAC;IACF,OAAO,CACL,oBAAC,aAAa,IACZ,WAAW,EAAC,mBAAmB,EAC/B,SAAS,EAAE,qBAAqB,EAChC,OAAO,EAAE,uBAAuB,EAChC,KAAK,EAAC,WAAW,EACjB,aAAa,EAAE,wBAAwB,GACvC,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["import * as React from 'react';\nimport { match as RMatch } from 'react-router';\nimport { safeLoadAll } from 'js-yaml';\nimport { MultiListPage } from '@console/internal/components/factory';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  modelFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { flattenReleaseResources } from '../../helm-utils';\nimport { HelmRelease } from '../../helm-types';\nimport HelmReleaseResourcesList from './HelmReleaseResourcesList';\n\nexport interface HelmReleaseResourcesProps {\n  match: RMatch<{\n    ns?: string;\n    name?: string;\n  }>;\n  customData: HelmRelease;\n}\n\nconst HelmReleaseResources: React.FC<HelmReleaseResourcesProps> = ({ match, customData }) => {\n  const namespace = match.params.ns;\n  const helmManifest = customData ? safeLoadAll(customData.manifest) : [];\n  const helmManifestResources: FirehoseResource[] = helmManifest.map(\n    (resource: K8sResourceKind) => {\n      const resourceKind = referenceFor(resource);\n      const model = modelFor(resourceKind);\n      return {\n        ...(model.namespaced ? { namespace } : {}),\n        kind: model.crd ? referenceForModel(model) : model.kind,\n        name: resource.metadata.name,\n        prop: `${resource.metadata.name}-${resource.kind.toLowerCase()}`,\n        isList: false,\n        optional: true,\n      };\n    },\n  );\n  return (\n    <MultiListPage\n      filterLabel=\"Resources by name\"\n      resources={helmManifestResources}\n      flatten={flattenReleaseResources}\n      label=\"Resources\"\n      ListComponent={HelmReleaseResourcesList}\n    />\n  );\n};\n\nexport default HelmReleaseResources;\n"]}]}