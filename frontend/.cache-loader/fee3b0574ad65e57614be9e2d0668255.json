{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/action.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/action.ts","mtime":1616735742400},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { action } from 'typesafe-actions';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from './const';\nexport var Actions;\n(function (Actions) {\n    Actions[\"topologyFilters\"] = \"topologyFilters\";\n})(Actions || (Actions = {}));\nexport const setTopologyFilters = (filters) => {\n    localStorage.setItem(TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY, JSON.stringify(filters.display));\n    return action(Actions.topologyFilters, { filters });\n};\nconst actions = {\n    setTopologyFilters,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/action.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/action.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAc,MAAM,kBAAkB,CAAC;AAEtD,OAAO,EAAE,0CAA0C,EAAE,MAAM,SAAS,CAAC;AAErE,MAAM,CAAN,IAAY,OAEX;AAFD,WAAY,OAAO;IACjB,8CAAmC,CAAA;AACrC,CAAC,EAFW,OAAO,KAAP,OAAO,QAElB;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,OAAwB,EAAE,EAAE;IAC7D,YAAY,CAAC,OAAO,CAAC,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAClG,OAAO,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG;IACd,kBAAkB;CACnB,CAAC","sourcesContent":["import { action, ActionType } from 'typesafe-actions';\nimport { TopologyFilters } from '../filters/filter-types';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from './const';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n}\n\nexport const setTopologyFilters = (filters: TopologyFilters) => {\n  localStorage.setItem(TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY, JSON.stringify(filters.display));\n  return action(Actions.topologyFilters, { filters });\n};\n\nconst actions = {\n  setTopologyFilters,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n"]}]}