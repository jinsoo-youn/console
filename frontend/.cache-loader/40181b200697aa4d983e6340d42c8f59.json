{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/integer/integer.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/integer/integer.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { TextInput } from '@patternfly/react-core';\nimport { getSequence, setNativeValue } from '../../../utils/utils';\nimport { isMinus, KEY_CODES, INPUT_NAVIGATION_KEYS, INPUT_CTRL_COMBINATIONS_KEYS, } from '../../../constants/keys';\nimport './integer.scss';\nconst NON_NEGATIVE_INTEGER_KEYS = [\n    ...INPUT_NAVIGATION_KEYS,\n    ...getSequence(KEY_CODES[0], KEY_CODES[9]),\n    ...getSequence(KEY_CODES.NUMPAD[0], KEY_CODES.NUMPAD[9]),\n];\nconst INTEGER_KEYS = [\n    ...NON_NEGATIVE_INTEGER_KEYS,\n    KEY_CODES.MINUS,\n    KEY_CODES.HYPHEN_MINUS,\n    KEY_CODES.NUMPAD.SUBTRACT,\n];\nconst POSITIVE_INT_REGEX = /^[1-9]\\d*$/;\nconst NON_NEGATIVE_INT_REGEX = /^(0|[1-9]\\d*)$/;\nconst INT_REGEX = /^(-?0|-?[1-9]\\d*)$/;\nconst PRECEEDING_ZEROS_POSITIVE_INT_REGEX = /^0*([1-9]\\d*)$/;\nconst PRECEEDING_ZEROS_INT_REGEX = /^(-?)0*([1-9]\\d*)$/;\nconst fixPrecedingZerosPositiveInt = (value) => {\n    const match = PRECEEDING_ZEROS_POSITIVE_INT_REGEX.exec(value);\n    return match && match.length === 2 ? match[1] : '';\n};\nconst fixPrecedingZerosNonNegativeInt = (value) => {\n    const match = PRECEEDING_ZEROS_POSITIVE_INT_REGEX.exec(value);\n    return match && match.length === 2 ? match[1] : '0';\n};\nconst fixInt = (value, oldValue, keyCode) => {\n    if (value.length === 0 && isMinus(keyCode)) {\n        if (oldValue) {\n            return oldValue < 0 || oldValue === '-0' ? oldValue : `-${oldValue}`;\n        }\n        return '-0';\n    }\n    const match = PRECEEDING_ZEROS_INT_REGEX.exec(value);\n    if (match && match.length === 3) {\n        if (match[1]) {\n            return `${match[1]}${match[2]}`;\n        }\n        return match[2];\n    }\n    return '0';\n};\nconst isInputValid = (allowedKeys, keyCode, targetValue, additionalValidation) => {\n    if (allowedKeys.includes(keyCode)) {\n        return additionalValidation ? additionalValidation(keyCode, targetValue) : true;\n    }\n    return false;\n};\nconst additionalPositiveValidation = (keyCode, targetValue) => !(targetValue === '' && (keyCode === KEY_CODES[0] || keyCode === KEY_CODES.NUMPAD[0]));\nexport const Integer = (_a) => {\n    var { id, value, isDisabled, defaultValue, onChange, isPositive, isNonNegative, className, isFullWidth, isValid } = _a, restProps = __rest(_a, [\"id\", \"value\", \"isDisabled\", \"defaultValue\", \"onChange\", \"isPositive\", \"isNonNegative\", \"className\", \"isFullWidth\", \"isValid\"]);\n    let allowedKeys;\n    let validRegex;\n    let fixAfterValue;\n    let min;\n    let additionalValidation;\n    if (isPositive) {\n        allowedKeys = NON_NEGATIVE_INTEGER_KEYS;\n        validRegex = POSITIVE_INT_REGEX;\n        fixAfterValue = fixPrecedingZerosPositiveInt;\n        min = 1;\n        additionalValidation = additionalPositiveValidation;\n    }\n    else if (isNonNegative) {\n        allowedKeys = NON_NEGATIVE_INTEGER_KEYS;\n        validRegex = NON_NEGATIVE_INT_REGEX;\n        fixAfterValue = fixPrecedingZerosNonNegativeInt;\n        min = 0;\n    }\n    else {\n        allowedKeys = INTEGER_KEYS;\n        validRegex = INT_REGEX;\n        fixAfterValue = fixInt;\n    }\n    const onKeydown = React.useCallback((e) => {\n        const { keyCode, target, ctrlKey, metaKey } = e;\n        const ctrlDown = ctrlKey || metaKey; // Mac support\n        // check for ctrl+c, a, v and x\n        if (ctrlDown && INPUT_CTRL_COMBINATIONS_KEYS.includes(keyCode)) {\n            return true;\n        }\n        if (!isInputValid(allowedKeys, keyCode, target.value, additionalValidation)) {\n            e.preventDefault();\n            return false;\n        }\n        const oldValue = target.value;\n        window.setTimeout(() => {\n            if (!validRegex.test(target.value)) {\n                const v = fixAfterValue(target.value, oldValue, keyCode);\n                setNativeValue(target, v);\n                target.dispatchEvent(new Event('input', {\n                    bubbles: true,\n                    cancelable: true,\n                }));\n            }\n        }, 0);\n        return true;\n    }, [additionalValidation, allowedKeys, fixAfterValue, validRegex]);\n    return (React.createElement(TextInput, Object.assign({}, restProps, { id: id, type: \"number\", onKeyDown: onKeydown, min: min, value: value, defaultValue: defaultValue, onChange: onChange, className: classNames(className, {\n            'kubevirt-integer-component': isFullWidth,\n        }), isDisabled: isDisabled })));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/integer/integer.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/integer/integer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { TextInput } from '@patternfly/react-core';\nimport { getSequence, setNativeValue } from '../../../utils/utils';\nimport {\n  isMinus,\n  KEY_CODES,\n  INPUT_NAVIGATION_KEYS,\n  INPUT_CTRL_COMBINATIONS_KEYS,\n} from '../../../constants/keys';\n\nimport './integer.scss';\n\nconst NON_NEGATIVE_INTEGER_KEYS = [\n  ...INPUT_NAVIGATION_KEYS,\n  ...getSequence(KEY_CODES[0], KEY_CODES[9]),\n  ...getSequence(KEY_CODES.NUMPAD[0], KEY_CODES.NUMPAD[9]),\n];\n\nconst INTEGER_KEYS = [\n  ...NON_NEGATIVE_INTEGER_KEYS,\n  KEY_CODES.MINUS,\n  KEY_CODES.HYPHEN_MINUS,\n  KEY_CODES.NUMPAD.SUBTRACT,\n];\n\nconst POSITIVE_INT_REGEX = /^[1-9]\\d*$/;\nconst NON_NEGATIVE_INT_REGEX = /^(0|[1-9]\\d*)$/;\nconst INT_REGEX = /^(-?0|-?[1-9]\\d*)$/;\n\nconst PRECEEDING_ZEROS_POSITIVE_INT_REGEX = /^0*([1-9]\\d*)$/;\nconst PRECEEDING_ZEROS_INT_REGEX = /^(-?)0*([1-9]\\d*)$/;\n\nconst fixPrecedingZerosPositiveInt = (value) => {\n  const match = PRECEEDING_ZEROS_POSITIVE_INT_REGEX.exec(value);\n  return match && match.length === 2 ? match[1] : '';\n};\n\nconst fixPrecedingZerosNonNegativeInt = (value) => {\n  const match = PRECEEDING_ZEROS_POSITIVE_INT_REGEX.exec(value);\n  return match && match.length === 2 ? match[1] : '0';\n};\n\nconst fixInt = (value, oldValue, keyCode) => {\n  if (value.length === 0 && isMinus(keyCode)) {\n    if (oldValue) {\n      return oldValue < 0 || oldValue === '-0' ? oldValue : `-${oldValue}`;\n    }\n    return '-0';\n  }\n\n  const match = PRECEEDING_ZEROS_INT_REGEX.exec(value);\n  if (match && match.length === 3) {\n    if (match[1]) {\n      return `${match[1]}${match[2]}`;\n    }\n    return match[2];\n  }\n  return '0';\n};\n\nconst isInputValid = (allowedKeys, keyCode, targetValue, additionalValidation) => {\n  if (allowedKeys.includes(keyCode)) {\n    return additionalValidation ? additionalValidation(keyCode, targetValue) : true;\n  }\n  return false;\n};\n\nconst additionalPositiveValidation = (keyCode, targetValue) =>\n  !(targetValue === '' && (keyCode === KEY_CODES[0] || keyCode === KEY_CODES.NUMPAD[0]));\n\nexport const Integer: React.FC<IntegerProps> = ({\n  id,\n  value,\n  isDisabled,\n  defaultValue,\n  onChange,\n  isPositive,\n  isNonNegative,\n  className,\n  isFullWidth,\n  isValid,\n  ...restProps\n}) => {\n  let allowedKeys;\n  let validRegex;\n  let fixAfterValue;\n  let min;\n  let additionalValidation;\n\n  if (isPositive) {\n    allowedKeys = NON_NEGATIVE_INTEGER_KEYS;\n    validRegex = POSITIVE_INT_REGEX;\n    fixAfterValue = fixPrecedingZerosPositiveInt;\n    min = 1;\n    additionalValidation = additionalPositiveValidation;\n  } else if (isNonNegative) {\n    allowedKeys = NON_NEGATIVE_INTEGER_KEYS;\n    validRegex = NON_NEGATIVE_INT_REGEX;\n    fixAfterValue = fixPrecedingZerosNonNegativeInt;\n    min = 0;\n  } else {\n    allowedKeys = INTEGER_KEYS;\n    validRegex = INT_REGEX;\n    fixAfterValue = fixInt;\n  }\n\n  const onKeydown = React.useCallback(\n    (e) => {\n      const { keyCode, target, ctrlKey, metaKey } = e;\n\n      const ctrlDown = ctrlKey || metaKey; // Mac support\n\n      // check for ctrl+c, a, v and x\n      if (ctrlDown && INPUT_CTRL_COMBINATIONS_KEYS.includes(keyCode)) {\n        return true;\n      }\n\n      if (!isInputValid(allowedKeys, keyCode, target.value, additionalValidation)) {\n        e.preventDefault();\n        return false;\n      }\n\n      const oldValue = target.value;\n\n      window.setTimeout(() => {\n        if (!validRegex.test(target.value)) {\n          const v = fixAfterValue(target.value, oldValue, keyCode);\n          setNativeValue(target, v);\n          target.dispatchEvent(\n            new Event('input', {\n              bubbles: true,\n              cancelable: true,\n            }),\n          );\n        }\n      }, 0);\n      return true;\n    },\n    [additionalValidation, allowedKeys, fixAfterValue, validRegex],\n  );\n\n  return (\n    <TextInput\n      {...restProps}\n      id={id}\n      type=\"number\"\n      onKeyDown={onKeydown}\n      min={min}\n      value={value}\n      defaultValue={defaultValue}\n      onChange={onChange}\n      className={classNames(className, {\n        'kubevirt-integer-component': isFullWidth,\n      })}\n      isDisabled={isDisabled}\n    />\n  );\n};\n\ntype IntegerProps = {\n  id?: string;\n  isFullWidth?: boolean;\n  className?: string;\n  value?: string;\n  defaultValue?: string;\n  onChange?: (value: string, event: React.FormEvent<HTMLInputElement>) => void;\n  isPositive?: boolean;\n  isNonNegative?: boolean; // is ignored when positive == true\n  isDisabled?: boolean;\n  isValid?: boolean;\n  'aria-label'?: string;\n};\n"]}]}