{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/AddHealthChecks.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/AddHealthChecks.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { Form, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ContainerDropdown, history, PageHeading, ResourceLink, ResourceIcon, openshiftHelpBase, } from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { FormFooter } from '@console/shared';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport HealthChecks from './HealthChecks';\nimport { getHealthChecksData } from './create-health-checks-probe-utils';\nimport './AddHealthChecks.scss';\nconst AddHealthChecks = ({ resource, currentContainer, handleSubmit, handleReset, errors, status, isSubmitting, setFieldValue, values, dirty, }) => {\n    var _a, _b, _c, _d, _e;\n    const [currentKey, setCurrentKey] = React.useState(currentContainer);\n    const containers = (_c = (_b = (_a = resource === null || resource === void 0 ? void 0 : resource.spec) === null || _a === void 0 ? void 0 : _a.template) === null || _b === void 0 ? void 0 : _b.spec) === null || _c === void 0 ? void 0 : _c.containers;\n    const healthCheckAdded = _.every(containers, (container) => container.readinessProbe || container.livenessProbe || container.startupProbe);\n    const containersByKey = _.keyBy(containers, 'name');\n    const pageTitle = healthCheckAdded ? 'Edit Health Checks' : 'Add Health Checks';\n    const { kind, metadata: { name, namespace }, } = resource;\n    const kindForCRDResource = referenceFor(resource);\n    const resourceKind = modelFor(kindForCRDResource).crd ? kindForCRDResource : kind;\n    const isFormClean = _.every(values.healthChecks, { modified: false });\n    const handleSelectContainer = (containerName) => {\n        const containerIndex = _.findIndex(resource.spec.template.spec.containers, [\n            'name',\n            containerName,\n        ]);\n        setCurrentKey(containerName);\n        setFieldValue('containerName', containerName);\n        setFieldValue('healthChecks', getHealthChecksData(resource, containerIndex));\n        history.replace(`/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, pageTitle)),\n        React.createElement(PageHeading, { title: React.createElement(React.Fragment, null,\n                pageTitle,\n                React.createElement(Button, { variant: \"link\", component: \"a\", href: `${openshiftHelpBase}applications/application-health.html`, target: \"_blank\" },\n                    \"Learn More \",\n                    React.createElement(ExternalLinkAltIcon, null))) }),\n        React.createElement(\"div\", { className: \"odc-add-health-checks__body\" },\n            React.createElement(\"p\", null,\n                \"Health checks for \\u00A0\",\n                React.createElement(ResourceLink, { kind: referenceFor(resource), name: name, namespace: namespace, title: name, inline: true })),\n            React.createElement(Form, { onSubmit: handleSubmit },\n                React.createElement(\"div\", null,\n                    \"Container \\u00A0\",\n                    _.size(containers) > 1 ? (React.createElement(ContainerDropdown, { currentKey: currentKey, containers: containersByKey, onChange: handleSelectContainer })) : (React.createElement(React.Fragment, null,\n                        React.createElement(ResourceIcon, { kind: ContainerModel.kind }),\n                        containers[0].name))),\n                React.createElement(HealthChecks, { resourceType: getResourcesType(resource) }),\n                React.createElement(FormFooter, { handleReset: handleReset, errorMessage: status && ((_e = (_d = status === null || status === void 0 ? void 0 : status.errors) === null || _d === void 0 ? void 0 : _d.json) === null || _e === void 0 ? void 0 : _e.message), isSubmitting: isSubmitting, submitLabel: healthCheckAdded ? 'Save' : 'Add', disableSubmit: isFormClean || !dirty || !_.isEmpty(errors), resetLabel: \"Cancel\" })))));\n};\nexport default AddHealthChecks;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/AddHealthChecks.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/AddHealthChecks.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { FormikProps, FormikValues } from 'formik';\nimport { Form, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  ContainerDropdown,\n  history,\n  PageHeading,\n  ResourceLink,\n  ResourceIcon,\n  openshiftHelpBase,\n} from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { FormFooter } from '@console/shared';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport HealthChecks from './HealthChecks';\nimport { getHealthChecksData } from './create-health-checks-probe-utils';\nimport './AddHealthChecks.scss';\n\ntype AddHealthChecksProps = {\n  resource?: K8sResourceKind;\n  currentContainer: string;\n};\n\nconst AddHealthChecks: React.FC<FormikProps<FormikValues> & AddHealthChecksProps> = ({\n  resource,\n  currentContainer,\n  handleSubmit,\n  handleReset,\n  errors,\n  status,\n  isSubmitting,\n  setFieldValue,\n  values,\n  dirty,\n}) => {\n  const [currentKey, setCurrentKey] = React.useState(currentContainer);\n  const containers = resource?.spec?.template?.spec?.containers;\n  const healthCheckAdded = _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n  const containersByKey = _.keyBy(containers, 'name');\n  const pageTitle = healthCheckAdded ? 'Edit Health Checks' : 'Add Health Checks';\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = resource;\n  const kindForCRDResource = referenceFor(resource);\n  const resourceKind = modelFor(kindForCRDResource).crd ? kindForCRDResource : kind;\n  const isFormClean = _.every(values.healthChecks, { modified: false });\n\n  const handleSelectContainer = (containerName: string) => {\n    const containerIndex = _.findIndex(resource.spec.template.spec.containers, [\n      'name',\n      containerName,\n    ]);\n    setCurrentKey(containerName);\n    setFieldValue('containerName', containerName);\n    setFieldValue('healthChecks', getHealthChecksData(resource, containerIndex));\n    history.replace(\n      `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`,\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{pageTitle}</title>\n      </Helmet>\n      <PageHeading\n        title={\n          <>\n            {pageTitle}\n            <Button\n              variant=\"link\"\n              component=\"a\"\n              href={`${openshiftHelpBase}applications/application-health.html`}\n              target=\"_blank\"\n            >\n              Learn More <ExternalLinkAltIcon />\n            </Button>\n          </>\n        }\n      />\n      <div className=\"odc-add-health-checks__body\">\n        <p>\n          Health checks for &nbsp;\n          <ResourceLink\n            kind={referenceFor(resource)}\n            name={name}\n            namespace={namespace}\n            title={name}\n            inline\n          />\n        </p>\n        <Form onSubmit={handleSubmit}>\n          <div>\n            Container &nbsp;\n            {_.size(containers) > 1 ? (\n              <ContainerDropdown\n                currentKey={currentKey}\n                containers={containersByKey}\n                onChange={handleSelectContainer}\n              />\n            ) : (\n              <>\n                <ResourceIcon kind={ContainerModel.kind} />\n                {containers[0].name}\n              </>\n            )}\n          </div>\n          <HealthChecks resourceType={getResourcesType(resource)} />\n          <FormFooter\n            handleReset={handleReset}\n            errorMessage={status && status?.errors?.json?.message}\n            isSubmitting={isSubmitting}\n            submitLabel={healthCheckAdded ? 'Save' : 'Add'}\n            disableSubmit={isFormClean || !dirty || !_.isEmpty(errors)}\n            resetLabel=\"Cancel\"\n          />\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default AddHealthChecks;\n"]}]}