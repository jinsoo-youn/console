{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/activity-card/ActivityBody.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/activity-card/ActivityBody.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { PlayIcon, PauseIcon } from '@patternfly/react-icons';\nimport { Accordion } from '@patternfly/react-core';\nimport { ErrorLoadingEvents, sortEvents } from '@console/internal/components/events';\nimport { Timestamp } from '@console/internal/components/utils/timestamp';\nimport { AsyncComponent } from '@console/internal/components/utils/async';\nimport { DashboardCardButtonLink } from '../dashboard-card/DashboardCardLink';\nimport EventItem from './EventItem';\nimport './activity-card.scss';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nexport const Activity = ({ timestamp, children }) => (React.createElement(\"div\", { className: \"co-activity-item__ongoing\" },\n    timestamp && (React.createElement(\"span\", { className: \"text-secondary\" },\n        \"Started \",\n        React.createElement(Timestamp, { simple: true, timestamp: timestamp.toString() }))),\n    children));\nexport const RecentEventsBodyContent = ({ events, filter, paused, setPaused, moreLink }) => {\n    const ref = React.useRef([]);\n    React.useEffect(() => {\n        if (paused && events) {\n            ref.current = events.data;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [paused]);\n    if (!paused && events) {\n        ref.current = events.data;\n    }\n    const eventsData = ref.current;\n    const [expanded, setExpanded] = React.useState([]);\n    const onToggle = React.useCallback((uid) => {\n        const isExpanded = expanded.includes(uid);\n        const newExpanded = isExpanded ? expanded.filter(e => e !== uid) : [...expanded, uid];\n        setPaused(isExpanded ? !!newExpanded.length : !isExpanded);\n        setExpanded(newExpanded);\n    }, [expanded, setPaused]);\n    const isExpanded = React.useCallback((uid) => {\n        return expanded.includes(uid);\n    }, [expanded]);\n    if (events && events.loadError) {\n        return React.createElement(ErrorLoadingEvents, null);\n    }\n    if (!(events && events.loaded)) {\n        return (React.createElement(\"div\", { className: \"co-status-card__alerts-body\" },\n            React.createElement(\"div\", { className: \"co-status-card__alert-item co-status-card__alert-item--loading\" },\n                React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" }),\n                React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" }),\n                React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" }),\n                React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" }),\n                React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" }))));\n    }\n    const filteredEvents = filter ? eventsData.filter(filter) : eventsData;\n    const sortedEvents = sortEvents(filteredEvents);\n    const lastEvents = sortedEvents.slice(0, 50);\n    if (sortedEvents.length === 0) {\n        return (React.createElement(Activity, null,\n            React.createElement(\"div\", { className: \"text-secondary\" }, \"There are no recent events.\")));\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Accordion, { asDefinitionList: false, headingLevel: \"h5\", className: \"co-activity-card__recent-accordion\" }, lastEvents.map(e => (React.createElement(EventItem, { key: e.metadata.uid, isExpanded: isExpanded, onToggle: onToggle, event: e })))),\n        sortedEvents.length > 50 && !!moreLink && (React.createElement(Link, { className: \"co-activity-card__recent-more-link\", to: moreLink }, \"View all events\"))));\n};\nexport const PauseButton = ({ paused, togglePause }) => {\n    const { t } = useTranslation();\n    return (React.createElement(DashboardCardButtonLink, { onClick: togglePause, className: \"co-activity-card__recent-actions\", icon: paused ? React.createElement(PlayIcon, null) : React.createElement(PauseIcon, null), \"data-test-id\": \"events-pause-button\" }, paused ? t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_RESUME_1') : t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_PAUSE_1')));\n};\nexport const RecentEventsBody = props => {\n    const [paused, setPaused] = React.useState(false);\n    const togglePause = React.useCallback(() => setPaused(!paused), [paused]);\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-activity-card__recent-title\" },\n            t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_RECENT_1'),\n            React.createElement(PauseButton, { paused: paused, togglePause: togglePause })),\n        React.createElement(RecentEventsBodyContent, Object.assign({}, props, { paused: paused, setPaused: setPaused }))));\n};\nexport const OngoingActivityBody = ({ loaded, resourceActivities = [], prometheusActivities = [] }) => {\n    const activitiesLoaded = loaded || resourceActivities.length > 0 || prometheusActivities.length > 0;\n    let body;\n    if (!activitiesLoaded) {\n        body = (React.createElement(\"div\", { className: \"co-activity-item__ongoing\" },\n            React.createElement(\"div\", { className: \"skeleton-activity__dashboard\" })));\n    }\n    else {\n        const allActivities = prometheusActivities.map(({ results, loader }, idx) => (\n        // eslint-disable-next-line react/no-array-index-key\n        React.createElement(Activity, { key: idx },\n            React.createElement(AsyncComponent, { loader: loader, results: results }))));\n        resourceActivities\n            .sort((a, b) => +b.timestamp - +a.timestamp)\n            .forEach(({ resource, timestamp, loader }) => allActivities.push(React.createElement(Activity, { key: resource.metadata.uid, timestamp: timestamp },\n            React.createElement(AsyncComponent, { loader: loader, resource: resource }))));\n        body = allActivities.length ? (allActivities) : (React.createElement(Activity, null,\n            React.createElement(\"div\", { className: \"text-secondary\" }, \"There are no ongoing activities.\")));\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-activity-card__ongoing-title\" }, \"Ongoing\"),\n        React.createElement(\"div\", { className: \"co-activity-card__ongoing-body\" }, body)));\n};\nconst ActivityBody = ({ children, className }) => (React.createElement(\"div\", { className: classNames('co-dashboard-card__body--no-padding co-activity-card__body', className), id: \"activity-body\" }, children));\nexport default ActivityBody;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/activity-card/ActivityBody.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/activity-card/ActivityBody.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { K8sActivityProps, PrometheusActivityProps, LazyLoader } from '@console/plugin-sdk';\nimport { PlayIcon, PauseIcon } from '@patternfly/react-icons';\nimport { Accordion } from '@patternfly/react-core';\nimport { K8sResourceKind, EventKind } from '@console/internal/module/k8s';\nimport { ErrorLoadingEvents, sortEvents } from '@console/internal/components/events';\nimport { Timestamp } from '@console/internal/components/utils/timestamp';\nimport { AsyncComponent } from '@console/internal/components/utils/async';\nimport { FirehoseResult } from '@console/internal/components/utils/types';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { DashboardCardButtonLink } from '../dashboard-card/DashboardCardLink';\nimport EventItem from './EventItem';\nimport './activity-card.scss';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nexport const Activity: React.FC<ActivityProps> = ({ timestamp, children }) => (\n  <div className=\"co-activity-item__ongoing\">\n    {timestamp && (\n      <span className=\"text-secondary\">\n        Started <Timestamp simple timestamp={timestamp.toString()} />\n      </span>\n    )}\n    {children}\n  </div>\n);\n\nexport const RecentEventsBodyContent: React.FC<RecentEventsBodyContentProps> = ({ events, filter, paused, setPaused, moreLink }) => {\n  const ref = React.useRef<EventKind[]>([]);\n  React.useEffect(() => {\n    if (paused && events) {\n      ref.current = events.data;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paused]);\n  if (!paused && events) {\n    ref.current = events.data;\n  }\n  const eventsData = ref.current;\n  const [expanded, setExpanded] = React.useState<string[]>([]);\n  const onToggle = React.useCallback(\n    (uid: string) => {\n      const isExpanded = expanded.includes(uid);\n      const newExpanded = isExpanded ? expanded.filter(e => e !== uid) : [...expanded, uid];\n      setPaused(isExpanded ? !!newExpanded.length : !isExpanded);\n      setExpanded(newExpanded);\n    },\n    [expanded, setPaused],\n  );\n  const isExpanded = React.useCallback(\n    (uid: string) => {\n      return expanded.includes(uid);\n    },\n    [expanded],\n  );\n\n  if (events && events.loadError) {\n    return <ErrorLoadingEvents />;\n  }\n  if (!(events && events.loaded)) {\n    return (\n      <div className=\"co-status-card__alerts-body\">\n        <div className=\"co-status-card__alert-item co-status-card__alert-item--loading\">\n          <div className=\"skeleton-activity__dashboard\" />\n          <div className=\"skeleton-activity__dashboard\" />\n          <div className=\"skeleton-activity__dashboard\" />\n          <div className=\"skeleton-activity__dashboard\" />\n          <div className=\"skeleton-activity__dashboard\" />\n        </div>\n      </div>\n    );\n  }\n\n  const filteredEvents = filter ? eventsData.filter(filter) : eventsData;\n  const sortedEvents: EventKind[] = sortEvents(filteredEvents);\n  const lastEvents = sortedEvents.slice(0, 50);\n  if (sortedEvents.length === 0) {\n    return (\n      <Activity>\n        <div className=\"text-secondary\">There are no recent events.</div>\n      </Activity>\n    );\n  }\n  return (\n    <>\n      <Accordion asDefinitionList={false} headingLevel=\"h5\" className=\"co-activity-card__recent-accordion\">\n        {lastEvents.map(e => (\n          <EventItem key={e.metadata.uid} isExpanded={isExpanded} onToggle={onToggle} event={e} />\n        ))}\n      </Accordion>\n      {sortedEvents.length > 50 && !!moreLink && (\n        <Link className=\"co-activity-card__recent-more-link\" to={moreLink}>\n          View all events\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport const PauseButton: React.FC<PauseButtonProps> = ({ paused, togglePause }) => {\n  const { t } = useTranslation();\n  return (\n    <DashboardCardButtonLink onClick={togglePause} className=\"co-activity-card__recent-actions\" icon={paused ? <PlayIcon /> : <PauseIcon />} data-test-id=\"events-pause-button\">\n      {paused ? t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_RESUME_1') : t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_PAUSE_1')}\n    </DashboardCardButtonLink>\n  );\n};\n\nexport const RecentEventsBody: React.FC<RecentEventsBodyProps> = props => {\n  const [paused, setPaused] = React.useState(false);\n  const togglePause = React.useCallback(() => setPaused(!paused), [paused]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-activity-card__recent-title\">\n        {t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_RECENT_1')}\n        <PauseButton paused={paused} togglePause={togglePause} />\n      </div>\n      <RecentEventsBodyContent {...props} paused={paused} setPaused={setPaused} />\n    </>\n  );\n};\n\nexport const OngoingActivityBody: React.FC<OngoingActivityBodyProps> = ({ loaded, resourceActivities = [], prometheusActivities = [] }) => {\n  const activitiesLoaded = loaded || resourceActivities.length > 0 || prometheusActivities.length > 0;\n  let body: React.ReactNode;\n  if (!activitiesLoaded) {\n    body = (\n      <div className=\"co-activity-item__ongoing\">\n        <div className=\"skeleton-activity__dashboard\" />\n      </div>\n    );\n  } else {\n    const allActivities = prometheusActivities.map(({ results, loader }, idx) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <Activity key={idx}>\n        <AsyncComponent loader={loader} results={results} />\n      </Activity>\n    ));\n    resourceActivities\n      .sort((a, b) => +b.timestamp - +a.timestamp)\n      .forEach(({ resource, timestamp, loader }) =>\n        allActivities.push(\n          <Activity key={resource.metadata.uid} timestamp={timestamp}>\n            <AsyncComponent loader={loader} resource={resource} />\n          </Activity>,\n        ),\n      );\n    body = allActivities.length ? (\n      allActivities\n    ) : (\n      <Activity>\n        <div className=\"text-secondary\">There are no ongoing activities.</div>\n      </Activity>\n    );\n  }\n  return (\n    <>\n      <div className=\"co-activity-card__ongoing-title\">Ongoing</div>\n      <div className=\"co-activity-card__ongoing-body\">{body}</div>\n    </>\n  );\n};\n\nconst ActivityBody: React.FC<ActivityBodyProps> = ({ children, className }) => (\n  <div className={classNames('co-dashboard-card__body--no-padding co-activity-card__body', className)} id=\"activity-body\">\n    {children}\n  </div>\n);\n\nexport default ActivityBody;\n\ntype ActivityBodyProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\ntype OngoingActivityBodyProps = {\n  resourceActivities?: {\n    resource: K8sResourceKind;\n    timestamp: Date;\n    loader: LazyLoader<K8sActivityProps>;\n  }[];\n  prometheusActivities?: {\n    results: PrometheusResponse[];\n    loader: LazyLoader<PrometheusActivityProps>;\n  }[];\n  loaded: boolean;\n};\n\ntype RecentEventsBodyProps = {\n  events: FirehoseResult<EventKind[]>;\n  filter?: (event: EventKind) => boolean;\n  moreLink?: string;\n};\n\ntype RecentEventsBodyContentProps = RecentEventsBodyProps & {\n  paused?: boolean;\n  setPaused?: (paused: boolean) => void;\n};\n\ntype ActivityProps = {\n  timestamp?: Date;\n  children: React.ReactNode;\n};\n\ntype PauseButtonProps = {\n  paused: boolean;\n  togglePause: () => void;\n};\n"]}]}