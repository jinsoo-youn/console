{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/edit-yaml.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/edit-yaml.jsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { safeLoad, safeDump } from 'js-yaml';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport { ActionGroup, Alert, Button, Split, SplitItem } from '@patternfly/react-core';\nimport { DownloadIcon, InfoCircleIcon } from '@patternfly/react-icons';\nimport { FLAGS, ALL_NAMESPACES_KEY, getBadgeFromType } from '@console/shared';\nimport { connectToFlags } from '../reducers/features';\nimport { errorModal } from './modals';\nimport { Firehose, checkAccess, history, Loading, resourceObjPath } from './utils';\nimport { referenceForModel, k8sCreate, k8sUpdate, referenceFor, groupVersionFor } from '../module/k8s';\nimport { ConsoleYAMLSampleModel } from '../models';\nimport { getResourceSidebarSamples } from './sidebars/resource-sidebar-samples';\nimport { ResourceSidebar } from './sidebars/resource-sidebar';\nimport { yamlTemplates } from '../models/yaml-templates';\nimport { definitionFor } from '../module/k8s/swagger';\nimport YAMLEditor from '@console/shared/src/components/editor/YAMLEditor';\nimport { withTranslation } from 'react-i18next';\nconst generateObjToLoad = (kind, id, yaml, namespace = 'default') => {\n    const sampleObj = safeLoad(yaml ? yaml : yamlTemplates.getIn([kind, id]));\n    if (_.has(sampleObj.metadata, 'namespace')) {\n        sampleObj.metadata.namespace = namespace;\n    }\n    return sampleObj;\n};\nconst stateToProps = ({ k8s, UI }) => ({\n    activeNamespace: UI.get('activeNamespace'),\n    impersonate: UI.get('impersonate'),\n    models: k8s.getIn(['RESOURCES', 'models']),\n});\n/**\n * This component loads the entire Monaco editor library with it.\n * Consider using `AsyncComponent` to dynamically load this component when needed.\n */\n/** @augments {React.Component<{obj?: any, create: boolean, kind: string, redirectURL?: string, resourceObjPath?: (obj: K8sResourceKind, objRef: string) => string}, onChange?: (yaml: string) => void>} */\nexport const EditYAML_ = connect(stateToProps)(class EditYAML extends React.Component {\n    constructor(props) {\n        super(props);\n        this.insertYamlContent_ = (id, yaml, kind) => {\n            const content = this.getYamlContent_(id, yaml, kind);\n            this.addToYAML(id, content);\n        };\n        this.replaceYamlContent_ = (id, yaml, kind) => {\n            const content = this.getYamlContent_(id, yaml, kind);\n            this.loadYaml(true, content);\n        };\n        this.toggleSidebar = () => {\n            this.setState(state => {\n                return { showSidebar: !state.showSidebar };\n            });\n            window.dispatchEvent(new Event('sidebar_toggle'));\n        };\n        this.state = {\n            error: null,\n            success: null,\n            height: 500,\n            initialized: false,\n            stale: false,\n            sampleObj: props.sampleObj,\n            fileUpload: props.fileUpload,\n            showSidebar: !!props.create,\n        };\n        this.monacoRef = React.createRef();\n        // k8s uses strings for resource versions\n        this.displayedVersion = '0';\n        // Default cancel action is browser back navigation\n        this.onCancel = 'onCancel' in props ? props.onCancel : history.goBack;\n        this.downloadSampleYaml_ = this.downloadSampleYaml_.bind(this);\n        if (this.props.error) {\n            this.handleError(this.props.error);\n        }\n    }\n    getModel(obj) {\n        if (_.isEmpty(obj)) {\n            return null;\n        }\n        const { models } = this.props;\n        return models.get(referenceFor(obj)) || models.get(obj.kind);\n    }\n    handleError(error) {\n        this.setState({ error, success: null });\n    }\n    componentDidMount() {\n        this.loadYaml();\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.isOver) {\n            return;\n        }\n        const newVersion = _.get(nextProps.obj, 'metadata.resourceVersion');\n        const stale = this.displayedVersion !== newVersion;\n        this.setState({ stale });\n        if (nextProps.error) {\n            this.handleError(nextProps.error);\n        }\n        else if (this.state.error) {\n            //clear stale error state\n            this.setState({ error: '' });\n        }\n        if (nextProps.sampleObj) {\n            this.loadYaml(!_.isEqual(this.state.sampleObj, nextProps.sampleObj), nextProps.sampleObj);\n        }\n        else if (nextProps.fileUpload) {\n            this.loadYaml(!_.isEqual(this.state.fileUpload, nextProps.fileUpload), nextProps.fileUpload);\n        }\n        else {\n            this.loadYaml();\n        }\n    }\n    reload() {\n        this.loadYaml(true);\n        this.setState({\n            sampleObj: null,\n            error: null,\n            success: null,\n        });\n    }\n    checkEditAccess(obj) {\n        const { readOnly, impersonate } = this.props;\n        if (readOnly) {\n            // We're already read-only. No need for the access review.\n            return;\n        }\n        const model = this.getModel(obj);\n        if (!model) {\n            return;\n        }\n        const { name, namespace } = obj.metadata;\n        const resourceAttributes = {\n            group: model.apiGroup,\n            resource: model.plural,\n            verb: 'update',\n            name,\n            namespace,\n        };\n        checkAccess(resourceAttributes, impersonate).then(resp => {\n            const notAllowed = !resp.status.allowed;\n            this.setState({ notAllowed });\n            if (this.monacoRef.current) {\n                this.monacoRef.current.editor.updateOptions({ readOnly: notAllowed });\n            }\n        });\n    }\n    convertObjToYAMLString(obj) {\n        let yaml = '';\n        if (obj) {\n            if (_.isString(obj)) {\n                yaml = obj;\n            }\n            else {\n                try {\n                    yaml = safeDump(obj, {\n                        sortKeys: function (a, b) {\n                            let order = ['spec', 'metadata', 'kind', 'apiVersion'];\n                            const orderA = order.indexOf(a);\n                            const orderB = order.indexOf(b);\n                            if (orderA < 0 && orderB < 0) {\n                                return a > b ? 1 : -1;\n                            }\n                            return orderA > orderB ? -1 : 1;\n                        },\n                    });\n                    this.checkEditAccess(obj);\n                }\n                catch (e) {\n                    yaml = `Error getting YAML: ${e}`;\n                }\n            }\n        }\n        return yaml;\n    }\n    loadYaml(reload = false, obj = this.props.obj) {\n        if (this.state.initialized && !reload) {\n            return;\n        }\n        const yaml = this.convertObjToYAMLString(obj);\n        this.displayedVersion = _.get(obj, 'metadata.resourceVersion');\n        this.setState({ yaml, initialized: true, stale: false });\n    }\n    addToYAML(id, obj) {\n        const yaml = this.convertObjToYAMLString(obj);\n        const selection = this.monacoRef.current.editor.getSelection();\n        const range = new window.monaco.Range(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn);\n        // Grab the current position and indent every row to left-align the text at the same indentation\n        const indentSize = new Array(selection.startColumn).join(' ');\n        const lines = yaml.split('\\n');\n        const lineCount = lines.length;\n        const indentedText = lines\n            .map((line, i) => {\n            if (i === 0) {\n                // Already indented, leave it alone\n                return line;\n            }\n            return `${indentSize}${line}`;\n        })\n            .join('\\n');\n        // Grab the selection size of what we are about to add\n        const newContentSelection = new window.monaco.Selection(selection.startLineNumber, 0, selection.startLineNumber + lineCount - 1, lines[lines.length - 1].length);\n        const op = { range, text: indentedText, forceMoveMarkers: true };\n        this.monacoRef.current.editor.executeEdits(id, [op], [newContentSelection]);\n        this.monacoRef.current.editor.focus();\n        this.displayedVersion = _.get(obj, 'metadata.resourceVersion');\n        this.setState({ yaml: this.monacoRef.current.editor.getValue() });\n    }\n    getEditor() {\n        return this.monacoRef.current.editor;\n    }\n    save() {\n        const { onSave } = this.props;\n        let obj;\n        if (onSave) {\n            onSave(this.getEditor().getValue());\n            return;\n        }\n        try {\n            obj = safeLoad(this.getEditor().getValue());\n        }\n        catch (e) {\n            this.handleError(`Error parsing YAML: ${e}`);\n            return;\n        }\n        if (!obj.apiVersion) {\n            this.handleError('No \"apiVersion\" field found in YAML.');\n            return;\n        }\n        if (!obj.kind) {\n            this.handleError('No \"kind\" field found in YAML.');\n            return;\n        }\n        const model = this.getModel(obj);\n        if (!model) {\n            this.handleError(`The server doesn't have a resource type \"kind: ${obj.kind}, apiVersion: ${obj.apiVersion}\".`);\n            return;\n        }\n        if (!obj.metadata) {\n            this.handleError('No \"metadata\" field found in YAML.');\n            return;\n        }\n        // If this is a namespaced resource, default to the active namespace when none is specified in the YAML.\n        if (!obj.metadata.namespace && model.namespaced) {\n            if (this.props.activeNamespace === ALL_NAMESPACES_KEY) {\n                this.handleError('No \"metadata.namespace\" field found in YAML.');\n                return;\n            }\n            obj.metadata.namespace = this.props.activeNamespace;\n        }\n        const { namespace: newNamespace, name: newName } = obj.metadata;\n        if (!this.props.create && this.props.obj) {\n            const { namespace, name } = this.props.obj.metadata;\n            if (name !== newName) {\n                this.handleError(`Cannot change resource name (original: \"${name}\", updated: \"${newName}\").`);\n                return;\n            }\n            if (namespace !== newNamespace) {\n                this.handleError(`Cannot change resource namespace (original: \"${namespace}\", updated: \"${newNamespace}\").`);\n                return;\n            }\n            if (this.props.obj.kind !== obj.kind) {\n                this.handleError(`Cannot change resource kind (original: \"${this.props.obj.kind}\", updated: \"${obj.kind}\").`);\n                return;\n            }\n            const apiGroup = groupVersionFor(this.props.obj.apiVersion).group;\n            const newAPIGroup = groupVersionFor(obj.apiVersion).group;\n            if (apiGroup !== newAPIGroup) {\n                this.handleError(`Cannot change API group (original: \"${apiGroup}\", updated: \"${newAPIGroup}\").`);\n                return;\n            }\n        }\n        this.setState({ success: null, error: null }, () => {\n            let action = k8sUpdate;\n            let redirect = false;\n            if (this.props.create) {\n                action = k8sCreate;\n                delete obj.metadata.resourceVersion;\n                redirect = true;\n            }\n            action(model, obj, newNamespace, newName)\n                .then(o => {\n                if (redirect) {\n                    let url = this.props.redirectURL;\n                    if (!url) {\n                        const path = _.isFunction(this.props.resourceObjPath) ? this.props.resourceObjPath : resourceObjPath;\n                        url = path(o, referenceFor(o));\n                    }\n                    history.push(url);\n                    // TODO: (ggreer). show message on new page. maybe delete old obj?\n                    return;\n                }\n                const success = `${newName} has been updated to version ${o.metadata.resourceVersion}`;\n                this.setState({ success, error: null });\n                this.loadYaml(true, o);\n            })\n                .catch(e => this.handleError(e.message));\n        });\n    }\n    download(data = this.getEditor().getValue()) {\n        const blob = new Blob([data], { type: 'text/yaml;charset=utf-8' });\n        let filename = 'k8s-object.yaml';\n        try {\n            const obj = safeLoad(data);\n            if (obj.kind) {\n                filename = `${obj.kind.toLowerCase()}-${obj.metadata.name}.yaml`;\n            }\n        }\n        catch (unused) {\n            // unused\n        }\n        saveAs(blob, filename);\n    }\n    getYamlContent_(id = 'default', yaml = '', kind = referenceForModel(this.props.model)) {\n        try {\n            const sampleObj = generateObjToLoad(kind, id, yaml, this.props.obj.metadata.namespace);\n            this.setState({ sampleObj });\n            return sampleObj;\n        }\n        catch (error) {\n            errorModal({\n                title: 'Failed to Parse YAML Sample',\n                error: React.createElement(\"div\", { className: \"co-pre-line\" }, error.message || error.name || 'An error occurred.'),\n            });\n        }\n    }\n    downloadSampleYaml_(id = 'default', yaml = '', kind = referenceForModel(this.props.model)) {\n        try {\n            const sampleObj = generateObjToLoad(kind, id, yaml, this.props.obj.metadata.namespace);\n            const data = safeDump(sampleObj);\n            this.download(data);\n        }\n        catch (e) {\n            this.download(yaml);\n        }\n    }\n    render() {\n        if (!this.props.create && !this.props.obj) {\n            return React.createElement(Loading, null);\n        }\n        const { connectDropTarget, isOver, canDrop, create, yamlSamplesList, customClass, onChange = () => null, t } = this.props;\n        const klass = classNames('co-file-dropzone-container', {\n            'co-file-dropzone--drop-over': isOver,\n        });\n        const { error, success, stale, yaml, showSidebar } = this.state;\n        const { obj, download = true, header, genericYAML = false, children: customAlerts } = this.props;\n        const readOnly = this.props.readOnly || this.state.notAllowed;\n        const options = { readOnly, scrollBeyondLastLine: false };\n        const model = this.getModel(obj);\n        const { samples, snippets } = model ? getResourceSidebarSamples(model, yamlSamplesList) : { samples: [], snippets: [] };\n        const definition = model ? definitionFor(model) : { properties: [] };\n        const showSchema = definition && !_.isEmpty(definition.properties);\n        const hasSidebarContent = showSchema || !_.isEmpty(samples) || !_.isEmpty(snippets);\n        const sidebarLink = !showSidebar && hasSidebarContent ? (React.createElement(Button, { type: \"button\", variant: \"link\", isInline: true, onClick: this.toggleSidebar },\n            React.createElement(InfoCircleIcon, { className: \"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" }),\n            t('COMMON:MSG_COMMON_BUTTON_ETC_11'))) : null;\n        const editYamlComponent = (React.createElement(\"div\", { className: \"co-file-dropzone co-file-dropzone__flex\" },\n            canDrop && (React.createElement(\"div\", { className: klass },\n                React.createElement(\"p\", { className: \"co-file-dropzone__drop-text\" }, \"Drop file here\"))),\n            create && !this.props.hideHeader && (React.createElement(\"div\", { className: \"yaml-editor__header\" },\n                React.createElement(Split, null,\n                    React.createElement(SplitItem, { isFilled: true },\n                        React.createElement(\"h1\", { className: \"yaml-editor__header-text\" }, header)),\n                    React.createElement(SplitItem, null, getBadgeFromType(model && model.badge))),\n                React.createElement(\"p\", { className: \"help-block\" }, t('COMMON:MSG_CREATEYAML_DIV1_DESCRIPTION_1')))),\n            React.createElement(\"div\", { className: \"pf-c-form co-m-page__body\" },\n                React.createElement(\"div\", { className: \"co-p-has-sidebar\" },\n                    React.createElement(\"div\", { className: \"co-p-has-sidebar__body\" },\n                        React.createElement(\"div\", { className: classNames('yaml-editor', customClass), ref: r => (this.editor = r) },\n                            React.createElement(YAMLEditor, { ref: this.monacoRef, value: yaml, options: options, showShortcuts: !genericYAML, minHeight: \"100px\", toolbarLinks: sidebarLink ? [sidebarLink] : [], onChange: newValue => this.setState({ yaml: newValue }, () => onChange(newValue)), onSave: () => this.save() }),\n                            React.createElement(\"div\", { className: \"yaml-editor__buttons\", ref: r => (this.buttons = r) },\n                                customAlerts,\n                                error && (React.createElement(Alert, { isInline: true, className: \"co-alert co-alert--scrollable\", variant: \"danger\", title: \"An error occurred\" },\n                                    React.createElement(\"div\", { className: \"co-pre-line\" }, error))),\n                                success && React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"success\", title: success }),\n                                stale && (React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"info\", title: \"This object has been updated.\" }, \"Click reload to see the new version.\")),\n                                React.createElement(ActionGroup, { className: \"pf-c-form__group--no-top-margin\" },\n                                    create && (React.createElement(Button, { type: \"submit\", variant: \"primary\", id: \"save-changes\", onClick: () => this.save() }, t('COMMON:MSG_COMMON_BUTTON_ETC_9'))),\n                                    !create && !readOnly && (React.createElement(Button, { type: \"submit\", variant: \"primary\", id: \"save-changes\", onClick: () => this.save() }, t('COMMON:MSG_COMMON_BUTTON_COMMIT_3'))),\n                                    !create && !genericYAML && (React.createElement(Button, { type: \"submit\", variant: \"secondary\", id: \"reload-object\", onClick: () => this.reload() }, t('COMMON:MSG_COMMON_BUTTON_ETC_13'))),\n                                    React.createElement(Button, { variant: \"secondary\", id: \"cancel\", onClick: () => this.onCancel() }, t('COMMON:MSG_COMMON_BUTTON_COMMIT_2')),\n                                    download && (React.createElement(Button, { type: \"submit\", variant: \"secondary\", className: \"pf-c-button--align-right hidden-sm hidden-xs\", onClick: () => this.download() },\n                                        React.createElement(DownloadIcon, null),\n                                        \" \",\n                                        t('COMMON:MSG_COMMON_BUTTON_ETC_12'))))))),\n                    hasSidebarContent && React.createElement(ResourceSidebar, { isCreateMode: create, kindObj: model, loadSampleYaml: this.replaceYamlContent_, insertSnippetYaml: this.insertYamlContent_, downloadSampleYaml: this.downloadSampleYaml_, showSidebar: showSidebar, toggleSidebar: this.toggleSidebar, samples: samples, snippets: snippets, showSchema: showSchema })))));\n        return _.isFunction(connectDropTarget) ? connectDropTarget(editYamlComponent) : editYamlComponent;\n    }\n});\nexport const EditYAML = connectToFlags(FLAGS.CONSOLE_YAML_SAMPLE)(withTranslation()((_a) => {\n    var { flags } = _a, props = __rest(_a, [\"flags\"]);\n    const resources = flags[FLAGS.CONSOLE_YAML_SAMPLE]\n        ? [\n            {\n                kind: referenceForModel(ConsoleYAMLSampleModel),\n                isList: true,\n                prop: 'yamlSamplesList',\n            },\n        ]\n        : [];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(EditYAML_, Object.assign({}, props))));\n}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/edit-yaml.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/edit-yaml.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { safeLoad, safeDump } from 'js-yaml';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport { ActionGroup, Alert, Button, Split, SplitItem } from '@patternfly/react-core';\nimport { DownloadIcon, InfoCircleIcon } from '@patternfly/react-icons';\n\nimport { FLAGS, ALL_NAMESPACES_KEY, getBadgeFromType } from '@console/shared';\n\nimport { connectToFlags } from '../reducers/features';\nimport { errorModal } from './modals';\nimport { Firehose, checkAccess, history, Loading, resourceObjPath } from './utils';\nimport { referenceForModel, k8sCreate, k8sUpdate, referenceFor, groupVersionFor } from '../module/k8s';\nimport { ConsoleYAMLSampleModel } from '../models';\nimport { getResourceSidebarSamples } from './sidebars/resource-sidebar-samples';\nimport { ResourceSidebar } from './sidebars/resource-sidebar';\nimport { yamlTemplates } from '../models/yaml-templates';\n\nimport { definitionFor } from '../module/k8s/swagger';\nimport YAMLEditor from '@console/shared/src/components/editor/YAMLEditor';\nimport { withTranslation } from 'react-i18next';\n\nconst generateObjToLoad = (kind, id, yaml, namespace = 'default') => {\n  const sampleObj = safeLoad(yaml ? yaml : yamlTemplates.getIn([kind, id]));\n  if (_.has(sampleObj.metadata, 'namespace')) {\n    sampleObj.metadata.namespace = namespace;\n  }\n  return sampleObj;\n};\n\nconst stateToProps = ({ k8s, UI }) => ({\n  activeNamespace: UI.get('activeNamespace'),\n  impersonate: UI.get('impersonate'),\n  models: k8s.getIn(['RESOURCES', 'models']),\n});\n\n/**\n * This component loads the entire Monaco editor library with it.\n * Consider using `AsyncComponent` to dynamically load this component when needed.\n */\n/** @augments {React.Component<{obj?: any, create: boolean, kind: string, redirectURL?: string, resourceObjPath?: (obj: K8sResourceKind, objRef: string) => string}, onChange?: (yaml: string) => void>} */\nexport const EditYAML_ = connect(stateToProps)(\n  class EditYAML extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        success: null,\n        height: 500,\n        initialized: false,\n        stale: false,\n        sampleObj: props.sampleObj,\n        fileUpload: props.fileUpload,\n        showSidebar: !!props.create,\n      };\n      this.monacoRef = React.createRef();\n      // k8s uses strings for resource versions\n      this.displayedVersion = '0';\n      // Default cancel action is browser back navigation\n      this.onCancel = 'onCancel' in props ? props.onCancel : history.goBack;\n      this.downloadSampleYaml_ = this.downloadSampleYaml_.bind(this);\n\n      if (this.props.error) {\n        this.handleError(this.props.error);\n      }\n    }\n\n    getModel(obj) {\n      if (_.isEmpty(obj)) {\n        return null;\n      }\n      const { models } = this.props;\n      return models.get(referenceFor(obj)) || models.get(obj.kind);\n    }\n\n    handleError(error) {\n      this.setState({ error, success: null });\n    }\n\n    componentDidMount() {\n      this.loadYaml();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.isOver) {\n        return;\n      }\n      const newVersion = _.get(nextProps.obj, 'metadata.resourceVersion');\n      const stale = this.displayedVersion !== newVersion;\n      this.setState({ stale });\n      if (nextProps.error) {\n        this.handleError(nextProps.error);\n      } else if (this.state.error) {\n        //clear stale error state\n        this.setState({ error: '' });\n      }\n      if (nextProps.sampleObj) {\n        this.loadYaml(!_.isEqual(this.state.sampleObj, nextProps.sampleObj), nextProps.sampleObj);\n      } else if (nextProps.fileUpload) {\n        this.loadYaml(!_.isEqual(this.state.fileUpload, nextProps.fileUpload), nextProps.fileUpload);\n      } else {\n        this.loadYaml();\n      }\n    }\n\n    reload() {\n      this.loadYaml(true);\n      this.setState({\n        sampleObj: null,\n        error: null,\n        success: null,\n      });\n    }\n\n    checkEditAccess(obj) {\n      const { readOnly, impersonate } = this.props;\n      if (readOnly) {\n        // We're already read-only. No need for the access review.\n        return;\n      }\n\n      const model = this.getModel(obj);\n      if (!model) {\n        return;\n      }\n\n      const { name, namespace } = obj.metadata;\n      const resourceAttributes = {\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'update',\n        name,\n        namespace,\n      };\n      checkAccess(resourceAttributes, impersonate).then(resp => {\n        const notAllowed = !resp.status.allowed;\n        this.setState({ notAllowed });\n        if (this.monacoRef.current) {\n          this.monacoRef.current.editor.updateOptions({ readOnly: notAllowed });\n        }\n      });\n    }\n\n    convertObjToYAMLString(obj) {\n      let yaml = '';\n      if (obj) {\n        if (_.isString(obj)) {\n          yaml = obj;\n        } else {\n          try {\n            yaml = safeDump(obj, {\n              sortKeys: function(a, b) {\n                let order = ['spec', 'metadata', 'kind', 'apiVersion'];\n                const orderA = order.indexOf(a);\n                const orderB = order.indexOf(b);\n                if (orderA < 0 && orderB < 0) {\n                  return a > b ? 1 : -1;\n                }\n                return orderA > orderB ? -1 : 1;\n              },\n            });\n            this.checkEditAccess(obj);\n          } catch (e) {\n            yaml = `Error getting YAML: ${e}`;\n          }\n        }\n      }\n\n      return yaml;\n    }\n\n    loadYaml(reload = false, obj = this.props.obj) {\n      if (this.state.initialized && !reload) {\n        return;\n      }\n\n      const yaml = this.convertObjToYAMLString(obj);\n\n      this.displayedVersion = _.get(obj, 'metadata.resourceVersion');\n      this.setState({ yaml, initialized: true, stale: false });\n    }\n\n    addToYAML(id, obj) {\n      const yaml = this.convertObjToYAMLString(obj);\n\n      const selection = this.monacoRef.current.editor.getSelection();\n      const range = new window.monaco.Range(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn);\n\n      // Grab the current position and indent every row to left-align the text at the same indentation\n      const indentSize = new Array(selection.startColumn).join(' ');\n      const lines = yaml.split('\\n');\n      const lineCount = lines.length;\n      const indentedText = lines\n        .map((line, i) => {\n          if (i === 0) {\n            // Already indented, leave it alone\n            return line;\n          }\n          return `${indentSize}${line}`;\n        })\n        .join('\\n');\n\n      // Grab the selection size of what we are about to add\n      const newContentSelection = new window.monaco.Selection(selection.startLineNumber, 0, selection.startLineNumber + lineCount - 1, lines[lines.length - 1].length);\n\n      const op = { range, text: indentedText, forceMoveMarkers: true };\n      this.monacoRef.current.editor.executeEdits(id, [op], [newContentSelection]);\n      this.monacoRef.current.editor.focus();\n\n      this.displayedVersion = _.get(obj, 'metadata.resourceVersion');\n      this.setState({ yaml: this.monacoRef.current.editor.getValue() });\n    }\n\n    getEditor() {\n      return this.monacoRef.current.editor;\n    }\n\n    save() {\n      const { onSave } = this.props;\n      let obj;\n\n      if (onSave) {\n        onSave(this.getEditor().getValue());\n        return;\n      }\n\n      try {\n        obj = safeLoad(this.getEditor().getValue());\n      } catch (e) {\n        this.handleError(`Error parsing YAML: ${e}`);\n        return;\n      }\n\n      if (!obj.apiVersion) {\n        this.handleError('No \"apiVersion\" field found in YAML.');\n        return;\n      }\n\n      if (!obj.kind) {\n        this.handleError('No \"kind\" field found in YAML.');\n        return;\n      }\n\n      const model = this.getModel(obj);\n      if (!model) {\n        this.handleError(`The server doesn't have a resource type \"kind: ${obj.kind}, apiVersion: ${obj.apiVersion}\".`);\n        return;\n      }\n\n      if (!obj.metadata) {\n        this.handleError('No \"metadata\" field found in YAML.');\n        return;\n      }\n\n      // If this is a namespaced resource, default to the active namespace when none is specified in the YAML.\n      if (!obj.metadata.namespace && model.namespaced) {\n        if (this.props.activeNamespace === ALL_NAMESPACES_KEY) {\n          this.handleError('No \"metadata.namespace\" field found in YAML.');\n          return;\n        }\n        obj.metadata.namespace = this.props.activeNamespace;\n      }\n\n      const { namespace: newNamespace, name: newName } = obj.metadata;\n\n      if (!this.props.create && this.props.obj) {\n        const { namespace, name } = this.props.obj.metadata;\n\n        if (name !== newName) {\n          this.handleError(`Cannot change resource name (original: \"${name}\", updated: \"${newName}\").`);\n          return;\n        }\n        if (namespace !== newNamespace) {\n          this.handleError(`Cannot change resource namespace (original: \"${namespace}\", updated: \"${newNamespace}\").`);\n          return;\n        }\n        if (this.props.obj.kind !== obj.kind) {\n          this.handleError(`Cannot change resource kind (original: \"${this.props.obj.kind}\", updated: \"${obj.kind}\").`);\n          return;\n        }\n\n        const apiGroup = groupVersionFor(this.props.obj.apiVersion).group;\n        const newAPIGroup = groupVersionFor(obj.apiVersion).group;\n        if (apiGroup !== newAPIGroup) {\n          this.handleError(`Cannot change API group (original: \"${apiGroup}\", updated: \"${newAPIGroup}\").`);\n          return;\n        }\n      }\n\n      this.setState({ success: null, error: null }, () => {\n        let action = k8sUpdate;\n        let redirect = false;\n        if (this.props.create) {\n          action = k8sCreate;\n          delete obj.metadata.resourceVersion;\n          redirect = true;\n        }\n        action(model, obj, newNamespace, newName)\n          .then(o => {\n            if (redirect) {\n              let url = this.props.redirectURL;\n              if (!url) {\n                const path = _.isFunction(this.props.resourceObjPath) ? this.props.resourceObjPath : resourceObjPath;\n                url = path(o, referenceFor(o));\n              }\n              history.push(url);\n              // TODO: (ggreer). show message on new page. maybe delete old obj?\n              return;\n            }\n            const success = `${newName} has been updated to version ${o.metadata.resourceVersion}`;\n            this.setState({ success, error: null });\n            this.loadYaml(true, o);\n          })\n          .catch(e => this.handleError(e.message));\n      });\n    }\n\n    download(data = this.getEditor().getValue()) {\n      const blob = new Blob([data], { type: 'text/yaml;charset=utf-8' });\n      let filename = 'k8s-object.yaml';\n      try {\n        const obj = safeLoad(data);\n        if (obj.kind) {\n          filename = `${obj.kind.toLowerCase()}-${obj.metadata.name}.yaml`;\n        }\n      } catch (unused) {\n        // unused\n      }\n      saveAs(blob, filename);\n    }\n\n    getYamlContent_(id = 'default', yaml = '', kind = referenceForModel(this.props.model)) {\n      try {\n        const sampleObj = generateObjToLoad(kind, id, yaml, this.props.obj.metadata.namespace);\n        this.setState({ sampleObj });\n        return sampleObj;\n      } catch (error) {\n        errorModal({\n          title: 'Failed to Parse YAML Sample',\n          error: <div className=\"co-pre-line\">{error.message || error.name || 'An error occurred.'}</div>,\n        });\n      }\n    }\n\n    insertYamlContent_ = (id, yaml, kind) => {\n      const content = this.getYamlContent_(id, yaml, kind);\n      this.addToYAML(id, content);\n    };\n\n    replaceYamlContent_ = (id, yaml, kind) => {\n      const content = this.getYamlContent_(id, yaml, kind);\n      this.loadYaml(true, content);\n    };\n\n    downloadSampleYaml_(id = 'default', yaml = '', kind = referenceForModel(this.props.model)) {\n      try {\n        const sampleObj = generateObjToLoad(kind, id, yaml, this.props.obj.metadata.namespace);\n        const data = safeDump(sampleObj);\n        this.download(data);\n      } catch (e) {\n        this.download(yaml);\n      }\n    }\n\n    toggleSidebar = () => {\n      this.setState(state => {\n        return { showSidebar: !state.showSidebar };\n      });\n      window.dispatchEvent(new Event('sidebar_toggle'));\n    };\n\n    render() {\n      if (!this.props.create && !this.props.obj) {\n        return <Loading />;\n      }\n\n      const { connectDropTarget, isOver, canDrop, create, yamlSamplesList, customClass, onChange = () => null, t } = this.props;\n      const klass = classNames('co-file-dropzone-container', {\n        'co-file-dropzone--drop-over': isOver,\n      });\n\n      const { error, success, stale, yaml, showSidebar } = this.state;\n      const { obj, download = true, header, genericYAML = false, children: customAlerts } = this.props;\n      const readOnly = this.props.readOnly || this.state.notAllowed;\n      const options = { readOnly, scrollBeyondLastLine: false };\n      const model = this.getModel(obj);\n      const { samples, snippets } = model ? getResourceSidebarSamples(model, yamlSamplesList) : { samples: [], snippets: [] };\n      const definition = model ? definitionFor(model) : { properties: [] };\n      const showSchema = definition && !_.isEmpty(definition.properties);\n      const hasSidebarContent = showSchema || !_.isEmpty(samples) || !_.isEmpty(snippets);\n      const sidebarLink =\n        !showSidebar && hasSidebarContent ? (\n          <Button type=\"button\" variant=\"link\" isInline onClick={this.toggleSidebar}>\n            <InfoCircleIcon className=\"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" />\n            {t('COMMON:MSG_COMMON_BUTTON_ETC_11')}\n          </Button>\n        ) : null;\n\n      const editYamlComponent = (\n        <div className=\"co-file-dropzone co-file-dropzone__flex\">\n          {canDrop && (\n            <div className={klass}>\n              <p className=\"co-file-dropzone__drop-text\">Drop file here</p>\n            </div>\n          )}\n\n          {create && !this.props.hideHeader && (\n            <div className=\"yaml-editor__header\">\n              <Split>\n                <SplitItem isFilled>\n                  <h1 className=\"yaml-editor__header-text\">{header}</h1>\n                </SplitItem>\n                <SplitItem>{getBadgeFromType(model && model.badge)}</SplitItem>\n              </Split>\n              <p className=\"help-block\">{t('COMMON:MSG_CREATEYAML_DIV1_DESCRIPTION_1')}</p>\n            </div>\n          )}\n\n          <div className=\"pf-c-form co-m-page__body\">\n            <div className=\"co-p-has-sidebar\">\n              <div className=\"co-p-has-sidebar__body\">\n                <div className={classNames('yaml-editor', customClass)} ref={r => (this.editor = r)}>\n                  <YAMLEditor ref={this.monacoRef} value={yaml} options={options} showShortcuts={!genericYAML} minHeight=\"100px\" toolbarLinks={sidebarLink ? [sidebarLink] : []} onChange={newValue => this.setState({ yaml: newValue }, () => onChange(newValue))} onSave={() => this.save()} />\n                  <div className=\"yaml-editor__buttons\" ref={r => (this.buttons = r)}>\n                    {customAlerts}\n                    {error && (\n                      <Alert isInline className=\"co-alert co-alert--scrollable\" variant=\"danger\" title=\"An error occurred\">\n                        <div className=\"co-pre-line\">{error}</div>\n                      </Alert>\n                    )}\n                    {success && <Alert isInline className=\"co-alert\" variant=\"success\" title={success} />}\n                    {stale && (\n                      <Alert isInline className=\"co-alert\" variant=\"info\" title=\"This object has been updated.\">\n                        Click reload to see the new version.\n                      </Alert>\n                    )}\n                    <ActionGroup className=\"pf-c-form__group--no-top-margin\">\n                      {create && (\n                        <Button type=\"submit\" variant=\"primary\" id=\"save-changes\" onClick={() => this.save()}>\n                          {t('COMMON:MSG_COMMON_BUTTON_ETC_9')}\n                        </Button>\n                      )}\n                      {!create && !readOnly && (\n                        <Button type=\"submit\" variant=\"primary\" id=\"save-changes\" onClick={() => this.save()}>\n                          {t('COMMON:MSG_COMMON_BUTTON_COMMIT_3')}\n                        </Button>\n                      )}\n                      {!create && !genericYAML && (\n                        <Button type=\"submit\" variant=\"secondary\" id=\"reload-object\" onClick={() => this.reload()}>\n                          {t('COMMON:MSG_COMMON_BUTTON_ETC_13')}\n                        </Button>\n                      )}\n                      <Button variant=\"secondary\" id=\"cancel\" onClick={() => this.onCancel()}>\n                        {t('COMMON:MSG_COMMON_BUTTON_COMMIT_2')}\n                      </Button>\n                      {download && (\n                        <Button type=\"submit\" variant=\"secondary\" className=\"pf-c-button--align-right hidden-sm hidden-xs\" onClick={() => this.download()}>\n                          <DownloadIcon /> {t('COMMON:MSG_COMMON_BUTTON_ETC_12')}\n                        </Button>\n                      )}\n                    </ActionGroup>\n                  </div>\n                </div>\n              </div>\n              {hasSidebarContent && <ResourceSidebar isCreateMode={create} kindObj={model} loadSampleYaml={this.replaceYamlContent_} insertSnippetYaml={this.insertYamlContent_} downloadSampleYaml={this.downloadSampleYaml_} showSidebar={showSidebar} toggleSidebar={this.toggleSidebar} samples={samples} snippets={snippets} showSchema={showSchema} />}\n            </div>\n          </div>\n        </div>\n      );\n\n      return _.isFunction(connectDropTarget) ? connectDropTarget(editYamlComponent) : editYamlComponent;\n    }\n  },\n);\n\nexport const EditYAML = connectToFlags(FLAGS.CONSOLE_YAML_SAMPLE)(\n  withTranslation()(({ flags, ...props }) => {\n    const resources = flags[FLAGS.CONSOLE_YAML_SAMPLE]\n      ? [\n          {\n            kind: referenceForModel(ConsoleYAMLSampleModel),\n            isList: true,\n            prop: 'yamlSamplesList',\n          },\n        ]\n      : [];\n\n    return (\n      <Firehose resources={resources}>\n        <EditYAML_ {...props} />\n      </Firehose>\n    );\n  }),\n);\n"]}]}