{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/components/summary.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/components/summary.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { pluralize } from '@patternfly/react-core';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { Link } from 'react-router-dom';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { vulnPriority, priorityFor } from '../const';\nimport { ImageManifestVulnModel } from '../models';\nexport const securityHealthHandler = ({ imageManifestVuln, }) => {\n    const { data, loaded, loadError } = imageManifestVuln;\n    if (loadError) {\n        return { state: HealthState.UNKNOWN, message: 'Not available' };\n    }\n    if (!loaded) {\n        return { state: HealthState.LOADING, message: 'Scanning in progress' };\n    }\n    if (!_.isEmpty(data)) {\n        return {\n            state: HealthState.ERROR,\n            message: pluralize(_.uniqBy(data, 'metadata.name').length, 'vulnerable image'),\n        };\n    }\n    return { state: HealthState.OK, message: '0 vulnerable images' };\n};\nexport const quayURLFor = (vuln) => {\n    const base = vuln.spec.image\n        .replace('@sha256', '')\n        .split('/')\n        .reduce((url, part, i) => [...url, part, ...(i === 0 ? ['repository'] : [])], [])\n        .join('/');\n    return `//${base}/manifest/${vuln.spec.manifest}?tab=vulnerabilities`;\n};\nexport const SecurityBreakdownPopup = ({ imageManifestVuln, }) => {\n    const resource = imageManifestVuln.data;\n    const vulnsFor = (severity) => resource.filter((v) => { var _a; return ((_a = v.status) === null || _a === void 0 ? void 0 : _a.highestSeverity) === severity; });\n    const fixableVulns = resource\n        .filter((v) => { var _a; return ((_a = v.status) === null || _a === void 0 ? void 0 : _a.fixableCount) > 0; })\n        .reduce((all, v) => all.set(v.metadata.name, v), new Map());\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-status-popup__description\" }, \"Container images from Quay are analyzed to identify vulnerabilities. Images from other registries are not scanned.\"),\n        !_.isEmpty(resource) ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-status-popup__section\" },\n                React.createElement(\"div\", { className: \"co-status-popup__row\" },\n                    React.createElement(\"div\", { className: \"co-status-popup__text--bold\" }, \"Vulnerable Container Images\")),\n                React.createElement(\"div\", { style: { display: 'flex', justifyContent: 'space-between' } },\n                    React.createElement(\"div\", { style: { width: '66%', marginRight: '24px' } }, vulnPriority\n                        .map((priority) => !_.isEmpty(vulnsFor(priority.value)) ? (React.createElement(\"div\", { className: \"co-status-popup__row\", key: priority.value },\n                        React.createElement(\"div\", null,\n                            React.createElement(ExclamationTriangleIcon, { color: priority.color.value, alt: priority.title }),\n                            \"\\u00A0\",\n                            _.uniqBy(vulnsFor(priority.value), 'metadata.name').length,\n                            ' ',\n                            priority.title))) : null)\n                        .toArray()),\n                    React.createElement(\"div\", null,\n                        React.createElement(Link, { to: `/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}`, \"aria-label\": \"View all\" },\n                            React.createElement(ChartDonut, { colorScale: vulnPriority.map((priority) => priority.color.value).toArray(), data: vulnPriority\n                                    .map((priority) => ({\n                                    label: priority.title,\n                                    x: priority.value,\n                                    y: _.uniqBy(vulnsFor(priority.value), 'metadata.name').length,\n                                }))\n                                    .toArray(), title: `${_.uniqBy(resource, 'metadata.name').length} total` }))))),\n            !_.isEmpty(fixableVulns) && (React.createElement(\"div\", { className: \"co-status-popup__section\" },\n                React.createElement(\"div\", { className: \"co-status-popup__row\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(\"span\", { className: \"co-status-popup__text--bold\" }, \"Fixable Container Images\"),\n                        React.createElement(\"span\", { className: \"text-secondary\" },\n                            \"\\u00A0(\",\n                            fixableVulns.size,\n                            \" total)\"))),\n                React.createElement(\"div\", { className: \"co-status-popup__row\" },\n                    React.createElement(\"span\", { className: \"co-status-popup__text--bold\" }, \"Impact\"),\n                    React.createElement(\"span\", { className: \"co-status-popup__text--bold\" }, \"Vulnerabilities\")),\n                _.sortBy(_.take([...fixableVulns.values()], 5), [\n                    (v) => { var _a; return priorityFor((_a = v.status) === null || _a === void 0 ? void 0 : _a.highestSeverity).index; },\n                ]).map((v) => {\n                    var _a, _b;\n                    return (React.createElement(\"div\", { className: \"co-status-popup__row\", key: v.metadata.name },\n                        React.createElement(\"span\", null,\n                            React.createElement(ExclamationTriangleIcon, { color: priorityFor((_a = v.status) === null || _a === void 0 ? void 0 : _a.highestSeverity).color.value }),\n                            ' ',\n                            React.createElement(Link, { to: `/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}?name=${v.metadata.name}` }, pluralize(resource.filter(({ metadata }) => metadata.name === v.metadata.name).length, 'namespace'))),\n                        React.createElement(\"div\", { className: \"text-secondary\" },\n                            React.createElement(ExternalLink, { href: quayURLFor(v), text: `${(_b = v.status) === null || _b === void 0 ? void 0 : _b.fixableCount} fixable` }))));\n                }),\n                React.createElement(\"div\", { className: \"co-status-popup__row\" },\n                    React.createElement(Link, { to: {\n                            pathname: `/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}`,\n                            search: '?orderBy=desc&sortBy=Fixable',\n                        } }, \"View all\")))))) : (React.createElement(\"div\", { className: \"co-status-popup__section\" },\n            React.createElement(\"span\", { className: \"text-secondary\" }, \"No vulnerabilities detected.\")))));\n};\nSecurityBreakdownPopup.displayName = 'SecurityBreakdownPopup';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/components/summary.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/container-security/src/components/summary.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { pluralize } from '@patternfly/react-core';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { ResourceHealthHandler } from '@console/plugin-sdk';\nimport { WatchK8sResults } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { Link } from 'react-router-dom';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ImageManifestVuln, WatchImageVuln } from '../types';\nimport { vulnPriority, priorityFor } from '../const';\nimport { ImageManifestVulnModel } from '../models';\n\nexport const securityHealthHandler: ResourceHealthHandler<WatchImageVuln> = ({\n  imageManifestVuln,\n}) => {\n  const { data, loaded, loadError } = imageManifestVuln;\n\n  if (loadError) {\n    return { state: HealthState.UNKNOWN, message: 'Not available' };\n  }\n  if (!loaded) {\n    return { state: HealthState.LOADING, message: 'Scanning in progress' };\n  }\n  if (!_.isEmpty(data)) {\n    return {\n      state: HealthState.ERROR,\n      message: pluralize(_.uniqBy(data, 'metadata.name').length, 'vulnerable image'),\n    };\n  }\n  return { state: HealthState.OK, message: '0 vulnerable images' };\n};\n\nexport const quayURLFor = (vuln: ImageManifestVuln) => {\n  const base = vuln.spec.image\n    .replace('@sha256', '')\n    .split('/')\n    .reduce((url, part, i) => [...url, part, ...(i === 0 ? ['repository'] : [])], [])\n    .join('/');\n  return `//${base}/manifest/${vuln.spec.manifest}?tab=vulnerabilities`;\n};\n\nexport const SecurityBreakdownPopup: React.FC<SecurityBreakdownPopupProps> = ({\n  imageManifestVuln,\n}) => {\n  const resource = imageManifestVuln.data;\n\n  const vulnsFor = (severity: string) =>\n    resource.filter((v) => v.status?.highestSeverity === severity);\n  const fixableVulns = resource\n    .filter((v) => v.status?.fixableCount > 0)\n    .reduce((all, v) => all.set(v.metadata.name, v), new Map<string, ImageManifestVuln>());\n\n  return (\n    <>\n      <div className=\"co-status-popup__description\">\n        Container images from Quay are analyzed to identify vulnerabilities. Images from other\n        registries are not scanned.\n      </div>\n      {!_.isEmpty(resource) ? (\n        <>\n          <div className=\"co-status-popup__section\">\n            <div className=\"co-status-popup__row\">\n              <div className=\"co-status-popup__text--bold\">Vulnerable Container Images</div>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div style={{ width: '66%', marginRight: '24px' }}>\n                {vulnPriority\n                  .map((priority) =>\n                    !_.isEmpty(vulnsFor(priority.value)) ? (\n                      <div className=\"co-status-popup__row\" key={priority.value}>\n                        <div>\n                          <ExclamationTriangleIcon\n                            color={priority.color.value}\n                            alt={priority.title}\n                          />\n                          &nbsp;\n                          {_.uniqBy(vulnsFor(priority.value), 'metadata.name').length}{' '}\n                          {priority.title}\n                        </div>\n                      </div>\n                    ) : null,\n                  )\n                  .toArray()}\n              </div>\n              <div>\n                <Link\n                  to={`/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}`}\n                  aria-label=\"View all\"\n                >\n                  <ChartDonut\n                    colorScale={vulnPriority.map((priority) => priority.color.value).toArray()}\n                    data={vulnPriority\n                      .map((priority) => ({\n                        label: priority.title,\n                        x: priority.value,\n                        y: _.uniqBy(vulnsFor(priority.value), 'metadata.name').length,\n                      }))\n                      .toArray()}\n                    title={`${_.uniqBy(resource, 'metadata.name').length} total`}\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n          {!_.isEmpty(fixableVulns) && (\n            <div className=\"co-status-popup__section\">\n              <div className=\"co-status-popup__row\">\n                <div>\n                  <span className=\"co-status-popup__text--bold\">Fixable Container Images</span>\n                  <span className=\"text-secondary\">&nbsp;({fixableVulns.size} total)</span>\n                </div>\n              </div>\n              <div className=\"co-status-popup__row\">\n                <span className=\"co-status-popup__text--bold\">Impact</span>\n                <span className=\"co-status-popup__text--bold\">Vulnerabilities</span>\n              </div>\n              {_.sortBy(_.take([...fixableVulns.values()], 5), [\n                (v) => priorityFor(v.status?.highestSeverity).index,\n              ]).map((v) => (\n                <div className=\"co-status-popup__row\" key={v.metadata.name}>\n                  <span>\n                    <ExclamationTriangleIcon\n                      color={priorityFor(v.status?.highestSeverity).color.value}\n                    />{' '}\n                    <Link\n                      to={`/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}?name=${\n                        v.metadata.name\n                      }`}\n                    >\n                      {pluralize(\n                        resource.filter(({ metadata }) => metadata.name === v.metadata.name).length,\n                        'namespace',\n                      )}\n                    </Link>\n                  </span>\n                  <div className=\"text-secondary\">\n                    <ExternalLink href={quayURLFor(v)} text={`${v.status?.fixableCount} fixable`} />\n                  </div>\n                </div>\n              ))}\n              <div className=\"co-status-popup__row\">\n                <Link\n                  to={{\n                    pathname: `/k8s/all-namespaces/${referenceForModel(ImageManifestVulnModel)}`,\n                    search: '?orderBy=desc&sortBy=Fixable',\n                  }}\n                >\n                  View all\n                </Link>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"co-status-popup__section\">\n          <span className=\"text-secondary\">No vulnerabilities detected.</span>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport type SecurityBreakdownPopupProps = WatchK8sResults<WatchImageVuln>;\n\nSecurityBreakdownPopup.displayName = 'SecurityBreakdownPopup';\n"]}]}