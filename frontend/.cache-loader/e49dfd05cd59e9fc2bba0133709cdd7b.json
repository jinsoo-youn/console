{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-empty-summary.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-empty-summary.tsx","mtime":1615298458650},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Expandable, Text, TextVariants } from '@patternfly/react-core';\nimport { deviceLabel, deviceKey, bootOrderEmptyTitle, bootOrderEmptyMessage } from '../constants';\nexport const BootOrderEmptySummary = ({ devices }) => {\n    const [isExpanded, setIsExpanded] = React.useState(false);\n    const options = devices.filter((device) => !device.value.bootOrder);\n    const onToggle = React.useCallback(() => setIsExpanded(!isExpanded), [isExpanded]);\n    // Note(Yaacov):\n    // className='text-secondary' is a hack to fix TextVariants being overriden.\n    // Using <ol> because '@patternfly/react-core' <List> currently miss isOrder parameter.\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Text, { component: TextVariants.p, className: \"kubevirt-boot-order-summary__empty-text\" }, bootOrderEmptyTitle),\n        React.createElement(Text, { component: TextVariants.small, className: \"text-secondary\" }, bootOrderEmptyMessage),\n        options.length > 0 && (React.createElement(Expandable, { toggleText: isExpanded ? 'Hide default boot disks' : 'Show default boot disks', onToggle: onToggle, isExpanded: isExpanded, className: \"kubevirt-boot-order-summary__expandable\" },\n            React.createElement(\"ol\", null, options.map((option) => (React.createElement(\"li\", { key: deviceKey(option) }, deviceLabel(option)))))))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-empty-summary.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-empty-summary.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAExE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;AAElG,MAAM,CAAC,MAAM,qBAAqB,GAAyC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IACzF,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAU,KAAK,CAAC,CAAC;IACnE,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACpE,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEnF,gBAAgB;IAChB,4EAA4E;IAC5E,uFAAuF;IACvF,OAAO,CACL;QACE,oBAAC,IAAI,IAAC,SAAS,EAAE,YAAY,CAAC,CAAC,EAAE,SAAS,EAAC,yCAAyC,IACjF,mBAAmB,CACf;QACP,oBAAC,IAAI,IAAC,SAAS,EAAE,YAAY,CAAC,KAAK,EAAE,SAAS,EAAC,gBAAgB,IAC5D,qBAAqB,CACjB;QACN,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CACrB,oBAAC,UAAU,IACT,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,yBAAyB,EAC9E,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,SAAS,EAAC,yCAAyC;YAEnD,gCACG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACvB,4BAAI,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,IAAG,WAAW,CAAC,MAAM,CAAC,CAAM,CACvD,CAAC,CACC,CACM,CACd,CACA,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Expandable, Text, TextVariants } from '@patternfly/react-core';\nimport { BootableDeviceType } from '../../../types';\nimport { deviceLabel, deviceKey, bootOrderEmptyTitle, bootOrderEmptyMessage } from '../constants';\n\nexport const BootOrderEmptySummary: React.FC<BootOrderEmptySummaryProps> = ({ devices }) => {\n  const [isExpanded, setIsExpanded] = React.useState<boolean>(false);\n  const options = devices.filter((device) => !device.value.bootOrder);\n  const onToggle = React.useCallback(() => setIsExpanded(!isExpanded), [isExpanded]);\n\n  // Note(Yaacov):\n  // className='text-secondary' is a hack to fix TextVariants being overriden.\n  // Using <ol> because '@patternfly/react-core' <List> currently miss isOrder parameter.\n  return (\n    <>\n      <Text component={TextVariants.p} className=\"kubevirt-boot-order-summary__empty-text\">\n        {bootOrderEmptyTitle}\n      </Text>\n      <Text component={TextVariants.small} className=\"text-secondary\">\n        {bootOrderEmptyMessage}\n      </Text>\n      {options.length > 0 && (\n        <Expandable\n          toggleText={isExpanded ? 'Hide default boot disks' : 'Show default boot disks'}\n          onToggle={onToggle}\n          isExpanded={isExpanded}\n          className=\"kubevirt-boot-order-summary__expandable\"\n        >\n          <ol>\n            {options.map((option) => (\n              <li key={deviceKey(option)}>{deviceLabel(option)}</li>\n            ))}\n          </ol>\n        </Expandable>\n      )}\n    </>\n  );\n};\n\nexport type BootOrderEmptySummaryProps = {\n  devices: BootableDeviceType[];\n};\n"]}]}