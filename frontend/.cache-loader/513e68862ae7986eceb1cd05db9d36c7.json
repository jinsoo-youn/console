{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourcesPanel.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourcesPanel.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { SidebarSectionHeading } from '@console/internal/components/utils';\nimport TopologyHelmReleaseResourceList from './TopologyHelmReleaseResourceList';\nconst TopologyHelmReleaseResourcesPanel = ({ manifestResources, releaseNamespace }) => {\n    const kinds = manifestResources\n        .reduce((resourceKinds, resource) => {\n        const kind = referenceFor(resource);\n        if (!resourceKinds.includes(kind)) {\n            resourceKinds.push(kind);\n        }\n        return resourceKinds;\n    }, [])\n        .sort((a, b) => a.localeCompare(b));\n    const resourceLists = kinds.reduce((lists, kind) => {\n        const model = modelFor(kind);\n        const resources = manifestResources.filter(resource => resource.kind === model.kind);\n        if (resources.length) {\n            lists.push(React.createElement(\"div\", { key: model.kind },\n                React.createElement(SidebarSectionHeading, { text: model.labelPlural }),\n                React.createElement(TopologyHelmReleaseResourceList, { resources: resources, releaseNamespace: releaseNamespace })));\n        }\n        return lists;\n    }, []);\n    return React.createElement(\"div\", { className: \"overview__sidebar-pane-body\" }, resourceLists);\n};\nexport default TopologyHelmReleaseResourcesPanel;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourcesPanel.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourcesPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAmB,QAAQ,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAC3E,OAAO,+BAA+B,MAAM,mCAAmC,CAAC;AAOhF,MAAM,iCAAiC,GAAsD,CAAC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,EAAE,EAAE;IACvI,MAAM,KAAK,GAAG,iBAAiB;SAC5B,MAAM,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,EAAE;QAClC,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACjC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,OAAO,aAAa,CAAC;IACvB,CAAC,EAAE,EAAE,CAAC;SACL,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtC,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,MAAM,SAAS,GAAG,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;QACrF,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,KAAK,CAAC,IAAI,CACR,6BAAK,GAAG,EAAE,KAAK,CAAC,IAAI;gBAClB,oBAAC,qBAAqB,IAAC,IAAI,EAAE,KAAK,CAAC,WAAW,GAAI;gBAClD,oBAAC,+BAA+B,IAAC,SAAS,EAAE,SAAS,EAAE,gBAAgB,EAAE,gBAAgB,GAAI,CACzF,CACP,CAAC;SACH;QACD,OAAO,KAAK,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,6BAAK,SAAS,EAAC,6BAA6B,IAAE,aAAa,CAAO,CAAC;AAC5E,CAAC,CAAC;AAEF,eAAe,iCAAiC,CAAC","sourcesContent":["import * as React from 'react';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { SidebarSectionHeading } from '@console/internal/components/utils';\nimport TopologyHelmReleaseResourceList from './TopologyHelmReleaseResourceList';\n\ntype TopologyHelmReleaseResourcesPanelProps = {\n  manifestResources: K8sResourceKind[];\n  releaseNamespace: string;\n};\n\nconst TopologyHelmReleaseResourcesPanel: React.SFC<TopologyHelmReleaseResourcesPanelProps> = ({ manifestResources, releaseNamespace }) => {\n  const kinds = manifestResources\n    .reduce((resourceKinds, resource) => {\n      const kind = referenceFor(resource);\n      if (!resourceKinds.includes(kind)) {\n        resourceKinds.push(kind);\n      }\n      return resourceKinds;\n    }, [])\n    .sort((a, b) => a.localeCompare(b));\n\n  const resourceLists = kinds.reduce((lists, kind) => {\n    const model = modelFor(kind);\n    const resources = manifestResources.filter(resource => resource.kind === model.kind);\n    if (resources.length) {\n      lists.push(\n        <div key={model.kind}>\n          <SidebarSectionHeading text={model.labelPlural} />\n          <TopologyHelmReleaseResourceList resources={resources} releaseNamespace={releaseNamespace} />\n        </div>,\n      );\n    }\n    return lists;\n  }, []);\n\n  return <div className=\"overview__sidebar-pane-body\">{resourceLists}</div>;\n};\n\nexport default TopologyHelmReleaseResourcesPanel;\n"]}]}