{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/phase.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/phase.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { BanIcon } from '@patternfly/react-icons';\nexport const Phase = ({ status }) => (React.createElement(\"span\", { className: status === 'Failed' ? 'co-error' : '' },\n    status === 'Failed' && React.createElement(BanIcon, { \"data-test-id\": \"ban-icon\" }),\n    \" \",\n    status));\nPhase.displayName = 'Phase';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/phase.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/phase.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAElD,MAAM,CAAC,MAAM,KAAK,GAA0B,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAC1D,8BAAM,SAAS,EAAE,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IACnD,MAAM,KAAK,QAAQ,IAAI,oBAAC,OAAO,oBAAc,UAAU,GAAG;;IAAG,MAAM,CAC/D,CACR,CAAC;AAMF,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC","sourcesContent":["import * as React from 'react';\nimport { BanIcon } from '@patternfly/react-icons';\n\nexport const Phase: React.SFC<PhaseProps> = ({ status }) => (\n  <span className={status === 'Failed' ? 'co-error' : ''}>\n    {status === 'Failed' && <BanIcon data-test-id=\"ban-icon\" />} {status}\n  </span>\n);\n\nexport type PhaseProps = {\n  status: string;\n};\n\nPhase.displayName = 'Phase';\n"]}]}