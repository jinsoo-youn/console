{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/health-checks-types.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/health-checks-types.ts","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export var HealthChecksProbeType;\n(function (HealthChecksProbeType) {\n    HealthChecksProbeType[\"ReadinessProbe\"] = \"readinessProbe\";\n    HealthChecksProbeType[\"LivenessProbe\"] = \"livenessProbe\";\n    HealthChecksProbeType[\"StartupProbe\"] = \"startupProbe\";\n})(HealthChecksProbeType || (HealthChecksProbeType = {}));\nexport var RequestType;\n(function (RequestType) {\n    RequestType[\"HTTPGET\"] = \"httpGet\";\n    RequestType[\"ContainerCommand\"] = \"command\";\n    RequestType[\"TCPSocket\"] = \"tcpSocket\";\n})(RequestType || (RequestType = {}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/health-checks-types.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/health-checks/health-checks-types.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC/B,0DAAiC,CAAA;IACjC,wDAA+B,CAAA;IAC/B,sDAA6B,CAAA;AAC/B,CAAC,EAJW,qBAAqB,KAArB,qBAAqB,QAIhC;AAED,MAAM,CAAN,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,kCAAmB,CAAA;IACnB,2CAA4B,CAAA;IAC5B,sCAAuB,CAAA;AACzB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB","sourcesContent":["import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\n\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  requestType?: string;\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n  exec?: { command?: string[] };\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n}\n\nexport interface HealthCheckProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckProbeData;\n}\n"]}]}