{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/labels-modal.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/labels-modal.jsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { k8sPatch, referenceForModel } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent, ResourceIcon, SelectorInput } from '../utils';\nconst LABELS_PATH = '/metadata/labels';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/labels';\nclass BaseLabelsModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this._submit = this._submit.bind(this);\n        this._cancel = props.cancel.bind(this);\n        const labels = SelectorInput.arrayify(_.get(props.resource, props.path.split('/').slice(1)));\n        this.state = Object.assign(this.state, {\n            labels,\n        });\n        this.createPath = !labels.length;\n    }\n    _submit(e) {\n        e.preventDefault();\n        const { kind, path, resource, isPodSelector } = this.props;\n        const patch = [\n            {\n                op: this.createPath ? 'add' : 'replace',\n                path,\n                value: SelectorInput.objectify(this.state.labels),\n            },\n        ];\n        // https://kubernetes.io/docs/user-guide/deployments/#selector\n        //   .spec.selector must match .spec.template.metadata.labels, or it will be rejected by the API\n        const updateTemplate = isPodSelector && !_.isEmpty(_.get(resource, TEMPLATE_SELECTOR_PATH.split('/').slice(1)));\n        if (updateTemplate) {\n            patch.push({\n                path: TEMPLATE_SELECTOR_PATH,\n                op: 'replace',\n                value: SelectorInput.objectify(this.state.labels),\n            });\n        }\n        const promise = k8sPatch(kind, resource, patch);\n        this.handlePromise(promise).then(this.props.close);\n    }\n    render() {\n        const { kind, resource, description, message, labelClassName } = this.props;\n        return (React.createElement(\"form\", { onSubmit: this._submit, name: \"form\", className: \"modal-content\" },\n            React.createElement(ModalTitle, null,\n                \"Edit \",\n                description || 'Labels'),\n            React.createElement(ModalBody, null,\n                React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12\" }, message ||\n                        'Labels help you organize and select resources. Adding labels below will let you query for objects that have similar, overlapping or dissimilar labels.')),\n                React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12\" },\n                        React.createElement(\"label\", { htmlFor: \"tags-input\", className: \"control-label\" },\n                            _.capitalize(description) || 'Labels',\n                            \" for\",\n                            ' ',\n                            React.createElement(ResourceIcon, { kind: kind.crd ? referenceForModel(kind) : kind.kind }),\n                            ' ',\n                            resource.metadata.name),\n                        React.createElement(SelectorInput, { onChange: (labels) => this.setState({ labels }), tags: this.state.labels, labelClassName: labelClassName || `co-text-${kind.id}`, autoFocus: true })))),\n            React.createElement(ModalSubmitFooter, { errorMessage: this.state.errorMessage, inProgress: this.state.inProgress, submitText: \"Save\", cancel: this._cancel })));\n    }\n}\nexport const labelsModal = createModalLauncher((props) => (React.createElement(BaseLabelsModal, Object.assign({ path: LABELS_PATH }, props))));\nexport const podSelectorModal = createModalLauncher((props) => (React.createElement(BaseLabelsModal, Object.assign({ path: ['replicationcontrolleres', 'services'].includes(props.kind.plural)\n        ? '/spec/selector'\n        : '/spec/selector/matchLabels', isPodSelector: true, description: \"Pod Selector\", message: `Determines the set of pods targeted by this ${props.kind.label.toLowerCase()}.`, labelClassName: \"co-text-pod\" }, props))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/labels-modal.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/labels-modal.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { k8sPatch, referenceForModel } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent, ResourceIcon, SelectorInput } from '../utils';\n\nconst LABELS_PATH = '/metadata/labels';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/labels';\n\nclass BaseLabelsModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = props.cancel.bind(this);\n    const labels = SelectorInput.arrayify(_.get(props.resource, props.path.split('/').slice(1)));\n    this.state = Object.assign(this.state, {\n      labels,\n    });\n    this.createPath = !labels.length;\n  }\n\n  _submit(e) {\n    e.preventDefault();\n\n    const { kind, path, resource, isPodSelector } = this.props;\n\n    const patch = [\n      {\n        op: this.createPath ? 'add' : 'replace',\n        path,\n        value: SelectorInput.objectify(this.state.labels),\n      },\n    ];\n\n    // https://kubernetes.io/docs/user-guide/deployments/#selector\n    //   .spec.selector must match .spec.template.metadata.labels, or it will be rejected by the API\n    const updateTemplate =\n      isPodSelector && !_.isEmpty(_.get(resource, TEMPLATE_SELECTOR_PATH.split('/').slice(1)));\n\n    if (updateTemplate) {\n      patch.push({\n        path: TEMPLATE_SELECTOR_PATH,\n        op: 'replace',\n        value: SelectorInput.objectify(this.state.labels),\n      });\n    }\n    const promise = k8sPatch(kind, resource, patch);\n    this.handlePromise(promise).then(this.props.close);\n  }\n\n  render() {\n    const { kind, resource, description, message, labelClassName } = this.props;\n\n    return (\n      <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>Edit {description || 'Labels'}</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">\n              {message ||\n                'Labels help you organize and select resources. Adding labels below will let you query for objects that have similar, overlapping or dissimilar labels.'}\n            </div>\n          </div>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">\n              <label htmlFor=\"tags-input\" className=\"control-label\">\n                {_.capitalize(description) || 'Labels'} for{' '}\n                <ResourceIcon kind={kind.crd ? referenceForModel(kind) : kind.kind} />{' '}\n                {resource.metadata.name}\n              </label>\n              <SelectorInput\n                onChange={(labels) => this.setState({ labels })}\n                tags={this.state.labels}\n                labelClassName={labelClassName || `co-text-${kind.id}`}\n                autoFocus\n              />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={this.state.errorMessage}\n          inProgress={this.state.inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const labelsModal = createModalLauncher((props) => (\n  <BaseLabelsModal path={LABELS_PATH} {...props} />\n));\n\nexport const podSelectorModal = createModalLauncher((props) => (\n  <BaseLabelsModal\n    path={\n      ['replicationcontrolleres', 'services'].includes(props.kind.plural)\n        ? '/spec/selector'\n        : '/spec/selector/matchLabels'\n    }\n    isPodSelector={true}\n    description=\"Pod Selector\"\n    message={`Determines the set of pods targeted by this ${props.kind.label.toLowerCase()}.`}\n    labelClassName=\"co-text-pod\"\n    {...props}\n  />\n));\n"]}]}