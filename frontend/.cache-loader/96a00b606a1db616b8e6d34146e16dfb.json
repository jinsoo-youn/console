{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/LabelsList/LabelRow/label-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/LabelsList/LabelRow/label-row.tsx","mtime":1615298458650},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { GridItem, TextInput, Button } from '@patternfly/react-core';\nexport const LabelRow = ({ label, onChange, onDelete, }) => {\n    const { id, key, value } = label;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(GridItem, { span: 6 },\n            React.createElement(TextInput, { id: `label-${id}-key-input`, className: \"kv-label__key\", placeholder: \"key\", isRequired: true, type: \"text\", value: key, onChange: (newKey) => onChange(Object.assign(Object.assign({}, label), { key: newKey })), \"aria-label\": \"selector key\" })),\n        React.createElement(GridItem, { span: 5 },\n            React.createElement(TextInput, { id: `label-${id}-value-input`, className: \"kv-label__value\", placeholder: \"value\", isRequired: true, type: \"text\", value: value, onChange: (newValue) => onChange(Object.assign(Object.assign({}, label), { value: newValue })), \"aria-label\": \"selector value\" })),\n        React.createElement(GridItem, { span: 1 },\n            React.createElement(Button, { id: `label-${id}-delete-btn`, onClick: () => onDelete(id), variant: \"plain\" },\n                React.createElement(MinusCircleIcon, null)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/LabelsList/LabelRow/label-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/LabelsList/LabelRow/label-row.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAGrE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAA8B,EACpD,KAAK,EACL,QAAQ,EACR,QAAQ,GACS,EAAE,EAAE;IACrB,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IACjC,OAAO,CACL;QACE,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,SAAS,IACR,EAAE,EAAE,SAAS,EAAE,YAAY,EAC3B,SAAS,EAAC,eAAe,EACzB,WAAW,EAAC,KAAK,EACjB,UAAU,QACV,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,GAAG,EACV,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,iCAAM,KAAK,KAAE,GAAG,EAAE,MAAM,IAAG,gBAC9C,cAAc,GACzB,CACO;QACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,SAAS,IACR,EAAE,EAAE,SAAS,EAAE,cAAc,EAC7B,SAAS,EAAC,iBAAiB,EAC3B,WAAW,EAAC,OAAO,EACnB,UAAU,QACV,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,iCAAM,KAAK,KAAE,KAAK,EAAE,QAAQ,IAAG,gBACpD,gBAAgB,GAC3B,CACO;QACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,MAAM,IAAC,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,EAAC,OAAO;gBAChF,oBAAC,eAAe,OAAG,CACZ,CACA,CACV,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { GridItem, TextInput, Button } from '@patternfly/react-core';\nimport { IDLabel } from '../types';\n\nexport const LabelRow = <T extends IDLabel = IDLabel>({\n  label,\n  onChange,\n  onDelete,\n}: LabelRowProps<T>) => {\n  const { id, key, value } = label;\n  return (\n    <>\n      <GridItem span={6}>\n        <TextInput\n          id={`label-${id}-key-input`}\n          className=\"kv-label__key\"\n          placeholder=\"key\"\n          isRequired\n          type=\"text\"\n          value={key}\n          onChange={(newKey) => onChange({ ...label, key: newKey })}\n          aria-label=\"selector key\"\n        />\n      </GridItem>\n      <GridItem span={5}>\n        <TextInput\n          id={`label-${id}-value-input`}\n          className=\"kv-label__value\"\n          placeholder=\"value\"\n          isRequired\n          type=\"text\"\n          value={value}\n          onChange={(newValue) => onChange({ ...label, value: newValue })}\n          aria-label=\"selector value\"\n        />\n      </GridItem>\n      <GridItem span={1}>\n        <Button id={`label-${id}-delete-btn`} onClick={() => onDelete(id)} variant=\"plain\">\n          <MinusCircleIcon />\n        </Button>\n      </GridItem>\n    </>\n  );\n};\n\ntype LabelRowProps<T> = {\n  label: T;\n  onChange: (label: T) => void;\n  onDelete: (id: any) => void;\n};\n"]}]}