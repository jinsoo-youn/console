{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/request-header-idp-form.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/request-header-idp-form.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { ConfigMapModel } from '../../models';\nimport { k8sCreate } from '../../module/k8s';\nimport { ButtonBar, ListInput, PromiseComponent, history } from '../utils';\nimport { addIDP, getOAuthResource, redirectToOAuthPage, mockNames } from './';\nimport { IDPNameInput } from './idp-name-input';\nimport { IDPCAFileInput } from './idp-cafile-input';\nexport class AddRequestHeaderPage extends PromiseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            name: 'request-header',\n            challengeURL: '',\n            loginURL: '',\n            clientCommonNames: [],\n            headers: [],\n            preferredUsernameHeaders: [],\n            nameHeaders: [],\n            emailHeaders: [],\n            caFileContent: '',\n            inProgress: false,\n            errorMessage: '',\n        };\n        this.submit = (e) => {\n            e.preventDefault();\n            if (!this.state.caFileContent) {\n                this.setState({ errorMessage: 'You must specify a CA File.' });\n                return;\n            }\n            // Clear any previous errors.\n            this.setState({ errorMessage: '' });\n            this.getOAuthResource().then((oauth) => {\n                this.addRequestHeaderIDP(oauth, mockNames.ca, true)\n                    .then(() => {\n                    return this.createCAConfigMap()\n                        .then((configMap) => this.addRequestHeaderIDP(oauth, configMap.metadata.name))\n                        .then(redirectToOAuthPage);\n                })\n                    .catch((err) => {\n                    this.setState({ errorMessage: err });\n                });\n            });\n        };\n        this.nameChanged = (event) => {\n            this.setState({ name: event.currentTarget.value });\n        };\n        this.challengeURLChanged = (event) => {\n            this.setState({ challengeURL: event.currentTarget.value });\n        };\n        this.loginURLChanged = (event) => {\n            this.setState({ loginURL: event.currentTarget.value });\n        };\n        this.clientCommonNamesChanged = (clientCommonNames) => {\n            this.setState({ clientCommonNames });\n        };\n        this.headersChanged = (headers) => {\n            this.setState({ headers });\n        };\n        this.preferredUsernameHeadersChanged = (preferredUsernameHeaders) => {\n            this.setState({ preferredUsernameHeaders });\n        };\n        this.nameHeadersChanged = (nameHeaders) => {\n            this.setState({ nameHeaders });\n        };\n        this.emailHeadersChanged = (emailHeaders) => {\n            this.setState({ emailHeaders });\n        };\n        this.caFileChanged = (caFileContent) => {\n            this.setState({ caFileContent });\n        };\n    }\n    getOAuthResource() {\n        return this.handlePromise(getOAuthResource());\n    }\n    createCAConfigMap() {\n        const { caFileContent } = this.state;\n        if (!caFileContent) {\n            return Promise.resolve(null);\n        }\n        const ca = {\n            apiVersion: 'v1',\n            kind: 'ConfigMap',\n            metadata: {\n                generateName: 'request-header-ca-',\n                namespace: 'openshift-config',\n            },\n            data: {\n                'ca.crt': caFileContent,\n            },\n        };\n        return this.handlePromise(k8sCreate(ConfigMapModel, ca));\n    }\n    addRequestHeaderIDP(oauth, caName, dryRun) {\n        const { name, loginURL, challengeURL, clientCommonNames, headers, preferredUsernameHeaders, nameHeaders, emailHeaders, } = this.state;\n        const idp = {\n            name,\n            type: 'RequestHeader',\n            mappingMethod: 'claim',\n            requestHeader: {\n                loginURL,\n                challengeURL,\n                clientCommonNames,\n                headers,\n                preferredUsernameHeaders,\n                nameHeaders,\n                emailHeaders,\n                ca: {\n                    name: caName,\n                },\n            },\n        };\n        return this.handlePromise(addIDP(oauth, idp, dryRun));\n    }\n    render() {\n        const { name, challengeURL, loginURL, caFileContent } = this.state;\n        const title = 'Add Identity Provider: Request Header';\n        return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, title)),\n            React.createElement(\"form\", { onSubmit: this.submit, name: \"form\", className: \"co-m-pane__body-group co-m-pane__form\" },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, title),\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"Use request header to identify users from request header values. It is typically used in combination with an authenticating proxy, which sets the request header value.\"),\n                React.createElement(IDPNameInput, { value: name, onChange: this.nameChanged }),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(\"h3\", { className: \"co-required\" }, \"URLs\"),\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"At least one URL must be provided.\"),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { className: \"control-label\", htmlFor: \"challenge-url\" }, \"Challenge URL\"),\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"url\", onChange: this.challengeURLChanged, value: challengeURL, id: \"challenge-url\", \"aria-describedby\": \"challenge-url-help\" }),\n                    React.createElement(\"div\", { className: \"help-block\", id: \"challenge-url-help\" }, \"The URL to redirect unauthenticated requests from OAuth clients which expect interactive logins.\")),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { className: \"control-label\", htmlFor: \"login-url\" }, \"Login URL\"),\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"url\", onChange: this.loginURLChanged, value: loginURL, id: \"login-url\", \"aria-describedby\": \"login-url-help\" }),\n                    React.createElement(\"div\", { className: \"help-block\", id: \"login-url-help\" }, \"The URL to redirect unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges.\")),\n                React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                React.createElement(\"h3\", null, \"More Options\"),\n                React.createElement(IDPCAFileInput, { value: caFileContent, onChange: this.caFileChanged, isRequired: true }),\n                React.createElement(ListInput, { label: \"Client Common Names\", onChange: this.clientCommonNamesChanged, helpText: \"The set of common names to require a match from.\" }),\n                React.createElement(ListInput, { label: \"Headers\", onChange: this.headersChanged, helpText: \"The set of headers to check for identity information.\", required: true }),\n                React.createElement(ListInput, { label: \"Preferred Username Headers\", onChange: this.preferredUsernameHeadersChanged, helpText: \"The set of headers to check for the preferred username.\" }),\n                React.createElement(ListInput, { label: \"Name Headers\", onChange: this.nameHeadersChanged, helpText: \"The set of headers to check for the display name.\" }),\n                React.createElement(ListInput, { label: \"Email Headers\", onChange: this.emailHeadersChanged, helpText: \"The set of headers to check for the email address.\" }),\n                React.createElement(ButtonBar, { errorMessage: this.state.errorMessage, inProgress: this.state.inProgress },\n                    React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                        React.createElement(Button, { type: \"submit\", variant: \"primary\" }, \"Add\"),\n                        React.createElement(Button, { type: \"button\", variant: \"secondary\", onClick: history.goBack }, \"Cancel\"))))));\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/request-header-idp-form.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/request-header-idp-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\n\nimport { ConfigMapModel } from '../../models';\nimport { IdentityProvider, k8sCreate, K8sResourceKind, OAuthKind } from '../../module/k8s';\nimport { ButtonBar, ListInput, PromiseComponent, history } from '../utils';\nimport { addIDP, getOAuthResource, redirectToOAuthPage, mockNames } from './';\nimport { IDPNameInput } from './idp-name-input';\nimport { IDPCAFileInput } from './idp-cafile-input';\n\nexport class AddRequestHeaderPage extends PromiseComponent<{}, AddRequestHeaderPageState> {\n  readonly state: AddRequestHeaderPageState = {\n    name: 'request-header',\n    challengeURL: '',\n    loginURL: '',\n    clientCommonNames: [],\n    headers: [],\n    preferredUsernameHeaders: [],\n    nameHeaders: [],\n    emailHeaders: [],\n    caFileContent: '',\n    inProgress: false,\n    errorMessage: '',\n  };\n\n  getOAuthResource(): Promise<OAuthKind> {\n    return this.handlePromise(getOAuthResource());\n  }\n\n  createCAConfigMap(): Promise<K8sResourceKind> {\n    const { caFileContent } = this.state;\n    if (!caFileContent) {\n      return Promise.resolve(null);\n    }\n\n    const ca = {\n      apiVersion: 'v1',\n      kind: 'ConfigMap',\n      metadata: {\n        generateName: 'request-header-ca-',\n        namespace: 'openshift-config',\n      },\n      data: {\n        'ca.crt': caFileContent,\n      },\n    };\n\n    return this.handlePromise(k8sCreate(ConfigMapModel, ca));\n  }\n\n  addRequestHeaderIDP(\n    oauth: OAuthKind,\n    caName: string,\n    dryRun?: boolean,\n  ): Promise<K8sResourceKind> {\n    const {\n      name,\n      loginURL,\n      challengeURL,\n      clientCommonNames,\n      headers,\n      preferredUsernameHeaders,\n      nameHeaders,\n      emailHeaders,\n    } = this.state;\n    const idp: IdentityProvider = {\n      name,\n      type: 'RequestHeader',\n      mappingMethod: 'claim',\n      requestHeader: {\n        loginURL,\n        challengeURL,\n        clientCommonNames,\n        headers,\n        preferredUsernameHeaders,\n        nameHeaders,\n        emailHeaders,\n        ca: {\n          name: caName,\n        },\n      },\n    };\n\n    return this.handlePromise(addIDP(oauth, idp, dryRun));\n  }\n\n  submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    if (!this.state.caFileContent) {\n      this.setState({ errorMessage: 'You must specify a CA File.' });\n      return;\n    }\n\n    // Clear any previous errors.\n    this.setState({ errorMessage: '' });\n    this.getOAuthResource().then((oauth: OAuthKind) => {\n      this.addRequestHeaderIDP(oauth, mockNames.ca, true)\n        .then(() => {\n          return this.createCAConfigMap()\n            .then((configMap: K8sResourceKind) =>\n              this.addRequestHeaderIDP(oauth, configMap.metadata.name),\n            )\n            .then(redirectToOAuthPage);\n        })\n        .catch((err) => {\n          this.setState({ errorMessage: err });\n        });\n    });\n  };\n\n  nameChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  challengeURLChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ challengeURL: event.currentTarget.value });\n  };\n\n  loginURLChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ loginURL: event.currentTarget.value });\n  };\n\n  clientCommonNamesChanged = (clientCommonNames: string[]) => {\n    this.setState({ clientCommonNames });\n  };\n\n  headersChanged = (headers: string[]) => {\n    this.setState({ headers });\n  };\n\n  preferredUsernameHeadersChanged = (preferredUsernameHeaders: string[]) => {\n    this.setState({ preferredUsernameHeaders });\n  };\n\n  nameHeadersChanged = (nameHeaders: string[]) => {\n    this.setState({ nameHeaders });\n  };\n\n  emailHeadersChanged = (emailHeaders: string[]) => {\n    this.setState({ emailHeaders });\n  };\n\n  caFileChanged = (caFileContent: string) => {\n    this.setState({ caFileContent });\n  };\n\n  render() {\n    const { name, challengeURL, loginURL, caFileContent } = this.state;\n    const title = 'Add Identity Provider: Request Header';\n    return (\n      <div className=\"co-m-pane__body\">\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <form onSubmit={this.submit} name=\"form\" className=\"co-m-pane__body-group co-m-pane__form\">\n          <h1 className=\"co-m-pane__heading\">{title}</h1>\n          <p className=\"co-m-pane__explanation\">\n            Use request header to identify users from request header values. It is typically used in\n            combination with an authenticating proxy, which sets the request header value.\n          </p>\n          <IDPNameInput value={name} onChange={this.nameChanged} />\n          <div className=\"co-form-section__separator\" />\n          <h3 className=\"co-required\">URLs</h3>\n          <p className=\"co-m-pane__explanation\">At least one URL must be provided.</p>\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"challenge-url\">\n              Challenge URL\n            </label>\n            <input\n              className=\"pf-c-form-control\"\n              type=\"url\"\n              onChange={this.challengeURLChanged}\n              value={challengeURL}\n              id=\"challenge-url\"\n              aria-describedby=\"challenge-url-help\"\n            />\n            <div className=\"help-block\" id=\"challenge-url-help\">\n              The URL to redirect unauthenticated requests from OAuth clients which expect\n              interactive logins.\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"login-url\">\n              Login URL\n            </label>\n            <input\n              className=\"pf-c-form-control\"\n              type=\"url\"\n              onChange={this.loginURLChanged}\n              value={loginURL}\n              id=\"login-url\"\n              aria-describedby=\"login-url-help\"\n            />\n            <div className=\"help-block\" id=\"login-url-help\">\n              The URL to redirect unauthenticated requests from OAuth clients which expect\n              WWW-Authenticate challenges.\n            </div>\n          </div>\n          <div className=\"co-form-section__separator\" />\n          <h3>More Options</h3>\n          <IDPCAFileInput value={caFileContent} onChange={this.caFileChanged} isRequired />\n          <ListInput\n            label=\"Client Common Names\"\n            onChange={this.clientCommonNamesChanged}\n            helpText=\"The set of common names to require a match from.\"\n          />\n          <ListInput\n            label=\"Headers\"\n            onChange={this.headersChanged}\n            helpText=\"The set of headers to check for identity information.\"\n            required\n          />\n          <ListInput\n            label=\"Preferred Username Headers\"\n            onChange={this.preferredUsernameHeadersChanged}\n            helpText=\"The set of headers to check for the preferred username.\"\n          />\n          <ListInput\n            label=\"Name Headers\"\n            onChange={this.nameHeadersChanged}\n            helpText=\"The set of headers to check for the display name.\"\n          />\n          <ListInput\n            label=\"Email Headers\"\n            onChange={this.emailHeadersChanged}\n            helpText=\"The set of headers to check for the email address.\"\n          />\n          <ButtonBar errorMessage={this.state.errorMessage} inProgress={this.state.inProgress}>\n            <ActionGroup className=\"pf-c-form\">\n              <Button type=\"submit\" variant=\"primary\">\n                Add\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" onClick={history.goBack}>\n                Cancel\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport type AddRequestHeaderPageState = {\n  name: string;\n  loginURL: string;\n  challengeURL: string;\n  clientCommonNames: string[];\n  headers: string[];\n  preferredUsernameHeaders: string[];\n  nameHeaders: string[];\n  emailHeaders: string[];\n  caFileContent: string;\n  inProgress: boolean;\n  errorMessage: string;\n};\n"]}]}