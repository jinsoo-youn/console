{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { InputField, DropdownField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nconst ServerlessRouteSection = ({ route }) => {\n    const { values: { image: { ports }, route: { defaultUnknownPort, targetPort: routeTargetPort }, }, } = useFormikContext();\n    const targetPort = routeTargetPort.split('-')[0];\n    const portOptions = ports.reduce((acc, port) => {\n        const name = port === null || port === void 0 ? void 0 : port.containerPort;\n        if (name) {\n            acc[name] = React.createElement(React.Fragment, null, port.containerPort);\n        }\n        return acc;\n    }, {});\n    return (React.createElement(FormSection, { title: \"Routing\" }, route.create && (React.createElement(React.Fragment, null, _.isEmpty(ports) ? (React.createElement(InputField, { type: TextInputTypes.text, name: \"route.unknownTargetPort\", label: \"Target Port\", placeholder: defaultUnknownPort, helpText: \"Target port for traffic.\" })) : (React.createElement(DropdownField, { name: \"route.targetPort\", label: \"Target Port\", items: portOptions, title: portOptions[targetPort] || 'Select target port', helpText: \"Target port for traffic.\", fullWidth: true }))))));\n};\nexport default ServerlessRouteSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,WAAW,MAAM,wBAAwB,CAAC;AAOjD,MAAM,sBAAsB,GAA0C,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAClF,MAAM,EACJ,MAAM,EAAE,EACN,KAAK,EAAE,EAAE,KAAK,EAAE,EAChB,KAAK,EAAE,EAAE,kBAAkB,EAAE,UAAU,EAAE,eAAe,EAAE,GAC3D,GACF,GAAG,gBAAgB,EAAgB,CAAC;IACrC,MAAM,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC7C,MAAM,IAAI,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;QACjC,IAAI,IAAI,EAAE;YACR,GAAG,CAAC,IAAI,CAAC,GAAG,0CAAG,IAAI,CAAC,aAAa,CAAI,CAAC;SACvC;QACD,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAC,SAAS,IACzB,KAAK,CAAC,MAAM,IAAI,CACf,0CACG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAClB,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,yBAAyB,EAC9B,KAAK,EAAC,aAAa,EACnB,WAAW,EAAE,kBAAkB,EAC/B,QAAQ,EAAC,0BAA0B,GACnC,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,aAAa,IACZ,IAAI,EAAC,kBAAkB,EACvB,KAAK,EAAC,aAAa,EACnB,KAAK,EAAE,WAAW,EAClB,KAAK,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,oBAAoB,EACtD,QAAQ,EAAC,0BAA0B,EACnC,SAAS,SACT,CACH,CACA,CACJ,CACW,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { InputField, DropdownField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport { RouteData } from '../import-types';\n\nexport interface ServerlessRouteSectionProps {\n  route: RouteData;\n}\n\nconst ServerlessRouteSection: React.FC<ServerlessRouteSectionProps> = ({ route }) => {\n  const {\n    values: {\n      image: { ports },\n      route: { defaultUnknownPort, targetPort: routeTargetPort },\n    },\n  } = useFormikContext<FormikValues>();\n  const targetPort = routeTargetPort.split('-')[0];\n  const portOptions = ports.reduce((acc, port) => {\n    const name = port?.containerPort;\n    if (name) {\n      acc[name] = <>{port.containerPort}</>;\n    }\n    return acc;\n  }, {});\n  return (\n    <FormSection title=\"Routing\">\n      {route.create && (\n        <>\n          {_.isEmpty(ports) ? (\n            <InputField\n              type={TextInputTypes.text}\n              name=\"route.unknownTargetPort\"\n              label=\"Target Port\"\n              placeholder={defaultUnknownPort}\n              helpText=\"Target port for traffic.\"\n            />\n          ) : (\n            <DropdownField\n              name=\"route.targetPort\"\n              label=\"Target Port\"\n              items={portOptions}\n              title={portOptions[targetPort] || 'Select target port'}\n              helpText=\"Target port for traffic.\"\n              fullWidth\n            />\n          )}\n        </>\n      )}\n    </FormSection>\n  );\n};\n\nexport default ServerlessRouteSection;\n"]}]}