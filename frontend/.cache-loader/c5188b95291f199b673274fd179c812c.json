{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/Application.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/Application.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from '@console/topology';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../topology-types';\nimport { RegroupHint } from '../RegroupHint';\nimport ApplicationNode from './ApplicationNode';\nimport ApplicationGroup from './ApplicationGroup';\nimport './Application.scss';\nconst ObservedApplication = ({ element, selected, onSelect, dndDropRef, droppable, canDrop, dropTarget, dragRegroupable, onContextMenu, contextMenuOpen, dragging }) => {\n    const needsHintRef = React.useRef(false);\n    React.useEffect(() => {\n        const needsHint = dropTarget && !canDrop && dragRegroupable;\n        if (needsHint !== needsHintRef.current) {\n            needsHintRef.current = needsHint;\n            element.getController().fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? React.createElement(RegroupHint, null) : null);\n        }\n    }, [dropTarget, canDrop, element, dragRegroupable]);\n    if (element.isCollapsed()) {\n        return React.createElement(ApplicationNode, { element: element, selected: selected, onSelect: onSelect, dndDropRef: dndDropRef, canDrop: canDrop, dropTarget: dropTarget, onContextMenu: onContextMenu, contextMenuOpen: contextMenuOpen, dragging: dragging });\n    }\n    return React.createElement(ApplicationGroup, { element: element, selected: selected, onSelect: onSelect, dndDropRef: dndDropRef, canDrop: canDrop, dropTarget: dropTarget, droppable: droppable, onContextMenu: onContextMenu, contextMenuOpen: contextMenuOpen, dragging: dragging });\n};\nconst Application = observer(ObservedApplication);\nexport { Application };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/Application.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/Application.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAQ,QAAQ,EAA8D,MAAM,mBAAmB,CAAC;AAC/G,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAChD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAElD,OAAO,oBAAoB,CAAC;AAa5B,MAAM,mBAAmB,GAA+B,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE,EAAE;IACjM,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAU,KAAK,CAAC,CAAC;IAClD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,MAAM,SAAS,GAAG,UAAU,IAAI,CAAC,OAAO,IAAI,eAAe,CAAC;QAC5D,IAAI,SAAS,KAAK,YAAY,CAAC,OAAO,EAAE;YACtC,YAAY,CAAC,OAAO,GAAG,SAAS,CAAC;YACjC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,wBAAwB,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,oBAAC,WAAW,OAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC1G;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;IAEpD,IAAI,OAAO,CAAC,WAAW,EAAE,EAAE;QACzB,OAAO,oBAAC,eAAe,IAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAAC;KAC5O;IAED,OAAO,oBAAC,gBAAgB,IAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAAC;AACpQ,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,QAAQ,CAAC,mBAAmB,CAAC,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport { Node, observer, WithDndDropProps, WithSelectionProps, WithContextMenuProps } from '@console/topology';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../topology-types';\nimport { RegroupHint } from '../RegroupHint';\nimport ApplicationNode from './ApplicationNode';\nimport ApplicationGroup from './ApplicationGroup';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithContextMenuProps;\n\nconst ObservedApplication: React.FC<ApplicationProps> = ({ element, selected, onSelect, dndDropRef, droppable, canDrop, dropTarget, dragRegroupable, onContextMenu, contextMenuOpen, dragging }) => {\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element.getController().fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n\n  if (element.isCollapsed()) {\n    return <ApplicationNode element={element} selected={selected} onSelect={onSelect} dndDropRef={dndDropRef} canDrop={canDrop} dropTarget={dropTarget} onContextMenu={onContextMenu} contextMenuOpen={contextMenuOpen} dragging={dragging} />;\n  }\n\n  return <ApplicationGroup element={element} selected={selected} onSelect={onSelect} dndDropRef={dndDropRef} canDrop={canDrop} dropTarget={dropTarget} droppable={droppable} onContextMenu={onContextMenu} contextMenuOpen={contextMenuOpen} dragging={dragging} />;\n};\n\nconst Application = observer(ObservedApplication);\nexport { Application };\n"]}]}