{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/SecretAnnotation.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/SecretAnnotation.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, DropdownField } from '@console/shared';\nimport { SecretAnnotationType } from '../../const';\nimport './SecretAnnotation.scss';\nconst SecretAnnotation = (props) => {\n    const { fieldName, isReadOnly = false } = props;\n    return (React.createElement(\"div\", { className: \"odc-secret-annotation\" },\n        React.createElement(\"p\", { className: \"odc-secret-annotation__label\" }, \"Designate provider to be authenticated\"),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(DropdownField, { name: `${fieldName}.key`, items: SecretAnnotationType, label: \"Access to\", disabled: isReadOnly, fullWidth: true, required: true })),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(InputField, { name: `${fieldName}.value`, helpText: \"The base server url (e.g. https://github.com)\", type: TextInputTypes.text, isReadOnly: isReadOnly, label: \"Server URL\", required: true }))));\n};\nexport default SecretAnnotation;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/SecretAnnotation.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/SecretAnnotation.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AACnD,OAAO,yBAAyB,CAAC;AAOjC,MAAM,gBAAgB,GAAoC,CAAC,KAAK,EAAE,EAAE;IAClE,MAAM,EAAE,SAAS,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC;IAChD,OAAO,CACL,6BAAK,SAAS,EAAC,uBAAuB;QACpC,2BAAG,SAAS,EAAC,8BAA8B,6CAA2C;QACtF,6BAAK,SAAS,EAAC,YAAY;YACzB,oBAAC,aAAa,IACZ,IAAI,EAAE,GAAG,SAAS,MAAM,EACxB,KAAK,EAAE,oBAAoB,EAC3B,KAAK,EAAC,WAAW,EACjB,QAAQ,EAAE,UAAU,EACpB,SAAS,QACT,QAAQ,SACR,CACE;QACN,6BAAK,SAAS,EAAC,YAAY;YACzB,oBAAC,UAAU,IACT,IAAI,EAAE,GAAG,SAAS,QAAQ,EAC1B,QAAQ,EAAC,+CAA+C,EACxD,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,UAAU,EAAE,UAAU,EACtB,KAAK,EAAC,YAAY,EAClB,QAAQ,SACR,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, DropdownField } from '@console/shared';\nimport { SecretAnnotationType } from '../../const';\nimport './SecretAnnotation.scss';\n\ntype SecretAnnotationParam = {\n  fieldName: string;\n  isReadOnly?: boolean;\n};\n\nconst SecretAnnotation: React.FC<SecretAnnotationParam> = (props) => {\n  const { fieldName, isReadOnly = false } = props;\n  return (\n    <div className=\"odc-secret-annotation\">\n      <p className=\"odc-secret-annotation__label\">Designate provider to be authenticated</p>\n      <div className=\"form-group\">\n        <DropdownField\n          name={`${fieldName}.key`}\n          items={SecretAnnotationType}\n          label=\"Access to\"\n          disabled={isReadOnly}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <InputField\n          name={`${fieldName}.value`}\n          helpText=\"The base server url (e.g. https://github.com)\"\n          type={TextInputTypes.text}\n          isReadOnly={isReadOnly}\n          label=\"Server URL\"\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SecretAnnotation;\n"]}]}