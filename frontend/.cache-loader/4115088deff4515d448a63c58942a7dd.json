{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/group.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/group.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { GroupModel, UserModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { addUsersModal, removeUserModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { asAccessReview, EmptyBox, Kebab, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, } from './utils';\nconst addUsers = (kind, group) => ({\n    label: 'Add Users',\n    callback: () => addUsersModal({\n        group,\n    }),\n    accessReview: asAccessReview(kind, group, 'patch'),\n});\nconst removeUser = (group, user) => {\n    return {\n        label: 'Remove User',\n        callback: () => removeUserModal({\n            group,\n            user,\n        }),\n        accessReview: asAccessReview(GroupModel, group, 'patch'),\n    };\n};\nconst menuActions = [addUsers, ...Kebab.factory.common];\nconst tableColumnClasses = [\n    classNames('col-sm-4', 'col-xs-6'),\n    classNames('col-sm-4', 'col-xs-6'),\n    classNames('col-sm-4', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst GroupTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Users',\n            sortField: 'users.length',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nGroupTableHeader.displayName = 'GroupTableHeader';\nconst GroupTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: referenceForModel(GroupModel), name: obj.metadata.name })),\n        React.createElement(TableData, { className: tableColumnClasses[1] }, _.size(obj.users)),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: referenceForModel(GroupModel), resource: obj }))));\n};\nexport const GroupList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Groups\", Header: GroupTableHeader, Row: GroupTableRow, virtualize: true })));\nexport const GroupPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { title: \"Groups\", kind: referenceForModel(GroupModel), ListComponent: GroupList, canCreate: true })));\nconst UserKebab = ({ group, user }) => {\n    const options = [removeUser(group, user)];\n    return React.createElement(Kebab, { options: options });\n};\nconst UsersTable = ({ group, users }) => {\n    return _.isEmpty(users) ? (React.createElement(EmptyBox, { label: \"Users\" })) : (React.createElement(\"table\", { className: \"table\" },\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null,\n                React.createElement(\"th\", null, \"Name\"),\n                React.createElement(\"th\", null))),\n        React.createElement(\"tbody\", null, users.map((user) => (React.createElement(\"tr\", { key: user },\n            React.createElement(\"td\", null,\n                React.createElement(ResourceLink, { kind: referenceForModel(UserModel), name: user })),\n            React.createElement(\"td\", { className: \"dropdown-kebab-pf pf-c-table__action\" },\n                React.createElement(UserKebab, { group: group, user: user }))))))));\n};\nconst GroupDetails = ({ obj }) => {\n    const users = obj.users ? [...obj.users].sort() : [];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Group Details\" }),\n            React.createElement(ResourceSummary, { resource: obj })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Users\" }),\n            React.createElement(UsersTable, { group: obj, users: users }))));\n};\nconst RoleBindingsTab = ({ obj }) => (React.createElement(RoleBindingsPage, { showTitle: false, staticFilters: [{ 'role-binding-group': obj.metadata.name }] }));\nexport const GroupDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: referenceForModel(GroupModel), menuActions: menuActions, pages: [\n        navFactory.details(GroupDetails),\n        navFactory.editYaml(),\n        navFactory.roles(RoleBindingsTab),\n    ] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/group.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/group.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { match } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { GroupModel, UserModel } from '../models';\nimport { referenceForModel, GroupKind, K8sKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { addUsersModal, removeUserModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport {\n  asAccessReview,\n  EmptyBox,\n  Kebab,\n  KebabAction,\n  KebabOption,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\n\nconst addUsers: KebabAction = (kind: K8sKind, group: GroupKind) => ({\n  label: 'Add Users',\n  callback: () =>\n    addUsersModal({\n      group,\n    }),\n  accessReview: asAccessReview(kind, group, 'patch'),\n});\n\nconst removeUser = (group: GroupKind, user: string): KebabOption => {\n  return {\n    label: 'Remove User',\n    callback: () =>\n      removeUserModal({\n        group,\n        user,\n      }),\n    accessReview: asAccessReview(GroupModel, group, 'patch'),\n  };\n};\n\nconst menuActions = [addUsers, ...Kebab.factory.common];\n\nconst tableColumnClasses = [\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst GroupTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Users',\n      sortField: 'users.length',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nGroupTableHeader.displayName = 'GroupTableHeader';\n\nconst GroupTableRow: RowFunction<GroupKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={referenceForModel(GroupModel)} name={obj.metadata.name} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{_.size(obj.users)}</TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={referenceForModel(GroupModel)} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const GroupList: React.FC = (props) => (\n  <Table {...props} aria-label=\"Groups\" Header={GroupTableHeader} Row={GroupTableRow} virtualize />\n);\n\nexport const GroupPage: React.FC<GroupPageProps> = (props) => (\n  <ListPage\n    {...props}\n    title=\"Groups\"\n    kind={referenceForModel(GroupModel)}\n    ListComponent={GroupList}\n    canCreate\n  />\n);\n\nconst UserKebab: React.FC<UserKebabProps> = ({ group, user }) => {\n  const options: KebabOption[] = [removeUser(group, user)];\n  return <Kebab options={options} />;\n};\n\nconst UsersTable: React.FC<UsersTableProps> = ({ group, users }) => {\n  return _.isEmpty(users) ? (\n    <EmptyBox label=\"Users\" />\n  ) : (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user: string) => (\n          <tr key={user}>\n            <td>\n              <ResourceLink kind={referenceForModel(UserModel)} name={user} />\n            </td>\n            <td className=\"dropdown-kebab-pf pf-c-table__action\">\n              <UserKebab group={group} user={user} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst GroupDetails: React.FC<GroupDetailsProps> = ({ obj }) => {\n  const users: string[] = obj.users ? [...obj.users].sort() : [];\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Group Details\" />\n        <ResourceSummary resource={obj} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Users\" />\n        <UsersTable group={obj} users={users} />\n      </div>\n    </>\n  );\n};\n\nconst RoleBindingsTab: React.FC<RoleBindingsTabProps> = ({ obj }) => (\n  <RoleBindingsPage\n    showTitle={false}\n    staticFilters={[{ 'role-binding-group': obj.metadata.name }]}\n  />\n);\n\nexport const GroupDetailsPage: React.FC<GroupDetailsPageProps> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={referenceForModel(GroupModel)}\n    menuActions={menuActions}\n    pages={[\n      navFactory.details(GroupDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RoleBindingsTab),\n    ]}\n  />\n);\n\ntype UserKebabProps = {\n  group: GroupKind;\n  user: string;\n};\n\ntype UsersTableProps = {\n  group: GroupKind;\n  users: string[];\n};\n\ntype GroupPageProps = {\n  autoFocus?: boolean;\n  showTitle?: boolean;\n};\n\ntype GroupDetailsProps = {\n  obj: GroupKind;\n};\n\ntype RoleBindingsTabProps = {\n  obj: GroupKind;\n};\n\ntype GroupDetailsPageProps = {\n  match: match<any>;\n};\n"]}]}