{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationItem.tsx","mtime":1615793099680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { chart_color_orange_300 as limitColor } from '@patternfly/react-tokens';\nimport { AreaChart, AreaChartStatus, chartStatusColors } from '@console/internal/components/graphs/area';\nimport { YellowExclamationTriangleIcon, RedExclamationCircleIcon } from '../../status';\nimport { useTranslation } from 'react-i18next';\nexport var LIMIT_STATE;\n(function (LIMIT_STATE) {\n    LIMIT_STATE[\"ERROR\"] = \"ERROR\";\n    LIMIT_STATE[\"WARN\"] = \"WARN\";\n    LIMIT_STATE[\"OK\"] = \"OK\";\n})(LIMIT_STATE || (LIMIT_STATE = {}));\nconst getCurrentData = (humanizeValue, description, data, dataUnits) => {\n    let current;\n    if (data && data.length > 0) {\n        const latestData = data[data.length - 1];\n        current = humanizeValue(latestData.y).string;\n        if (dataUnits) {\n            current += ` ${dataUnits}`;\n        }\n        current += ` ${description.toLowerCase()}`;\n    }\n    return current;\n};\nexport const MultilineUtilizationItem = React.memo(({ title, data, dataUnits, humanizeValue, isLoading = false, queries, error, TopConsumerPopovers, byteDataType }) => {\n    const current = data.map((datum, index) => getCurrentData(humanizeValue, queries[index].desc, datum, dataUnits && dataUnits[index]));\n    const chart = React.createElement(AreaChart, { data: error ? [[]] : data, loading: !error && isLoading, query: queries[0].query, xAxis: false, humanize: humanizeValue, padding: { top: 13, left: 70, bottom: 0, right: 0 }, height: 70, byteDataType: byteDataType });\n    const { t } = useTranslation();\n    const currentValue = current.map((curr, index) => {\n        const TopConsumerPopover = TopConsumerPopovers && TopConsumerPopovers[index];\n        return TopConsumerPopover ? React.createElement(TopConsumerPopover, { key: queries[index].desc, current: curr }) : React.createElement(\"div\", { key: queries[index].desc }, curr);\n    });\n    return (React.createElement(\"div\", { className: \"co-utilization-card__item\", \"data-test-id\": \"utilization-item\" },\n        React.createElement(\"div\", { className: \"co-utilization-card__item-description\" },\n            React.createElement(\"div\", { className: \"co-utilization-card__item-section-multiline\" },\n                React.createElement(\"h4\", { className: \"pf-c-title pf-m-md\" }, title),\n                error || (!isLoading && !data.every(datum => datum.length)) ? React.createElement(\"div\", { className: \"text-secondary\" }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_1')) : React.createElement(\"div\", { className: \"co-utilization-card__item-description\" }, currentValue))),\n        React.createElement(\"div\", { className: \"co-utilization-card__item-chart\" }, chart)));\n});\nexport const UtilizationItem = React.memo(({ title, data, humanizeValue, isLoading = false, query, error, max = null, TopConsumerPopover, byteDataType, limit = null, requested = null, setLimitReqState }) => {\n    let current;\n    if (data.length) {\n        const latestData = data[data.length - 1];\n        current = humanizeValue(latestData.y).string;\n    }\n    let humanMax;\n    const chartStyle = [null, null, null];\n    let humanAvailable;\n    if (current && max) {\n        humanMax = humanizeValue(max).string;\n        const percentage = (100 * data[data.length - 1].y) / max;\n        if (percentage >= 90) {\n            chartStyle[0] = { data: { fill: chartStatusColors[AreaChartStatus.ERROR] } };\n        }\n        else if (percentage >= 80) {\n            chartStyle[0] = { data: { fill: chartStatusColors[AreaChartStatus.WARNING] } };\n        }\n        humanAvailable = humanizeValue(max - data[data.length - 1].y).string;\n    }\n    const chartData = error ? [[]] : [data];\n    if (!error && limit) {\n        chartData.push(limit);\n        chartStyle[1] = { data: { strokeDasharray: '3,3', fillOpacity: 0 } };\n    }\n    if (!error && requested) {\n        chartData.push(requested);\n        chartStyle[2] = {\n            data: {\n                stroke: limitColor.value,\n                strokeDasharray: '3,3',\n                fillOpacity: 0,\n            },\n        };\n    }\n    const chart = React.createElement(AreaChart, { data: chartData, loading: !error && isLoading, query: query, xAxis: false, humanize: humanizeValue, padding: { top: 13, left: 70, bottom: 0, right: 0 }, height: 70, chartStyle: chartStyle, byteDataType: byteDataType });\n    let LimitIcon;\n    let humanLimit;\n    let limitState = LIMIT_STATE.OK;\n    let requestedState = LIMIT_STATE.OK;\n    if (max) {\n        if (limit && limit.length && requested && requested.length) {\n            humanLimit = humanizeValue(limit[limit.length - 1].y).string;\n            const limitPercentage = (100 * limit[limit.length - 1].y) / max;\n            const reqPercentage = (100 * requested[requested.length - 1].y) / max;\n            if (limitPercentage > 100) {\n                limitState = LIMIT_STATE.ERROR;\n            }\n            else if (limitPercentage >= 75) {\n                limitState = LIMIT_STATE.WARN;\n            }\n            if (reqPercentage > 100) {\n                requestedState = LIMIT_STATE.ERROR;\n            }\n            else if (reqPercentage >= 75) {\n                requestedState = LIMIT_STATE.WARN;\n            }\n            if ([limitState, requestedState].includes(LIMIT_STATE.ERROR)) {\n                LimitIcon = RedExclamationCircleIcon;\n            }\n            else if ([limitState, requestedState].includes(LIMIT_STATE.WARN)) {\n                LimitIcon = YellowExclamationTriangleIcon;\n            }\n            setLimitReqState && setLimitReqState({ limit: limitState, requested: requestedState });\n        }\n    }\n    return (React.createElement(\"div\", { className: \"co-utilization-card__item\", \"data-test-id\": \"utilization-item\" },\n        React.createElement(\"div\", { className: \"co-utilization-card__item-description\" },\n            React.createElement(\"div\", { className: \"co-utilization-card__item-section\" },\n                React.createElement(\"h4\", { className: \"pf-c-title pf-m-md\" }, title),\n                error || (!isLoading && !data.length) ? (React.createElement(\"div\", { className: \"text-secondary\" }, \"Not available\")) : (React.createElement(\"div\", null,\n                    LimitIcon && React.createElement(LimitIcon, { className: \"co-utilization-card__item-icon\" }),\n                    TopConsumerPopover ? React.createElement(TopConsumerPopover, { current: current, max: humanMax, limit: limit && limit.length ? humanizeValue(limit[limit.length - 1].y).string : null, requested: requested && requested.length ? humanizeValue(requested[requested.length - 1].y).string : null, available: humanAvailable, total: humanMax, limitState: limitState, requestedState: requestedState }) : current))),\n            !error && (humanAvailable || humanMax) && (React.createElement(\"div\", { className: \"co-utilization-card__item-section\" },\n                React.createElement(\"span\", { className: \"co-utilization-card__item-text\" }, humanAvailable && React.createElement(\"span\", null,\n                    humanAvailable,\n                    \" available\")),\n                React.createElement(\"span\", { className: \"co-utilization-card__item-text\" },\n                    humanLimit && React.createElement(\"span\", null,\n                        humanLimit,\n                        \" total limit\"),\n                    !humanLimit && humanMax && React.createElement(\"span\", null,\n                        \"of \",\n                        humanMax))))),\n        React.createElement(\"div\", { className: \"co-utilization-card__item-chart\" }, chart)));\n});\nexport default UtilizationItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { chart_color_orange_300 as limitColor } from '@patternfly/react-tokens';\nimport { Humanize } from '@console/internal/components/utils/types';\nimport { AreaChart, AreaChartStatus, chartStatusColors } from '@console/internal/components/graphs/area';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { ByteDataTypes } from 'packages/console-shared/src/graph-helper/data-utils';\nimport { YellowExclamationTriangleIcon, RedExclamationCircleIcon, ColoredIconProps } from '../../status';\nimport { useTranslation } from 'react-i18next';\n\nexport enum LIMIT_STATE {\n  ERROR = 'ERROR',\n  WARN = 'WARN',\n  OK = 'OK',\n}\n\nconst getCurrentData = (humanizeValue: Humanize, description: string, data?: DataPoint[], dataUnits?: string): string => {\n  let current: string;\n  if (data && data.length > 0) {\n    const latestData = data[data.length - 1];\n    current = humanizeValue(latestData.y).string;\n    if (dataUnits) {\n      current += ` ${dataUnits}`;\n    }\n    current += ` ${description.toLowerCase()}`;\n  }\n\n  return current;\n};\n\nexport const MultilineUtilizationItem: React.FC<MultilineUtilizationItemProps> = React.memo(({ title, data, dataUnits, humanizeValue, isLoading = false, queries, error, TopConsumerPopovers, byteDataType }) => {\n  const current = data.map((datum, index) => getCurrentData(humanizeValue, queries[index].desc, datum, dataUnits && dataUnits[index]));\n  const chart = <AreaChart data={error ? [[]] : data} loading={!error && isLoading} query={queries[0].query} xAxis={false} humanize={humanizeValue} padding={{ top: 13, left: 70, bottom: 0, right: 0 }} height={70} byteDataType={byteDataType} />;\n  const { t } = useTranslation();\n  const currentValue = current.map((curr, index) => {\n    const TopConsumerPopover = TopConsumerPopovers && TopConsumerPopovers[index];\n    return TopConsumerPopover ? <TopConsumerPopover key={queries[index].desc} current={curr} /> : <div key={queries[index].desc}>{curr}</div>;\n  });\n\n  return (\n    <div className=\"co-utilization-card__item\" data-test-id=\"utilization-item\">\n      <div className=\"co-utilization-card__item-description\">\n        <div className=\"co-utilization-card__item-section-multiline\">\n          <h4 className=\"pf-c-title pf-m-md\">{title}</h4>\n          {error || (!isLoading && !data.every(datum => datum.length)) ? <div className=\"text-secondary\">{t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_1')}</div> : <div className=\"co-utilization-card__item-description\">{currentValue}</div>}\n        </div>\n      </div>\n      <div className=\"co-utilization-card__item-chart\">{chart}</div>\n    </div>\n  );\n});\n\nexport const UtilizationItem: React.FC<UtilizationItemProps> = React.memo(({ title, data, humanizeValue, isLoading = false, query, error, max = null, TopConsumerPopover, byteDataType, limit = null, requested = null, setLimitReqState }) => {\n  let current: string;\n  if (data.length) {\n    const latestData = data[data.length - 1];\n    current = humanizeValue(latestData.y).string;\n  }\n\n  let humanMax: string;\n  const chartStyle = [null, null, null];\n\n  let humanAvailable: string;\n  if (current && max) {\n    humanMax = humanizeValue(max).string;\n    const percentage = (100 * data[data.length - 1].y) / max;\n\n    if (percentage >= 90) {\n      chartStyle[0] = { data: { fill: chartStatusColors[AreaChartStatus.ERROR] } };\n    } else if (percentage >= 80) {\n      chartStyle[0] = { data: { fill: chartStatusColors[AreaChartStatus.WARNING] } };\n    }\n\n    humanAvailable = humanizeValue(max - data[data.length - 1].y).string;\n  }\n\n  const chartData = error ? [[]] : [data];\n  if (!error && limit) {\n    chartData.push(limit);\n    chartStyle[1] = { data: { strokeDasharray: '3,3', fillOpacity: 0 } };\n  }\n  if (!error && requested) {\n    chartData.push(requested);\n    chartStyle[2] = {\n      data: {\n        stroke: limitColor.value,\n        strokeDasharray: '3,3',\n        fillOpacity: 0,\n      },\n    };\n  }\n\n  const chart = <AreaChart data={chartData} loading={!error && isLoading} query={query} xAxis={false} humanize={humanizeValue} padding={{ top: 13, left: 70, bottom: 0, right: 0 }} height={70} chartStyle={chartStyle} byteDataType={byteDataType} />;\n\n  let LimitIcon: React.ComponentType<ColoredIconProps>;\n  let humanLimit: string;\n  let limitState = LIMIT_STATE.OK;\n  let requestedState = LIMIT_STATE.OK;\n\n  if (max) {\n    if (limit && limit.length && requested && requested.length) {\n      humanLimit = humanizeValue(limit[limit.length - 1].y).string;\n      const limitPercentage = (100 * limit[limit.length - 1].y) / max;\n      const reqPercentage = (100 * requested[requested.length - 1].y) / max;\n      if (limitPercentage > 100) {\n        limitState = LIMIT_STATE.ERROR;\n      } else if (limitPercentage >= 75) {\n        limitState = LIMIT_STATE.WARN;\n      }\n      if (reqPercentage > 100) {\n        requestedState = LIMIT_STATE.ERROR;\n      } else if (reqPercentage >= 75) {\n        requestedState = LIMIT_STATE.WARN;\n      }\n      if ([limitState, requestedState].includes(LIMIT_STATE.ERROR)) {\n        LimitIcon = RedExclamationCircleIcon;\n      } else if ([limitState, requestedState].includes(LIMIT_STATE.WARN)) {\n        LimitIcon = YellowExclamationTriangleIcon;\n      }\n      setLimitReqState && setLimitReqState({ limit: limitState, requested: requestedState });\n    }\n  }\n\n  return (\n    <div className=\"co-utilization-card__item\" data-test-id=\"utilization-item\">\n      <div className=\"co-utilization-card__item-description\">\n        <div className=\"co-utilization-card__item-section\">\n          <h4 className=\"pf-c-title pf-m-md\">{title}</h4>\n          {error || (!isLoading && !data.length) ? (\n            <div className=\"text-secondary\">Not available</div>\n          ) : (\n            <div>\n              {LimitIcon && <LimitIcon className=\"co-utilization-card__item-icon\" />}\n              {TopConsumerPopover ? <TopConsumerPopover current={current} max={humanMax} limit={limit && limit.length ? humanizeValue(limit[limit.length - 1].y).string : null} requested={requested && requested.length ? humanizeValue(requested[requested.length - 1].y).string : null} available={humanAvailable} total={humanMax} limitState={limitState} requestedState={requestedState} /> : current}\n            </div>\n          )}\n        </div>\n        {!error && (humanAvailable || humanMax) && (\n          <div className=\"co-utilization-card__item-section\">\n            <span className=\"co-utilization-card__item-text\">{humanAvailable && <span>{humanAvailable} available</span>}</span>\n            <span className=\"co-utilization-card__item-text\">\n              {humanLimit && <span>{humanLimit} total limit</span>}\n              {!humanLimit && humanMax && <span>of {humanMax}</span>}\n            </span>\n          </div>\n        )}\n      </div>\n      <div className=\"co-utilization-card__item-chart\">{chart}</div>\n    </div>\n  );\n});\n\nexport default UtilizationItem;\n\nexport type LimitRequested = {\n  limit: LIMIT_STATE;\n  requested: LIMIT_STATE;\n};\n\ntype UtilizationItemProps = {\n  title: string;\n  data?: DataPoint[];\n  limit?: DataPoint[];\n  requested?: DataPoint[];\n  isLoading: boolean;\n  humanizeValue: Humanize;\n  query: string;\n  error: boolean;\n  max?: number;\n  byteDataType?: ByteDataTypes;\n  TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProp>;\n  setLimitReqState?: (state: LimitRequested) => void;\n};\n\ntype MultilineUtilizationItemProps = {\n  title: string;\n  data?: DataPoint[][];\n  dataUnits?: string[];\n  dataDescription?: string[];\n  isLoading: boolean;\n  humanizeValue: Humanize;\n  queries: QueryWithDescription[];\n  error: boolean;\n  byteDataType?: ByteDataTypes;\n  TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProp>[];\n};\n\nexport type TopConsumerPopoverProp = {\n  current: string;\n  max?: string;\n  limit?: string;\n  available?: string;\n  requested?: string;\n  total?: string;\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n};\n\nexport type QueryWithDescription = {\n  query: string;\n  desc: string;\n};\n"]}]}