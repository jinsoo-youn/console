{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-row.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PopoverStatus, ValidationErrorType } from '@console/shared';\nimport './form-row.scss';\nexport const FormRow = ({ fieldId, title, help, isHidden, isRequired, isLoading, validationMessage, validationType, validation, children, className, }) => {\n    if (isHidden) {\n        return null;\n    }\n    const type = (validation && validation.type) || validationType;\n    const message = (validation && validation.message) || validationMessage;\n    return (React.createElement(FormGroup, { label: title, isRequired: isRequired, fieldId: fieldId, isValid: type !== ValidationErrorType.Error, helperTextInvalid: type === ValidationErrorType.Error ? message : undefined, helperText: type === ValidationErrorType.Info || type === ValidationErrorType.Warn ? message : undefined, className: className },\n        help && (React.createElement(\"span\", { className: \"kubevirt-form-row__icon-status-container\" },\n            React.createElement(PopoverStatus, { icon: React.createElement(HelpIcon, { className: \"kubevirt-form-row__help-icon--hidden\" }), activeIcon: React.createElement(HelpIcon, null), title: `${fieldId} help`, iconOnly: true, hideHeader: true }, help))),\n        isLoading && (React.createElement(\"span\", { className: \"kubevirt-form-row__loading-container\" },\n            React.createElement(LoadingInline, null))),\n        children));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-row.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AACnE,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACrE,OAAO,iBAAiB,CAAC;AAEzB,MAAM,CAAC,MAAM,OAAO,GAA2B,CAAC,EAC9C,OAAO,EACP,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,SAAS,EACT,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,QAAQ,EACR,SAAS,GACV,EAAE,EAAE;IACH,IAAI,QAAQ,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IACD,MAAM,IAAI,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC;IAC/D,MAAM,OAAO,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,iBAAiB,CAAC;IAExE,OAAO,CACL,oBAAC,SAAS,IACR,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,IAAI,KAAK,mBAAmB,CAAC,KAAK,EAC3C,iBAAiB,EAAE,IAAI,KAAK,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAC3E,UAAU,EACR,IAAI,KAAK,mBAAmB,CAAC,IAAI,IAAI,IAAI,KAAK,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAE9F,SAAS,EAAE,SAAS;QAEnB,IAAI,IAAI,CACP,8BAAM,SAAS,EAAC,0CAA0C;YACxD,oBAAC,aAAa,IACZ,IAAI,EAAE,oBAAC,QAAQ,IAAC,SAAS,EAAC,sCAAsC,GAAG,EACnE,UAAU,EAAE,oBAAC,QAAQ,OAAG,EACxB,KAAK,EAAE,GAAG,OAAO,OAAO,EACxB,QAAQ,QACR,UAAU,UAET,IAAI,CACS,CACX,CACR;QACA,SAAS,IAAI,CACZ,8BAAM,SAAS,EAAC,sCAAsC;YACpD,oBAAC,aAAa,OAAG,CACZ,CACR;QACA,QAAQ,CACC,CACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PopoverStatus, ValidationErrorType } from '@console/shared';\nimport './form-row.scss';\n\nexport const FormRow: React.FC<FormRowProps> = ({\n  fieldId,\n  title,\n  help,\n  isHidden,\n  isRequired,\n  isLoading,\n  validationMessage,\n  validationType,\n  validation,\n  children,\n  className,\n}) => {\n  if (isHidden) {\n    return null;\n  }\n  const type = (validation && validation.type) || validationType;\n  const message = (validation && validation.message) || validationMessage;\n\n  return (\n    <FormGroup\n      label={title}\n      isRequired={isRequired}\n      fieldId={fieldId}\n      isValid={type !== ValidationErrorType.Error}\n      helperTextInvalid={type === ValidationErrorType.Error ? message : undefined}\n      helperText={\n        type === ValidationErrorType.Info || type === ValidationErrorType.Warn ? message : undefined\n      }\n      className={className}\n    >\n      {help && (\n        <span className=\"kubevirt-form-row__icon-status-container\">\n          <PopoverStatus\n            icon={<HelpIcon className=\"kubevirt-form-row__help-icon--hidden\" />}\n            activeIcon={<HelpIcon />}\n            title={`${fieldId} help`}\n            iconOnly\n            hideHeader\n          >\n            {help}\n          </PopoverStatus>\n        </span>\n      )}\n      {isLoading && (\n        <span className=\"kubevirt-form-row__loading-container\">\n          <LoadingInline />\n        </span>\n      )}\n      {children}\n    </FormGroup>\n  );\n};\n\ntype FormRowProps = {\n  fieldId: string;\n  title?: string;\n  help?: React.ReactNode;\n  helpTitle?: string;\n  isHidden?: boolean;\n  isRequired?: boolean;\n  isLoading?: boolean;\n  validationMessage?: string;\n  validationType?: ValidationErrorType;\n  validation?: {\n    message?: string;\n    type?: ValidationErrorType;\n  };\n  children?: React.ReactNode;\n  className?: string;\n};\n"]}]}