{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/package-manifest.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/package-manifest.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { StatusBox, MsgBox } from '@console/internal/components/utils';\nimport { MultiListPage, Table, TableRow, TableData, } from '@console/internal/components/factory';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { ALL_NAMESPACES_KEY, OPERATOR_HUB_LABEL } from '@console/shared';\nimport { PackageManifestModel, SubscriptionModel, CatalogSourceModel, OperatorGroupModel, } from '../models';\nimport { requireOperatorGroup, installedFor, supports } from './operator-group';\nimport { ClusterServiceVersionLogo, visibilityLabel, installModesFor, defaultChannelFor, } from './index';\nconst tableColumnClasses = [\n    classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n    classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'hidden-xs'),\n    classNames('col-lg-5', 'col-md-5', 'col-sm-4', 'col-xs-6'),\n];\nexport const PackageManifestTableHeader = () => [\n    {\n        title: 'Name',\n        props: { className: tableColumnClasses[0] },\n    },\n    {\n        title: 'Latest Version',\n        props: { className: tableColumnClasses[1] },\n    },\n    {\n        title: 'Subscriptions',\n        props: { className: tableColumnClasses[2] },\n    },\n];\nexport const PackageManifestTableRow = ({ obj, index, rowKey, style, catalogSourceName, catalogSourceNamespace, subscription, defaultNS, canSubscribe, }) => {\n    const ns = getActiveNamespace();\n    const channel = !_.isEmpty(obj.status.defaultChannel)\n        ? obj.status.channels.find((ch) => ch.name === obj.status.defaultChannel)\n        : obj.status.channels[0];\n    const { displayName, icon = [], version, provider } = channel.currentCSVDesc;\n    const subscriptionLink = () => ns !== ALL_NAMESPACES_KEY ? (React.createElement(Link, { to: `/operatormanagement/ns/${ns}?name=${subscription.metadata.name}` },\n        \"View\",\n        React.createElement(\"span\", { className: \"visible-lg-inline\" }, \" subscription\"))) : (React.createElement(Link, { to: `/operatormanagement/all-namespaces?name=${obj.metadata.name}` },\n        \"View\",\n        React.createElement(\"span\", { className: \"visible-lg-inline\" }, \" subscriptions\")));\n    const createSubscriptionLink = () => `/k8s/ns/${ns === ALL_NAMESPACES_KEY ? defaultNS : ns}/${SubscriptionModel.plural}/~new?pkg=${obj.metadata.name}&catalog=${catalogSourceName}&catalogNamespace=${catalogSourceNamespace}`;\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: rowKey, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ClusterServiceVersionLogo, { displayName: displayName, icon: _.get(icon, '[0]'), provider: provider.name })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            version,\n            \" (\",\n            channel.name,\n            \")\"),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            subscription ? subscriptionLink() : React.createElement(\"span\", { className: \"text-muted\" }, \"None\"),\n            canSubscribe && (React.createElement(Link, { to: createSubscriptionLink() },\n                React.createElement(Button, { variant: \"primary\", type: \"button\" },\n                    \"Create\",\n                    React.createElement(\"span\", { className: \"visible-lg-inline\" }, \" Subscription\")))))));\n};\nexport const PackageManifestList = requireOperatorGroup((props) => {\n    const catalogs = (props.data || []).reduce((allCatalogs, { status }) => allCatalogs.set(status.catalogSource, {\n        displayName: status.catalogSourceDisplayName,\n        name: status.catalogSource,\n        publisher: status.catalogSourcePublisher,\n        namespace: status.catalogSourceNamespace,\n    }), new Map());\n    return (React.createElement(StatusBox, { loaded: props.loaded, loadError: props.loadError, label: PackageManifestModel.labelPlural, data: props.data, EmptyMsg: () => (React.createElement(MsgBox, { title: \"No Package Manifests Found\", detail: \"Package Manifests are packaged Operators which can be subscribed to for automatic upgrades.\" })) }, _.sortBy([...catalogs.values()], 'displayName').map((catalog) => (React.createElement(\"div\", { key: catalog.name, className: \"co-catalogsource-list__section\" },\n        React.createElement(\"div\", { className: \"co-catalogsource-list__section__packages\" },\n            React.createElement(\"div\", null,\n                React.createElement(\"h3\", null, catalog.displayName),\n                React.createElement(\"span\", { className: \"text-muted\" },\n                    \"Packaged by \",\n                    catalog.publisher)),\n            props.showDetailsLink && (React.createElement(Link, { to: `/k8s/ns/${catalog.namespace}/${referenceForModel(CatalogSourceModel)}/${catalog.name}` }, \"View catalog details\"))),\n        React.createElement(Table, { \"aria-label\": \"Package Manifests\", loaded: true, data: (props.data || []).filter((pkg) => pkg.status.catalogSource === catalog.name), filters: props.filters, Header: PackageManifestTableHeader, Row: (rowArgs) => (React.createElement(PackageManifestTableRow, { obj: rowArgs.obj, index: rowArgs.index, rowKey: rowArgs.key, style: rowArgs.style, catalogSourceName: catalog.name, catalogSourceNamespace: catalog.namespace, subscription: (props.subscription.data || [])\n                    .filter((sub) => _.isEmpty(props.namespace) || sub.metadata.namespace === props.namespace)\n                    .find((sub) => sub.spec.name === rowArgs.obj.metadata.name), canSubscribe: props.canSubscribe &&\n                    !installedFor(props.subscription.data)(props.operatorGroup.data)(rowArgs.obj.status.packageName)(getActiveNamespace()) &&\n                    props.operatorGroup.data\n                        .filter((og) => _.isEmpty(props.namespace) || og.metadata.namespace === props.namespace)\n                        .some((og) => supports(installModesFor(rowArgs.obj)(defaultChannelFor(rowArgs.obj)))(og)), defaultNS: _.get(props.operatorGroup, 'data[0].metadata.namespace') })), EmptyMsg: () => (React.createElement(MsgBox, { title: \"No PackageManifests Found\", detail: \"The catalog author has not added any packages.\" })), virtualize: true }))))));\n});\nexport const PackageManifestsPage = (props) => {\n    const namespace = _.get(props.match, 'params.ns');\n    const flatten = (resources) => _.get(resources.packageManifest, 'data', []);\n    const helpText = (React.createElement(\"p\", { className: \"co-help-text\" },\n        \"Catalogs are groups of Operators you can make available on the cluster. Use\",\n        ' ',\n        React.createElement(Link, { to: \"/operatorhub\" }, \"OperatorHub\"),\n        \" to subscribe and grant namespaces access to use installed Operators.\"));\n    return (React.createElement(MultiListPage, Object.assign({}, props, { namespace: namespace, showTitle: false, helpText: helpText, ListComponent: (listProps) => (React.createElement(PackageManifestList, Object.assign({}, listProps, { showDetailsLink: true, namespace: namespace }))), textFilter: \"packagemanifest-name\", flatten: flatten, resources: [\n            {\n                kind: referenceForModel(PackageManifestModel),\n                isList: true,\n                namespaced: true,\n                prop: 'packageManifest',\n                selector: {\n                    matchExpressions: [\n                        { key: visibilityLabel, operator: 'DoesNotExist' },\n                        { key: OPERATOR_HUB_LABEL, operator: 'DoesNotExist' },\n                    ],\n                },\n            },\n            {\n                kind: referenceForModel(CatalogSourceModel),\n                isList: true,\n                namespaced: true,\n                prop: 'catalogSource',\n            },\n            {\n                kind: referenceForModel(SubscriptionModel),\n                isList: true,\n                namespaced: true,\n                prop: 'subscription',\n            },\n            {\n                kind: referenceForModel(OperatorGroupModel),\n                isList: true,\n                namespaced: true,\n                prop: 'operatorGroup',\n            },\n        ] })));\n};\nPackageManifestTableHeader.displayName = 'PackageManifestTableHeader';\nPackageManifestTableRow.displayName = 'PackageManifestTableRow';\nPackageManifestList.displayName = 'PackageManifestList';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/package-manifest.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/package-manifest.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link, match } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { StatusBox, MsgBox } from '@console/internal/components/utils';\nimport {\n  MultiListPage,\n  Table,\n  TableRow,\n  TableData,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { ALL_NAMESPACES_KEY, OPERATOR_HUB_LABEL } from '@console/shared';\nimport {\n  PackageManifestModel,\n  SubscriptionModel,\n  CatalogSourceModel,\n  OperatorGroupModel,\n} from '../models';\nimport { PackageManifestKind, SubscriptionKind, OperatorGroupKind } from '../types';\nimport { requireOperatorGroup, installedFor, supports } from './operator-group';\nimport {\n  ClusterServiceVersionLogo,\n  visibilityLabel,\n  installModesFor,\n  defaultChannelFor,\n} from './index';\n\nconst tableColumnClasses = [\n  classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'hidden-xs'),\n  classNames('col-lg-5', 'col-md-5', 'col-sm-4', 'col-xs-6'),\n];\n\nexport const PackageManifestTableHeader = () => [\n  {\n    title: 'Name',\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: 'Latest Version',\n    props: { className: tableColumnClasses[1] },\n  },\n  {\n    title: 'Subscriptions',\n    props: { className: tableColumnClasses[2] },\n  },\n];\n\nexport const PackageManifestTableRow: React.SFC<PackageManifestTableRowProps> = ({\n  obj,\n  index,\n  rowKey,\n  style,\n  catalogSourceName,\n  catalogSourceNamespace,\n  subscription,\n  defaultNS,\n  canSubscribe,\n}) => {\n  const ns = getActiveNamespace();\n  const channel = !_.isEmpty(obj.status.defaultChannel)\n    ? obj.status.channels.find((ch) => ch.name === obj.status.defaultChannel)\n    : obj.status.channels[0];\n  const { displayName, icon = [], version, provider } = channel.currentCSVDesc;\n\n  const subscriptionLink = () =>\n    ns !== ALL_NAMESPACES_KEY ? (\n      <Link to={`/operatormanagement/ns/${ns}?name=${subscription.metadata.name}`}>\n        View<span className=\"visible-lg-inline\"> subscription</span>\n      </Link>\n    ) : (\n      <Link to={`/operatormanagement/all-namespaces?name=${obj.metadata.name}`}>\n        View<span className=\"visible-lg-inline\"> subscriptions</span>\n      </Link>\n    );\n\n  const createSubscriptionLink = () =>\n    `/k8s/ns/${ns === ALL_NAMESPACES_KEY ? defaultNS : ns}/${SubscriptionModel.plural}/~new?pkg=${\n      obj.metadata.name\n    }&catalog=${catalogSourceName}&catalogNamespace=${catalogSourceNamespace}`;\n\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={rowKey} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ClusterServiceVersionLogo\n          displayName={displayName}\n          icon={_.get(icon, '[0]')}\n          provider={provider.name}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        {version} ({channel.name})\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {subscription ? subscriptionLink() : <span className=\"text-muted\">None</span>}\n        {canSubscribe && (\n          <Link to={createSubscriptionLink()}>\n            <Button variant=\"primary\" type=\"button\">\n              Create<span className=\"visible-lg-inline\"> Subscription</span>\n            </Button>\n          </Link>\n        )}\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const PackageManifestList = requireOperatorGroup((props: PackageManifestListProps) => {\n  type CatalogSourceInfo = {\n    displayName: string;\n    name: string;\n    publisher: string;\n    namespace: string;\n  };\n  const catalogs = (props.data || []).reduce(\n    (allCatalogs, { status }) =>\n      allCatalogs.set(status.catalogSource, {\n        displayName: status.catalogSourceDisplayName,\n        name: status.catalogSource,\n        publisher: status.catalogSourcePublisher,\n        namespace: status.catalogSourceNamespace,\n      }),\n    new Map<string, CatalogSourceInfo>(),\n  );\n\n  return (\n    <StatusBox\n      loaded={props.loaded}\n      loadError={props.loadError}\n      label={PackageManifestModel.labelPlural}\n      data={props.data}\n      EmptyMsg={() => (\n        <MsgBox\n          title=\"No Package Manifests Found\"\n          detail=\"Package Manifests are packaged Operators which can be subscribed to for automatic upgrades.\"\n        />\n      )}\n    >\n      {_.sortBy([...catalogs.values()], 'displayName').map((catalog) => (\n        <div key={catalog.name} className=\"co-catalogsource-list__section\">\n          <div className=\"co-catalogsource-list__section__packages\">\n            <div>\n              <h3>{catalog.displayName}</h3>\n              <span className=\"text-muted\">Packaged by {catalog.publisher}</span>\n            </div>\n            {props.showDetailsLink && (\n              <Link\n                to={`/k8s/ns/${catalog.namespace}/${referenceForModel(CatalogSourceModel)}/${\n                  catalog.name\n                }`}\n              >\n                View catalog details\n              </Link>\n            )}\n          </div>\n          <Table\n            aria-label=\"Package Manifests\"\n            loaded\n            data={(props.data || []).filter((pkg) => pkg.status.catalogSource === catalog.name)}\n            filters={props.filters}\n            Header={PackageManifestTableHeader}\n            Row={(rowArgs: RowFunctionArgs<PackageManifestKind>) => (\n              <PackageManifestTableRow\n                obj={rowArgs.obj}\n                index={rowArgs.index}\n                rowKey={rowArgs.key}\n                style={rowArgs.style}\n                catalogSourceName={catalog.name}\n                catalogSourceNamespace={catalog.namespace}\n                subscription={(props.subscription.data || [])\n                  .filter(\n                    (sub) =>\n                      _.isEmpty(props.namespace) || sub.metadata.namespace === props.namespace,\n                  )\n                  .find((sub) => sub.spec.name === rowArgs.obj.metadata.name)}\n                canSubscribe={\n                  props.canSubscribe &&\n                  !installedFor(props.subscription.data)(props.operatorGroup.data)(\n                    rowArgs.obj.status.packageName,\n                  )(getActiveNamespace()) &&\n                  props.operatorGroup.data\n                    .filter(\n                      (og) =>\n                        _.isEmpty(props.namespace) || og.metadata.namespace === props.namespace,\n                    )\n                    .some((og) =>\n                      supports(installModesFor(rowArgs.obj)(defaultChannelFor(rowArgs.obj)))(og),\n                    )\n                }\n                defaultNS={_.get(props.operatorGroup, 'data[0].metadata.namespace')}\n              />\n            )}\n            EmptyMsg={() => (\n              <MsgBox\n                title=\"No PackageManifests Found\"\n                detail=\"The catalog author has not added any packages.\"\n              />\n            )}\n            virtualize\n          />\n        </div>\n      ))}\n    </StatusBox>\n  );\n});\n\nexport const PackageManifestsPage: React.SFC<PackageManifestsPageProps> = (props) => {\n  const namespace = _.get(props.match, 'params.ns');\n  type Flatten = (resources: { [kind: string]: { data: K8sResourceKind[] } }) => K8sResourceKind[];\n  const flatten: Flatten = (resources) => _.get(resources.packageManifest, 'data', []);\n  const helpText = (\n    <p className=\"co-help-text\">\n      Catalogs are groups of Operators you can make available on the cluster. Use{' '}\n      <Link to=\"/operatorhub\">OperatorHub</Link> to subscribe and grant namespaces access to use\n      installed Operators.\n    </p>\n  );\n\n  return (\n    <MultiListPage\n      {...props}\n      namespace={namespace}\n      showTitle={false}\n      helpText={helpText}\n      ListComponent={(listProps: PackageManifestListProps) => (\n        <PackageManifestList {...listProps} showDetailsLink namespace={namespace} />\n      )}\n      textFilter=\"packagemanifest-name\"\n      flatten={flatten}\n      resources={[\n        {\n          kind: referenceForModel(PackageManifestModel),\n          isList: true,\n          namespaced: true,\n          prop: 'packageManifest',\n          selector: {\n            matchExpressions: [\n              { key: visibilityLabel, operator: 'DoesNotExist' },\n              { key: OPERATOR_HUB_LABEL, operator: 'DoesNotExist' },\n            ],\n          },\n        },\n        {\n          kind: referenceForModel(CatalogSourceModel),\n          isList: true,\n          namespaced: true,\n          prop: 'catalogSource',\n        },\n        {\n          kind: referenceForModel(SubscriptionModel),\n          isList: true,\n          namespaced: true,\n          prop: 'subscription',\n        },\n        {\n          kind: referenceForModel(OperatorGroupModel),\n          isList: true,\n          namespaced: true,\n          prop: 'operatorGroup',\n        },\n      ]}\n    />\n  );\n};\n\nexport type PackageManifestsPageProps = {\n  namespace?: string;\n  match?: match<{ ns?: string }>;\n};\n\nexport type PackageManifestListProps = {\n  namespace?: string;\n  data: PackageManifestKind[];\n  filters?: { [name: string]: string };\n  subscription: { loaded: boolean; data?: SubscriptionKind[] };\n  operatorGroup: { loaded: boolean; data?: OperatorGroupKind[] };\n  loaded: boolean;\n  loadError?: string | Record<string, any>;\n  showDetailsLink?: boolean;\n  canSubscribe?: boolean;\n};\n\nexport type PackageManifestTableRowProps = {\n  obj: PackageManifestKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  catalogSourceName: string;\n  catalogSourceNamespace: string;\n  subscription?: SubscriptionKind;\n  defaultNS: string;\n  canSubscribe: boolean;\n};\n\nPackageManifestTableHeader.displayName = 'PackageManifestTableHeader';\nPackageManifestTableRow.displayName = 'PackageManifestTableRow';\nPackageManifestList.displayName = 'PackageManifestList';\n"]}]}