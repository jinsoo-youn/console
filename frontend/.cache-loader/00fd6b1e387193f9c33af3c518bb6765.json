{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-claim.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-claim.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading, DetailsItem } from '../utils';\nimport { Status } from '@console/shared';\nimport { ClusterClaimModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(ClusterClaimModel), ...Kebab.factory.common, Kebab.factory.ModifyClaim];\nconst kind = ClusterClaimModel.kind;\nconst tableColumnClasses = ['', '', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst ClusterClaimTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_LNB_MENU_84'),\n            sortFunc: 'spec.clusterName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_59'),\n            sortFunc: 'spec.provider',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_62'),\n            sortFunc: 'spec.version',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.phase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n            sortField: 'metadata.annotations.creator',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[6] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[7] },\n        },\n    ];\n};\nClusterClaimTableHeader.displayName = 'ClusterClaimTableHeader';\nconst ClusterClaimTableRow = ({ obj: clusterClaim, index, key, style }) => {\n    return (React.createElement(TableRow, { id: clusterClaim.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: clusterClaim.metadata.name, namespace: clusterClaim.metadata.namespace, title: clusterClaim.metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[1] }, clusterClaim.spec.clusterName),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, clusterClaim.spec.provider),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, clusterClaim.spec.version),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[4], 'co-break-word') },\n            React.createElement(Status, { status: clusterClaim.status.phase })),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, clusterClaim.metadata.annotations.creator),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(Timestamp, { timestamp: clusterClaim.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[7] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: clusterClaim }))));\n};\nexport const ClusterRow = ({ pod }) => {\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" },\n            React.createElement(ResourceIcon, { kind: kind }),\n            pod.metadata.name),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" },\n            React.createElement(ResourceLink, { kind: \"Cluster\", name: pod.spec.placement.clusters[0].name })),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" },\n            React.createElement(Status, { status: pod.status.phase })),\n        React.createElement(\"div\", { className: \"col-lg-2 hidden-md hidden-sm hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: pod.metadata.creationTimestamp }))));\n};\nexport const ClusterClaimDetailsList = ({ clcl }) => {\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: \"Provider\", obj: clcl, path: \"spec.provider\" }),\n        React.createElement(DetailsItem, { label: \"Cluster Name\", obj: clcl, path: \"spec.clusterName\" }),\n        React.createElement(DetailsItem, { label: \"Version\", obj: clcl, path: \"spec.version\" }),\n        React.createElement(DetailsItem, { label: \"Region\", obj: clcl, path: \"spec.region\" }),\n        React.createElement(DetailsItem, { label: \"Master Node Count\", obj: clcl, path: \"spec.masterNum\" }),\n        React.createElement(DetailsItem, { label: \"Master Node Type\", obj: clcl, path: \"spec.masterType\" }),\n        React.createElement(DetailsItem, { label: \"Worker Node Count\", obj: clcl, path: \"spec.workerNum\" }),\n        React.createElement(DetailsItem, { label: \"Worker Node Type\", obj: clcl, path: \"spec.workerType\" }),\n        React.createElement(DetailsItem, { label: \"SSH Key\", obj: clcl, path: \"spec.sshKey\" })));\n};\nconst ClusterClaimDetails = ({ obj: clusterClaim }) => (React.createElement(React.Fragment, null,\n    React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Cluster Claim Details\" }),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-lg-6\" },\n                React.createElement(ResourceSummary, { resource: clusterClaim, showOwner: false }),\n                React.createElement(DetailsItem, { label: \"Owner\", obj: clusterClaim, path: \"metadata.annotations.creator\" })),\n            React.createElement(\"div\", { className: \"col-lg-6\" },\n                React.createElement(ClusterClaimDetailsList, { clcl: clusterClaim }))))));\nconst { details, editYaml } = navFactory;\nexport const ClusterClaims = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Cluster Claims\", Header: ClusterClaimTableHeader.bind(null, t), Row: ClusterClaimTableRow, virtualize: true }));\n};\nconst clusterClaimStatusReducer = (clusterClaim) => {\n    return clusterClaim.status.phase;\n};\nconst filters = [\n    {\n        filterGroupName: 'Status',\n        type: 'registry-status',\n        reducer: clusterClaimStatusReducer,\n        items: [\n            { id: 'Created', title: 'Created' },\n            { id: 'Waiting', title: 'Waiting' },\n            { id: 'Admitted', title: 'Admitted' },\n            { id: 'Success', title: 'Success' },\n            { id: 'Rejected', title: 'Rejected' },\n            { id: 'Error', title: 'Error' },\n            { id: 'Deleted', title: 'Deleted' },\n        ],\n    },\n];\nexport const ClusterClaimsPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: ClusterClaims, kind: kind, rowFilters: filters }, props));\nexport const ClusterClaimsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(ClusterClaimDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-claim.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-claim.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading, DetailsItem } from '../utils';\nimport { Status } from '@console/shared';\nimport { ClusterClaimModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ClusterClaimModel), ...Kebab.factory.common, Kebab.factory.ModifyClaim];\n\nconst kind = ClusterClaimModel.kind;\n\nconst tableColumnClasses = ['', '', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ClusterClaimTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_LNB_MENU_84'),\n      sortFunc: 'spec.clusterName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_59'),\n      sortFunc: 'spec.provider',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_62'),\n      sortFunc: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n      sortField: 'metadata.annotations.creator',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[7] },\n    },\n  ];\n};\nClusterClaimTableHeader.displayName = 'ClusterClaimTableHeader';\n\nconst ClusterClaimTableRow: RowFunction<K8sResourceKind> = ({ obj: clusterClaim, index, key, style }) => {\n  return (\n    <TableRow id={clusterClaim.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={clusterClaim.metadata.name} namespace={clusterClaim.metadata.namespace} title={clusterClaim.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{clusterClaim.spec.clusterName}</TableData>\n      <TableData className={tableColumnClasses[2]}>{clusterClaim.spec.provider}</TableData>\n      <TableData className={tableColumnClasses[3]}>{clusterClaim.spec.version}</TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        <Status status={clusterClaim.status.phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>{clusterClaim.metadata.annotations.creator}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <Timestamp timestamp={clusterClaim.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={clusterClaim} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterRow: React.FC<ClusterRowProps> = ({ pod }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ResourceIcon kind={kind} />\n        {pod.metadata.name}\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">\n        <ResourceLink kind=\"Cluster\" name={pod.spec.placement.clusters[0].name} />\n      </div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={pod.status.phase} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={pod.metadata.creationTimestamp} />\n      </div>\n    </div>\n  );\n};\n\nexport const ClusterClaimDetailsList: React.FC<ClusterClaimDetailsListProps> = ({ clcl }) => {\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label=\"Provider\" obj={clcl} path=\"spec.provider\" />\n      <DetailsItem label=\"Cluster Name\" obj={clcl} path=\"spec.clusterName\" />\n      <DetailsItem label=\"Version\" obj={clcl} path=\"spec.version\" />\n      <DetailsItem label=\"Region\" obj={clcl} path=\"spec.region\" />\n      <DetailsItem label=\"Master Node Count\" obj={clcl} path=\"spec.masterNum\" />\n      <DetailsItem label=\"Master Node Type\" obj={clcl} path=\"spec.masterType\" />\n      <DetailsItem label=\"Worker Node Count\" obj={clcl} path=\"spec.workerNum\" />\n      <DetailsItem label=\"Worker Node Type\" obj={clcl} path=\"spec.workerType\" />\n      <DetailsItem label=\"SSH Key\" obj={clcl} path=\"spec.sshKey\" />\n    </dl>\n  );\n};\n\nconst ClusterClaimDetails: React.FC<ClusterClaimDetailsProps> = ({ obj: clusterClaim }) => (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Cluster Claim Details\" />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={clusterClaim} showOwner={false} />\n          <DetailsItem label=\"Owner\" obj={clusterClaim} path=\"metadata.annotations.creator\" />\n        </div>\n        <div className=\"col-lg-6\">\n          <ClusterClaimDetailsList clcl={clusterClaim} />\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nconst { details, editYaml } = navFactory;\nexport const ClusterClaims: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Cluster Claims\" Header={ClusterClaimTableHeader.bind(null, t)} Row={ClusterClaimTableRow} virtualize />;\n};\n\nconst clusterClaimStatusReducer = (clusterClaim: any): string => {\n  return clusterClaim.status.phase;\n};\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'registry-status',\n    reducer: clusterClaimStatusReducer,\n    items: [\n      { id: 'Created', title: 'Created' },\n      { id: 'Waiting', title: 'Waiting' },\n      { id: 'Admitted', title: 'Admitted' },\n      { id: 'Success', title: 'Success' },\n      { id: 'Rejected', title: 'Rejected' },\n      { id: 'Error', title: 'Error' },\n      { id: 'Deleted', title: 'Deleted' },\n    ],\n  },\n];\n\nexport const ClusterClaimsPage: React.FC<ClusterClaimsPageProps> = props => <ListPage canCreate={true} ListComponent={ClusterClaims} kind={kind} rowFilters={filters} {...props} />;\n\nexport const ClusterClaimsDetailsPage: React.FC<ClusterClaimsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ClusterClaimDetails)), editYaml()]} />;\n\ntype ClusterRowProps = {\n  pod: K8sResourceKind;\n};\n\ntype ClusterClaimDetailsListProps = {\n  clcl: K8sResourceKind;\n};\n\ntype ClusterClaimDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ClusterClaimsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ClusterClaimsDetailsPageProps = {\n  match: any;\n};\n"]}]}