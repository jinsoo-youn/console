{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-health-check.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-health-check.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { MachineHealthCheckModel, MachineModel } from '../models';\nimport { referenceForModel } from '../module/k8s/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { DetailsItem, EmptyBox, Kebab, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector, Timestamp, navFactory, } from './utils';\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(MachineHealthCheckModel), ...common];\nconst machineHealthCheckReference = referenceForModel(MachineHealthCheckModel);\nconst tableColumnClasses = [\n    classNames('col-xs-6', 'col-sm-4'),\n    classNames('col-xs-6', 'col-sm-4'),\n    classNames('col-sm-4', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst MachineHealthCheckTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nMachineHealthCheckTableHeader.displayName = 'MachineHealthCheckTableHeader';\nconst MachineHealthCheckTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: machineHealthCheckReference, name: obj.metadata.name, namespace: obj.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: machineHealthCheckReference, resource: obj }))));\n};\nconst MachineHealthCheckList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Machine HealthChecks\", Header: MachineHealthCheckTableHeader, Row: MachineHealthCheckTableRow, virtualize: true })));\nconst UnhealthyConditionsTable = ({ obj }) => {\n    return _.isEmpty(obj.spec.unhealthyConditions) ? (React.createElement(EmptyBox, { label: \"Unhealthy Conditions\" })) : (React.createElement(\"table\", { className: \"table\" },\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null,\n                React.createElement(\"th\", null, \"Status\"),\n                React.createElement(\"th\", null, \"Timeout\"),\n                React.createElement(\"th\", null, \"Type\"))),\n        React.createElement(\"tbody\", null, obj.spec.unhealthyConditions.map(({ status, timeout, type }, i) => (React.createElement(\"tr\", { key: i },\n            React.createElement(\"td\", null, status),\n            React.createElement(\"td\", null, timeout),\n            React.createElement(\"td\", null, type)))))));\n};\nconst MachineHealthCheckDetails = ({ obj }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Machine HealthCheck Details\" }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { resource: obj },\n                            React.createElement(DetailsItem, { label: \"Selector\", obj: obj, path: \"spec.selector\" },\n                                React.createElement(Selector, { kind: referenceForModel(MachineModel), selector: _.get(obj, 'spec.selector'), namespace: obj.metadata.namespace })))),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                            React.createElement(DetailsItem, { label: \"Max Unhealthy\", obj: obj, path: \"spec.maxUnhealthy\" }),\n                            React.createElement(DetailsItem, { label: \"Expected Machines\", obj: obj, path: \"status.expectedMachines\" }),\n                            React.createElement(DetailsItem, { label: \"Current Healthy\", obj: obj, path: \"status.currentHealthy\" })))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Unhealthy Conditions\" }),\n            React.createElement(UnhealthyConditionsTable, { obj: obj }))));\n};\nexport const MachineHealthCheckPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { ListComponent: MachineHealthCheckList, kind: machineHealthCheckReference, canCreate: true })));\nexport const MachineHealthCheckDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { menuActions: menuActions, kind: machineHealthCheckReference, pages: [navFactory.details(MachineHealthCheckDetails), navFactory.editYaml()] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-health-check.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-health-check.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AAEzC,OAAO,EAAE,uBAAuB,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAElE,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AACtD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,WAAW,CAAC;AAC3F,OAAO,EACL,WAAW,EACX,QAAQ,EACR,KAAK,EACL,aAAa,EACb,YAAY,EACZ,eAAe,EACf,cAAc,EACd,QAAQ,EACR,SAAS,EACT,UAAU,GACX,MAAM,SAAS,CAAC;AAEjB,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC;AACjC,MAAM,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,2BAA2B,CAAC,uBAAuB,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;AAC/F,MAAM,2BAA2B,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;AAE/E,MAAM,kBAAkB,GAAG;IACzB,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC;IAClC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC;IAClC,UAAU,CAAC,UAAU,EAAE,WAAW,CAAC;IACnC,KAAK,CAAC,WAAW;CAClB,CAAC;AAEF,MAAM,6BAA6B,GAAG,GAAG,EAAE;IACzC,OAAO;QACL;YACE,KAAK,EAAE,MAAM;YACb,SAAS,EAAE,eAAe;YAC1B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,WAAW;YAClB,SAAS,EAAE,oBAAoB;YAC/B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,SAAS;YAChB,SAAS,EAAE,4BAA4B;YACvC,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;KACF,CAAC;AACJ,CAAC,CAAC;AACF,6BAA6B,CAAC,WAAW,GAAG,+BAA+B,CAAC;AAE5E,MAAM,0BAA0B,GAAiC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;IAC9F,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QACpE,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,YAAY,IACX,IAAI,EAAE,2BAA2B,EACjC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,EACvB,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,GACjC,CACQ;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC;YACtE,oBAAC,YAAY,IAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAI,CACrD;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,SAAS,IAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,iBAAiB,GAAI,CAC9C;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,aAAa,IAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,2BAA2B,EAAE,QAAQ,EAAE,GAAG,GAAI,CAC/E,CACH,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAClD,oBAAC,KAAK,oBACA,KAAK,kBACE,sBAAsB,EACjC,MAAM,EAAE,6BAA6B,EACrC,GAAG,EAAE,0BAA0B,EAC/B,UAAU,UACV,CACH,CAAC;AAEF,MAAM,wBAAwB,GAAuC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IAC/E,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAC/C,oBAAC,QAAQ,IAAC,KAAK,EAAC,sBAAsB,GAAG,CAC1C,CAAC,CAAC,CAAC,CACF,+BAAO,SAAS,EAAC,OAAO;QACtB;YACE;gBACE,yCAAe;gBACf,0CAAgB;gBAChB,uCAAa,CACV,CACC;QACR,mCACG,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAS,EAAE,EAAE,CAAC,CAC1E,4BAAI,GAAG,EAAE,CAAC;YACR,gCAAK,MAAM,CAAM;YACjB,gCAAK,OAAO,CAAM;YAClB,gCAAK,IAAI,CAAM,CACZ,CACN,CAAC,CACI,CACF,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,yBAAyB,GAA6C,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IACtF,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAC,6BAA6B,GAAG;YACrD,6BAAK,SAAS,EAAC,uBAAuB;gBACpC,6BAAK,SAAS,EAAC,KAAK;oBAClB,6BAAK,SAAS,EAAC,UAAU;wBACvB,oBAAC,eAAe,IAAC,QAAQ,EAAE,GAAG;4BAC5B,oBAAC,WAAW,IAAC,KAAK,EAAC,UAAU,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,eAAe;gCAC1D,oBAAC,QAAQ,IACP,IAAI,EAAE,iBAAiB,CAAC,YAAY,CAAC,EACrC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,eAAe,CAAC,EACrC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,GACjC,CACU,CACE,CACd;oBACN,6BAAK,SAAS,EAAC,UAAU;wBACvB,4BAAI,SAAS,EAAC,oBAAoB;4BAChC,oBAAC,WAAW,IAAC,KAAK,EAAC,eAAe,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,mBAAmB,GAAG;4BACxE,oBAAC,WAAW,IAAC,KAAK,EAAC,mBAAmB,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,yBAAyB,GAAG;4BAClF,oBAAC,WAAW,IAAC,KAAK,EAAC,iBAAiB,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,uBAAuB,GAAG,CAC3E,CACD,CACF,CACF,CACF;QACN,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAC,sBAAsB,GAAG;YAC9C,oBAAC,wBAAwB,IAAC,GAAG,EAAE,GAAG,GAAI,CAClC,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAA0C,CAAC,KAAK,EAAE,EAAE,CAAC,CACtF,oBAAC,QAAQ,oBACH,KAAK,IACT,aAAa,EAAE,sBAAsB,EACrC,IAAI,EAAE,2BAA2B,EACjC,SAAS,EAAE,IAAI,IACf,CACH,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAiD,CACzF,KAAK,EACL,EAAE,CAAC,CACH,oBAAC,WAAW,oBACN,KAAK,IACT,WAAW,EAAE,WAAW,EACxB,IAAI,EAAE,2BAA2B,EACjC,KAAK,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,IAC7E,CACH,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\n\nimport { MachineHealthCheckModel, MachineModel } from '../models';\nimport { K8sResourceKind, MachineHealthCheckKind } from '../module/k8s/types';\nimport { referenceForModel } from '../module/k8s/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  DetailsItem,\n  EmptyBox,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  Timestamp,\n  navFactory,\n} from './utils';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(MachineHealthCheckModel), ...common];\nconst machineHealthCheckReference = referenceForModel(MachineHealthCheckModel);\n\nconst tableColumnClasses = [\n  classNames('col-xs-6', 'col-sm-4'),\n  classNames('col-xs-6', 'col-sm-4'),\n  classNames('col-sm-4', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst MachineHealthCheckTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nMachineHealthCheckTableHeader.displayName = 'MachineHealthCheckTableHeader';\n\nconst MachineHealthCheckTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineHealthCheckReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={machineHealthCheckReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineHealthCheckList: React.FC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine HealthChecks\"\n    Header={MachineHealthCheckTableHeader}\n    Row={MachineHealthCheckTableRow}\n    virtualize\n  />\n);\n\nconst UnhealthyConditionsTable: React.FC<{ obj: K8sResourceKind }> = ({ obj }) => {\n  return _.isEmpty(obj.spec.unhealthyConditions) ? (\n    <EmptyBox label=\"Unhealthy Conditions\" />\n  ) : (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Status</th>\n          <th>Timeout</th>\n          <th>Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {obj.spec.unhealthyConditions.map(({ status, timeout, type }, i: number) => (\n          <tr key={i}>\n            <td>{status}</td>\n            <td>{timeout}</td>\n            <td>{type}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst MachineHealthCheckDetails: React.FC<MachineHealthCheckDetailsProps> = ({ obj }) => {\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine HealthCheck Details\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={obj}>\n                <DetailsItem label=\"Selector\" obj={obj} path=\"spec.selector\">\n                  <Selector\n                    kind={referenceForModel(MachineModel)}\n                    selector={_.get(obj, 'spec.selector')}\n                    namespace={obj.metadata.namespace}\n                  />\n                </DetailsItem>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <DetailsItem label=\"Max Unhealthy\" obj={obj} path=\"spec.maxUnhealthy\" />\n                <DetailsItem label=\"Expected Machines\" obj={obj} path=\"status.expectedMachines\" />\n                <DetailsItem label=\"Current Healthy\" obj={obj} path=\"status.currentHealthy\" />\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Unhealthy Conditions\" />\n        <UnhealthyConditionsTable obj={obj} />\n      </div>\n    </>\n  );\n};\n\nexport const MachineHealthCheckPage: React.FC<MachineHealthCheckPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineHealthCheckList}\n    kind={machineHealthCheckReference}\n    canCreate={true}\n  />\n);\n\nexport const MachineHealthCheckDetailsPage: React.FC<MachineHealthCheckDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    kind={machineHealthCheckReference}\n    pages={[navFactory.details(MachineHealthCheckDetails), navFactory.editYaml()]}\n  />\n);\n\ntype MachineHealthCheckPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\nexport type MachineHealthCheckDetailsProps = {\n  obj: MachineHealthCheckKind;\n};\n\nexport type MachineHealthCheckDetailsPageProps = {\n  match: any;\n};\n"]}]}