{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/build.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert } from '@patternfly/react-core';\nimport { Status } from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { referenceFor, k8sPatch, } from '../module/k8s';\nimport { cloneBuild, formatBuildDuration, getBuildNumber } from '../module/k8s/builds';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { errorModal, confirmModal } from './modals';\nimport { AsyncComponent, BuildHooks, BuildStrategy, DetailsItem, ExternalLink, history, humanizeBinaryBytes, humanizeCpuCores, Kebab, navFactory, ResourceKebab, ResourceLink, resourceObjPath, resourcePath, ResourceSummary, SectionHeading, Timestamp, } from './utils';\nimport { BuildPipeline, BuildPipelineLogLink } from './build-pipeline';\nimport { BuildLogs } from './build-logs';\nimport { ResourceEventStream } from './events';\nimport { Area, requirePrometheus } from './graphs';\nimport { BuildModel } from '../models';\nconst BuildsReference = 'Build';\nconst CloneBuildAction = (kind, build) => ({\n    label: 'Rebuild',\n    callback: () => cloneBuild(build)\n        .then((clone) => {\n        history.push(resourceObjPath(clone, referenceFor(clone)));\n    })\n        .catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n    }),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        subresource: 'clone',\n        name: build.metadata.name,\n        namespace: build.metadata.namespace,\n        verb: 'create',\n    },\n});\nconst CancelAction = (kind, build) => ({\n    label: 'Cancel Build',\n    hidden: build.status.phase !== 'Running' &&\n        build.status.phase !== 'Pending' &&\n        build.status.phase !== 'New',\n    callback: () => confirmModal({\n        title: 'Cancel build',\n        message: 'Are you sure you want to cancel this build?',\n        btnText: 'Yes, cancel',\n        cancelText: \"No, don't cancel\",\n        executeFn: () => k8sPatch(kind, build, [{ op: 'add', path: '/status/cancelled', value: true }]),\n    }),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: build.metadata.name,\n        namespace: build.metadata.namespace,\n        verb: 'patch',\n    },\n});\nconst menuActions = [\n    CloneBuildAction,\n    CancelAction,\n    ...Kebab.getExtensionsActionsForKind(BuildModel),\n    ...Kebab.factory.common,\n];\nexport var BuildStrategyType;\n(function (BuildStrategyType) {\n    BuildStrategyType[\"Docker\"] = \"Docker\";\n    BuildStrategyType[\"Custom\"] = \"Custom\";\n    BuildStrategyType[\"JenkinsPipeline\"] = \"JenkinsPipeline\";\n    BuildStrategyType[\"Source\"] = \"Source\";\n})(BuildStrategyType || (BuildStrategyType = {}));\nexport const BuildLogLink = ({ build }) => {\n    const { metadata: { name, namespace }, } = build;\n    const isPipeline = _.get(build, 'spec.strategy.type') === BuildStrategyType.JenkinsPipeline;\n    return isPipeline ? (React.createElement(BuildPipelineLogLink, { obj: build })) : (React.createElement(Link, { to: `${resourcePath('Build', name, namespace)}/logs` }, \"View logs\"));\n};\nexport const BuildNumberLink = ({ build }) => {\n    const { metadata: { name, namespace }, } = build;\n    const buildNumber = getBuildNumber(build);\n    const title = _.isFinite(buildNumber) ? `#${buildNumber}` : name;\n    return React.createElement(Link, { to: resourcePath('Build', name, namespace) }, title);\n};\nconst BuildGraphs = requirePrometheus(({ build }) => {\n    const podName = _.get(build, ['metadata', 'annotations', 'openshift.io/build.pod-name']);\n    if (!podName) {\n        return null;\n    }\n    const namespace = build.metadata.namespace;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: \"Memory Usage\", humanize: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, namespace: namespace, query: `sum(container_memory_working_set_bytes{pod='${podName}',namespace='${namespace}',container=''}) BY (pod, namespace)` })),\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: \"CPU Usage\", humanize: humanizeCpuCores, namespace: namespace, query: `pod:container_cpu_usage:sum{pod='${podName}',container='',namespace='${namespace}'}` })),\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: \"Filesystem\", humanize: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, namespace: namespace, query: `pod:container_fs_usage_bytes:sum{pod='${podName}',container='',namespace='${namespace}'}` }))),\n        React.createElement(\"br\", null)));\n});\nexport const PipelineBuildStrategyAlert = () => {\n    return (React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"info\", title: \"Pipeline build strategy deprecation\" },\n        \"With the release of\",\n        ' ',\n        React.createElement(ExternalLink, { href: \"https://openshift.github.io/pipelines-docs/\", text: \"OpenShift Pipelines based on Tekton\" }),\n        \", the pipelines build strategy has been deprecated. Users should either use Jenkins files directly on Jenkins or use cloud-native CI/CD with Openshift Pipelines.\",\n        React.createElement(ExternalLink, { href: \"https://github.com/openshift/pipelines-tutorial/\", text: \"Try the OpenShift Pipelines tutorial\" })));\n};\nexport const BuildsDetails = ({ obj: build }) => {\n    const { logSnippet, message, startTimestamp } = build.status;\n    const triggeredBy = _.map(build.spec.triggeredBy, 'message').join(', ');\n    const duration = formatBuildDuration(build);\n    const hasPipeline = build.spec.strategy.type === BuildStrategyType.JenkinsPipeline;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            hasPipeline && React.createElement(PipelineBuildStrategyAlert, { obj: build }),\n            React.createElement(SectionHeading, { text: \"Build Details\" }),\n            React.createElement(BuildGraphs, { build: build }),\n            hasPipeline && (React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12\" },\n                    React.createElement(BuildPipeline, { obj: build })))),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(ResourceSummary, { resource: build },\n                        React.createElement(DetailsItem, { label: \"Triggered By\", obj: build, path: \"spec.triggeredBy\", hideEmpty: true }, triggeredBy),\n                        React.createElement(DetailsItem, { label: \"Started\", obj: build, path: \"status.startTimestamp\", hideEmpty: true },\n                            React.createElement(Timestamp, { timestamp: startTimestamp })))),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(BuildStrategy, { resource: build },\n                        React.createElement(DetailsItem, { label: \"Status\", obj: build, path: \"status.phase\" },\n                            React.createElement(Status, { status: build.status.phase })),\n                        React.createElement(DetailsItem, { label: \"Log Snippet\", obj: build, path: \"status.logSnippet\", hideEmpty: true },\n                            React.createElement(\"pre\", null, logSnippet)),\n                        React.createElement(DetailsItem, { label: \"Message\", obj: build, path: \"status.message\", hideEmpty: true }, message),\n                        React.createElement(DetailsItem, { label: \"Duration\", obj: build, path: \"status.duration\", hideEmpty: true }, duration))))),\n        React.createElement(BuildHooks, { resource: build })));\n};\nexport const getStrategyType = (strategy) => {\n    switch (strategy) {\n        case BuildStrategyType.Docker:\n            return 'dockerStrategy';\n        case BuildStrategyType.Custom:\n            return 'customStrategy';\n        case BuildStrategyType.JenkinsPipeline:\n            return 'jenkinsPipelineStrategy';\n        case BuildStrategyType.Source:\n            return 'sourceStrategy';\n        default:\n            return null;\n    }\n};\nexport const getEnvPath = (props) => {\n    const strategyType = getStrategyType(props.obj.spec.strategy.type);\n    return strategyType ? ['spec', 'strategy', strategyType] : null;\n};\nconst EnvironmentPage = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then((c) => c.EnvironmentPage) }, props)));\nexport const BuildEnvironmentComponent = (props) => {\n    const { obj } = props;\n    const readOnly = obj.kind === 'Build';\n    const envPath = getEnvPath(props);\n    if (envPath) {\n        return (React.createElement(EnvironmentPage, { obj: obj, rawEnvData: obj.spec.strategy[getStrategyType(obj.spec.strategy.type)], envPath: getEnvPath(props), readOnly: readOnly }));\n    }\n    return (React.createElement(\"div\", { className: \"cos-status-box\" },\n        React.createElement(\"div\", { className: \"text-center\" },\n            \"The environment variable editor does not support build strategy: \",\n            obj.spec.strategy.type,\n            \".\")));\n};\nconst pages = [\n    navFactory.details(BuildsDetails),\n    navFactory.editYaml(),\n    navFactory.envEditor(BuildEnvironmentComponent),\n    navFactory.logs(BuildLogs),\n    navFactory.events(ResourceEventStream),\n];\nexport const BuildsDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: BuildsReference, menuActions: menuActions, pages: pages })));\nBuildsDetailsPage.displayName = 'BuildsDetailsPage';\nconst tableColumnClasses = [\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'hidden-xs'),\n    classNames('col-sm-3', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst BuildsTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Status',\n            sortField: 'status.phase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nBuildsTableHeader.displayName = 'BuildsTableHeader';\nconst BuildsTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: BuildsReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: obj.status.phase })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: BuildsReference, resource: obj }))));\n};\nexport const BuildsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Builds\", Header: BuildsTableHeader, Row: BuildsTableRow, virtualize: true })));\nBuildsList.displayName = 'BuildsList';\nexport const buildPhase = (build) => build.status.phase;\nconst allPhases = ['New', 'Pending', 'Running', 'Complete', 'Failed', 'Error', 'Cancelled'];\nconst filters = [\n    {\n        filterGroupName: 'Status',\n        type: 'build-status',\n        reducer: buildPhase,\n        items: _.map(allPhases, (phase) => ({\n            id: phase,\n            title: phase,\n        })),\n    },\n];\nexport const BuildsPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { title: \"Builds\", kind: BuildsReference, ListComponent: BuildsList, canCreate: false, rowFilters: filters })));\nBuildsPage.displayName = 'BuildsListPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/build.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert } from '@patternfly/react-core';\n\nimport { Status } from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  K8sResourceKindReference,\n  referenceFor,\n  K8sResourceKind,\n  k8sPatch,\n  K8sKind,\n} from '../module/k8s';\nimport { cloneBuild, formatBuildDuration, getBuildNumber } from '../module/k8s/builds';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { errorModal, confirmModal } from './modals';\nimport {\n  AsyncComponent,\n  BuildHooks,\n  BuildStrategy,\n  DetailsItem,\n  ExternalLink,\n  history,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  Kebab,\n  KebabAction,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  resourceObjPath,\n  resourcePath,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { BuildPipeline, BuildPipelineLogLink } from './build-pipeline';\nimport { BuildLogs } from './build-logs';\nimport { ResourceEventStream } from './events';\nimport { Area, requirePrometheus } from './graphs';\nimport { BuildModel } from '../models';\n\nconst BuildsReference: K8sResourceKindReference = 'Build';\n\nconst CloneBuildAction: KebabAction = (kind: K8sKind, build: K8sResourceKind) => ({\n  label: 'Rebuild',\n  callback: () =>\n    cloneBuild(build)\n      .then((clone) => {\n        history.push(resourceObjPath(clone, referenceFor(clone)));\n      })\n      .catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'clone',\n    name: build.metadata.name,\n    namespace: build.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst CancelAction: KebabAction = (kind: K8sKind, build: K8sResourceKind) => ({\n  label: 'Cancel Build',\n  hidden:\n    build.status.phase !== 'Running' &&\n    build.status.phase !== 'Pending' &&\n    build.status.phase !== 'New',\n  callback: () =>\n    confirmModal({\n      title: 'Cancel build',\n      message: 'Are you sure you want to cancel this build?',\n      btnText: 'Yes, cancel',\n      cancelText: \"No, don't cancel\",\n      executeFn: () =>\n        k8sPatch(kind, build, [{ op: 'add', path: '/status/cancelled', value: true }]),\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: build.metadata.name,\n    namespace: build.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst menuActions = [\n  CloneBuildAction,\n  CancelAction,\n  ...Kebab.getExtensionsActionsForKind(BuildModel),\n  ...Kebab.factory.common,\n];\n\nexport enum BuildStrategyType {\n  Docker = 'Docker',\n  Custom = 'Custom',\n  JenkinsPipeline = 'JenkinsPipeline',\n  Source = 'Source',\n}\n\nexport const BuildLogLink = ({ build }) => {\n  const {\n    metadata: { name, namespace },\n  } = build;\n  const isPipeline = _.get(build, 'spec.strategy.type') === BuildStrategyType.JenkinsPipeline;\n  return isPipeline ? (\n    <BuildPipelineLogLink obj={build} />\n  ) : (\n    <Link to={`${resourcePath('Build', name, namespace)}/logs`}>View logs</Link>\n  );\n};\n\nexport const BuildNumberLink = ({ build }) => {\n  const {\n    metadata: { name, namespace },\n  } = build;\n  const buildNumber = getBuildNumber(build);\n  const title = _.isFinite(buildNumber) ? `#${buildNumber}` : name;\n\n  return <Link to={resourcePath('Build', name, namespace)}>{title}</Link>;\n};\n\nconst BuildGraphs = requirePrometheus(({ build }) => {\n  const podName = _.get(build, ['metadata', 'annotations', 'openshift.io/build.pod-name']);\n  if (!podName) {\n    return null;\n  }\n\n  const namespace = build.metadata.namespace;\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md-12 col-lg-4\">\n          <Area\n            title=\"Memory Usage\"\n            humanize={humanizeBinaryBytes}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            namespace={namespace}\n            query={`sum(container_memory_working_set_bytes{pod='${podName}',namespace='${namespace}',container=''}) BY (pod, namespace)`}\n          />\n        </div>\n        <div className=\"col-md-12 col-lg-4\">\n          <Area\n            title=\"CPU Usage\"\n            humanize={humanizeCpuCores}\n            namespace={namespace}\n            query={`pod:container_cpu_usage:sum{pod='${podName}',container='',namespace='${namespace}'}`}\n          />\n        </div>\n        <div className=\"col-md-12 col-lg-4\">\n          <Area\n            title=\"Filesystem\"\n            humanize={humanizeBinaryBytes}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            namespace={namespace}\n            query={`pod:container_fs_usage_bytes:sum{pod='${podName}',container='',namespace='${namespace}'}`}\n          />\n        </div>\n      </div>\n      <br />\n    </>\n  );\n});\n\nexport const PipelineBuildStrategyAlert: React.FC<BuildsDetailsProps> = () => {\n  return (\n    <Alert isInline className=\"co-alert\" variant=\"info\" title=\"Pipeline build strategy deprecation\">\n      With the release of{' '}\n      <ExternalLink\n        href=\"https://openshift.github.io/pipelines-docs/\"\n        text=\"OpenShift Pipelines based on Tekton\"\n      />\n      , the pipelines build strategy has been deprecated. Users should either use Jenkins files\n      directly on Jenkins or use cloud-native CI/CD with Openshift Pipelines.\n      <ExternalLink\n        href=\"https://github.com/openshift/pipelines-tutorial/\"\n        text=\"Try the OpenShift Pipelines tutorial\"\n      />\n    </Alert>\n  );\n};\n\nexport const BuildsDetails: React.SFC<BuildsDetailsProps> = ({ obj: build }) => {\n  const { logSnippet, message, startTimestamp } = build.status;\n  const triggeredBy = _.map(build.spec.triggeredBy, 'message').join(', ');\n  const duration = formatBuildDuration(build);\n  const hasPipeline = build.spec.strategy.type === BuildStrategyType.JenkinsPipeline;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        {hasPipeline && <PipelineBuildStrategyAlert obj={build} />}\n        <SectionHeading text=\"Build Details\" />\n        <BuildGraphs build={build} />\n        {hasPipeline && (\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <BuildPipeline obj={build} />\n            </div>\n          </div>\n        )}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={build}>\n              <DetailsItem label=\"Triggered By\" obj={build} path=\"spec.triggeredBy\" hideEmpty>\n                {triggeredBy}\n              </DetailsItem>\n              <DetailsItem label=\"Started\" obj={build} path=\"status.startTimestamp\" hideEmpty>\n                <Timestamp timestamp={startTimestamp} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <BuildStrategy resource={build}>\n              <DetailsItem label=\"Status\" obj={build} path=\"status.phase\">\n                <Status status={build.status.phase} />\n              </DetailsItem>\n              <DetailsItem label=\"Log Snippet\" obj={build} path=\"status.logSnippet\" hideEmpty>\n                <pre>{logSnippet}</pre>\n              </DetailsItem>\n              <DetailsItem label=\"Message\" obj={build} path=\"status.message\" hideEmpty>\n                {message}\n              </DetailsItem>\n              <DetailsItem label=\"Duration\" obj={build} path=\"status.duration\" hideEmpty>\n                {duration}\n              </DetailsItem>\n            </BuildStrategy>\n          </div>\n        </div>\n      </div>\n      <BuildHooks resource={build} />\n    </>\n  );\n};\n\nexport const getStrategyType = (strategy: BuildStrategyType) => {\n  switch (strategy) {\n    case BuildStrategyType.Docker:\n      return 'dockerStrategy';\n    case BuildStrategyType.Custom:\n      return 'customStrategy';\n    case BuildStrategyType.JenkinsPipeline:\n      return 'jenkinsPipelineStrategy';\n    case BuildStrategyType.Source:\n      return 'sourceStrategy';\n    default:\n      return null;\n  }\n};\n\nexport const getEnvPath = (props) => {\n  const strategyType = getStrategyType(props.obj.spec.strategy.type);\n  return strategyType ? ['spec', 'strategy', strategyType] : null;\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nexport const BuildEnvironmentComponent = (props) => {\n  const { obj } = props;\n  const readOnly = obj.kind === 'Build';\n  const envPath = getEnvPath(props);\n  if (envPath) {\n    return (\n      <EnvironmentPage\n        obj={obj}\n        rawEnvData={obj.spec.strategy[getStrategyType(obj.spec.strategy.type)]}\n        envPath={getEnvPath(props)}\n        readOnly={readOnly}\n      />\n    );\n  }\n  return (\n    <div className=\"cos-status-box\">\n      <div className=\"text-center\">\n        The environment variable editor does not support build strategy: {obj.spec.strategy.type}.\n      </div>\n    </div>\n  );\n};\n\nconst pages = [\n  navFactory.details(BuildsDetails),\n  navFactory.editYaml(),\n  navFactory.envEditor(BuildEnvironmentComponent),\n  navFactory.logs(BuildLogs),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const BuildsDetailsPage: React.SFC<BuildsDetailsPageProps> = (props) => (\n  <DetailsPage {...props} kind={BuildsReference} menuActions={menuActions} pages={pages} />\n);\nBuildsDetailsPage.displayName = 'BuildsDetailsPage';\n\nconst tableColumnClasses = [\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'hidden-xs'),\n  classNames('col-sm-3', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst BuildsTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Status',\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nBuildsTableHeader.displayName = 'BuildsTableHeader';\n\nconst BuildsTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={BuildsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={obj.status.phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={BuildsReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const BuildsList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Builds\"\n    Header={BuildsTableHeader}\n    Row={BuildsTableRow}\n    virtualize\n  />\n);\n\nBuildsList.displayName = 'BuildsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nconst allPhases = ['New', 'Pending', 'Running', 'Complete', 'Failed', 'Error', 'Cancelled'];\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'build-status',\n    reducer: buildPhase,\n    items: _.map(allPhases, (phase) => ({\n      id: phase,\n      title: phase,\n    })),\n  },\n];\n\nexport const BuildsPage: React.SFC<BuildsPageProps> = (props) => (\n  <ListPage\n    {...props}\n    title=\"Builds\"\n    kind={BuildsReference}\n    ListComponent={BuildsList}\n    canCreate={false}\n    rowFilters={filters}\n  />\n);\nBuildsPage.displayName = 'BuildsListPage';\n\nexport type BuildsDetailsProps = {\n  obj: any;\n};\n\nexport type BuildsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\nexport type BuildsDetailsPageProps = {\n  match: any;\n};\n"]}]}