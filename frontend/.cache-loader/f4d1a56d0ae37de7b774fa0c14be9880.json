{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/add-device.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/add-device.tsx","mtime":1615298458650},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { AddDeviceButton } from './add-device-button';\nimport { AddDeviceFormSelect } from './add-device-form-select';\nimport { addItemMessage, addItemDisabledMessage, addItemSelectLabel } from './constants';\nexport const AddDevice = ({ devices, onAdd, isEditMode, setEditMode }) => {\n    const options = devices.filter((device) => !device.value.bootOrder);\n    const canAddItem = options.length > 0;\n    const selectID = 'add-device-select';\n    const buttontID = 'add-device-btm';\n    return (React.createElement(\"div\", { className: \"kubevirt-boot-order__add-device\" }, isEditMode && canAddItem ? (React.createElement(AddDeviceFormSelect, { id: selectID, options: options, label: addItemSelectLabel, onAdd: onAdd, onDelete: () => setEditMode(false) })) : (React.createElement(AddDeviceButton, { id: buttontID, message: addItemMessage, disabledMessage: addItemDisabledMessage, isDisabled: !canAddItem, onClick: () => setEditMode(true) }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/add-device.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/add-device.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,cAAc,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAEzF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAkB,EAAE,EAAE;IACvF,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAEpE,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,MAAM,QAAQ,GAAG,mBAAmB,CAAC;IACrC,MAAM,SAAS,GAAG,gBAAgB,CAAC;IAEnC,OAAO,CACL,6BAAK,SAAS,EAAC,iCAAiC,IAC7C,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,CAC1B,oBAAC,mBAAmB,IAClB,EAAE,EAAE,QAAQ,EACZ,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,kBAAkB,EACzB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,GAClC,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,eAAe,IACd,EAAE,EAAE,SAAS,EACb,OAAO,EAAE,cAAc,EACvB,eAAe,EAAE,sBAAsB,EACvC,UAAU,EAAE,CAAC,UAAU,EACvB,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,GAChC,CACH,CACG,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { BootableDeviceType } from '../../types';\nimport { AddDeviceButton } from './add-device-button';\nimport { AddDeviceFormSelect } from './add-device-form-select';\nimport { addItemMessage, addItemDisabledMessage, addItemSelectLabel } from './constants';\n\nexport const AddDevice = ({ devices, onAdd, isEditMode, setEditMode }: AddDeviceProps) => {\n  const options = devices.filter((device) => !device.value.bootOrder);\n\n  const canAddItem = options.length > 0;\n  const selectID = 'add-device-select';\n  const buttontID = 'add-device-btm';\n\n  return (\n    <div className=\"kubevirt-boot-order__add-device\">\n      {isEditMode && canAddItem ? (\n        <AddDeviceFormSelect\n          id={selectID}\n          options={options}\n          label={addItemSelectLabel}\n          onAdd={onAdd}\n          onDelete={() => setEditMode(false)}\n        />\n      ) : (\n        <AddDeviceButton\n          id={buttontID}\n          message={addItemMessage}\n          disabledMessage={addItemDisabledMessage}\n          isDisabled={!canAddItem}\n          onClick={() => setEditMode(true)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport type AddDeviceProps = {\n  devices: BootableDeviceType[];\n  isEditMode: boolean;\n  /** onAdd moves items from the options list to the sources list, key = \"<type>-<name>\". */\n  onAdd: (key: string) => void;\n  setEditMode: (boolean) => void;\n};\n"]}]}