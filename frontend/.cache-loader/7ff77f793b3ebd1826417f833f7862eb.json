{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-broker.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-broker.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ServiceBrokerModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst kind = ServiceBrokerModel.kind;\nexport const serviceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceBrokerModel), ...common];\nconst ServiceBrokerDetails = ({ obj: serviceBroker }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceBroker, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourceSummary, { resource: serviceBroker, showAnnotations: false, showOwner: false })),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13'), obj: serviceBroker, path: \"status.phase\" },\n                            React.createElement(Status, { status: ServiceBrokerPhase(serviceBroker) })),\n                        React.createElement(\"dt\", null, \"URL\"),\n                        React.createElement(\"dd\", null, serviceBroker.spec.url)))))));\n};\nconst { details, editYaml } = navFactory;\nconst ServiceBrokersDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: serviceBrokerMenuActions, pages: [details(ServiceBrokerDetails), editYaml()] }));\nServiceBrokersDetailsPage.displayName = 'ServiceBrokersDetailsPage';\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\nconst ServiceBrokerPhase = instance => {\n    let phase = '';\n    if (instance.status) {\n        instance.status.conditions.forEach(cur => {\n            if (cur.type === 'Ready') {\n                if (cur.status === 'True') {\n                    phase = 'Running';\n                }\n                else {\n                    phase = 'Error';\n                }\n            }\n        });\n        return phase;\n    }\n};\nconst ServiceBrokerTableRow = ({ obj, index, key, style }) => {\n    let phase = ServiceBrokerPhase(obj);\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1]) },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: phase })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: serviceBrokerMenuActions, kind: kind, resource: obj }))));\n};\nconst ServiceBrokerTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'ServiceBrokerPhase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nServiceBrokerTableHeader.displayName = 'ServiceBrokerTableHeader';\nconst serviceBrokerStatusReducer = (serviceBroker) => {\n    return ServiceBrokerPhase(serviceBroker);\n};\nconst ServiceBrokersList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Service Broker\", Header: ServiceBrokerTableHeader.bind(null, t), Row: ServiceBrokerTableRow, virtualize: true }));\n};\nServiceBrokersList.displayName = 'ServiceBrokersList';\nconst ServiceBrokersPage = props => {\n    const { t } = useTranslation();\n    return (React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_11'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_11') }), canCreate: true, kind: kind, ListComponent: ServiceBrokersList, rowFilters: [\n            {\n                filterGroupName: 'Status',\n                type: 'service-broker-status',\n                reducer: serviceBrokerStatusReducer,\n                items: [\n                    { id: 'Running', title: t('COMMON:MSG_COMMON_STATUS_1') },\n                    { id: 'Error', title: 'Error' },\n                ],\n            },\n        ] }, props)));\n};\nServiceBrokersPage.displayName = 'ServiceBrokersPage';\nexport { ServiceBrokersList, ServiceBrokersPage, ServiceBrokersDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-broker.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-broker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ServiceBrokerModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\n\nconst kind = ServiceBrokerModel.kind;\n\nexport const serviceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceBrokerModel), ...common];\n\nconst ServiceBrokerDetails: React.FC<ServiceBrokerDetailsProps> = ({ obj: serviceBroker }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceBroker, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={serviceBroker} showAnnotations={false} showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={serviceBroker} path=\"status.phase\">\n                <Status status={ServiceBrokerPhase(serviceBroker)} />\n              </DetailsItem>\n              <dt>URL</dt>\n              <dd>{serviceBroker.spec.url}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ServiceBrokerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ServiceBrokersDetailsPage: React.FC<ServiceBrokersDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={serviceBrokerMenuActions} pages={[details(ServiceBrokerDetails), editYaml()]} />;\nServiceBrokersDetailsPage.displayName = 'ServiceBrokersDetailsPage';\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\n\nconst ServiceBrokerPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'Ready') {\n        if (cur.status === 'True') {\n          phase = 'Running';\n        } else {\n          phase = 'Error';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst ServiceBrokerTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  let phase = ServiceBrokerPhase(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={serviceBrokerMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceBrokerTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'ServiceBrokerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nServiceBrokerTableHeader.displayName = 'ServiceBrokerTableHeader';\n\nconst serviceBrokerStatusReducer = (serviceBroker: any): string => {\n  return ServiceBrokerPhase(serviceBroker);\n};\n\nconst ServiceBrokersList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Service Broker\" Header={ServiceBrokerTableHeader.bind(null, t)} Row={ServiceBrokerTableRow} virtualize />;\n};\nServiceBrokersList.displayName = 'ServiceBrokersList';\n\nconst ServiceBrokersPage: React.FC<ServiceBrokersPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      title={t('COMMON:MSG_LNB_MENU_11')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_11') })}\n      canCreate={true}\n      kind={kind}\n      ListComponent={ServiceBrokersList}\n      rowFilters={[\n        {\n          filterGroupName: 'Status',\n          type: 'service-broker-status',\n          reducer: serviceBrokerStatusReducer,\n          items: [\n            { id: 'Running', title: t('COMMON:MSG_COMMON_STATUS_1') },\n            { id: 'Error', title: 'Error' },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\nServiceBrokersPage.displayName = 'ServiceBrokersPage';\n\nexport { ServiceBrokersList, ServiceBrokersPage, ServiceBrokersDetailsPage };\n\ntype ServiceBrokersPageProps = {};\n\ntype ServiceBrokersDetailsPageProps = {\n  match: any;\n};\n"]}]}