{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/integration-config.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/integration-config.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { DetailsItem, Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { IntegrationConfigModel } from '../../models/hypercloud';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(IntegrationConfigModel), ...Kebab.factory.common];\nconst kind = IntegrationConfigModel.kind;\nconst tableColumnClasses = [\n    classNames('col-xs-2', 'col-sm-2'),\n    classNames('col-xs-2', 'col-sm-2'),\n    classNames('col-sm-2', 'hidden-xs'),\n    classNames('col-xs-2', 'col-sm-2'),\n    classNames('col-sm-2', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst IntegrationConfigPhase = instance => {\n    let phase = '';\n    if (instance.status) {\n        instance.status.conditions.forEach(cur => {\n            if (cur.type === 'ready') {\n                if (cur.status === 'True') {\n                    phase = 'Ready';\n                }\n                else {\n                    phase = 'UnReady';\n                }\n            }\n        });\n        return phase;\n    }\n};\nconst IntegrationConfigTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n            sortField: 'spec.image',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.phase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nIntegrationConfigTableHeader.displayName = 'IntegrationConfigTableHeader';\nconst IntegrationConfigTableRow = ({ obj: integrationConfig, index, key, style }) => {\n    const phase = IntegrationConfigPhase(integrationConfig);\n    return (React.createElement(TableRow, { id: integrationConfig.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: integrationConfig.metadata.name, namespace: integrationConfig.metadata.namespace, title: integrationConfig.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: integrationConfig.metadata.namespace, title: integrationConfig.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, integrationConfig.spec.image),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Status, { status: phase })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: integrationConfig.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: integrationConfig }))));\n};\nexport const IntegrationConfigDetailsList = ({ ds }) => {\n    var _a;\n    const { t } = useTranslation();\n    const readyCondition = ds.status.conditions.find(obj => _.lowerCase(obj.type) === 'ready');\n    const time = (_a = readyCondition === null || readyCondition === void 0 ? void 0 : readyCondition.lastTransitionTime) === null || _a === void 0 ? void 0 : _a.replace('T', ' ').replaceAll('-', '.').replace('Z', '');\n    const phase = IntegrationConfigPhase(ds);\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: `${t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_109')}`, obj: ds, path: \"status.transitionTime\" }, time),\n        React.createElement(DetailsItem, { label: `${t('COMMON:MSG_COMMON_TABLEHEADER_2')}`, obj: ds, path: \"status.result\" },\n            React.createElement(Status, { status: phase }))));\n};\nconst IntegrationConfigDetails = ({ obj: integrationConfig }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(integrationConfig, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: integrationConfig })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(IntegrationConfigDetailsList, { ds: integrationConfig }))))));\n};\nconst { details, editYaml } = navFactory;\nexport const IntegrationConfigs = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"IntegrationConfigs\", Header: IntegrationConfigTableHeader.bind(null, t), Row: IntegrationConfigTableRow, virtualize: true }));\n};\nexport const IntegrationConfigsPage = props => {\n    // const { t } = useTranslation();\n    return React.createElement(ListPage\n    // title={t('COMMON:CD_MAILFORM_REQUEST_7')}\n    // createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:CD_MAILFORM_REQUEST_7') })}\n    , Object.assign({ \n        // title={t('COMMON:CD_MAILFORM_REQUEST_7')}\n        // createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:CD_MAILFORM_REQUEST_7') })}\n        canCreate: true, ListComponent: IntegrationConfigs, kind: kind }, props));\n};\nexport const IntegrationConfigsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(IntegrationConfigDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/integration-config.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/integration-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { Status } from '@console/shared';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { IntegrationConfigModel } from '../../models/hypercloud';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(IntegrationConfigModel), ...Kebab.factory.common];\n\nconst kind = IntegrationConfigModel.kind;\n\nconst tableColumnClasses = [\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-sm-2', 'hidden-xs'),\n  classNames('col-xs-2', 'col-sm-2'),\n  classNames('col-sm-2', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst IntegrationConfigPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'ready') {\n        if (cur.status === 'True') {\n          phase = 'Ready';\n        } else {\n          phase = 'UnReady';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst IntegrationConfigTableHeader = (t?: TFunction) => {\n\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_38'),\n      sortField: 'spec.image',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nIntegrationConfigTableHeader.displayName = 'IntegrationConfigTableHeader';\n\n\nconst IntegrationConfigTableRow: RowFunction<K8sResourceKind> = ({ obj: integrationConfig, index, key, style }) => {\n  const phase = IntegrationConfigPhase(integrationConfig);\n  return (\n    <TableRow id={integrationConfig.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={integrationConfig.metadata.name} namespace={integrationConfig.metadata.namespace} title={integrationConfig.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={integrationConfig.metadata.namespace} title={integrationConfig.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {integrationConfig.spec.image}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={integrationConfig.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={integrationConfig} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const IntegrationConfigDetailsList: React.FC<IntegrationConfigDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  const readyCondition = ds.status.conditions.find(obj => _.lowerCase(obj.type) === 'ready');\n  const time = readyCondition?.lastTransitionTime?.replace('T', ' ').replaceAll('-', '.').replace('Z', '');\n  const phase = IntegrationConfigPhase(ds);\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={`${t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_109')}`} obj={ds} path=\"status.transitionTime\">\n        {time}\n      </DetailsItem>\n      <DetailsItem label={`${t('COMMON:MSG_COMMON_TABLEHEADER_2')}`} obj={ds} path=\"status.result\">\n        <Status status={phase} />\n      </DetailsItem>\n    </dl>\n  );\n}\n\nconst IntegrationConfigDetails: React.FC<IntegrationConfigDetailsProps> = ({ obj: integrationConfig }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(integrationConfig, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={integrationConfig} />\n          </div>\n          <div className=\"col-lg-6\">\n            <IntegrationConfigDetailsList ds={integrationConfig} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nconst { details, editYaml } = navFactory;\n\nexport const IntegrationConfigs: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"IntegrationConfigs\" Header={IntegrationConfigTableHeader.bind(null, t)} Row={IntegrationConfigTableRow} virtualize />;\n}\n\n\nexport const IntegrationConfigsPage: React.FC<IntegrationConfigsPageProps> = props => {\n  // const { t } = useTranslation();\n\n  return <ListPage\n    // title={t('COMMON:CD_MAILFORM_REQUEST_7')}\n    // createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:CD_MAILFORM_REQUEST_7') })}\n    canCreate={true}\n    ListComponent={IntegrationConfigs}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const IntegrationConfigsDetailsPage: React.FC<IntegrationConfigsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(IntegrationConfigDetails)), editYaml()]} />;\n\ntype IntegrationConfigDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype IntegrationConfigsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype IntegrationConfigDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype IntegrationConfigsDetailsPageProps = {\n  match: any;\n};"]}]}