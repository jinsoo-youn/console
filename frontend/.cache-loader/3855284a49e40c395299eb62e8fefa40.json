{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/create-task.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/create-task.tsx","mtime":1617848124060},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { WithCommonForm } from '../create-form';\nimport { Section } from '../../utils/section';\n// import { TextInput } from '../../utils/text-input';\nimport { SelectorInput } from '../../../utils';\nimport { ModalLauncher, ModalList } from '../utils';\nimport { InputResourceModal } from './input-resource-modal';\nimport { OutputResourceModal } from './output-resource-modal';\nimport { TaskParameterModal } from './task-parameter-modal';\nimport { WorkSpaceModal } from './work-space-modal';\nimport { VolumeModal } from './volume-modal';\nimport { StepModal } from './step-modal';\nconst defaultValues = {\n    metadata: {\n        name: 'example-name',\n    },\n};\nconst taskFormFactory = params => {\n    return WithCommonForm(CreateTaskComponent, params, defaultValues);\n};\nconst CreateTaskComponent = props => {\n    const methods = useFormContext();\n    const { control, register, setValue } = methods;\n    const [inputResource, setInputResource] = React.useState([]);\n    const [outputResource, setOutputResource] = React.useState([]);\n    const [taskParameter, setTaskParameter] = React.useState([]);\n    const [workSpace, setWorkSpace] = React.useState([]);\n    const [volume, setVolume] = React.useState([]);\n    const [step, setStep] = React.useState([]);\n    React.useEffect(() => {\n        register('input_resource');\n        register('output_resource');\n        register('task_parameter');\n        register('work_space');\n        register('volume');\n        register('step');\n    }, [register]);\n    React.useMemo(() => {\n        setValue('input_resource', inputResource);\n    }, [inputResource]);\n    React.useMemo(() => {\n        setValue('output_resource', outputResource);\n    }, [outputResource]);\n    React.useMemo(() => {\n        setValue('task_parameter', taskParameter);\n    }, [taskParameter]);\n    React.useMemo(() => {\n        setValue('work_space', workSpace);\n    }, [workSpace]);\n    React.useMemo(() => {\n        setValue('volume', volume);\n    }, [volume]);\n    React.useMemo(() => {\n        setValue('step', step);\n    }, [step]);\n    // INPUT RESOURCE\n    const onAddInputResource = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currInputResource = { name: data.name, path: data.path, type: data.type, option: data.option };\n        setInputResource(() => {\n            return [...inputResource, currInputResource];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveInputResource = e => {\n        let currInputResource = inputResource.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setInputResource([...currInputResource]);\n    };\n    const onModifyInputResource = (cancel, index, e) => {\n        e.preventDefault();\n        let list = document.getElementById('input-resource-list').childNodes;\n        list.forEach(cur => {\n            if (cur['dataset']['modify'] === 'true') {\n                cur['dataset']['modify'] = false;\n            }\n        });\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currInputResource = inputResource.map((cur, idx) => {\n            if (idx === index) {\n                return { name: data.name, path: data.path, type: data.type, option: data.option };\n            }\n            return cur;\n        });\n        setInputResource([...currInputResource]);\n        cancel();\n    };\n    // OUTPUT RESOURCE\n    const onAddOutputResource = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currOutputResource = { name: data.name, path: data.path, type: data.type, option: data.option };\n        setOutputResource(() => {\n            return [...outputResource, currOutputResource];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveOutputResource = e => {\n        let currOutputResource = outputResource.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setOutputResource([...currOutputResource]);\n    };\n    const onModifyOutputResource = (cancel, index, e) => {\n        e.preventDefault();\n        let list = document.getElementById('output-resource-list').childNodes;\n        list.forEach(cur => {\n            if (cur['dataset']['modify'] === 'true') {\n                cur['dataset']['modify'] = false;\n            }\n        });\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currOutputResource = outputResource.map((cur, idx) => {\n            if (idx === index) {\n                return { name: data.name, path: data.path, type: data.type, option: data.option };\n            }\n            return cur;\n        });\n        setOutputResource([...currOutputResource]);\n        cancel();\n    };\n    // TASK PARAMETER\n    const onAddTaskParameter = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currTaskParameter = { name: data.name, description: data.description, type: data.type, default: data.default };\n        setTaskParameter(() => {\n            return [...taskParameter, currTaskParameter];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveTaskParameter = e => {\n        let currTaskParameter = taskParameter.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setTaskParameter([...currTaskParameter]);\n    };\n    const onModifyTaskParameter = (cancel, index, e) => {\n        e.preventDefault();\n        let list = document.getElementById('task-parameter-list').childNodes;\n        list.forEach(cur => {\n            if (cur['dataset']['modify'] === 'true') {\n                cur['dataset']['modify'] = false;\n            }\n        });\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currTaskParameter = taskParameter.map((cur, idx) => {\n            if (idx === index) {\n                return { name: data.name, description: data.description, type: data.type, default: data.default };\n            }\n            return cur;\n        });\n        setTaskParameter([...currTaskParameter]);\n        cancel();\n    };\n    // WORKSPACE\n    const onAddWorkSpace = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currWorkSpace = { name: data.name, description: data.description, path: data.path, accessMode: data.accessMode, option: data.option };\n        setWorkSpace(() => {\n            return [...workSpace, currWorkSpace];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveWorkSpace = e => {\n        let currWorkSpace = workSpace.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setWorkSpace([...currWorkSpace]);\n    };\n    const onModifyWorkSpace = (cancel, index, e) => {\n        e.preventDefault();\n        let list = document.getElementById('work-space-list').childNodes;\n        list.forEach(cur => {\n            if (cur['dataset']['modify'] === 'true') {\n                cur['dataset']['modify'] = false;\n            }\n        });\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currWorkSpace = workSpace.map((cur, idx) => {\n            if (idx === index) {\n                return { name: data.name, path: data.path, type: data.type, option: data.option };\n            }\n            return cur;\n        });\n        setWorkSpace([...currWorkSpace]);\n        cancel();\n    };\n    // VOLUME\n    const onAddVolume = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currVolume = { name: data.name, type: data.type };\n        if (currVolume.type === 'secret') {\n            currVolume['secret'] = data['secret'];\n            delete currVolume['configMap'];\n        }\n        else if (currVolume.type === 'configMap') {\n            currVolume['configMap'] = data['config_map'];\n            delete currVolume['secret'];\n        }\n        setVolume(() => {\n            return [...volume, currVolume];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveVolume = e => {\n        let currVolume = volume.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setVolume([...currVolume]);\n    };\n    const onModifyVolume = (cancel, index, e) => {\n        e.preventDefault();\n        let list = document.getElementById('volume-list').childNodes;\n        list.forEach(cur => {\n            if (cur['dataset']['modify'] === 'true') {\n                cur['dataset']['modify'] = false;\n            }\n        });\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currVolume = volume.map((cur, idx) => {\n            if (idx === index) {\n                let volume = { name: data.name, type: data.type };\n                if (volume.type === 'secret') {\n                    volume['secret'] = data.secret;\n                    delete volume['configMap'];\n                }\n                else if (volume.type === 'configMap') {\n                    volume['configMap'] = data['config_map'];\n                    delete volume['secret'];\n                }\n                return volume;\n            }\n            return cur;\n        });\n        setVolume([...currVolume]);\n        cancel();\n    };\n    // STEP\n    const onAddStep = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currStep = { name: data.name, manualImage: data.manualImage, manualCommand: data.manualCommand };\n        setStep(() => {\n            return [...step, currStep];\n        }); // state 최신화\n        cancel();\n        return false;\n    };\n    const onRemoveStep = e => {\n        let currStep = step.filter((cur, idx) => {\n            let targetIndex = Number(e.target.id.split('item-remove')[1]);\n            return targetIndex !== idx;\n        });\n        setStep([...currStep]);\n    };\n    const onModifyStep = (cancel, index, e) => {\n        e.preventDefault();\n        let data = methods.getValues(); // modal에서 입력받은 data\n        let currStep = step.map((cur, idx) => {\n            if (idx === index) {\n                return { name: data.name, path: data.path, type: data.type, option: data.option };\n            }\n            return cur;\n        });\n        setStep([...currStep]);\n        cancel();\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Section, { label: \"Labels\", id: \"label\", description: \"\\uC774\\uAC83\\uC740 Label\\uC785\\uB2C8\\uB2E4.\" },\n            React.createElement(Controller, { name: \"metadata.labels\", id: \"label\", labelClassName: \"co-text-sample\", as: SelectorInput, control: control, tags: [] })),\n        React.createElement(Section, { label: \"Input Resource\", id: \"inputResource\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: inputResource, id: \"input-resource\", title: \"Input Resource\", children: React.createElement(InputResourceModal, { methods: methods, inputResource: inputResource }), onRemove: onRemoveInputResource, onModify: onModifyInputResource, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uC778\\uD48B \\uB9AC\\uC18C\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: 'Input Resource', id: 'input-resource', handleMethod: onAddInputResource, children: React.createElement(InputResourceModal, { methods: methods, inputResource: inputResource }), submitText: '추가' }) }, \"+ \\uC778\\uD48B \\uB9AC\\uC18C\\uC2A4 \\uCD94\\uAC00\"))),\n        React.createElement(Section, { label: \"Output Resource\", id: \"outputResource\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: outputResource, id: \"output-resource\", title: \"Output Resource\", children: React.createElement(OutputResourceModal, { methods: methods, outputResource: outputResource }), onRemove: onRemoveOutputResource, onModify: onModifyOutputResource, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uC544\\uC6C3\\uD48B \\uB9AC\\uC18C\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: 'Out Resource', id: 'output-resource', handleMethod: onAddOutputResource, children: React.createElement(OutputResourceModal, { methods: methods, outputResource: outputResource }), submitText: '추가' }) }, \"+ \\uC544\\uC6C3\\uD48B \\uB9AC\\uC18C\\uC2A4 \\uCD94\\uAC00\"))),\n        React.createElement(Section, { label: \"\\uD0DC\\uC2A4\\uD06C \\uD30C\\uB77C\\uBBF8\\uD130 \\uAD6C\\uC131\", id: \"taskParamter\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: taskParameter, id: \"task-parameter\", title: \"\\uD0DC\\uC2A4\\uD06C \\uD30C\\uB77C\\uBBF8\\uD130 \\uAD6C\\uC131\", children: React.createElement(TaskParameterModal, { methods: methods, taskParameter: taskParameter }), onRemove: onRemoveTaskParameter, onModify: onModifyTaskParameter, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uD0DC\\uC2A4\\uD06C \\uD30C\\uB77C\\uBBF8\\uD130 \\uAD6C\\uC131\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: '태스크 파라미터', id: 'task-parameter', handleMethod: onAddTaskParameter, children: React.createElement(TaskParameterModal, { methods: methods, taskParameter: taskParameter }), submitText: '추가' }) }, \"+ \\uD0DC\\uC2A4\\uD06C \\uD30C\\uB77C\\uBBF8\\uD130 \\uCD94\\uAC00\"))),\n        React.createElement(Section, { label: \"\\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4 \\uAD6C\\uC131\", id: \"workSpace\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: workSpace, id: \"work-space\", title: \"\\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4 \\uAD6C\\uC131\", children: React.createElement(WorkSpaceModal, { methods: methods, workSpace: workSpace }), onRemove: onRemoveWorkSpace, onModify: onModifyWorkSpace, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4 \\uAD6C\\uC131\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: '워크스페이스', id: 'work-space', handleMethod: onAddWorkSpace, children: React.createElement(WorkSpaceModal, { methods: methods, workSpace: workSpace }), submitText: '추가' }) }, \"+ \\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4 \\uCD94\\uAC00\"))),\n        React.createElement(Section, { label: \"\\uBCFC\\uB968\", id: \"volume\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: volume, id: \"volume\", title: \"\\uBCFC\\uB968 \\uAD6C\\uC131\", children: React.createElement(VolumeModal, { methods: methods, volume: volume }), onRemove: onRemoveVolume, onModify: onModifyVolume, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uBCFC\\uB968\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: '볼륨', id: 'volume', handleMethod: onAddVolume, children: React.createElement(VolumeModal, { methods: methods, volume: volume }), submitText: '추가' }) }, \"+ \\uBCFC\\uB968 \\uCD94\\uAC00\"))),\n        React.createElement(Section, { label: \"\\uC2A4\\uD15D\", id: \"step\" },\n            React.createElement(React.Fragment, null,\n                React.createElement(ModalList, { list: step, id: \"step\", title: \"\\uC2A4\\uD15D \\uAD6C\\uC131\", children: React.createElement(StepModal, { methods: methods, step: step }), onRemove: onRemoveStep, onModify: onModifyStep, methods: methods, description: \"\\uC774 \\uD0DC\\uC2A4\\uD06C\\uC640 \\uC5F0\\uACB0\\uB41C \\uC2A4\\uD15D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\" }),\n                React.createElement(\"span\", { className: \"open-modal_text\", onClick: () => ModalLauncher({ inProgress: false, title: '스텝', id: 'step', handleMethod: onAddStep, children: React.createElement(StepModal, { methods: methods, step: step }), submitText: '추가' }) }, \"+ \\uC2A4\\uD15D \\uCD94\\uAC00\")))));\n};\nexport const CreateTask = props => {\n    const formComponent = taskFormFactory(props.match.params);\n    const TaskFormComponent = formComponent;\n    return React.createElement(TaskFormComponent, { fixed: {}, explanation: '', titleVerb: \"Create\", onSubmitCallback: onSubmitCallback, isCreate: true });\n};\nexport const onSubmitCallback = data => {\n    let labels = SelectorInput.objectify(data.metadata.labels);\n    delete data.metadata.labels;\n    data = _.defaultsDeep(data, { metadata: { labels: labels } });\n    return data;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/create-task.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/create-task.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { match as RMatch } from 'react-router';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { WithCommonForm } from '../create-form';\nimport { Section } from '../../utils/section';\n// import { TextInput } from '../../utils/text-input';\nimport { SelectorInput } from '../../../utils';\nimport { ModalLauncher, ModalList } from '../utils';\nimport { InputResourceModal } from './input-resource-modal';\nimport { OutputResourceModal } from './output-resource-modal';\nimport { TaskParameterModal } from './task-parameter-modal';\nimport { WorkSpaceModal } from './work-space-modal';\nimport { VolumeModal } from './volume-modal';\nimport { StepModal } from './step-modal';\nconst defaultValues = {\n  metadata: {\n    name: 'example-name',\n  },\n};\n\nconst taskFormFactory = params => {\n  return WithCommonForm(CreateTaskComponent, params, defaultValues);\n};\n\nconst CreateTaskComponent: React.FC<TaskFormProps> = props => {\n  const methods = useFormContext();\n  const { control, register, setValue } = methods;\n  const [inputResource, setInputResource] = React.useState([]);\n  const [outputResource, setOutputResource] = React.useState([]);\n  const [taskParameter, setTaskParameter] = React.useState([]);\n  const [workSpace, setWorkSpace] = React.useState([]);\n  const [volume, setVolume] = React.useState([]);\n  const [step, setStep] = React.useState([]);\n\n  React.useEffect(() => {\n    register('input_resource');\n    register('output_resource');\n    register('task_parameter');\n    register('work_space');\n    register('volume');\n    register('step');\n  }, [register]);\n\n  React.useMemo(() => {\n    setValue('input_resource', inputResource);\n  }, [inputResource]);\n\n  React.useMemo(() => {\n    setValue('output_resource', outputResource);\n  }, [outputResource]);\n\n  React.useMemo(() => {\n    setValue('task_parameter', taskParameter);\n  }, [taskParameter]);\n\n  React.useMemo(() => {\n    setValue('work_space', workSpace);\n  }, [workSpace]);\n\n  React.useMemo(() => {\n    setValue('volume', volume);\n  }, [volume]);\n\n  React.useMemo(() => {\n    setValue('step', step);\n  }, [step]);\n\n  // INPUT RESOURCE\n  const onAddInputResource = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currInputResource = { name: data.name, path: data.path, type: data.type, option: data.option };\n    setInputResource(() => {\n      return [...inputResource, currInputResource];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveInputResource = e => {\n    let currInputResource = inputResource.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setInputResource([...currInputResource]);\n  };\n  const onModifyInputResource = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let list = document.getElementById('input-resource-list').childNodes;\n    list.forEach(cur => {\n      if (cur['dataset']['modify'] === 'true') {\n        cur['dataset']['modify'] = false;\n      }\n    });\n\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currInputResource = inputResource.map((cur, idx) => {\n      if (idx === index) {\n        return { name: data.name, path: data.path, type: data.type, option: data.option };\n      }\n      return cur;\n    });\n    setInputResource([...currInputResource]);\n    cancel();\n  };\n\n  // OUTPUT RESOURCE\n  const onAddOutputResource = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currOutputResource = { name: data.name, path: data.path, type: data.type, option: data.option };\n    setOutputResource(() => {\n      return [...outputResource, currOutputResource];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveOutputResource = e => {\n    let currOutputResource = outputResource.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setOutputResource([...currOutputResource]);\n  };\n  const onModifyOutputResource = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let list = document.getElementById('output-resource-list').childNodes;\n    list.forEach(cur => {\n      if (cur['dataset']['modify'] === 'true') {\n        cur['dataset']['modify'] = false;\n      }\n    });\n\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currOutputResource = outputResource.map((cur, idx) => {\n      if (idx === index) {\n        return { name: data.name, path: data.path, type: data.type, option: data.option };\n      }\n      return cur;\n    });\n    setOutputResource([...currOutputResource]);\n    cancel();\n  };\n\n  // TASK PARAMETER\n  const onAddTaskParameter = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currTaskParameter = { name: data.name, description: data.description, type: data.type, default: data.default };\n    setTaskParameter(() => {\n      return [...taskParameter, currTaskParameter];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveTaskParameter = e => {\n    let currTaskParameter = taskParameter.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setTaskParameter([...currTaskParameter]);\n  };\n  const onModifyTaskParameter = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let list = document.getElementById('task-parameter-list').childNodes;\n    list.forEach(cur => {\n      if (cur['dataset']['modify'] === 'true') {\n        cur['dataset']['modify'] = false;\n      }\n    });\n\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currTaskParameter = taskParameter.map((cur, idx) => {\n      if (idx === index) {\n        return { name: data.name, description: data.description, type: data.type, default: data.default };\n      }\n      return cur;\n    });\n    setTaskParameter([...currTaskParameter]);\n    cancel();\n  };\n\n  // WORKSPACE\n  const onAddWorkSpace = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currWorkSpace = { name: data.name, description: data.description, path: data.path, accessMode: data.accessMode, option: data.option };\n    setWorkSpace(() => {\n      return [...workSpace, currWorkSpace];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveWorkSpace = e => {\n    let currWorkSpace = workSpace.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setWorkSpace([...currWorkSpace]);\n  };\n  const onModifyWorkSpace = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let list = document.getElementById('work-space-list').childNodes;\n    list.forEach(cur => {\n      if (cur['dataset']['modify'] === 'true') {\n        cur['dataset']['modify'] = false;\n      }\n    });\n\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currWorkSpace = workSpace.map((cur, idx) => {\n      if (idx === index) {\n        return { name: data.name, path: data.path, type: data.type, option: data.option };\n      }\n      return cur;\n    });\n    setWorkSpace([...currWorkSpace]);\n    cancel();\n  };\n\n  // VOLUME\n  const onAddVolume = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currVolume = { name: data.name, type: data.type };\n    if (currVolume.type === 'secret') {\n      currVolume['secret'] = data['secret'];\n      delete currVolume['configMap'];\n    } else if (currVolume.type === 'configMap') {\n      currVolume['configMap'] = data['config_map'];\n      delete currVolume['secret'];\n    }\n    setVolume(() => {\n      return [...volume, currVolume];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveVolume = e => {\n    let currVolume = volume.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setVolume([...currVolume]);\n  };\n  const onModifyVolume = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let list = document.getElementById('volume-list').childNodes;\n    list.forEach(cur => {\n      if (cur['dataset']['modify'] === 'true') {\n        cur['dataset']['modify'] = false;\n      }\n    });\n\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currVolume = volume.map((cur, idx) => {\n      if (idx === index) {\n        let volume = { name: data.name, type: data.type };\n        if (volume.type === 'secret') {\n          volume['secret'] = data.secret;\n          delete volume['configMap'];\n        } else if (volume.type === 'configMap') {\n          volume['configMap'] = data['config_map'];\n          delete volume['secret'];\n        }\n        return volume;\n      }\n      return cur;\n    });\n    setVolume([...currVolume]);\n    cancel();\n  };\n\n  // STEP\n  const onAddStep = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currStep = { name: data.name, manualImage: data.manualImage, manualCommand: data.manualCommand };\n    setStep(() => {\n      return [...step, currStep];\n    }); // state 최신화\n    cancel();\n    return false;\n  };\n  const onRemoveStep = e => {\n    let currStep = step.filter((cur, idx) => {\n      let targetIndex = Number(e.target.id.split('item-remove')[1]);\n      return targetIndex !== idx;\n    });\n    setStep([...currStep]);\n  };\n  const onModifyStep = (cancel, index, e: React.SyntheticEvent) => {\n    e.preventDefault();\n    let data = methods.getValues(); // modal에서 입력받은 data\n    let currStep = step.map((cur, idx) => {\n      if (idx === index) {\n        return { name: data.name, path: data.path, type: data.type, option: data.option };\n      }\n      return cur;\n    });\n    setStep([...currStep]);\n    cancel();\n  };\n\n  return (\n    <>\n      <Section label=\"Labels\" id=\"label\" description=\"이것은 Label입니다.\">\n        <Controller name=\"metadata.labels\" id=\"label\" labelClassName=\"co-text-sample\" as={SelectorInput} control={control} tags={[]} />\n      </Section>\n      <Section label=\"Input Resource\" id=\"inputResource\">\n        <>\n          <ModalList list={inputResource} id=\"input-resource\" title=\"Input Resource\" children={<InputResourceModal methods={methods} inputResource={inputResource} />} onRemove={onRemoveInputResource} onModify={onModifyInputResource} methods={methods} description=\"이 태스크와 연결된 인풋 리소스가 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: 'Input Resource', id: 'input-resource', handleMethod: onAddInputResource, children: <InputResourceModal methods={methods} inputResource={inputResource} />, submitText: '추가' })}>\n            + 인풋 리소스 추가\n          </span>\n        </>\n      </Section>\n      <Section label=\"Output Resource\" id=\"outputResource\">\n        <>\n          <ModalList list={outputResource} id=\"output-resource\" title=\"Output Resource\" children={<OutputResourceModal methods={methods} outputResource={outputResource} />} onRemove={onRemoveOutputResource} onModify={onModifyOutputResource} methods={methods} description=\"이 태스크와 연결된 아웃풋 리소스가 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: 'Out Resource', id: 'output-resource', handleMethod: onAddOutputResource, children: <OutputResourceModal methods={methods} outputResource={outputResource} />, submitText: '추가' })}>\n            + 아웃풋 리소스 추가\n          </span>\n        </>\n      </Section>\n      <Section label=\"태스크 파라미터 구성\" id=\"taskParamter\">\n        <>\n          <ModalList list={taskParameter} id=\"task-parameter\" title=\"태스크 파라미터 구성\" children={<TaskParameterModal methods={methods} taskParameter={taskParameter} />} onRemove={onRemoveTaskParameter} onModify={onModifyTaskParameter} methods={methods} description=\"이 태스크와 연결된 태스크 파라미터 구성이 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: '태스크 파라미터', id: 'task-parameter', handleMethod: onAddTaskParameter, children: <TaskParameterModal methods={methods} taskParameter={taskParameter} />, submitText: '추가' })}>\n            + 태스크 파라미터 추가\n          </span>\n        </>\n      </Section>\n      <Section label=\"워크스페이스 구성\" id=\"workSpace\">\n        <>\n          <ModalList list={workSpace} id=\"work-space\" title=\"워크스페이스 구성\" children={<WorkSpaceModal methods={methods} workSpace={workSpace} />} onRemove={onRemoveWorkSpace} onModify={onModifyWorkSpace} methods={methods} description=\"이 태스크와 연결된 워크스페이스 구성이 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: '워크스페이스', id: 'work-space', handleMethod: onAddWorkSpace, children: <WorkSpaceModal methods={methods} workSpace={workSpace} />, submitText: '추가' })}>\n            + 워크스페이스 추가\n          </span>\n        </>\n      </Section>\n      <Section label=\"볼륨\" id=\"volume\">\n        <>\n          <ModalList list={volume} id=\"volume\" title=\"볼륨 구성\" children={<VolumeModal methods={methods} volume={volume} />} onRemove={onRemoveVolume} onModify={onModifyVolume} methods={methods} description=\"이 태스크와 연결된 볼륨이 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: '볼륨', id: 'volume', handleMethod: onAddVolume, children: <VolumeModal methods={methods} volume={volume} />, submitText: '추가' })}>\n            + 볼륨 추가\n          </span>\n        </>\n      </Section>\n      <Section label=\"스텝\" id=\"step\">\n        <>\n          <ModalList list={step} id=\"step\" title=\"스텝 구성\" children={<StepModal methods={methods} step={step} />} onRemove={onRemoveStep} onModify={onModifyStep} methods={methods} description=\"이 태스크와 연결된 스텝이 없습니다.\"></ModalList>\n          <span className=\"open-modal_text\" onClick={() => ModalLauncher({ inProgress: false, title: '스텝', id: 'step', handleMethod: onAddStep, children: <StepModal methods={methods} step={step} />, submitText: '추가' })}>\n            + 스텝 추가\n          </span>\n        </>\n      </Section>\n      {/* <button type=\"button\" onClick={() => console.log(methods.getValues())}>\n        {' '}\n        data 보기\n      </button>\n      {JSON.stringify(methods.formState.dirtyFields)} */}\n    </>\n  );\n};\n\nexport const CreateTask: React.FC<CreateTaskProps> = props => {\n  const formComponent = taskFormFactory(props.match.params);\n  const TaskFormComponent = formComponent;\n  return <TaskFormComponent fixed={{}} explanation={''} titleVerb=\"Create\" onSubmitCallback={onSubmitCallback} isCreate={true} />;\n};\n\nexport const onSubmitCallback = data => {\n  let labels = SelectorInput.objectify(data.metadata.labels);\n  delete data.metadata.labels;\n  data = _.defaultsDeep(data, { metadata: { labels: labels } });\n  return data;\n};\n\ntype CreateTaskProps = {\n  match: RMatch<{\n    type?: string;\n  }>;\n  fixed: object;\n  explanation: string;\n  titleVerb: string;\n  saveButtonText?: string;\n  isCreate: boolean;\n};\n\ntype TaskFormProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n  isCreate: boolean;\n};\n"]}]}