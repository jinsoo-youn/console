{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/pipeline-actions.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/pipeline-actions.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { history, resourcePathFromModel, Kebab, } from '@console/internal/components/utils';\nimport { k8sCreate, k8sPatch, referenceForModel } from '@console/internal/module/k8s';\nimport { errorModal } from '@console/internal/components/modals';\n// import {\n//   addTriggerModal,\n//   startPipelineModal,\n//   removeTriggerModal,\n// } from '../pipelines/modals';\nimport { startPipelineModal } from '../../../../packages/dev-console/src/components/pipelines/modals';\nimport { getPipelineRunData } from '../pipelines/modals/utils';\n//import { StartedByLabel } from '../pipelines/const';\nimport { EventListenerModel, PipelineModel, PipelineRunModel } from '../../../models';\nimport { pipelineRunFilterReducer } from './pipeline-filter-reducer';\nexport const handlePipelineRunSubmit = (pipelineRun) => {\n    history.push(resourcePathFromModel(PipelineRunModel, pipelineRun.metadata.name, pipelineRun.metadata.namespace));\n};\nexport const triggerPipeline = (pipeline, onSubmit) => {\n    k8sCreate(PipelineRunModel, getPipelineRunData(pipeline))\n        .then(onSubmit)\n        .catch((err) => errorModal({ error: err.message }));\n};\nexport const reRunPipelineRun = (kind, pipelineRun) => ({\n    label: 'Rerun',\n    callback: () => {\n        const namespace = _.get(pipelineRun, 'metadata.namespace');\n        const pipelineRef = _.get(pipelineRun, 'spec.pipelineRef.name');\n        if (namespace && pipelineRef) {\n            k8sCreate(PipelineRunModel, getPipelineRunData(null, pipelineRun));\n        }\n        else {\n            errorModal({ error: 'Invalid Pipeline Run configuration, unable to start Pipeline.' });\n        }\n    },\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: pipelineRun.metadata.name,\n        namespace: pipelineRun.metadata.namespace,\n        verb: 'create',\n    },\n});\nexport const editPipeline = (kind, pipeline) => ({\n    label: 'Edit Pipeline',\n    callback: () => {\n        const { metadata: { name, namespace }, } = pipeline;\n        history.push(`/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/${name}/builder`);\n    },\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: pipeline.metadata.name,\n        namespace: pipeline.metadata.namespace,\n        verb: 'update',\n    },\n});\nexport const startPipeline = (kind, pipeline, onSubmit) => ({\n    label: 'Start',\n    callback: () => {\n        const params = _.get(pipeline, ['spec', 'params'], []);\n        const resources = _.get(pipeline, ['spec', 'resources'], []);\n        const workspaces = _.get(pipeline, ['spec', 'workspaces'], []);\n        if (!_.isEmpty(params) || !_.isEmpty(resources) || !_.isEmpty(workspaces)) {\n            startPipelineModal({\n                pipeline,\n                modalClassName: 'modal-lg',\n                onSubmit,\n            });\n        }\n        else {\n            triggerPipeline(pipeline, onSubmit);\n        }\n    },\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: pipeline.metadata.name,\n        namespace: pipeline.metadata.namespace,\n        verb: 'create',\n    },\n});\nconst rerunPipeline = (kind, pipelineRun, resources, customData = { label: 'Start Last Run' }) => {\n    const { onComplete } = customData;\n    const sharedProps = { label: customData.label, accessReview: {} };\n    if (!pipelineRun ||\n        !_.has(pipelineRun, 'metadata.name') ||\n        !_.has(pipelineRun, 'metadata.namespace')) {\n        return sharedProps;\n    }\n    return Object.assign(Object.assign({}, sharedProps), { callback: () => {\n            k8sCreate(PipelineRunModel, getPipelineRunData(null, pipelineRun))\n                .then(typeof onComplete === 'function' ? onComplete : () => { })\n                .catch((err) => errorModal({ error: err.message }));\n        }, accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: pipelineRun.metadata.name,\n            namespace: pipelineRun.metadata.namespace,\n            verb: 'create',\n        } });\n};\nexport const rerunPipelineAndStay = (kind, pipelineRun) => {\n    return rerunPipeline(kind, pipelineRun);\n};\nexport const rerunPipelineAndRedirect = (kind, pipelineRun) => {\n    return rerunPipeline(kind, pipelineRun, null, {\n        onComplete: handlePipelineRunSubmit,\n        label: 'Start Last Run',\n    });\n};\nexport const rerunPipelineRunAndRedirect = (kind, pipelineRun) => {\n    return rerunPipeline(kind, pipelineRun, null, {\n        onComplete: handlePipelineRunSubmit,\n        label: 'Rerun',\n    });\n};\nexport const stopPipelineRun = (kind, pipelineRun) => {\n    // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n    return {\n        label: 'Stop',\n        callback: () => {\n            k8sPatch(PipelineRunModel, {\n                metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n            }, [\n                {\n                    op: 'replace',\n                    path: `/spec/status`,\n                    value: 'PipelineRunCancelled',\n                },\n            ]);\n        },\n        hidden: !(pipelineRun && pipelineRunFilterReducer(pipelineRun) === 'Running'),\n        accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: pipelineRun.metadata.name,\n            namespace: pipelineRun.metadata.namespace,\n            verb: 'update',\n        },\n    };\n};\n// const addTrigger: KebabAction = (kind: K8sKind, pipeline: Pipeline) => ({\n//   label: 'Add Trigger',\n//   callback: () => {\n//     const cleanPipeline: Pipeline = {\n//       ...pipeline,\n//       metadata: {\n//         ...pipeline.metadata,\n//         labels: _.omit(pipeline.metadata.labels, [StartedByLabel.user]),\n//       },\n//     };\n//     addTriggerModal({ pipeline: cleanPipeline, modalClassName: 'modal-lg' });\n//   },\n//   accessReview: {\n//     group: kind.apiGroup,\n//     resource: kind.plural,\n//     name: pipeline.metadata.name,\n//     namespace: pipeline.metadata.namespace,\n//     verb: 'create',\n//   },\n// });\nconst removeTrigger = (kind, pipeline) => ({\n    label: 'Remove Trigger',\n    callback: () => {\n        //removeTriggerModal({ pipeline });\n    },\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: pipeline.metadata.name,\n        namespace: pipeline.metadata.namespace,\n        verb: 'delete',\n    },\n});\nexport const getPipelineKebabActions = (pipelineRun, isTriggerPresent) => [\n    (model, resource) => startPipeline(model, resource, handlePipelineRunSubmit),\n    ...(pipelineRun ? [() => rerunPipelineAndRedirect(PipelineRunModel, pipelineRun)] : []),\n    //(model, pipeline) => addTrigger(EventListenerModel, pipeline),\n    ...(isTriggerPresent ? [(model, pipeline) => removeTrigger(EventListenerModel, pipeline)] : []),\n    editPipeline,\n    Kebab.factory.Delete,\n];\nexport const getPipelineRunKebabActions = (redirectReRun) => [\n    redirectReRun ? rerunPipelineRunAndRedirect : reRunPipelineRun,\n    stopPipelineRun,\n    Kebab.factory.Delete,\n];\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/pipeline-actions.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/pipeline-actions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport {\n  history,\n  resourcePathFromModel,\n  Kebab,\n  KebabAction,\n} from '@console/internal/components/utils';\nimport { k8sCreate, K8sKind, k8sPatch, referenceForModel } from '@console/internal/module/k8s';\nimport { errorModal } from '@console/internal/components/modals';\n// import {\n//   addTriggerModal,\n//   startPipelineModal,\n//   removeTriggerModal,\n// } from '../pipelines/modals';\nimport { startPipelineModal } from '../../../../packages/dev-console/src/components/pipelines/modals';\nimport { getPipelineRunData } from '../pipelines/modals/utils';\n//import { StartedByLabel } from '../pipelines/const';\nimport { EventListenerModel, PipelineModel, PipelineRunModel } from '../../../models';\nimport { Pipeline, PipelineRun } from './pipeline-augment';\nimport { pipelineRunFilterReducer } from './pipeline-filter-reducer';\n\nexport const handlePipelineRunSubmit = (pipelineRun: PipelineRun) => {\n  history.push(\n    resourcePathFromModel(\n      PipelineRunModel,\n      pipelineRun.metadata.name,\n      pipelineRun.metadata.namespace,\n    ),\n  );\n};\n\nexport const triggerPipeline = (\n  pipeline: Pipeline,\n  onSubmit?: (pipelineRun: PipelineRun) => void,\n) => {\n  k8sCreate(PipelineRunModel, getPipelineRunData(pipeline))\n    .then(onSubmit)\n    .catch((err) => errorModal({ error: err.message }));\n};\n\nexport const reRunPipelineRun: KebabAction = (kind: K8sKind, pipelineRun: PipelineRun) => ({\n  label: 'Rerun',\n  callback: () => {\n    const namespace = _.get(pipelineRun, 'metadata.namespace');\n    const pipelineRef = _.get(pipelineRun, 'spec.pipelineRef.name');\n    if (namespace && pipelineRef) {\n      k8sCreate(PipelineRunModel, getPipelineRunData(null, pipelineRun));\n    } else {\n      errorModal({ error: 'Invalid Pipeline Run configuration, unable to start Pipeline.' });\n    }\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipelineRun.metadata.name,\n    namespace: pipelineRun.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const editPipeline: KebabAction = (kind: K8sKind, pipeline: Pipeline) => ({\n  label: 'Edit Pipeline',\n  callback: () => {\n    const {\n      metadata: { name, namespace },\n    } = pipeline;\n    history.push(`/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/${name}/builder`);\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const startPipeline: KebabAction = (\n  kind: K8sKind,\n  pipeline: Pipeline,\n  onSubmit?: (pipelineRun: PipelineRun) => void,\n) => ({\n  label: 'Start',\n  callback: () => {\n    const params = _.get(pipeline, ['spec', 'params'], []);\n    const resources = _.get(pipeline, ['spec', 'resources'], []);\n    const workspaces = _.get(pipeline, ['spec', 'workspaces'], []);\n\n    if (!_.isEmpty(params) || !_.isEmpty(resources) || !_.isEmpty(workspaces)) {\n      startPipelineModal({\n        pipeline,\n        modalClassName: 'modal-lg',\n        onSubmit,\n      });\n    } else {\n      triggerPipeline(pipeline, onSubmit);\n    }\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\ntype RerunPipelineData = {\n  onComplete?: (pipelineRun: PipelineRun) => void;\n  label?: string;\n};\nconst rerunPipeline: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRun,\n  resources: any,\n  customData: RerunPipelineData = { label: 'Start Last Run' },\n) => {\n  const { onComplete } = customData;\n\n  const sharedProps = { label: customData.label, accessReview: {} };\n\n  if (\n    !pipelineRun ||\n    !_.has(pipelineRun, 'metadata.name') ||\n    !_.has(pipelineRun, 'metadata.namespace')\n  ) {\n    return sharedProps;\n  }\n\n  return {\n    ...sharedProps,\n    callback: () => {\n      k8sCreate(PipelineRunModel, getPipelineRunData(null, pipelineRun))\n        .then(typeof onComplete === 'function' ? onComplete : () => {})\n        .catch((err) => errorModal({ error: err.message }));\n    },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'create',\n    },\n  };\n};\n\nexport const rerunPipelineAndStay: KebabAction = (kind: K8sKind, pipelineRun: PipelineRun) => {\n  return rerunPipeline(kind, pipelineRun);\n};\n\nexport const rerunPipelineAndRedirect: KebabAction = (kind: K8sKind, pipelineRun: PipelineRun) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    label: 'Start Last Run',\n  });\n};\n\nexport const rerunPipelineRunAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRun,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    label: 'Rerun',\n  });\n};\n\nexport const stopPipelineRun: KebabAction = (kind: K8sKind, pipelineRun: PipelineRun) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    label: 'Stop',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'PipelineRunCancelled',\n          },\n        ],\n      );\n    },\n    hidden: !(pipelineRun && pipelineRunFilterReducer(pipelineRun) === 'Running'),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n// const addTrigger: KebabAction = (kind: K8sKind, pipeline: Pipeline) => ({\n//   label: 'Add Trigger',\n//   callback: () => {\n//     const cleanPipeline: Pipeline = {\n//       ...pipeline,\n//       metadata: {\n//         ...pipeline.metadata,\n//         labels: _.omit(pipeline.metadata.labels, [StartedByLabel.user]),\n//       },\n//     };\n//     addTriggerModal({ pipeline: cleanPipeline, modalClassName: 'modal-lg' });\n//   },\n//   accessReview: {\n//     group: kind.apiGroup,\n//     resource: kind.plural,\n//     name: pipeline.metadata.name,\n//     namespace: pipeline.metadata.namespace,\n//     verb: 'create',\n//   },\n// });\n\nconst removeTrigger: KebabAction = (kind: K8sKind, pipeline: Pipeline) => ({\n  label: 'Remove Trigger',\n  callback: () => {\n    //removeTriggerModal({ pipeline });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'delete',\n  },\n});\nexport const getPipelineKebabActions = (\n  pipelineRun?: PipelineRun,\n  isTriggerPresent?: boolean,\n): KebabAction[] => [\n  (model, resource: Pipeline) => startPipeline(model, resource, handlePipelineRunSubmit),\n  ...(pipelineRun ? [() => rerunPipelineAndRedirect(PipelineRunModel, pipelineRun)] : []),\n  //(model, pipeline) => addTrigger(EventListenerModel, pipeline),\n  ...(isTriggerPresent ? [(model, pipeline) => removeTrigger(EventListenerModel, pipeline)] : []),\n  editPipeline,\n  Kebab.factory.Delete,\n];\n\nexport const getPipelineRunKebabActions = (redirectReRun?: boolean): KebabAction[] => [\n  redirectReRun ? rerunPipelineRunAndRedirect : reRunPipelineRun,\n  stopPipelineRun,\n  Kebab.factory.Delete,\n];\n"]}]}