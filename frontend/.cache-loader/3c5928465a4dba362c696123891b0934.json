{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/resource-overview-details.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/resource-overview-details.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as UIActions from '../../actions/ui';\nimport { AsyncComponent, ResourceOverviewHeading, SimpleTabNav } from '../utils';\nimport * as plugins from '../../plugins';\nconst stateToProps = ({ UI }) => ({\n    selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\nconst dispatchToProps = (dispatch) => ({\n    onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\nconst getResourceTabComp = (t) => (props) => (React.createElement(AsyncComponent, Object.assign({}, props, { loader: t.properties.loader })));\nconst getPluginTabResources = (item, tabs) => {\n    let tabEntry = plugins.registry\n        .getOverviewResourceTabs()\n        .filter((tab) => item[tab.properties.key]);\n    const overridenTabs = tabs.map((tab) => {\n        const tabEntryConfig = tabEntry.find((t) => tab.name === t.properties.name);\n        if (tabEntryConfig) {\n            tabEntry = tabEntry.filter((entry) => tab.name !== entry.properties.name);\n            return {\n                name: tab.name,\n                component: getResourceTabComp(tabEntryConfig),\n            };\n        }\n        return tab;\n    });\n    /** Add new tabs from plugin */\n    const newTabs = tabEntry.map((entry) => {\n        return {\n            name: entry.properties.name,\n            component: getResourceTabComp(entry),\n        };\n    });\n    return overridenTabs.concat(newTabs);\n};\nexport const ResourceOverviewDetails = connect(stateToProps, dispatchToProps)(({ kindObj, item, menuActions, onClickTab, selectedDetailsTab, tabs, }) => {\n    const keys = Object.keys(item);\n    const keysRef = React.useRef(keys);\n    const tabsRef = React.useRef(tabs);\n    const pluginTabsRef = React.useRef();\n    if (!pluginTabsRef.current ||\n        !_.isEqual(keys, keysRef.current) ||\n        !_.isEqual(tabs, tabsRef.current)) {\n        keysRef.current = keys;\n        tabsRef.current = tabs;\n        pluginTabsRef.current = getPluginTabResources(item, tabs);\n    }\n    return (React.createElement(\"div\", { className: \"overview__sidebar-pane resource-overview\" },\n        React.createElement(ResourceOverviewHeading, { actions: menuActions, kindObj: kindObj, resource: item.obj }),\n        React.createElement(SimpleTabNav, { onClickTab: onClickTab, selectedTab: selectedDetailsTab, tabProps: { item }, tabs: pluginTabsRef.current, additionalClassNames: \"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\" })));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/resource-overview-details.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/resource-overview-details.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport * as UIActions from '../../actions/ui';\nimport { K8sKind } from '../../module/k8s';\nimport { AsyncComponent, KebabAction, ResourceOverviewHeading, SimpleTabNav } from '../utils';\nimport * as plugins from '../../plugins';\nimport { OverviewItem } from '@console/shared';\n\nconst stateToProps = ({ UI }): PropsFromState => ({\n  selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\n\nconst dispatchToProps = (dispatch): PropsFromDispatch => ({\n  onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\n\nconst getResourceTabComp = (t) => (props) => (\n  <AsyncComponent {...props} loader={t.properties.loader} />\n);\n\nconst getPluginTabResources = (item, tabs): ResourceOverviewDetailsProps['tabs'] => {\n  let tabEntry = plugins.registry\n    .getOverviewResourceTabs()\n    .filter((tab) => item[tab.properties.key]);\n  const overridenTabs = tabs.map((tab) => {\n    const tabEntryConfig = tabEntry.find((t) => tab.name === t.properties.name);\n    if (tabEntryConfig) {\n      tabEntry = tabEntry.filter((entry) => tab.name !== entry.properties.name);\n      return {\n        name: tab.name,\n        component: getResourceTabComp(tabEntryConfig),\n      };\n    }\n    return tab;\n  });\n\n  /** Add new tabs from plugin */\n  const newTabs = tabEntry.map((entry) => {\n    return {\n      name: entry.properties.name,\n      component: getResourceTabComp(entry),\n    };\n  });\n\n  return overridenTabs.concat(newTabs);\n};\n\nexport const ResourceOverviewDetails = connect<PropsFromState, PropsFromDispatch, OwnProps>(\n  stateToProps,\n  dispatchToProps,\n)(\n  ({\n    kindObj,\n    item,\n    menuActions,\n    onClickTab,\n    selectedDetailsTab,\n    tabs,\n  }: ResourceOverviewDetailsProps) => {\n    const keys = Object.keys(item);\n    const keysRef = React.useRef(keys);\n    const tabsRef = React.useRef(tabs);\n    const pluginTabsRef = React.useRef<React.ComponentProps<typeof SimpleTabNav>['tabs']>();\n    if (\n      !pluginTabsRef.current ||\n      !_.isEqual(keys, keysRef.current) ||\n      !_.isEqual(tabs, tabsRef.current)\n    ) {\n      keysRef.current = keys;\n      tabsRef.current = tabs;\n      pluginTabsRef.current = getPluginTabResources(item, tabs);\n    }\n    return (\n      <div className=\"overview__sidebar-pane resource-overview\">\n        <ResourceOverviewHeading actions={menuActions} kindObj={kindObj} resource={item.obj} />\n        <SimpleTabNav\n          onClickTab={onClickTab}\n          selectedTab={selectedDetailsTab}\n          tabProps={{ item }}\n          tabs={pluginTabsRef.current}\n          additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\"\n        />\n      </div>\n    );\n  },\n);\n\ntype PropsFromState = {\n  selectedDetailsTab: any;\n};\n\ntype PropsFromDispatch = {\n  onClickTab: (name: string) => void;\n};\n\ntype OwnProps = {\n  item: OverviewItem;\n  kindObj: K8sKind;\n  menuActions: KebabAction[];\n  tabs: {\n    name: string;\n    component: any;\n  }[];\n  isOperatorBacked?: boolean;\n};\n\nexport type ResourceOverviewDetailsProps = PropsFromState & PropsFromDispatch & OwnProps;\n"]}]}