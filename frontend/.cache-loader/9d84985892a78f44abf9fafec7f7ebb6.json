{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-table.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-table.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Table } from '@console/internal/components/factory';\nimport { dimensifyHeader } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nexport const AffinityTable = ({ data, customData, row: Row, columnClasses, }) => {\n    return (React.createElement(Table, { \"aria-label\": \"Affinity List\", data: data, Header: () => dimensifyHeader([\n            {\n                title: 'Type',\n                sortField: 'type',\n                transforms: [sortable],\n            },\n            {\n                title: 'Condition',\n                sortField: 'condition',\n                transforms: [sortable],\n            },\n            {\n                title: 'Weight',\n                sortField: 'weight',\n                transforms: [sortable],\n            },\n            {\n                title: 'Terms',\n            },\n            {\n                title: '',\n            },\n        ], columnClasses), Row: Row, customData: Object.assign(Object.assign({}, customData), { columnClasses }), virtualize: true, loaded: true }));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-table.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-table/affinity-table.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAe,MAAM,sCAAsC,CAAC;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAUnD,MAAM,CAAC,MAAM,aAAa,GAAiC,CAAC,EAC1D,IAAI,EACJ,UAAU,EACV,GAAG,EAAE,GAAG,EACR,aAAa,GACd,EAAE,EAAE;IACH,OAAO,CACL,oBAAC,KAAK,kBACO,eAAe,EAC1B,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,GAAG,EAAE,CACX,eAAe,CACb;YACE;gBACE,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,CAAC,QAAQ,CAAC;aACvB;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,CAAC,QAAQ,CAAC;aACvB;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,CAAC,QAAQ,CAAC;aACvB;YACD;gBACE,KAAK,EAAE,OAAO;aACf;YACD;gBACE,KAAK,EAAE,EAAE;aACV;SACF,EACD,aAAa,CACd,EAEH,GAAG,EAAE,GAAG,EACR,UAAU,kCAAO,UAAU,KAAE,aAAa,KAC1C,UAAU,QACV,MAAM,SACN,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Table, RowFunction } from '@console/internal/components/factory';\nimport { dimensifyHeader } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { AffinityRowData } from '../../types';\n\nexport type AffinityTableProps = {\n  data?: AffinityRowData[];\n  customData?: object;\n  row: RowFunction;\n  columnClasses?: string[];\n};\n\nexport const AffinityTable: React.FC<AffinityTableProps> = ({\n  data,\n  customData,\n  row: Row,\n  columnClasses,\n}) => {\n  return (\n    <Table\n      aria-label=\"Affinity List\"\n      data={data}\n      Header={() =>\n        dimensifyHeader(\n          [\n            {\n              title: 'Type',\n              sortField: 'type',\n              transforms: [sortable],\n            },\n            {\n              title: 'Condition',\n              sortField: 'condition',\n              transforms: [sortable],\n            },\n            {\n              title: 'Weight',\n              sortField: 'weight',\n              transforms: [sortable],\n            },\n            {\n              title: 'Terms',\n            },\n            {\n              title: '',\n            },\n          ],\n          columnClasses,\n        )\n      }\n      Row={Row}\n      customData={{ ...customData, columnClasses }}\n      virtualize\n      loaded\n    />\n  );\n};\n"]}]}