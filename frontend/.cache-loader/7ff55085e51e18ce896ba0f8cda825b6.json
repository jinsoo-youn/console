{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/git/SourceSecretSelector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/git/SourceSecretSelector.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useFormikContext, useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { getFieldId } from '@console/shared';\nimport SourceSecretDropdown from '../../dropdown/SourceSecretDropdown';\nimport { secretModalLauncher } from '../CreateSecretModal';\nconst CREATE_SOURCE_SECRET = 'create-source-secret';\nconst SourceSecretSelector = () => {\n    const [secret] = useField('git.secret');\n    const { values, setFieldValue } = useFormikContext();\n    const handleSave = (name) => {\n        setFieldValue('git.secret', name);\n    };\n    const handleDropdownChange = (key) => {\n        if (key === CREATE_SOURCE_SECRET) {\n            setFieldValue('git.secret', secret.value);\n            secretModalLauncher({\n                namespace: values.project.name,\n                save: handleSave,\n                secretType: SecretTypeAbstraction.source,\n            });\n        }\n        else {\n            setFieldValue('git.secret', key);\n        }\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FormGroup, { fieldId: getFieldId('source-secret', 'dropdown'), label: \"Source Secret\", helperText: \"Secret with credentials for pulling your source code.\" },\n            React.createElement(SourceSecretDropdown, { dropDownClassName: \"dropdown--full-width\", menuClassName: \"dropdown-menu--text-wrap\", namespace: values.project.name, actionItems: [\n                    {\n                        actionTitle: 'Create New Secret',\n                        actionKey: CREATE_SOURCE_SECRET,\n                    },\n                ], selectedKey: secret.value, title: secret.value, onChange: handleDropdownChange }))));\n};\nexport default SourceSecretSelector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/git/SourceSecretSelector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/git/SourceSecretSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAgB,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,qBAAqB,EAAE,MAAM,oDAAoD,CAAC;AAC3F,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,oBAAoB,MAAM,qCAAqC,CAAC;AACvE,OAAO,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAC;AAE3D,MAAM,oBAAoB,GAAG,sBAAsB,CAAC;AAEpD,MAAM,oBAAoB,GAAa,GAAG,EAAE;IAC1C,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IACxC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IAEnE,MAAM,UAAU,GAAG,CAAC,IAAY,EAAE,EAAE;QAClC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,MAAM,oBAAoB,GAAG,CAAC,GAAW,EAAE,EAAE;QAC3C,IAAI,GAAG,KAAK,oBAAoB,EAAE;YAChC,aAAa,CAAC,YAAY,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1C,mBAAmB,CAAC;gBAClB,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI;gBAC9B,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,qBAAqB,CAAC,MAAM;aACzC,CAAC,CAAC;SACJ;aAAM;YACL,aAAa,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;SAClC;IACH,CAAC,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,SAAS,IACR,OAAO,EAAE,UAAU,CAAC,eAAe,EAAE,UAAU,CAAC,EAChD,KAAK,EAAC,eAAe,EACrB,UAAU,EAAC,uDAAuD;YAElE,oBAAC,oBAAoB,IACnB,iBAAiB,EAAC,sBAAsB,EACxC,aAAa,EAAC,0BAA0B,EACxC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAC9B,WAAW,EAAE;oBACX;wBACE,WAAW,EAAE,mBAAmB;wBAChC,SAAS,EAAE,oBAAoB;qBAChC;iBACF,EACD,WAAW,EAAE,MAAM,CAAC,KAAK,EACzB,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,QAAQ,EAAE,oBAAoB,GAC9B,CACQ,CACX,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["import * as React from 'react';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { getFieldId } from '@console/shared';\nimport SourceSecretDropdown from '../../dropdown/SourceSecretDropdown';\nimport { secretModalLauncher } from '../CreateSecretModal';\n\nconst CREATE_SOURCE_SECRET = 'create-source-secret';\n\nconst SourceSecretSelector: React.FC = () => {\n  const [secret] = useField('git.secret');\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n\n  const handleSave = (name: string) => {\n    setFieldValue('git.secret', name);\n  };\n\n  const handleDropdownChange = (key: string) => {\n    if (key === CREATE_SOURCE_SECRET) {\n      setFieldValue('git.secret', secret.value);\n      secretModalLauncher({\n        namespace: values.project.name,\n        save: handleSave,\n        secretType: SecretTypeAbstraction.source,\n      });\n    } else {\n      setFieldValue('git.secret', key);\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        fieldId={getFieldId('source-secret', 'dropdown')}\n        label=\"Source Secret\"\n        helperText=\"Secret with credentials for pulling your source code.\"\n      >\n        <SourceSecretDropdown\n          dropDownClassName=\"dropdown--full-width\"\n          menuClassName=\"dropdown-menu--text-wrap\"\n          namespace={values.project.name}\n          actionItems={[\n            {\n              actionTitle: 'Create New Secret',\n              actionKey: CREATE_SOURCE_SECRET,\n            },\n          ]}\n          selectedKey={secret.value}\n          title={secret.value}\n          onChange={handleDropdownChange}\n        />\n      </FormGroup>\n    </>\n  );\n};\n\nexport default SourceSecretSelector;\n"]}]}