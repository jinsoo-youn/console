{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Status, PodRingController } from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { DeploymentModel } from '../models';\nimport { useTranslation } from 'react-i18next';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, ContainerTable, navFactory, pluralize, ResourceSummary, SectionHeading, togglePaused, WorkloadPausedAlert, LoadingInline } from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nconst deploymentsReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\nconst UpdateStrategy = (kind, deployment) => {\n    const { t } = useTranslation();\n    return {\n        label: t('COMMON:MSG_MAIN_ACTIONBUTTON_8'),\n        callback: () => configureUpdateStrategyModal({ deployment }),\n        accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: deployment.metadata.name,\n            namespace: deployment.metadata.namespace,\n            verb: 'patch',\n        },\n    };\n};\nconst PauseAction = (kind, obj) => {\n    const { t } = useTranslation();\n    return {\n        label: obj.spec.paused ? t('COMMON:MSG_MAIN_ACTIONBUTTON_37') : t('COMMON:MSG_MAIN_ACTIONBUTTON_12'),\n        callback: () => togglePaused(kind, obj).catch(err => errorModal({ error: err.message })),\n        accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: obj.metadata.name,\n            namespace: obj.metadata.namespace,\n            verb: 'patch',\n        },\n    };\n};\nexport const menuActions = [ModifyCount, PauseAction, AddHealthChecks, AddStorage, UpdateStrategy, ...Kebab.getExtensionsActionsForKind(DeploymentModel), EditHealthChecks, ...common];\nexport const DeploymentDetailsList = ({ deployment }) => {\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_25'), obj: deployment, path: \"spec.strategy.type\" }),\n        deployment.spec.strategy.type === 'RollingUpdate' && (React.createElement(React.Fragment, null,\n            React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_26'), obj: deployment, path: \"spec.strategy.rollingUpdate.maxUnavailable\" },\n                deployment.spec.strategy.rollingUpdate.maxUnavailable || 1,\n                \" of \",\n                pluralize(deployment.spec.replicas, 'pod')),\n            React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_27'), obj: deployment, path: \"spec.strategy.rollingUpdate.maxSurge\" },\n                deployment.spec.strategy.rollingUpdate.maxSurge || 1,\n                \" greater than \",\n                pluralize(deployment.spec.replicas, 'pod')))),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_28'), obj: deployment, path: \"spec.progressDeadlineSeconds\" }, deployment.spec.progressDeadlineSeconds ? pluralize(deployment.spec.progressDeadlineSeconds, 'second') : 'Not Configured'),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_29'), obj: deployment, path: \"spec.minReadySeconds\" }, deployment.spec.minReadySeconds ? pluralize(deployment.spec.minReadySeconds, 'second') : 'Not Configured')));\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\nconst DeploymentDetails = ({ obj: deployment }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(deployment, t) }) }),\n            deployment.spec.paused && React.createElement(WorkloadPausedAlert, { obj: deployment, model: DeploymentModel }),\n            React.createElement(PodRingController, { namespace: deployment.metadata.namespace, kind: deployment.kind, render: d => {\n                    return d.loaded ? React.createElement(PodRingSet, { key: deployment.metadata.uid, podData: d.data[deployment.metadata.uid], obj: deployment, resourceKind: DeploymentModel, path: \"/spec/replicas\" }) : React.createElement(LoadingInline, null);\n                } }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { resource: deployment, showPodSelector: true, showNodeSelector: true, showTolerations: true },\n                            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')),\n                            React.createElement(\"dd\", null, deployment.status.availableReplicas === deployment.status.updatedReplicas && deployment.spec.replicas === deployment.status.availableReplicas ? React.createElement(Status, { status: \"Up to date\" }) : React.createElement(Status, { status: \"Updating\" })))),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(DeploymentDetailsList, { deployment: deployment }))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }),\n            React.createElement(ContainerTable, { containers: deployment.spec.template.spec.containers })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(VolumesTable, { resource: deployment, heading: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1') })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1') }),\n            React.createElement(Conditions, { conditions: deployment.status.conditions }))));\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\nconst EnvironmentPage = props => React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then(c => c.EnvironmentPage) }, props));\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = props => React.createElement(EnvironmentPage, { obj: props.obj, rawEnvData: props.obj.spec.template.spec, envPath: envPath, readOnly: false });\nconst ReplicaSetsTab = ({ obj }) => {\n    const { metadata: { namespace }, spec: { selector }, } = obj;\n    // Hide the create button to avoid confusion when showing replica sets for an object.\n    return React.createElement(ReplicaSetsPage, { showTitle: false, namespace: namespace, selector: selector, canCreate: false });\n};\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nexport const DeploymentsDetailsPage = props => {\n    const { t } = useTranslation();\n    return (React.createElement(DetailsPage, Object.assign({}, props, { kind: deploymentsReference, menuActions: menuActions, pages: [\n            details(DeploymentDetails),\n            editYaml(),\n            {\n                href: 'replicasets',\n                name: t('COMMON:MSG_LNB_MENU_31'),\n                component: ReplicaSetsTab,\n            },\n            pods(),\n            envEditor(environmentComponent),\n            events(ResourceEventStream),\n        ] })));\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\nconst kind = 'Deployment';\nconst DeploymentTableRow = ({ obj, index, key, style }) => {\n    return React.createElement(WorkloadTableRow, { obj: obj, index: index, rowKey: key, style: style, menuActions: menuActions, kind: kind });\n};\nconst DeploymentTableHeader = (t) => {\n    return WorkloadTableHeader(t);\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\nexport const DeploymentsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Deployments\", Header: DeploymentTableHeader.bind(null, t), Row: DeploymentTableRow, virtualize: true }));\n};\nDeploymentsList.displayName = 'DeploymentsList';\nexport const DeploymentsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_24'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_24') }), kind: deploymentsReference, canCreate: true, ListComponent: DeploymentsList }, props));\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { Status, PodRingController } from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { DeploymentModel } from '../models';\nimport { DeploymentKind, K8sKind, K8sResourceKindReference } from '../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunction } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, KebabAction, ContainerTable, navFactory, pluralize, ResourceSummary, SectionHeading, togglePaused, WorkloadPausedAlert, LoadingInline } from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => {\n  const { t } = useTranslation();\n  return {\n    label: t('COMMON:MSG_MAIN_ACTIONBUTTON_8'),\n    callback: () => configureUpdateStrategyModal({ deployment }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: deployment.metadata.name,\n      namespace: deployment.metadata.namespace,\n      verb: 'patch',\n    },\n  };\n};\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => {\n  const { t } = useTranslation();\n  return {\n    label: obj.spec.paused ? t('COMMON:MSG_MAIN_ACTIONBUTTON_37') : t('COMMON:MSG_MAIN_ACTIONBUTTON_12'),\n    callback: () => togglePaused(kind, obj).catch(err => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  };\n};\n\nexport const menuActions = [ModifyCount, PauseAction, AddHealthChecks, AddStorage, UpdateStrategy, ...Kebab.getExtensionsActionsForKind(DeploymentModel), EditHealthChecks, ...common];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_25')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_26')} obj={deployment} path=\"spec.strategy.rollingUpdate.maxUnavailable\">\n            {deployment.spec.strategy.rollingUpdate.maxUnavailable || 1} of {pluralize(deployment.spec.replicas, 'pod')}\n          </DetailsItem>\n          <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_27')} obj={deployment} path=\"spec.strategy.rollingUpdate.maxSurge\">\n            {deployment.spec.strategy.rollingUpdate.maxSurge || 1} greater than {pluralize(deployment.spec.replicas, 'pod')}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_28')} obj={deployment} path=\"spec.progressDeadlineSeconds\">\n        {deployment.spec.progressDeadlineSeconds ? pluralize(deployment.spec.progressDeadlineSeconds, 'second') : 'Not Configured'}\n      </DetailsItem>\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_29')} obj={deployment} path=\"spec.minReadySeconds\">\n        {deployment.spec.minReadySeconds ? pluralize(deployment.spec.minReadySeconds, 'second') : 'Not Configured'}\n      </DetailsItem>\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(deployment, t) })} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingController\n          namespace={deployment.metadata.namespace}\n          kind={deployment.kind}\n          render={d => {\n            return d.loaded ? <PodRingSet key={deployment.metadata.uid} podData={d.data[deployment.metadata.uid]} obj={deployment} resourceKind={DeploymentModel} path=\"/spec/replicas\" /> : <LoadingInline />;\n          }}\n        />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={deployment} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')}</dt>\n                <dd>{deployment.status.availableReplicas === deployment.status.updatedReplicas && deployment.spec.replicas === deployment.status.availableReplicas ? <Status status=\"Up to date\" /> : <Status status=\"Updating\" />}</dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = props => <AsyncComponent loader={() => import('./environment.jsx').then(c => c.EnvironmentPage)} {...props} />;\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = props => <EnvironmentPage obj={props.obj} rawEnvData={props.obj.spec.template.spec} envPath={envPath} readOnly={false} />;\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return <ReplicaSetsPage showTitle={false} namespace={namespace} selector={selector} canCreate={false} />;\n};\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nexport const DeploymentsDetailsPage: React.FC<DeploymentsDetailsPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      menuActions={menuActions}\n      pages={[\n        details(DeploymentDetails),\n        editYaml(),\n        {\n          href: 'replicasets',\n          name: t('COMMON:MSG_LNB_MENU_31'),\n          component: ReplicaSetsTab,\n        },\n        pods(),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: RowFunction<DeploymentKind> = ({ obj, index, key, style }) => {\n  return <WorkloadTableRow obj={obj} index={index} rowKey={key} style={style} menuActions={menuActions} kind={kind} />;\n};\n\nconst DeploymentTableHeader = (t?: TFunction) => {\n  return WorkloadTableHeader(t);\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Deployments\" Header={DeploymentTableHeader.bind(null, t)} Row={DeploymentTableRow} virtualize />;\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_24')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_24') })} kind={deploymentsReference} canCreate={true} ListComponent={DeploymentsList} {...props} />;\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DeploymentsDetailsPageProps = {\n  match: any;\n};\n"]}]}