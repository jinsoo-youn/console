{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/index.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/index.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Nav, NavList, PageSidebar } from '@patternfly/react-core';\nimport PerspectiveNav from './perspective-nav';\nimport NavHeader from './nav-header';\nexport const Navigation = React.memo(({ isNavOpen, onNavSelect, onPerspectiveSelected, onClusterSelected }) => (React.createElement(PageSidebar, { nav: React.createElement(Nav, { \"aria-label\": \"Nav\", onSelect: onNavSelect, theme: \"dark\" },\n        React.createElement(NavHeader, { onPerspectiveSelected: onPerspectiveSelected, onClusterSelected: onClusterSelected }),\n        React.createElement(NavList, null,\n            React.createElement(PerspectiveNav, null))), isNavOpen: isNavOpen, theme: \"dark\" })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/index.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/nav/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAY,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC7E,OAAO,cAAc,MAAM,mBAAmB,CAAC;AAC/C,OAAO,SAAS,MAAM,cAAc,CAAC;AASrC,MAAM,CAAC,MAAM,UAAU,GAA8B,KAAK,CAAC,IAAI,CAC7D,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,CACxE,oBAAC,WAAW,IACV,GAAG,EACD,oBAAC,GAAG,kBAAY,KAAK,EAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAC,MAAM;QACvD,oBAAC,SAAS,IAAC,qBAAqB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,iBAAiB,GAAI;QACjG,oBAAC,OAAO;YACN,oBAAC,cAAc,OAAG,CACV,CACN,EAER,SAAS,EAAE,SAAS,EACpB,KAAK,EAAC,MAAM,GACZ,CACH,CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport { Nav, NavProps, NavList, PageSidebar } from '@patternfly/react-core';\nimport PerspectiveNav from './perspective-nav';\nimport NavHeader from './nav-header';\n\ntype NavigationProps = {\n  onNavSelect: NavProps['onSelect'];\n  onPerspectiveSelected: () => void;\n  onClusterSelected: () => void;\n  isNavOpen: boolean;\n};\n\nexport const Navigation: React.FC<NavigationProps> = React.memo(\n  ({ isNavOpen, onNavSelect, onPerspectiveSelected, onClusterSelected }) => (\n    <PageSidebar\n      nav={\n        <Nav aria-label=\"Nav\" onSelect={onNavSelect} theme=\"dark\">\n          <NavHeader onPerspectiveSelected={onPerspectiveSelected} onClusterSelected={onClusterSelected} />\n          <NavList>\n            <PerspectiveNav />\n          </NavList>\n        </Nav>\n      }\n      isNavOpen={isNavOpen}\n      theme=\"dark\"\n    />\n  ),\n);\n"]}]}