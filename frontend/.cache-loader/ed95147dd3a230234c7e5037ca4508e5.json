{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/index.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/index.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Status, SuccessStatus, YellowExclamationTriangleIcon } from '@console/shared';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { StatusCapability } from '../types';\nimport { Phase } from './phase';\nimport { PodStatusChart } from './pods';\nconst Invalid = (props) => (React.createElement(\"span\", { className: \"text-muted\" },\n    React.createElement(YellowExclamationTriangleIcon, null),\n    \"\\u00A0\\u00A0The field \",\n    React.createElement(\"code\", null,\n        \"status.\",\n        props.descriptor.path),\n    \" is invalid\"));\nconst Default = ({ value }) => {\n    if (_.isEmpty(value) && !_.isNumber(value) && !_.isBoolean(value)) {\n        return React.createElement(\"span\", { className: \"text-muted\" }, \"None\");\n    }\n    if (_.isObject(value)) {\n        return (React.createElement(\"div\", { className: \"row\" }, _.map(value, (v, k) => (React.createElement(\"span\", { key: k },\n            k,\n            \": \",\n            v)))));\n    }\n    return React.createElement(\"span\", null, _.toString(value));\n};\nconst PodStatuses = (props) => {\n    return (((!_.isObject(props.value) || _.some(props.value, (v) => !_.isArray(v))) && (React.createElement(Invalid, Object.assign({}, props)))) ||\n        (_.every(props.value, (v) => _.isArray(v) && v.length === 0) && (React.createElement(\"span\", { className: \"text-muted\" }, \"No members\"))) || React.createElement(PodStatusChart, { statuses: props.value, statusDescriptor: props.descriptor }));\n};\nconst StatusConditions = (props) => {\n    return ((!_.isArray(props.value) && React.createElement(Invalid, Object.assign({}, props))) ||\n        (props.value.length === 0 && React.createElement(\"span\", { className: \"text-muted\" }, \"No conditions present\")) || (React.createElement(Conditions, { conditions: props.value })));\n};\nconst Link = ({ value }) => !_.isNil(value) ? (React.createElement(\"a\", { href: value }, value.replace(/https?:\\/\\//, ''))) : (React.createElement(\"span\", { className: \"text-muted\" }, \"None\"));\nconst K8sPhase = ({ value }) => React.createElement(Phase, { status: value });\nconst K8sPhaseReason = ({ value }) => _.isEmpty(value) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"None\")) : (React.createElement(\"pre\", { style: { width: 'max-content' } }, value));\nconst K8sResourceLink = ({ capability, namespace, value }) => _.isEmpty(value) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"None\")) : (React.createElement(ResourceLink, { kind: capability.substr(StatusCapability.k8sResourcePrefix.length), name: value, namespace: namespace, title: value }));\nconst capabilityComponents = ImmutableMap()\n    .set(StatusCapability.podStatuses, PodStatuses)\n    .set(StatusCapability.conditions, StatusConditions)\n    .set(StatusCapability.w3Link, Link)\n    .set(StatusCapability.k8sPhase, K8sPhase)\n    .set(StatusCapability.k8sPhaseReason, K8sPhaseReason)\n    .set(StatusCapability.k8sResourcePrefix, K8sResourceLink)\n    .set(StatusCapability.hidden, null);\nconst capabilityFor = (statusCapability) => {\n    if (_.isEmpty(statusCapability)) {\n        return Default;\n    }\n    if (statusCapability.startsWith(StatusCapability.k8sResourcePrefix)) {\n        return capabilityComponents.get(StatusCapability.k8sResourcePrefix);\n    }\n    return capabilityComponents.get(statusCapability, Default);\n};\n/**\n * Main entrypoint component for rendering custom UI for a given status descriptor. This should be used instead of importing\n * individual components from this module.\n */\nexport const StatusDescriptor = withFallback((props) => {\n    const { descriptor, value, namespace } = props;\n    // Only using first capability instead of dealing with combimations/permutations\n    const capability = _.get(descriptor, ['x-descriptors', 0], null);\n    const Capability = capabilityFor(capability);\n    return Capability ? (React.createElement(\"dl\", { className: \"olm-descriptor\" },\n        React.createElement(Tooltip, { content: descriptor.description },\n            React.createElement(\"dt\", { className: \"olm-descriptor__title\", \"data-test-descriptor-label\": descriptor.displayName }, descriptor.displayName)),\n        React.createElement(\"dd\", { className: \"olm-descriptor__value\" }, descriptor.displayName === 'Status' ? (value === 'Running' ? (React.createElement(SuccessStatus, { title: value })) : (React.createElement(Status, { status: value }))) : (React.createElement(Capability, { descriptor: descriptor, capability: capability, value: value, namespace: namespace }))))) : null;\n});\nStatusDescriptor.displayName = 'StatusDescriptor';\nPhase.displayName = 'Phase';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/index.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Status, SuccessStatus, YellowExclamationTriangleIcon } from '@console/shared';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { StatusCapability, CapabilityProps, DescriptorProps } from '../types';\nimport { Phase } from './phase';\nimport { PodStatusChart } from './pods';\n\nconst Invalid: React.SFC<StatusCapabilityProps> = (props) => (\n  <span className=\"text-muted\">\n    <YellowExclamationTriangleIcon />\n    &nbsp;&nbsp;The field <code>status.{props.descriptor.path}</code> is invalid\n  </span>\n);\n\nconst Default: React.SFC<StatusCapabilityProps> = ({ value }) => {\n  if (_.isEmpty(value) && !_.isNumber(value) && !_.isBoolean(value)) {\n    return <span className=\"text-muted\">None</span>;\n  }\n  if (_.isObject(value)) {\n    return (\n      <div className=\"row\">\n        {_.map(value, (v, k) => (\n          <span key={k}>\n            {k}: {v}\n          </span>\n        ))}\n      </div>\n    );\n  }\n  return <span>{_.toString(value)}</span>;\n};\n\nconst PodStatuses: React.SFC<StatusCapabilityProps> = (props) => {\n  return (\n    ((!_.isObject(props.value) || _.some(props.value, (v) => !_.isArray(v))) && (\n      <Invalid {...props} />\n    )) ||\n    (_.every(props.value, (v) => _.isArray(v) && v.length === 0) && (\n      <span className=\"text-muted\">No members</span>\n    )) || <PodStatusChart statuses={props.value} statusDescriptor={props.descriptor} />\n  );\n};\n\nconst StatusConditions: React.SFC<StatusCapabilityProps> = (props) => {\n  return (\n    (!_.isArray(props.value) && <Invalid {...props} />) ||\n    (props.value.length === 0 && <span className=\"text-muted\">No conditions present</span>) || (\n      <Conditions conditions={props.value} />\n    )\n  );\n};\n\nconst Link: React.SFC<StatusCapabilityProps> = ({ value }) =>\n  !_.isNil(value) ? (\n    <a href={value}>{value.replace(/https?:\\/\\//, '')}</a>\n  ) : (\n    <span className=\"text-muted\">None</span>\n  );\n\nconst K8sPhase: React.SFC<StatusCapabilityProps> = ({ value }) => <Phase status={value} />;\n\nconst K8sPhaseReason: React.SFC<StatusCapabilityProps> = ({ value }) =>\n  _.isEmpty(value) ? (\n    <span className=\"text-muted\">None</span>\n  ) : (\n    <pre style={{ width: 'max-content' }}>{value}</pre>\n  );\n\nconst K8sResourceLink: React.SFC<StatusCapabilityProps> = ({ capability, namespace, value }) =>\n  _.isEmpty(value) ? (\n    <span className=\"text-muted\">None</span>\n  ) : (\n    <ResourceLink\n      kind={capability.substr(StatusCapability.k8sResourcePrefix.length)}\n      name={value}\n      namespace={namespace}\n      title={value}\n    />\n  );\n\nconst capabilityComponents = ImmutableMap<\n  StatusCapability,\n  React.ComponentType<StatusCapabilityProps>\n>()\n  .set(StatusCapability.podStatuses, PodStatuses)\n  .set(StatusCapability.conditions, StatusConditions)\n  .set(StatusCapability.w3Link, Link)\n  .set(StatusCapability.k8sPhase, K8sPhase)\n  .set(StatusCapability.k8sPhaseReason, K8sPhaseReason)\n  .set(StatusCapability.k8sResourcePrefix, K8sResourceLink)\n  .set(StatusCapability.hidden, null);\n\nconst capabilityFor = (statusCapability: StatusCapability) => {\n  if (_.isEmpty(statusCapability)) {\n    return Default;\n  }\n  if (statusCapability.startsWith(StatusCapability.k8sResourcePrefix)) {\n    return capabilityComponents.get(StatusCapability.k8sResourcePrefix);\n  }\n  return capabilityComponents.get(statusCapability, Default);\n};\n\n/**\n * Main entrypoint component for rendering custom UI for a given status descriptor. This should be used instead of importing\n * individual components from this module.\n */\nexport const StatusDescriptor = withFallback((props: DescriptorProps) => {\n  const { descriptor, value, namespace } = props;\n  // Only using first capability instead of dealing with combimations/permutations\n  const capability = _.get(descriptor, ['x-descriptors', 0], null) as StatusCapability;\n  const Capability = capabilityFor(capability);\n\n  return Capability ? (\n    <dl className=\"olm-descriptor\">\n      <Tooltip content={descriptor.description}>\n        <dt className=\"olm-descriptor__title\" data-test-descriptor-label={descriptor.displayName}>\n          {descriptor.displayName}\n        </dt>\n      </Tooltip>\n      <dd className=\"olm-descriptor__value\">\n        {descriptor.displayName === 'Status' ? (\n          value === 'Running' ? (\n            <SuccessStatus title={value} />\n          ) : (\n            <Status status={value} />\n          )\n        ) : (\n          <Capability\n            descriptor={descriptor}\n            capability={capability}\n            value={value}\n            namespace={namespace}\n          />\n        )}\n      </dd>\n    </dl>\n  ) : null;\n});\n\ntype StatusCapabilityProps = CapabilityProps<StatusCapability>;\n\nStatusDescriptor.displayName = 'StatusDescriptor';\nPhase.displayName = 'Phase';\n"]}]}