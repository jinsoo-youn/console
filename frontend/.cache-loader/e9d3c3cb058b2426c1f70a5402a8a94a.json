{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-config-pool.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-config-pool.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\nimport { Conditions } from './conditions';\nimport { errorModal } from './modals';\nimport { MachineConfigPoolModel } from '../models';\nimport { machineConfigReference, MachineConfigPage } from './machine-config';\nimport { K8sResourceConditionStatus, MachineConfigPoolConditionType, referenceForModel, } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, navFactory, pluralize, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector, togglePaused, WorkloadPausedAlert, } from './utils';\nimport { ResourceEventStream } from './events';\nconst pauseAction = (kind, obj) => ({\n    label: obj.spec.paused ? 'Resume Updates' : 'Pause Updates',\n    callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        verb: 'patch',\n    },\n});\nconst machineConfigPoolReference = referenceForModel(MachineConfigPoolModel);\nconst machineConfigPoolMenuActions = [\n    pauseAction,\n    ...Kebab.getExtensionsActionsForKind(MachineConfigPoolModel),\n    ...Kebab.factory.common,\n];\nconst getConditionStatus = (mcp, type) => {\n    const { conditions } = mcp.status || {};\n    const condition = _.find(conditions, { type });\n    return condition ? condition.status : K8sResourceConditionStatus.Unknown;\n};\nconst MachineConfigPoolCharacteristics = ({ obj, }) => {\n    const configuration = _.get(obj, 'status.configuration');\n    const maxUnavailable = _.get(obj, 'spec.maxUnavailable', 1);\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(\"dt\", null, \"Max Unavailable Machines\"),\n        React.createElement(\"dd\", null, maxUnavailable),\n        configuration && (React.createElement(React.Fragment, null,\n            React.createElement(\"dt\", null, \"Current Configuration\"),\n            React.createElement(\"dd\", null, configuration.name ? (React.createElement(ResourceLink, { kind: machineConfigReference, name: configuration.name, title: configuration.name })) : ('-')),\n            React.createElement(\"dt\", null, \"Current Configuration Source\"),\n            React.createElement(\"dd\", null, configuration.source\n                ? _.map(configuration.source, ({ apiVersion, kind, name }) => (React.createElement(ResourceLink, { key: `${apiVersion}-${kind}-${name}`, kind: machineConfigReference, name: name, title: name })))\n                : '-')))));\n};\nconst MachineConfigPoolCounts = ({ obj }) => {\n    return (React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n        React.createElement(\"div\", { className: \"co-detail-table\" },\n            React.createElement(\"div\", { className: \"co-detail-table__row row\" },\n                React.createElement(\"div\", { className: \"co-detail-table__section\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", { className: \"co-detail-table__section-header\" }, \"Total Machine Count\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Tooltip, { content: \"Total number of machines in the machine pool.\" },\n                                React.createElement(\"span\", null, pluralize(_.get(obj, 'status.machineCount', 0), 'machine')))))),\n                React.createElement(\"div\", { className: \"co-detail-table__section\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", { className: \"co-detail-table__section-header\" }, \"Ready Machines\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Tooltip, { content: \"Total number of ready machines targeted by the pool.\" },\n                                React.createElement(\"span\", null, pluralize(_.get(obj, 'status.readyMachineCount', 0), 'machine')))))),\n                React.createElement(\"div\", { className: \"co-detail-table__section\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", { className: \"co-detail-table__section-header\" }, \"Updated Count\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Tooltip, { content: \"Total number of machines targeted by the pool that have the CurrentMachineConfig as their config.\" },\n                                React.createElement(\"span\", null, pluralize(_.get(obj, 'status.updatedMachineCount', 0), 'machine')))))),\n                React.createElement(\"div\", { className: \"co-detail-table__section co-detail-table__section--last\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", { className: \"co-detail-table__section-header\" }, \"Unavailable Count\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Tooltip, { content: \"Total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.\" },\n                                React.createElement(\"span\", null, pluralize(_.get(obj, 'status.unavailableMachineCount', 0), 'machine'))))))))));\n};\nconst MachineConfigPoolSummary = ({ obj }) => {\n    const machineConfigSelector = _.get(obj, 'spec.machineConfigSelector');\n    return (React.createElement(ResourceSummary, { resource: obj, showNodeSelector: true, nodeSelector: \"spec.nodeSelector\" },\n        React.createElement(\"dt\", null, \"Machine Config Selector\"),\n        React.createElement(\"dd\", null,\n            React.createElement(Selector, { kind: machineConfigReference, selector: machineConfigSelector }))));\n};\nconst MachineConfigList = ({ obj }) => (React.createElement(MachineConfigPage, { canCreate: false, showTitle: false, selector: _.get(obj, 'spec.machineConfigSelector') }));\nconst MachineConfigPoolDetails = ({ obj }) => {\n    const paused = _.get(obj, 'spec.paused');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Machine Config Pool Details \" }),\n            paused && React.createElement(WorkloadPausedAlert, { model: MachineConfigPoolModel, obj: obj }),\n            React.createElement(MachineConfigPoolCounts, { obj: obj }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(MachineConfigPoolSummary, { obj: obj })),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(MachineConfigPoolCharacteristics, { obj: obj })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: _.get(obj, 'status.conditions') }))));\n};\nconst pages = [\n    navFactory.details(MachineConfigPoolDetails),\n    navFactory.editYaml(),\n    navFactory.machineConfigs(MachineConfigList),\n    navFactory.events(ResourceEventStream),\n];\nexport const MachineConfigPoolDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: machineConfigPoolReference, menuActions: machineConfigPoolMenuActions, pages: pages })));\nconst tableColumnClasses = [\n    classNames('col-lg-4', 'col-xs-6'),\n    classNames('col-lg-5', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n    classNames('col-lg-1', 'col-sm-2', 'hidden-xs'),\n    classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n    Kebab.columnClass,\n];\nconst MachineConfigPoolTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Configuration',\n            sortField: 'status.configuration.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Updated',\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Updating',\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Degraded',\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nMachineConfigPoolTableHeader.displayName = 'MachineConfigPoolTableHeader';\nconst MachineConfigPoolTableRow = ({ obj, index, key, style, }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: classNames(tableColumnClasses[0], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: machineConfigPoolReference, name: obj.metadata.name, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') }, _.get(obj, 'status.configuration.name') ? (React.createElement(ResourceLink, { kind: machineConfigReference, name: obj.status.configuration.name, title: obj.status.configuration.name })) : ('-')),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, getConditionStatus(obj, MachineConfigPoolConditionType.Updated)),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, getConditionStatus(obj, MachineConfigPoolConditionType.Updating)),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[4], 'co-truncate') }, getConditionStatus(obj, MachineConfigPoolConditionType.Degraded)),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: machineConfigPoolMenuActions, kind: machineConfigPoolReference, resource: obj }))));\n};\nconst MachineConfigPoolList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Machine Config Pools\", Header: MachineConfigPoolTableHeader, Row: MachineConfigPoolTableRow, virtualize: true })));\nexport const MachineConfigPoolPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { ListComponent: MachineConfigPoolList, kind: machineConfigPoolReference, canCreate: true })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-config-pool.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-config-pool.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Tooltip } from '@patternfly/react-core';\n\nimport { Conditions } from './conditions';\nimport { errorModal } from './modals';\nimport { MachineConfigPoolModel } from '../models';\nimport { machineConfigReference, MachineConfigPage } from './machine-config';\nimport {\n  K8sResourceCondition,\n  K8sResourceConditionStatus,\n  MachineConfigPoolConditionType,\n  MachineConfigPoolKind,\n  referenceForModel,\n} from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  KebabAction,\n  navFactory,\n  pluralize,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  togglePaused,\n  WorkloadPausedAlert,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nconst pauseAction: KebabAction = (kind, obj) => ({\n  label: obj.spec.paused ? 'Resume Updates' : 'Pause Updates',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    verb: 'patch',\n  },\n});\n\nconst machineConfigPoolReference = referenceForModel(MachineConfigPoolModel);\nconst machineConfigPoolMenuActions = [\n  pauseAction,\n  ...Kebab.getExtensionsActionsForKind(MachineConfigPoolModel),\n  ...Kebab.factory.common,\n];\nconst getConditionStatus = (\n  mcp: MachineConfigPoolKind,\n  type: MachineConfigPoolConditionType,\n): K8sResourceCondition['status'] => {\n  const { conditions } = mcp.status || {};\n  const condition = _.find(conditions, { type });\n  return condition ? condition.status : K8sResourceConditionStatus.Unknown;\n};\n\nconst MachineConfigPoolCharacteristics: React.SFC<MachineConfigPoolCharacteristicsProps> = ({\n  obj,\n}) => {\n  const configuration = _.get(obj, 'status.configuration');\n  const maxUnavailable = _.get(obj, 'spec.maxUnavailable', 1);\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>Max Unavailable Machines</dt>\n      <dd>{maxUnavailable}</dd>\n      {configuration && (\n        <>\n          <dt>Current Configuration</dt>\n          <dd>\n            {configuration.name ? (\n              <ResourceLink\n                kind={machineConfigReference}\n                name={configuration.name}\n                title={configuration.name}\n              />\n            ) : (\n              '-'\n            )}\n          </dd>\n          <dt>Current Configuration Source</dt>\n          <dd>\n            {configuration.source\n              ? _.map(configuration.source, ({ apiVersion, kind, name }) => (\n                  <ResourceLink\n                    key={`${apiVersion}-${kind}-${name}`}\n                    kind={machineConfigReference}\n                    name={name}\n                    title={name}\n                  />\n                ))\n              : '-'}\n          </dd>\n        </>\n      )}\n    </dl>\n  );\n};\n\nconst MachineConfigPoolCounts: React.SFC<MachineConfigPoolCountsProps> = ({ obj }) => {\n  return (\n    <div className=\"co-m-pane__body-group\">\n      <div className=\"co-detail-table\">\n        <div className=\"co-detail-table__row row\">\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Total Machine Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of machines in the machine pool.\">\n                  <span>{pluralize(_.get(obj, 'status.machineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Ready Machines</dt>\n              <dd>\n                <Tooltip content=\"Total number of ready machines targeted by the pool.\">\n                  <span>{pluralize(_.get(obj, 'status.readyMachineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Updated Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of machines targeted by the pool that have the CurrentMachineConfig as their config.\">\n                  <span>{pluralize(_.get(obj, 'status.updatedMachineCount', 0), 'machine')}</span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"co-detail-table__section co-detail-table__section--last\">\n            <dl className=\"co-m-pane__details\">\n              <dt className=\"co-detail-table__section-header\">Unavailable Count</dt>\n              <dd>\n                <Tooltip content=\"Total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.\">\n                  <span>\n                    {pluralize(_.get(obj, 'status.unavailableMachineCount', 0), 'machine')}\n                  </span>\n                </Tooltip>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MachineConfigPoolSummary: React.SFC<MachineConfigPoolSummaryProps> = ({ obj }) => {\n  const machineConfigSelector = _.get(obj, 'spec.machineConfigSelector');\n  return (\n    <ResourceSummary resource={obj} showNodeSelector nodeSelector=\"spec.nodeSelector\">\n      <dt>Machine Config Selector</dt>\n      <dd>\n        <Selector kind={machineConfigReference} selector={machineConfigSelector} />\n      </dd>\n    </ResourceSummary>\n  );\n};\n\nconst MachineConfigList: React.SFC<MachineConfigListProps> = ({ obj }) => (\n  <MachineConfigPage\n    canCreate={false}\n    showTitle={false}\n    selector={_.get(obj, 'spec.machineConfigSelector')}\n  />\n);\n\nconst MachineConfigPoolDetails: React.SFC<MachineConfigPoolDetailsProps> = ({ obj }) => {\n  const paused = _.get(obj, 'spec.paused');\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine Config Pool Details \" />\n        {paused && <WorkloadPausedAlert model={MachineConfigPoolModel} obj={obj} />}\n        <MachineConfigPoolCounts obj={obj} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolSummary obj={obj} />\n          </div>\n          <div className=\"col-sm-6\">\n            <MachineConfigPoolCharacteristics obj={obj} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={_.get(obj, 'status.conditions')} />\n      </div>\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(MachineConfigPoolDetails),\n  navFactory.editYaml(),\n  navFactory.machineConfigs(MachineConfigList),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigPoolDetailsPage: React.SFC<any> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={machineConfigPoolReference}\n    menuActions={machineConfigPoolMenuActions}\n    pages={pages}\n  />\n);\n\nconst tableColumnClasses = [\n  classNames('col-lg-4', 'col-xs-6'),\n  classNames('col-lg-5', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n  classNames('col-lg-1', 'col-sm-2', 'hidden-xs'),\n  classNames('col-lg-1', 'col-sm-2', 'col-xs-3'),\n  Kebab.columnClass,\n];\n\nconst MachineConfigPoolTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Configuration',\n      sortField: 'status.configuration.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Updated',\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Updating',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Degraded',\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nMachineConfigPoolTableHeader.displayName = 'MachineConfigPoolTableHeader';\n\nconst MachineConfigPoolTableRow: RowFunction<MachineConfigPoolKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink\n          kind={machineConfigPoolReference}\n          name={obj.metadata.name}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(obj, 'status.configuration.name') ? (\n          <ResourceLink\n            kind={machineConfigReference}\n            name={obj.status.configuration.name}\n            title={obj.status.configuration.name}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Updated)}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Updating)}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-truncate')}>\n        {getConditionStatus(obj, MachineConfigPoolConditionType.Degraded)}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigPoolMenuActions}\n          kind={machineConfigPoolReference}\n          resource={obj}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineConfigPoolList: React.SFC<any> = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Config Pools\"\n    Header={MachineConfigPoolTableHeader}\n    Row={MachineConfigPoolTableRow}\n    virtualize\n  />\n);\n\nexport const MachineConfigPoolPage: React.SFC<any> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineConfigPoolList}\n    kind={machineConfigPoolReference}\n    canCreate\n  />\n);\n\ntype MachineConfigPoolCountsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolDetailsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigListProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolCharacteristicsProps = {\n  obj: MachineConfigPoolKind;\n};\n\ntype MachineConfigPoolSummaryProps = {\n  obj: MachineConfigPoolKind;\n};\n"]}]}