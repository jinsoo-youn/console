{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/form/HelmInstallUpgradeForm.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/form/HelmInstallUpgradeForm.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { TextInputTypes, Grid, GridItem } from '@patternfly/react-core';\nimport { InputField, FormFooter, FlexForm, YAMLEditorField } from '@console/shared';\nimport FormSection from '../../import/section/FormSection';\nimport { HelmActionType } from '../helm-types';\nimport HelmChartVersionDropdown from './HelmChartVersionDropdown';\nconst HelmInstallUpgradeForm = ({ chartHasValues, errors, handleSubmit, handleReset, status, isSubmitting, submitLabel, values, dirty, }) => {\n    const { chartName, chartVersion } = values;\n    return (React.createElement(FlexForm, { onSubmit: handleSubmit },\n        React.createElement(FormSection, { fullWidth: true },\n            React.createElement(Grid, { gutter: 'md' },\n                React.createElement(GridItem, { span: submitLabel === HelmActionType.Install ? 12 : 6 },\n                    React.createElement(InputField, { type: TextInputTypes.text, name: \"helmReleaseName\", label: \"Release Name\", helpText: \"A unique name for the Helm Chart release.\", required: true, isDisabled: !!chartVersion })),\n                chartVersion && (React.createElement(HelmChartVersionDropdown, { chartName: chartName, chartVersion: chartVersion })))),\n        chartHasValues && React.createElement(YAMLEditorField, { name: \"chartValuesYAML\", onSave: handleSubmit }),\n        React.createElement(FormFooter, { handleReset: handleReset, errorMessage: status && status.submitError, isSubmitting: (status === null || status === void 0 ? void 0 : status.isSubmitting) || isSubmitting, submitLabel: submitLabel, disableSubmit: (chartVersion && !dirty) || (status === null || status === void 0 ? void 0 : status.isSubmitting) || !_.isEmpty(errors), resetLabel: \"Cancel\" })));\n};\nexport default HelmInstallUpgradeForm;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/form/HelmInstallUpgradeForm.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/form/HelmInstallUpgradeForm.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AACpF,OAAO,WAAW,MAAM,kCAAkC,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAOlE,MAAM,sBAAsB,GAAsE,CAAC,EACjG,cAAc,EACd,MAAM,EACN,YAAY,EACZ,WAAW,EACX,MAAM,EACN,YAAY,EACZ,WAAW,EACX,MAAM,EACN,KAAK,GACN,EAAE,EAAE;IACH,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,MAAM,CAAC;IAC3C,OAAO,CACL,oBAAC,QAAQ,IAAC,QAAQ,EAAE,YAAY;QAC9B,oBAAC,WAAW,IAAC,SAAS;YACpB,oBAAC,IAAI,IAAC,MAAM,EAAE,IAAI;gBAChB,oBAAC,QAAQ,IAAC,IAAI,EAAE,WAAW,KAAK,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7D,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,iBAAiB,EACtB,KAAK,EAAC,cAAc,EACpB,QAAQ,EAAC,2CAA2C,EACpD,QAAQ,QACR,UAAU,EAAE,CAAC,CAAC,YAAY,GAC1B,CACO;gBACV,YAAY,IAAI,CACf,oBAAC,wBAAwB,IAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,GAAI,CAC/E,CACI,CACK;QACb,cAAc,IAAI,oBAAC,eAAe,IAAC,IAAI,EAAC,iBAAiB,EAAC,MAAM,EAAE,YAAY,GAAI;QACnF,oBAAC,UAAU,IACT,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,MAAM,IAAI,MAAM,CAAC,WAAW,EAC1C,YAAY,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,KAAI,YAAY,EAClD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAE,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,KAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,CAAA,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EACrF,UAAU,EAAC,QAAQ,GACnB,CACO,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { FormikProps, FormikValues } from 'formik';\nimport { TextInputTypes, Grid, GridItem } from '@patternfly/react-core';\nimport { InputField, FormFooter, FlexForm, YAMLEditorField } from '@console/shared';\nimport FormSection from '../../import/section/FormSection';\nimport { HelmActionType } from '../helm-types';\nimport HelmChartVersionDropdown from './HelmChartVersionDropdown';\n\nexport interface HelmInstallUpgradeFormProps {\n  chartHasValues: boolean;\n  submitLabel: string;\n}\n\nconst HelmInstallUpgradeForm: React.FC<FormikProps<FormikValues> & HelmInstallUpgradeFormProps> = ({\n  chartHasValues,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  submitLabel,\n  values,\n  dirty,\n}) => {\n  const { chartName, chartVersion } = values;\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormSection fullWidth>\n        <Grid gutter={'md'}>\n          <GridItem span={submitLabel === HelmActionType.Install ? 12 : 6}>\n            <InputField\n              type={TextInputTypes.text}\n              name=\"helmReleaseName\"\n              label=\"Release Name\"\n              helpText=\"A unique name for the Helm Chart release.\"\n              required\n              isDisabled={!!chartVersion}\n            />\n          </GridItem>\n          {chartVersion && (\n            <HelmChartVersionDropdown chartName={chartName} chartVersion={chartVersion} />\n          )}\n        </Grid>\n      </FormSection>\n      {chartHasValues && <YAMLEditorField name=\"chartValuesYAML\" onSave={handleSubmit} />}\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={status?.isSubmitting || isSubmitting}\n        submitLabel={submitLabel}\n        disableSubmit={(chartVersion && !dirty) || status?.isSubmitting || !_.isEmpty(errors)}\n        resetLabel=\"Cancel\"\n      />\n    </FlexForm>\n  );\n};\n\nexport default HelmInstallUpgradeForm;\n"]}]}