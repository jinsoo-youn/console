{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-monitor.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-monitor.jsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { ServiceMonitorModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\nconst { Edit, Delete } = Kebab.factory;\nconst menuActions = [Edit, Delete];\nconst namespaceSelectorLinks = ({ spec }) => {\n    const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n    if (namespaces.length) {\n        return _.map(namespaces, (n) => (React.createElement(\"span\", { key: n },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: n, title: n }),\n            \"\\u00A0\\u00A0\")));\n    }\n    return React.createElement(\"span\", { className: \"text-muted\" }, \"--\");\n};\nconst serviceSelectorLinks = ({ spec }) => {\n    const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n    if (namespaces.length) {\n        return _.map(namespaces, (n) => (React.createElement(\"span\", { key: n },\n            React.createElement(Selector, { selector: spec.selector, kind: \"Service\", namespace: n }),\n            \"\\u00A0\\u00A0\")));\n    }\n    return React.createElement(Selector, { selector: spec.selector, kind: \"Service\" });\n};\nconst tableColumnClasses = [\n    classNames('col-md-3', 'col-sm-3', 'col-xs-6'),\n    classNames('col-md-3', 'col-sm-3', 'col-xs-6'),\n    classNames('col-md-3', 'col-sm-6', 'hidden-xs'),\n    classNames('col-md-3', 'hidden-sm', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst ServiceMonitorTableRow = ({ obj: sm, index, key, style }) => {\n    const { metadata } = sm;\n    return (React.createElement(TableRow, { id: sm.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: referenceForModel(ServiceMonitorModel), name: metadata.name, namespace: metadata.namespace, title: metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: metadata.namespace, title: metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, serviceSelectorLinks(sm)),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(\"p\", null, namespaceSelectorLinks(sm))),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: referenceForModel(ServiceMonitorModel), resource: sm }))));\n};\nconst ServiceMonitorTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Service Selector',\n            sortField: 'spec.selector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Monitoring Namespace',\n            sortField: 'spec.namespaceSelector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nServiceMonitorTableHeader.displayName = 'ServiceMonitorTableHeader';\nexport const ServiceMonitorsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Service Monitors\", Header: ServiceMonitorTableHeader, Row: ServiceMonitorTableRow, virtualize: true })));\nexport const ServiceMonitorsPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { canCreate: true, kind: referenceForModel(ServiceMonitorModel), ListComponent: ServiceMonitorsList })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-monitor.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-monitor.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { ServiceMonitorModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\n\nconst { Edit, Delete } = Kebab.factory;\nconst menuActions = [Edit, Delete];\n\nconst namespaceSelectorLinks = ({ spec }) => {\n  const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n  if (namespaces.length) {\n    return _.map(namespaces, (n) => (\n      <span key={n}>\n        <ResourceLink kind=\"Namespace\" name={n} title={n} />\n        &nbsp;&nbsp;\n      </span>\n    ));\n  }\n  return <span className=\"text-muted\">--</span>;\n};\n\nconst serviceSelectorLinks = ({ spec }) => {\n  const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n  if (namespaces.length) {\n    return _.map(namespaces, (n) => (\n      <span key={n}>\n        <Selector selector={spec.selector} kind=\"Service\" namespace={n} />\n        &nbsp;&nbsp;\n      </span>\n    ));\n  }\n  return <Selector selector={spec.selector} kind=\"Service\" />;\n};\n\nconst tableColumnClasses = [\n  classNames('col-md-3', 'col-sm-3', 'col-xs-6'),\n  classNames('col-md-3', 'col-sm-3', 'col-xs-6'),\n  classNames('col-md-3', 'col-sm-6', 'hidden-xs'),\n  classNames('col-md-3', 'hidden-sm', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst ServiceMonitorTableRow = ({ obj: sm, index, key, style }) => {\n  const { metadata } = sm;\n  return (\n    <TableRow id={sm.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(ServiceMonitorModel)}\n          name={metadata.name}\n          namespace={metadata.namespace}\n          title={metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{serviceSelectorLinks(sm)}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <p>{namespaceSelectorLinks(sm)}</p>\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={referenceForModel(ServiceMonitorModel)}\n          resource={sm}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceMonitorTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Service Selector',\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Monitoring Namespace',\n      sortField: 'spec.namespaceSelector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nServiceMonitorTableHeader.displayName = 'ServiceMonitorTableHeader';\n\nexport const ServiceMonitorsList = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Service Monitors\"\n    Header={ServiceMonitorTableHeader}\n    Row={ServiceMonitorTableRow}\n    virtualize\n  />\n);\n\nexport const ServiceMonitorsPage = (props) => (\n  <ListPage\n    {...props}\n    canCreate={true}\n    kind={referenceForModel(ServiceMonitorModel)}\n    ListComponent={ServiceMonitorsList}\n  />\n);\n"]}]}