{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline-run.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline-run.tsx","mtime":1617957501080},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { PipelineRunModel, PipelineModel, PipelineResourceModel } from '../../models';\nimport { pipelineRunDuration } from '../../../packages/dev-console/src/utils/pipeline-utils';\nimport { pipelineRefExists } from '../../../packages/dev-console/src/utils/pipeline-augment';\nimport { pipelineRunFilterReducer } from '../../../packages/dev-console/src/utils/pipeline-filter-reducer';\nimport LinkedPipelineRunTaskStatus from '../../../packages/dev-console/src/components/pipelineruns/status/LinkedPipelineRunTaskStatus';\nimport { getPipelineRunKebabActions } from '../../../packages/dev-console/src/utils/pipeline-actions';\nimport { PipelineRunLogsWithActiveTask } from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunLogs';\nimport PipelineRunVisualization from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization';\nimport ResourceLinkList from '../../../packages/dev-console/src/components/pipelines/resource-overview/ResourceLinkList';\nimport TriggeredBySection from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/TriggeredBySection';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst kind = PipelineRunModel.kind;\nconst tableColumnClasses = [\n    '',\n    '',\n    'pf-m-hidden pf-m-visible-on-sm',\n    'pf-m-hidden pf-m-visible-on-lg',\n    'pf-m-hidden pf-m-visible-on-lg',\n    'pf-m-hidden pf-m-visible-on-xl',\n    Kebab.columnClass,\n];\nconst PipelineRunTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.conditions[0].reason',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_78'),\n            sortField: 'status.conditions[0].reason',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_6'),\n            sortField: 'status.startTime',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_81'),\n            sortField: 'status.completionTime',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[6] },\n        },\n    ];\n};\nPipelineRunTableHeader.displayName = 'PipelineRunTableHeader';\nconst PipelineRunTableRow = ({ obj: pipelineRun, index, key, style }) => {\n    return (React.createElement(TableRow, { id: pipelineRun.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace, title: pipelineRun.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: pipelineRun.metadata.namespace, title: pipelineRun.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: pipelineRunFilterReducer(pipelineRun) })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(LinkedPipelineRunTaskStatus, { pipelineRun: pipelineRun })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: pipelineRun.status && pipelineRun.status.startTime })),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, pipelineRunDuration(pipelineRun)),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(ResourceKebab, { actions: getPipelineRunKebabActions(), kind: kind, resource: pipelineRun }))));\n};\nexport const PipelineRunDetailsList = ({ pipelineRun }) => {\n    const unfilteredResources = pipelineRun.spec.resources;\n    const renderResources = (unfilteredResources === null || unfilteredResources === void 0 ? void 0 : unfilteredResources.filter(({ resourceRef }) => !!resourceRef).map((resource) => resource.resourceRef.name)) || [];\n    return (React.createElement(\"div\", { className: \"col-sm-6 odc-pipeline-run-details__customDetails\" },\n        pipelineRefExists(pipelineRun) && (React.createElement(\"dl\", null,\n            React.createElement(\"dt\", null, \"Pipeline\"),\n            React.createElement(\"dd\", null,\n                React.createElement(ResourceLink, { kind: referenceForModel(PipelineModel), name: pipelineRun.spec.pipelineRef.name, namespace: pipelineRun.metadata.namespace })))),\n        React.createElement(TriggeredBySection, { pipelineRun: pipelineRun }),\n        React.createElement(\"br\", null),\n        React.createElement(ResourceLinkList, { model: PipelineResourceModel, links: renderResources, namespace: pipelineRun.metadata.namespace })));\n};\nconst PipelineRunDetails = ({ obj: pipelineRun }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pipelineRun, t) }) }),\n            React.createElement(PipelineRunVisualization, { pipelineRun: pipelineRun }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: pipelineRun })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(PipelineRunDetailsList, { pipelineRun: pipelineRun }))))));\n};\nconst { details, editYaml } = navFactory;\nconst filters = [\n    {\n        filterGroupName: 'Status',\n        type: 'pipeline-run-status',\n        reducer: pipelineRunFilterReducer,\n        items: [\n            { id: 'Succeeded', title: 'Succeeded' },\n            { id: 'Running', title: 'Running' },\n            { id: 'Failed', title: 'Failed' },\n            { id: 'Cancelled', title: 'Cancelled' },\n        ],\n    },\n];\nexport const PipelineRuns = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Pipeline Runs\", Header: PipelineRunTableHeader.bind(null, t), Row: PipelineRunTableRow, virtualize: true }));\n};\nexport const PipelineRunsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_60'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_60') }), canCreate: true, ListComponent: PipelineRuns, kind: kind, rowFilters: filters }, props));\n};\nexport const PipelineRunsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: getPipelineRunKebabActions(), pages: [details(detailsPage(PipelineRunDetails)), editYaml(), {\n            href: 'logs',\n            path: 'logs/:name?',\n            name: 'Logs',\n            component: PipelineRunLogsWithActiveTask,\n        },] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline-run.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline-run.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { PipelineRunModel, PipelineModel, PipelineResourceModel } from '../../models';\nimport { pipelineRunDuration } from '../../../packages/dev-console/src/utils/pipeline-utils';\nimport { PipelineRun, pipelineRefExists, PipelineRunReferenceResource } from '../../../packages/dev-console/src/utils/pipeline-augment';\nimport { pipelineRunFilterReducer } from '../../../packages/dev-console/src/utils/pipeline-filter-reducer';\nimport LinkedPipelineRunTaskStatus from '../../../packages/dev-console/src/components/pipelineruns/status/LinkedPipelineRunTaskStatus';\nimport { getPipelineRunKebabActions } from '../../../packages/dev-console/src/utils/pipeline-actions';\nimport { PipelineRunLogsWithActiveTask } from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunLogs';\nimport PipelineRunVisualization from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization';\nimport ResourceLinkList from '../../../packages/dev-console/src/components/pipelines/resource-overview/ResourceLinkList';\nimport TriggeredBySection from '../../../packages/dev-console/src/components/pipelineruns/detail-page-tabs/TriggeredBySection';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst kind = PipelineRunModel.kind;\n\nconst tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // status\n  'pf-m-hidden pf-m-visible-on-lg', // task status\n  'pf-m-hidden pf-m-visible-on-lg', // started\n  'pf-m-hidden pf-m-visible-on-xl', // duration\n  Kebab.columnClass,\n];\n\n\nconst PipelineRunTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_78'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_6'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_81'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nPipelineRunTableHeader.displayName = 'PipelineRunTableHeader';\n\n\nconst PipelineRunTableRow: RowFunction<PipelineRun> = ({ obj: pipelineRun, index, key, style }) => {\n  return (\n    <TableRow id={pipelineRun.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={pipelineRun.metadata.name} namespace={pipelineRun.metadata.namespace} title={pipelineRun.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={pipelineRun.metadata.namespace} title={pipelineRun.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={pipelineRunFilterReducer(pipelineRun)} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LinkedPipelineRunTaskStatus pipelineRun={pipelineRun} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={pipelineRun.status && pipelineRun.status.startTime} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>{pipelineRunDuration(pipelineRun)}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={getPipelineRunKebabActions()} kind={kind} resource={pipelineRun} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const PipelineRunDetailsList: React.FC<PipelineRunDetailsListProps> = ({ pipelineRun }) => {\n  const unfilteredResources = pipelineRun.spec.resources as PipelineRunReferenceResource[];\n  const renderResources =\n    unfilteredResources\n      ?.filter(({ resourceRef }) => !!resourceRef)\n      .map((resource) => resource.resourceRef.name) || [];\n\n  return (\n    <div className=\"col-sm-6 odc-pipeline-run-details__customDetails\">\n      {pipelineRefExists(pipelineRun) && (\n        <dl>\n          <dt>Pipeline</dt>\n          <dd>\n            <ResourceLink\n              kind={referenceForModel(PipelineModel)}\n              name={pipelineRun.spec.pipelineRef.name}\n              namespace={pipelineRun.metadata.namespace}\n            />\n          </dd>\n        </dl>\n      )}\n      <TriggeredBySection pipelineRun={pipelineRun} />\n      <br />\n      <ResourceLinkList\n        model={PipelineResourceModel}\n        links={renderResources}\n        namespace={pipelineRun.metadata.namespace}\n      />\n    </div>\n  );\n}\n\nconst PipelineRunDetails: React.FC<PipelineRunDetailsProps> = ({ obj: pipelineRun }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pipelineRun, t) })} />\n        <PipelineRunVisualization pipelineRun={pipelineRun} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={pipelineRun} />\n          </div>\n          <div className=\"col-lg-6\">\n            <PipelineRunDetailsList pipelineRun={pipelineRun} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nconst { details, editYaml } = navFactory;\n\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'pipeline-run-status',\n    reducer: pipelineRunFilterReducer,\n    items: [\n      { id: 'Succeeded', title: 'Succeeded' },\n      { id: 'Running', title: 'Running' },\n      { id: 'Failed', title: 'Failed' },\n      { id: 'Cancelled', title: 'Cancelled' },\n    ],\n  },\n];\n\nexport const PipelineRuns: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Pipeline Runs\" Header={PipelineRunTableHeader.bind(null, t)} Row={PipelineRunTableRow} virtualize />;\n}\n\nexport const PipelineRunsPage: React.FC<PipelineRunsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_60')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_60') })}\n    canCreate={true}\n    ListComponent={PipelineRuns}\n    kind={kind}\n    rowFilters={filters}\n    {...props}\n  />;\n}\n\nexport const PipelineRunsDetailsPage: React.FC<PipelineRunsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={getPipelineRunKebabActions()} pages={[details(detailsPage(PipelineRunDetails)), editYaml(), {\n  href: 'logs',\n  path: 'logs/:name?',\n  name: 'Logs',\n  component: PipelineRunLogsWithActiveTask,\n},]} />;\n\n\ntype PipelineRunDetailsListProps = {\n  pipelineRun: PipelineRun;\n};\n\ntype PipelineRunsPageProps = {\n  canCreate?: boolean;\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype PipelineRunDetailsProps = {\n  obj: PipelineRun;\n};\n\ntype PipelineRunsDetailsPageProps = {\n  match: any;\n};"]}]}