{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/AddPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/AddPage.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { history, Firehose, HintBlock } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin';\nimport ODCEmptyState from './EmptyState';\nimport NamespacedPage from './NamespacedPage';\nimport ProjectsExistWrapper from './ProjectsExistWrapper';\nimport CreateProjectListPage from './projects/CreateProjectListPage';\nconst handleProjectCreate = (project) => history.push(`/add/ns/${project.metadata.name}`);\nconst EmptyStateLoader = ({ resources, loaded, loadError }) => {\n    var _a, _b, _c, _d, _e;\n    const [noWorkloads, setNoWorkloads] = React.useState(false);\n    const daemonSets = (_a = resources === null || resources === void 0 ? void 0 : resources.daemonSets) === null || _a === void 0 ? void 0 : _a.data;\n    const deploymentConfigs = (_b = resources === null || resources === void 0 ? void 0 : resources.deploymentConfigs) === null || _b === void 0 ? void 0 : _b.data;\n    const deployments = (_c = resources === null || resources === void 0 ? void 0 : resources.deployments) === null || _c === void 0 ? void 0 : _c.data;\n    const statefulSets = (_d = resources === null || resources === void 0 ? void 0 : resources.statefulSets) === null || _d === void 0 ? void 0 : _d.data;\n    const knativeService = (_e = resources === null || resources === void 0 ? void 0 : resources.knativeService) === null || _e === void 0 ? void 0 : _e.data;\n    React.useEffect(() => {\n        if (loaded) {\n            setNoWorkloads(_.isEmpty(daemonSets) &&\n                _.isEmpty(deploymentConfigs) &&\n                _.isEmpty(deployments) &&\n                _.isEmpty(statefulSets) &&\n                _.isEmpty(knativeService));\n        }\n        else if (loadError) {\n            setNoWorkloads(false);\n        }\n    }, [loaded, loadError, daemonSets, deploymentConfigs, deployments, statefulSets, knativeService]);\n    return noWorkloads ? (React.createElement(ODCEmptyState, { title: \"Add\", hintBlock: React.createElement(HintBlock, { title: \"No workloads found\" },\n            React.createElement(\"p\", null, \"To add content to your project, create an application, component or service using one of these options.\")) })) : (React.createElement(ODCEmptyState, { title: \"Add\" }));\n};\nconst RenderEmptyState = ({ namespace }) => {\n    const resources = [\n        {\n            isList: true,\n            kind: 'DeploymentConfig',\n            namespace,\n            prop: 'deploymentConfigs',\n            limit: 1,\n        },\n        {\n            isList: true,\n            kind: 'Deployment',\n            namespace,\n            prop: 'deployments',\n            limit: 1,\n        },\n        {\n            isList: true,\n            kind: 'DaemonSet',\n            namespace,\n            prop: 'daemonSets',\n            limit: 1,\n        },\n        {\n            isList: true,\n            kind: 'StatefulSet',\n            namespace,\n            prop: 'statefulSets',\n            limit: 1,\n        },\n        {\n            isList: true,\n            kind: referenceForModel(ServiceModel),\n            namespace,\n            prop: 'knativeService',\n            optional: true,\n            limit: 1,\n        },\n    ];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(EmptyStateLoader, null)));\n};\nconst AddPage = ({ match }) => {\n    const namespace = match.params.ns;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"+Add\")),\n        React.createElement(NamespacedPage, null,\n            React.createElement(Firehose, { resources: [{ kind: 'Project', prop: 'projects', isList: true }] },\n                React.createElement(ProjectsExistWrapper, { title: \"Add\" }, namespace ? (React.createElement(RenderEmptyState, { namespace: namespace })) : (React.createElement(CreateProjectListPage, { onCreate: handleProjectCreate, title: \"Add\" })))))));\n};\nexport default AddPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/AddPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/AddPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { match as RMatch } from 'react-router';\nimport { history, Firehose, FirehoseResource, HintBlock } from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin';\nimport ODCEmptyState from './EmptyState';\nimport NamespacedPage from './NamespacedPage';\nimport ProjectsExistWrapper from './ProjectsExistWrapper';\nimport CreateProjectListPage from './projects/CreateProjectListPage';\n\nexport interface AddPageProps {\n  match: RMatch<{\n    ns?: string;\n  }>;\n}\n\ninterface ResourcesType {\n  deploymentConfigs?: K8sResourceKind;\n  deployments?: K8sResourceKind;\n  daemonSets?: K8sResourceKind;\n  statefulSets?: K8sResourceKind;\n  knativeService?: K8sResourceKind;\n}\ninterface EmptyStateLoaderProps {\n  resources?: ResourcesType;\n  loaded?: boolean;\n  loadError?: string;\n}\n\nconst handleProjectCreate = (project: K8sResourceKind) =>\n  history.push(`/add/ns/${project.metadata.name}`);\n\nconst EmptyStateLoader: React.FC<EmptyStateLoaderProps> = ({ resources, loaded, loadError }) => {\n  const [noWorkloads, setNoWorkloads] = React.useState(false);\n  const daemonSets = resources?.daemonSets?.data;\n  const deploymentConfigs = resources?.deploymentConfigs?.data;\n  const deployments = resources?.deployments?.data;\n  const statefulSets = resources?.statefulSets?.data;\n  const knativeService = resources?.knativeService?.data;\n\n  React.useEffect(() => {\n    if (loaded) {\n      setNoWorkloads(\n        _.isEmpty(daemonSets) &&\n          _.isEmpty(deploymentConfigs) &&\n          _.isEmpty(deployments) &&\n          _.isEmpty(statefulSets) &&\n          _.isEmpty(knativeService),\n      );\n    } else if (loadError) {\n      setNoWorkloads(false);\n    }\n  }, [loaded, loadError, daemonSets, deploymentConfigs, deployments, statefulSets, knativeService]);\n  return noWorkloads ? (\n    <ODCEmptyState\n      title=\"Add\"\n      hintBlock={\n        <HintBlock title=\"No workloads found\">\n          <p>\n            To add content to your project, create an application, component or service using one of\n            these options.\n          </p>\n        </HintBlock>\n      }\n    />\n  ) : (\n    <ODCEmptyState title=\"Add\" />\n  );\n};\n\nconst RenderEmptyState = ({ namespace }) => {\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      prop: 'deploymentConfigs',\n      limit: 1,\n    },\n    {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      prop: 'deployments',\n      limit: 1,\n    },\n    {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      prop: 'daemonSets',\n      limit: 1,\n    },\n    {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      prop: 'statefulSets',\n      limit: 1,\n    },\n    {\n      isList: true,\n      kind: referenceForModel(ServiceModel),\n      namespace,\n      prop: 'knativeService',\n      optional: true,\n      limit: 1,\n    },\n  ];\n  return (\n    <Firehose resources={resources}>\n      <EmptyStateLoader />\n    </Firehose>\n  );\n};\n\nconst AddPage: React.FC<AddPageProps> = ({ match }) => {\n  const namespace = match.params.ns;\n\n  return (\n    <>\n      <Helmet>\n        <title>+Add</title>\n      </Helmet>\n      <NamespacedPage>\n        <Firehose resources={[{ kind: 'Project', prop: 'projects', isList: true }]}>\n          <ProjectsExistWrapper title=\"Add\">\n            {namespace ? (\n              <RenderEmptyState namespace={namespace} />\n            ) : (\n              <CreateProjectListPage onCreate={handleProjectCreate} title=\"Add\" />\n            )}\n          </ProjectsExistWrapper>\n        </Firehose>\n      </NamespacedPage>\n    </>\n  );\n};\n\nexport default AddPage;\n"]}]}