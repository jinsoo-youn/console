{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/network/network-interface-model.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/network/network-interface-model.ts","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\nimport { READABLE_VIRTIO } from '../constants';\nexport class NetworkInterfaceModel extends ObjectEnum {\n    toString() {\n        if (this === NetworkInterfaceModel.VIRTIO) {\n            return READABLE_VIRTIO;\n        }\n        return this.value;\n    }\n}\nNetworkInterfaceModel.VIRTIO = new NetworkInterfaceModel('virtio');\nNetworkInterfaceModel.E1000 = new NetworkInterfaceModel('e1000');\nNetworkInterfaceModel.E1000E = new NetworkInterfaceModel('e1000e');\nNetworkInterfaceModel.NE2kPCI = new NetworkInterfaceModel('ne2kPCI');\nNetworkInterfaceModel.PCNET = new NetworkInterfaceModel('pcnet');\nNetworkInterfaceModel.RTL8139 = new NetworkInterfaceModel('rtl8139');\nNetworkInterfaceModel.ALL = Object.freeze(ObjectEnum.getAllClassEnumProperties(NetworkInterfaceModel));\nNetworkInterfaceModel.stringMapper = NetworkInterfaceModel.ALL.reduce((accumulator, networkInterfaceModel) => (Object.assign(Object.assign({}, accumulator), { [networkInterfaceModel.value]: networkInterfaceModel })), {});\nNetworkInterfaceModel.getAll = () => NetworkInterfaceModel.ALL;\nNetworkInterfaceModel.fromString = (model) => NetworkInterfaceModel.stringMapper[model];\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/network/network-interface-model.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/network/network-interface-model.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAE/C,MAAM,OAAO,qBAAsB,SAAQ,UAAkB;IAyB3D,QAAQ;QACN,IAAI,IAAI,KAAK,qBAAqB,CAAC,MAAM,EAAE;YACzC,OAAO,eAAe,CAAC;SACxB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;;AA7Be,4BAAM,GAAG,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC7C,2BAAK,GAAG,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAC;AAC3C,4BAAM,GAAG,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC7C,6BAAO,GAAG,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;AAC/C,2BAAK,GAAG,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAC;AAC3C,6BAAO,GAAG,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;AAEvC,yBAAG,GAAG,MAAM,CAAC,MAAM,CACzC,UAAU,CAAC,yBAAyB,CAAwB,qBAAqB,CAAC,CACnF,CAAC;AAEsB,kCAAY,GAAG,qBAAqB,CAAC,GAAG,CAAC,MAAM,CACrE,CAAC,WAAW,EAAE,qBAA4C,EAAE,EAAE,CAAC,iCAC1D,WAAW,KACd,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE,qBAAqB,IACpD,EACF,EAAE,CACH,CAAC;AAEK,4BAAM,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC,GAAG,CAAC;AAEzC,gCAAU,GAAG,CAAC,KAAa,EAAyB,EAAE,CAC3D,qBAAqB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC","sourcesContent":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\nimport { READABLE_VIRTIO } from '../constants';\n\nexport class NetworkInterfaceModel extends ObjectEnum<string> {\n  static readonly VIRTIO = new NetworkInterfaceModel('virtio');\n  static readonly E1000 = new NetworkInterfaceModel('e1000');\n  static readonly E1000E = new NetworkInterfaceModel('e1000e');\n  static readonly NE2kPCI = new NetworkInterfaceModel('ne2kPCI');\n  static readonly PCNET = new NetworkInterfaceModel('pcnet');\n  static readonly RTL8139 = new NetworkInterfaceModel('rtl8139');\n\n  private static readonly ALL = Object.freeze(\n    ObjectEnum.getAllClassEnumProperties<NetworkInterfaceModel>(NetworkInterfaceModel),\n  );\n\n  private static readonly stringMapper = NetworkInterfaceModel.ALL.reduce(\n    (accumulator, networkInterfaceModel: NetworkInterfaceModel) => ({\n      ...accumulator,\n      [networkInterfaceModel.value]: networkInterfaceModel,\n    }),\n    {},\n  );\n\n  static getAll = () => NetworkInterfaceModel.ALL;\n\n  static fromString = (model: string): NetworkInterfaceModel =>\n    NetworkInterfaceModel.stringMapper[model];\n\n  toString() {\n    if (this === NetworkInterfaceModel.VIRTIO) {\n      return READABLE_VIRTIO;\n    }\n    return this.value;\n  }\n}\n"]}]}