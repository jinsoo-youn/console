{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffStatusValidations.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffStatusValidations.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Alert, Expandable } from '@patternfly/react-core';\nimport { DaemonSetModel, PodModel } from '@console/internal/models';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { getName, getNamespace } from '@console/shared';\nimport { NODE_STATUS_STARTING_MAINTENANCE, HOST_STATUS_UNKNOWN, HOST_HEALTH_ERROR, NODE_STATUS_STOPPING_MAINTENANCE, } from '../../constants';\nimport './PowerOffStatusValidations.scss';\nexport const getStaticPods = (pods) => ((pods === null || pods === void 0 ? void 0 : pods.filter((pod) => {\n    var _a;\n    const annotations = ((_a = pod.metadata) === null || _a === void 0 ? void 0 : _a.annotations) || {};\n    return !!annotations['kubernetes.io/config.mirror'];\n})) || []).map((pod) => ({\n    name: getName(pod),\n    namespace: getNamespace(pod),\n    kind: PodModel.kind,\n}));\nexport const getDaemonSetsOfPods = (pods) => {\n    if (!pods) {\n        return [];\n    }\n    const namespaces = {};\n    pods.forEach((pod) => {\n        var _a, _b;\n        const ownerReferences = ((_b = (_a = pod.metadata) === null || _a === void 0 ? void 0 : _a.ownerReferences) === null || _b === void 0 ? void 0 : _b.filter((or) => or.kind === DaemonSetModel.kind)) || [];\n        ownerReferences.forEach((or) => {\n            namespaces[getNamespace(pod)] = namespaces[getNamespace(pod)] || [];\n            namespaces[getNamespace(pod)].push(or.name);\n        });\n    });\n    const result = _.flatten(Object.getOwnPropertyNames(namespaces).map((ns) => namespaces[ns].map((name) => ({\n        name,\n        namespace: ns,\n        kind: DaemonSetModel.kind,\n    }))));\n    return result;\n};\nconst ExpandableResources = ({ resources, onLinkClicked, subject, }) => {\n    const [isExpanded, setExpanded] = React.useState(false);\n    const onToggle = React.useCallback(() => setExpanded(!isExpanded), [isExpanded, setExpanded]);\n    const onLinkClick = React.useCallback((event) => {\n        onLinkClicked && (!event.key || event.key === 'Enter') && onLinkClicked();\n    }, [onLinkClicked]);\n    if (!resources || resources.length === 0) {\n        return null;\n    }\n    const toggleText = `${isExpanded ? 'Hide' : 'Show'} ${subject} (${resources.length})`;\n    return (React.createElement(Expandable, { onToggle: onToggle, isExpanded: isExpanded, toggleText: toggleText }, resources\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map((resource) => (React.createElement(\"div\", { onClick: onLinkClick, onKeyPress: onLinkClick, key: `${resource.name}-${resource.namespace}`, role: \"link\", tabIndex: 0 },\n        React.createElement(ResourceLink, { kind: resource.kind, name: resource.name, namespace: resource.namespace }))))));\n};\nexport const StatusValidations = ({ status, nodePods, loadError, onLinkClicked, }) => {\n    const validations = [];\n    const daemonSets = React.useMemo(() => getDaemonSetsOfPods(nodePods === null || nodePods === void 0 ? void 0 : nodePods.data), [nodePods]);\n    const staticPods = React.useMemo(() => getStaticPods(nodePods === null || nodePods === void 0 ? void 0 : nodePods.data), [nodePods]);\n    if (loadError) {\n        validations.push({\n            title: 'Failed to load data.',\n            description: 'Failed to load subresources.',\n            level: 'danger',\n        });\n    }\n    if ([HOST_STATUS_UNKNOWN, ...HOST_HEALTH_ERROR].includes(status)) {\n        validations.push({\n            title: 'The bare metal host is not healthy.',\n            description: 'The host cannot be powered off gracefully untils its health is restored.',\n            level: 'warning',\n        });\n    }\n    if (status === NODE_STATUS_STARTING_MAINTENANCE) {\n        validations.push({\n            title: 'The node is starting maintenance.',\n            description: 'The node cannot be powered off gracefully until it finishes entering maintenance.',\n            level: 'info',\n        });\n    }\n    if (status === NODE_STATUS_STOPPING_MAINTENANCE) {\n        validations.push({\n            title: 'The node is stopping maintenance.',\n            description: 'The node cannot be powered off gracefully while it is exiting maintenance.',\n            level: 'info',\n        });\n    }\n    if (daemonSets.length > 0) {\n        validations.push({\n            title: 'This node contains DaemonSet pods.',\n            description: 'These DaemonSets will prevent some pods from being moved. This should not prevent the host from powering off gracefully.',\n            level: 'info',\n            detail: (React.createElement(ExpandableResources, { subject: \"daemon sets\", resources: daemonSets, onLinkClicked: onLinkClicked })),\n        });\n    }\n    if (staticPods.length > 0) {\n        validations.push({\n            title: 'This host contains unmanaged static pods.',\n            description: 'These pods must be moved manually to continue running after the host powers off.',\n            level: 'warning',\n            detail: (React.createElement(ExpandableResources, { subject: \"unmanaged pods\", resources: staticPods, onLinkClicked: onLinkClicked })),\n        });\n    }\n    return (React.createElement(\"div\", { className: \"metal3-poweroff-validations\" }, validations.map((validation) => (React.createElement(Alert, { variant: validation.level, isInline: true, title: validation.title, key: validation.title },\n        validation.description,\n        validation.detail)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffStatusValidations.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffStatusValidations.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Alert, Expandable } from '@patternfly/react-core';\nimport { DaemonSetModel, PodModel } from '@console/internal/models';\nimport { FirehoseResult, ResourceLink } from '@console/internal/components/utils';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { getName, getNamespace } from '@console/shared';\nimport {\n  NODE_STATUS_STARTING_MAINTENANCE,\n  HOST_STATUS_UNKNOWN,\n  HOST_HEALTH_ERROR,\n  NODE_STATUS_STOPPING_MAINTENANCE,\n} from '../../constants';\n\nimport './PowerOffStatusValidations.scss';\n\ntype StatusValidationProps = {\n  status: string;\n  nodePods: FirehoseResult<PodKind[]>;\n  loadError?: any;\n  onLinkClicked?: () => void;\n};\n\ntype ExpandableResourcesProps = {\n  resources: {\n    name: string;\n    namespace: string;\n    kind: string;\n  }[];\n  onLinkClicked?: () => void;\n  subject: string;\n};\n\nexport const getStaticPods = (pods?: PodKind[]) =>\n  (\n    pods?.filter((pod) => {\n      const annotations = pod.metadata?.annotations || {};\n      return !!annotations['kubernetes.io/config.mirror'];\n    }) || []\n  ).map((pod) => ({\n    name: getName(pod),\n    namespace: getNamespace(pod),\n    kind: PodModel.kind,\n  }));\n\nexport const getDaemonSetsOfPods = (pods?: PodKind[]) => {\n  if (!pods) {\n    return [];\n  }\n\n  const namespaces: { [key: string]: string[] } = {};\n  pods.forEach((pod) => {\n    const ownerReferences =\n      pod.metadata?.ownerReferences?.filter((or) => or.kind === DaemonSetModel.kind) || [];\n    ownerReferences.forEach((or) => {\n      namespaces[getNamespace(pod)] = namespaces[getNamespace(pod)] || [];\n      namespaces[getNamespace(pod)].push(or.name);\n    });\n  });\n\n  const result = _.flatten(\n    Object.getOwnPropertyNames(namespaces).map((ns) =>\n      namespaces[ns].map((name) => ({\n        name,\n        namespace: ns,\n        kind: DaemonSetModel.kind,\n      })),\n    ),\n  );\n  return result;\n};\n\nconst ExpandableResources: React.FC<ExpandableResourcesProps> = ({\n  resources,\n  onLinkClicked,\n  subject,\n}) => {\n  const [isExpanded, setExpanded] = React.useState(false);\n  const onToggle = React.useCallback(() => setExpanded(!isExpanded), [isExpanded, setExpanded]);\n  const onLinkClick = React.useCallback(\n    (event) => {\n      onLinkClicked && (!event.key || event.key === 'Enter') && onLinkClicked();\n    },\n    [onLinkClicked],\n  );\n\n  if (!resources || resources.length === 0) {\n    return null;\n  }\n\n  const toggleText = `${isExpanded ? 'Hide' : 'Show'} ${subject} (${resources.length})`;\n\n  return (\n    <Expandable onToggle={onToggle} isExpanded={isExpanded} toggleText={toggleText}>\n      {resources\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map((resource) => (\n          <div\n            onClick={onLinkClick}\n            onKeyPress={onLinkClick}\n            key={`${resource.name}-${resource.namespace}`}\n            role=\"link\"\n            tabIndex={0}\n          >\n            <ResourceLink\n              kind={resource.kind}\n              name={resource.name}\n              namespace={resource.namespace}\n            />\n          </div>\n        ))}\n    </Expandable>\n  );\n};\n\nexport const StatusValidations: React.FC<StatusValidationProps> = ({\n  status,\n  nodePods,\n  loadError,\n  onLinkClicked,\n}) => {\n  const validations = [];\n  const daemonSets = React.useMemo(() => getDaemonSetsOfPods(nodePods?.data), [nodePods]);\n  const staticPods = React.useMemo(() => getStaticPods(nodePods?.data), [nodePods]);\n\n  if (loadError) {\n    validations.push({\n      title: 'Failed to load data.',\n      description: 'Failed to load subresources.',\n      level: 'danger',\n    });\n  }\n\n  if ([HOST_STATUS_UNKNOWN, ...HOST_HEALTH_ERROR].includes(status)) {\n    validations.push({\n      title: 'The bare metal host is not healthy.',\n      description: 'The host cannot be powered off gracefully untils its health is restored.',\n      level: 'warning',\n    });\n  }\n\n  if (status === NODE_STATUS_STARTING_MAINTENANCE) {\n    validations.push({\n      title: 'The node is starting maintenance.',\n      description:\n        'The node cannot be powered off gracefully until it finishes entering maintenance.',\n      level: 'info',\n    });\n  }\n\n  if (status === NODE_STATUS_STOPPING_MAINTENANCE) {\n    validations.push({\n      title: 'The node is stopping maintenance.',\n      description: 'The node cannot be powered off gracefully while it is exiting maintenance.',\n      level: 'info',\n    });\n  }\n\n  if (daemonSets.length > 0) {\n    validations.push({\n      title: 'This node contains DaemonSet pods.',\n      description:\n        'These DaemonSets will prevent some pods from being moved. This should not prevent the host from powering off gracefully.',\n      level: 'info',\n      detail: (\n        <ExpandableResources\n          subject=\"daemon sets\"\n          resources={daemonSets}\n          onLinkClicked={onLinkClicked}\n        />\n      ),\n    });\n  }\n\n  if (staticPods.length > 0) {\n    validations.push({\n      title: 'This host contains unmanaged static pods.',\n      description:\n        'These pods must be moved manually to continue running after the host powers off.',\n      level: 'warning',\n      detail: (\n        <ExpandableResources\n          subject=\"unmanaged pods\"\n          resources={staticPods}\n          onLinkClicked={onLinkClicked}\n        />\n      ),\n    });\n  }\n\n  return (\n    <div className=\"metal3-poweroff-validations\">\n      {validations.map((validation) => (\n        <Alert variant={validation.level} isInline title={validation.title} key={validation.title}>\n          {validation.description}\n          {validation.detail}\n        </Alert>\n      ))}\n    </div>\n  );\n};\n"]}]}