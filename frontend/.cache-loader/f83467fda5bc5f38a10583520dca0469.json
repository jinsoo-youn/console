{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withContextMenu.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withContextMenu.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport ElementContext from '../utils/ElementContext';\nimport ContextMenu from '../components/contextmenu/ContextMenu';\nexport const withContextMenu = (actions, container, className, atPoint = true) => (WrappedComponent) => {\n    const Component = (props) => {\n        const element = React.useContext(ElementContext);\n        const [reference, setReference] = React.useState(null);\n        const onContextMenu = React.useCallback((e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setReference(atPoint\n                ? {\n                    x: e.pageX,\n                    y: e.pageY,\n                }\n                : e.currentTarget);\n        }, []);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(WrappedComponent, Object.assign({}, props, { onContextMenu: onContextMenu, contextMenuOpen: !!reference })),\n            reference ? (React.createElement(ContextMenu, { reference: reference, container: container, className: className, open: true, onRequestClose: () => setReference(null) }, actions(element))) : null));\n    };\n    return observer(Component);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withContextMenu.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withContextMenu.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,cAAc,MAAM,yBAAyB,CAAC;AACrD,OAAO,WAAW,MAAM,uCAAuC,CAAC;AAShE,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,OAA6C,EAC7C,SAAwD,EACxD,SAAkB,EAClB,UAAmB,IAAI,EACvB,EAAE,CAAC,CAAiC,gBAAwC,EAAE,EAAE;IAChF,MAAM,SAAS,GAAkD,CAAC,KAAK,EAAE,EAAE;QACzE,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACjD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAmB,IAAI,CAAC,CAAC;QACzE,MAAM,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAmB,EAAE,EAAE;YAC9D,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,YAAY,CACV,OAAO;gBACL,CAAC,CAAC;oBACE,CAAC,EAAE,CAAC,CAAC,KAAK;oBACV,CAAC,EAAE,CAAC,CAAC,KAAK;iBACX;gBACH,CAAC,CAAC,CAAC,CAAC,aAAa,CACpB,CAAC;QACJ,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,CACL;YACE,oBAAC,gBAAgB,oBACV,KAAa,IAClB,aAAa,EAAE,aAAa,EAC5B,eAAe,EAAE,CAAC,CAAC,SAAS,IAC5B;YACD,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,WAAW,IACV,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,SAAS,EACpB,IAAI,QACJ,cAAc,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAEvC,OAAO,CAAC,OAAY,CAAC,CACV,CACf,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CAAC;IACJ,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { GraphElement as TopologyElement } from '../types';\nimport ElementContext from '../utils/ElementContext';\nimport ContextMenu from '../components/contextmenu/ContextMenu';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport type WithContextMenuProps = {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n};\n\nexport const withContextMenu = <E extends TopologyElement>(\n  actions: (element: E) => React.ReactElement[],\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<P>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ContextMenu\n            reference={reference}\n            container={container}\n            className={className}\n            open\n            onRequestClose={() => setReference(null)}\n          >\n            {actions(element as E)}\n          </ContextMenu>\n        ) : null}\n      </>\n    );\n  };\n  return observer(Component);\n};\n"]}]}