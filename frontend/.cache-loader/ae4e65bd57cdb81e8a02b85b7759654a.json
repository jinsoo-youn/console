{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/list/HelmReleaseList.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/list/HelmReleaseList.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { EmptyState, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { SecretModel } from '@console/internal/models';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport CustomResourceList from '../../custom-resource-list/CustomResourceList';\nimport { helmReleasesRowFilters, filterHelmReleasesByName, filterHelmReleasesByStatus, fetchHelmReleases, } from '../helm-utils';\nimport HelmReleaseListRow from './HelmReleaseListRow';\nimport HelmReleaseListHeader from './HelmReleaseListHeader';\nimport './HelmReleaseList.scss';\nconst HelmReleaseList = ({ namespace }) => {\n    var _a;\n    const secretsCountRef = React.useRef(0);\n    const [releasesLoaded, setReleasesLoaded] = React.useState(false);\n    const [loadError, setLoadError] = React.useState();\n    const [releases, setReleases] = React.useState([]);\n    const secretResource = React.useMemo(() => ({\n        isList: true,\n        namespace,\n        kind: SecretModel.kind,\n        namespaced: true,\n        optional: true,\n        selector: { matchLabels: { owner: 'helm' } },\n    }), [namespace]);\n    const [secretsData, secretsLoaded, secretsLoadError] = useK8sWatchResource(secretResource);\n    const newCount = (_a = secretsData === null || secretsData === void 0 ? void 0 : secretsData.length) !== null && _a !== void 0 ? _a : 0;\n    React.useEffect(() => {\n        setReleasesLoaded(false);\n        secretsCountRef.current = 0;\n    }, [namespace]);\n    React.useEffect(() => {\n        let destroyed = false;\n        if (secretsLoaded && !secretsLoadError) {\n            if (newCount === 0) {\n                setLoadError(null);\n                setReleasesLoaded(true);\n                setReleases([]);\n            }\n            else if (newCount !== secretsCountRef.current) {\n                setReleasesLoaded(false);\n                fetchHelmReleases(namespace)\n                    .then((helmReleases) => {\n                    if (!destroyed) {\n                        setReleases(helmReleases);\n                        setReleasesLoaded(true);\n                        setLoadError(null);\n                    }\n                })\n                    .catch((err) => {\n                    if (!destroyed) {\n                        setReleasesLoaded(true);\n                        setLoadError(err.message || 'Unable to load Helm Releases');\n                    }\n                });\n            }\n            secretsCountRef.current = newCount;\n        }\n        return () => {\n            destroyed = true;\n        };\n    }, [namespace, newCount, secretsLoadError, secretsLoaded]);\n    if (secretsLoadError || loadError) {\n        return React.createElement(StatusBox, { loaded: true, loadError: secretsLoadError || loadError, label: \"Helm Releases\" });\n    }\n    const emptyState = () => {\n        const helmImage = () => (React.createElement(\"img\", { className: \"odc-helm-release__empty-list__image\", src: getImageForIconClass('icon-helm'), alt: \"\" }));\n        const installURL = { pathname: `/catalog/ns/${namespace}`, search: '?kind=%5B\"HelmChart\"%5D' };\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n            React.createElement(\"p\", { className: \"odc-helm-release__empty-list__title\" }, \"No Helm Releases found\"),\n            React.createElement(EmptyStateIcon, { variant: \"container\", component: helmImage }),\n            React.createElement(Link, { to: installURL }, \"Install a Helm Chart from the developer catalog\")));\n    };\n    return (React.createElement(CustomResourceList, { resources: releases, loaded: secretsLoaded && releasesLoaded && newCount === secretsCountRef.current, EmptyMsg: emptyState, queryArg: \"rowFilter-helm-release-status\", textFilter: \"name\", rowFilters: helmReleasesRowFilters, sortBy: \"name\", sortOrder: SortByDirection.asc, rowFilterReducer: filterHelmReleasesByStatus, textFilterReducer: filterHelmReleasesByName, resourceRow: HelmReleaseListRow, resourceHeader: HelmReleaseListHeader }));\n};\nexport default HelmReleaseList;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/list/HelmReleaseList.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/list/HelmReleaseList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { EmptyState, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { SecretModel } from '@console/internal/models';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport CustomResourceList from '../../custom-resource-list/CustomResourceList';\nimport {\n  helmReleasesRowFilters,\n  filterHelmReleasesByName,\n  filterHelmReleasesByStatus,\n  fetchHelmReleases,\n} from '../helm-utils';\nimport HelmReleaseListRow from './HelmReleaseListRow';\nimport HelmReleaseListHeader from './HelmReleaseListHeader';\n\nimport './HelmReleaseList.scss';\n\ninterface HelmReleaseListProps {\n  namespace: string;\n}\n\nconst HelmReleaseList: React.FC<HelmReleaseListProps> = ({ namespace }) => {\n  const secretsCountRef = React.useRef<number>(0);\n  const [releasesLoaded, setReleasesLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>();\n  const [releases, setReleases] = React.useState([]);\n  const secretResource = React.useMemo(\n    () => ({\n      isList: true,\n      namespace,\n      kind: SecretModel.kind,\n      namespaced: true,\n      optional: true,\n      selector: { matchLabels: { owner: 'helm' } },\n    }),\n    [namespace],\n  );\n  const [secretsData, secretsLoaded, secretsLoadError] = useK8sWatchResource<K8sResourceKind[]>(\n    secretResource,\n  );\n  const newCount = secretsData?.length ?? 0;\n\n  React.useEffect(() => {\n    setReleasesLoaded(false);\n    secretsCountRef.current = 0;\n  }, [namespace]);\n\n  React.useEffect(() => {\n    let destroyed = false;\n    if (secretsLoaded && !secretsLoadError) {\n      if (newCount === 0) {\n        setLoadError(null);\n        setReleasesLoaded(true);\n        setReleases([]);\n      } else if (newCount !== secretsCountRef.current) {\n        setReleasesLoaded(false);\n        fetchHelmReleases(namespace)\n          .then((helmReleases) => {\n            if (!destroyed) {\n              setReleases(helmReleases);\n              setReleasesLoaded(true);\n              setLoadError(null);\n            }\n          })\n          .catch((err) => {\n            if (!destroyed) {\n              setReleasesLoaded(true);\n              setLoadError(err.message || 'Unable to load Helm Releases');\n            }\n          });\n      }\n      secretsCountRef.current = newCount;\n    }\n    return () => {\n      destroyed = true;\n    };\n  }, [namespace, newCount, secretsLoadError, secretsLoaded]);\n\n  if (secretsLoadError || loadError) {\n    return <StatusBox loaded loadError={secretsLoadError || loadError} label=\"Helm Releases\" />;\n  }\n\n  const emptyState = () => {\n    const helmImage = () => (\n      <img\n        className=\"odc-helm-release__empty-list__image\"\n        src={getImageForIconClass('icon-helm')}\n        alt=\"\"\n      />\n    );\n    const installURL = { pathname: `/catalog/ns/${namespace}`, search: '?kind=%5B\"HelmChart\"%5D' };\n    return (\n      <EmptyState variant={EmptyStateVariant.full}>\n        <p className=\"odc-helm-release__empty-list__title\">No Helm Releases found</p>\n        <EmptyStateIcon variant=\"container\" component={helmImage} />\n        <Link to={installURL}>Install a Helm Chart from the developer catalog</Link>\n      </EmptyState>\n    );\n  };\n\n  return (\n    <CustomResourceList\n      resources={releases}\n      loaded={secretsLoaded && releasesLoaded && newCount === secretsCountRef.current}\n      EmptyMsg={emptyState}\n      queryArg=\"rowFilter-helm-release-status\"\n      textFilter=\"name\"\n      rowFilters={helmReleasesRowFilters}\n      sortBy=\"name\"\n      sortOrder={SortByDirection.asc}\n      rowFilterReducer={filterHelmReleasesByStatus}\n      textFilterReducer={filterHelmReleasesByName}\n      resourceRow={HelmReleaseListRow}\n      resourceHeader={HelmReleaseListHeader}\n    />\n  );\n};\n\nexport default HelmReleaseList;\n"]}]}