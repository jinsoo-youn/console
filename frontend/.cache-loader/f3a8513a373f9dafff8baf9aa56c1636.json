{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/container.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/container.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Status } from '@console/shared';\nimport * as k8sProbe from '../module/k8s/probe';\nimport { getContainerState, getContainerStatus, getPullPolicyLabel } from '../module/k8s/container';\nimport { Firehose, HorizontalNav, MsgBox, NodeLink, PageHeading, ResourceLink, ScrollToTopOnMount, SectionHeading, Timestamp, } from './utils';\nimport { resourcePath } from './utils/resource-link';\nconst formatComputeResources = (resources) => _.map(resources, (v, k) => `${k}: ${v}`).join(', ');\nconst getResourceRequestsValue = (container) => {\n    const requests = _.get(container, 'resources.requests');\n    return formatComputeResources(requests);\n};\nconst getResourceLimitsValue = (container) => {\n    const limits = _.get(container, 'resources.limits');\n    return formatComputeResources(limits);\n};\nconst Lifecycle = ({ lifecycle }) => {\n    const fields = lifecycle && k8sProbe.mapLifecycleConfigToFields(lifecycle);\n    const postStart = _.get(fields, 'postStart.cmd');\n    const preStop = _.get(fields, 'preStop.cmd');\n    const label = (stage) => lifecycle && k8sProbe.getLifecycleHookLabel(lifecycle, stage);\n    return (React.createElement(\"div\", null,\n        postStart && (React.createElement(\"div\", null,\n            React.createElement(\"span\", null,\n                \"PostStart: \",\n                label('postStart')),\n            \" \",\n            React.createElement(\"code\", null, postStart))),\n        preStop && (React.createElement(\"div\", null,\n            React.createElement(\"span\", null,\n                \"PreStop: \",\n                label('preStop')),\n            \" \",\n            React.createElement(\"code\", null, preStop))),\n        !postStart && !preStop && '-'));\n};\nLifecycle.displayName = 'Lifecycle';\nconst Probe = ({ probe, podIP }) => {\n    const label = probe && k8sProbe.getActionLabelFromObject(probe);\n    const value = probe && _.get(k8sProbe.mapProbeToFields(probe, podIP), 'cmd');\n    if (!value) {\n        return React.createElement(React.Fragment, null, \"-\");\n    }\n    const isMultiline = value.indexOf('\\n') !== -1;\n    const formattedValue = isMultiline ? React.createElement(\"pre\", null, value) : React.createElement(\"code\", null, value);\n    return (React.createElement(React.Fragment, null,\n        label,\n        \" \",\n        formattedValue));\n};\nProbe.displayName = 'Probe';\nconst Ports = ({ ports }) => {\n    if (!ports || !ports.length) {\n        return (React.createElement(MsgBox, { className: \"co-sysevent-stream__status-box-empty\", title: \"No ports have been exposed\", detail: \"Ports allow for traffic to enter this container\" }));\n    }\n    return (React.createElement(\"table\", { className: \"table\" },\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null,\n                React.createElement(\"th\", null, \"Name\"),\n                React.createElement(\"th\", null, \"Container\"))),\n        React.createElement(\"tbody\", null, ports.map((p, i) => (React.createElement(\"tr\", { key: i },\n            React.createElement(\"td\", null, p.name || '-'),\n            React.createElement(\"td\", null, p.containerPort)))))));\n};\nconst VolumeMounts = ({ volumeMounts }) => {\n    if (!volumeMounts || !volumeMounts.length) {\n        return (React.createElement(MsgBox, { className: \"co-sysevent-stream__status-box-empty\", title: \"No volumes have been mounted\", detail: \"Volumes allow data to be shared as files with the pod\" }));\n    }\n    return (React.createElement(\"table\", { className: \"table table--layout-fixed\" },\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null,\n                React.createElement(\"th\", null, \"Access\"),\n                React.createElement(\"th\", null, \"Location\"),\n                React.createElement(\"th\", null, \"Mount Path\"))),\n        React.createElement(\"tbody\", null, volumeMounts.map((v) => (React.createElement(\"tr\", { key: v.name },\n            React.createElement(\"td\", null, v.readOnly === true ? 'Read Only' : 'Read / Write'),\n            React.createElement(\"td\", { className: \"co-break-all co-select-to-copy\" }, v.name),\n            React.createElement(\"td\", null, v.mountPath ? (React.createElement(\"div\", { className: \"co-break-all co-select-to-copy\" }, v.mountPath)) : ('-'))))))));\n};\nVolumeMounts.displayName = 'VolumeMounts';\nconst Env = ({ env }) => {\n    if (!env || !env.length) {\n        return (React.createElement(MsgBox, { className: \"co-sysevent-stream__status-box-empty\", title: \"No variables have been set\", detail: \"An easy way to pass configuration values\" }));\n    }\n    const value = (e) => {\n        const v = e.valueFrom;\n        if (_.has(v, 'fieldRef')) {\n            return `field: ${v.fieldRef.fieldPath}`;\n        }\n        else if (_.has(v, 'resourceFieldRef')) {\n            return `resource: ${v.resourceFieldRef.resource}`;\n        }\n        else if (_.has(v, 'configMapKeyRef')) {\n            return `config-map: ${v.configMapKeyRef.name}/${v.configMapKeyRef.key}`;\n        }\n        else if (_.has(v, 'secretKeyRef')) {\n            return `secret: ${v.secretKeyRef.name}/${v.secretKeyRef.key}`;\n        }\n        return e.value;\n    };\n    return (React.createElement(\"table\", { className: \"table\" },\n        React.createElement(\"thead\", null,\n            React.createElement(\"tr\", null,\n                React.createElement(\"th\", null, \"Name\"),\n                React.createElement(\"th\", null, \"Value\"))),\n        React.createElement(\"tbody\", null, env.map((e, i) => (React.createElement(\"tr\", { key: i },\n            React.createElement(\"td\", null, e.name),\n            React.createElement(\"td\", null, value(e))))))));\n};\nEnv.displayName = 'Env';\n// Split image string into the image name and tag.\nconst getImageNameAndTag = (image) => {\n    if (!image) {\n        return { imageName: null, imageTag: null };\n    }\n    const index = image.lastIndexOf(':');\n    if (index === -1 || _.includes(image, '@sha256:')) {\n        return { imageName: image, imageTag: null };\n    }\n    const imageName = image.substr(0, index);\n    const imageTag = image.substr(index + 1);\n    return { imageName, imageTag };\n};\nconst ContainerDetails = (props) => {\n    const pod = props.obj;\n    const container = _.find(pod.spec.containers, { name: props.match.params.name }) ||\n        _.find(pod.spec.initContainers, { name: props.match.params.name });\n    if (!container) {\n        return null;\n    }\n    const status = getContainerStatus(pod, container.name) || {};\n    const state = getContainerState(status);\n    const stateValue = state.value === 'terminated' && _.isFinite(state.exitCode)\n        ? `${state.label} with exit code ${state.exitCode}`\n        : state.label;\n    const { imageName, imageTag } = getImageNameAndTag(container.image);\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(ScrollToTopOnMount, null),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Container Details\" }),\n                React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                    React.createElement(\"dt\", null, \"State\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Status, { status: stateValue })),\n                    React.createElement(\"dt\", null, \"ID\"),\n                    React.createElement(\"dd\", null, status.containerID ? (React.createElement(\"div\", { className: \"co-break-all co-select-to-copy\" }, status.containerID)) : ('-')),\n                    React.createElement(\"dt\", null, \"Restarts\"),\n                    React.createElement(\"dd\", null, status.restartCount),\n                    React.createElement(\"dt\", null, \"Resource Requests\"),\n                    React.createElement(\"dd\", null, getResourceRequestsValue(container) || '-'),\n                    React.createElement(\"dt\", null, \"Resource Limits\"),\n                    React.createElement(\"dd\", null, getResourceLimitsValue(container) || '-'),\n                    React.createElement(\"dt\", null, \"Lifecycle Hooks\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Lifecycle, { lifecycle: container.lifecycle })),\n                    React.createElement(\"dt\", null, \"Readiness Probe\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Probe, { probe: container.readinessProbe, podIP: pod.status.podIP || '-' })),\n                    React.createElement(\"dt\", null, \"Liveness Probe\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Probe, { probe: container.livenessProbe, podIP: pod.status.podIP || '-' })),\n                    React.createElement(\"dt\", null, \"Started\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Timestamp, { timestamp: state.startedAt })),\n                    React.createElement(\"dt\", null, \"Finished\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Timestamp, { timestamp: state.finishedAt })),\n                    React.createElement(\"dt\", null, \"Pod\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(ResourceLink, { kind: \"Pod\", name: props.match.params.podName, namespace: props.match.params.ns })))),\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Image Details\" }),\n                React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                    React.createElement(\"dt\", null, \"Image\"),\n                    React.createElement(\"dd\", null, imageName ? React.createElement(\"div\", { className: \"co-break-all co-select-to-copy\" }, imageName) : '-'),\n                    React.createElement(\"dt\", null, \"Image Version/Tag\"),\n                    React.createElement(\"dd\", null, imageTag || '-'),\n                    React.createElement(\"dt\", null, \"Command\"),\n                    React.createElement(\"dd\", null, container.command ? (React.createElement(\"pre\", null,\n                        React.createElement(\"code\", null, container.command.join(' ')))) : (React.createElement(\"span\", null, \"-\"))),\n                    React.createElement(\"dt\", null, \"Args\"),\n                    React.createElement(\"dd\", null, container.args ? (React.createElement(\"pre\", null,\n                        React.createElement(\"code\", null, container.args.join(' ')))) : (React.createElement(\"span\", null, \"-\"))),\n                    React.createElement(\"dt\", null, \"Pull Policy\"),\n                    React.createElement(\"dd\", null, getPullPolicyLabel(container)))),\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Network\" }),\n                React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                    React.createElement(\"dt\", null, \"Node\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(NodeLink, { name: pod.spec.nodeName })),\n                    React.createElement(\"dt\", null, \"Pod IP\"),\n                    React.createElement(\"dd\", null, pod.status.podIP || '-')))),\n        React.createElement(\"hr\", null),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Ports\" }),\n                React.createElement(\"div\", { className: \"co-table-container\" },\n                    React.createElement(Ports, { ports: container.ports }))),\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Mounted Volumes\" }),\n                React.createElement(\"div\", { className: \"co-table-container\" },\n                    React.createElement(VolumeMounts, { volumeMounts: container.volumeMounts }))),\n            React.createElement(\"div\", { className: \"col-lg-4\" },\n                React.createElement(SectionHeading, { text: \"Environment Variables\" }),\n                React.createElement(\"div\", { className: \"co-table-container\" },\n                    React.createElement(Env, { env: container.env }))))));\n};\nContainerDetails.displayName = 'ContainerDetails';\nexport const ContainersDetailsPage = (props) => (React.createElement(\"div\", null,\n    React.createElement(Firehose, { resources: [\n            {\n                name: props.match.params.podName,\n                namespace: props.match.params.ns,\n                kind: 'Pod',\n                isList: false,\n                prop: 'obj',\n            },\n        ] },\n        React.createElement(PageHeading, { detail: true, title: props.match.params.name, kind: \"Container\", breadcrumbsFor: () => [\n                { name: 'Pods', path: `/k8s/ns/${props.match.params.ns}/pods` },\n                {\n                    name: props.match.params.podName,\n                    path: resourcePath('Pod', props.match.params.podName, props.match.params.ns),\n                },\n                { name: 'Container Details', path: props.match.url },\n            ] }),\n        React.createElement(HorizontalNav, { hideNav: true, pages: [{ name: 'container', href: '', component: ContainerDetails }], match: props.match }))));\nContainersDetailsPage.displayName = 'ContainersDetailsPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/container.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/container.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { Status } from '@console/shared';\nimport {\n  ContainerLifecycle,\n  ContainerLifecycleStage,\n  ContainerPort,\n  ContainerProbe,\n  ContainerSpec,\n  ContainerStatus,\n  EnvVar,\n  PodKind,\n  ResourceList,\n  VolumeMount,\n} from '../module/k8s';\nimport * as k8sProbe from '../module/k8s/probe';\nimport { getContainerState, getContainerStatus, getPullPolicyLabel } from '../module/k8s/container';\nimport {\n  Firehose,\n  HorizontalNav,\n  MsgBox,\n  NodeLink,\n  PageHeading,\n  ResourceLink,\n  ScrollToTopOnMount,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { resourcePath } from './utils/resource-link';\n\nconst formatComputeResources = (resources: ResourceList) =>\n  _.map(resources, (v, k) => `${k}: ${v}`).join(', ');\n\nconst getResourceRequestsValue = (container: ContainerSpec) => {\n  const requests: ResourceList = _.get(container, 'resources.requests');\n  return formatComputeResources(requests);\n};\n\nconst getResourceLimitsValue = (container: ContainerSpec) => {\n  const limits: ResourceList = _.get(container, 'resources.limits');\n  return formatComputeResources(limits);\n};\n\nconst Lifecycle: React.FC<LifecycleProps> = ({ lifecycle }) => {\n  const fields = lifecycle && k8sProbe.mapLifecycleConfigToFields(lifecycle);\n  const postStart = _.get(fields, 'postStart.cmd');\n  const preStop = _.get(fields, 'preStop.cmd');\n\n  const label = (stage: ContainerLifecycleStage) =>\n    lifecycle && k8sProbe.getLifecycleHookLabel(lifecycle, stage);\n  return (\n    <div>\n      {postStart && (\n        <div>\n          <span>PostStart: {label('postStart')}</span> <code>{postStart}</code>\n        </div>\n      )}\n      {preStop && (\n        <div>\n          <span>PreStop: {label('preStop')}</span> <code>{preStop}</code>\n        </div>\n      )}\n      {!postStart && !preStop && '-'}\n    </div>\n  );\n};\nLifecycle.displayName = 'Lifecycle';\n\nconst Probe: React.FC<ProbeProps> = ({ probe, podIP }) => {\n  const label = probe && k8sProbe.getActionLabelFromObject(probe);\n  const value = probe && _.get(k8sProbe.mapProbeToFields(probe, podIP), 'cmd');\n  if (!value) {\n    return <>-</>;\n  }\n  const isMultiline = value.indexOf('\\n') !== -1;\n  const formattedValue = isMultiline ? <pre>{value}</pre> : <code>{value}</code>;\n  return (\n    <>\n      {label} {formattedValue}\n    </>\n  );\n};\nProbe.displayName = 'Probe';\n\nconst Ports: React.FC<PortsProps> = ({ ports }) => {\n  if (!ports || !ports.length) {\n    return (\n      <MsgBox\n        className=\"co-sysevent-stream__status-box-empty\"\n        title=\"No ports have been exposed\"\n        detail=\"Ports allow for traffic to enter this container\"\n      />\n    );\n  }\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Container</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ports.map((p: ContainerPort, i: number) => (\n          <tr key={i}>\n            <td>{p.name || '-'}</td>\n            <td>{p.containerPort}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst VolumeMounts: React.FC<VolumeMountProps> = ({ volumeMounts }) => {\n  if (!volumeMounts || !volumeMounts.length) {\n    return (\n      <MsgBox\n        className=\"co-sysevent-stream__status-box-empty\"\n        title=\"No volumes have been mounted\"\n        detail=\"Volumes allow data to be shared as files with the pod\"\n      />\n    );\n  }\n\n  return (\n    <table className=\"table table--layout-fixed\">\n      <thead>\n        <tr>\n          <th>Access</th>\n          <th>Location</th>\n          <th>Mount Path</th>\n        </tr>\n      </thead>\n      <tbody>\n        {volumeMounts.map((v: VolumeMount) => (\n          <tr key={v.name}>\n            <td>{v.readOnly === true ? 'Read Only' : 'Read / Write'}</td>\n            <td className=\"co-break-all co-select-to-copy\">{v.name}</td>\n            <td>\n              {v.mountPath ? (\n                <div className=\"co-break-all co-select-to-copy\">{v.mountPath}</div>\n              ) : (\n                '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nVolumeMounts.displayName = 'VolumeMounts';\n\nconst Env: React.FC<EnvProps> = ({ env }) => {\n  if (!env || !env.length) {\n    return (\n      <MsgBox\n        className=\"co-sysevent-stream__status-box-empty\"\n        title=\"No variables have been set\"\n        detail=\"An easy way to pass configuration values\"\n      />\n    );\n  }\n\n  const value = (e: EnvVar) => {\n    const v = e.valueFrom;\n    if (_.has(v, 'fieldRef')) {\n      return `field: ${v.fieldRef.fieldPath}`;\n    } else if (_.has(v, 'resourceFieldRef')) {\n      return `resource: ${v.resourceFieldRef.resource}`;\n    } else if (_.has(v, 'configMapKeyRef')) {\n      return `config-map: ${v.configMapKeyRef.name}/${v.configMapKeyRef.key}`;\n    } else if (_.has(v, 'secretKeyRef')) {\n      return `secret: ${v.secretKeyRef.name}/${v.secretKeyRef.key}`;\n    }\n    return e.value;\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {env.map((e: EnvVar, i: number) => (\n          <tr key={i}>\n            <td>{e.name}</td>\n            <td>{value(e)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nEnv.displayName = 'Env';\n\n// Split image string into the image name and tag.\nconst getImageNameAndTag = (image: string) => {\n  if (!image) {\n    return { imageName: null, imageTag: null };\n  }\n  const index = image.lastIndexOf(':');\n  if (index === -1 || _.includes(image, '@sha256:')) {\n    return { imageName: image, imageTag: null };\n  }\n  const imageName = image.substr(0, index);\n  const imageTag = image.substr(index + 1);\n  return { imageName, imageTag };\n};\n\nconst ContainerDetails: React.FC<ContainerDetailsProps> = (props) => {\n  const pod = props.obj;\n  const container =\n    (_.find(pod.spec.containers, { name: props.match.params.name }) as ContainerSpec) ||\n    (_.find(pod.spec.initContainers, { name: props.match.params.name }) as ContainerSpec);\n  if (!container) {\n    return null;\n  }\n\n  const status: ContainerStatus =\n    getContainerStatus(pod, container.name) || ({} as ContainerStatus);\n  const state = getContainerState(status);\n  const stateValue =\n    state.value === 'terminated' && _.isFinite(state.exitCode)\n      ? `${state.label} with exit code ${state.exitCode}`\n      : state.label;\n  const { imageName, imageTag } = getImageNameAndTag(container.image);\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <ScrollToTopOnMount />\n\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Container Details\" />\n          <dl className=\"co-m-pane__details\">\n            <dt>State</dt>\n            <dd>\n              <Status status={stateValue} />\n            </dd>\n            <dt>ID</dt>\n            <dd>\n              {status.containerID ? (\n                <div className=\"co-break-all co-select-to-copy\">{status.containerID}</div>\n              ) : (\n                '-'\n              )}\n            </dd>\n            <dt>Restarts</dt>\n            <dd>{status.restartCount}</dd>\n            <dt>Resource Requests</dt>\n            <dd>{getResourceRequestsValue(container) || '-'}</dd>\n            <dt>Resource Limits</dt>\n            <dd>{getResourceLimitsValue(container) || '-'}</dd>\n            <dt>Lifecycle Hooks</dt>\n            <dd>\n              <Lifecycle lifecycle={container.lifecycle} />\n            </dd>\n            <dt>Readiness Probe</dt>\n            <dd>\n              <Probe probe={container.readinessProbe} podIP={pod.status.podIP || '-'} />\n            </dd>\n            <dt>Liveness Probe</dt>\n            <dd>\n              <Probe probe={container.livenessProbe} podIP={pod.status.podIP || '-'} />\n            </dd>\n            <dt>Started</dt>\n            <dd>\n              <Timestamp timestamp={state.startedAt} />\n            </dd>\n            <dt>Finished</dt>\n            <dd>\n              <Timestamp timestamp={state.finishedAt} />\n            </dd>\n            <dt>Pod</dt>\n            <dd>\n              <ResourceLink\n                kind=\"Pod\"\n                name={props.match.params.podName}\n                namespace={props.match.params.ns}\n              />\n            </dd>\n          </dl>\n        </div>\n\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Image Details\" />\n          <dl className=\"co-m-pane__details\">\n            <dt>Image</dt>\n            <dd>\n              {imageName ? <div className=\"co-break-all co-select-to-copy\">{imageName}</div> : '-'}\n            </dd>\n            <dt>Image Version/Tag</dt>\n            <dd>{imageTag || '-'}</dd>\n            <dt>Command</dt>\n            <dd>\n              {container.command ? (\n                <pre>\n                  <code>{container.command.join(' ')}</code>\n                </pre>\n              ) : (\n                <span>-</span>\n              )}\n            </dd>\n            <dt>Args</dt>\n            <dd>\n              {container.args ? (\n                <pre>\n                  <code>{container.args.join(' ')}</code>\n                </pre>\n              ) : (\n                <span>-</span>\n              )}\n            </dd>\n            <dt>Pull Policy</dt>\n            <dd>{getPullPolicyLabel(container)}</dd>\n          </dl>\n        </div>\n\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Network\" />\n          <dl className=\"co-m-pane__details\">\n            <dt>Node</dt>\n            <dd>\n              <NodeLink name={pod.spec.nodeName} />\n            </dd>\n            <dt>Pod IP</dt>\n            <dd>{pod.status.podIP || '-'}</dd>\n          </dl>\n        </div>\n      </div>\n\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Ports\" />\n          <div className=\"co-table-container\">\n            <Ports ports={container.ports} />\n          </div>\n        </div>\n\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Mounted Volumes\" />\n          <div className=\"co-table-container\">\n            <VolumeMounts volumeMounts={container.volumeMounts} />\n          </div>\n        </div>\n\n        <div className=\"col-lg-4\">\n          <SectionHeading text=\"Environment Variables\" />\n          <div className=\"co-table-container\">\n            <Env env={container.env} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nContainerDetails.displayName = 'ContainerDetails';\n\nexport const ContainersDetailsPage: React.FC<ContainerDetailsPageProps> = (props) => (\n  <div>\n    <Firehose\n      resources={[\n        {\n          name: props.match.params.podName,\n          namespace: props.match.params.ns,\n          kind: 'Pod',\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <PageHeading\n        detail={true}\n        title={props.match.params.name}\n        kind=\"Container\"\n        breadcrumbsFor={() => [\n          { name: 'Pods', path: `/k8s/ns/${props.match.params.ns}/pods` },\n          {\n            name: props.match.params.podName,\n            path: resourcePath('Pod', props.match.params.podName, props.match.params.ns),\n          },\n          { name: 'Container Details', path: props.match.url },\n        ]}\n      />\n      <HorizontalNav\n        hideNav={true}\n        pages={[{ name: 'container', href: '', component: ContainerDetails }]}\n        match={props.match}\n      />\n    </Firehose>\n  </div>\n);\nContainersDetailsPage.displayName = 'ContainersDetailsPage';\n\ntype LifecycleProps = {\n  lifecycle: ContainerLifecycle;\n};\n\ntype ProbeProps = {\n  probe: ContainerProbe;\n  podIP: string;\n};\n\ntype PortsProps = {\n  ports: ContainerPort[];\n};\n\ntype VolumeMountProps = {\n  volumeMounts: VolumeMount[];\n};\n\ntype EnvProps = {\n  env: EnvVar[];\n};\n\ntype ContainerDetailsProps = {\n  match: any;\n  obj: PodKind;\n};\n\ntype ContainerDetailsPageProps = {\n  match: any;\n};\n"]}]}