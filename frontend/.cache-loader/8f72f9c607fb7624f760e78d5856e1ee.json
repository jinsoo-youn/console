{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-page.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport { safeLoad } from 'js-yaml';\nimport { PropertyItem } from '@patternfly/react-catalog-view-extension';\nimport { ANNOTATIONS, FLAGS } from '@console/shared';\nimport { CatalogTileViewPage } from './catalog-items';\nimport { k8sListPartialMetadata, referenceForModel, serviceClassDisplayName, } from '../../module/k8s';\nimport { withStartGuide } from '../start-guide';\nimport { connectToFlags, flagPending } from '../../reducers/features';\nimport { Firehose, LoadError, PageHeading, skeletonCatalog, StatusBox, ExternalLink, } from '../utils';\nimport { getAnnotationTags, getMostRecentBuilderTag, isBuilder } from '../image-stream';\nimport { getImageForIconClass, getImageStreamIcon, getServiceClassIcon, getServiceClassImage, getTemplateIcon, } from './catalog-item-icon';\nimport { ClusterServiceClassModel, TemplateModel } from '../../models';\nimport * as plugins from '../../plugins';\nimport { coFetch, coFetchJSON } from '../../co-fetch';\nexport class CatalogListPage extends React.Component {\n    constructor(props) {\n        super(props);\n        const items = this.getItems();\n        this.state = { items };\n    }\n    componentDidUpdate(prevProps) {\n        const { clusterServiceClasses, templateMetadata, projectTemplateMetadata, imageStreams, helmCharts, namespace, loaded, } = this.props;\n        if ((!prevProps.loaded && loaded) ||\n            !_.isEqual(namespace, prevProps.namespace) ||\n            !_.isEqual(clusterServiceClasses, prevProps.clusterServiceClasses) ||\n            !_.isEqual(templateMetadata, prevProps.templateMetadata) ||\n            !_.isEqual(projectTemplateMetadata, prevProps.projectTemplateMetadata) ||\n            !_.isEqual(imageStreams, prevProps.imageStreams) ||\n            !_.isEqual(helmCharts, prevProps.helmCharts)) {\n            const items = this.getItems();\n            this.setState({ items });\n        }\n    }\n    getItems() {\n        const extensionItems = _.flatten(plugins.registry\n            .getDevCatalogModels()\n            .filter(({ properties }) => _.get(this.props, referenceForModel(properties.model)))\n            .map(({ properties }) => properties.normalize(_.get(this.props, [referenceForModel(properties.model), 'data']))));\n        const { clusterServiceClasses, imageStreams, templateMetadata, projectTemplateMetadata, helmCharts, loaded, } = this.props;\n        let clusterServiceClassItems = [];\n        let imageStreamItems = [];\n        let templateItems = [];\n        let projectTemplateItems = [];\n        let helmChartItems = [];\n        if (!loaded) {\n            return [];\n        }\n        if (clusterServiceClasses) {\n            clusterServiceClassItems = this.normalizeClusterServiceClasses(clusterServiceClasses.data);\n        }\n        if (imageStreams) {\n            imageStreamItems = this.normalizeImageStreams(imageStreams.data);\n        }\n        // Templates are not passed as a Firehose item since we only request template metadata.\n        if (templateMetadata) {\n            templateItems = this.normalizeTemplates(templateMetadata);\n        }\n        // Templates are not passed as a Firehose item since we only request template metadata.\n        if (projectTemplateMetadata) {\n            projectTemplateItems = this.normalizeTemplates(projectTemplateMetadata);\n        }\n        if (helmCharts) {\n            helmChartItems = this.normalizeHelmCharts(helmCharts);\n        }\n        const items = [\n            ...clusterServiceClassItems,\n            ...imageStreamItems,\n            ...templateItems,\n            ...extensionItems,\n            ...projectTemplateItems,\n            ...helmChartItems,\n        ];\n        return _.sortBy(items, 'tileName');\n    }\n    normalizeClusterServiceClasses(serviceClasses) {\n        const { namespace = '' } = this.props;\n        return _.reduce(serviceClasses, (acc, serviceClass) => {\n            // Prefer native templates to template-service-broker service classes.\n            if (serviceClass.status.removedFromBrokerCatalog ||\n                serviceClass.spec.clusterServiceBrokerName === 'template-service-broker') {\n                return acc;\n            }\n            const iconClass = getServiceClassIcon(serviceClass);\n            const tileImgUrl = getServiceClassImage(serviceClass);\n            acc.push({\n                obj: serviceClass,\n                kind: 'ClusterServiceClass',\n                tileName: serviceClassDisplayName(serviceClass),\n                tileIconClass: tileImgUrl ? null : iconClass,\n                tileImgUrl,\n                tileDescription: serviceClass.spec.description,\n                tileProvider: _.get(serviceClass, 'spec.externalMetadata.providerDisplayName'),\n                tags: serviceClass.spec.tags,\n                createLabel: 'Create Service Instance',\n                href: `/catalog/create-service-instance?cluster-service-class=${serviceClass.metadata.name}&preselected-ns=${namespace}`,\n                supportUrl: _.get(serviceClass, 'spec.externalMetadata.supportUrl'),\n                longDescription: _.get(serviceClass, 'spec.externalMetadata.longDescription'),\n                documentationUrl: _.get(serviceClass, 'spec.externalMetadata.documentationUrl'),\n            });\n            return acc;\n        }, []);\n    }\n    normalizeTemplates(templates) {\n        return _.reduce(templates, (acc, template) => {\n            const { name, namespace, annotations = {} } = template.metadata;\n            const tags = (annotations.tags || '').split(/\\s*,\\s*/);\n            if (tags.includes('hidden')) {\n                return acc;\n            }\n            const iconClass = getTemplateIcon(template);\n            const tileImgUrl = getImageForIconClass(iconClass);\n            const tileIconClass = tileImgUrl ? null : iconClass;\n            acc.push({\n                obj: template,\n                kind: 'Template',\n                tileName: annotations[ANNOTATIONS.displayName] || name,\n                tileIconClass,\n                tileImgUrl,\n                tileDescription: annotations.description,\n                tags,\n                createLabel: 'Instantiate Template',\n                tileProvider: annotations[ANNOTATIONS.providerDisplayName],\n                documentationUrl: annotations[ANNOTATIONS.documentationURL],\n                supportUrl: annotations[ANNOTATIONS.supportURL],\n                href: `/catalog/instantiate-template?template=${name}&template-ns=${namespace}&preselected-ns=${this\n                    .props.namespace || ''}`,\n            });\n            return acc;\n        }, []);\n    }\n    normalizeHelmCharts(chartEntries) {\n        const { namespace: currentNamespace = '' } = this.props;\n        return _.reduce(chartEntries, (normalizedCharts, charts) => {\n            charts.forEach((chart) => {\n                var _a, _b;\n                const tags = chart.keywords;\n                const chartName = chart.name;\n                const chartVersion = chart.version;\n                const appVersion = chart.appVersion;\n                const tileName = `${_.startCase(chartName)} v${chart.version}`;\n                const tileImgUrl = chart.icon || getImageForIconClass('icon-helm');\n                const chartURL = _.get(chart, 'urls.0');\n                const encodedChartURL = encodeURIComponent(chartURL);\n                const markdownDescription = () => __awaiter(this, void 0, void 0, function* () {\n                    var _c;\n                    let chartData;\n                    try {\n                        chartData = yield coFetchJSON(`/api/helm/chart?url=${chartURL}`);\n                    }\n                    catch (_d) {\n                        return null;\n                    }\n                    const readmeFile = (_c = chartData === null || chartData === void 0 ? void 0 : chartData.files) === null || _c === void 0 ? void 0 : _c.find((file) => file.name === 'README.md');\n                    const readmeData = (readmeFile === null || readmeFile === void 0 ? void 0 : readmeFile.data) && atob(readmeFile === null || readmeFile === void 0 ? void 0 : readmeFile.data);\n                    return readmeData && `## README\\n${readmeData}`;\n                });\n                const maintainers = ((_a = chart.maintainers) === null || _a === void 0 ? void 0 : _a.length) > 0 && (React.createElement(React.Fragment, null, (_b = chart.maintainers) === null || _b === void 0 ? void 0 : _b.map((maintainer) => (React.createElement(React.Fragment, null,\n                    maintainer.name,\n                    React.createElement(\"br\", null),\n                    React.createElement(\"a\", { href: `mailto:${maintainer.email}` }, maintainer.email),\n                    React.createElement(\"br\", null))))));\n                const homePage = chart.home && (React.createElement(ExternalLink, { href: chart.home, additionalClassName: \"co-break-all\", text: chart.home }));\n                const customProperties = (React.createElement(React.Fragment, null,\n                    React.createElement(PropertyItem, { label: \"Chart Version\", value: chartVersion }),\n                    React.createElement(PropertyItem, { label: \"App Version\", value: appVersion }),\n                    homePage && React.createElement(PropertyItem, { label: \"Home Page\", value: homePage }),\n                    maintainers && React.createElement(PropertyItem, { label: \"Maintainers\", value: maintainers })));\n                const obj = Object.assign(Object.assign({}, chart), { metadata: { uid: chart.digest, creationTimestamp: chart.created } });\n                normalizedCharts.push({\n                    obj,\n                    kind: 'HelmChart',\n                    tileName,\n                    tileIconClass: null,\n                    tileImgUrl,\n                    tileDescription: chart.description,\n                    tags,\n                    createLabel: 'Install Helm Chart',\n                    markdownDescription,\n                    customProperties,\n                    href: `/catalog/helm-install?chartName=${chartName}&chartURL=${encodedChartURL}&preselected-ns=${currentNamespace}`,\n                });\n            });\n            return normalizedCharts;\n        }, []);\n    }\n    normalizeImageStreams(imageStreams) {\n        const builderimageStreams = _.filter(imageStreams, isBuilder);\n        return _.map(builderimageStreams, (imageStream) => {\n            const { namespace: currentNamespace = '' } = this.props;\n            const { name, namespace } = imageStream.metadata;\n            const tag = getMostRecentBuilderTag(imageStream);\n            const tileName = _.get(imageStream, ['metadata', 'annotations', ANNOTATIONS.displayName]) || name;\n            const iconClass = getImageStreamIcon(tag);\n            const tileImgUrl = getImageForIconClass(iconClass);\n            const tileIconClass = tileImgUrl ? null : iconClass;\n            const tileDescription = _.get(tag, 'annotations.description');\n            const tags = getAnnotationTags(tag);\n            const createLabel = 'Create Application';\n            const tileProvider = _.get(tag, ['annotations', ANNOTATIONS.providerDisplayName]);\n            const href = `/catalog/source-to-image?imagestream=${name}&imagestream-ns=${namespace}&preselected-ns=${currentNamespace}`;\n            const builderImageTag = _.head(_.get(imageStream, 'spec.tags'));\n            const sampleRepo = _.get(builderImageTag, 'annotations.sampleRepo');\n            return {\n                obj: imageStream,\n                kind: 'ImageStream',\n                tileName,\n                tileIconClass,\n                tileImgUrl,\n                tileDescription,\n                tags,\n                createLabel,\n                tileProvider,\n                href,\n                sampleRepo,\n            };\n        });\n    }\n    render() {\n        const { loaded, loadError } = this.props;\n        const { items } = this.state;\n        return (React.createElement(StatusBox, { skeleton: skeletonCatalog, data: items, loaded: loaded, loadError: loadError, label: \"Resources\" },\n            React.createElement(CatalogTileViewPage, { items: items })));\n    }\n}\nexport const Catalog = connectToFlags(FLAGS.OPENSHIFT, FLAGS.SERVICE_CATALOG, ...plugins.registry.getDevCatalogModels().map(({ properties }) => properties.flag))((props) => {\n    const { flags, mock, namespace } = props;\n    const openshiftFlag = flags[FLAGS.OPENSHIFT];\n    const serviceCatalogFlag = flags[FLAGS.SERVICE_CATALOG];\n    const [templateMetadata, setTemplateMetadata] = React.useState();\n    const [templateError, setTemplateError] = React.useState();\n    const [projectTemplateMetadata, setProjectTemplateMetadata] = React.useState(null);\n    const [projectTemplateError, setProjectTemplateError] = React.useState();\n    const [helmCharts, setHelmCharts] = React.useState();\n    const loadTemplates = openshiftFlag && !mock;\n    // Load templates from the shared `openshift` namespace. Don't use Firehose\n    // for templates so that we can request only metadata. This keeps the request\n    // much smaller.\n    React.useEffect(() => {\n        if (!loadTemplates) {\n            return;\n        }\n        k8sListPartialMetadata(TemplateModel, { ns: 'openshift' })\n            .then((metadata) => {\n            setTemplateMetadata(metadata);\n            setTemplateError(null);\n        })\n            .catch(setTemplateError);\n    }, [loadTemplates]);\n    // Load templates for the current project.\n    React.useEffect(() => {\n        if (!loadTemplates) {\n            return;\n        }\n        // Don't load templates from the `openshift` namespace twice if it's the current namespace\n        if (!namespace || namespace === 'openshift') {\n            setProjectTemplateMetadata([]);\n            setProjectTemplateError(null);\n        }\n        else {\n            k8sListPartialMetadata(TemplateModel, { ns: namespace })\n                .then((metadata) => {\n                setProjectTemplateMetadata(metadata);\n                setProjectTemplateError(null);\n            })\n                .catch(setTemplateError);\n        }\n    }, [loadTemplates, namespace]);\n    React.useEffect(() => {\n        coFetch('/api/helm/charts/index.yaml').then((res) => __awaiter(void 0, void 0, void 0, function* () {\n            const yaml = yield res.text();\n            const json = safeLoad(yaml);\n            setHelmCharts(json.entries);\n        }));\n    }, []);\n    const error = templateError || projectTemplateError;\n    if (error) {\n        return (React.createElement(LoadError, { message: error.message, label: \"Templates\", className: \"loading-box loading-box__errored\" }));\n    }\n    if (_.some(flags, (flag) => flagPending(flag))) {\n        return null;\n    }\n    const resources = [\n        ...(serviceCatalogFlag\n            ? [\n                {\n                    isList: true,\n                    kind: referenceForModel(ClusterServiceClassModel),\n                    namespaced: false,\n                    prop: 'clusterServiceClasses',\n                },\n            ]\n            : []),\n        ...(openshiftFlag\n            ? [\n                {\n                    isList: true,\n                    kind: 'ImageStream',\n                    namespace: 'openshift',\n                    prop: 'imageStreams',\n                },\n            ]\n            : []),\n        ...plugins.registry\n            .getDevCatalogModels()\n            .filter(({ properties }) => !properties.flag || flags[properties.flag])\n            .map(({ properties }) => ({\n            isList: true,\n            kind: referenceForModel(properties.model),\n            namespaced: properties.model.namespaced,\n            namespace,\n            prop: referenceForModel(properties.model),\n        })),\n    ];\n    return (React.createElement(\"div\", { className: \"co-catalog__body\" },\n        React.createElement(Firehose, { resources: mock ? [] : resources },\n            React.createElement(CatalogListPage, Object.assign({ namespace: namespace, templateMetadata: templateMetadata, projectTemplateMetadata: projectTemplateMetadata, helmCharts: helmCharts }, props)))));\n});\nexport const CatalogPage = withStartGuide(({ match, noProjectsAvailable }) => {\n    const namespace = _.get(match, 'params.ns');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"Developer Catalog\")),\n        React.createElement(\"div\", { className: \"co-m-page__body\" },\n            React.createElement(\"div\", { className: \"co-catalog\" },\n                React.createElement(PageHeading, { title: \"Developer Catalog\" }),\n                React.createElement(\"p\", { className: \"co-catalog-page__description\" }, \"Add shared apps, services, or source-to-image builders to your project from the Developer Catalog. Cluster admins can install additional apps which will show up here automatically.\"),\n                React.createElement(Catalog, { namespace: namespace, mock: noProjectsAvailable })))));\n});\nCatalogPage.displayName = 'CatalogPage';\nCatalog.displayName = 'Catalog';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-page.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAEnC,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAC;AACxE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAY,MAAM,iBAAiB,CAAC;AAC/D,OAAO,EAAE,mBAAmB,EAAQ,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EACL,sBAAsB,EACtB,iBAAiB,EACjB,uBAAuB,GAKxB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,cAAc,EAAE,WAAW,EAAe,MAAM,yBAAyB,CAAC;AACnF,OAAO,EACL,QAAQ,EACR,SAAS,EACT,WAAW,EACX,eAAe,EACf,SAAS,EAET,YAAY,GACb,MAAM,UAAU,CAAC;AAClB,OAAO,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AACxF,OAAO,EACL,oBAAoB,EACpB,kBAAkB,EAClB,mBAAmB,EACnB,oBAAoB,EACpB,eAAe,GAChB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,wBAAwB,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AACvE,OAAO,KAAK,OAAO,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAEtD,MAAM,OAAO,eAAgB,SAAQ,KAAK,CAAC,SAAqD;IAC9F,YAAY,KAA2B;QACrC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,kBAAkB,CAAC,SAAS;QAC1B,MAAM,EACJ,qBAAqB,EACrB,gBAAgB,EAChB,uBAAuB,EACvB,YAAY,EACZ,UAAU,EACV,SAAS,EACT,MAAM,GACP,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,IACE,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC;YAC7B,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC;YAC1C,CAAC,CAAC,CAAC,OAAO,CAAC,qBAAqB,EAAE,SAAS,CAAC,qBAAqB,CAAC;YAClE,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,gBAAgB,CAAC;YACxD,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,SAAS,CAAC,uBAAuB,CAAC;YACtE,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,YAAY,CAAC;YAChD,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,UAAU,CAAC,EAC5C;YACA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,QAAQ;QACN,MAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAC9B,OAAO,CAAC,QAAQ;aACb,mBAAmB,EAAE;aACrB,MAAM,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAClF,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CACtB,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CACvF,CACM,CAAC;QAEZ,MAAM,EACJ,qBAAqB,EACrB,YAAY,EACZ,gBAAgB,EAChB,uBAAuB,EACvB,UAAU,EACV,MAAM,GACP,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,IAAI,wBAAwB,GAAW,EAAE,CAAC;QAC1C,IAAI,gBAAgB,GAAW,EAAE,CAAC;QAClC,IAAI,aAAa,GAAW,EAAE,CAAC;QAC/B,IAAI,oBAAoB,GAAW,EAAE,CAAC;QACtC,IAAI,cAAc,GAAW,EAAE,CAAC;QAEhC,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,EAAE,CAAC;SACX;QAED,IAAI,qBAAqB,EAAE;YACzB,wBAAwB,GAAG,IAAI,CAAC,8BAA8B,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;SAC5F;QAED,IAAI,YAAY,EAAE;YAChB,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAClE;QAED,uFAAuF;QACvF,IAAI,gBAAgB,EAAE;YACpB,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;SAC3D;QAED,uFAAuF;QACvF,IAAI,uBAAuB,EAAE;YAC3B,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,CAAC;SACzE;QAED,IAAI,UAAU,EAAE;YACd,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;SACvD;QAED,MAAM,KAAK,GAAW;YACpB,GAAG,wBAAwB;YAC3B,GAAG,gBAAgB;YACnB,GAAG,aAAa;YAChB,GAAG,cAAc;YACjB,GAAG,oBAAoB;YACvB,GAAG,cAAc;SAClB,CAAC;QAEF,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,8BAA8B,CAAC,cAAiC;QAC9D,MAAM,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,OAAO,CAAC,CAAC,MAAM,CACb,cAAc,EACd,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE;YACpB,sEAAsE;YACtE,IACE,YAAY,CAAC,MAAM,CAAC,wBAAwB;gBAC5C,YAAY,CAAC,IAAI,CAAC,wBAAwB,KAAK,yBAAyB,EACxE;gBACA,OAAO,GAAG,CAAC;aACZ;YAED,MAAM,SAAS,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;YACpD,MAAM,UAAU,GAAG,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAEtD,GAAG,CAAC,IAAI,CAAC;gBACP,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,qBAAqB;gBAC3B,QAAQ,EAAE,uBAAuB,CAAC,YAAY,CAAC;gBAC/C,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;gBAC5C,UAAU;gBACV,eAAe,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW;gBAC9C,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,2CAA2C,CAAC;gBAC9E,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI;gBAC5B,WAAW,EAAE,yBAAyB;gBACtC,IAAI,EAAE,0DAA0D,YAAY,CAAC,QAAQ,CAAC,IAAI,mBAAmB,SAAS,EAAE;gBACxH,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,kCAAkC,CAAC;gBACnE,eAAe,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,uCAAuC,CAAC;gBAC7E,gBAAgB,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,wCAAwC,CAAC;aAChF,CAAC,CAAC;YACH,OAAO,GAAG,CAAC;QACb,CAAC,EACD,EAAY,CACb,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,SAAsD;QACvE,OAAO,CAAC,CAAC,MAAM,CACb,SAAS,EACT,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;YAChB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAChE,MAAM,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC3B,OAAO,GAAG,CAAC;aACZ;YACD,MAAM,SAAS,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5C,MAAM,UAAU,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,GAAG,CAAC,IAAI,CAAC;gBACP,GAAG,EAAE,QAAQ;gBACb,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI;gBACtD,aAAa;gBACb,UAAU;gBACV,eAAe,EAAE,WAAW,CAAC,WAAW;gBACxC,IAAI;gBACJ,WAAW,EAAE,sBAAsB;gBACnC,YAAY,EAAE,WAAW,CAAC,WAAW,CAAC,mBAAmB,CAAC;gBAC1D,gBAAgB,EAAE,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC;gBAC3D,UAAU,EAAE,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC/C,IAAI,EAAE,0CAA0C,IAAI,gBAAgB,SAAS,mBAAmB,IAAI;qBACjG,KAAK,CAAC,SAAS,IAAI,EAAE,EAAE;aAC3B,CAAC,CAAC;YACH,OAAO,GAAG,CAAC;QACb,CAAC,EACD,EAAY,CACb,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,YAA8B;QAChD,MAAM,EAAE,SAAS,EAAE,gBAAgB,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAExD,OAAO,CAAC,CAAC,MAAM,CACb,YAAY,EACZ,CAAC,gBAAgB,EAAE,MAAM,EAAE,EAAE;YAC3B,MAAM,CAAC,OAAO,CAAC,CAAC,KAAgB,EAAE,EAAE;;gBAClC,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;gBAC5B,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC7B,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gBACnC,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;gBACpC,MAAM,QAAQ,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;gBAC/D,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,IAAI,oBAAoB,CAAC,WAAW,CAAC,CAAC;gBACnE,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBACxC,MAAM,eAAe,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBACrD,MAAM,mBAAmB,GAAG,GAAS,EAAE;;oBACrC,IAAI,SAAS,CAAC;oBACd,IAAI;wBACF,SAAS,GAAG,MAAM,WAAW,CAAC,uBAAuB,QAAQ,EAAE,CAAC,CAAC;qBAClE;oBAAC,WAAM;wBACN,OAAO,IAAI,CAAC;qBACb;oBACD,MAAM,UAAU,SAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;oBAC/E,MAAM,UAAU,GAAG,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI,KAAI,IAAI,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI,CAAC,CAAC;oBAC9D,OAAO,UAAU,IAAI,cAAc,UAAU,EAAE,CAAC;gBAClD,CAAC,CAAA,CAAC;gBAEF,MAAM,WAAW,GAAG,OAAA,KAAK,CAAC,WAAW,0CAAE,MAAM,IAAG,CAAC,IAAI,CACnD,gDACG,KAAK,CAAC,WAAW,0CAAE,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CACtC;oBACG,UAAU,CAAC,IAAI;oBAChB,+BAAM;oBACN,2BAAG,IAAI,EAAE,UAAU,UAAU,CAAC,KAAK,EAAE,IAAG,UAAU,CAAC,KAAK,CAAK;oBAC7D,+BAAM,CACL,CACJ,EACA,CACJ,CAAC;gBAEF,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,IAAI,CAC7B,oBAAC,YAAY,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,mBAAmB,EAAC,cAAc,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,GAAI,CACxF,CAAC;gBAEF,MAAM,gBAAgB,GAAG,CACvB;oBACE,oBAAC,YAAY,IAAC,KAAK,EAAC,eAAe,EAAC,KAAK,EAAE,YAAY,GAAI;oBAC3D,oBAAC,YAAY,IAAC,KAAK,EAAC,aAAa,EAAC,KAAK,EAAE,UAAU,GAAI;oBACtD,QAAQ,IAAI,oBAAC,YAAY,IAAC,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,QAAQ,GAAI;oBAC/D,WAAW,IAAI,oBAAC,YAAY,IAAC,KAAK,EAAC,aAAa,EAAC,KAAK,EAAE,WAAW,GAAI,CACvE,CACJ,CAAC;gBAEF,MAAM,GAAG,mCACJ,KAAK,GACL,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,iBAAiB,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CACzE,CAAC;gBAEF,gBAAgB,CAAC,IAAI,CAAC;oBACpB,GAAG;oBACH,IAAI,EAAE,WAAW;oBACjB,QAAQ;oBACR,aAAa,EAAE,IAAI;oBACnB,UAAU;oBACV,eAAe,EAAE,KAAK,CAAC,WAAW;oBAClC,IAAI;oBACJ,WAAW,EAAE,oBAAoB;oBACjC,mBAAmB;oBACnB,gBAAgB;oBAChB,IAAI,EAAE,mCAAmC,SAAS,aAAa,eAAe,mBAAmB,gBAAgB,EAAE;iBACpH,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;QAC1B,CAAC,EACD,EAAY,CACb,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,YAA+B;QACnD,MAAM,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC9D,OAAO,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,WAAW,EAAE,EAAE;YAChD,MAAM,EAAE,SAAS,EAAE,gBAAgB,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACxD,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC;YACjD,MAAM,GAAG,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;YACjD,MAAM,QAAQ,GACZ,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC;YACnF,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC1C,MAAM,UAAU,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,MAAM,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,yBAAyB,CAAC,CAAC;YAC9D,MAAM,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACpC,MAAM,WAAW,GAAG,oBAAoB,CAAC;YACzC,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAClF,MAAM,IAAI,GAAG,wCAAwC,IAAI,mBAAmB,SAAS,mBAAmB,gBAAgB,EAAE,CAAC;YAC3H,MAAM,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;YAChE,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC;YACpE,OAAO;gBACL,GAAG,EAAE,WAAW;gBAChB,IAAI,EAAE,aAAa;gBACnB,QAAQ;gBACR,aAAa;gBACb,UAAU;gBACV,eAAe;gBACf,IAAI;gBACJ,WAAW;gBACX,YAAY;gBACZ,IAAI;gBACJ,UAAU;aACX,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE7B,OAAO,CACL,oBAAC,SAAS,IACR,QAAQ,EAAE,eAAe,EACzB,IAAI,EAAE,KAAK,EACX,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,EACpB,KAAK,EAAC,WAAW;YAEjB,oBAAC,mBAAmB,IAAC,KAAK,EAAE,KAAK,GAAI,CAC3B,CACb,CAAC;IACJ,CAAC;CACF;AAED,MAAM,CAAC,MAAM,OAAO,GAAG,cAAc,CACnC,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,eAAe,EACrB,GAAG,OAAO,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CACnF,CAAC,CAAC,KAAK,EAAE,EAAE;IACV,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IACzC,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC7C,MAAM,kBAAkB,GAAG,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IACxD,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAqB,CAAC;IACpF,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAY,CAAC;IACrE,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GAAG,KAAK,CAAC,QAAQ,CAC1E,IAAI,CACL,CAAC;IACF,MAAM,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAY,CAAC;IACnF,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAoB,CAAC;IAEvE,MAAM,aAAa,GAAG,aAAa,IAAI,CAAC,IAAI,CAAC;IAE7C,2EAA2E;IAC3E,6EAA6E;IAC7E,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;SACR;QACD,sBAAsB,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC;aACvD,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACjB,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YAC9B,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC7B,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,0CAA0C;IAC1C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;SACR;QACD,0FAA0F;QAC1F,IAAI,CAAC,SAAS,IAAI,SAAS,KAAK,WAAW,EAAE;YAC3C,0BAA0B,CAAC,EAAE,CAAC,CAAC;YAC/B,uBAAuB,CAAC,IAAI,CAAC,CAAC;SAC/B;aAAM;YACL,sBAAsB,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;iBACrD,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACjB,0BAA0B,CAAC,QAAQ,CAAC,CAAC;gBACrC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAChC,CAAC,CAAC;iBACD,KAAK,CAAC,gBAAgB,CAAC,CAAC;SAC5B;IACH,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;IAE/B,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,OAAO,CAAC,6BAA6B,CAAC,CAAC,IAAI,CAAC,CAAO,GAAG,EAAE,EAAE;YACxD,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAC9B,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,KAAK,GAAG,aAAa,IAAI,oBAAoB,CAAC;IACpD,IAAI,KAAK,EAAE;QACT,OAAO,CACL,oBAAC,SAAS,IACR,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,KAAK,EAAC,WAAW,EACjB,SAAS,EAAC,kCAAkC,GAC5C,CACH,CAAC;KACH;IAED,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;QAC9C,OAAO,IAAI,CAAC;KACb;IAED,MAAM,SAAS,GAAG;QAChB,GAAG,CAAC,kBAAkB;YACpB,CAAC,CAAC;gBACE;oBACE,MAAM,EAAE,IAAI;oBACZ,IAAI,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;oBACjD,UAAU,EAAE,KAAK;oBACjB,IAAI,EAAE,uBAAuB;iBAC9B;aACF;YACH,CAAC,CAAC,EAAE,CAAC;QACP,GAAG,CAAC,aAAa;YACf,CAAC,CAAC;gBACE;oBACE,MAAM,EAAE,IAAI;oBACZ,IAAI,EAAE,aAAa;oBACnB,SAAS,EAAE,WAAW;oBACtB,IAAI,EAAE,cAAc;iBACrB;aACF;YACH,CAAC,CAAC,EAAE,CAAC;QACP,GAAG,OAAO,CAAC,QAAQ;aAChB,mBAAmB,EAAE;aACrB,MAAM,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACtE,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;YACxB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC;YACzC,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,UAAU;YACvC,SAAS;YACT,IAAI,EAAE,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC;SAC1C,CAAC,CAAC;KACN,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAC,kBAAkB;QAC/B,oBAAC,QAAQ,IAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;YACxC,oBAAC,eAAe,kBACd,SAAS,EAAE,SAAS,EACpB,gBAAgB,EAAE,gBAAgB,EAClC,uBAAuB,EAAE,uBAAuB,EAChD,UAAU,EAAE,UAAU,IACjB,KAAa,EAClB,CACO,CACP,CACP,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,WAAW,GAAG,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE;IAC3E,MAAM,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAC5C,OAAO,CACL;QACE,oBAAC,MAAM;YACL,uDAAgC,CACzB;QACT,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,6BAAK,SAAS,EAAC,YAAY;gBACzB,oBAAC,WAAW,IAAC,KAAK,EAAC,mBAAmB,GAAG;gBACzC,2BAAG,SAAS,EAAC,8BAA8B,2LAIvC;gBACJ,oBAAC,OAAO,IAAC,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,mBAAmB,GAAI,CACxD,CACF,CACL,CACJ,CAAC;AACJ,CAAC,CAAC,CAAC;AA2CH,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;AACxC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport { safeLoad } from 'js-yaml';\n\nimport { PropertyItem } from '@patternfly/react-catalog-view-extension';\nimport { ANNOTATIONS, FLAGS, APIError } from '@console/shared';\nimport { CatalogTileViewPage, Item } from './catalog-items';\nimport {\n  k8sListPartialMetadata,\n  referenceForModel,\n  serviceClassDisplayName,\n  K8sResourceCommon,\n  K8sResourceKind,\n  PartialObjectMetadata,\n  TemplateKind,\n} from '../../module/k8s';\nimport { withStartGuide } from '../start-guide';\nimport { connectToFlags, flagPending, FlagsObject } from '../../reducers/features';\nimport {\n  Firehose,\n  LoadError,\n  PageHeading,\n  skeletonCatalog,\n  StatusBox,\n  FirehoseResult,\n  ExternalLink,\n} from '../utils';\nimport { getAnnotationTags, getMostRecentBuilderTag, isBuilder } from '../image-stream';\nimport {\n  getImageForIconClass,\n  getImageStreamIcon,\n  getServiceClassIcon,\n  getServiceClassImage,\n  getTemplateIcon,\n} from './catalog-item-icon';\nimport { ClusterServiceClassModel, TemplateModel } from '../../models';\nimport * as plugins from '../../plugins';\nimport { coFetch, coFetchJSON } from '../../co-fetch';\n\nexport class CatalogListPage extends React.Component<CatalogListPageProps, CatalogListPageState> {\n  constructor(props: CatalogListPageProps) {\n    super(props);\n\n    const items = this.getItems();\n    this.state = { items };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      clusterServiceClasses,\n      templateMetadata,\n      projectTemplateMetadata,\n      imageStreams,\n      helmCharts,\n      namespace,\n      loaded,\n    } = this.props;\n    if (\n      (!prevProps.loaded && loaded) ||\n      !_.isEqual(namespace, prevProps.namespace) ||\n      !_.isEqual(clusterServiceClasses, prevProps.clusterServiceClasses) ||\n      !_.isEqual(templateMetadata, prevProps.templateMetadata) ||\n      !_.isEqual(projectTemplateMetadata, prevProps.projectTemplateMetadata) ||\n      !_.isEqual(imageStreams, prevProps.imageStreams) ||\n      !_.isEqual(helmCharts, prevProps.helmCharts)\n    ) {\n      const items = this.getItems();\n      this.setState({ items });\n    }\n  }\n\n  getItems(): Item[] {\n    const extensionItems = _.flatten(\n      plugins.registry\n        .getDevCatalogModels()\n        .filter(({ properties }) => _.get(this.props, referenceForModel(properties.model)))\n        .map(({ properties }) =>\n          properties.normalize(_.get(this.props, [referenceForModel(properties.model), 'data'])),\n        ),\n    ) as Item[];\n\n    const {\n      clusterServiceClasses,\n      imageStreams,\n      templateMetadata,\n      projectTemplateMetadata,\n      helmCharts,\n      loaded,\n    } = this.props;\n    let clusterServiceClassItems: Item[] = [];\n    let imageStreamItems: Item[] = [];\n    let templateItems: Item[] = [];\n    let projectTemplateItems: Item[] = [];\n    let helmChartItems: Item[] = [];\n\n    if (!loaded) {\n      return [];\n    }\n\n    if (clusterServiceClasses) {\n      clusterServiceClassItems = this.normalizeClusterServiceClasses(clusterServiceClasses.data);\n    }\n\n    if (imageStreams) {\n      imageStreamItems = this.normalizeImageStreams(imageStreams.data);\n    }\n\n    // Templates are not passed as a Firehose item since we only request template metadata.\n    if (templateMetadata) {\n      templateItems = this.normalizeTemplates(templateMetadata);\n    }\n\n    // Templates are not passed as a Firehose item since we only request template metadata.\n    if (projectTemplateMetadata) {\n      projectTemplateItems = this.normalizeTemplates(projectTemplateMetadata);\n    }\n\n    if (helmCharts) {\n      helmChartItems = this.normalizeHelmCharts(helmCharts);\n    }\n\n    const items: Item[] = [\n      ...clusterServiceClassItems,\n      ...imageStreamItems,\n      ...templateItems,\n      ...extensionItems,\n      ...projectTemplateItems,\n      ...helmChartItems,\n    ];\n\n    return _.sortBy(items, 'tileName');\n  }\n\n  normalizeClusterServiceClasses(serviceClasses: K8sResourceKind[]) {\n    const { namespace = '' } = this.props;\n    return _.reduce(\n      serviceClasses,\n      (acc, serviceClass) => {\n        // Prefer native templates to template-service-broker service classes.\n        if (\n          serviceClass.status.removedFromBrokerCatalog ||\n          serviceClass.spec.clusterServiceBrokerName === 'template-service-broker'\n        ) {\n          return acc;\n        }\n\n        const iconClass = getServiceClassIcon(serviceClass);\n        const tileImgUrl = getServiceClassImage(serviceClass);\n\n        acc.push({\n          obj: serviceClass,\n          kind: 'ClusterServiceClass',\n          tileName: serviceClassDisplayName(serviceClass),\n          tileIconClass: tileImgUrl ? null : iconClass,\n          tileImgUrl,\n          tileDescription: serviceClass.spec.description,\n          tileProvider: _.get(serviceClass, 'spec.externalMetadata.providerDisplayName'),\n          tags: serviceClass.spec.tags,\n          createLabel: 'Create Service Instance',\n          href: `/catalog/create-service-instance?cluster-service-class=${serviceClass.metadata.name}&preselected-ns=${namespace}`,\n          supportUrl: _.get(serviceClass, 'spec.externalMetadata.supportUrl'),\n          longDescription: _.get(serviceClass, 'spec.externalMetadata.longDescription'),\n          documentationUrl: _.get(serviceClass, 'spec.externalMetadata.documentationUrl'),\n        });\n        return acc;\n      },\n      [] as Item[],\n    );\n  }\n\n  normalizeTemplates(templates: Array<TemplateKind | PartialObjectMetadata>): Item[] {\n    return _.reduce(\n      templates,\n      (acc, template) => {\n        const { name, namespace, annotations = {} } = template.metadata;\n        const tags = (annotations.tags || '').split(/\\s*,\\s*/);\n        if (tags.includes('hidden')) {\n          return acc;\n        }\n        const iconClass = getTemplateIcon(template);\n        const tileImgUrl = getImageForIconClass(iconClass);\n        const tileIconClass = tileImgUrl ? null : iconClass;\n        acc.push({\n          obj: template,\n          kind: 'Template',\n          tileName: annotations[ANNOTATIONS.displayName] || name,\n          tileIconClass,\n          tileImgUrl,\n          tileDescription: annotations.description,\n          tags,\n          createLabel: 'Instantiate Template',\n          tileProvider: annotations[ANNOTATIONS.providerDisplayName],\n          documentationUrl: annotations[ANNOTATIONS.documentationURL],\n          supportUrl: annotations[ANNOTATIONS.supportURL],\n          href: `/catalog/instantiate-template?template=${name}&template-ns=${namespace}&preselected-ns=${this\n            .props.namespace || ''}`,\n        });\n        return acc;\n      },\n      [] as Item[],\n    );\n  }\n\n  normalizeHelmCharts(chartEntries: HelmChartEntries): Item[] {\n    const { namespace: currentNamespace = '' } = this.props;\n\n    return _.reduce(\n      chartEntries,\n      (normalizedCharts, charts) => {\n        charts.forEach((chart: HelmChart) => {\n          const tags = chart.keywords;\n          const chartName = chart.name;\n          const chartVersion = chart.version;\n          const appVersion = chart.appVersion;\n          const tileName = `${_.startCase(chartName)} v${chart.version}`;\n          const tileImgUrl = chart.icon || getImageForIconClass('icon-helm');\n          const chartURL = _.get(chart, 'urls.0');\n          const encodedChartURL = encodeURIComponent(chartURL);\n          const markdownDescription = async () => {\n            let chartData;\n            try {\n              chartData = await coFetchJSON(`/api/helm/chart?url=${chartURL}`);\n            } catch {\n              return null;\n            }\n            const readmeFile = chartData?.files?.find((file) => file.name === 'README.md');\n            const readmeData = readmeFile?.data && atob(readmeFile?.data);\n            return readmeData && `## README\\n${readmeData}`;\n          };\n\n          const maintainers = chart.maintainers?.length > 0 && (\n            <>\n              {chart.maintainers?.map((maintainer) => (\n                <>\n                  {maintainer.name}\n                  <br />\n                  <a href={`mailto:${maintainer.email}`}>{maintainer.email}</a>\n                  <br />\n                </>\n              ))}\n            </>\n          );\n\n          const homePage = chart.home && (\n            <ExternalLink href={chart.home} additionalClassName=\"co-break-all\" text={chart.home} />\n          );\n\n          const customProperties = (\n            <>\n              <PropertyItem label=\"Chart Version\" value={chartVersion} />\n              <PropertyItem label=\"App Version\" value={appVersion} />\n              {homePage && <PropertyItem label=\"Home Page\" value={homePage} />}\n              {maintainers && <PropertyItem label=\"Maintainers\" value={maintainers} />}\n            </>\n          );\n\n          const obj = {\n            ...chart,\n            ...{ metadata: { uid: chart.digest, creationTimestamp: chart.created } },\n          };\n\n          normalizedCharts.push({\n            obj,\n            kind: 'HelmChart',\n            tileName,\n            tileIconClass: null,\n            tileImgUrl,\n            tileDescription: chart.description,\n            tags,\n            createLabel: 'Install Helm Chart',\n            markdownDescription,\n            customProperties,\n            href: `/catalog/helm-install?chartName=${chartName}&chartURL=${encodedChartURL}&preselected-ns=${currentNamespace}`,\n          });\n        });\n        return normalizedCharts;\n      },\n      [] as Item[],\n    );\n  }\n\n  normalizeImageStreams(imageStreams: K8sResourceKind[]): Item[] {\n    const builderimageStreams = _.filter(imageStreams, isBuilder);\n    return _.map(builderimageStreams, (imageStream) => {\n      const { namespace: currentNamespace = '' } = this.props;\n      const { name, namespace } = imageStream.metadata;\n      const tag = getMostRecentBuilderTag(imageStream);\n      const tileName =\n        _.get(imageStream, ['metadata', 'annotations', ANNOTATIONS.displayName]) || name;\n      const iconClass = getImageStreamIcon(tag);\n      const tileImgUrl = getImageForIconClass(iconClass);\n      const tileIconClass = tileImgUrl ? null : iconClass;\n      const tileDescription = _.get(tag, 'annotations.description');\n      const tags = getAnnotationTags(tag);\n      const createLabel = 'Create Application';\n      const tileProvider = _.get(tag, ['annotations', ANNOTATIONS.providerDisplayName]);\n      const href = `/catalog/source-to-image?imagestream=${name}&imagestream-ns=${namespace}&preselected-ns=${currentNamespace}`;\n      const builderImageTag = _.head(_.get(imageStream, 'spec.tags'));\n      const sampleRepo = _.get(builderImageTag, 'annotations.sampleRepo');\n      return {\n        obj: imageStream,\n        kind: 'ImageStream',\n        tileName,\n        tileIconClass,\n        tileImgUrl,\n        tileDescription,\n        tags,\n        createLabel,\n        tileProvider,\n        href,\n        sampleRepo,\n      };\n    });\n  }\n\n  render() {\n    const { loaded, loadError } = this.props;\n    const { items } = this.state;\n\n    return (\n      <StatusBox\n        skeleton={skeletonCatalog}\n        data={items}\n        loaded={loaded}\n        loadError={loadError}\n        label=\"Resources\"\n      >\n        <CatalogTileViewPage items={items} />\n      </StatusBox>\n    );\n  }\n}\n\nexport const Catalog = connectToFlags<CatalogProps>(\n  FLAGS.OPENSHIFT,\n  FLAGS.SERVICE_CATALOG,\n  ...plugins.registry.getDevCatalogModels().map(({ properties }) => properties.flag),\n)((props) => {\n  const { flags, mock, namespace } = props;\n  const openshiftFlag = flags[FLAGS.OPENSHIFT];\n  const serviceCatalogFlag = flags[FLAGS.SERVICE_CATALOG];\n  const [templateMetadata, setTemplateMetadata] = React.useState<K8sResourceCommon>();\n  const [templateError, setTemplateError] = React.useState<APIError>();\n  const [projectTemplateMetadata, setProjectTemplateMetadata] = React.useState<K8sResourceCommon[]>(\n    null,\n  );\n  const [projectTemplateError, setProjectTemplateError] = React.useState<APIError>();\n  const [helmCharts, setHelmCharts] = React.useState<HelmChartEntries>();\n\n  const loadTemplates = openshiftFlag && !mock;\n\n  // Load templates from the shared `openshift` namespace. Don't use Firehose\n  // for templates so that we can request only metadata. This keeps the request\n  // much smaller.\n  React.useEffect(() => {\n    if (!loadTemplates) {\n      return;\n    }\n    k8sListPartialMetadata(TemplateModel, { ns: 'openshift' })\n      .then((metadata) => {\n        setTemplateMetadata(metadata);\n        setTemplateError(null);\n      })\n      .catch(setTemplateError);\n  }, [loadTemplates]);\n\n  // Load templates for the current project.\n  React.useEffect(() => {\n    if (!loadTemplates) {\n      return;\n    }\n    // Don't load templates from the `openshift` namespace twice if it's the current namespace\n    if (!namespace || namespace === 'openshift') {\n      setProjectTemplateMetadata([]);\n      setProjectTemplateError(null);\n    } else {\n      k8sListPartialMetadata(TemplateModel, { ns: namespace })\n        .then((metadata) => {\n          setProjectTemplateMetadata(metadata);\n          setProjectTemplateError(null);\n        })\n        .catch(setTemplateError);\n    }\n  }, [loadTemplates, namespace]);\n\n  React.useEffect(() => {\n    coFetch('/api/helm/charts/index.yaml').then(async (res) => {\n      const yaml = await res.text();\n      const json = safeLoad(yaml);\n      setHelmCharts(json.entries);\n    });\n  }, []);\n\n  const error = templateError || projectTemplateError;\n  if (error) {\n    return (\n      <LoadError\n        message={error.message}\n        label=\"Templates\"\n        className=\"loading-box loading-box__errored\"\n      />\n    );\n  }\n\n  if (_.some(flags, (flag) => flagPending(flag))) {\n    return null;\n  }\n\n  const resources = [\n    ...(serviceCatalogFlag\n      ? [\n          {\n            isList: true,\n            kind: referenceForModel(ClusterServiceClassModel),\n            namespaced: false,\n            prop: 'clusterServiceClasses',\n          },\n        ]\n      : []),\n    ...(openshiftFlag\n      ? [\n          {\n            isList: true,\n            kind: 'ImageStream',\n            namespace: 'openshift',\n            prop: 'imageStreams',\n          },\n        ]\n      : []),\n    ...plugins.registry\n      .getDevCatalogModels()\n      .filter(({ properties }) => !properties.flag || flags[properties.flag])\n      .map(({ properties }) => ({\n        isList: true,\n        kind: referenceForModel(properties.model),\n        namespaced: properties.model.namespaced,\n        namespace,\n        prop: referenceForModel(properties.model),\n      })),\n  ];\n\n  return (\n    <div className=\"co-catalog__body\">\n      <Firehose resources={mock ? [] : resources}>\n        <CatalogListPage\n          namespace={namespace}\n          templateMetadata={templateMetadata}\n          projectTemplateMetadata={projectTemplateMetadata}\n          helmCharts={helmCharts}\n          {...(props as any)}\n        />\n      </Firehose>\n    </div>\n  );\n});\n\nexport const CatalogPage = withStartGuide(({ match, noProjectsAvailable }) => {\n  const namespace = _.get(match, 'params.ns');\n  return (\n    <>\n      <Helmet>\n        <title>Developer Catalog</title>\n      </Helmet>\n      <div className=\"co-m-page__body\">\n        <div className=\"co-catalog\">\n          <PageHeading title=\"Developer Catalog\" />\n          <p className=\"co-catalog-page__description\">\n            Add shared apps, services, or source-to-image builders to your project from the\n            Developer Catalog. Cluster admins can install additional apps which will show up here\n            automatically.\n          </p>\n          <Catalog namespace={namespace} mock={noProjectsAvailable} />\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport type CatalogListPageProps = {\n  clusterServiceClasses?: FirehoseResult<K8sResourceKind[]>;\n  imageStreams?: FirehoseResult<K8sResourceKind[]>;\n  templateMetadata?: PartialObjectMetadata[];\n  projectTemplateMetadata?: PartialObjectMetadata[];\n  helmCharts?: HelmChartEntries;\n  loaded: boolean;\n  loadError?: string;\n  namespace?: string;\n};\n\nexport type CatalogListPageState = {\n  items: Item[];\n};\n\nexport type CatalogProps = {\n  flags: FlagsObject;\n  namespace?: string;\n  mock: boolean;\n};\n\nexport type HelmChartEntries = {\n  [name: string]: Array<HelmChart>;\n};\n\nexport type HelmChart = {\n  apiVersion: string;\n  appVersion: string;\n  created: string;\n  description: string;\n  digest: string;\n  home: string;\n  icon: string;\n  keywords: string[];\n  maintainers: Array<{ email: string; name: string }>;\n  name: string;\n  tillerVersion: string;\n  urls: string[];\n  version: string;\n};\n\nCatalogPage.displayName = 'CatalogPage';\nCatalog.displayName = 'Catalog';\n"]}]}