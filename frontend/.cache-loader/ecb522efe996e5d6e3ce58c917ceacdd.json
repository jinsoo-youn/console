{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/propTypes.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/propTypes.ts","mtime":1616735742510},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\n// React's \"isRequired\" means that not only must key exist, but the *value* must be truthy too! This doesn't fly with NSs\nexport const namespaceProptype = function (props, propName, componentName) {\n    if (!props.hasOwnProperty('namespace')) {\n        throw new Error(`${componentName}: \"namespace\" is a required prop`);\n    }\n    if (propName !== 'namespace') {\n        return;\n    }\n    if (props.namespace !== undefined && !_.isString(props.namespace)) {\n        throw new Error(`${componentName}: \"namespace\" must be a string`);\n    }\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/propTypes.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/propTypes.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,yHAAyH;AACzH,MAAM,CAAC,MAAM,iBAAiB,GAAG,UAC/B,KAA4B,EAC5B,QAAgB,EAChB,aAAqB;IAErB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,GAAG,aAAa,kCAAkC,CAAC,CAAC;KACrE;IACD,IAAI,QAAQ,KAAK,WAAW,EAAE;QAC5B,OAAO;KACR;IACD,IAAI,KAAK,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;QACjE,MAAM,IAAI,KAAK,CAAC,GAAG,aAAa,gCAAgC,CAAC,CAAC;KACnE;AACH,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\n\n// React's \"isRequired\" means that not only must key exist, but the *value* must be truthy too! This doesn't fly with NSs\nexport const namespaceProptype = function(\n  props: { namespace: string },\n  propName: string,\n  componentName: string,\n) {\n  if (!props.hasOwnProperty('namespace')) {\n    throw new Error(`${componentName}: \"namespace\" is a required prop`);\n  }\n  if (propName !== 'namespace') {\n    return;\n  }\n  if (props.namespace !== undefined && !_.isString(props.namespace)) {\n    throw new Error(`${componentName}: \"namespace\" must be a string`);\n  }\n};\n"]}]}