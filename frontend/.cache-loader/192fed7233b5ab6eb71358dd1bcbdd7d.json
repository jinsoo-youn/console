{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/const.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/const.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export var StartedByLabel;\n(function (StartedByLabel) {\n    StartedByLabel[\"user\"] = \"pipeline.openshift.io/started-by\";\n    StartedByLabel[\"triggers\"] = \"triggers.tekton.dev/eventlistener\";\n})(StartedByLabel || (StartedByLabel = {}));\nexport var PipelineResourceType;\n(function (PipelineResourceType) {\n    PipelineResourceType[\"git\"] = \"git\";\n    PipelineResourceType[\"image\"] = \"image\";\n    PipelineResourceType[\"cluster\"] = \"cluster\";\n    PipelineResourceType[\"storage\"] = \"storage\";\n})(PipelineResourceType || (PipelineResourceType = {}));\nexport const pipelineResourceTypeSelections = {\n    '': 'Select resource type',\n    [PipelineResourceType.git]: 'Git',\n    [PipelineResourceType.image]: 'Image',\n    [PipelineResourceType.cluster]: 'Cluster',\n    [PipelineResourceType.storage]: 'Storage',\n};\nexport var VolumeTypes;\n(function (VolumeTypes) {\n    VolumeTypes[\"EmptyDirectory\"] = \"Empty Directory\";\n    VolumeTypes[\"ConfigMap\"] = \"Config Map\";\n    VolumeTypes[\"Secret\"] = \"Secret\";\n    VolumeTypes[\"PVC\"] = \"PVC\";\n})(VolumeTypes || (VolumeTypes = {}));\nexport var SecretAnnotationId;\n(function (SecretAnnotationId) {\n    SecretAnnotationId[\"Git\"] = \"git\";\n    SecretAnnotationId[\"Image\"] = \"docker\";\n})(SecretAnnotationId || (SecretAnnotationId = {}));\nexport const SecretAnnotationType = {\n    [SecretAnnotationId.Git]: 'Git Server',\n    [SecretAnnotationId.Image]: 'Docker Registry',\n};\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/const.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/const.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,2DAAyC,CAAA;IACzC,gEAA8C,CAAA;AAChD,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,MAAM,CAAN,IAAY,oBAKX;AALD,WAAY,oBAAoB;IAC9B,mCAAW,CAAA;IACX,uCAAe,CAAA;IACf,2CAAmB,CAAA;IACnB,2CAAmB,CAAA;AACrB,CAAC,EALW,oBAAoB,KAApB,oBAAoB,QAK/B;AAED,MAAM,CAAC,MAAM,8BAA8B,GAAG;IAC5C,EAAE,EAAE,sBAAsB;IAC1B,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,KAAK;IACjC,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,OAAO;IACrC,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,SAAS;IACzC,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,SAAS;CAC1C,CAAC;AAEF,MAAM,CAAN,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,iDAAkC,CAAA;IAClC,uCAAwB,CAAA;IACxB,gCAAiB,CAAA;IACjB,0BAAW,CAAA;AACb,CAAC,EALW,WAAW,KAAX,WAAW,QAKtB;AAED,MAAM,CAAN,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,iCAAW,CAAA;IACX,sCAAgB,CAAA;AAClB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,QAG7B;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,YAAY;IACtC,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,iBAAiB;CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,UAAU,CAAC","sourcesContent":["export enum StartedByLabel {\n  user = 'pipeline.openshift.io/started-by',\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport const pipelineResourceTypeSelections = {\n  '': 'Select resource type',\n  [PipelineResourceType.git]: 'Git',\n  [PipelineResourceType.image]: 'Image',\n  [PipelineResourceType.cluster]: 'Cluster',\n  [PipelineResourceType.storage]: 'Storage',\n};\n\nexport enum VolumeTypes {\n  EmptyDirectory = 'Empty Directory',\n  ConfigMap = 'Config Map',\n  Secret = 'Secret',\n  PVC = 'PVC',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Docker Registry',\n};\n\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\n"]}]}