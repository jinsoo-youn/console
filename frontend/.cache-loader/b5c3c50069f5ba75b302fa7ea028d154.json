{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { murmur3 } from 'murmurhash-js';\nimport { Alert, ActionGroup, Badge, Button, TextArea, TextInput, Tooltip, } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { BanIcon, BellIcon, BellSlashIcon, HourglassHalfIcon, MinusCircleIcon, OutlinedBellIcon, PlusCircleIcon, } from '@patternfly/react-icons';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport * as k8sActions from '../actions/k8s';\nimport * as UIActions from '../actions/ui';\nimport { coFetchJSON } from '../co-fetch';\nimport { ContainerModel, DaemonSetModel, DeploymentModel, JobModel, NamespaceModel, NodeModel, PodModel, StatefulSetModel, } from '../models';\nimport { alertDescription, alertingRuleIsActive, AlertSeverity, alertState, AlertStates, silenceState, SilenceStates, } from '../reducers/monitoring';\nimport store from '../redux';\nimport { Table, TableData, TableRow, TextFilter } from './factory';\nimport { confirmModal } from './modals';\nimport MonitoringDashboardsPage from './monitoring/dashboards';\nimport { graphStateToProps, QueryBrowserPage, ToggleGraph } from './monitoring/metrics';\nimport { QueryBrowser } from './monitoring/query-browser';\nimport { CheckBoxes } from './row-filter';\nimport { AlertmanagerYAMLEditorWrapper } from './monitoring/alert-manager-yaml-editor';\nimport { AlertmanagerConfigWrapper } from './monitoring/alert-manager-config';\nimport { refreshNotificationPollers } from './notification-drawer';\nimport { ActionsMenu, Dropdown } from './utils/dropdown';\nimport { ButtonBar } from './utils/button-bar';\nimport { ExternalLink, getURLSearchParams } from './utils/link';\nimport { Firehose } from './utils/firehose';\nimport { history } from './utils/router';\nimport { Kebab } from './utils/kebab';\nimport { ResourceLink } from './utils/resource-link';\nimport { LoadingInline, StatusBox } from './utils/status-box';\nimport { SectionHeading, ActionButtons } from './utils/headings';\nimport { Timestamp } from './utils/timestamp';\nimport { formatPrometheusDuration, parsePrometheusDuration } from './utils/datetime';\nimport { BlueInfoCircleIcon, GreenCheckCircleIcon, RedExclamationCircleIcon, YellowExclamationTriangleIcon, } from '@console/shared';\nconst AlertResource = {\n    kind: 'Alert',\n    label: 'Alert',\n    plural: '/monitoring/alerts',\n    abbr: 'AL',\n};\nconst RuleResource = {\n    kind: 'AlertRule',\n    label: 'Alerting Rule',\n    plural: '/monitoring/alertrules',\n    abbr: 'AR',\n};\nconst SilenceResource = {\n    kind: 'Silence',\n    label: 'Silence',\n    plural: '/monitoring/silences',\n    abbr: 'SL',\n};\nconst labelsToParams = (labels) => _.map(labels, (v, k) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\nexport const alertURL = (alert, ruleID) => `${AlertResource.plural}/${ruleID}?${labelsToParams(alert.labels)}`;\nconst ruleURL = (rule) => `${RuleResource.plural}/${_.get(rule, 'id')}`;\nconst alertsToProps = ({ UI }) => UI.getIn(['monitoring', 'alerts']) || {};\nconst rulesToProps = (state) => {\n    const data = state.UI.getIn(['monitoring', 'rules']);\n    const { loaded, loadError } = alertsToProps(state);\n    return { data, loaded, loadError };\n};\nconst silencesToProps = ({ UI }) => UI.getIn(['monitoring', 'silences']) || {};\nconst pollers = {};\nconst pollerTimeouts = {};\nconst silenceAlert = (alert) => ({\n    callback: () => history.replace(`${SilenceResource.plural}/~new?${labelsToParams(alert.labels)}`),\n    label: 'Silence Alert',\n});\nconst viewAlertRule = (alert) => ({\n    label: 'View Alerting Rule',\n    href: ruleURL(alert.rule),\n});\nconst editSilence = (silence) => ({\n    label: silenceState(silence) === SilenceStates.Expired ? 'Recreate Silence' : 'Edit Silence',\n    href: `${SilenceResource.plural}/${silence.id}/edit`,\n});\nconst cancelSilence = (silence) => ({\n    label: 'Expire Silence',\n    callback: () => confirmModal({\n        title: 'Expire Silence',\n        message: 'Are you sure you want to expire this silence?',\n        btnText: 'Expire Silence',\n        executeFn: () => coFetchJSON\n            .delete(`${window.SERVER_FLAGS.alertManagerBaseURL}/api/v1/silence/${silence.id}`)\n            .then(() => refreshNotificationPollers()),\n    }),\n});\nconst silenceMenuActions = (silence) => silenceState(silence) === SilenceStates.Expired\n    ? [editSilence(silence)]\n    : [editSilence(silence), cancelSilence(silence)];\nconst SilenceKebab = ({ silence }) => React.createElement(Kebab, { options: silenceMenuActions(silence) });\nconst SilenceActionsMenu = ({ silence }) => (React.createElement(\"div\", { className: \"co-actions\", \"data-test-id\": \"details-actions\" },\n    React.createElement(ActionsMenu, { actions: silenceMenuActions(silence) })));\nconst MonitoringResourceIcon = (props) => {\n    const { className, resource } = props;\n    return (React.createElement(\"span\", { className: classNames(`co-m-resource-icon co-m-resource-${resource.kind.toLowerCase()}`, className), title: resource.label }, resource.abbr));\n};\nconst stateIcons = {\n    [AlertStates.Firing]: React.createElement(BellIcon, null),\n    [AlertStates.Silenced]: React.createElement(BellSlashIcon, { className: \"text-muted\" }),\n    [AlertStates.Pending]: React.createElement(OutlinedBellIcon, null),\n};\nconst AlertState = ({ state }) => {\n    const icon = stateIcons[state];\n    return icon ? (React.createElement(React.Fragment, null,\n        icon,\n        \" \",\n        _.startCase(state))) : null;\n};\nconst SilenceState = ({ silence }) => {\n    const state = silenceState(silence);\n    const icon = {\n        [SilenceStates.Active]: React.createElement(GreenCheckCircleIcon, null),\n        [SilenceStates.Pending]: React.createElement(HourglassHalfIcon, { className: \"monitoring-state-icon--pending\" }),\n        [SilenceStates.Expired]: React.createElement(BanIcon, { className: \"text-muted\", \"data-test-id\": \"ban-icon\" }),\n    }[state];\n    return icon ? (React.createElement(React.Fragment, null,\n        icon,\n        \" \",\n        _.startCase(state))) : null;\n};\nconst StateTimestamp = ({ text, timestamp }) => (React.createElement(\"div\", { className: \"text-muted monitoring-timestamp\" },\n    text,\n    \"\\u00A0\",\n    React.createElement(Timestamp, { timestamp: timestamp })));\nconst AlertStateDescription = ({ alert }) => {\n    if (alert && !_.isEmpty(alert.silencedBy)) {\n        return React.createElement(StateTimestamp, { text: \"Ends\", timestamp: _.max(_.map(alert.silencedBy, 'endsAt')) });\n    }\n    if (alert && alert.activeAt) {\n        return React.createElement(StateTimestamp, { text: \"Since\", timestamp: alert.activeAt });\n    }\n    return null;\n};\nconst severityIcons = {\n    [AlertSeverity.Critical]: RedExclamationCircleIcon,\n    [AlertSeverity.Info]: BlueInfoCircleIcon,\n    [AlertSeverity.None]: BlueInfoCircleIcon,\n    [AlertSeverity.Warning]: YellowExclamationTriangleIcon,\n};\nconst SeverityIcon = ({ severity }) => {\n    const Icon = severityIcons[severity] || YellowExclamationTriangleIcon;\n    return React.createElement(Icon, null);\n};\nconst Severity = ({ severity }) => _.isNil(severity) ? (React.createElement(React.Fragment, null, \"-\")) : (React.createElement(React.Fragment, null,\n    React.createElement(SeverityIcon, { severity: severity }),\n    \" \",\n    _.startCase(severity)));\nconst SeverityBadge = ({ severity }) => _.isNil(severity) || severity === 'none' ? null : (React.createElement(\"span\", { className: \"co-resource-item__resource-status\" },\n    React.createElement(Badge, { className: \"co-resource-item__resource-status-badge\", isRead: true },\n        React.createElement(Severity, { severity: severity }))));\nconst SeverityCounts = ({ alerts }) => {\n    if (_.isEmpty(alerts)) {\n        return React.createElement(React.Fragment, null, \"-\");\n    }\n    const counts = _.countBy(alerts, (a) => {\n        const { severity } = a.labels;\n        return severity === AlertSeverity.Critical || severity === AlertSeverity.Warning\n            ? severity\n            : AlertSeverity.Info;\n    });\n    const severities = [AlertSeverity.Critical, AlertSeverity.Warning, AlertSeverity.Info].filter((s) => counts[s] > 0);\n    return (React.createElement(React.Fragment, null, severities.map((s) => (React.createElement(\"span\", { className: \"monitoring-icon-wrap\", key: s },\n        React.createElement(SeverityIcon, { severity: s }),\n        \" \",\n        counts[s])))));\n};\nconst StateCounts = ({ alerts }) => {\n    const counts = _.countBy(alerts, 'state');\n    const states = [AlertStates.Firing, AlertStates.Pending, AlertStates.Silenced].filter((s) => counts[s] > 0);\n    return (React.createElement(React.Fragment, null, states.map((s) => (React.createElement(\"span\", { className: \"monitoring-icon-wrap\", key: s },\n        stateIcons[s],\n        \" \",\n        counts[s],\n        \" \",\n        _.startCase(s))))));\n};\nconst Annotation = ({ children, title }) => _.isNil(children) ? null : (React.createElement(React.Fragment, null,\n    React.createElement(\"dt\", null, title),\n    React.createElement(\"dd\", null, children)));\nconst Label = ({ k, v }) => (React.createElement(\"div\", { className: \"co-m-label co-m-label--expand\", key: k },\n    React.createElement(\"span\", { className: \"co-m-label__key\" }, k),\n    React.createElement(\"span\", { className: \"co-m-label__eq\" }, \"=\"),\n    React.createElement(\"span\", { className: \"co-m-label__value\" }, v)));\nconst queryBrowserURL = (query) => `/monitoring/query-browser?query0=${encodeURIComponent(query)}`;\nconst Graph_ = ({ deleteAll, filterLabels = undefined, hideGraphs, patchQuery, rule, }) => {\n    const { duration = 0, query = '' } = rule || {};\n    // Set the query in Redux so that other components like the graph tooltip can access it\n    React.useEffect(() => {\n        patchQuery(0, { query });\n    }, [patchQuery, query]);\n    // Clear queries on unmount\n    React.useEffect(() => deleteAll, [deleteAll]);\n    const queries = React.useMemo(() => [query], [query]);\n    if (hideGraphs) {\n        return null;\n    }\n    // 3 times the rule's duration, but not less than 30 minutes\n    const timespan = Math.max(3 * duration, 30 * 60) * 1000;\n    const GraphLink = () => (query ? React.createElement(Link, { to: queryBrowserURL(query) }, \"View in Metrics\") : null);\n    return (React.createElement(QueryBrowser, { defaultTimespan: timespan, filterLabels: filterLabels, GraphLink: GraphLink, queries: queries }));\n};\nconst Graph = connect(graphStateToProps, {\n    deleteAll: UIActions.queryBrowserDeleteAllQueries,\n    patchQuery: UIActions.queryBrowserPatchQuery,\n})(Graph_);\nconst tableSilenceClasses = [\n    classNames('col-sm-5', 'col-xs-8'),\n    classNames('col-md-2', 'col-sm-3', 'hidden-xs'),\n    classNames('col-md-3', 'col-sm-4'),\n    classNames('col-md-2', 'hidden-sm'),\n    Kebab.columnClass,\n];\nconst silenceTableHeader = () => [\n    {\n        title: 'Name',\n        sortField: 'name',\n        transforms: [sortable],\n        props: { className: tableSilenceClasses[0] },\n    },\n    {\n        title: 'Firing Alerts',\n        sortFunc: 'silenceFiringAlertsOrder',\n        transforms: [sortable],\n        props: { className: tableSilenceClasses[1] },\n    },\n    {\n        title: 'State',\n        sortFunc: 'silenceStateOrder',\n        transforms: [sortable],\n        props: { className: tableSilenceClasses[2] },\n    },\n    {\n        title: 'Creator',\n        sortField: 'createdBy',\n        transforms: [sortable],\n        props: { className: tableSilenceClasses[3] },\n    },\n    {\n        title: '',\n        props: { className: tableSilenceClasses[4] },\n    },\n];\nconst silenceTableHeaderNoSort = () => silenceTableHeader().map((h) => _.pick(h, ['title', 'props']));\nconst SilenceMatchersList = ({ silence }) => (React.createElement(\"div\", { className: `co-text-${SilenceResource.kind.toLowerCase()}` }, _.map(silence.matchers, ({ name, isRegex, value }, i) => (React.createElement(Label, { key: i, k: name, v: isRegex ? `~${value}` : value })))));\nconst SilenceTableRow = ({ index, key, obj, style }) => {\n    const { createdBy, endsAt, firingAlerts, id, name, startsAt } = obj;\n    const state = silenceState(obj);\n    return (React.createElement(TableRow, { id: id, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableSilenceClasses[0] },\n            React.createElement(\"div\", { className: \"co-resource-item\" },\n                React.createElement(MonitoringResourceIcon, { resource: SilenceResource }),\n                React.createElement(Link, { className: \"co-resource-item__resource-name\", \"data-test-id\": \"silence-resource-link\", title: id, to: `${SilenceResource.plural}/${id}` }, name)),\n            React.createElement(\"div\", { className: \"monitoring-label-list\" },\n                React.createElement(SilenceMatchersList, { silence: obj }))),\n        React.createElement(TableData, { className: tableSilenceClasses[1] },\n            React.createElement(SeverityCounts, { alerts: firingAlerts })),\n        React.createElement(TableData, { className: classNames(tableSilenceClasses[2], 'co-break-word') },\n            React.createElement(SilenceState, { silence: obj }),\n            state === SilenceStates.Pending && React.createElement(StateTimestamp, { text: \"Starts\", timestamp: startsAt }),\n            state === SilenceStates.Active && React.createElement(StateTimestamp, { text: \"Ends\", timestamp: endsAt }),\n            state === SilenceStates.Expired && React.createElement(StateTimestamp, { text: \"Expired\", timestamp: endsAt })),\n        React.createElement(TableData, { className: tableSilenceClasses[3] }, createdBy || '-'),\n        React.createElement(TableData, { className: tableSilenceClasses[4] },\n            React.createElement(SilenceKebab, { silence: obj }))));\n};\nconst alertMessageResources = {\n    container: ContainerModel,\n    daemonset: DaemonSetModel,\n    deployment: DeploymentModel,\n    job: JobModel,\n    namespace: NamespaceModel,\n    node: NodeModel,\n    pod: PodModel,\n    statefulset: StatefulSetModel,\n};\nconst matchCount = (haystack, regExpString) => _.size(haystack.match(new RegExp(regExpString, 'g')));\nconst AlertMessage = ({ alertText, labels, template }) => {\n    if (_.isEmpty(alertText)) {\n        return null;\n    }\n    let messageParts = [alertText];\n    // Go through each recognized resource type and replace any resource names that exist in alertText\n    // with a link to the resource's details page\n    _.each(alertMessageResources, (model, label) => {\n        const labelValue = labels[label];\n        if (labelValue && !(model.namespaced && _.isEmpty(labels.namespace))) {\n            const tagCount = matchCount(template, `\\\\{\\\\{ *\\\\$labels\\\\.${label} *\\\\}\\\\}`);\n            const resourceNameCount = matchCount(alertText, _.escapeRegExp(labelValue));\n            // Don't do the replacement unless the counts match. This avoids overwriting the wrong string\n            // if labelValue happens to appear elsewhere in alertText\n            if (tagCount > 0 && tagCount === resourceNameCount) {\n                const link = (React.createElement(ResourceLink, { className: \"co-resource-item--monitoring-alert\", inline: true, key: model.kind, kind: model.kind, name: labelValue, namespace: model.namespaced ? labels.namespace : undefined }));\n                messageParts = _.flatMap(messageParts, (part) => {\n                    if (_.isString(part) && part.indexOf(labelValue) !== -1) {\n                        const [before, after] = part.split(labelValue);\n                        return [before, link, after];\n                    }\n                    return [part];\n                });\n            }\n        }\n    });\n    return React.createElement(\"p\", null, messageParts);\n};\nconst HeaderAlertMessage = ({ alert, rule }) => {\n    const annotation = alert.annotations.description ? 'description' : 'message';\n    return (React.createElement(AlertMessage, { alertText: alert.annotations[annotation], labels: alert.labels, template: rule.annotations[annotation] }));\n};\nconst alertStateToProps = (state, { match }) => {\n    const { data, loaded, loadError } = alertsToProps(state);\n    const { loaded: silencesLoaded } = silencesToProps(state);\n    const ruleID = _.get(match, 'params.ruleID');\n    const labels = getURLSearchParams();\n    const alerts = _.filter(data, (a) => a.rule.id === ruleID);\n    const rule = _.get(alerts, '[0].rule');\n    const alert = _.find(alerts, (a) => _.isEqual(a.labels, labels));\n    return { alert, loaded, loadError, rule, silencesLoaded };\n};\nconst AlertsDetailsPage = withFallback(connect(alertStateToProps)((props) => {\n    const { alert, loaded, loadError, rule, silencesLoaded } = props;\n    const { annotations = {}, labels = {}, silencedBy = [] } = alert || {};\n    const { alertname, severity } = labels;\n    const state = alertState(alert);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, `${alertname} · Details`)),\n        React.createElement(StatusBox, { data: alert, label: AlertResource.label, loaded: loaded, loadError: loadError },\n            React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail\" },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                    React.createElement(\"div\", { className: \"co-resource-item\" },\n                        React.createElement(MonitoringResourceIcon, { className: \"co-m-resource-icon--lg\", resource: AlertResource }),\n                        alertname,\n                        React.createElement(SeverityBadge, { severity: severity })),\n                    state !== AlertStates.Silenced && (React.createElement(\"div\", { className: \"co-actions\", \"data-test-id\": \"details-actions\" },\n                        React.createElement(ActionButtons, { actionButtons: [silenceAlert(alert)] })))),\n                React.createElement(HeaderAlertMessage, { alert: alert, rule: rule })),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(ToggleGraph, null),\n                React.createElement(SectionHeading, { text: \"Alert Details\" }),\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-12\" },\n                            React.createElement(Graph, { filterLabels: labels, rule: rule }))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Name\"),\n                                React.createElement(\"dd\", null, alertname))),\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                annotations.description && (React.createElement(Annotation, { title: \"Description\" },\n                                    React.createElement(AlertMessage, { alertText: annotations.description, labels: labels, template: rule === null || rule === void 0 ? void 0 : rule.annotations.description }))),\n                                React.createElement(Annotation, { title: \"Summary\" }, annotations.summary),\n                                annotations.message && (React.createElement(Annotation, { title: \"Message\" },\n                                    React.createElement(AlertMessage, { alertText: annotations.message, labels: labels, template: rule === null || rule === void 0 ? void 0 : rule.annotations.message })))))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Severity\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Severity, { severity: severity })))),\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"State\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(AlertState, { state: state }),\n                                    React.createElement(AlertStateDescription, { alert: alert }))))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Labels\"),\n                                React.createElement(\"dd\", null, _.isEmpty(labels) ? (React.createElement(\"div\", { className: \"text-muted\" }, \"No labels\")) : (React.createElement(\"div\", { className: `co-text-${AlertResource.kind.toLowerCase()}` }, _.map(labels, (v, k) => (React.createElement(Label, { key: k, k: k, v: v }))))))))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Alerting Rule\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(\"div\", { className: \"co-resource-item\" },\n                                        React.createElement(MonitoringResourceIcon, { resource: RuleResource }),\n                                        React.createElement(Link, { to: ruleURL(rule), \"data-test-id\": \"alert-detail-resource-link\", className: \"co-resource-item__resource-name\" }, _.get(rule, 'name'))))))))),\n            silencesLoaded && !_.isEmpty(silencedBy) && (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(SectionHeading, { text: \"Silenced By\" }),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12\" },\n                            React.createElement(Table, { \"aria-label\": \"Silenced By\", data: silencedBy, Header: silenceTableHeaderNoSort, loaded: true, Row: SilenceTableRow })))))))));\n}));\nconst ActiveAlerts = ({ alerts, ruleID }) => (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n    React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n        React.createElement(\"div\", { className: \"col-xs-6\" }, \"Description\"),\n        React.createElement(\"div\", { className: \"col-sm-2 hidden-xs\" }, \"Active Since\"),\n        React.createElement(\"div\", { className: \"col-sm-2 col-xs-3\" }, \"State\"),\n        React.createElement(\"div\", { className: \"col-sm-2 col-xs-3\" }, \"Value\")),\n    React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.sortBy(alerts, alertDescription).map((a, i) => (React.createElement(\"div\", { className: \"row co-resource-list__item\", key: i },\n        React.createElement(\"div\", { className: \"col-xs-6\" },\n            React.createElement(Link, { className: \"co-resource-item\", to: alertURL(a, ruleID) }, alertDescription(a))),\n        React.createElement(\"div\", { className: \"col-sm-2 hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: a.activeAt })),\n        React.createElement(\"div\", { className: \"col-sm-2 col-xs-3\" },\n            React.createElement(AlertState, { state: a.state })),\n        React.createElement(\"div\", { className: \"col-sm-2 col-xs-3 co-truncate\" }, a.value),\n        a.state !== AlertStates.Silenced && (React.createElement(\"div\", { className: \"dropdown-kebab-pf\" },\n            React.createElement(Kebab, { options: [silenceAlert(a)] })))))))));\nconst ruleStateToProps = (state, { match }) => {\n    const { data, loaded, loadError } = rulesToProps(state);\n    const id = _.get(match, 'params.id');\n    const rule = _.find(data, { id });\n    return { loaded, loadError, rule };\n};\nconst AlertRulesDetailsPage = withFallback(connect(ruleStateToProps)((props) => {\n    var _a;\n    const { loaded, loadError, rule } = props;\n    const { alerts = [], annotations = {}, duration = null, name = '', query = '' } = rule || {};\n    const severity = (_a = rule === null || rule === void 0 ? void 0 : rule.labels) === null || _a === void 0 ? void 0 : _a.severity;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, `${name || RuleResource.label} · Details`)),\n        React.createElement(StatusBox, { data: rule, label: RuleResource.label, loaded: loaded, loadError: loadError },\n            React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail\" },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                    React.createElement(\"div\", { className: \"co-resource-item\" },\n                        React.createElement(MonitoringResourceIcon, { className: \"co-m-resource-icon--lg\", resource: RuleResource }),\n                        name,\n                        React.createElement(SeverityBadge, { severity: severity })))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(\"div\", { className: \"monitoring-heading\" },\n                    React.createElement(SectionHeading, { text: \"Alerting Rule Details\" })),\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Name\"),\n                                React.createElement(\"dd\", null, name),\n                                React.createElement(\"dt\", null, \"Severity\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Severity, { severity: severity })),\n                                React.createElement(Annotation, { title: \"Description\" }, annotations.description),\n                                React.createElement(Annotation, { title: \"Summary\" }, annotations.summary),\n                                React.createElement(Annotation, { title: \"Message\" }, annotations.message))),\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                _.isInteger(duration) && (React.createElement(React.Fragment, null,\n                                    React.createElement(\"dt\", null, \"For\"),\n                                    React.createElement(\"dd\", null, duration === 0 ? '-' : formatPrometheusDuration(duration * 1000)))),\n                                React.createElement(\"dt\", null, \"Expression\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Link, { to: queryBrowserURL(query) },\n                                        React.createElement(\"pre\", { className: \"co-pre-wrap monitoring-query\" }, query)))))))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(ToggleGraph, null),\n                    React.createElement(SectionHeading, { text: \"Active Alerts\" }),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-12\" },\n                            React.createElement(Graph, { rule: rule }))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12\" }, _.isEmpty(alerts) ? (React.createElement(\"div\", { className: \"text-center\" }, \"None Found\")) : (React.createElement(ActiveAlerts, { alerts: alerts, ruleID: rule.id })))))))));\n}));\nconst SilencedAlertsList = ({ alerts }) => _.isEmpty(alerts) ? (React.createElement(\"div\", { className: \"text-center\" }, \"None Found\")) : (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n    React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n        React.createElement(\"div\", { className: \"col-xs-9\" }, \"Name\"),\n        React.createElement(\"div\", { className: \"col-xs-3\" }, \"Severity\")),\n    React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.sortBy(alerts, alertDescription).map((a, i) => (React.createElement(\"div\", { className: \"row co-resource-list__item\", key: i },\n        React.createElement(\"div\", { className: \"col-xs-9\" },\n            React.createElement(Link, { className: \"co-resource-item\", to: alertURL(a, a.rule.id) }, a.labels.alertname),\n            React.createElement(\"div\", { className: \"monitoring-description\" }, alertDescription(a))),\n        React.createElement(\"div\", { className: \"col-xs-3\" },\n            React.createElement(Severity, { severity: a.labels.severity })),\n        React.createElement(\"div\", { className: \"dropdown-kebab-pf\" },\n            React.createElement(Kebab, { options: [viewAlertRule(a)] }))))))));\nconst silenceParamToProps = (state, { match }) => {\n    const { data: silences, loaded, loadError } = silencesToProps(state);\n    const { loaded: alertsLoaded } = alertsToProps(state);\n    const silence = _.find(silences, { id: _.get(match, 'params.id') });\n    return { alertsLoaded, loaded, loadError, silence, silences };\n};\nconst SilencesDetailsPage = withFallback(connect(silenceParamToProps)((props) => {\n    const { alertsLoaded, loaded, loadError, silence } = props;\n    const { comment = '', createdBy = '', endsAt = '', firingAlerts = [], matchers = {}, name = '', startsAt = '', updatedAt = '', } = silence || {};\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, `${name || SilenceResource.label} · Details`)),\n        React.createElement(StatusBox, { data: silence, label: SilenceResource.label, loaded: loaded, loadError: loadError },\n            React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail\" },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                    React.createElement(\"div\", { className: \"co-resource-item\" },\n                        React.createElement(MonitoringResourceIcon, { className: \"co-m-resource-icon--lg\", resource: SilenceResource }),\n                        name),\n                    React.createElement(SilenceActionsMenu, { silence: silence }))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(SectionHeading, { text: \"Silence Details\" }),\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                name && (React.createElement(React.Fragment, null,\n                                    React.createElement(\"dt\", null, \"Name\"),\n                                    React.createElement(\"dd\", null, name))),\n                                React.createElement(\"dt\", null, \"Matchers\"),\n                                React.createElement(\"dd\", null, _.isEmpty(matchers) ? (React.createElement(\"div\", { className: \"text-muted\" }, \"No matchers\")) : (React.createElement(SilenceMatchersList, { silence: silence }))),\n                                React.createElement(\"dt\", null, \"State\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(SilenceState, { silence: silence })),\n                                React.createElement(\"dt\", null, \"Last Updated At\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Timestamp, { timestamp: updatedAt })))),\n                        React.createElement(\"div\", { className: \"col-sm-6\" },\n                            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                                React.createElement(\"dt\", null, \"Starts At\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Timestamp, { timestamp: startsAt })),\n                                React.createElement(\"dt\", null, \"Ends At\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(Timestamp, { timestamp: endsAt })),\n                                React.createElement(\"dt\", null, \"Created By\"),\n                                React.createElement(\"dd\", null, createdBy || '-'),\n                                React.createElement(\"dt\", null, \"Comments\"),\n                                React.createElement(\"dd\", null, comment || '-'),\n                                React.createElement(\"dt\", null, \"Firing Alerts\"),\n                                React.createElement(\"dd\", null, alertsLoaded ? React.createElement(SeverityCounts, { alerts: firingAlerts }) : React.createElement(LoadingInline, null))))))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(SectionHeading, { text: \"Firing Alerts\" }),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12\" }, alertsLoaded ? React.createElement(SilencedAlertsList, { alerts: firingAlerts }) : React.createElement(LoadingInline, null))))))));\n}));\nconst tableAlertClasses = [\n    classNames('col-sm-7', 'col-xs-8'),\n    classNames('col-sm-2', 'hidden-xs'),\n    classNames('col-sm-3', 'col-xs-4'),\n    Kebab.columnClass,\n];\nconst AlertTableRow = ({ index, key, obj, style }) => {\n    const { annotations = {}, labels } = obj;\n    const state = alertState(obj);\n    return (React.createElement(TableRow, { id: obj.rule.id, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableAlertClasses[0] },\n            React.createElement(\"div\", { className: \"co-resource-item\" },\n                React.createElement(MonitoringResourceIcon, { resource: AlertResource }),\n                React.createElement(Link, { to: alertURL(obj, obj.rule.id), \"data-test-id\": \"alert-resource-link\", className: \"co-resource-item__resource-name\" }, labels === null || labels === void 0 ? void 0 : labels.alertname)),\n            React.createElement(\"div\", { className: \"monitoring-description\" }, annotations.description || annotations.message)),\n        React.createElement(TableData, { className: tableAlertClasses[1] },\n            React.createElement(Severity, { severity: labels === null || labels === void 0 ? void 0 : labels.severity })),\n        React.createElement(TableData, { className: tableAlertClasses[2] },\n            React.createElement(AlertState, { state: state }),\n            React.createElement(AlertStateDescription, { alert: obj })),\n        React.createElement(TableData, { className: tableAlertClasses[3] },\n            React.createElement(Kebab, { options: state === AlertStates.Silenced\n                    ? [viewAlertRule(obj)]\n                    : [silenceAlert(obj), viewAlertRule(obj)] }))));\n};\nconst alertTableHeader = () => [\n    {\n        title: 'Name',\n        sortField: 'labels.alertname',\n        transforms: [sortable],\n        props: { className: tableAlertClasses[0] },\n    },\n    {\n        title: 'Severity',\n        sortField: 'labels.severity',\n        transforms: [sortable],\n        props: { className: tableAlertClasses[1] },\n    },\n    {\n        title: 'State',\n        sortFunc: 'alertStateOrder',\n        transforms: [sortable],\n        props: { className: tableAlertClasses[2] },\n    },\n    {\n        title: '',\n        props: { className: tableAlertClasses[3] },\n    },\n];\nconst HeaderAlertmanagerLink = ({ path }) => _.isEmpty(window.SERVER_FLAGS.alertManagerPublicURL) ? null : (React.createElement(\"span\", { className: \"monitoring-header-link\" },\n    React.createElement(ExternalLink, { href: `${window.SERVER_FLAGS.alertManagerPublicURL}${path || ''}`, text: \"Alertmanager UI\" })));\nconst alertsRowFilter = {\n    type: 'alert-state',\n    selected: [AlertStates.Firing, AlertStates.Silenced, AlertStates.Pending],\n    reducer: alertState,\n    items: [\n        { id: AlertStates.Firing, title: 'Firing' },\n        { id: AlertStates.Silenced, title: 'Silenced' },\n        { id: AlertStates.Pending, title: 'Pending' },\n    ],\n};\n// Row filter settings are stored in \"k8s\"\nconst filtersToProps = ({ k8s }, { reduxID }) => {\n    const filtersMap = k8s.getIn([reduxID, 'filters']);\n    return { filters: filtersMap ? filtersMap.toJS() : null };\n};\nconst MonitoringListPage = connect(filtersToProps)(class InnerMonitoringListPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.applyTextFilter = this.applyTextFilter.bind(this);\n    }\n    applyTextFilter(val) {\n        const { nameFilterID, reduxID } = this.props;\n        store.dispatch(k8sActions.filterList(reduxID, nameFilterID, val));\n        const params = new URLSearchParams(window.location.search);\n        if (val) {\n            params.set(nameFilterID, val);\n        }\n        else {\n            params.delete(nameFilterID);\n        }\n        const url = new URL(window.location.href);\n        history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n    }\n    UNSAFE_componentWillMount() {\n        const { nameFilterID, reduxID } = this.props;\n        const params = new URLSearchParams(window.location.search);\n        // Ensure the current name filter value matches the name filter GET param\n        this.defaultNameFilter = params.get(nameFilterID);\n        store.dispatch(k8sActions.filterList(reduxID, nameFilterID, this.defaultNameFilter));\n        if (!params.get('sortBy')) {\n            // Sort by rule name by default\n            store.dispatch(UIActions.sortList(reduxID, 'name', undefined, 'asc', 'Name'));\n        }\n    }\n    render() {\n        const { CreateButton, data, filters, Header, kindPlural, loaded, loadError, reduxID, Row, rowFilter, } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, \"Alerting\")),\n            React.createElement(\"div\", { className: \"co-m-pane__filter-bar\" },\n                CreateButton && (React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group\" },\n                    React.createElement(CreateButton, null))),\n                React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\" },\n                    React.createElement(TextFilter, { defaultValue: this.defaultNameFilter, label: `${kindPlural} by name`, onChange: this.applyTextFilter }))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(CheckBoxes, { items: rowFilter.items, itemCount: _.size(data), numbers: _.countBy(data, rowFilter.reducer), reduxIDs: [reduxID], selected: rowFilter.selected, type: rowFilter.type }),\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-xs-12\" },\n                        React.createElement(Table, { \"aria-label\": kindPlural, data: data, filters: filters, Header: Header, loaded: loaded, loadError: loadError, reduxID: reduxID, Row: Row, virtualize: true }))))));\n    }\n});\nconst AlertsPage_ = (props) => (React.createElement(MonitoringListPage, Object.assign({}, props, { Header: alertTableHeader, kindPlural: \"Alerts\", nameFilterID: \"alert-list-text\", reduxID: \"monitoringAlerts\", Row: AlertTableRow, rowFilter: alertsRowFilter })));\nconst AlertsPage = withFallback(connect(alertsToProps)(AlertsPage_));\nconst rulesRowFilter = {\n    type: 'alerting-rule-active',\n    selected: ['true', 'false'],\n    reducer: alertingRuleIsActive,\n    items: [\n        { id: 'true', title: 'Active' },\n        { id: 'false', title: 'Inactive' },\n    ],\n};\nconst tableRuleClasses = [\n    classNames('col-sm-6', 'col-xs-7'),\n    classNames('col-sm-2', 'hidden-xs'),\n    classNames('col-sm-4', 'col-xs-5'),\n];\nconst ruleTableHeader = () => [\n    {\n        title: 'Name',\n        sortField: 'name',\n        transforms: [sortable],\n        props: { className: tableRuleClasses[0] },\n    },\n    {\n        title: 'Severity',\n        sortField: 'labels.severity',\n        transforms: [sortable],\n        props: { className: tableRuleClasses[1] },\n    },\n    {\n        title: 'Alert State',\n        sortFunc: 'alertStateOrder',\n        transforms: [sortable],\n        props: { className: tableRuleClasses[2] },\n    },\n];\nconst RuleTableRow = ({ index, key, obj, style }) => {\n    var _a;\n    return (React.createElement(TableRow, { id: obj.id, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableRuleClasses[0] },\n            React.createElement(\"div\", { className: \"co-resource-item\" },\n                React.createElement(MonitoringResourceIcon, { resource: RuleResource }),\n                React.createElement(Link, { to: ruleURL(obj), className: \"co-resource-item__resource-name\" }, obj.name))),\n        React.createElement(TableData, { className: tableRuleClasses[1] },\n            React.createElement(Severity, { severity: (_a = obj.labels) === null || _a === void 0 ? void 0 : _a.severity })),\n        React.createElement(TableData, { className: tableRuleClasses[2] }, _.isEmpty(obj.alerts) ? 'Inactive' : React.createElement(StateCounts, { alerts: obj.alerts }))));\n};\nconst RulesPage_ = (props) => (React.createElement(MonitoringListPage, Object.assign({}, props, { Header: ruleTableHeader, kindPlural: \"Alerting Rules\", nameFilterID: \"alerting-rule-name\", reduxID: \"monitoringRules\", Row: RuleTableRow, rowFilter: rulesRowFilter })));\nconst RulesPage = withFallback(connect(rulesToProps)(RulesPage_));\nconst silencesRowFilter = {\n    type: 'silence-state',\n    selected: [SilenceStates.Active, SilenceStates.Pending],\n    reducer: silenceState,\n    items: [\n        { id: SilenceStates.Active, title: 'Active' },\n        { id: SilenceStates.Pending, title: 'Pending' },\n        { id: SilenceStates.Expired, title: 'Expired' },\n    ],\n};\nconst CreateButton = () => (React.createElement(Link, { className: \"co-m-primary-action\", to: \"/monitoring/silences/~new\" },\n    React.createElement(Button, { variant: \"primary\" }, \"Create Silence\")));\nconst SilencesPage_ = (props) => (React.createElement(MonitoringListPage, Object.assign({}, props, { CreateButton: CreateButton, Header: silenceTableHeader, kindPlural: \"Silences\", nameFilterID: \"silence-name\", reduxID: \"monitoringSilences\", Row: SilenceTableRow, rowFilter: silencesRowFilter })));\nconst SilencesPage = withFallback(connect(silencesToProps)(SilencesPage_));\nconst pad = (i) => (i < 10 ? `0${i}` : String(i));\nconst formatDate = (d) => `${d.getFullYear()}/${pad(d.getMonth() + 1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\nconst DatetimeTextInput = (props) => {\n    const pattern = '\\\\d{4}/(0?[1-9]|1[012])/(0?[1-9]|[12]\\\\d|3[01]) (0?\\\\d|1\\\\d|2[0-3]):[0-5]\\\\d(:[0-5]\\\\d)?';\n    const isValid = new RegExp(`^${pattern}$`).test(props.value);\n    return (React.createElement(\"div\", null,\n        React.createElement(Tooltip, { content: [\n                React.createElement(\"span\", { className: \"co-nowrap\", key: \"co-timestamp\" }, isValid ? new Date(props.value).toISOString() : 'Invalid date / time'),\n            ] },\n            React.createElement(TextInput, Object.assign({}, props, { \"aria-label\": \"Datetime\", \"data-test-id\": \"datetime\", isValid: isValid || !!props.isDisabled, pattern: pattern, placeholder: \"YYYY/MM/DD hh:mm:ss\" })))));\n};\nconst durationOff = '-';\nconst durations = [durationOff, '30m', '1h', '2h', '6h', '12h', '1d', '2d', '1w'];\nconst durationItems = _.zipObject(durations, durations);\nconst SilenceForm_ = ({ defaults, Info, title }) => {\n    var _a, _b, _c, _d, _e;\n    const now = new Date();\n    // Default to starting now if we have no default start time or if the default start time is in the\n    // past (because Alertmanager will change a time in the past to the current time on save anyway)\n    const defaultIsStartNow = _.isEmpty(defaults.startsAt) || new Date(defaults.startsAt) < now;\n    let defaultDuration = _.isEmpty(defaults.endsAt) ? '2h' : durationOff;\n    // If we have both a default start and end time and the difference between them exactly matches\n    // one of the duration options, automatically select that option in the duration menu\n    if (!defaultIsStartNow && defaults.startsAt && defaults.endsAt) {\n        const durationFromDefaults = formatPrometheusDuration(Date.parse(defaults.endsAt) - Date.parse(defaults.startsAt));\n        if (durations.includes(durationFromDefaults)) {\n            defaultDuration = durationFromDefaults;\n        }\n    }\n    const [comment, setComment] = React.useState((_a = defaults.comment) !== null && _a !== void 0 ? _a : '');\n    const [createdBy, setCreatedBy] = React.useState((_b = defaults.createdBy) !== null && _b !== void 0 ? _b : '');\n    const [duration, setDuration] = React.useState(defaultDuration);\n    const [endsAt, setEndsAt] = React.useState((_c = defaults.endsAt) !== null && _c !== void 0 ? _c : formatDate(new Date(new Date(now).setHours(now.getHours() + 2))));\n    const [error, setError] = React.useState();\n    const [inProgress, setInProgress] = React.useState(false);\n    const [isStartNow, setIsStartNow] = React.useState(defaultIsStartNow);\n    const [matchers, setMatchers] = React.useState((_d = defaults.matchers) !== null && _d !== void 0 ? _d : [{ isRegex: false, name: '', value: '' }]);\n    const [startsAt, setStartsAt] = React.useState((_e = defaults.startsAt) !== null && _e !== void 0 ? _e : formatDate(now));\n    const getEndsAtValue = () => {\n        const startsAtDate = Date.parse(startsAt);\n        return startsAtDate\n            ? formatDate(new Date(startsAtDate + parsePrometheusDuration(duration)))\n            : '-';\n    };\n    const setMatcherField = (i, field, v) => {\n        const newMatchers = _.clone(matchers);\n        _.set(newMatchers, [i, field], v);\n        setMatchers(newMatchers);\n    };\n    const addMatcher = () => {\n        setMatchers([...matchers, { isRegex: false, name: '', value: '' }]);\n    };\n    const removeMatcher = (i) => {\n        const newMatchers = _.clone(matchers);\n        newMatchers.splice(i, 1);\n        // If all matchers have been removed, add back a single blank matcher\n        setMatchers(_.isEmpty(newMatchers) ? [{ isRegex: false, name: '', value: '' }] : newMatchers);\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        // Don't allow comments to only contain whitespace\n        if (_.trim(comment) === '') {\n            setError('Comment is required.');\n            return;\n        }\n        const { alertManagerBaseURL } = window.SERVER_FLAGS;\n        if (!alertManagerBaseURL) {\n            setError('Alertmanager URL not set');\n            return;\n        }\n        setInProgress(true);\n        const saveStartsAt = isStartNow ? new Date() : new Date(startsAt);\n        const saveEndsAt = duration === durationOff\n            ? new Date(endsAt)\n            : new Date(saveStartsAt.getTime() + parsePrometheusDuration(duration));\n        const body = {\n            comment,\n            createdBy,\n            endsAt: saveEndsAt.toISOString(),\n            id: defaults.id,\n            matchers,\n            startsAt: saveStartsAt.toISOString(),\n        };\n        coFetchJSON\n            .post(`${alertManagerBaseURL}/api/v1/silences`, body)\n            .then(({ data }) => {\n            setError(undefined);\n            refreshNotificationPollers();\n            history.push(`${SilenceResource.plural}/${encodeURIComponent(_.get(data, 'silenceId'))}`);\n        })\n            .catch((err) => {\n            setError(_.get(err, 'json.error') || err.message || 'Error saving Silence');\n            setInProgress(false);\n        });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, title)),\n        React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, title),\n            React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"Silences temporarily mute alerts based on a set of label selectors that you define. Notifications will not be sent for alerts that match all the listed values or regular expressions.\")),\n        Info && React.createElement(Info, null),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(\"form\", { onSubmit: onSubmit, className: \"monitoring-silence-alert\" },\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(SectionHeading, { text: \"Duration\" }),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"form-group col-sm-4 col-md-5\" },\n                            React.createElement(\"label\", null, \"Silence alert from...\"),\n                            isStartNow ? (React.createElement(DatetimeTextInput, { isDisabled: true, value: \"Now\" })) : (React.createElement(DatetimeTextInput, { isRequired: true, onChange: (v) => setStartsAt(v), value: startsAt }))),\n                        React.createElement(\"div\", { className: \"form-group col-sm-4 col-md-2\" },\n                            React.createElement(\"label\", null, \"For...\"),\n                            React.createElement(Dropdown, { dropDownClassName: \"dropdown--full-width\", items: durationItems, onChange: (v) => setDuration(v), selectedKey: duration })),\n                        React.createElement(\"div\", { className: \"form-group col-sm-4 col-md-5\" },\n                            React.createElement(\"label\", null, \"Until...\"),\n                            duration === durationOff ? (React.createElement(DatetimeTextInput, { isRequired: true, onChange: (v) => setEndsAt(v), value: endsAt })) : (React.createElement(DatetimeTextInput, { isDisabled: true, value: isStartNow ? `${duration} from now` : getEndsAtValue() })))),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", null,\n                            React.createElement(\"input\", { checked: isStartNow, onChange: (e) => setIsStartNow(e.currentTarget.checked), type: \"checkbox\" }),\n                            \"\\u00A0 Start Immediately\"))),\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(SectionHeading, { text: \"Alert Labels\" }),\n                    React.createElement(\"p\", { className: \"co-help-text\" },\n                        \"Alerts with labels that match these selectors will be silenced instead of firing. Label values can be matched exactly or with a\",\n                        ' ',\n                        React.createElement(ExternalLink, { href: \"https://github.com/google/re2/wiki/Syntax\", text: \"regular expression\" })),\n                    _.map(matchers, (matcher, i) => (React.createElement(\"div\", { className: \"row\", key: i },\n                        React.createElement(\"div\", { className: \"form-group col-sm-4\" },\n                            React.createElement(\"label\", null, \"Label name\"),\n                            React.createElement(TextInput, { \"aria-label\": \"Label name\", isRequired: true, onChange: (v) => setMatcherField(i, 'name', v), placeholder: \"Name\", value: matcher.name })),\n                        React.createElement(\"div\", { className: \"form-group col-sm-4\" },\n                            React.createElement(\"label\", null, \"Label value\"),\n                            React.createElement(TextInput, { \"aria-label\": \"Label value\", isRequired: true, onChange: (v) => setMatcherField(i, 'value', v), placeholder: \"Value\", value: matcher.value })),\n                        React.createElement(\"div\", { className: \"form-group col-sm-4\" },\n                            React.createElement(\"div\", { className: \"monitoring-silence-alert__label-options\" },\n                                React.createElement(\"label\", null,\n                                    React.createElement(\"input\", { type: \"checkbox\", onChange: (e) => setMatcherField(i, 'isRegex', e.currentTarget.checked), checked: matcher.isRegex }),\n                                    \"\\u00A0 Use RegEx\"),\n                                React.createElement(Button, { type: \"button\", onClick: () => removeMatcher(i), \"aria-label\": \"Remove matcher\", variant: \"plain\" },\n                                    React.createElement(MinusCircleIcon, null))))))),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: addMatcher, type: \"button\", variant: \"link\" },\n                            React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                            \"Add Label\"))),\n                React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                    React.createElement(SectionHeading, { text: \"Info\" }),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", null, \"Creator\"),\n                        React.createElement(TextInput, { \"aria-label\": \"Creator\", onChange: (v) => setCreatedBy(v), value: createdBy })),\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"co-required\" }, \"Comment\"),\n                        React.createElement(TextArea, { \"aria-label\": \"Comment\", isRequired: true, onChange: (v) => setComment(v), value: comment })),\n                    React.createElement(ButtonBar, { errorMessage: error, inProgress: inProgress },\n                        React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                            React.createElement(Button, { type: \"submit\", variant: \"primary\" }, \"Silence\"),\n                            React.createElement(Button, { onClick: history.goBack, variant: \"secondary\" }, \"Cancel\"))))))));\n};\nconst SilenceForm = withFallback(SilenceForm_);\nconst EditInfo = () => (React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"info\", title: \"Overwriting current silence\" }, \"When changes are saved, the currently existing silence will be expired and a new silence with the new configuration will take its place.\"));\nconst EditSilence = connect(silenceParamToProps)(({ loaded, loadError, silence }) => {\n    const isExpired = silenceState(silence) === SilenceStates.Expired;\n    const defaults = _.pick(silence, [\n        'comment',\n        'createdBy',\n        'endsAt',\n        'id',\n        'matchers',\n        'startsAt',\n    ]);\n    defaults.startsAt = isExpired ? undefined : formatDate(new Date(defaults.startsAt));\n    defaults.endsAt = isExpired ? undefined : formatDate(new Date(defaults.endsAt));\n    return (React.createElement(StatusBox, { data: silence, label: SilenceResource.label, loaded: loaded, loadError: loadError },\n        React.createElement(SilenceForm, { defaults: defaults, Info: isExpired ? undefined : EditInfo, title: isExpired ? 'Recreate Silence' : 'Edit Silence' })));\n});\nconst CreateSilence_ = ({ createdBy }) => {\n    const matchers = _.map(getURLSearchParams(), (value, name) => ({ name, value, isRegex: false }));\n    return _.isEmpty(matchers) ? (React.createElement(SilenceForm, { defaults: { createdBy }, title: \"Create Silence\" })) : (React.createElement(SilenceForm, { defaults: { createdBy, matchers }, title: \"Silence Alert\" }));\n};\nconst createSilenceStateToProps = ({ UI }) => {\n    var _a, _b;\n    return ({\n        createdBy: (_b = (_a = UI.get('user')) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.name,\n    });\n};\nconst CreateSilence = connect(createSilenceStateToProps)(CreateSilence_);\nconst AlertmanagerYAML = () => {\n    return (React.createElement(Firehose, { resources: [\n            {\n                kind: 'Secret',\n                name: 'alertmanager-main',\n                namespace: 'openshift-monitoring',\n                isList: false,\n                prop: 'obj',\n            },\n        ] },\n        React.createElement(AlertmanagerYAMLEditorWrapper, null)));\n};\nconst AlertmanagerConfig = () => {\n    return (React.createElement(Firehose, { resources: [\n            {\n                kind: 'Secret',\n                name: 'alertmanager-main',\n                namespace: 'openshift-monitoring',\n                isList: false,\n                prop: 'obj',\n            },\n        ] },\n        React.createElement(AlertmanagerConfigWrapper, null)));\n};\nconst Tab = ({ active, children }) => (React.createElement(\"li\", { className: classNames('co-m-horizontal-nav__menu-item', {\n        'co-m-horizontal-nav-item--active': active,\n    }) }, children));\nconst AlertingPage = ({ match }) => {\n    const alertsPath = '/monitoring/alerts';\n    const rulesPath = '/monitoring/alertrules';\n    const silencesPath = '/monitoring/silences';\n    const configPath = '/monitoring/alertmanagerconfig';\n    const YAMLPath = '/monitoring/alertmanageryaml';\n    const { url } = match;\n    const isAlertmanager = url === configPath || url === YAMLPath;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-nav-title co-m-nav-title--detail\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                React.createElement(\"div\", { className: \"co-m-pane__name co-resource-item\" },\n                    React.createElement(\"span\", { className: \"co-resource-item__resource-name\", \"data-test-id\": \"resource-title\" }, isAlertmanager ? 'Alertmanager' : 'Alerting'),\n                    React.createElement(HeaderAlertmanagerLink, { path: \"/#/alerts\" })))),\n        React.createElement(\"ul\", { className: \"co-m-horizontal-nav__menu\" },\n            (url === alertsPath || url === rulesPath || url === silencesPath) && (React.createElement(React.Fragment, null,\n                React.createElement(Tab, { active: url === alertsPath },\n                    React.createElement(Link, { to: alertsPath }, \"Alerts\")),\n                React.createElement(Tab, { active: url === silencesPath },\n                    React.createElement(Link, { to: silencesPath }, \"Silences\")),\n                React.createElement(Tab, { active: url === rulesPath },\n                    React.createElement(Link, { to: rulesPath }, \"Alerting Rules\")))),\n            isAlertmanager && (React.createElement(React.Fragment, null,\n                React.createElement(Tab, { active: url === configPath },\n                    React.createElement(Link, { to: configPath }, \"Details\")),\n                React.createElement(Tab, { active: url === YAMLPath },\n                    React.createElement(Link, { to: YAMLPath }, \"YAML\"))))),\n        React.createElement(Switch, null,\n            React.createElement(Route, { path: alertsPath, exact: true, component: AlertsPage }),\n            React.createElement(Route, { path: rulesPath, exact: true, component: RulesPage }),\n            React.createElement(Route, { path: silencesPath, exact: true, component: SilencesPage }),\n            React.createElement(Route, { path: configPath, exact: true, component: AlertmanagerConfig }),\n            React.createElement(Route, { path: YAMLPath, exact: true, component: AlertmanagerYAML }))));\n};\nconst getAlertsAndRules = (data) => {\n    // Flatten the rules data to make it easier to work with, discard non-alerting rules since those are the only\n    // ones we will be using and add a unique ID to each rule.\n    const groups = _.get(data, 'groups');\n    const rules = _.flatMap(groups, (g) => {\n        const addID = (r) => {\n            const key = [\n                g.file,\n                g.name,\n                r.name,\n                r.duration,\n                r.query,\n                ..._.map(r.labels, (k, v) => `${k}=${v}`),\n            ].join(',');\n            return Object.assign(Object.assign({}, r), { id: String(murmur3(key, 'monitoring-salt')) });\n        };\n        return _.filter(g.rules, { type: 'alerting' }).map(addID);\n    });\n    // Add `rule` object to each alert\n    const alerts = _.flatMap(rules, (rule) => rule.alerts.map((a) => (Object.assign({ rule }, a))));\n    return { alerts, rules };\n};\nexport const getAlerts = (data) => getAlertsAndRules(data).alerts;\nconst PollerPages = () => {\n    React.useEffect(() => {\n        const { prometheusBaseURL } = window.SERVER_FLAGS;\n        if (prometheusBaseURL) {\n            const key = 'alerts';\n            store.dispatch(UIActions.monitoringLoading(key));\n            const poller = () => {\n                coFetchJSON(`${prometheusBaseURL}/api/v1/rules`)\n                    .then(({ data }) => {\n                    const { alerts, rules } = getAlertsAndRules(data);\n                    store.dispatch(UIActions.monitoringLoaded(key, alerts));\n                    store.dispatch(UIActions.monitoringSetRules(rules));\n                })\n                    .catch((e) => store.dispatch(UIActions.monitoringErrored(key, e)))\n                    .then(() => (pollerTimeouts[key] = setTimeout(poller, 15 * 1000)));\n            };\n            pollers[key] = poller;\n            poller();\n        }\n        else {\n            store.dispatch(UIActions.monitoringErrored('alerts', new Error('prometheusBaseURL not set')));\n        }\n        return () => _.each(pollerTimeouts, clearTimeout);\n    }, []);\n    return (React.createElement(Switch, null,\n        React.createElement(Route, { path: \"/monitoring/(alertmanageryaml|alerts|alertrules|silences|alertmanagerconfig)\", exact: true, component: AlertingPage }),\n        React.createElement(Route, { path: \"/monitoring/alertrules/:id\", exact: true, component: AlertRulesDetailsPage }),\n        React.createElement(Route, { path: \"/monitoring/alerts/:ruleID\", exact: true, component: AlertsDetailsPage }),\n        React.createElement(Route, { path: \"/monitoring/silences/:id\", exact: true, component: SilencesDetailsPage }),\n        React.createElement(Route, { path: \"/monitoring/silences/:id/edit\", exact: true, component: EditSilence })));\n};\nexport const MonitoringUI = () => (React.createElement(Switch, null,\n    React.createElement(Redirect, { from: \"/monitoring\", exact: true, to: \"/monitoring/alerts\" }),\n    React.createElement(Route, { path: \"/monitoring/dashboards/:board?\", exact: true, component: MonitoringDashboardsPage }),\n    React.createElement(Route, { path: \"/monitoring/query-browser\", exact: true, component: QueryBrowserPage }),\n    React.createElement(Route, { path: \"/monitoring/silences/~new\", exact: true, component: CreateSilence }),\n    React.createElement(Route, { component: PollerPages })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { murmur3 } from 'murmurhash-js';\nimport {\n  Alert,\n  ActionGroup,\n  Badge,\n  Button,\n  TextArea,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport {\n  BanIcon,\n  BellIcon,\n  BellSlashIcon,\n  HourglassHalfIcon,\n  MinusCircleIcon,\n  OutlinedBellIcon,\n  PlusCircleIcon,\n} from '@patternfly/react-icons';\n\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport * as k8sActions from '../actions/k8s';\nimport * as UIActions from '../actions/ui';\nimport { coFetchJSON } from '../co-fetch';\nimport {\n  ContainerModel,\n  DaemonSetModel,\n  DeploymentModel,\n  JobModel,\n  NamespaceModel,\n  NodeModel,\n  PodModel,\n  StatefulSetModel,\n} from '../models';\nimport { K8sKind } from '../module/k8s';\nimport {\n  alertDescription,\n  alertingRuleIsActive,\n  AlertSeverity,\n  alertState,\n  AlertStates,\n  silenceState,\n  SilenceStates,\n} from '../reducers/monitoring';\nimport store, { RootState } from '../redux';\nimport { RowFunction, Table, TableData, TableRow, TextFilter } from './factory';\nimport { confirmModal } from './modals';\nimport MonitoringDashboardsPage from './monitoring/dashboards';\nimport { graphStateToProps, QueryBrowserPage, ToggleGraph } from './monitoring/metrics';\nimport { PrometheusLabels } from './graphs';\nimport { QueryBrowser, QueryObj } from './monitoring/query-browser';\nimport { CheckBoxes } from './row-filter';\nimport { AlertmanagerYAMLEditorWrapper } from './monitoring/alert-manager-yaml-editor';\nimport { AlertmanagerConfigWrapper } from './monitoring/alert-manager-config';\nimport { refreshNotificationPollers } from './notification-drawer';\nimport { ActionsMenu, Dropdown } from './utils/dropdown';\nimport { ButtonBar } from './utils/button-bar';\nimport { ExternalLink, getURLSearchParams } from './utils/link';\nimport { Firehose } from './utils/firehose';\nimport { history } from './utils/router';\nimport { Kebab } from './utils/kebab';\nimport { ResourceLink } from './utils/resource-link';\nimport { LoadingInline, StatusBox } from './utils/status-box';\nimport { SectionHeading, ActionButtons } from './utils/headings';\nimport { Timestamp } from './utils/timestamp';\nimport { formatPrometheusDuration, parsePrometheusDuration } from './utils/datetime';\nimport {\n  BlueInfoCircleIcon,\n  GreenCheckCircleIcon,\n  RedExclamationCircleIcon,\n  YellowExclamationTriangleIcon,\n} from '@console/shared';\n\nconst AlertResource = {\n  kind: 'Alert',\n  label: 'Alert',\n  plural: '/monitoring/alerts',\n  abbr: 'AL',\n};\n\nconst RuleResource = {\n  kind: 'AlertRule',\n  label: 'Alerting Rule',\n  plural: '/monitoring/alertrules',\n  abbr: 'AR',\n};\n\nconst SilenceResource = {\n  kind: 'Silence',\n  label: 'Silence',\n  plural: '/monitoring/silences',\n  abbr: 'SL',\n};\n\nconst labelsToParams = (labels) =>\n  _.map(labels, (v, k) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n\nexport const alertURL = (alert, ruleID) =>\n  `${AlertResource.plural}/${ruleID}?${labelsToParams(alert.labels)}`;\nconst ruleURL = (rule) => `${RuleResource.plural}/${_.get(rule, 'id')}`;\n\nconst alertsToProps = ({ UI }) => UI.getIn(['monitoring', 'alerts']) || {};\n\nconst rulesToProps = (state: RootState) => {\n  const data = state.UI.getIn(['monitoring', 'rules']);\n  const { loaded, loadError }: Alerts = alertsToProps(state);\n  return { data, loaded, loadError };\n};\n\nconst silencesToProps = ({ UI }) => UI.getIn(['monitoring', 'silences']) || {};\n\nconst pollers = {};\nconst pollerTimeouts = {};\n\nconst silenceAlert = (alert: Alert) => ({\n  callback: () => history.replace(`${SilenceResource.plural}/~new?${labelsToParams(alert.labels)}`),\n  label: 'Silence Alert',\n});\n\nconst viewAlertRule = (alert: Alert) => ({\n  label: 'View Alerting Rule',\n  href: ruleURL(alert.rule),\n});\n\nconst editSilence = (silence: Silence) => ({\n  label: silenceState(silence) === SilenceStates.Expired ? 'Recreate Silence' : 'Edit Silence',\n  href: `${SilenceResource.plural}/${silence.id}/edit`,\n});\n\nconst cancelSilence = (silence: Silence) => ({\n  label: 'Expire Silence',\n  callback: () =>\n    confirmModal({\n      title: 'Expire Silence',\n      message: 'Are you sure you want to expire this silence?',\n      btnText: 'Expire Silence',\n      executeFn: () =>\n        coFetchJSON\n          .delete(`${window.SERVER_FLAGS.alertManagerBaseURL}/api/v1/silence/${silence.id}`)\n          .then(() => refreshNotificationPollers()),\n    }),\n});\n\nconst silenceMenuActions = (silence: Silence) =>\n  silenceState(silence) === SilenceStates.Expired\n    ? [editSilence(silence)]\n    : [editSilence(silence), cancelSilence(silence)];\n\nconst SilenceKebab = ({ silence }) => <Kebab options={silenceMenuActions(silence)} />;\n\nconst SilenceActionsMenu = ({ silence }) => (\n  <div className=\"co-actions\" data-test-id=\"details-actions\">\n    <ActionsMenu actions={silenceMenuActions(silence)} />\n  </div>\n);\n\nconst MonitoringResourceIcon = (props) => {\n  const { className, resource } = props;\n  return (\n    <span\n      className={classNames(\n        `co-m-resource-icon co-m-resource-${resource.kind.toLowerCase()}`,\n        className,\n      )}\n      title={resource.label}\n    >\n      {resource.abbr}\n    </span>\n  );\n};\n\nconst stateIcons = {\n  [AlertStates.Firing]: <BellIcon />,\n  [AlertStates.Silenced]: <BellSlashIcon className=\"text-muted\" />,\n  [AlertStates.Pending]: <OutlinedBellIcon />,\n};\n\nconst AlertState: React.SFC<AlertStateProps> = ({ state }) => {\n  const icon = stateIcons[state];\n  return icon ? (\n    <>\n      {icon} {_.startCase(state)}\n    </>\n  ) : null;\n};\n\nconst SilenceState = ({ silence }) => {\n  const state = silenceState(silence);\n  const icon = {\n    [SilenceStates.Active]: <GreenCheckCircleIcon />,\n    [SilenceStates.Pending]: <HourglassHalfIcon className=\"monitoring-state-icon--pending\" />,\n    [SilenceStates.Expired]: <BanIcon className=\"text-muted\" data-test-id=\"ban-icon\" />,\n  }[state];\n  return icon ? (\n    <>\n      {icon} {_.startCase(state)}\n    </>\n  ) : null;\n};\n\nconst StateTimestamp = ({ text, timestamp }) => (\n  <div className=\"text-muted monitoring-timestamp\">\n    {text}&nbsp;\n    <Timestamp timestamp={timestamp} />\n  </div>\n);\n\nconst AlertStateDescription = ({ alert }) => {\n  if (alert && !_.isEmpty(alert.silencedBy)) {\n    return <StateTimestamp text=\"Ends\" timestamp={_.max(_.map(alert.silencedBy, 'endsAt'))} />;\n  }\n  if (alert && alert.activeAt) {\n    return <StateTimestamp text=\"Since\" timestamp={alert.activeAt} />;\n  }\n  return null;\n};\n\nconst severityIcons = {\n  [AlertSeverity.Critical]: RedExclamationCircleIcon,\n  [AlertSeverity.Info]: BlueInfoCircleIcon,\n  [AlertSeverity.None]: BlueInfoCircleIcon,\n  [AlertSeverity.Warning]: YellowExclamationTriangleIcon,\n};\n\nconst SeverityIcon: React.FC<{ severity: string }> = ({ severity }) => {\n  const Icon = severityIcons[severity] || YellowExclamationTriangleIcon;\n  return <Icon />;\n};\n\nconst Severity: React.FC<{ severity: string }> = ({ severity }) =>\n  _.isNil(severity) ? (\n    <>-</>\n  ) : (\n    <>\n      <SeverityIcon severity={severity} /> {_.startCase(severity)}\n    </>\n  );\n\nconst SeverityBadge: React.FC<{ severity: string }> = ({ severity }) =>\n  _.isNil(severity) || severity === 'none' ? null : (\n    <span className=\"co-resource-item__resource-status\">\n      <Badge className=\"co-resource-item__resource-status-badge\" isRead>\n        <Severity severity={severity} />\n      </Badge>\n    </span>\n  );\n\nconst SeverityCounts: React.FC<{ alerts: Alert[] }> = ({ alerts }) => {\n  if (_.isEmpty(alerts)) {\n    return <>-</>;\n  }\n\n  const counts = _.countBy(alerts, (a) => {\n    const { severity } = a.labels;\n    return severity === AlertSeverity.Critical || severity === AlertSeverity.Warning\n      ? severity\n      : AlertSeverity.Info;\n  });\n\n  const severities = [AlertSeverity.Critical, AlertSeverity.Warning, AlertSeverity.Info].filter(\n    (s) => counts[s] > 0,\n  );\n\n  return (\n    <>\n      {severities.map((s) => (\n        <span className=\"monitoring-icon-wrap\" key={s}>\n          <SeverityIcon severity={s} /> {counts[s]}\n        </span>\n      ))}\n    </>\n  );\n};\n\nconst StateCounts: React.FC<{ alerts: PrometheusAlert[] }> = ({ alerts }) => {\n  const counts = _.countBy(alerts, 'state');\n  const states = [AlertStates.Firing, AlertStates.Pending, AlertStates.Silenced].filter(\n    (s) => counts[s] > 0,\n  );\n\n  return (\n    <>\n      {states.map((s) => (\n        <span className=\"monitoring-icon-wrap\" key={s}>\n          {stateIcons[s]} {counts[s]} {_.startCase(s)}\n        </span>\n      ))}\n    </>\n  );\n};\n\nconst Annotation = ({ children, title }) =>\n  _.isNil(children) ? null : (\n    <>\n      <dt>{title}</dt>\n      <dd>{children}</dd>\n    </>\n  );\n\nconst Label = ({ k, v }) => (\n  <div className=\"co-m-label co-m-label--expand\" key={k}>\n    <span className=\"co-m-label__key\">{k}</span>\n    <span className=\"co-m-label__eq\">=</span>\n    <span className=\"co-m-label__value\">{v}</span>\n  </div>\n);\n\nconst queryBrowserURL = (query) => `/monitoring/query-browser?query0=${encodeURIComponent(query)}`;\n\nconst Graph_: React.FC<GraphProps> = ({\n  deleteAll,\n  filterLabels = undefined,\n  hideGraphs,\n  patchQuery,\n  rule,\n}) => {\n  const { duration = 0, query = '' } = rule || {};\n\n  // Set the query in Redux so that other components like the graph tooltip can access it\n  React.useEffect(() => {\n    patchQuery(0, { query });\n  }, [patchQuery, query]);\n\n  // Clear queries on unmount\n  React.useEffect(() => deleteAll, [deleteAll]);\n\n  const queries = React.useMemo(() => [query], [query]);\n\n  if (hideGraphs) {\n    return null;\n  }\n\n  // 3 times the rule's duration, but not less than 30 minutes\n  const timespan = Math.max(3 * duration, 30 * 60) * 1000;\n\n  const GraphLink = () => (query ? <Link to={queryBrowserURL(query)}>View in Metrics</Link> : null);\n\n  return (\n    <QueryBrowser\n      defaultTimespan={timespan}\n      filterLabels={filterLabels}\n      GraphLink={GraphLink}\n      queries={queries}\n    />\n  );\n};\nconst Graph = connect(graphStateToProps, {\n  deleteAll: UIActions.queryBrowserDeleteAllQueries,\n  patchQuery: UIActions.queryBrowserPatchQuery,\n})(Graph_);\n\nconst tableSilenceClasses = [\n  classNames('col-sm-5', 'col-xs-8'),\n  classNames('col-md-2', 'col-sm-3', 'hidden-xs'),\n  classNames('col-md-3', 'col-sm-4'),\n  classNames('col-md-2', 'hidden-sm'),\n  Kebab.columnClass,\n];\n\nconst silenceTableHeader = () => [\n  {\n    title: 'Name',\n    sortField: 'name',\n    transforms: [sortable],\n    props: { className: tableSilenceClasses[0] },\n  },\n  {\n    title: 'Firing Alerts',\n    sortFunc: 'silenceFiringAlertsOrder',\n    transforms: [sortable],\n    props: { className: tableSilenceClasses[1] },\n  },\n  {\n    title: 'State',\n    sortFunc: 'silenceStateOrder',\n    transforms: [sortable],\n    props: { className: tableSilenceClasses[2] },\n  },\n  {\n    title: 'Creator',\n    sortField: 'createdBy',\n    transforms: [sortable],\n    props: { className: tableSilenceClasses[3] },\n  },\n  {\n    title: '',\n    props: { className: tableSilenceClasses[4] },\n  },\n];\n\nconst silenceTableHeaderNoSort = () =>\n  silenceTableHeader().map((h) => _.pick(h, ['title', 'props']));\n\nconst SilenceMatchersList = ({ silence }) => (\n  <div className={`co-text-${SilenceResource.kind.toLowerCase()}`}>\n    {_.map(silence.matchers, ({ name, isRegex, value }, i) => (\n      <Label key={i} k={name} v={isRegex ? `~${value}` : value} />\n    ))}\n  </div>\n);\n\nconst SilenceTableRow: RowFunction<Silence> = ({ index, key, obj, style }) => {\n  const { createdBy, endsAt, firingAlerts, id, name, startsAt } = obj;\n  const state = silenceState(obj);\n\n  return (\n    <TableRow id={id} index={index} trKey={key} style={style}>\n      <TableData className={tableSilenceClasses[0]}>\n        <div className=\"co-resource-item\">\n          <MonitoringResourceIcon resource={SilenceResource} />\n          <Link\n            className=\"co-resource-item__resource-name\"\n            data-test-id=\"silence-resource-link\"\n            title={id}\n            to={`${SilenceResource.plural}/${id}`}\n          >\n            {name}\n          </Link>\n        </div>\n        <div className=\"monitoring-label-list\">\n          <SilenceMatchersList silence={obj} />\n        </div>\n      </TableData>\n      <TableData className={tableSilenceClasses[1]}>\n        <SeverityCounts alerts={firingAlerts} />\n      </TableData>\n      <TableData className={classNames(tableSilenceClasses[2], 'co-break-word')}>\n        <SilenceState silence={obj} />\n        {state === SilenceStates.Pending && <StateTimestamp text=\"Starts\" timestamp={startsAt} />}\n        {state === SilenceStates.Active && <StateTimestamp text=\"Ends\" timestamp={endsAt} />}\n        {state === SilenceStates.Expired && <StateTimestamp text=\"Expired\" timestamp={endsAt} />}\n      </TableData>\n      <TableData className={tableSilenceClasses[3]}>{createdBy || '-'}</TableData>\n      <TableData className={tableSilenceClasses[4]}>\n        <SilenceKebab silence={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst alertMessageResources: { [labelName: string]: K8sKind } = {\n  container: ContainerModel,\n  daemonset: DaemonSetModel,\n  deployment: DeploymentModel,\n  job: JobModel,\n  namespace: NamespaceModel,\n  node: NodeModel,\n  pod: PodModel,\n  statefulset: StatefulSetModel,\n};\n\nconst matchCount = (haystack: string, regExpString: string) =>\n  _.size(haystack.match(new RegExp(regExpString, 'g')));\n\nconst AlertMessage: React.FC<AlertMessageProps> = ({ alertText, labels, template }) => {\n  if (_.isEmpty(alertText)) {\n    return null;\n  }\n\n  let messageParts: React.ReactNode[] = [alertText];\n\n  // Go through each recognized resource type and replace any resource names that exist in alertText\n  // with a link to the resource's details page\n  _.each(alertMessageResources, (model, label) => {\n    const labelValue = labels[label];\n\n    if (labelValue && !(model.namespaced && _.isEmpty(labels.namespace))) {\n      const tagCount = matchCount(template, `\\\\{\\\\{ *\\\\$labels\\\\.${label} *\\\\}\\\\}`);\n      const resourceNameCount = matchCount(alertText, _.escapeRegExp(labelValue));\n\n      // Don't do the replacement unless the counts match. This avoids overwriting the wrong string\n      // if labelValue happens to appear elsewhere in alertText\n      if (tagCount > 0 && tagCount === resourceNameCount) {\n        const link = (\n          <ResourceLink\n            className=\"co-resource-item--monitoring-alert\"\n            inline\n            key={model.kind}\n            kind={model.kind}\n            name={labelValue}\n            namespace={model.namespaced ? labels.namespace : undefined}\n          />\n        );\n        messageParts = _.flatMap(messageParts, (part) => {\n          if (_.isString(part) && part.indexOf(labelValue) !== -1) {\n            const [before, after] = part.split(labelValue);\n            return [before, link, after];\n          }\n          return [part];\n        });\n      }\n    }\n  });\n\n  return <p>{messageParts}</p>;\n};\n\nconst HeaderAlertMessage: React.FC<{ alert: Alert; rule: Rule }> = ({ alert, rule }) => {\n  const annotation = alert.annotations.description ? 'description' : 'message';\n  return (\n    <AlertMessage\n      alertText={alert.annotations[annotation]}\n      labels={alert.labels}\n      template={rule.annotations[annotation]}\n    />\n  );\n};\n\nconst alertStateToProps = (state: RootState, { match }): AlertsDetailsPageProps => {\n  const { data, loaded, loadError }: Alerts = alertsToProps(state);\n  const { loaded: silencesLoaded }: Silences = silencesToProps(state);\n  const ruleID = _.get(match, 'params.ruleID');\n  const labels = getURLSearchParams();\n  const alerts = _.filter(data, (a) => a.rule.id === ruleID);\n  const rule = _.get(alerts, '[0].rule');\n  const alert = _.find(alerts, (a) => _.isEqual(a.labels, labels));\n  return { alert, loaded, loadError, rule, silencesLoaded };\n};\n\nconst AlertsDetailsPage = withFallback(\n  connect(alertStateToProps)((props: AlertsDetailsPageProps) => {\n    const { alert, loaded, loadError, rule, silencesLoaded } = props;\n    const { annotations = {}, labels = {}, silencedBy = [] } = alert || {};\n    const { alertname, severity } = labels as any;\n    const state = alertState(alert);\n\n    return (\n      <>\n        <Helmet>\n          <title>{`${alertname} · Details`}</title>\n        </Helmet>\n        <StatusBox data={alert} label={AlertResource.label} loaded={loaded} loadError={loadError}>\n          <div className=\"co-m-nav-title co-m-nav-title--detail\">\n            <h1 className=\"co-m-pane__heading\">\n              <div className=\"co-resource-item\">\n                <MonitoringResourceIcon\n                  className=\"co-m-resource-icon--lg\"\n                  resource={AlertResource}\n                />\n                {alertname}\n                <SeverityBadge severity={severity} />\n              </div>\n              {state !== AlertStates.Silenced && (\n                <div className=\"co-actions\" data-test-id=\"details-actions\">\n                  <ActionButtons actionButtons={[silenceAlert(alert)]} />\n                </div>\n              )}\n            </h1>\n            <HeaderAlertMessage alert={alert} rule={rule} />\n          </div>\n          <div className=\"co-m-pane__body\">\n            <ToggleGraph />\n            <SectionHeading text=\"Alert Details\" />\n            <div className=\"co-m-pane__body-group\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <Graph filterLabels={labels} rule={rule} />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Name</dt>\n                    <dd>{alertname}</dd>\n                  </dl>\n                </div>\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    {annotations.description && (\n                      <Annotation title=\"Description\">\n                        <AlertMessage\n                          alertText={annotations.description}\n                          labels={labels}\n                          template={rule?.annotations.description}\n                        />\n                      </Annotation>\n                    )}\n                    <Annotation title=\"Summary\">{annotations.summary}</Annotation>\n                    {annotations.message && (\n                      <Annotation title=\"Message\">\n                        <AlertMessage\n                          alertText={annotations.message}\n                          labels={labels}\n                          template={rule?.annotations.message}\n                        />\n                      </Annotation>\n                    )}\n                  </dl>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Severity</dt>\n                    <dd>\n                      <Severity severity={severity} />\n                    </dd>\n                  </dl>\n                </div>\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>State</dt>\n                    <dd>\n                      <AlertState state={state} />\n                      <AlertStateDescription alert={alert} />\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-12\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Labels</dt>\n                    <dd>\n                      {_.isEmpty(labels) ? (\n                        <div className=\"text-muted\">No labels</div>\n                      ) : (\n                        <div className={`co-text-${AlertResource.kind.toLowerCase()}`}>\n                          {_.map(labels, (v, k) => (\n                            <Label key={k} k={k} v={v} />\n                          ))}\n                        </div>\n                      )}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-12\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Alerting Rule</dt>\n                    <dd>\n                      <div className=\"co-resource-item\">\n                        <MonitoringResourceIcon resource={RuleResource} />\n                        <Link\n                          to={ruleURL(rule)}\n                          data-test-id=\"alert-detail-resource-link\"\n                          className=\"co-resource-item__resource-name\"\n                        >\n                          {_.get(rule, 'name')}\n                        </Link>\n                      </div>\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n          {silencesLoaded && !_.isEmpty(silencedBy) && (\n            <div className=\"co-m-pane__body\">\n              <div className=\"co-m-pane__body-group\">\n                <SectionHeading text=\"Silenced By\" />\n                <div className=\"row\">\n                  <div className=\"col-xs-12\">\n                    <Table\n                      aria-label=\"Silenced By\"\n                      data={silencedBy}\n                      Header={silenceTableHeaderNoSort}\n                      loaded={true}\n                      Row={SilenceTableRow}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </StatusBox>\n      </>\n    );\n  }),\n);\n\nconst ActiveAlerts = ({ alerts, ruleID }) => (\n  <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n    <div className=\"row co-m-table-grid__head\">\n      <div className=\"col-xs-6\">Description</div>\n      <div className=\"col-sm-2 hidden-xs\">Active Since</div>\n      <div className=\"col-sm-2 col-xs-3\">State</div>\n      <div className=\"col-sm-2 col-xs-3\">Value</div>\n    </div>\n    <div className=\"co-m-table-grid__body\">\n      {_.sortBy(alerts, alertDescription).map((a, i) => (\n        <div className=\"row co-resource-list__item\" key={i}>\n          <div className=\"col-xs-6\">\n            <Link className=\"co-resource-item\" to={alertURL(a, ruleID)}>\n              {alertDescription(a)}\n            </Link>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <Timestamp timestamp={a.activeAt} />\n          </div>\n          <div className=\"col-sm-2 col-xs-3\">\n            <AlertState state={a.state} />\n          </div>\n          <div className=\"col-sm-2 col-xs-3 co-truncate\">{a.value}</div>\n          {a.state !== AlertStates.Silenced && (\n            <div className=\"dropdown-kebab-pf\">\n              <Kebab options={[silenceAlert(a)]} />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst ruleStateToProps = (state: RootState, { match }): AlertRulesDetailsPageProps => {\n  const { data, loaded, loadError }: Rules = rulesToProps(state);\n  const id = _.get(match, 'params.id');\n  const rule = _.find(data, { id });\n  return { loaded, loadError, rule };\n};\n\nconst AlertRulesDetailsPage = withFallback(\n  connect(ruleStateToProps)((props: AlertRulesDetailsPageProps) => {\n    const { loaded, loadError, rule } = props;\n    const { alerts = [], annotations = {}, duration = null, name = '', query = '' } = rule || {};\n    const severity = rule?.labels?.severity;\n\n    return (\n      <>\n        <Helmet>\n          <title>{`${name || RuleResource.label} · Details`}</title>\n        </Helmet>\n        <StatusBox data={rule} label={RuleResource.label} loaded={loaded} loadError={loadError}>\n          <div className=\"co-m-nav-title co-m-nav-title--detail\">\n            <h1 className=\"co-m-pane__heading\">\n              <div className=\"co-resource-item\">\n                <MonitoringResourceIcon\n                  className=\"co-m-resource-icon--lg\"\n                  resource={RuleResource}\n                />\n                {name}\n                <SeverityBadge severity={severity} />\n              </div>\n            </h1>\n          </div>\n          <div className=\"co-m-pane__body\">\n            <div className=\"monitoring-heading\">\n              <SectionHeading text=\"Alerting Rule Details\" />\n            </div>\n            <div className=\"co-m-pane__body-group\">\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Name</dt>\n                    <dd>{name}</dd>\n                    <dt>Severity</dt>\n                    <dd>\n                      <Severity severity={severity} />\n                    </dd>\n                    <Annotation title=\"Description\">{annotations.description}</Annotation>\n                    <Annotation title=\"Summary\">{annotations.summary}</Annotation>\n                    <Annotation title=\"Message\">{annotations.message}</Annotation>\n                  </dl>\n                </div>\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    {_.isInteger(duration) && (\n                      <>\n                        <dt>For</dt>\n                        <dd>{duration === 0 ? '-' : formatPrometheusDuration(duration * 1000)}</dd>\n                      </>\n                    )}\n                    <dt>Expression</dt>\n                    <dd>\n                      <Link to={queryBrowserURL(query)}>\n                        <pre className=\"co-pre-wrap monitoring-query\">{query}</pre>\n                      </Link>\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"co-m-pane__body\">\n            <div className=\"co-m-pane__body-group\">\n              <ToggleGraph />\n              <SectionHeading text=\"Active Alerts\" />\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <Graph rule={rule} />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-12\">\n                  {_.isEmpty(alerts) ? (\n                    <div className=\"text-center\">None Found</div>\n                  ) : (\n                    <ActiveAlerts alerts={alerts} ruleID={rule.id} />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </StatusBox>\n      </>\n    );\n  }),\n);\n\nconst SilencedAlertsList = ({ alerts }) =>\n  _.isEmpty(alerts) ? (\n    <div className=\"text-center\">None Found</div>\n  ) : (\n    <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n      <div className=\"row co-m-table-grid__head\">\n        <div className=\"col-xs-9\">Name</div>\n        <div className=\"col-xs-3\">Severity</div>\n      </div>\n      <div className=\"co-m-table-grid__body\">\n        {_.sortBy(alerts, alertDescription).map((a, i) => (\n          <div className=\"row co-resource-list__item\" key={i}>\n            <div className=\"col-xs-9\">\n              <Link className=\"co-resource-item\" to={alertURL(a, a.rule.id)}>\n                {a.labels.alertname}\n              </Link>\n              <div className=\"monitoring-description\">{alertDescription(a)}</div>\n            </div>\n            <div className=\"col-xs-3\">\n              <Severity severity={a.labels.severity} />\n            </div>\n            <div className=\"dropdown-kebab-pf\">\n              <Kebab options={[viewAlertRule(a)]} />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\nconst silenceParamToProps = (state: RootState, { match }) => {\n  const { data: silences, loaded, loadError }: Silences = silencesToProps(state);\n  const { loaded: alertsLoaded }: Alerts = alertsToProps(state);\n  const silence = _.find(silences, { id: _.get(match, 'params.id') });\n  return { alertsLoaded, loaded, loadError, silence, silences };\n};\n\nconst SilencesDetailsPage = withFallback(\n  connect(silenceParamToProps)((props: SilencesDetailsPageProps) => {\n    const { alertsLoaded, loaded, loadError, silence } = props;\n    const {\n      comment = '',\n      createdBy = '',\n      endsAt = '',\n      firingAlerts = [],\n      matchers = {},\n      name = '',\n      startsAt = '',\n      updatedAt = '',\n    } = silence || {};\n\n    return (\n      <>\n        <Helmet>\n          <title>{`${name || SilenceResource.label} · Details`}</title>\n        </Helmet>\n        <StatusBox\n          data={silence}\n          label={SilenceResource.label}\n          loaded={loaded}\n          loadError={loadError}\n        >\n          <div className=\"co-m-nav-title co-m-nav-title--detail\">\n            <h1 className=\"co-m-pane__heading\">\n              <div className=\"co-resource-item\">\n                <MonitoringResourceIcon\n                  className=\"co-m-resource-icon--lg\"\n                  resource={SilenceResource}\n                />\n                {name}\n              </div>\n              <SilenceActionsMenu silence={silence} />\n            </h1>\n          </div>\n          <div className=\"co-m-pane__body\">\n            <SectionHeading text=\"Silence Details\" />\n            <div className=\"co-m-pane__body-group\">\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    {name && (\n                      <>\n                        <dt>Name</dt>\n                        <dd>{name}</dd>\n                      </>\n                    )}\n                    <dt>Matchers</dt>\n                    <dd>\n                      {_.isEmpty(matchers) ? (\n                        <div className=\"text-muted\">No matchers</div>\n                      ) : (\n                        <SilenceMatchersList silence={silence} />\n                      )}\n                    </dd>\n                    <dt>State</dt>\n                    <dd>\n                      <SilenceState silence={silence} />\n                    </dd>\n                    <dt>Last Updated At</dt>\n                    <dd>\n                      <Timestamp timestamp={updatedAt} />\n                    </dd>\n                  </dl>\n                </div>\n                <div className=\"col-sm-6\">\n                  <dl className=\"co-m-pane__details\">\n                    <dt>Starts At</dt>\n                    <dd>\n                      <Timestamp timestamp={startsAt} />\n                    </dd>\n                    <dt>Ends At</dt>\n                    <dd>\n                      <Timestamp timestamp={endsAt} />\n                    </dd>\n                    <dt>Created By</dt>\n                    <dd>{createdBy || '-'}</dd>\n                    <dt>Comments</dt>\n                    <dd>{comment || '-'}</dd>\n                    <dt>Firing Alerts</dt>\n                    <dd>\n                      {alertsLoaded ? <SeverityCounts alerts={firingAlerts} /> : <LoadingInline />}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"co-m-pane__body\">\n            <div className=\"co-m-pane__body-group\">\n              <SectionHeading text=\"Firing Alerts\" />\n              <div className=\"row\">\n                <div className=\"col-xs-12\">\n                  {alertsLoaded ? <SilencedAlertsList alerts={firingAlerts} /> : <LoadingInline />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </StatusBox>\n      </>\n    );\n  }),\n);\n\nconst tableAlertClasses = [\n  classNames('col-sm-7', 'col-xs-8'),\n  classNames('col-sm-2', 'hidden-xs'),\n  classNames('col-sm-3', 'col-xs-4'),\n  Kebab.columnClass,\n];\n\nconst AlertTableRow: RowFunction<Alert> = ({ index, key, obj, style }) => {\n  const { annotations = {}, labels } = obj;\n  const state = alertState(obj);\n\n  return (\n    <TableRow id={obj.rule.id} index={index} trKey={key} style={style}>\n      <TableData className={tableAlertClasses[0]}>\n        <div className=\"co-resource-item\">\n          <MonitoringResourceIcon resource={AlertResource} />\n          <Link\n            to={alertURL(obj, obj.rule.id)}\n            data-test-id=\"alert-resource-link\"\n            className=\"co-resource-item__resource-name\"\n          >\n            {labels?.alertname}\n          </Link>\n        </div>\n        <div className=\"monitoring-description\">\n          {annotations.description || annotations.message}\n        </div>\n      </TableData>\n      <TableData className={tableAlertClasses[1]}>\n        <Severity severity={labels?.severity} />\n      </TableData>\n      <TableData className={tableAlertClasses[2]}>\n        <AlertState state={state} />\n        <AlertStateDescription alert={obj} />\n      </TableData>\n      <TableData className={tableAlertClasses[3]}>\n        <Kebab\n          options={\n            state === AlertStates.Silenced\n              ? [viewAlertRule(obj)]\n              : [silenceAlert(obj), viewAlertRule(obj)]\n          }\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst alertTableHeader = () => [\n  {\n    title: 'Name',\n    sortField: 'labels.alertname',\n    transforms: [sortable],\n    props: { className: tableAlertClasses[0] },\n  },\n  {\n    title: 'Severity',\n    sortField: 'labels.severity',\n    transforms: [sortable],\n    props: { className: tableAlertClasses[1] },\n  },\n  {\n    title: 'State',\n    sortFunc: 'alertStateOrder',\n    transforms: [sortable],\n    props: { className: tableAlertClasses[2] },\n  },\n  {\n    title: '',\n    props: { className: tableAlertClasses[3] },\n  },\n];\n\nconst HeaderAlertmanagerLink = ({ path }) =>\n  _.isEmpty(window.SERVER_FLAGS.alertManagerPublicURL) ? null : (\n    <span className=\"monitoring-header-link\">\n      <ExternalLink\n        href={`${window.SERVER_FLAGS.alertManagerPublicURL}${path || ''}`}\n        text=\"Alertmanager UI\"\n      />\n    </span>\n  );\n\nconst alertsRowFilter = {\n  type: 'alert-state',\n  selected: [AlertStates.Firing, AlertStates.Silenced, AlertStates.Pending],\n  reducer: alertState,\n  items: [\n    { id: AlertStates.Firing, title: 'Firing' },\n    { id: AlertStates.Silenced, title: 'Silenced' },\n    { id: AlertStates.Pending, title: 'Pending' },\n  ],\n};\n\n// Row filter settings are stored in \"k8s\"\nconst filtersToProps = ({ k8s }, { reduxID }) => {\n  const filtersMap = k8s.getIn([reduxID, 'filters']);\n  return { filters: filtersMap ? filtersMap.toJS() : null };\n};\n\nconst MonitoringListPage = connect(filtersToProps)(\n  class InnerMonitoringListPage extends React.Component<ListPageProps> {\n    props: ListPageProps;\n    defaultNameFilter: string;\n\n    constructor(props) {\n      super(props);\n      this.applyTextFilter = this.applyTextFilter.bind(this);\n    }\n\n    applyTextFilter(val) {\n      const { nameFilterID, reduxID } = this.props;\n      store.dispatch(k8sActions.filterList(reduxID, nameFilterID, val));\n\n      const params = new URLSearchParams(window.location.search);\n      if (val) {\n        params.set(nameFilterID, val);\n      } else {\n        params.delete(nameFilterID);\n      }\n      const url = new URL(window.location.href);\n      history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n    }\n\n    UNSAFE_componentWillMount() {\n      const { nameFilterID, reduxID } = this.props;\n      const params = new URLSearchParams(window.location.search);\n\n      // Ensure the current name filter value matches the name filter GET param\n      this.defaultNameFilter = params.get(nameFilterID);\n      store.dispatch(k8sActions.filterList(reduxID, nameFilterID, this.defaultNameFilter));\n\n      if (!params.get('sortBy')) {\n        // Sort by rule name by default\n        store.dispatch(UIActions.sortList(reduxID, 'name', undefined, 'asc', 'Name'));\n      }\n    }\n\n    render() {\n      const {\n        CreateButton,\n        data,\n        filters,\n        Header,\n        kindPlural,\n        loaded,\n        loadError,\n        reduxID,\n        Row,\n        rowFilter,\n      } = this.props;\n\n      return (\n        <>\n          <Helmet>\n            <title>Alerting</title>\n          </Helmet>\n          <div className=\"co-m-pane__filter-bar\">\n            {CreateButton && (\n              <div className=\"co-m-pane__filter-bar-group\">\n                <CreateButton />\n              </div>\n            )}\n            <div className=\"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--filter\">\n              <TextFilter\n                defaultValue={this.defaultNameFilter}\n                label={`${kindPlural} by name`}\n                onChange={this.applyTextFilter}\n              />\n            </div>\n          </div>\n          <div className=\"co-m-pane__body\">\n            <CheckBoxes\n              items={rowFilter.items}\n              itemCount={_.size(data)}\n              numbers={_.countBy(data, rowFilter.reducer)}\n              reduxIDs={[reduxID]}\n              selected={rowFilter.selected}\n              type={rowFilter.type}\n            />\n            <div className=\"row\">\n              <div className=\"col-xs-12\">\n                <Table\n                  aria-label={kindPlural}\n                  data={data}\n                  filters={filters}\n                  Header={Header}\n                  loaded={loaded}\n                  loadError={loadError}\n                  reduxID={reduxID}\n                  Row={Row}\n                  virtualize\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  },\n);\n\nconst AlertsPage_ = (props) => (\n  <MonitoringListPage\n    {...props}\n    Header={alertTableHeader}\n    kindPlural=\"Alerts\"\n    nameFilterID=\"alert-list-text\"\n    reduxID=\"monitoringAlerts\"\n    Row={AlertTableRow}\n    rowFilter={alertsRowFilter}\n  />\n);\nconst AlertsPage = withFallback(connect(alertsToProps)(AlertsPage_));\n\nconst rulesRowFilter = {\n  type: 'alerting-rule-active',\n  selected: ['true', 'false'],\n  reducer: alertingRuleIsActive,\n  items: [\n    { id: 'true', title: 'Active' },\n    { id: 'false', title: 'Inactive' },\n  ],\n};\n\nconst tableRuleClasses = [\n  classNames('col-sm-6', 'col-xs-7'),\n  classNames('col-sm-2', 'hidden-xs'),\n  classNames('col-sm-4', 'col-xs-5'),\n];\n\nconst ruleTableHeader = () => [\n  {\n    title: 'Name',\n    sortField: 'name',\n    transforms: [sortable],\n    props: { className: tableRuleClasses[0] },\n  },\n  {\n    title: 'Severity',\n    sortField: 'labels.severity',\n    transforms: [sortable],\n    props: { className: tableRuleClasses[1] },\n  },\n  {\n    title: 'Alert State',\n    sortFunc: 'alertStateOrder',\n    transforms: [sortable],\n    props: { className: tableRuleClasses[2] },\n  },\n];\n\nconst RuleTableRow: RowFunction<Rule> = ({ index, key, obj, style }) => (\n  <TableRow id={obj.id} index={index} trKey={key} style={style}>\n    <TableData className={tableRuleClasses[0]}>\n      <div className=\"co-resource-item\">\n        <MonitoringResourceIcon resource={RuleResource} />\n        <Link to={ruleURL(obj)} className=\"co-resource-item__resource-name\">\n          {obj.name}\n        </Link>\n      </div>\n    </TableData>\n    <TableData className={tableRuleClasses[1]}>\n      <Severity severity={obj.labels?.severity} />\n    </TableData>\n    <TableData className={tableRuleClasses[2]}>\n      {_.isEmpty(obj.alerts) ? 'Inactive' : <StateCounts alerts={obj.alerts} />}\n    </TableData>\n  </TableRow>\n);\n\nconst RulesPage_ = (props) => (\n  <MonitoringListPage\n    {...props}\n    Header={ruleTableHeader}\n    kindPlural=\"Alerting Rules\"\n    nameFilterID=\"alerting-rule-name\"\n    reduxID=\"monitoringRules\"\n    Row={RuleTableRow}\n    rowFilter={rulesRowFilter}\n  />\n);\nconst RulesPage = withFallback(connect(rulesToProps)(RulesPage_));\n\nconst silencesRowFilter = {\n  type: 'silence-state',\n  selected: [SilenceStates.Active, SilenceStates.Pending],\n  reducer: silenceState,\n  items: [\n    { id: SilenceStates.Active, title: 'Active' },\n    { id: SilenceStates.Pending, title: 'Pending' },\n    { id: SilenceStates.Expired, title: 'Expired' },\n  ],\n};\n\nconst CreateButton = () => (\n  <Link className=\"co-m-primary-action\" to=\"/monitoring/silences/~new\">\n    <Button variant=\"primary\">Create Silence</Button>\n  </Link>\n);\n\nconst SilencesPage_ = (props) => (\n  <MonitoringListPage\n    {...props}\n    CreateButton={CreateButton}\n    Header={silenceTableHeader}\n    kindPlural=\"Silences\"\n    nameFilterID=\"silence-name\"\n    reduxID=\"monitoringSilences\"\n    Row={SilenceTableRow}\n    rowFilter={silencesRowFilter}\n  />\n);\nconst SilencesPage = withFallback(connect(silencesToProps)(SilencesPage_));\n\nconst pad = (i: number): string => (i < 10 ? `0${i}` : String(i));\n\nconst formatDate = (d: Date): string =>\n  `${d.getFullYear()}/${pad(d.getMonth() + 1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(\n    d.getMinutes(),\n  )}:${pad(d.getSeconds())}`;\n\nconst DatetimeTextInput = (props) => {\n  const pattern =\n    '\\\\d{4}/(0?[1-9]|1[012])/(0?[1-9]|[12]\\\\d|3[01]) (0?\\\\d|1\\\\d|2[0-3]):[0-5]\\\\d(:[0-5]\\\\d)?';\n  const isValid = new RegExp(`^${pattern}$`).test(props.value);\n\n  return (\n    <div>\n      <Tooltip\n        content={[\n          <span className=\"co-nowrap\" key=\"co-timestamp\">\n            {isValid ? new Date(props.value).toISOString() : 'Invalid date / time'}\n          </span>,\n        ]}\n      >\n        <TextInput\n          {...props}\n          aria-label=\"Datetime\"\n          data-test-id=\"datetime\"\n          isValid={isValid || !!props.isDisabled}\n          pattern={pattern}\n          placeholder=\"YYYY/MM/DD hh:mm:ss\"\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst durationOff = '-';\nconst durations = [durationOff, '30m', '1h', '2h', '6h', '12h', '1d', '2d', '1w'];\nconst durationItems = _.zipObject(durations, durations);\n\nconst SilenceForm_: React.FC<SilenceFormProps> = ({ defaults, Info, title }) => {\n  const now = new Date();\n\n  // Default to starting now if we have no default start time or if the default start time is in the\n  // past (because Alertmanager will change a time in the past to the current time on save anyway)\n  const defaultIsStartNow = _.isEmpty(defaults.startsAt) || new Date(defaults.startsAt) < now;\n\n  let defaultDuration = _.isEmpty(defaults.endsAt) ? '2h' : durationOff;\n\n  // If we have both a default start and end time and the difference between them exactly matches\n  // one of the duration options, automatically select that option in the duration menu\n  if (!defaultIsStartNow && defaults.startsAt && defaults.endsAt) {\n    const durationFromDefaults = formatPrometheusDuration(\n      Date.parse(defaults.endsAt) - Date.parse(defaults.startsAt),\n    );\n    if (durations.includes(durationFromDefaults)) {\n      defaultDuration = durationFromDefaults;\n    }\n  }\n\n  const [comment, setComment] = React.useState(defaults.comment ?? '');\n  const [createdBy, setCreatedBy] = React.useState(defaults.createdBy ?? '');\n  const [duration, setDuration] = React.useState(defaultDuration);\n  const [endsAt, setEndsAt] = React.useState(\n    defaults.endsAt ?? formatDate(new Date(new Date(now).setHours(now.getHours() + 2))),\n  );\n  const [error, setError] = React.useState<string>();\n  const [inProgress, setInProgress] = React.useState(false);\n  const [isStartNow, setIsStartNow] = React.useState(defaultIsStartNow);\n  const [matchers, setMatchers] = React.useState(\n    defaults.matchers ?? [{ isRegex: false, name: '', value: '' }],\n  );\n  const [startsAt, setStartsAt] = React.useState(defaults.startsAt ?? formatDate(now));\n\n  const getEndsAtValue = (): string => {\n    const startsAtDate = Date.parse(startsAt);\n    return startsAtDate\n      ? formatDate(new Date(startsAtDate + parsePrometheusDuration(duration)))\n      : '-';\n  };\n\n  const setMatcherField = (i: number, field: string, v: any): void => {\n    const newMatchers = _.clone(matchers);\n    _.set(newMatchers, [i, field], v);\n    setMatchers(newMatchers);\n  };\n\n  const addMatcher = (): void => {\n    setMatchers([...matchers, { isRegex: false, name: '', value: '' }]);\n  };\n\n  const removeMatcher = (i: number): void => {\n    const newMatchers = _.clone(matchers);\n    newMatchers.splice(i, 1);\n\n    // If all matchers have been removed, add back a single blank matcher\n    setMatchers(_.isEmpty(newMatchers) ? [{ isRegex: false, name: '', value: '' }] : newMatchers);\n  };\n\n  const onSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    // Don't allow comments to only contain whitespace\n    if (_.trim(comment) === '') {\n      setError('Comment is required.');\n      return;\n    }\n\n    const { alertManagerBaseURL } = window.SERVER_FLAGS;\n    if (!alertManagerBaseURL) {\n      setError('Alertmanager URL not set');\n      return;\n    }\n\n    setInProgress(true);\n\n    const saveStartsAt: Date = isStartNow ? new Date() : new Date(startsAt);\n    const saveEndsAt: Date =\n      duration === durationOff\n        ? new Date(endsAt)\n        : new Date(saveStartsAt.getTime() + parsePrometheusDuration(duration));\n\n    const body = {\n      comment,\n      createdBy,\n      endsAt: saveEndsAt.toISOString(),\n      id: defaults.id,\n      matchers,\n      startsAt: saveStartsAt.toISOString(),\n    };\n\n    coFetchJSON\n      .post(`${alertManagerBaseURL}/api/v1/silences`, body)\n      .then(({ data }) => {\n        setError(undefined);\n        refreshNotificationPollers();\n        history.push(`${SilenceResource.plural}/${encodeURIComponent(_.get(data, 'silenceId'))}`);\n      })\n      .catch((err) => {\n        setError(_.get(err, 'json.error') || err.message || 'Error saving Silence');\n        setInProgress(false);\n      });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div className=\"co-m-nav-title co-m-nav-title--detail\">\n        <h1 className=\"co-m-pane__heading\">{title}</h1>\n        <p className=\"co-m-pane__explanation\">\n          Silences temporarily mute alerts based on a set of label selectors that you define.\n          Notifications will not be sent for alerts that match all the listed values or regular\n          expressions.\n        </p>\n      </div>\n\n      {Info && <Info />}\n\n      <div className=\"co-m-pane__body\">\n        <form onSubmit={onSubmit} className=\"monitoring-silence-alert\">\n          <div className=\"co-m-pane__body-group\">\n            <SectionHeading text=\"Duration\" />\n            <div className=\"row\">\n              <div className=\"form-group col-sm-4 col-md-5\">\n                <label>Silence alert from...</label>\n                {isStartNow ? (\n                  <DatetimeTextInput isDisabled value=\"Now\" />\n                ) : (\n                  <DatetimeTextInput\n                    isRequired\n                    onChange={(v: string) => setStartsAt(v)}\n                    value={startsAt}\n                  />\n                )}\n              </div>\n              <div className=\"form-group col-sm-4 col-md-2\">\n                <label>For...</label>\n                <Dropdown\n                  dropDownClassName=\"dropdown--full-width\"\n                  items={durationItems}\n                  onChange={(v: string) => setDuration(v)}\n                  selectedKey={duration}\n                />\n              </div>\n              <div className=\"form-group col-sm-4 col-md-5\">\n                <label>Until...</label>\n                {duration === durationOff ? (\n                  <DatetimeTextInput\n                    isRequired\n                    onChange={(v: string) => setEndsAt(v)}\n                    value={endsAt}\n                  />\n                ) : (\n                  <DatetimeTextInput\n                    isDisabled\n                    value={isStartNow ? `${duration} from now` : getEndsAtValue()}\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label>\n                <input\n                  checked={isStartNow}\n                  onChange={(e) => setIsStartNow(e.currentTarget.checked)}\n                  type=\"checkbox\"\n                />\n                &nbsp; Start Immediately\n              </label>\n            </div>\n          </div>\n\n          <div className=\"co-m-pane__body-group\">\n            <SectionHeading text=\"Alert Labels\" />\n            <p className=\"co-help-text\">\n              Alerts with labels that match these selectors will be silenced instead of firing.\n              Label values can be matched exactly or with a{' '}\n              <ExternalLink\n                href=\"https://github.com/google/re2/wiki/Syntax\"\n                text=\"regular expression\"\n              />\n            </p>\n\n            {_.map(matchers, (matcher, i: number) => (\n              <div className=\"row\" key={i}>\n                <div className=\"form-group col-sm-4\">\n                  <label>Label name</label>\n                  <TextInput\n                    aria-label=\"Label name\"\n                    isRequired\n                    onChange={(v: string) => setMatcherField(i, 'name', v)}\n                    placeholder=\"Name\"\n                    value={matcher.name}\n                  />\n                </div>\n                <div className=\"form-group col-sm-4\">\n                  <label>Label value</label>\n                  <TextInput\n                    aria-label=\"Label value\"\n                    isRequired\n                    onChange={(v: string) => setMatcherField(i, 'value', v)}\n                    placeholder=\"Value\"\n                    value={matcher.value}\n                  />\n                </div>\n                <div className=\"form-group col-sm-4\">\n                  <div className=\"monitoring-silence-alert__label-options\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        onChange={(e) => setMatcherField(i, 'isRegex', e.currentTarget.checked)}\n                        checked={matcher.isRegex}\n                      />\n                      &nbsp; Use RegEx\n                    </label>\n                    <Button\n                      type=\"button\"\n                      onClick={() => removeMatcher(i)}\n                      aria-label=\"Remove matcher\"\n                      variant=\"plain\"\n                    >\n                      <MinusCircleIcon />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            <div className=\"form-group\">\n              <Button\n                className=\"pf-m-link--align-left\"\n                onClick={addMatcher}\n                type=\"button\"\n                variant=\"link\"\n              >\n                <PlusCircleIcon className=\"co-icon-space-r\" />\n                Add Label\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"co-m-pane__body-group\">\n            <SectionHeading text=\"Info\" />\n            <div className=\"form-group\">\n              <label>Creator</label>\n              <TextInput\n                aria-label=\"Creator\"\n                onChange={(v: string) => setCreatedBy(v)}\n                value={createdBy}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"co-required\">Comment</label>\n              <TextArea\n                aria-label=\"Comment\"\n                isRequired\n                onChange={(v: string) => setComment(v)}\n                value={comment}\n              />\n            </div>\n            <ButtonBar errorMessage={error} inProgress={inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button type=\"submit\" variant=\"primary\">\n                  Silence\n                </Button>\n                <Button onClick={history.goBack} variant=\"secondary\">\n                  Cancel\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\nconst SilenceForm = withFallback(SilenceForm_);\n\nconst EditInfo = () => (\n  <Alert isInline className=\"co-alert\" variant=\"info\" title=\"Overwriting current silence\">\n    When changes are saved, the currently existing silence will be expired and a new silence with\n    the new configuration will take its place.\n  </Alert>\n);\n\nconst EditSilence = connect(silenceParamToProps)(({ loaded, loadError, silence }) => {\n  const isExpired = silenceState(silence) === SilenceStates.Expired;\n  const defaults = _.pick(silence, [\n    'comment',\n    'createdBy',\n    'endsAt',\n    'id',\n    'matchers',\n    'startsAt',\n  ]);\n  defaults.startsAt = isExpired ? undefined : formatDate(new Date(defaults.startsAt));\n  defaults.endsAt = isExpired ? undefined : formatDate(new Date(defaults.endsAt));\n  return (\n    <StatusBox data={silence} label={SilenceResource.label} loaded={loaded} loadError={loadError}>\n      <SilenceForm\n        defaults={defaults}\n        Info={isExpired ? undefined : EditInfo}\n        title={isExpired ? 'Recreate Silence' : 'Edit Silence'}\n      />\n    </StatusBox>\n  );\n});\n\nconst CreateSilence_ = ({ createdBy }) => {\n  const matchers = _.map(getURLSearchParams(), (value, name) => ({ name, value, isRegex: false }));\n  return _.isEmpty(matchers) ? (\n    <SilenceForm defaults={{ createdBy }} title=\"Create Silence\" />\n  ) : (\n    <SilenceForm defaults={{ createdBy, matchers }} title=\"Silence Alert\" />\n  );\n};\nconst createSilenceStateToProps = ({ UI }: RootState) => ({\n  createdBy: UI.get('user')?.metadata?.name,\n});\nconst CreateSilence = connect(createSilenceStateToProps)(CreateSilence_);\n\nconst AlertmanagerYAML = () => {\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: 'Secret',\n          name: 'alertmanager-main',\n          namespace: 'openshift-monitoring',\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <AlertmanagerYAMLEditorWrapper />\n    </Firehose>\n  );\n};\n\nconst AlertmanagerConfig = () => {\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: 'Secret',\n          name: 'alertmanager-main',\n          namespace: 'openshift-monitoring',\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <AlertmanagerConfigWrapper />\n    </Firehose>\n  );\n};\n\nconst Tab: React.FC<{ active: boolean; children: React.ReactNode }> = ({ active, children }) => (\n  <li\n    className={classNames('co-m-horizontal-nav__menu-item', {\n      'co-m-horizontal-nav-item--active': active,\n    })}\n  >\n    {children}\n  </li>\n);\n\nconst AlertingPage: React.SFC<AlertingPageProps> = ({ match }) => {\n  const alertsPath = '/monitoring/alerts';\n  const rulesPath = '/monitoring/alertrules';\n  const silencesPath = '/monitoring/silences';\n  const configPath = '/monitoring/alertmanagerconfig';\n  const YAMLPath = '/monitoring/alertmanageryaml';\n\n  const { url } = match;\n  const isAlertmanager = url === configPath || url === YAMLPath;\n\n  return (\n    <>\n      <div className=\"co-m-nav-title co-m-nav-title--detail\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            <span className=\"co-resource-item__resource-name\" data-test-id=\"resource-title\">\n              {isAlertmanager ? 'Alertmanager' : 'Alerting'}\n            </span>\n            <HeaderAlertmanagerLink path=\"/#/alerts\" />\n          </div>\n        </h1>\n      </div>\n      <ul className=\"co-m-horizontal-nav__menu\">\n        {(url === alertsPath || url === rulesPath || url === silencesPath) && (\n          <>\n            <Tab active={url === alertsPath}>\n              <Link to={alertsPath}>Alerts</Link>\n            </Tab>\n            <Tab active={url === silencesPath}>\n              <Link to={silencesPath}>Silences</Link>\n            </Tab>\n            <Tab active={url === rulesPath}>\n              <Link to={rulesPath}>Alerting Rules</Link>\n            </Tab>\n          </>\n        )}\n        {isAlertmanager && (\n          <>\n            <Tab active={url === configPath}>\n              <Link to={configPath}>Details</Link>\n            </Tab>\n            <Tab active={url === YAMLPath}>\n              <Link to={YAMLPath}>YAML</Link>\n            </Tab>\n          </>\n        )}\n      </ul>\n      <Switch>\n        <Route path={alertsPath} exact component={AlertsPage} />\n        <Route path={rulesPath} exact component={RulesPage} />\n        <Route path={silencesPath} exact component={SilencesPage} />\n        <Route path={configPath} exact component={AlertmanagerConfig} />\n        <Route path={YAMLPath} exact component={AlertmanagerYAML} />\n      </Switch>\n    </>\n  );\n};\n\nconst getAlertsAndRules = (\n  data: PrometheusRulesResponse['data'],\n): { alerts: Alert[]; rules: Rule[] } => {\n  // Flatten the rules data to make it easier to work with, discard non-alerting rules since those are the only\n  // ones we will be using and add a unique ID to each rule.\n  const groups = _.get(data, 'groups') as PrometheusRulesResponse['data']['groups'];\n  const rules = _.flatMap(groups, (g) => {\n    const addID = (r: PrometheusRule): Rule => {\n      const key = [\n        g.file,\n        g.name,\n        r.name,\n        r.duration,\n        r.query,\n        ..._.map(r.labels, (k, v) => `${k}=${v}`),\n      ].join(',');\n      return { ...r, id: String(murmur3(key, 'monitoring-salt')) };\n    };\n\n    return _.filter(g.rules, { type: 'alerting' }).map(addID);\n  });\n\n  // Add `rule` object to each alert\n  const alerts = _.flatMap(rules, (rule) => rule.alerts.map((a) => ({ rule, ...a })));\n\n  return { alerts, rules };\n};\n\nexport const getAlerts = (data: PrometheusRulesResponse['data']) => getAlertsAndRules(data).alerts;\n\nconst PollerPages = () => {\n  React.useEffect(() => {\n    const { prometheusBaseURL } = window.SERVER_FLAGS;\n\n    if (prometheusBaseURL) {\n      const key = 'alerts';\n      store.dispatch(UIActions.monitoringLoading(key));\n      const poller = (): void => {\n        coFetchJSON(`${prometheusBaseURL}/api/v1/rules`)\n          .then(({ data }) => {\n            const { alerts, rules } = getAlertsAndRules(data);\n            store.dispatch(UIActions.monitoringLoaded(key, alerts));\n            store.dispatch(UIActions.monitoringSetRules(rules));\n          })\n          .catch((e) => store.dispatch(UIActions.monitoringErrored(key, e)))\n          .then(() => (pollerTimeouts[key] = setTimeout(poller, 15 * 1000)));\n      };\n      pollers[key] = poller;\n      poller();\n    } else {\n      store.dispatch(UIActions.monitoringErrored('alerts', new Error('prometheusBaseURL not set')));\n    }\n    return () => _.each(pollerTimeouts, clearTimeout);\n  }, []);\n\n  return (\n    <Switch>\n      <Route\n        path=\"/monitoring/(alertmanageryaml|alerts|alertrules|silences|alertmanagerconfig)\"\n        exact\n        component={AlertingPage}\n      />\n      <Route path=\"/monitoring/alertrules/:id\" exact component={AlertRulesDetailsPage} />\n      <Route path=\"/monitoring/alerts/:ruleID\" exact component={AlertsDetailsPage} />\n      <Route path=\"/monitoring/silences/:id\" exact component={SilencesDetailsPage} />\n      <Route path=\"/monitoring/silences/:id/edit\" exact component={EditSilence} />\n    </Switch>\n  );\n};\n\nexport const MonitoringUI = () => (\n  <Switch>\n    <Redirect from=\"/monitoring\" exact to=\"/monitoring/alerts\" />\n    <Route path=\"/monitoring/dashboards/:board?\" exact component={MonitoringDashboardsPage} />\n    <Route path=\"/monitoring/query-browser\" exact component={QueryBrowserPage} />\n    <Route path=\"/monitoring/silences/~new\" exact component={CreateSilence} />\n    <Route component={PollerPages} />\n  </Switch>\n);\n\ntype Silence = {\n  comment: string;\n  createdBy: string;\n  endsAt: string;\n  // eslint-disable-next-line no-use-before-define\n  firingAlerts: Alert[];\n  id?: string;\n  matchers: { name: string; value: string; isRegex: boolean }[];\n  name?: string;\n  startsAt: string;\n  status?: { state: SilenceStates };\n  updatedAt?: string;\n};\n\ntype Silences = {\n  data: Silence[];\n  loaded: boolean;\n  loadError?: string;\n};\n\ntype PrometheusAlert = {\n  activeAt?: string;\n  annotations: PrometheusLabels;\n  labels: PrometheusLabels & {\n    alertname: string;\n  };\n  state: AlertStates;\n  value?: number;\n};\n\nexport type Alert = PrometheusAlert & {\n  rule: Rule;\n  silencedBy?: Silence[];\n};\n\ntype PrometheusRule = {\n  alerts: PrometheusAlert[];\n  annotations: PrometheusLabels;\n  duration: number;\n  labels: PrometheusLabels;\n  name: string;\n  query: string;\n};\n\ntype Rule = PrometheusRule & {\n  id: string;\n};\n\ntype Rules = {\n  data: Rule[];\n  loaded: boolean;\n  loadError?: string;\n};\n\ntype Alerts = {\n  data: Alert[];\n  loaded: boolean;\n  loadError?: string;\n};\n\ntype AlertStateProps = {\n  state: AlertStates;\n};\n\ntype AlertsDetailsPageProps = {\n  alert: Alert;\n  loaded: boolean;\n  loadError?: string;\n  rule: Rule;\n  silencesLoaded: boolean;\n};\n\ntype AlertMessageProps = {\n  alertText: string;\n  labels: PrometheusLabels;\n  template: string;\n};\n\ntype AlertRulesDetailsPageProps = {\n  loaded: boolean;\n  loadError?: string;\n  rule: Rule;\n};\n\ntype SilencesDetailsPageProps = {\n  alertsLoaded: boolean;\n  loaded: boolean;\n  loadError?: string;\n  silence: Silence;\n};\n\ntype SilenceFormProps = {\n  defaults: any;\n  Info?: React.ComponentType<{}>;\n  title: string;\n};\n\nexport type ListPageProps = {\n  alertmanagerLinkPath: string;\n  CreateButton: React.ComponentType<{}>;\n  data: Rule[] | Silence[];\n  filters: { [key: string]: any };\n  Header: (...args) => any[];\n  itemCount: number;\n  kindPlural: string;\n  loaded: boolean;\n  loadError?: string;\n  match: { path: string };\n  nameFilterID: string;\n  reduxID: string;\n  Row: RowFunction;\n  rowFilter: {\n    type: string;\n    selected: string[];\n    reducer: (any) => string;\n    items: { id: string; title: string }[];\n  };\n  showTitle?: boolean;\n};\n\ntype AlertingPageProps = {\n  match: any;\n};\n\ntype GraphProps = {\n  deleteAll: () => never;\n  filterLabels?: PrometheusLabels;\n  hideGraphs: boolean;\n  patchQuery: (index: number, patch: QueryObj) => any;\n  rule: Rule;\n};\n\ntype Group = {\n  rules: PrometheusRule[];\n  file: string;\n  inverval: number;\n  name: string;\n};\n\nexport type PrometheusRulesResponse = {\n  data: {\n    groups: Group[];\n  };\n  status: string;\n};\n"]}]}