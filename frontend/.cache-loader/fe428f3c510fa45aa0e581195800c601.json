{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/create-namespace-modal.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/create-namespace-modal.jsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FLAGS } from '@console/shared';\nimport { k8sCreate, referenceFor } from '../../module/k8s';\nimport { NamespaceModel, ProjectRequestModel, NetworkPolicyModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { Dropdown, history, PromiseComponent, resourceObjPath, SelectorInput } from '../utils';\nimport { setFlag } from '../../actions/features';\nconst allow = 'allow';\nconst deny = 'deny';\nconst defaultDeny = {\n    apiVersion: 'networking.k8s.io/v1',\n    kind: 'NetworkPolicy',\n    spec: {\n        podSelector: null,\n    },\n};\nconst mapDispatchToProps = (dispatch) => ({\n    hideStartGuide: () => setFlag(dispatch, FLAGS.SHOW_OPENSHIFT_START_GUIDE, false),\n});\nconst CreateNamespaceModal = connect(null, mapDispatchToProps)(class CreateNamespaceModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this.state.np = allow;\n        this.handleChange = this.handleChange.bind(this);\n        this.onLabels = this.onLabels.bind(this);\n    }\n    handleChange(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({\n            [name]: value,\n        });\n    }\n    createNamespace() {\n        const { name, labels } = this.state;\n        const namespace = {\n            metadata: {\n                name,\n                labels: SelectorInput.objectify(labels),\n            },\n        };\n        return k8sCreate(NamespaceModel, namespace);\n    }\n    createProject() {\n        const { hideStartGuide } = this.props;\n        const { name, displayName, description } = this.state;\n        const project = {\n            metadata: {\n                name,\n            },\n            displayName,\n            description,\n        };\n        return k8sCreate(ProjectRequestModel, project).then((obj) => {\n            // Immediately update the start guide flag to avoid the empty state\n            // message from displaying when projects watch is slow.\n            hideStartGuide();\n            return obj;\n        });\n    }\n    _submit(event) {\n        event.preventDefault();\n        const { createProject, close, onSubmit } = this.props;\n        let promise = createProject ? this.createProject() : this.createNamespace();\n        if (this.state.np === deny) {\n            promise = promise.then((ns) => {\n                const policy = Object.assign({}, defaultDeny, {\n                    metadata: { namespace: ns.metadata.name, name: 'default-deny' },\n                });\n                // Resolve the promise with the namespace object, not the network policy object, since we want to redirect to the namespace.\n                return k8sCreate(NetworkPolicyModel, policy).then(() => ns);\n            });\n        }\n        this.handlePromise(promise).then((obj) => {\n            close();\n            if (onSubmit) {\n                onSubmit(obj);\n            }\n            else {\n                history.push(resourceObjPath(obj, referenceFor(obj)));\n            }\n        });\n    }\n    onLabels(labels) {\n        this.setState({ labels });\n    }\n    render() {\n        const label = this.props.createProject ? 'Project' : 'Namespace';\n        const defaultNetworkPolicies = {\n            [allow]: 'No restrictions',\n            [deny]: 'Deny all inbound traffic',\n        };\n        return (React.createElement(\"form\", { onSubmit: this._submit.bind(this), name: \"form\", className: \"modal-content modal-content--no-inner-scroll\" },\n            React.createElement(ModalTitle, null,\n                \"Create \",\n                label),\n            React.createElement(ModalBody, null,\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"input-name\", className: \"control-label co-required\" }, \"Name\"),\n                    React.createElement(\"div\", { className: \"modal-body__field\" },\n                        React.createElement(\"input\", { id: \"input-name\", name: \"name\", type: \"text\", className: \"pf-c-form-control\", onChange: this.handleChange, value: this.state.name || '', autoFocus: true, required: true }))),\n                this.props.createProject && (React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"input-display-name\", className: \"control-label\" }, \"Display Name\"),\n                    React.createElement(\"div\", { className: \"modal-body__field\" },\n                        React.createElement(\"input\", { id: \"input-display-name\", name: \"displayName\", type: \"text\", className: \"pf-c-form-control\", onChange: this.handleChange, value: this.state.displayName || '' })))),\n                this.props.createProject && (React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"input-description\", className: \"control-label\" }, \"Description\"),\n                    React.createElement(\"div\", { className: \"modal-body__field\" },\n                        React.createElement(\"textarea\", { id: \"input-description\", name: \"description\", className: \"pf-c-form-control\", onChange: this.handleChange, value: this.state.description || '' })))),\n                !this.props.createProject && (React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"tags-input\", className: \"control-label\" }, \"Labels\"),\n                    React.createElement(\"div\", { className: \"modal-body__field\" },\n                        React.createElement(SelectorInput, { labelClassName: \"co-text-namespace\", onChange: this.onLabels, tags: [] })))),\n                !this.props.createProject && (React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"network-policy\", className: \"control-label\" }, \"Default Network Policy\"),\n                    React.createElement(\"div\", { className: \"modal-body__field \" },\n                        React.createElement(Dropdown, { selectedKey: this.state.np, items: defaultNetworkPolicies, dropDownClassName: \"dropdown--full-width\", id: \"dropdown-selectbox\", onChange: (np) => this.setState({ np }) }))))),\n            React.createElement(ModalSubmitFooter, { errorMessage: this.state.errorMessage, inProgress: this.state.inProgress, submitText: \"Create\", cancel: this.props.cancel.bind(this) })));\n    }\n});\nexport const createNamespaceModal = createModalLauncher(CreateNamespaceModal);\nexport const createProjectModal = createModalLauncher((props) => (React.createElement(CreateNamespaceModal, Object.assign({}, props, { createProject: true }))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/create-namespace-modal.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/create-namespace-modal.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { FLAGS } from '@console/shared';\nimport { k8sCreate, referenceFor } from '../../module/k8s';\nimport { NamespaceModel, ProjectRequestModel, NetworkPolicyModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { Dropdown, history, PromiseComponent, resourceObjPath, SelectorInput } from '../utils';\nimport { setFlag } from '../../actions/features';\n\nconst allow = 'allow';\nconst deny = 'deny';\n\nconst defaultDeny = {\n  apiVersion: 'networking.k8s.io/v1',\n  kind: 'NetworkPolicy',\n  spec: {\n    podSelector: null,\n  },\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideStartGuide: () => setFlag(dispatch, FLAGS.SHOW_OPENSHIFT_START_GUIDE, false),\n});\n\nconst CreateNamespaceModal = connect(\n  null,\n  mapDispatchToProps,\n)(\n  class CreateNamespaceModal extends PromiseComponent {\n    constructor(props) {\n      super(props);\n      this.state.np = allow;\n      this.handleChange = this.handleChange.bind(this);\n      this.onLabels = this.onLabels.bind(this);\n    }\n\n    handleChange(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    createNamespace() {\n      const { name, labels } = this.state;\n      const namespace = {\n        metadata: {\n          name,\n          labels: SelectorInput.objectify(labels),\n        },\n      };\n      return k8sCreate(NamespaceModel, namespace);\n    }\n\n    createProject() {\n      const { hideStartGuide } = this.props;\n      const { name, displayName, description } = this.state;\n      const project = {\n        metadata: {\n          name,\n        },\n        displayName,\n        description,\n      };\n      return k8sCreate(ProjectRequestModel, project).then((obj) => {\n        // Immediately update the start guide flag to avoid the empty state\n        // message from displaying when projects watch is slow.\n        hideStartGuide();\n        return obj;\n      });\n    }\n\n    _submit(event) {\n      event.preventDefault();\n      const { createProject, close, onSubmit } = this.props;\n\n      let promise = createProject ? this.createProject() : this.createNamespace();\n      if (this.state.np === deny) {\n        promise = promise.then((ns) => {\n          const policy = Object.assign({}, defaultDeny, {\n            metadata: { namespace: ns.metadata.name, name: 'default-deny' },\n          });\n          // Resolve the promise with the namespace object, not the network policy object, since we want to redirect to the namespace.\n          return k8sCreate(NetworkPolicyModel, policy).then(() => ns);\n        });\n      }\n\n      this.handlePromise(promise).then((obj) => {\n        close();\n        if (onSubmit) {\n          onSubmit(obj);\n        } else {\n          history.push(resourceObjPath(obj, referenceFor(obj)));\n        }\n      });\n    }\n\n    onLabels(labels) {\n      this.setState({ labels });\n    }\n\n    render() {\n      const label = this.props.createProject ? 'Project' : 'Namespace';\n      const defaultNetworkPolicies = {\n        [allow]: 'No restrictions',\n        [deny]: 'Deny all inbound traffic',\n      };\n      return (\n        <form\n          onSubmit={this._submit.bind(this)}\n          name=\"form\"\n          className=\"modal-content modal-content--no-inner-scroll\"\n        >\n          <ModalTitle>Create {label}</ModalTitle>\n          <ModalBody>\n            <div className=\"form-group\">\n              <label htmlFor=\"input-name\" className=\"control-label co-required\">\n                Name\n              </label>\n              <div className=\"modal-body__field\">\n                <input\n                  id=\"input-name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  onChange={this.handleChange}\n                  value={this.state.name || ''}\n                  autoFocus\n                  required\n                />\n              </div>\n            </div>\n            {this.props.createProject && (\n              <div className=\"form-group\">\n                <label htmlFor=\"input-display-name\" className=\"control-label\">\n                  Display Name\n                </label>\n                <div className=\"modal-body__field\">\n                  <input\n                    id=\"input-display-name\"\n                    name=\"displayName\"\n                    type=\"text\"\n                    className=\"pf-c-form-control\"\n                    onChange={this.handleChange}\n                    value={this.state.displayName || ''}\n                  />\n                </div>\n              </div>\n            )}\n            {this.props.createProject && (\n              <div className=\"form-group\">\n                <label htmlFor=\"input-description\" className=\"control-label\">\n                  Description\n                </label>\n                <div className=\"modal-body__field\">\n                  <textarea\n                    id=\"input-description\"\n                    name=\"description\"\n                    className=\"pf-c-form-control\"\n                    onChange={this.handleChange}\n                    value={this.state.description || ''}\n                  />\n                </div>\n              </div>\n            )}\n            {!this.props.createProject && (\n              <div className=\"form-group\">\n                <label htmlFor=\"tags-input\" className=\"control-label\">\n                  Labels\n                </label>\n                <div className=\"modal-body__field\">\n                  <SelectorInput\n                    labelClassName=\"co-text-namespace\"\n                    onChange={this.onLabels}\n                    tags={[]}\n                  />\n                </div>\n              </div>\n            )}\n            {!this.props.createProject && (\n              <div className=\"form-group\">\n                <label htmlFor=\"network-policy\" className=\"control-label\">\n                  Default Network Policy\n                </label>\n                <div className=\"modal-body__field \">\n                  <Dropdown\n                    selectedKey={this.state.np}\n                    items={defaultNetworkPolicies}\n                    dropDownClassName=\"dropdown--full-width\"\n                    id=\"dropdown-selectbox\"\n                    onChange={(np) => this.setState({ np })}\n                  />\n                </div>\n              </div>\n            )}\n          </ModalBody>\n          <ModalSubmitFooter\n            errorMessage={this.state.errorMessage}\n            inProgress={this.state.inProgress}\n            submitText=\"Create\"\n            cancel={this.props.cancel.bind(this)}\n          />\n        </form>\n      );\n    }\n  },\n);\n\nexport const createNamespaceModal = createModalLauncher(CreateNamespaceModal);\nexport const createProjectModal = createModalLauncher((props) => (\n  <CreateNamespaceModal {...props} createProject={true} />\n));\n"]}]}