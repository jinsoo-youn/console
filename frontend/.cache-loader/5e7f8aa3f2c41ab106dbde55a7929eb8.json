{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseEdge.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseEdge.ts","mtime":1615298458710},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { observable, computed } from 'mobx';\nimport Point from '../geom/Point';\nimport { ModelKind, AnchorEnd } from '../types';\nimport { getTopCollapsedParent } from '../utils';\nimport BaseElement from './BaseElement';\nexport default class BaseEdge extends BaseElement {\n    get sourceAnchor() {\n        return this.getSourceAnchorNode().getAnchor(AnchorEnd.source, this.getType());\n    }\n    get targetAnchor() {\n        return this.getTargetAnchorNode().getAnchor(AnchorEnd.target, this.getType());\n    }\n    getKind() {\n        return ModelKind.edge;\n    }\n    getSource() {\n        if (!this.source) {\n            throw new Error(`Edge with ID '${this.getId()}' has no source.`);\n        }\n        return this.source;\n    }\n    setSource(source) {\n        this.source = source;\n    }\n    getTarget() {\n        if (!this.target) {\n            throw new Error(`Edge with ID '${this.getId()}' has no target.`);\n        }\n        return this.target;\n    }\n    setTarget(target) {\n        this.target = target;\n    }\n    getSourceAnchorNode() {\n        if (!this.source) {\n            throw new Error(`Edge with ID '${this.getId()}' has no source.`);\n        }\n        return getTopCollapsedParent(this.source);\n    }\n    getTargetAnchorNode() {\n        if (!this.target) {\n            throw new Error(`Edge with ID '${this.getId()}' has no target.`);\n        }\n        return getTopCollapsedParent(this.target);\n    }\n    getBendpoints() {\n        return this.bendpoints || [];\n    }\n    setBendpoints(points) {\n        this.bendpoints = points;\n    }\n    removeBendpoint(point) {\n        if (this.bendpoints) {\n            if (typeof point === 'number') {\n                this.bendpoints.splice(point, 1);\n            }\n            else {\n                const idx = this.bendpoints.indexOf(point);\n                if (idx !== -1) {\n                    this.bendpoints.splice(idx, 1);\n                }\n            }\n        }\n    }\n    getStartPoint() {\n        if (this.startPoint) {\n            return this.startPoint;\n        }\n        const bendpoints = this.getBendpoints();\n        let referencePoint;\n        if (bendpoints && bendpoints.length > 0) {\n            [referencePoint] = bendpoints;\n        }\n        else if (this.endPoint) {\n            referencePoint = this.endPoint;\n        }\n        else {\n            referencePoint = this.targetAnchor.getReferencePoint();\n        }\n        return this.sourceAnchor.getLocation(referencePoint);\n    }\n    setStartPoint(x, y) {\n        if (x == null || y == null) {\n            this.startPoint = undefined;\n        }\n        else {\n            this.startPoint = new Point(x, y);\n        }\n    }\n    getEndPoint() {\n        if (this.endPoint) {\n            return this.endPoint;\n        }\n        const bendpoints = this.getBendpoints();\n        let referencePoint;\n        if (bendpoints && bendpoints.length > 0) {\n            referencePoint = bendpoints[bendpoints.length - 1];\n        }\n        else if (this.startPoint) {\n            referencePoint = this.startPoint;\n        }\n        else {\n            referencePoint = this.sourceAnchor.getReferencePoint();\n        }\n        return this.targetAnchor.getLocation(referencePoint);\n    }\n    setEndPoint(x, y) {\n        if (x == null || y == null) {\n            this.endPoint = undefined;\n        }\n        else {\n            this.endPoint = new Point(x, y);\n        }\n    }\n    setModel(model) {\n        super.setModel(model);\n        if (model.source) {\n            const node = this.getController().getNodeById(model.source);\n            if (!node) {\n                throw new Error(`No source node found with ID '${model.source}'.`);\n            }\n            this.source = node;\n        }\n        if (model.target) {\n            const node = this.getController().getNodeById(model.target);\n            if (!node) {\n                throw new Error(`No target node found with ID '${model.target}'.`);\n            }\n            this.target = node;\n        }\n        if ('bendpoints' in model) {\n            this.bendpoints = model.bendpoints ? model.bendpoints.map((b) => new Point(b[0], b[1])) : [];\n        }\n    }\n}\n__decorate([\n    observable.ref\n], BaseEdge.prototype, \"source\", void 0);\n__decorate([\n    observable.ref\n], BaseEdge.prototype, \"target\", void 0);\n__decorate([\n    observable.shallow\n], BaseEdge.prototype, \"bendpoints\", void 0);\n__decorate([\n    observable.ref\n], BaseEdge.prototype, \"startPoint\", void 0);\n__decorate([\n    observable.ref\n], BaseEdge.prototype, \"endPoint\", void 0);\n__decorate([\n    computed\n], BaseEdge.prototype, \"sourceAnchor\", null);\n__decorate([\n    computed\n], BaseEdge.prototype, \"targetAnchor\", null);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseEdge.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseEdge.ts"],"names":[],"mappings":"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","sourcesContent":["import { observable, computed } from 'mobx';\nimport Point from '../geom/Point';\nimport { Edge, Node, EdgeModel, ModelKind, AnchorEnd, Anchor } from '../types';\nimport { getTopCollapsedParent } from '../utils';\nimport BaseElement from './BaseElement';\n\nexport default class BaseEdge<E extends EdgeModel = EdgeModel, D = any> extends BaseElement<E, D>\n  implements Edge<E, D> {\n  @observable.ref\n  private source?: Node;\n\n  @observable.ref\n  private target?: Node;\n\n  @observable.shallow\n  private bendpoints?: Point[];\n\n  @observable.ref\n  private startPoint?: Point;\n\n  @observable.ref\n  private endPoint?: Point;\n\n  @computed\n  private get sourceAnchor(): Anchor {\n    return this.getSourceAnchorNode().getAnchor(AnchorEnd.source, this.getType());\n  }\n\n  @computed\n  private get targetAnchor(): Anchor {\n    return this.getTargetAnchorNode().getAnchor(AnchorEnd.target, this.getType());\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.edge;\n  }\n\n  getSource(): Node {\n    if (!this.source) {\n      throw new Error(`Edge with ID '${this.getId()}' has no source.`);\n    }\n    return this.source;\n  }\n\n  setSource(source: Node) {\n    this.source = source;\n  }\n\n  getTarget(): Node {\n    if (!this.target) {\n      throw new Error(`Edge with ID '${this.getId()}' has no target.`);\n    }\n    return this.target;\n  }\n\n  setTarget(target: Node) {\n    this.target = target;\n  }\n\n  getSourceAnchorNode(): Node {\n    if (!this.source) {\n      throw new Error(`Edge with ID '${this.getId()}' has no source.`);\n    }\n    return getTopCollapsedParent(this.source);\n  }\n\n  getTargetAnchorNode(): Node {\n    if (!this.target) {\n      throw new Error(`Edge with ID '${this.getId()}' has no target.`);\n    }\n    return getTopCollapsedParent(this.target);\n  }\n\n  getBendpoints(): Point[] {\n    return this.bendpoints || [];\n  }\n\n  setBendpoints(points: Point[]) {\n    this.bendpoints = points;\n  }\n\n  removeBendpoint(point: Point | number): void {\n    if (this.bendpoints) {\n      if (typeof point === 'number') {\n        this.bendpoints.splice(point, 1);\n      } else {\n        const idx = this.bendpoints.indexOf(point);\n        if (idx !== -1) {\n          this.bendpoints.splice(idx, 1);\n        }\n      }\n    }\n  }\n\n  getStartPoint(): Point {\n    if (this.startPoint) {\n      return this.startPoint;\n    }\n    const bendpoints = this.getBendpoints();\n    let referencePoint: Point;\n    if (bendpoints && bendpoints.length > 0) {\n      [referencePoint] = bendpoints;\n    } else if (this.endPoint) {\n      referencePoint = this.endPoint;\n    } else {\n      referencePoint = this.targetAnchor.getReferencePoint();\n    }\n    return this.sourceAnchor.getLocation(referencePoint);\n  }\n\n  setStartPoint(x?: number, y?: number): void {\n    if (x == null || y == null) {\n      this.startPoint = undefined;\n    } else {\n      this.startPoint = new Point(x, y);\n    }\n  }\n\n  getEndPoint(): Point {\n    if (this.endPoint) {\n      return this.endPoint;\n    }\n    const bendpoints = this.getBendpoints();\n    let referencePoint: Point;\n    if (bendpoints && bendpoints.length > 0) {\n      referencePoint = bendpoints[bendpoints.length - 1];\n    } else if (this.startPoint) {\n      referencePoint = this.startPoint;\n    } else {\n      referencePoint = this.sourceAnchor.getReferencePoint();\n    }\n    return this.targetAnchor.getLocation(referencePoint);\n  }\n\n  setEndPoint(x?: number, y?: number): void {\n    if (x == null || y == null) {\n      this.endPoint = undefined;\n    } else {\n      this.endPoint = new Point(x, y);\n    }\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n    if (model.source) {\n      const node = this.getController().getNodeById(model.source);\n      if (!node) {\n        throw new Error(`No source node found with ID '${model.source}'.`);\n      }\n      this.source = node;\n    }\n    if (model.target) {\n      const node = this.getController().getNodeById(model.target);\n      if (!node) {\n        throw new Error(`No target node found with ID '${model.target}'.`);\n      }\n      this.target = node;\n    }\n    if ('bendpoints' in model) {\n      this.bendpoints = model.bendpoints ? model.bendpoints.map((b) => new Point(b[0], b[1])) : [];\n    }\n  }\n}\n"]}]}