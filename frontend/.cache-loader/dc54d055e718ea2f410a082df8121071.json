{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/charts/HorizontalStackedBars.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/charts/HorizontalStackedBars.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport classNames from 'classnames';\nimport './HorizontalStackedBars.scss';\nconst HorizontalStackedBars = ({ barGap, height, inline, values, width, }) => {\n    return (React.createElement(\"div\", { className: classNames('odc-horizontal-stacked-bars', { 'is-inline': inline }), style: { height, width, ['--bar-gap']: barGap && `${barGap}px` } },\n        React.createElement(\"div\", { className: \"odc-horizontal-stacked-bars__bars\" }, values.map(({ color, name, size }) => (React.createElement(\"div\", { key: name, className: \"odc-horizontal-stacked-bars__data-bar\", style: {\n                background: color,\n                flexGrow: size,\n            } }))))));\n};\nexport default HorizontalStackedBars;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/charts/HorizontalStackedBars.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/charts/HorizontalStackedBars.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,8BAA8B,CAAC;AAgBtC,MAAM,qBAAqB,GAAyC,CAAC,EACnE,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,KAAK,GACN,EAAE,EAAE;IACH,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,6BAA6B,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,EAC7E,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,WAAkB,CAAC,EAAE,MAAM,IAAI,GAAG,MAAM,IAAI,EAAE;QAEvE,6BAAK,SAAS,EAAC,mCAAmC,IAC/C,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACrC,6BACE,GAAG,EAAE,IAAI,EACT,SAAS,EAAC,uCAAuC,EACjD,KAAK,EAAE;gBACL,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;aACf,GACD,CACH,CAAC,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport './HorizontalStackedBars.scss';\n\nexport type StackedValue = {\n  color: string;\n  name: string;\n  size: number;\n};\n\nexport type HorizontalStackedBarsProps = {\n  barGap?: number;\n  height?: number | string;\n  inline?: boolean;\n  values: StackedValue[];\n  width?: number | string;\n};\n\nconst HorizontalStackedBars: React.FC<HorizontalStackedBarsProps> = ({\n  barGap,\n  height,\n  inline,\n  values,\n  width,\n}) => {\n  return (\n    <div\n      className={classNames('odc-horizontal-stacked-bars', { 'is-inline': inline })}\n      style={{ height, width, ['--bar-gap' as any]: barGap && `${barGap}px` }}\n    >\n      <div className=\"odc-horizontal-stacked-bars__bars\">\n        {values.map(({ color, name, size }) => (\n          <div\n            key={name}\n            className=\"odc-horizontal-stacked-bars__data-bar\"\n            style={{\n              background: color,\n              flexGrow: size,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HorizontalStackedBars;\n"]}]}