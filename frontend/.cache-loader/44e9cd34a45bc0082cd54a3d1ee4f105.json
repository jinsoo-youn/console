{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-instance.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-instance.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { ServiceInstanceModel } from '../../models';\nimport { modelFor, k8sGet } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { Kebab, ResourceKebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceSidebar } from '../sidebars/resource-sidebar';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst kind = ServiceInstanceModel.kind;\nexport const serviceInstanceMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceInstanceModel), ...common];\nconst ServiceInstanceDetails = props => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const { t } = useTranslation();\n    const { obj: serviceInstance, match } = props;\n    const [showSidebar, setShowSidebar] = useState(false);\n    const [sidebarDetails, setSidebarDetails] = useState({});\n    const [sidebarKind, setSidebarKind] = useState('');\n    const [sidebarTitle, setSidebarTitle] = useState('');\n    // const [planDetails, setPlanDetails] = useState({});\n    const getDetails = (kind, e) => __awaiter(void 0, void 0, void 0, function* () {\n        const model = modelFor(kind);\n        const details = yield k8sGet(model, e.target.innerText, kind.indexOf('Cluster') < 0 ? match.params.ns : null);\n        setSidebarDetails(details);\n        setShowSidebar(true);\n        setSidebarKind(kind);\n        setSidebarTitle(details.metadata.name);\n        console.log(sidebarDetails);\n    });\n    const SidebarLink = ({ name, kind }) => {\n        return (React.createElement(Button, { type: \"button\", variant: \"link\", isInline: true, onClick: getDetails.bind(null, kind) }, name));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-p-has-sidebar\" },\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(serviceInstance, t) }) }),\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-md-6\" },\n                        React.createElement(ResourceSummary, { resource: serviceInstance, showPodSelector: true, showNodeSelector: true })),\n                    React.createElement(\"div\", { className: \"col-md-6\" },\n                        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Status, { status: serviceInstance.status.lastConditionState })),\n                            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_19')),\n                            React.createElement(SidebarLink, { name: ((_a = serviceInstance.spec.clusterServiceClassRef) === null || _a === void 0 ? void 0 : _a.name) ? (_b = serviceInstance.spec.clusterServiceClassRef) === null || _b === void 0 ? void 0 : _b.name : (_c = serviceInstance.spec) === null || _c === void 0 ? void 0 : _c.serviceClassExternalName, kind: ((_d = serviceInstance.spec.clusterServiceClassRef) === null || _d === void 0 ? void 0 : _d.name) ? 'ClusterServiceClass' : 'ServiceClass' }),\n                            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABSERVICEPLANS_1')),\n                            React.createElement(\"dd\", null,\n                                React.createElement(SidebarLink, { name: ((_e = serviceInstance.spec.clusterServicePlanRef) === null || _e === void 0 ? void 0 : _e.name) ? (_f = serviceInstance.spec.clusterServicePlanRef) === null || _f === void 0 ? void 0 : _f.name : (_h = (_g = serviceInstance.spec) === null || _g === void 0 ? void 0 : _g.servicePlanRef) === null || _h === void 0 ? void 0 : _h.name, kind: ((_j = serviceInstance.spec.clusterServiceClassRef) === null || _j === void 0 ? void 0 : _j.name) ? 'ClusterServicePlan' : 'ServicePlan' })))))),\n            React.createElement(ResourceSidebar, { toggleSidebar: () => {\n                    setShowSidebar(!showSidebar);\n                    window.dispatchEvent(new Event('sidebar_toggle'));\n                }, resource: sidebarDetails, kindObj: modelFor(sidebarKind), title: sidebarTitle, isFloat: true, showName: false, showID: true, showPodSelector: true, showNodeSelector: true, showOwner: false, showSidebar: showSidebar, samples: [], isCreateMode: true, showDetails: true }))));\n};\nconst { details, editYaml } = navFactory;\nconst ServiceInstancesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: serviceInstanceMenuActions, pages: [details(ServiceInstanceDetails), editYaml()] }));\nServiceInstancesDetailsPage.displayName = 'ServiceInstancesDetailsPage';\nconst tableColumnClasses = [\n    '',\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    Kebab.columnClass,\n];\nconst ServiceInstanceTableRow = ({ obj, index, key, style }) => {\n    var _a, _b, _c, _d;\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1]) },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: obj.status.lastConditionState })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, obj.spec.clusterServicePlanExternalName ? React.createElement(ResourceLink, { kind: \"ClusterServicePlan\", title: (_a = obj.spec.clusterServicePlanRef) === null || _a === void 0 ? void 0 : _a.name, name: (_b = obj.spec.clusterServicePlanRef) === null || _b === void 0 ? void 0 : _b.name, displayName: obj.spec.clusterServicePlanExternalName }) : React.createElement(ResourceLink, { kind: \"ServicePlan\", title: (_c = obj.spec.servicePlanRef) === null || _c === void 0 ? void 0 : _c.name, name: (_d = obj.spec.servicePlanRef) === null || _d === void 0 ? void 0 : _d.name, displayName: obj.spec.servicePlanExternalName })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: serviceInstanceMenuActions, kind: kind, resource: obj }))));\n};\nconst ServiceInstanceTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.lastConditionState',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABSERVICEPLANS_1'),\n            sortField: 'spec.servicePlanName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nServiceInstanceTableHeader.displayName = 'ServiceInstanceTableHeader';\nconst ServiceInstancesList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Service Instance\", Header: ServiceInstanceTableHeader.bind(null, t), Row: ServiceInstanceTableRow }));\n};\nServiceInstancesList.displayName = 'ServiceInstancesList';\nconst serviceInstanceStatusReducer = (serviceInstance) => {\n    return serviceInstance.status.lastConditionState;\n};\nconst ServiceInstancesPage = props => {\n    const { t } = useTranslation();\n    return (React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_17'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_17') }), canCreate: true, kind: kind, ListComponent: ServiceInstancesList, rowFilters: [\n            {\n                filterGroupName: 'Status',\n                type: 'service-instance-status',\n                reducer: serviceInstanceStatusReducer,\n                items: [\n                    { id: 'Ready', title: t('COMMON:MSG_MAIN_FILTER_2') },\n                    { id: 'Error', title: t('COMMON:MSG_MAIN_FILTER_3') },\n                ],\n            },\n        ] }, props)));\n};\nServiceInstancesPage.displayName = 'ServiceInstancesPage';\nexport { ServiceInstancesList, ServiceInstancesPage, ServiceInstancesDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-instance.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/service-instance.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { ServiceInstanceModel } from '../../models';\nimport { K8sResourceKind, modelFor, k8sGet } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { Kebab, ResourceKebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, Timestamp } from '../utils';\nimport { ResourceSidebar } from '../sidebars/resource-sidebar';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\n\nconst kind = ServiceInstanceModel.kind;\n\nexport const serviceInstanceMenuActions = [...Kebab.getExtensionsActionsForKind(ServiceInstanceModel), ...common];\n\nconst ServiceInstanceDetails: React.FC<ServiceInstanceDetailsProps> = props => {\n  const { t } = useTranslation();\n  const { obj: serviceInstance, match } = props;\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [sidebarDetails, setSidebarDetails] = useState({});\n  const [sidebarKind, setSidebarKind] = useState('');\n  const [sidebarTitle, setSidebarTitle] = useState('');\n  // const [planDetails, setPlanDetails] = useState({});\n  const getDetails = async (kind, e) => {\n    const model = modelFor(kind);\n    const details = await k8sGet(model, e.target.innerText, kind.indexOf('Cluster') < 0 ? match.params.ns : null);\n    setSidebarDetails(details);\n    setShowSidebar(true);\n    setSidebarKind(kind);\n    setSidebarTitle(details.metadata.name);\n    console.log(sidebarDetails);\n  };\n  const SidebarLink = ({ name, kind }) => {\n    return (\n      <Button type=\"button\" variant=\"link\" isInline onClick={getDetails.bind(null, kind)}>\n        {name}\n      </Button>\n    );\n  };\n  return (\n    <>\n      <div className=\"co-p-has-sidebar\">\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(serviceInstance, t)})} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary resource={serviceInstance} showPodSelector showNodeSelector></ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')}</dt>\n                <dd>\n                  <Status status={serviceInstance.status.lastConditionState} />\n                </dd>\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_19')}</dt>\n                <SidebarLink name={serviceInstance.spec.clusterServiceClassRef?.name ? serviceInstance.spec.clusterServiceClassRef?.name : serviceInstance.spec?.serviceClassExternalName} kind={serviceInstance.spec.clusterServiceClassRef?.name ? 'ClusterServiceClass' : 'ServiceClass'}></SidebarLink>\n                <dt>{t('COMMON:MSG_DETAILS_TABSERVICEPLANS_1')}</dt>\n                <dd>\n                  <SidebarLink name={serviceInstance.spec.clusterServicePlanRef?.name ? serviceInstance.spec.clusterServicePlanRef?.name : serviceInstance.spec?.servicePlanRef?.name} kind={serviceInstance.spec.clusterServiceClassRef?.name ? 'ClusterServicePlan' : 'ServicePlan'}></SidebarLink>\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n        <ResourceSidebar\n          toggleSidebar={() => {\n            setShowSidebar(!showSidebar);\n            window.dispatchEvent(new Event('sidebar_toggle'));\n          }}\n          resource={sidebarDetails}\n          kindObj={modelFor(sidebarKind)}\n          title={sidebarTitle}\n          isFloat={true}\n          showName={false}\n          showID={true}\n          showPodSelector={true}\n          showNodeSelector={true}\n          showOwner={false}\n          showSidebar={showSidebar}\n          samples={[]}\n          isCreateMode={true}\n          showDetails={true}\n        />\n      </div>\n    </>\n  );\n};\n\ntype ServiceInstanceDetailsProps = {\n  obj: K8sResourceKind;\n  match?: any;\n};\n\nconst { details, editYaml } = navFactory;\nconst ServiceInstancesDetailsPage: React.FC<ServiceInstancesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={serviceInstanceMenuActions} pages={[details(ServiceInstanceDetails), editYaml()]} />;\nServiceInstancesDetailsPage.displayName = 'ServiceInstancesDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // SERVICE CLASS\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), // SERVICE PLAN\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n  Kebab.columnClass, // MENU ACTIONS\n];\n\nconst ServiceInstanceTableRow = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={obj.status.lastConditionState} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{obj.spec.clusterServicePlanExternalName ? <ResourceLink kind=\"ClusterServicePlan\" title={obj.spec.clusterServicePlanRef?.name} name={obj.spec.clusterServicePlanRef?.name} displayName={obj.spec.clusterServicePlanExternalName} /> : <ResourceLink kind=\"ServicePlan\" title={obj.spec.servicePlanRef?.name} name={obj.spec.servicePlanRef?.name} displayName={obj.spec.servicePlanExternalName} />}</TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={serviceInstanceMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceInstanceTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.lastConditionState',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABSERVICEPLANS_1'),\n      sortField: 'spec.servicePlanName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nServiceInstanceTableHeader.displayName = 'ServiceInstanceTableHeader';\n\nconst ServiceInstancesList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Service Instance\" Header={ServiceInstanceTableHeader.bind(null, t)} Row={ServiceInstanceTableRow} />;\n};\nServiceInstancesList.displayName = 'ServiceInstancesList';\n\nconst serviceInstanceStatusReducer = (serviceInstance: any): string => {\n  return serviceInstance.status.lastConditionState;\n};\n\nconst ServiceInstancesPage: React.FC<ServiceInstancesPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      title={t('COMMON:MSG_LNB_MENU_17')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_17') })}\n      canCreate={true}\n      kind={kind}\n      ListComponent={ServiceInstancesList}\n      rowFilters={[\n        {\n          filterGroupName: 'Status',\n          type: 'service-instance-status',\n          reducer: serviceInstanceStatusReducer,\n          items: [\n            { id: 'Ready', title: t('COMMON:MSG_MAIN_FILTER_2') },\n            { id: 'Error', title: t('COMMON:MSG_MAIN_FILTER_3') },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\nServiceInstancesPage.displayName = 'ServiceInstancesPage';\n\nexport { ServiceInstancesList, ServiceInstancesPage, ServiceInstancesDetailsPage };\n\ntype ServiceInstancesPageProps = {};\n\ntype ServiceInstancesDetailsPageProps = {\n  match: any;\n};\n"]}]}