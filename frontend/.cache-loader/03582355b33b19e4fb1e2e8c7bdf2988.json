{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/reducer.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/reducer.ts","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { Map } from 'immutable';\nimport { merge } from 'lodash';\nimport { Actions } from './action';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY, DEFAULT_TOPOLOGY_FILTERS } from './const';\nexport const getDefaultTopologyFilters = () => {\n    var _a;\n    const displayFilters = localStorage.getItem(TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY);\n    if (!displayFilters) {\n        localStorage.setItem(TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY, JSON.stringify(DEFAULT_TOPOLOGY_FILTERS.display));\n    }\n    const filters = merge({}, DEFAULT_TOPOLOGY_FILTERS, {\n        display: (_a = JSON.parse(displayFilters)) !== null && _a !== void 0 ? _a : {},\n    });\n    return filters;\n};\nexport default (state, action) => {\n    if (!state) {\n        return Map({\n            filters: getDefaultTopologyFilters(),\n        });\n    }\n    if (action.type === Actions.topologyFilters) {\n        return state.set('filters', action.payload.filters);\n    }\n    return state;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/reducer.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/redux/reducer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAkB,OAAO,EAAE,MAAM,UAAU,CAAC;AACnD,OAAO,EAAE,0CAA0C,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAI/F,MAAM,CAAC,MAAM,yBAAyB,GAAG,GAAG,EAAE;;IAC5C,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC;IAExF,IAAI,CAAC,cAAc,EAAE;QACnB,YAAY,CAAC,OAAO,CAClB,0CAA0C,EAC1C,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,OAAO,CAAC,CACjD,CAAC;KACH;IAED,MAAM,OAAO,GAAG,KAAK,CAAC,EAAE,EAAE,wBAAwB,EAAE;QAClD,OAAO,QAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,mCAAI,EAAE;KAC1C,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,eAAe,CAAC,KAAY,EAAE,MAAsB,EAAE,EAAE;IACtD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,GAAG,CAAC;YACT,OAAO,EAAE,yBAAyB,EAAE;SACrC,CAAC,CAAC;KACJ;IAED,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,eAAe,EAAE;QAC3C,OAAO,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACrD;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { Map } from 'immutable';\nimport { merge } from 'lodash';\nimport { TopologyAction, Actions } from './action';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY, DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nexport type State = Map<string, any>;\n\nexport const getDefaultTopologyFilters = () => {\n  const displayFilters = localStorage.getItem(TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY);\n\n  if (!displayFilters) {\n    localStorage.setItem(\n      TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n      JSON.stringify(DEFAULT_TOPOLOGY_FILTERS.display),\n    );\n  }\n\n  const filters = merge({}, DEFAULT_TOPOLOGY_FILTERS, {\n    display: JSON.parse(displayFilters) ?? {},\n  });\n\n  return filters;\n};\n\nexport default (state: State, action: TopologyAction) => {\n  if (!state) {\n    return Map({\n      filters: getDefaultTopologyFilters(),\n    });\n  }\n\n  if (action.type === Actions.topologyFilters) {\n    return state.set('filters', action.payload.filters);\n  }\n\n  return state;\n};\n"]}]}