{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tolerations-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tolerations-modal.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { k8sPatch } from '../../module/k8s';\nimport { createModalLauncher, ModalBody, ModalSubmitFooter, ModalTitle, } from '../factory';\nclass TolerationsModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this._getTolerationsFromResource = () => {\n            const { resource } = this.props;\n            return this.props.resourceKind.kind === 'Pod'\n                ? resource.spec.tolerations\n                : resource.spec.template.spec.tolerations;\n        };\n        this._submit = (e) => {\n            e.preventDefault();\n            const path = this.props.resourceKind.kind === 'Pod'\n                ? '/spec/tolerations'\n                : '/spec/template/spec/tolerations';\n            // Remove the internal `isNew` property\n            const tolerations = _.map(this.state.tolerations, (t) => _.omit(t, 'isNew'));\n            // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n            const op = _.isEmpty(this._getTolerationsFromResource()) ? 'replace' : 'add';\n            const patch = [{ path, op, value: tolerations }];\n            this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(this.props.close);\n        };\n        this._cancel = () => {\n            this.props.close();\n        };\n        this._change = (e, i, field) => {\n            const newValue = e.target ? e.target.value : e;\n            this.setState((prevState) => {\n                const clonedTolerations = _.cloneDeep(prevState.tolerations);\n                clonedTolerations[i][field] = newValue;\n                return {\n                    tolerations: clonedTolerations,\n                };\n            });\n        };\n        this._opChange = (op, i) => {\n            this.setState((prevState) => {\n                const clonedTolerations = _.cloneDeep(prevState.tolerations);\n                clonedTolerations[i].operator = op;\n                if (op === 'Exists') {\n                    clonedTolerations[i].value = '';\n                }\n                return {\n                    tolerations: clonedTolerations,\n                };\n            });\n        };\n        this._remove = (i) => {\n            this.setState((state) => {\n                const tolerations = [...state.tolerations];\n                tolerations.splice(i, 1);\n                return { tolerations };\n            });\n        };\n        this._addRow = () => {\n            this.setState((state) => ({\n                tolerations: [...state.tolerations, this._newToleration()],\n            }));\n        };\n        this._isEditable = (t) => {\n            return this.props.resourceKind.kind !== 'Pod' || t.isNew;\n        };\n        this.state.tolerations = this._getTolerationsFromResource() || [];\n    }\n    _newToleration() {\n        return { key: '', operator: 'Exists', value: '', effect: '', isNew: true };\n    }\n    render() {\n        const operators = {\n            Exists: 'Exists',\n            Equal: 'Equal',\n        };\n        const effects = {\n            '': 'All Effects',\n            NoSchedule: 'NoSchedule',\n            PreferNoSchedule: 'PreferNoSchedule',\n            NoExecute: 'NoExecute',\n        };\n        const { tolerations, errorMessage, inProgress } = this.state;\n        return (React.createElement(\"form\", { onSubmit: this._submit, name: \"form\", className: \"modal-content modal-content--accommodate-dropdown toleration-modal\" },\n            React.createElement(ModalTitle, null, \"Edit Tolerations\"),\n            React.createElement(ModalBody, null,\n                _.isEmpty(tolerations) ? (React.createElement(EmptyBox, { label: \"Tolerations\" })) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: \"row toleration-modal__heading hidden-sm hidden-xs\" },\n                        React.createElement(\"div\", { className: \"col-md-4 text-secondary text-uppercase\" }, \"Key\"),\n                        React.createElement(\"div\", { className: \"col-md-2 text-secondary text-uppercase\" }, \"Operator\"),\n                        React.createElement(\"div\", { className: \"col-md-3 text-secondary text-uppercase\" }, \"Value\"),\n                        React.createElement(\"div\", { className: \"col-md-2 text-secondary text-uppercase\" }, \"Effect\"),\n                        React.createElement(\"div\", { className: \"col-md-1\" })),\n                    _.map(tolerations, (t, i) => {\n                        const { key, operator, value, effect = '' } = t;\n                        return (React.createElement(\"div\", { className: \"row toleration-modal__row\", key: i },\n                            React.createElement(\"div\", { className: \"col-md-4 col-sm-5 col-xs-5 toleration-modal__field\" },\n                                React.createElement(\"div\", { className: \"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Key\"),\n                                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", value: key, onChange: (e) => this._change(e, i, 'key'), readOnly: !this._isEditable(t) })),\n                            React.createElement(\"div\", { className: \"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\" },\n                                React.createElement(\"div\", { className: \"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Operator\"),\n                                this._isEditable(t) ? (React.createElement(Dropdown, { className: \"toleration-modal__dropdown\", dropDownClassName: \"dropdown--full-width\", items: operators, onChange: (op) => this._opChange(op, i), selectedKey: operator, title: operators[operator] })) : (React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", value: operator, readOnly: true }))),\n                            React.createElement(\"div\", { className: \"clearfix visible-sm visible-xs\" }),\n                            React.createElement(\"div\", { className: \"col-md-3 col-sm-5 col-xs-5 toleration-modal__field\" },\n                                React.createElement(\"div\", { className: \"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Value\"),\n                                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", value: value, onChange: (e) => this._change(e, i, 'value'), readOnly: !this._isEditable(t) || operator === 'Exists' })),\n                            React.createElement(\"div\", { className: \"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\" },\n                                React.createElement(\"div\", { className: \"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Effect\"),\n                                this._isEditable(t) ? (React.createElement(Dropdown, { className: \"toleration-modal__dropdown\", dropDownClassName: \"dropdown--full-width\", items: effects, onChange: (e) => this._change(e, i, 'effect'), selectedKey: effect, title: effects[effect] })) : (React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", value: effects[effect], readOnly: true }))),\n                            React.createElement(\"div\", { className: \"col-md-1 col-sm-2 col-xs-2\" }, this._isEditable(t) && (React.createElement(Button, { type: \"button\", className: \"toleration-modal__delete-icon\", onClick: () => this._remove(i), \"aria-label\": \"Delete\", variant: \"plain\" },\n                                React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }))))));\n                    }))),\n                React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: this._addRow, type: \"button\", variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                    \"Add More\")),\n            React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, inProgress: inProgress, submitText: \"Save\", cancel: this._cancel })));\n    }\n}\nexport const tolerationsModal = createModalLauncher(TolerationsModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tolerations-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tolerations-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { K8sKind, k8sPatch, Toleration, TolerationOperator } from '../../module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory';\n\nclass TolerationsModal extends PromiseComponent<TolerationsModalProps, TolerationsModalState> {\n  readonly state: TolerationsModalState;\n\n  constructor(public props: TolerationsModalProps) {\n    super(props);\n    this.state.tolerations = this._getTolerationsFromResource() || [];\n  }\n\n  _getTolerationsFromResource = (): Toleration[] => {\n    const { resource } = this.props;\n    return this.props.resourceKind.kind === 'Pod'\n      ? resource.spec.tolerations\n      : resource.spec.template.spec.tolerations;\n  };\n\n  _submit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    const path =\n      this.props.resourceKind.kind === 'Pod'\n        ? '/spec/tolerations'\n        : '/spec/template/spec/tolerations';\n\n    // Remove the internal `isNew` property\n    const tolerations = _.map(this.state.tolerations, (t) => _.omit(t, 'isNew'));\n\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = _.isEmpty(this._getTolerationsFromResource()) ? 'replace' : 'add';\n\n    const patch = [{ path, op, value: tolerations }];\n\n    this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(\n      this.props.close,\n    );\n  };\n\n  _cancel = () => {\n    this.props.close();\n  };\n\n  _change = (e, i: number, field: string) => {\n    const newValue = e.target ? e.target.value : e;\n    this.setState((prevState: TolerationsModalState) => {\n      const clonedTolerations = _.cloneDeep(prevState.tolerations);\n      clonedTolerations[i][field] = newValue;\n      return {\n        tolerations: clonedTolerations,\n      };\n    });\n  };\n\n  _opChange = (op: TolerationOperator, i: number) => {\n    this.setState((prevState: TolerationsModalState) => {\n      const clonedTolerations = _.cloneDeep(prevState.tolerations);\n      clonedTolerations[i].operator = op;\n      if (op === 'Exists') {\n        clonedTolerations[i].value = '';\n      }\n      return {\n        tolerations: clonedTolerations,\n      };\n    });\n  };\n\n  _remove = (i: number) => {\n    this.setState((state: TolerationsModalState) => {\n      const tolerations = [...state.tolerations];\n      tolerations.splice(i, 1);\n      return { tolerations };\n    });\n  };\n\n  _newToleration(): TolerationModalItem {\n    return { key: '', operator: 'Exists', value: '', effect: '', isNew: true };\n  }\n\n  _addRow = () => {\n    this.setState((state: TolerationsModalState) => ({\n      tolerations: [...state.tolerations, this._newToleration()],\n    }));\n  };\n\n  _isEditable = (t: TolerationModalItem) => {\n    return this.props.resourceKind.kind !== 'Pod' || t.isNew;\n  };\n\n  render() {\n    const operators = {\n      Exists: 'Exists',\n      Equal: 'Equal',\n    };\n    const effects = {\n      '': 'All Effects',\n      NoSchedule: 'NoSchedule',\n      PreferNoSchedule: 'PreferNoSchedule',\n      NoExecute: 'NoExecute',\n    };\n    const { tolerations, errorMessage, inProgress } = this.state;\n    return (\n      <form\n        onSubmit={this._submit}\n        name=\"form\"\n        className=\"modal-content modal-content--accommodate-dropdown toleration-modal\"\n      >\n        <ModalTitle>Edit Tolerations</ModalTitle>\n        <ModalBody>\n          {_.isEmpty(tolerations) ? (\n            <EmptyBox label=\"Tolerations\" />\n          ) : (\n            <>\n              <div className=\"row toleration-modal__heading hidden-sm hidden-xs\">\n                <div className=\"col-md-4 text-secondary text-uppercase\">Key</div>\n                <div className=\"col-md-2 text-secondary text-uppercase\">Operator</div>\n                <div className=\"col-md-3 text-secondary text-uppercase\">Value</div>\n                <div className=\"col-md-2 text-secondary text-uppercase\">Effect</div>\n                <div className=\"col-md-1\" />\n              </div>\n              {_.map(tolerations, (t, i) => {\n                const { key, operator, value, effect = '' } = t;\n                return (\n                  <div className=\"row toleration-modal__row\" key={i}>\n                    <div className=\"col-md-4 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Key\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"pf-c-form-control\"\n                        value={key}\n                        onChange={(e) => this._change(e, i, 'key')}\n                        readOnly={!this._isEditable(t)}\n                      />\n                    </div>\n                    <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Operator\n                      </div>\n                      {this._isEditable(t) ? (\n                        <Dropdown\n                          className=\"toleration-modal__dropdown\"\n                          dropDownClassName=\"dropdown--full-width\"\n                          items={operators}\n                          onChange={(op: TolerationOperator) => this._opChange(op, i)}\n                          selectedKey={operator}\n                          title={operators[operator]}\n                        />\n                      ) : (\n                        <input\n                          type=\"text\"\n                          className=\"pf-c-form-control\"\n                          value={operator}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                    <div className=\"clearfix visible-sm visible-xs\" />\n                    <div className=\"col-md-3 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Value\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"pf-c-form-control\"\n                        value={value}\n                        onChange={(e) => this._change(e, i, 'value')}\n                        readOnly={!this._isEditable(t) || operator === 'Exists'}\n                      />\n                    </div>\n                    <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                      <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                        Effect\n                      </div>\n                      {this._isEditable(t) ? (\n                        <Dropdown\n                          className=\"toleration-modal__dropdown\"\n                          dropDownClassName=\"dropdown--full-width\"\n                          items={effects}\n                          onChange={(e: string) => this._change(e, i, 'effect')}\n                          selectedKey={effect}\n                          title={effects[effect]}\n                        />\n                      ) : (\n                        <input\n                          type=\"text\"\n                          className=\"pf-c-form-control\"\n                          value={effects[effect]}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                    <div className=\"col-md-1 col-sm-2 col-xs-2\">\n                      {this._isEditable(t) && (\n                        <Button\n                          type=\"button\"\n                          className=\"toleration-modal__delete-icon\"\n                          onClick={() => this._remove(i)}\n                          aria-label=\"Delete\"\n                          variant=\"plain\"\n                        >\n                          <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          )}\n          <Button\n            className=\"pf-m-link--align-left\"\n            onClick={this._addRow}\n            type=\"button\"\n            variant=\"link\"\n          >\n            <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n            Add More\n          </Button>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const tolerationsModal = createModalLauncher(TolerationsModal);\n\ntype TolerationModalItem = {\n  // isNew is used internally in the dialog to track existing vs new\n  // tolerations on pods and is not part of the k8s API\n  isNew?: boolean;\n} & Toleration;\n\ntype TolerationsModalProps = {\n  resourceKind: K8sKind;\n  resource: any;\n  existingReadOnly?: boolean;\n} & ModalComponentProps;\n\ntype TolerationsModalState = {\n  tolerations: TolerationModalItem[];\n  inProgress: boolean;\n  errorMessage: string;\n};\n"]}]}