{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-mode/install.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-mode/install.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { ButtonBar, withHandlePromise, } from '@console/internal/components/utils';\nimport { k8sGet, k8sCreate, referenceForModel, apiVersionForModel, } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport { Title, FormGroup, Form, ActionGroup, Button, TextInput, InputGroup, Alert, TextArea, } from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils/router';\nimport { SecretModel } from '@console/internal/models';\nimport { setFlag } from '@console/internal/actions/features';\nimport { getName } from '@console/shared';\nimport { OCSServiceModel } from '../../models';\nimport FileUpload from './fileUpload';\nimport { isValidJSON, checkError, prettifyJSON } from './utils';\nimport { OCS_INDEPENDENT_FLAG, OCS_FLAG } from '../../features';\nimport { OCS_INDEPENDENT_CR_NAME } from '../../constants';\nimport './install.scss';\nconst InstallExternalCluster = withHandlePromise((props) => {\n    const { inProgress, errorMessage, handlePromise, match: { params: { ns, appName }, }, minRequiredKeys: { configMaps, secrets: encodedKeys, storageClasses }, downloadFile, } = props;\n    const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n    const [fileData, setFileData] = React.useState('');\n    const [dataError, setDataError] = React.useState('');\n    const dispatch = useDispatch();\n    const plainKeys = _.concat(configMaps, storageClasses);\n    // File Upload handler\n    const onUpload = (event) => {\n        event.preventDefault();\n        const reader = new FileReader();\n        const file = event.target.files[0];\n        reader.onload = (ev) => {\n            var _a;\n            const data = (_a = ev.target) === null || _a === void 0 ? void 0 : _a.result;\n            if (isValidJSON(data)) {\n                setDataError(checkError(data, plainKeys, encodedKeys));\n                setFileData(data);\n            }\n            else {\n                setDataError('The uploaded file is not a valid JSON file');\n            }\n        };\n        reader.readAsText(file);\n    };\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const secret = {\n            apiVersion: SecretModel.apiVersion,\n            kind: SecretModel.kind,\n            metadata: {\n                name: 'rook-ceph-external-cluster-details',\n                namespace: ns,\n            },\n            stringData: {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                external_cluster_details: fileData,\n            },\n            type: 'Opaque',\n        };\n        const ocsObj = {\n            apiVersion: apiVersionForModel(OCSServiceModel),\n            kind: OCSServiceModel.kind,\n            metadata: {\n                name: OCS_INDEPENDENT_CR_NAME,\n                namespace: ns,\n            },\n            spec: {\n                externalStorage: {\n                    enable: true,\n                },\n                labelSelector: {\n                    matchExpressions: [],\n                },\n            },\n        };\n        handlePromise(Promise.all([k8sCreate(SecretModel, secret), k8sCreate(OCSServiceModel, ocsObj)]))\n            .then((data) => {\n            dispatch(setFlag(OCS_INDEPENDENT_FLAG, true));\n            dispatch(setFlag(OCS_FLAG, true));\n            history.push(`/k8s/ns/${ns}/clusterserviceversions/${getName(clusterServiceVersion)}/${referenceForModel(OCSServiceModel)}/${getName(data[data.length - 1])}`);\n        })\n            .catch((e) => {\n            // eslint-disable-next-line no-console\n            console.error(e);\n        });\n    };\n    const onCancel = () => {\n        history.goBack();\n    };\n    React.useEffect(() => {\n        k8sGet(ClusterServiceVersionModel, appName, ns)\n            .then((clusterServiceVersionObj) => {\n            setClusterServiceVersion(clusterServiceVersionObj);\n        })\n            .catch(() => setClusterServiceVersion(null));\n    }, [appName, ns]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"im-install-page\" },\n            React.createElement(\"div\", { className: \"im-install-page__sub-header\" },\n                React.createElement(Title, { size: \"lg\", headingLevel: \"h5\", className: \"nb-bs-page-title__main\" },\n                    React.createElement(\"div\", { className: \"im-install-page-sub-header__title\" }, \"Connect to external cluster\")),\n                React.createElement(\"p\", { className: \"im--light im-install-page--margin-top\" },\n                    \"Download \",\n                    React.createElement(\"code\", null, \"ceph-external-cluster-details-exporter.py\"),\n                    \" script and run on the RHCS cluster, then upload the results(JSON) in the External cluster metadata field.\",\n                    ' ',\n                    downloadFile && (React.createElement(\"a\", { id: \"downloadAnchorElem\", href: downloadFile, download: \"ceph-external-cluster-details-exporter.py\", target: \"_blank\", rel: \"noopener noreferrer\", className: \"\" }, \"Download Script\"))),\n                React.createElement(Alert, { className: \"co-alert\", variant: \"info\", title: \"A bucket will be created to provide the OCS Service.\", \"aria-label\": \"Bucket created for OCS Service\", isInline: true })),\n            React.createElement(Form, { className: \"im-install-page__form\", onSubmit: onSubmit, \"aria-label\": \"Create External Storage Cluster\" },\n                React.createElement(FormGroup, { label: \"External cluster metadata\", isRequired: true, fieldId: \"cluster-metadata\" },\n                    React.createElement(InputGroup, null,\n                        React.createElement(TextInput, { \"aria-label\": \"Upload JSON File\", value: \"Upload Credentials file\", className: \"im-install-page__input-box\", isDisabled: true }),\n                        React.createElement(FileUpload, { onUpload: onUpload }))),\n                React.createElement(FormGroup, { fieldId: \"preview-box\" },\n                    React.createElement(TextArea, { value: prettifyJSON(fileData), className: \"im-install-page__text-box\", isValid: !dataError, \"aria-label\": \"JSON data\", disabled: true })),\n                React.createElement(ButtonBar, { errorMessage: dataError || errorMessage, inProgress: inProgress },\n                    React.createElement(ActionGroup, null,\n                        React.createElement(Button, { type: \"submit\", variant: \"primary\", isDisabled: _.isEmpty(fileData) || !_.isEmpty(dataError), \"aria-label\": \"Create Button\" }, \"Create\"),\n                        React.createElement(Button, { onClick: onCancel, variant: \"secondary\", \"aria-label\": \"Cancel\" }, \"Cancel\")))))));\n});\nexport default InstallExternalCluster;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-mode/install.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-mode/install.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { match } from 'react-router';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport {\n  ButtonBar,\n  withHandlePromise,\n  HandlePromiseProps,\n} from '@console/internal/components/utils';\nimport {\n  k8sGet,\n  k8sCreate,\n  referenceForModel,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport {\n  Title,\n  FormGroup,\n  Form,\n  ActionGroup,\n  Button,\n  TextInput,\n  InputGroup,\n  Alert,\n  TextArea,\n} from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils/router';\nimport { SecretModel } from '@console/internal/models';\nimport { setFlag } from '@console/internal/actions/features';\nimport { getName } from '@console/shared';\nimport { OCSServiceModel } from '../../models';\nimport FileUpload from './fileUpload';\nimport { isValidJSON, checkError, prettifyJSON } from './utils';\nimport { OCS_INDEPENDENT_FLAG, OCS_FLAG } from '../../features';\nimport { OCS_INDEPENDENT_CR_NAME } from '../../constants';\nimport './install.scss';\n\nconst InstallExternalCluster = withHandlePromise((props: InstallExternalClusterProps) => {\n  const {\n    inProgress,\n    errorMessage,\n    handlePromise,\n    match: {\n      params: { ns, appName },\n    },\n    minRequiredKeys: { configMaps, secrets: encodedKeys, storageClasses },\n    downloadFile,\n  } = props;\n  const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n  const [fileData, setFileData] = React.useState('');\n  const [dataError, setDataError] = React.useState('');\n  const dispatch = useDispatch();\n\n  const plainKeys = _.concat(configMaps, storageClasses);\n\n  // File Upload handler\n  const onUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const reader = new FileReader();\n    const file = event.target.files[0];\n    reader.onload = (ev) => {\n      const data = ev.target?.result as string;\n      if (isValidJSON(data)) {\n        setDataError(checkError(data, plainKeys, encodedKeys));\n        setFileData(data);\n      } else {\n        setDataError('The uploaded file is not a valid JSON file');\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const secret = {\n      apiVersion: SecretModel.apiVersion,\n      kind: SecretModel.kind,\n      metadata: {\n        name: 'rook-ceph-external-cluster-details',\n        namespace: ns,\n      },\n      stringData: {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        external_cluster_details: fileData,\n      },\n      type: 'Opaque',\n    };\n\n    const ocsObj = {\n      apiVersion: apiVersionForModel(OCSServiceModel),\n      kind: OCSServiceModel.kind,\n      metadata: {\n        name: OCS_INDEPENDENT_CR_NAME,\n        namespace: ns,\n      },\n      spec: {\n        externalStorage: {\n          enable: true,\n        },\n        labelSelector: {\n          matchExpressions: [],\n        },\n      },\n    };\n\n    handlePromise(Promise.all([k8sCreate(SecretModel, secret), k8sCreate(OCSServiceModel, ocsObj)]))\n      .then((data) => {\n        dispatch(setFlag(OCS_INDEPENDENT_FLAG, true));\n        dispatch(setFlag(OCS_FLAG, true));\n        history.push(\n          `/k8s/ns/${ns}/clusterserviceversions/${getName(\n            clusterServiceVersion,\n          )}/${referenceForModel(OCSServiceModel)}/${getName(data[data.length - 1])}`,\n        );\n      })\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      });\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  React.useEffect(() => {\n    k8sGet(ClusterServiceVersionModel, appName, ns)\n      .then((clusterServiceVersionObj) => {\n        setClusterServiceVersion(clusterServiceVersionObj);\n      })\n      .catch(() => setClusterServiceVersion(null));\n  }, [appName, ns]);\n\n  return (\n    <>\n      <div className=\"im-install-page\">\n        <div className=\"im-install-page__sub-header\">\n          <Title size=\"lg\" headingLevel=\"h5\" className=\"nb-bs-page-title__main\">\n            <div className=\"im-install-page-sub-header__title\">Connect to external cluster</div>\n          </Title>\n          <p className=\"im--light im-install-page--margin-top\">\n            Download <code>ceph-external-cluster-details-exporter.py</code> script and run on the\n            RHCS cluster, then upload the results(JSON) in the External cluster metadata field.{' '}\n            {downloadFile && (\n              <a\n                id=\"downloadAnchorElem\"\n                href={downloadFile}\n                download=\"ceph-external-cluster-details-exporter.py\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"\"\n              >\n                Download Script\n              </a>\n            )}\n          </p>\n          <Alert\n            className=\"co-alert\"\n            variant=\"info\"\n            title=\"A bucket will be created to provide the OCS Service.\"\n            aria-label=\"Bucket created for OCS Service\"\n            isInline\n          />\n        </div>\n        <Form\n          className=\"im-install-page__form\"\n          onSubmit={onSubmit}\n          aria-label=\"Create External Storage Cluster\"\n        >\n          <FormGroup label=\"External cluster metadata\" isRequired fieldId=\"cluster-metadata\">\n            <InputGroup>\n              <TextInput\n                aria-label=\"Upload JSON File\"\n                value=\"Upload Credentials file\"\n                className=\"im-install-page__input-box\"\n                isDisabled\n              />\n              <FileUpload onUpload={onUpload} />\n            </InputGroup>\n          </FormGroup>\n          <FormGroup fieldId=\"preview-box\">\n            <TextArea\n              value={prettifyJSON(fileData)}\n              className=\"im-install-page__text-box\"\n              isValid={!dataError}\n              aria-label=\"JSON data\"\n              disabled\n            />\n          </FormGroup>\n          <ButtonBar errorMessage={dataError || errorMessage} inProgress={inProgress}>\n            <ActionGroup>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                isDisabled={_.isEmpty(fileData) || !_.isEmpty(dataError)}\n                aria-label=\"Create Button\"\n              >\n                Create\n              </Button>\n              <Button onClick={onCancel} variant=\"secondary\" aria-label=\"Cancel\">\n                Cancel\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </Form>\n      </div>\n    </>\n  );\n});\n\ntype InstallExternalClusterProps = HandlePromiseProps & {\n  match: match<{ ns?: string; appName?: string }>;\n  minRequiredKeys?: { [key: string]: string[] };\n  downloadFile: string;\n};\n\nexport default InstallExternalCluster;\n"]}]}