{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/sink-source/SinkSourceModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/sink-source/SinkSourceModal.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory/modal';\nimport { ResourceDropdownField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { knativeServingResourcesServices } from '../../utils/get-knative-resources';\nconst SinkSourceModal = ({ namespace, resourceName, handleSubmit, cancel, isSubmitting, status, setFieldValue, setFieldTouched, validateForm, values, initialValues, }) => {\n    var _a, _b, _c, _d;\n    const autocompleteFilter = (strText, item) => { var _a; return fuzzy(strText, (_a = item === null || item === void 0 ? void 0 : item.props) === null || _a === void 0 ? void 0 : _a.name); };\n    const onSinkChange = React.useCallback((selectedValue, target) => {\n        var _a;\n        const modelResource = (_a = target === null || target === void 0 ? void 0 : target.props) === null || _a === void 0 ? void 0 : _a.model;\n        if (selectedValue) {\n            setFieldTouched('sink.ref.name', true);\n            setFieldValue('sink.ref.name', selectedValue);\n            if (modelResource) {\n                const { apiGroup, apiVersion, kind } = modelResource;\n                const sinkApiversion = `${apiGroup}/${apiVersion}`;\n                setFieldValue('sink.ref.apiVersion', sinkApiversion);\n                setFieldTouched('sink.ref.apiVersion', true);\n                setFieldValue('sink.ref.kind', kind);\n                setFieldTouched('sink.ref.kind', true);\n            }\n            validateForm();\n        }\n    }, [setFieldValue, setFieldTouched, validateForm]);\n    const dirty = ((_b = (_a = values === null || values === void 0 ? void 0 : values.sink) === null || _a === void 0 ? void 0 : _a.ref) === null || _b === void 0 ? void 0 : _b.name) !== initialValues.sink.ref.name;\n    return (React.createElement(\"form\", { className: \"modal-content modal-content--no-inner-scroll\", onSubmit: handleSubmit },\n        React.createElement(ModalTitle, null, \"Move Sink\"),\n        React.createElement(ModalBody, null,\n            React.createElement(\"p\", null,\n                \"Select a sink to move the event source \",\n                React.createElement(\"strong\", null, resourceName),\n                \" to\"),\n            React.createElement(FormSection, { fullWidth: true },\n                React.createElement(ResourceDropdownField, { name: \"sink.ref.name\", resources: knativeServingResourcesServices(namespace), dataSelector: ['metadata', 'name'], fullWidth: true, required: true, placeholder: \"Select a sink\", showBadge: true, autocompleteFilter: autocompleteFilter, onChange: onSinkChange, autoSelect: true, selectedKey: (_d = (_c = values === null || values === void 0 ? void 0 : values.sink) === null || _c === void 0 ? void 0 : _c.ref) === null || _d === void 0 ? void 0 : _d.name }))),\n        React.createElement(ModalSubmitFooter, { inProgress: isSubmitting, submitText: \"Save\", submitDisabled: !dirty, cancel: cancel, errorMessage: status.error })));\n};\nexport default SinkSourceModal;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/sink-source/SinkSourceModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/sink-source/SinkSourceModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { FormikProps, FormikValues } from 'formik';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { ResourceDropdownField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { knativeServingResourcesServices } from '../../utils/get-knative-resources';\n\nexport interface SinkSourceModalProps {\n  namespace: string;\n  resourceName: string;\n  cancel?: () => void;\n}\n\ntype Props = FormikProps<FormikValues> & SinkSourceModalProps;\n\nconst SinkSourceModal: React.FC<Props> = ({\n  namespace,\n  resourceName,\n  handleSubmit,\n  cancel,\n  isSubmitting,\n  status,\n  setFieldValue,\n  setFieldTouched,\n  validateForm,\n  values,\n  initialValues,\n}) => {\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const onSinkChange = React.useCallback(\n    (selectedValue, target) => {\n      const modelResource = target?.props?.model;\n      if (selectedValue) {\n        setFieldTouched('sink.ref.name', true);\n        setFieldValue('sink.ref.name', selectedValue);\n        if (modelResource) {\n          const { apiGroup, apiVersion, kind } = modelResource;\n          const sinkApiversion = `${apiGroup}/${apiVersion}`;\n          setFieldValue('sink.ref.apiVersion', sinkApiversion);\n          setFieldTouched('sink.ref.apiVersion', true);\n          setFieldValue('sink.ref.kind', kind);\n          setFieldTouched('sink.ref.kind', true);\n        }\n        validateForm();\n      }\n    },\n    [setFieldValue, setFieldTouched, validateForm],\n  );\n  const dirty = values?.sink?.ref?.name !== initialValues.sink.ref.name;\n  return (\n    <form className=\"modal-content modal-content--no-inner-scroll\" onSubmit={handleSubmit}>\n      <ModalTitle>Move Sink</ModalTitle>\n      <ModalBody>\n        <p>\n          Select a sink to move the event source <strong>{resourceName}</strong> to\n        </p>\n        <FormSection fullWidth>\n          <ResourceDropdownField\n            name=\"sink.ref.name\"\n            resources={knativeServingResourcesServices(namespace)}\n            dataSelector={['metadata', 'name']}\n            fullWidth\n            required\n            placeholder=\"Select a sink\"\n            showBadge\n            autocompleteFilter={autocompleteFilter}\n            onChange={onSinkChange}\n            autoSelect\n            selectedKey={values?.sink?.ref?.name}\n          />\n        </FormSection>\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={isSubmitting}\n        submitText=\"Save\"\n        submitDisabled={!dirty}\n        cancel={cancel}\n        errorMessage={status.error}\n      />\n    </form>\n  );\n};\n\nexport default SinkSourceModal;\n"]}]}