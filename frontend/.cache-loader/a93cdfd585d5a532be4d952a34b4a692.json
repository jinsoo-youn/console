{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/states.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/states.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { GreenCheckCircleIcon, RedExclamationCircleIcon, YellowExclamationTriangleIcon, BlueSyncIcon, GrayUnknownIcon, } from '@console/shared/src/components/status/icons';\nimport { InProgressIcon } from '@patternfly/react-icons';\nexport var HealthState;\n(function (HealthState) {\n    HealthState[\"OK\"] = \"OK\";\n    HealthState[\"ERROR\"] = \"ERROR\";\n    HealthState[\"WARNING\"] = \"WARNING\";\n    HealthState[\"LOADING\"] = \"LOADING\";\n    HealthState[\"UNKNOWN\"] = \"UNKNOWN\";\n    HealthState[\"UPDATING\"] = \"UPDATING\";\n    HealthState[\"PROGRESS\"] = \"PROGRESS\";\n    HealthState[\"NOT_AVAILABLE\"] = \"NOT_AVAILABLE\";\n})(HealthState || (HealthState = {}));\nexport const healthStateMapping = {\n    [HealthState.OK]: {\n        icon: React.createElement(GreenCheckCircleIcon, null),\n    },\n    [HealthState.ERROR]: {\n        icon: React.createElement(RedExclamationCircleIcon, null),\n        message: 'Degraded',\n    },\n    [HealthState.WARNING]: {\n        icon: React.createElement(YellowExclamationTriangleIcon, null),\n        message: 'Degraded',\n    },\n    [HealthState.UPDATING]: {\n        icon: React.createElement(BlueSyncIcon, null),\n        message: 'Updating',\n    },\n    [HealthState.PROGRESS]: {\n        icon: React.createElement(InProgressIcon, null),\n        message: 'Pending',\n    },\n    [HealthState.UNKNOWN]: {\n        icon: React.createElement(GrayUnknownIcon, null),\n        message: 'Unknown',\n    },\n    [HealthState.NOT_AVAILABLE]: {\n        icon: React.createElement(GrayUnknownIcon, null),\n        message: 'Not available',\n    },\n};\nexport const healthPriority = {\n    [HealthState.OK]: Object.assign({ priority: 0, health: HealthState.OK }, healthStateMapping[HealthState.OK]),\n    [HealthState.UNKNOWN]: Object.assign({ priority: 1, health: HealthState.UNKNOWN }, healthStateMapping[HealthState.UNKNOWN]),\n    [HealthState.PROGRESS]: Object.assign({ priority: 2, health: HealthState.PROGRESS }, healthStateMapping[HealthState.PROGRESS]),\n    [HealthState.UPDATING]: Object.assign({ priority: 3, health: HealthState.UPDATING }, healthStateMapping[HealthState.UPDATING]),\n    [HealthState.WARNING]: Object.assign({ priority: 4, health: HealthState.WARNING }, healthStateMapping[HealthState.WARNING]),\n    [HealthState.ERROR]: Object.assign({ priority: 5, health: HealthState.ERROR }, healthStateMapping[HealthState.ERROR]),\n    [HealthState.NOT_AVAILABLE]: Object.assign({ priority: 6, health: HealthState.NOT_AVAILABLE }, healthStateMapping[HealthState.NOT_AVAILABLE]),\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/states.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/states.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,oBAAoB,EACpB,wBAAwB,EACxB,6BAA6B,EAC7B,YAAY,EACZ,eAAe,GAChB,MAAM,6CAA6C,CAAC;AACrD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAEzD,MAAM,CAAN,IAAY,WASX;AATD,WAAY,WAAW;IACrB,wBAAS,CAAA;IACT,8BAAe,CAAA;IACf,kCAAmB,CAAA;IACnB,kCAAmB,CAAA;IACnB,kCAAmB,CAAA;IACnB,oCAAqB,CAAA;IACrB,oCAAqB,CAAA;IACrB,8CAA+B,CAAA;AACjC,CAAC,EATW,WAAW,KAAX,WAAW,QAStB;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAkE;IAC/F,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE;QAChB,IAAI,EAAE,oBAAC,oBAAoB,OAAG;KAC/B;IACD,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;QACnB,IAAI,EAAE,oBAAC,wBAAwB,OAAG;QAClC,OAAO,EAAE,UAAU;KACpB;IACD,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;QACrB,IAAI,EAAE,oBAAC,6BAA6B,OAAG;QACvC,OAAO,EAAE,UAAU;KACpB;IACD,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;QACtB,IAAI,EAAE,oBAAC,YAAY,OAAG;QACtB,OAAO,EAAE,UAAU;KACpB;IACD,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;QACtB,IAAI,EAAE,oBAAC,cAAc,OAAG;QACxB,OAAO,EAAE,SAAS;KACnB;IACD,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;QACrB,IAAI,EAAE,oBAAC,eAAe,OAAG;QACzB,OAAO,EAAE,SAAS;KACnB;IACD,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;QAC3B,IAAI,EAAE,oBAAC,eAAe,OAAG;QACzB,OAAO,EAAE,eAAe;KACzB;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAEvB;IACF,CAAC,WAAW,CAAC,EAAE,CAAC,kBACd,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,EAAE,IACnB,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC,CACtC;IACD,CAAC,WAAW,CAAC,OAAO,CAAC,kBACnB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,OAAO,IACxB,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,CAC3C;IACD,CAAC,WAAW,CAAC,QAAQ,CAAC,kBACpB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,QAAQ,IACzB,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC5C;IACD,CAAC,WAAW,CAAC,QAAQ,CAAC,kBACpB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,QAAQ,IACzB,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC5C;IACD,CAAC,WAAW,CAAC,OAAO,CAAC,kBACnB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,OAAO,IACxB,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,CAC3C;IACD,CAAC,WAAW,CAAC,KAAK,CAAC,kBACjB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,KAAK,IACtB,kBAAkB,CAAC,WAAW,CAAC,KAAK,CAAC,CACzC;IACD,CAAC,WAAW,CAAC,aAAa,CAAC,kBACzB,QAAQ,EAAE,CAAC,EACX,MAAM,EAAE,WAAW,CAAC,aAAa,IAC9B,kBAAkB,CAAC,WAAW,CAAC,aAAa,CAAC,CACjD;CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  GreenCheckCircleIcon,\n  RedExclamationCircleIcon,\n  YellowExclamationTriangleIcon,\n  BlueSyncIcon,\n  GrayUnknownIcon,\n} from '@console/shared/src/components/status/icons';\nimport { InProgressIcon } from '@patternfly/react-icons';\n\nexport enum HealthState {\n  OK = 'OK',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  LOADING = 'LOADING',\n  UNKNOWN = 'UNKNOWN',\n  UPDATING = 'UPDATING',\n  PROGRESS = 'PROGRESS',\n  NOT_AVAILABLE = 'NOT_AVAILABLE',\n}\n\nexport const healthStateMapping: { [key in HealthStateMappingKeys]: HealthStateMappingValues } = {\n  [HealthState.OK]: {\n    icon: <GreenCheckCircleIcon />,\n  },\n  [HealthState.ERROR]: {\n    icon: <RedExclamationCircleIcon />,\n    message: 'Degraded',\n  },\n  [HealthState.WARNING]: {\n    icon: <YellowExclamationTriangleIcon />,\n    message: 'Degraded',\n  },\n  [HealthState.UPDATING]: {\n    icon: <BlueSyncIcon />,\n    message: 'Updating',\n  },\n  [HealthState.PROGRESS]: {\n    icon: <InProgressIcon />,\n    message: 'Pending',\n  },\n  [HealthState.UNKNOWN]: {\n    icon: <GrayUnknownIcon />,\n    message: 'Unknown',\n  },\n  [HealthState.NOT_AVAILABLE]: {\n    icon: <GrayUnknownIcon />,\n    message: 'Not available',\n  },\n};\n\nexport const healthPriority: {\n  [key in HealthStateMappingKeys]: PriorityHealthState;\n} = {\n  [HealthState.OK]: {\n    priority: 0,\n    health: HealthState.OK,\n    ...healthStateMapping[HealthState.OK],\n  },\n  [HealthState.UNKNOWN]: {\n    priority: 1,\n    health: HealthState.UNKNOWN,\n    ...healthStateMapping[HealthState.UNKNOWN],\n  },\n  [HealthState.PROGRESS]: {\n    priority: 2,\n    health: HealthState.PROGRESS,\n    ...healthStateMapping[HealthState.PROGRESS],\n  },\n  [HealthState.UPDATING]: {\n    priority: 3,\n    health: HealthState.UPDATING,\n    ...healthStateMapping[HealthState.UPDATING],\n  },\n  [HealthState.WARNING]: {\n    priority: 4,\n    health: HealthState.WARNING,\n    ...healthStateMapping[HealthState.WARNING],\n  },\n  [HealthState.ERROR]: {\n    priority: 5,\n    health: HealthState.ERROR,\n    ...healthStateMapping[HealthState.ERROR],\n  },\n  [HealthState.NOT_AVAILABLE]: {\n    priority: 6,\n    health: HealthState.NOT_AVAILABLE,\n    ...healthStateMapping[HealthState.NOT_AVAILABLE],\n  },\n};\n\nexport type PriorityHealthState = {\n  priority: number;\n  health: HealthState;\n} & HealthStateMappingValues;\n\ntype HealthStateMappingKeys = Exclude<keyof typeof HealthState, 'LOADING'>;\n\nexport type HealthStateMappingValues = {\n  icon: React.ReactNode;\n  message?: string;\n};\n"]}]}