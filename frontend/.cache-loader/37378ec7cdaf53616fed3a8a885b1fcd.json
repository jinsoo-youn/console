{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-items.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-items.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { CatalogItemHeader, CatalogTile } from '@patternfly/react-catalog-view-extension';\nimport * as classNames from 'classnames';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateVariant, Modal, Title, } from '@patternfly/react-core';\nimport { COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY, GreenCheckCircleIcon, } from '@console/shared';\nimport { history } from '@console/internal/components/utils/router';\nimport { TileViewPage } from '@console/internal/components/utils/tile-view-page';\nimport { SubscriptionModel } from '../../models';\nimport { OperatorHubItemDetails } from './operator-hub-item-details';\nimport { communityOperatorWarningModal } from './operator-hub-community-provider-modal';\nimport { InstalledState, ProviderType, CapabilityLevel, InfraFeatures, } from './index';\nconst osBaseLabel = 'operatorframework.io/os.';\nconst targetGOOSLabel = window.SERVER_FLAGS.GOOS ? `${osBaseLabel}${window.SERVER_FLAGS.GOOS}` : '';\nconst archBaseLabel = 'operatorframework.io/arch.';\nconst targetGOARCHLabel = window.SERVER_FLAGS.GOARCH\n    ? `${archBaseLabel}${window.SERVER_FLAGS.GOARCH}`\n    : '';\n// if no label present, these are the assumed defaults\nconst archDefaultAMD64Label = 'operatorframework.io/arch.amd64';\nconst osDefaultLinuxLabel = 'operatorframework.io/os.linux';\nconst filterByArchAndOS = (items) => {\n    if (!window.SERVER_FLAGS.GOARCH || !window.SERVER_FLAGS.GOOS) {\n        return items;\n    }\n    return items.filter((item) => {\n        var _a, _b;\n        // - if the operator has no flags, treat it with the defaults\n        // - if it has any flags, it must list all flags (no defaults applied)\n        const relevantLabels = _.reduce((_b = (_a = item === null || item === void 0 ? void 0 : item.obj) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.labels, (result, value, label) => {\n            if (label.includes(archBaseLabel) && value === 'supported') {\n                result.arch.push(label);\n            }\n            if (label.includes(osBaseLabel) && value === 'supported') {\n                result.os.push(label);\n            }\n            return result;\n        }, {\n            arch: [],\n            os: [],\n        });\n        if (_.isEmpty(relevantLabels.os)) {\n            relevantLabels.os.push(osDefaultLinuxLabel);\n        }\n        if (_.isEmpty(relevantLabels.os)) {\n            relevantLabels.arch.push(archDefaultAMD64Label);\n        }\n        return (_.includes(relevantLabels.os, targetGOOSLabel) &&\n            _.includes(relevantLabels.arch, targetGOARCHLabel));\n    });\n};\nconst badge = (text) => (React.createElement(\"span\", { key: \"1\", className: \"pf-c-badge pf-m-read\" }, text));\n/**\n * Filter property white list\n */\nconst operatorHubFilterGroups = [\n    'providerType',\n    'provider',\n    'installState',\n    'capabilityLevel',\n    'infraFeatures',\n];\nconst operatorHubFilterMap = {\n    providerType: 'Provider Type',\n    provider: 'Provider',\n    installState: 'Install State',\n    capabilityLevel: 'Capability Level',\n    infraFeatures: 'Infrastructure Features',\n};\nconst COMMUNITY_PROVIDER_TYPE = 'Community';\nconst MARKETPLACE_PROVIDER_TYPE = 'Marketplace';\nconst ignoredProviderTails = [', Inc.', ', Inc', ' Inc.', ' Inc', ', LLC', ' LLC'];\nconst determineCategories = (items) => {\n    const newCategories = {};\n    _.each(items, (item) => {\n        _.each(item.categories, (category) => {\n            if (!newCategories[category]) {\n                newCategories[category] = {\n                    id: category,\n                    label: category,\n                    field: 'categories',\n                    values: [category],\n                };\n            }\n        });\n    });\n    const sortedKeys = _.keys(newCategories).sort((key1, key2) => key1.toLowerCase().localeCompare(key2.toLowerCase()));\n    return _.reduce(sortedKeys, (categories, key) => {\n        categories[key] = newCategories[key];\n        return categories;\n    }, {});\n};\nexport const getProviderValue = (value) => {\n    if (!value) {\n        return value;\n    }\n    const providerTail = _.find(ignoredProviderTails, (tail) => value.endsWith(tail));\n    if (providerTail) {\n        return value.substring(0, value.indexOf(providerTail));\n    }\n    return value;\n};\nconst providerSort = (provider) => {\n    if (provider.value.toLowerCase() === 'red hat') {\n        return '';\n    }\n    return provider.value;\n};\nconst providerTypeSort = (provider) => {\n    switch (provider.value) {\n        case ProviderType.RedHat:\n            return 0;\n        case ProviderType.Certified:\n            return 1;\n        case ProviderType.Community:\n            return 2;\n        case ProviderType.Marketplace:\n            return 3;\n        default:\n            return 4;\n    }\n};\nconst installedStateSort = (provider) => {\n    switch (provider.value) {\n        case InstalledState.Installed:\n            return 0;\n        case InstalledState.NotInstalled:\n            return 1;\n        default:\n            return 3;\n    }\n};\nconst capabilityLevelSort = (provider) => {\n    switch (provider.value) {\n        case CapabilityLevel.BasicInstall:\n            return 0;\n        case CapabilityLevel.SeamlessUpgrades:\n            return 1;\n        case CapabilityLevel.FullLifecycle:\n            return 2;\n        case CapabilityLevel.DeepInsights:\n            return 3;\n        default:\n            return 5;\n    }\n};\nconst infraFeaturesSort = (infrastructure) => {\n    switch (infrastructure.value) {\n        case InfraFeatures.Disconnected:\n            return 0;\n        case InfraFeatures.Proxy:\n            return 1;\n        case InfraFeatures.FipsMode:\n            return 2;\n        default:\n            return 3;\n    }\n};\nconst sortFilterValues = (values, field) => {\n    let sorter = ['value'];\n    if (field === 'provider') {\n        sorter = providerSort;\n    }\n    if (field === 'providerType') {\n        return _.sortBy(values, [providerTypeSort, 'value']);\n    }\n    if (field === 'installState') {\n        sorter = installedStateSort;\n    }\n    if (field === 'capabilityLevel') {\n        sorter = capabilityLevelSort;\n    }\n    if (field === 'infraFeatures') {\n        sorter = infraFeaturesSort;\n    }\n    return _.sortBy(values, sorter);\n};\nconst determineAvailableFilters = (initialFilters, items, filterGroups) => {\n    const filters = _.cloneDeep(initialFilters);\n    // Always show both install state filters\n    filters.installState = {\n        Installed: {\n            label: 'Installed',\n            value: 'Installed',\n            active: false,\n        },\n        'Not Installed': {\n            label: 'Not Installed',\n            value: 'Not Installed',\n            active: false,\n        },\n    };\n    _.each(filterGroups, (field) => {\n        const values = [];\n        _.each(items, (item) => {\n            let value = item[field];\n            let synonyms;\n            if (field === 'provider') {\n                value = getProviderValue(value);\n                synonyms = _.map(ignoredProviderTails, (tail) => `${value}${tail}`);\n            }\n            if (value !== undefined && !Array.isArray(value)) {\n                if (!_.some(values, { value })) {\n                    values.push({\n                        label: value,\n                        synonyms,\n                        value,\n                        active: false,\n                    });\n                }\n            }\n            if (Array.isArray(value)) {\n                _.each(value, (v) => {\n                    if (!_.some(values, { v })) {\n                        values.push({\n                            label: v,\n                            synonyms,\n                            value: v,\n                            active: false,\n                        });\n                    }\n                });\n            }\n        });\n        _.forEach(sortFilterValues(values, field), (nextValue) => _.set(filters, [field, nextValue.value], nextValue));\n    });\n    return filters;\n};\nexport const keywordCompare = (filterString, item) => {\n    if (!filterString) {\n        return true;\n    }\n    if (!item) {\n        return false;\n    }\n    return (item.name.toLowerCase().includes(filterString) ||\n        _.get(item, 'obj.metadata.name', '')\n            .toLowerCase()\n            .includes(filterString) ||\n        (item.description && item.description.toLowerCase().includes(filterString)) ||\n        (item.tags && item.tags.includes(filterString)));\n};\nconst setURLParams = (params) => {\n    const url = new URL(window.location.href);\n    const searchParams = `?${params.toString()}${url.hash}`;\n    history.replace(`${url.pathname}${searchParams}`);\n};\nexport const OperatorHubTileView = (props) => {\n    const [detailsItem, setDetailsItem] = React.useState(null);\n    const [showDetails, setShowDetails] = React.useState(false);\n    const filteredItems = filterByArchAndOS(props.items);\n    React.useEffect(() => {\n        const detailsItemID = new URLSearchParams(window.location.search).get('details-item');\n        const currentItem = _.find(filteredItems, { uid: detailsItemID });\n        setDetailsItem(currentItem);\n        setShowDetails(!_.isNil(currentItem));\n    }, [filteredItems]);\n    const showCommunityOperator = (item) => (ignoreWarning = false) => {\n        const params = new URLSearchParams(window.location.search);\n        params.set('details-item', item.uid);\n        setURLParams(params);\n        setDetailsItem(item);\n        setShowDetails(true);\n        if (ignoreWarning) {\n            localStorage.setItem(COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY, 'true');\n        }\n    };\n    const openOverlay = (item) => {\n        const ignoreWarning = localStorage.getItem(COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY) === 'true';\n        if (!ignoreWarning && item.providerType === COMMUNITY_PROVIDER_TYPE) {\n            communityOperatorWarningModal({\n                showCommunityOperators: (ignore) => showCommunityOperator(item)(ignore),\n            });\n        }\n        else {\n            const params = new URLSearchParams(window.location.search);\n            params.set('details-item', item.uid);\n            setURLParams(params);\n            setDetailsItem(item);\n            setShowDetails(true);\n        }\n    };\n    const closeOverlay = () => {\n        const params = new URLSearchParams(window.location.search);\n        params.delete('details-item');\n        setURLParams(params);\n        setDetailsItem(null);\n        setShowDetails(false);\n    };\n    const renderTile = (item) => {\n        if (!item) {\n            return null;\n        }\n        const { uid, name, imgUrl, provider, description, installed } = item;\n        const vendor = provider ? `provided by ${provider}` : null;\n        const badges = [COMMUNITY_PROVIDER_TYPE, MARKETPLACE_PROVIDER_TYPE].includes(item.providerType)\n            ? [badge(item.providerType)]\n            : [];\n        const icon = React.createElement(\"img\", { className: \"catalog-tile-pf-icon\", loading: \"lazy\", src: imgUrl, alt: \"\" });\n        return (React.createElement(CatalogTile, { className: \"co-catalog-tile\", key: uid, title: name, badges: badges, icon: icon, vendor: vendor, description: description, onClick: () => openOverlay(item), footer: installed ? (React.createElement(\"span\", null,\n                React.createElement(GreenCheckCircleIcon, null),\n                \" Installed\")) : null, \"data-test\": uid }));\n    };\n    const createLink = detailsItem &&\n        `/operatorhub/subscribe?pkg=${detailsItem.obj.metadata.name}&catalog=${detailsItem.catalogSource}&catalogNamespace=${detailsItem.catalogSourceNamespace}&targetNamespace=${props.namespace}`;\n    const uninstallLink = () => detailsItem &&\n        `/k8s/ns/${detailsItem.subscription.metadata.namespace}/${SubscriptionModel.plural}/${detailsItem.subscription.metadata.name}?showDelete=true`;\n    if (_.isEmpty(filteredItems)) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(EmptyState, { variant: EmptyStateVariant.full, className: \"co-status-card__alerts-msg\" },\n                React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, \"No operators available\"),\n                window.SERVER_FLAGS.GOOS && window.SERVER_FLAGS.GOARCH && (React.createElement(EmptyStateBody, null,\n                    \"There are no operators that match operating system \",\n                    window.SERVER_FLAGS.GOOS,\n                    \" and architecture \",\n                    window.SERVER_FLAGS.GOARCH,\n                    \".\")))));\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TileViewPage, { items: filteredItems, itemsSorter: (itemsToSort) => _.sortBy(itemsToSort, ({ name }) => name.toLowerCase()), getAvailableCategories: determineCategories, getAvailableFilters: determineAvailableFilters, filterGroups: operatorHubFilterGroups, filterGroupNameMap: operatorHubFilterMap, keywordCompare: keywordCompare, renderTile: renderTile, emptyStateInfo: \"No OperatorHub items are being shown due to the filters being applied.\" }),\n        detailsItem && (React.createElement(Modal, { className: \"co-catalog-page__overlay co-catalog-page__overlay--right\", \"data-test-id\": \"operator-modal-box\", header: React.createElement(React.Fragment, null,\n                React.createElement(CatalogItemHeader, { iconClass: detailsItem.iconClass, iconImg: detailsItem.imgUrl, title: detailsItem.name, vendor: `${detailsItem.version} provided by ${detailsItem.provider}`, \"data-test-id\": \"operator-modal-header\" }),\n                React.createElement(\"div\", { className: \"co-catalog-page__overlay-actions\" },\n                    detailsItem.marketplaceRemoteWorkflow && (React.createElement(ExternalLink, { additionalClassName: \"pf-c-button pf-m-primary co-catalog-page__overlay-action\", href: detailsItem.marketplaceRemoteWorkflow, text: React.createElement(React.Fragment, null,\n                            React.createElement(\"div\", { className: \"co-catalog-page__overlay-action-label\" }, detailsItem.marketplaceActionText || 'Purchase'),\n                            React.createElement(ExternalLinkAltIcon, { className: \"co-catalog-page__overlay-action-icon\" })) })),\n                    !detailsItem.installed ? (React.createElement(Link, { className: classNames('pf-c-button', { 'pf-m-secondary': detailsItem.marketplaceRemoteWorkflow }, { 'pf-m-primary': !detailsItem.marketplaceRemoteWorkflow }, 'co-catalog-page__overlay-action'), \"data-test-id\": \"operator-install-btn\", to: createLink }, \"Install\")) : (React.createElement(Button, { className: \"co-catalog-page__overlay-action\", \"data-test-id\": \"operator-uninstall-btn\", isDisabled: !detailsItem.installed, onClick: () => history.push(uninstallLink()), variant: \"secondary\" }, \"Uninstall\")))), isOpen: !!detailsItem && showDetails, onClose: closeOverlay, title: detailsItem.name },\n            React.createElement(OperatorHubItemDetails, { namespace: props.namespace, item: detailsItem })))));\n};\nOperatorHubTileView.displayName = 'OperatorHubTileView';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-items.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-items.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { CatalogItemHeader, CatalogTile } from '@patternfly/react-catalog-view-extension';\nimport * as classNames from 'classnames';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Modal,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY,\n  GreenCheckCircleIcon,\n} from '@console/shared';\nimport { history } from '@console/internal/components/utils/router';\nimport { TileViewPage } from '@console/internal/components/utils/tile-view-page';\nimport { SubscriptionModel } from '../../models';\nimport { OperatorHubItemDetails } from './operator-hub-item-details';\nimport { communityOperatorWarningModal } from './operator-hub-community-provider-modal';\nimport {\n  OperatorHubItem,\n  InstalledState,\n  ProviderType,\n  CapabilityLevel,\n  InfraFeatures,\n} from './index';\n\nconst osBaseLabel = 'operatorframework.io/os.';\nconst targetGOOSLabel = window.SERVER_FLAGS.GOOS ? `${osBaseLabel}${window.SERVER_FLAGS.GOOS}` : '';\nconst archBaseLabel = 'operatorframework.io/arch.';\nconst targetGOARCHLabel = window.SERVER_FLAGS.GOARCH\n  ? `${archBaseLabel}${window.SERVER_FLAGS.GOARCH}`\n  : '';\n// if no label present, these are the assumed defaults\nconst archDefaultAMD64Label = 'operatorframework.io/arch.amd64';\nconst osDefaultLinuxLabel = 'operatorframework.io/os.linux';\nconst filterByArchAndOS = (items: OperatorHubItem[]): OperatorHubItem[] => {\n  if (!window.SERVER_FLAGS.GOARCH || !window.SERVER_FLAGS.GOOS) {\n    return items;\n  }\n  return items.filter((item: OperatorHubItem) => {\n    // - if the operator has no flags, treat it with the defaults\n    // - if it has any flags, it must list all flags (no defaults applied)\n    const relevantLabels = _.reduce(\n      item?.obj?.metadata?.labels,\n      (result, value: string, label: string): { arch: string[]; os: string[] } => {\n        if (label.includes(archBaseLabel) && value === 'supported') {\n          result.arch.push(label);\n        }\n        if (label.includes(osBaseLabel) && value === 'supported') {\n          result.os.push(label);\n        }\n        return result;\n      },\n      {\n        arch: [],\n        os: [],\n      },\n    );\n\n    if (_.isEmpty(relevantLabels.os)) {\n      relevantLabels.os.push(osDefaultLinuxLabel);\n    }\n\n    if (_.isEmpty(relevantLabels.os)) {\n      relevantLabels.arch.push(archDefaultAMD64Label);\n    }\n\n    return (\n      _.includes(relevantLabels.os, targetGOOSLabel) &&\n      _.includes(relevantLabels.arch, targetGOARCHLabel)\n    );\n  });\n};\n\nconst badge = (text: string) => (\n  <span key=\"1\" className=\"pf-c-badge pf-m-read\">\n    {text}\n  </span>\n);\n\n/**\n * Filter property white list\n */\nconst operatorHubFilterGroups = [\n  'providerType',\n  'provider',\n  'installState',\n  'capabilityLevel',\n  'infraFeatures',\n];\n\nconst operatorHubFilterMap = {\n  providerType: 'Provider Type',\n  provider: 'Provider',\n  installState: 'Install State',\n  capabilityLevel: 'Capability Level',\n  infraFeatures: 'Infrastructure Features',\n};\n\nconst COMMUNITY_PROVIDER_TYPE = 'Community';\nconst MARKETPLACE_PROVIDER_TYPE = 'Marketplace';\n\nconst ignoredProviderTails = [', Inc.', ', Inc', ' Inc.', ' Inc', ', LLC', ' LLC'];\n\nconst determineCategories = (items) => {\n  const newCategories = {};\n  _.each(items, (item) => {\n    _.each(item.categories, (category) => {\n      if (!newCategories[category]) {\n        newCategories[category] = {\n          id: category,\n          label: category,\n          field: 'categories',\n          values: [category],\n        };\n      }\n    });\n  });\n\n  const sortedKeys = _.keys(newCategories).sort((key1, key2) =>\n    key1.toLowerCase().localeCompare(key2.toLowerCase()),\n  );\n\n  return _.reduce(\n    sortedKeys,\n    (categories, key) => {\n      categories[key] = newCategories[key];\n      return categories;\n    },\n    {},\n  );\n};\n\nexport const getProviderValue = (value) => {\n  if (!value) {\n    return value;\n  }\n\n  const providerTail = _.find(ignoredProviderTails, (tail) => value.endsWith(tail));\n  if (providerTail) {\n    return value.substring(0, value.indexOf(providerTail));\n  }\n\n  return value;\n};\n\nconst providerSort = (provider) => {\n  if (provider.value.toLowerCase() === 'red hat') {\n    return '';\n  }\n  return provider.value;\n};\n\nconst providerTypeSort = (provider) => {\n  switch (provider.value) {\n    case ProviderType.RedHat:\n      return 0;\n    case ProviderType.Certified:\n      return 1;\n    case ProviderType.Community:\n      return 2;\n    case ProviderType.Marketplace:\n      return 3;\n    default:\n      return 4;\n  }\n};\n\nconst installedStateSort = (provider) => {\n  switch (provider.value) {\n    case InstalledState.Installed:\n      return 0;\n    case InstalledState.NotInstalled:\n      return 1;\n    default:\n      return 3;\n  }\n};\n\nconst capabilityLevelSort = (provider) => {\n  switch (provider.value) {\n    case CapabilityLevel.BasicInstall:\n      return 0;\n    case CapabilityLevel.SeamlessUpgrades:\n      return 1;\n    case CapabilityLevel.FullLifecycle:\n      return 2;\n    case CapabilityLevel.DeepInsights:\n      return 3;\n    default:\n      return 5;\n  }\n};\n\nconst infraFeaturesSort = (infrastructure) => {\n  switch (infrastructure.value) {\n    case InfraFeatures.Disconnected:\n      return 0;\n    case InfraFeatures.Proxy:\n      return 1;\n    case InfraFeatures.FipsMode:\n      return 2;\n    default:\n      return 3;\n  }\n};\n\nconst sortFilterValues = (values, field) => {\n  let sorter: any = ['value'];\n\n  if (field === 'provider') {\n    sorter = providerSort;\n  }\n\n  if (field === 'providerType') {\n    return _.sortBy(values, [providerTypeSort, 'value']);\n  }\n\n  if (field === 'installState') {\n    sorter = installedStateSort;\n  }\n\n  if (field === 'capabilityLevel') {\n    sorter = capabilityLevelSort;\n  }\n\n  if (field === 'infraFeatures') {\n    sorter = infraFeaturesSort;\n  }\n\n  return _.sortBy(values, sorter);\n};\n\nconst determineAvailableFilters = (initialFilters, items, filterGroups) => {\n  const filters = _.cloneDeep(initialFilters);\n\n  // Always show both install state filters\n  filters.installState = {\n    Installed: {\n      label: 'Installed',\n      value: 'Installed',\n      active: false,\n    },\n    'Not Installed': {\n      label: 'Not Installed',\n      value: 'Not Installed',\n      active: false,\n    },\n  };\n\n  _.each(filterGroups, (field) => {\n    const values = [];\n    _.each(items, (item) => {\n      let value = item[field];\n      let synonyms;\n      if (field === 'provider') {\n        value = getProviderValue(value);\n        synonyms = _.map(ignoredProviderTails, (tail) => `${value}${tail}`);\n      }\n      if (value !== undefined && !Array.isArray(value)) {\n        if (!_.some(values, { value })) {\n          values.push({\n            label: value,\n            synonyms,\n            value,\n            active: false,\n          });\n        }\n      }\n\n      if (Array.isArray(value)) {\n        _.each(value, (v) => {\n          if (!_.some(values, { v })) {\n            values.push({\n              label: v,\n              synonyms,\n              value: v,\n              active: false,\n            });\n          }\n        });\n      }\n    });\n\n    _.forEach(sortFilterValues(values, field), (nextValue: any) =>\n      _.set(filters, [field, nextValue.value], nextValue),\n    );\n  });\n\n  return filters;\n};\n\nexport const keywordCompare = (filterString, item) => {\n  if (!filterString) {\n    return true;\n  }\n  if (!item) {\n    return false;\n  }\n\n  return (\n    item.name.toLowerCase().includes(filterString) ||\n    _.get(item, 'obj.metadata.name', '')\n      .toLowerCase()\n      .includes(filterString) ||\n    (item.description && item.description.toLowerCase().includes(filterString)) ||\n    (item.tags && item.tags.includes(filterString))\n  );\n};\n\nconst setURLParams = (params) => {\n  const url = new URL(window.location.href);\n  const searchParams = `?${params.toString()}${url.hash}`;\n\n  history.replace(`${url.pathname}${searchParams}`);\n};\n\nexport const OperatorHubTileView: React.FC<OperatorHubTileViewProps> = (props) => {\n  const [detailsItem, setDetailsItem] = React.useState(null);\n  const [showDetails, setShowDetails] = React.useState(false);\n\n  const filteredItems = filterByArchAndOS(props.items);\n\n  React.useEffect(() => {\n    const detailsItemID = new URLSearchParams(window.location.search).get('details-item');\n    const currentItem = _.find(filteredItems, { uid: detailsItemID });\n    setDetailsItem(currentItem);\n    setShowDetails(!_.isNil(currentItem));\n  }, [filteredItems]);\n\n  const showCommunityOperator = (item: OperatorHubItem) => (ignoreWarning = false) => {\n    const params = new URLSearchParams(window.location.search);\n    params.set('details-item', item.uid);\n    setURLParams(params);\n    setDetailsItem(item);\n    setShowDetails(true);\n\n    if (ignoreWarning) {\n      localStorage.setItem(COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY, 'true');\n    }\n  };\n\n  const openOverlay = (item: OperatorHubItem) => {\n    const ignoreWarning =\n      localStorage.getItem(COMMUNITY_PROVIDERS_WARNING_LOCAL_STORAGE_KEY) === 'true';\n\n    if (!ignoreWarning && item.providerType === COMMUNITY_PROVIDER_TYPE) {\n      communityOperatorWarningModal({\n        showCommunityOperators: (ignore) => showCommunityOperator(item)(ignore),\n      });\n    } else {\n      const params = new URLSearchParams(window.location.search);\n      params.set('details-item', item.uid);\n      setURLParams(params);\n      setDetailsItem(item);\n      setShowDetails(true);\n    }\n  };\n\n  const closeOverlay = () => {\n    const params = new URLSearchParams(window.location.search);\n    params.delete('details-item');\n    setURLParams(params);\n    setDetailsItem(null);\n    setShowDetails(false);\n  };\n\n  const renderTile = (item: OperatorHubItem) => {\n    if (!item) {\n      return null;\n    }\n\n    const { uid, name, imgUrl, provider, description, installed } = item;\n    const vendor = provider ? `provided by ${provider}` : null;\n    const badges = [COMMUNITY_PROVIDER_TYPE, MARKETPLACE_PROVIDER_TYPE].includes(item.providerType)\n      ? [badge(item.providerType)]\n      : [];\n    const icon = <img className=\"catalog-tile-pf-icon\" loading=\"lazy\" src={imgUrl} alt=\"\" />;\n    return (\n      <CatalogTile\n        className=\"co-catalog-tile\"\n        key={uid}\n        title={name}\n        badges={badges}\n        icon={icon}\n        vendor={vendor}\n        description={description}\n        onClick={() => openOverlay(item)}\n        footer={\n          installed ? (\n            <span>\n              <GreenCheckCircleIcon /> Installed\n            </span>\n          ) : null\n        }\n        data-test={uid}\n      />\n    );\n  };\n\n  const createLink =\n    detailsItem &&\n    `/operatorhub/subscribe?pkg=${detailsItem.obj.metadata.name}&catalog=${detailsItem.catalogSource}&catalogNamespace=${detailsItem.catalogSourceNamespace}&targetNamespace=${props.namespace}`;\n\n  const uninstallLink = () =>\n    detailsItem &&\n    `/k8s/ns/${detailsItem.subscription.metadata.namespace}/${SubscriptionModel.plural}/${detailsItem.subscription.metadata.name}?showDelete=true`;\n\n  if (_.isEmpty(filteredItems)) {\n    return (\n      <>\n        <EmptyState variant={EmptyStateVariant.full} className=\"co-status-card__alerts-msg\">\n          <Title headingLevel=\"h5\" size=\"lg\">\n            No operators available\n          </Title>\n          {window.SERVER_FLAGS.GOOS && window.SERVER_FLAGS.GOARCH && (\n            <EmptyStateBody>\n              There are no operators that match operating system {window.SERVER_FLAGS.GOOS} and\n              architecture {window.SERVER_FLAGS.GOARCH}.\n            </EmptyStateBody>\n          )}\n        </EmptyState>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <TileViewPage\n        items={filteredItems}\n        itemsSorter={(itemsToSort) => _.sortBy(itemsToSort, ({ name }) => name.toLowerCase())}\n        getAvailableCategories={determineCategories}\n        getAvailableFilters={determineAvailableFilters}\n        filterGroups={operatorHubFilterGroups}\n        filterGroupNameMap={operatorHubFilterMap}\n        keywordCompare={keywordCompare}\n        renderTile={renderTile}\n        emptyStateInfo=\"No OperatorHub items are being shown due to the filters being applied.\"\n      />\n      {detailsItem && (\n        <Modal\n          className=\"co-catalog-page__overlay co-catalog-page__overlay--right\"\n          data-test-id=\"operator-modal-box\"\n          header={\n            <>\n              <CatalogItemHeader\n                iconClass={detailsItem.iconClass}\n                iconImg={detailsItem.imgUrl}\n                title={detailsItem.name}\n                vendor={`${detailsItem.version} provided by ${detailsItem.provider}`}\n                data-test-id=\"operator-modal-header\"\n              />\n              <div className=\"co-catalog-page__overlay-actions\">\n                {detailsItem.marketplaceRemoteWorkflow && (\n                  <ExternalLink\n                    additionalClassName=\"pf-c-button pf-m-primary co-catalog-page__overlay-action\"\n                    href={detailsItem.marketplaceRemoteWorkflow}\n                    text={\n                      <>\n                        <div className=\"co-catalog-page__overlay-action-label\">\n                          {detailsItem.marketplaceActionText || 'Purchase'}\n                        </div>\n                        <ExternalLinkAltIcon className=\"co-catalog-page__overlay-action-icon\" />\n                      </>\n                    }\n                  />\n                )}\n                {!detailsItem.installed ? (\n                  <Link\n                    className={classNames(\n                      'pf-c-button',\n                      { 'pf-m-secondary': detailsItem.marketplaceRemoteWorkflow },\n                      { 'pf-m-primary': !detailsItem.marketplaceRemoteWorkflow },\n                      'co-catalog-page__overlay-action',\n                    )}\n                    data-test-id=\"operator-install-btn\"\n                    to={createLink}\n                  >\n                    Install\n                  </Link>\n                ) : (\n                  <Button\n                    className=\"co-catalog-page__overlay-action\"\n                    data-test-id=\"operator-uninstall-btn\"\n                    isDisabled={!detailsItem.installed}\n                    onClick={() => history.push(uninstallLink())}\n                    variant=\"secondary\"\n                  >\n                    Uninstall\n                  </Button>\n                )}\n              </div>\n            </>\n          }\n          isOpen={!!detailsItem && showDetails}\n          onClose={closeOverlay}\n          title={detailsItem.name}\n        >\n          <OperatorHubItemDetails namespace={props.namespace} item={detailsItem} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport type OperatorHubTileViewProps = {\n  namespace?: string;\n  items: OperatorHubItem[];\n};\n\nOperatorHubTileView.displayName = 'OperatorHubTileView';\n"]}]}