{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgCircledIcon.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgCircledIcon.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@console/topology';\nimport { isIconUrl } from '@console/shared/';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\nexport const CircledIcon = ({ className, x, y, width, height, iconClass, padding = 4 }, circleRef) => {\n    const [typedIconSize, typedIconRef] = useSize([]);\n    let iconWidth = 0;\n    let iconHeight = 0;\n    if (typedIconSize) {\n        ({ width: iconWidth, height: iconHeight } = typedIconSize);\n    }\n    return (React.createElement(\"g\", { className: className },\n        React.createElement(SvgDropShadowFilter, { id: FILTER_ID }),\n        React.createElement(\"circle\", { ref: circleRef, filter: createSvgIdUrl(FILTER_ID), cx: x - iconWidth / 2, cy: y + iconHeight / 2, r: iconWidth / 2 + padding }),\n        React.createElement(\"g\", { ref: typedIconRef },\n            React.createElement(\"image\", { x: x - iconWidth, y: y, width: width, height: height, xlinkHref: isIconUrl(iconClass) ? iconClass : getImageForIconClass(iconClass), filter: createSvgIdUrl(FILTER_ID) }))));\n};\nexport default React.forwardRef(CircledIcon);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgCircledIcon.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgCircledIcon.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,oBAAoB,EAAE,MAAM,wDAAwD,CAAC;AAC9F,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAYxD,MAAM,SAAS,GAAG,gCAAgC,CAAC;AAEnD,MAAM,CAAC,MAAM,WAAW,GAAgC,CACtD,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,GAAG,CAAC,EAAE,EAC1D,SAAS,EACT,EAAE;IACF,MAAM,CAAC,aAAa,EAAE,YAAY,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;IAElD,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,IAAI,aAAa,EAAE;QACjB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC,CAAC;KAC5D;IAED,OAAO,CACL,2BAAG,SAAS,EAAE,SAAS;QACrB,oBAAC,mBAAmB,IAAC,EAAE,EAAE,SAAS,GAAI;QACtC,gCACE,GAAG,EAAE,SAAS,EACd,MAAM,EAAE,cAAc,CAAC,SAAS,CAAC,EACjC,EAAE,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC,EACrB,EAAE,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC,EACtB,CAAC,EAAE,SAAS,GAAG,CAAC,GAAG,OAAO,GAC1B;QACF,2BAAG,GAAG,EAAE,YAAY;YAClB,+BACE,CAAC,EAAE,CAAC,GAAG,SAAS,EAChB,CAAC,EAAE,CAAC,EACJ,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAC7E,MAAM,EAAE,cAAc,CAAC,SAAS,CAAC,GACjC,CACA,CACF,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@console/topology';\nimport { isIconUrl } from '@console/shared/';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass: string;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nexport const CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      <g ref={typedIconRef}>\n        <image\n          x={x - iconWidth}\n          y={y}\n          width={width}\n          height={height}\n          xlinkHref={isIconUrl(iconClass) ? iconClass : getImageForIconClass(iconClass)}\n          filter={createSvgIdUrl(FILTER_ID)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n"]}]}