{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgDropShadowFilter.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgDropShadowFilter.tsx","mtime":1617154808360},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { SVGDefs } from '@console/topology';\nconst SvgDropShadowFilter = ({ id, dx = 0, dy = 1, stdDeviation = 2, floodColor = '#030303', floodOpacity = 0.2 }) => {\n    if (window.navigator.userAgent.includes('Edge')) {\n        // feDropShadow is not supported by Edge\n        return (React.createElement(SVGDefs, { id: id },\n            React.createElement(\"filter\", { id: id, x: `-${stdDeviation * 12.5}%`, y: `-${stdDeviation * 12.5}%`, width: `${100 + stdDeviation * 25}%`, height: `${100 + stdDeviation * 25}%` },\n                React.createElement(\"feGaussianBlur\", { in: \"SourceAlpha\", stdDeviation: stdDeviation }),\n                React.createElement(\"feOffset\", { dx: dx, dy: dy, result: \"offsetblur\" }),\n                React.createElement(\"feFlood\", { floodColor: floodColor, floodOpacity: floodOpacity }),\n                React.createElement(\"feComposite\", { in2: \"offsetblur\", operator: \"in\" }),\n                React.createElement(\"feMerge\", null,\n                    React.createElement(\"feMergeNode\", null),\n                    React.createElement(\"feMergeNode\", { in: \"SourceGraphic\" })))));\n    }\n    return (React.createElement(SVGDefs, { id: id },\n        React.createElement(\"filter\", { id: id, x: `-${stdDeviation * 12.5}%`, y: `-${stdDeviation * 12.5}%`, width: `${100 + stdDeviation * 25}%`, height: `${100 + stdDeviation * 25}%` },\n            React.createElement(\"feDropShadow\", { dx: dx, dy: dy, stdDeviation: stdDeviation, floodColor: floodColor, floodOpacity: floodOpacity }))));\n};\nexport default SvgDropShadowFilter;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgDropShadowFilter.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgDropShadowFilter.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAa5C,MAAM,mBAAmB,GAAuC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAAE,UAAU,GAAG,SAAS,EAAE,YAAY,GAAG,GAAG,EAAE,EAAE,EAAE;IACvJ,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/C,wCAAwC;QACxC,OAAO,CACL,oBAAC,OAAO,IAAC,EAAE,EAAE,EAAE;YACb,gCAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,KAAK,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,EAAE,GAAG;gBACvJ,wCAAgB,EAAE,EAAC,aAAa,EAAC,YAAY,EAAE,YAAY,GAAI;gBAC/D,kCAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAC,YAAY,GAAG;gBAChD,iCAAS,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,GAAI;gBAC/D,qCAAa,GAAG,EAAC,YAAY,EAAC,QAAQ,EAAC,IAAI,GAAG;gBAC9C;oBACE,wCAAe;oBACf,qCAAa,EAAE,EAAC,eAAe,GAAG,CAC1B,CACH,CACD,CACX,CAAC;KACH;IAED,OAAO,CACL,oBAAC,OAAO,IAAC,EAAE,EAAE,EAAE;QACb,gCAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,KAAK,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,EAAE,GAAG;YACvJ,sCAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,GAAI,CACzG,CACD,CACX,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["import * as React from 'react';\nimport { SVGDefs } from '@console/topology';\n\nexport interface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({ id, dx = 0, dy = 1, stdDeviation = 2, floodColor = '#030303', floodOpacity = 0.2 }) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter id={id} x={`-${stdDeviation * 12.5}%`} y={`-${stdDeviation * 12.5}%`} width={`${100 + stdDeviation * 25}%`} height={`${100 + stdDeviation * 25}%`}>\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter id={id} x={`-${stdDeviation * 12.5}%`} y={`-${stdDeviation * 12.5}%`} width={`${100 + stdDeviation * 25}%`} height={`${100 + stdDeviation * 25}%`}>\n        <feDropShadow dx={dx} dy={dy} stdDeviation={stdDeviation} floodColor={floodColor} floodOpacity={floodOpacity} />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n"]}]}