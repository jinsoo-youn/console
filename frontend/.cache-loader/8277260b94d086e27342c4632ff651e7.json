{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/KafkaSourceSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/KafkaSourceSection.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport KafkaSourceNetSection from './KafkaSourceNetSection';\nimport ServiceAccountDropdown from '../../dropdowns/ServiceAccountDropdown';\nconst KafkaSourceSection = () => {\n    const { values } = useFormikContext();\n    const { data: { kafkasource: { bootstrapServers, topics }, }, } = values;\n    return (React.createElement(FormSection, { title: \"KafkaSource\", extraMargin: true },\n        React.createElement(TextColumnField, { \"data-test-id\": \"kafkasource-bootstrapservers-field\", name: \"data.kafkasource.bootstrapServers\", label: \"BootstrapServers\", addLabel: \"Add Bootstrapservers\", helpText: \"The address of the Kafka broker\", required: true, disableDeleteRow: (bootstrapServers === null || bootstrapServers === void 0 ? void 0 : bootstrapServers.length) === 1 }),\n        React.createElement(TextColumnField, { \"data-test-id\": \"kafkasource-topics-field\", name: \"data.kafkasource.topics\", label: \"Topics\", addLabel: \"Add Topics\", helpText: \"Virtual groups across Kafka brokers\", required: true, disableDeleteRow: (topics === null || topics === void 0 ? void 0 : topics.length) === 1 }),\n        React.createElement(InputField, { \"data-test-id\": \"kafkasource-consumergroup-field\", type: TextInputTypes.text, name: \"data.kafkasource.consumerGroup\", label: \"ConsumerGroup\", helpText: \"A group that tracks maximum offset consumed\", required: true }),\n        React.createElement(KafkaSourceNetSection, null),\n        React.createElement(ServiceAccountDropdown, { name: \"data.kafkasource.serviceAccountName\" })));\n};\nexport default KafkaSourceSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/KafkaSourceSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/KafkaSourceSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,WAAW,MAAM,gEAAgE,CAAC;AACzF,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,sBAAsB,MAAM,wCAAwC,CAAC;AAE5E,MAAM,kBAAkB,GAAa,GAAG,EAAE;IACxC,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IACpD,MAAM,EACJ,IAAI,EAAE,EACJ,WAAW,EAAE,EAAE,gBAAgB,EAAE,MAAM,EAAE,GAC1C,GACF,GAAG,MAAM,CAAC;IACX,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAC,aAAa,EAAC,WAAW;QAC1C,oBAAC,eAAe,oBACD,oCAAoC,EACjD,IAAI,EAAC,mCAAmC,EACxC,KAAK,EAAC,kBAAkB,EACxB,QAAQ,EAAC,sBAAsB,EAC/B,QAAQ,EAAC,iCAAiC,EAC1C,QAAQ,QACR,gBAAgB,EAAE,CAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,MAAK,CAAC,GAChD;QACF,oBAAC,eAAe,oBACD,0BAA0B,EACvC,IAAI,EAAC,yBAAyB,EAC9B,KAAK,EAAC,QAAQ,EACd,QAAQ,EAAC,YAAY,EACrB,QAAQ,EAAC,qCAAqC,EAC9C,QAAQ,QACR,gBAAgB,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,MAAK,CAAC,GACtC;QACF,oBAAC,UAAU,oBACI,iCAAiC,EAC9C,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,IAAI,EAAC,gCAAgC,EACrC,KAAK,EAAC,eAAe,EACrB,QAAQ,EAAC,6CAA6C,EACtD,QAAQ,SACR;QACF,oBAAC,qBAAqB,OAAG;QACzB,oBAAC,sBAAsB,IAAC,IAAI,EAAC,qCAAqC,GAAG,CACzD,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport KafkaSourceNetSection from './KafkaSourceNetSection';\nimport ServiceAccountDropdown from '../../dropdowns/ServiceAccountDropdown';\n\nconst KafkaSourceSection: React.FC = () => {\n  const { values } = useFormikContext<FormikValues>();\n  const {\n    data: {\n      kafkasource: { bootstrapServers, topics },\n    },\n  } = values;\n  return (\n    <FormSection title=\"KafkaSource\" extraMargin>\n      <TextColumnField\n        data-test-id=\"kafkasource-bootstrapservers-field\"\n        name=\"data.kafkasource.bootstrapServers\"\n        label=\"BootstrapServers\"\n        addLabel=\"Add Bootstrapservers\"\n        helpText=\"The address of the Kafka broker\"\n        required\n        disableDeleteRow={bootstrapServers?.length === 1}\n      />\n      <TextColumnField\n        data-test-id=\"kafkasource-topics-field\"\n        name=\"data.kafkasource.topics\"\n        label=\"Topics\"\n        addLabel=\"Add Topics\"\n        helpText=\"Virtual groups across Kafka brokers\"\n        required\n        disableDeleteRow={topics?.length === 1}\n      />\n      <InputField\n        data-test-id=\"kafkasource-consumergroup-field\"\n        type={TextInputTypes.text}\n        name=\"data.kafkasource.consumerGroup\"\n        label=\"ConsumerGroup\"\n        helpText=\"A group that tracks maximum offset consumed\"\n        required\n      />\n      <KafkaSourceNetSection />\n      <ServiceAccountDropdown name=\"data.kafkasource.serviceAccountName\" />\n    </FormSection>\n  );\n};\n\nexport default KafkaSourceSection;\n"]}]}