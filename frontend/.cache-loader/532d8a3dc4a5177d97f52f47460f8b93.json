{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-binding.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-binding.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Alert } from '@patternfly/react-core';\nimport { serviceCatalogStatus, referenceForModel } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { StatusWithIcon } from './utils/service-catalog-status';\nimport { ResourceEventStream } from './events';\nimport { Conditions } from './conditions';\nimport { ServiceCatalogParameters, ServiceCatalogParametersSecrets, } from './service-catalog-parameters';\nimport { ServiceBindingDescription } from './service-instance';\nimport { addSecretToWorkload } from './secret';\nimport { ServiceBindingModel, ServiceInstanceModel } from '../models';\nconst actionButtons = [addSecretToWorkload];\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ServiceBindingModel), ...common];\nconst secretLink = (obj) => serviceCatalogStatus(obj) === 'Ready' ? (React.createElement(ResourceLink, { kind: \"Secret\", name: obj.spec.secretName, title: obj.spec.secretName, namespace: obj.metadata.namespace })) : ('-');\nconst ServiceBindingDetails = ({ obj: sb }) => {\n    const sbParameters = _.get(sb, 'status.externalProperties.parameters', {});\n    const notReady = serviceCatalogStatus(sb) === 'Not Ready' ? true : false;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            notReady && (React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: \"warning\", title: \"This binding is not ready yet\" }, \"Once it is ready, bind its secret to a workload.\")),\n            React.createElement(ServiceBindingDescription, { instanceName: sb.spec.instanceRef.name, className: \"co-m-pane__explanation\" }),\n            React.createElement(SectionHeading, { text: \"Service Binding Details\" }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(ResourceSummary, { resource: sb })),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", null, \"Service Instance\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(ResourceLink, { kind: referenceForModel(ServiceInstanceModel), name: sb.spec.instanceRef.name, namespace: sb.metadata.namespace })),\n                        React.createElement(\"dt\", null, \"Secret\"),\n                        React.createElement(\"dd\", null, secretLink(sb)),\n                        React.createElement(\"dt\", null, \"Status\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(StatusWithIcon, { obj: sb })))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: sb.status.conditions })),\n        !_.isEmpty(sb.spec.parametersFrom) && React.createElement(ServiceCatalogParametersSecrets, { obj: sb }),\n        !_.isEmpty(sbParameters) && React.createElement(ServiceCatalogParameters, { parameters: sbParameters })));\n};\nconst pages = [\n    navFactory.details(ServiceBindingDetails),\n    navFactory.editYaml(),\n    navFactory.events(ResourceEventStream),\n];\nexport const ServiceBindingDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: referenceForModel(ServiceBindingModel), buttonActions: actionButtons, menuActions: menuActions, pages: pages })));\nServiceBindingDetailsPage.displayName = 'ServiceBindingDetailsPage';\nconst tableColumnClasses = [\n    '',\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-sm'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    Kebab.columnClass,\n];\nconst ServiceBindingsTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Status',\n            sortFunc: 'serviceCatalogStatus',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Service Instance',\n            sortField: 'spec.instanceRef.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Secret',\n            sortField: 'spec.secretName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nServiceBindingsTableHeader.displayName = 'ServiceBindingsTableHeader';\nconst ServiceBindingsTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: referenceForModel(ServiceBindingModel), name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[2], 'co-break-word') },\n            React.createElement(StatusWithIcon, { obj: obj })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[3], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: referenceForModel(ServiceInstanceModel), name: obj.spec.instanceRef.name, title: obj.spec.instanceRef.name, namespace: obj.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[4], 'co-break-word') }, secretLink(obj)),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: referenceForModel(ServiceBindingModel), resource: obj }))));\n};\nconst ServiceBindingsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Service Bindings\", Header: ServiceBindingsTableHeader, Row: ServiceBindingsTableRow, virtualize: true })));\nServiceBindingsList.displayName = 'ServiceBindingsList';\nexport const ServiceBindingsPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { namespace: props.namespace || _.get(props.match, 'params.ns'), showTitle: false, kind: referenceForModel(ServiceBindingModel), ListComponent: ServiceBindingsList })));\nServiceBindingsPage.displayName = 'ServiceBindingsListPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-binding.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-binding.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { match } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { Alert } from '@patternfly/react-core';\n\nimport { serviceCatalogStatus, referenceForModel, K8sResourceKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { StatusWithIcon } from './utils/service-catalog-status';\nimport { ResourceEventStream } from './events';\nimport { Conditions } from './conditions';\nimport {\n  ServiceCatalogParameters,\n  ServiceCatalogParametersSecrets,\n} from './service-catalog-parameters';\nimport { ServiceBindingDescription } from './service-instance';\nimport { addSecretToWorkload } from './secret';\nimport { ServiceBindingModel, ServiceInstanceModel } from '../models';\n\nconst actionButtons = [addSecretToWorkload];\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ServiceBindingModel), ...common];\n\nconst secretLink = (obj) =>\n  serviceCatalogStatus(obj) === 'Ready' ? (\n    <ResourceLink\n      kind=\"Secret\"\n      name={obj.spec.secretName}\n      title={obj.spec.secretName}\n      namespace={obj.metadata.namespace}\n    />\n  ) : (\n    '-'\n  );\n\nconst ServiceBindingDetails: React.SFC<ServiceBindingDetailsProps> = ({ obj: sb }) => {\n  const sbParameters = _.get(sb, 'status.externalProperties.parameters', {});\n  const notReady = serviceCatalogStatus(sb) === 'Not Ready' ? true : false;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        {notReady && (\n          <Alert\n            isInline\n            className=\"co-alert\"\n            variant=\"warning\"\n            title=\"This binding is not ready yet\"\n          >\n            Once it is ready, bind its secret to a workload.\n          </Alert>\n        )}\n        <ServiceBindingDescription\n          instanceName={sb.spec.instanceRef.name}\n          className=\"co-m-pane__explanation\"\n        />\n        <SectionHeading text=\"Service Binding Details\" />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={sb} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Service Instance</dt>\n              <dd>\n                <ResourceLink\n                  kind={referenceForModel(ServiceInstanceModel)}\n                  name={sb.spec.instanceRef.name}\n                  namespace={sb.metadata.namespace}\n                />\n              </dd>\n              <dt>Secret</dt>\n              <dd>{secretLink(sb)}</dd>\n              <dt>Status</dt>\n              <dd>\n                <StatusWithIcon obj={sb} />\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={sb.status.conditions} />\n      </div>\n      {!_.isEmpty(sb.spec.parametersFrom) && <ServiceCatalogParametersSecrets obj={sb} />}\n      {!_.isEmpty(sbParameters) && <ServiceCatalogParameters parameters={sbParameters} />}\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(ServiceBindingDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\nexport const ServiceBindingDetailsPage: React.SFC<ServiceBindingDetailsPageProps> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={referenceForModel(ServiceBindingModel)}\n    buttonActions={actionButtons}\n    menuActions={menuActions}\n    pages={pages}\n  />\n);\nServiceBindingDetailsPage.displayName = 'ServiceBindingDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ServiceBindingsTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'serviceCatalogStatus',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Service Instance',\n      sortField: 'spec.instanceRef.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Secret',\n      sortField: 'spec.secretName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nServiceBindingsTableHeader.displayName = 'ServiceBindingsTableHeader';\n\nconst ServiceBindingsTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(ServiceBindingModel)}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink\n          kind=\"Namespace\"\n          name={obj.metadata.namespace}\n          title={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <StatusWithIcon obj={obj} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <ResourceLink\n          kind={referenceForModel(ServiceInstanceModel)}\n          name={obj.spec.instanceRef.name}\n          title={obj.spec.instanceRef.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {secretLink(obj)}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={referenceForModel(ServiceBindingModel)}\n          resource={obj}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ServiceBindingsList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Service Bindings\"\n    Header={ServiceBindingsTableHeader}\n    Row={ServiceBindingsTableRow}\n    virtualize\n  />\n);\nServiceBindingsList.displayName = 'ServiceBindingsList';\n\nexport const ServiceBindingsPage: React.SFC<ServiceBindingsPageProps> = (props) => (\n  <ListPage\n    {...props}\n    namespace={props.namespace || _.get(props.match, 'params.ns')}\n    showTitle={false}\n    kind={referenceForModel(ServiceBindingModel)}\n    ListComponent={ServiceBindingsList}\n  />\n);\n\nexport type ServiceBindingDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ServiceBindingsPageProps = {\n  autoFocus?: boolean;\n  canCreate?: boolean;\n  createHandler?: any;\n  filters?: any;\n  namespace?: string;\n  match?: match<{ ns?: string }>;\n  selector?: any;\n  showTitle?: boolean;\n};\n\nexport type ServiceBindingDetailsPageProps = {\n  match: any;\n};\n\nServiceBindingsPage.displayName = 'ServiceBindingsListPage';\n"]}]}