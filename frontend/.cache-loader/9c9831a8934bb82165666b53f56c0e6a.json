{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/StatusCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/StatusCard.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport AlertItem from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '@console/internal/components/monitoring';\nimport { getBareMetalHostStatus } from '../../../status/host-status';\nimport { HOST_SUCCESS_STATES, HOST_ERROR_STATES, HOST_PROGRESS_STATES, HOST_HARDWARE_ERROR_STATES, } from '../../../constants';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\nconst getHostHealthState = (obj) => {\n    const { status, title } = getBareMetalHostStatus(obj);\n    let state = HealthState.UNKNOWN;\n    if (HOST_SUCCESS_STATES.includes(status)) {\n        state = HealthState.OK;\n    }\n    if (HOST_ERROR_STATES.includes(status)) {\n        state = HealthState.ERROR;\n    }\n    if (HOST_PROGRESS_STATES.includes(status)) {\n        state = HealthState.PROGRESS;\n    }\n    return {\n        title,\n        state,\n    };\n};\nconst getHostHardwareHealthState = (obj) => {\n    const { status, title } = getBareMetalHostStatus(obj);\n    return HOST_HARDWARE_ERROR_STATES.includes(status)\n        ? {\n            state: HealthState.ERROR,\n            title,\n        }\n        : {\n            title: '',\n            state: HealthState.OK,\n        };\n};\nconst filterAlerts = (alerts) => alerts.filter((alert) => _.get(alert, 'labels.hwalert'));\nconst HealthCard = ({ watchAlerts, stopWatchAlerts, notificationAlerts, }) => {\n    const { obj } = React.useContext(BareMetalHostDashboardContext);\n    React.useEffect(() => {\n        watchAlerts();\n        return () => stopWatchAlerts();\n    }, [watchAlerts, stopWatchAlerts]);\n    const health = getHostHealthState(obj);\n    const hwHealth = getHostHardwareHealthState(obj);\n    const { data, loaded, loadError } = notificationAlerts || {};\n    const alerts = React.useMemo(() => filterAlerts(data), [data]);\n    return (React.createElement(DashboardCard, { gradient: true },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Status\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(HealthBody, null,\n                React.createElement(Gallery, { className: \"co-overview-status__health\", gutter: \"md\" },\n                    React.createElement(GalleryItem, null,\n                        React.createElement(HealthItem, { title: \"Status\", state: health.state, details: health.title })),\n                    React.createElement(GalleryItem, null,\n                        React.createElement(HealthItem, { title: \"Hardware\", state: hwHealth.state, details: hwHealth.title })))),\n            React.createElement(AlertsBody, { error: !_.isEmpty(loadError) }, loaded && alerts.length !== 0\n                ? alerts.map((alert) => (React.createElement(AlertItem, { key: alertURL(alert, alert.rule.id), alert: alert })))\n                : null))));\n};\nexport default withDashboardResources(HealthCard);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/StatusCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/StatusCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport {\n  DashboardItemProps,\n  withDashboardResources,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport AlertItem from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { Alert, alertURL } from '@console/internal/components/monitoring';\nimport { getBareMetalHostStatus } from '../../../status/host-status';\nimport {\n  HOST_SUCCESS_STATES,\n  HOST_ERROR_STATES,\n  HOST_PROGRESS_STATES,\n  HOST_HARDWARE_ERROR_STATES,\n} from '../../../constants';\nimport { BareMetalHostKind } from '../../../types';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\n\nconst getHostHealthState = (obj: BareMetalHostKind): HostHealthState => {\n  const { status, title } = getBareMetalHostStatus(obj);\n  let state: HealthState = HealthState.UNKNOWN;\n\n  if (HOST_SUCCESS_STATES.includes(status)) {\n    state = HealthState.OK;\n  }\n\n  if (HOST_ERROR_STATES.includes(status)) {\n    state = HealthState.ERROR;\n  }\n\n  if (HOST_PROGRESS_STATES.includes(status)) {\n    state = HealthState.PROGRESS;\n  }\n\n  return {\n    title,\n    state,\n  };\n};\n\nconst getHostHardwareHealthState = (obj): HostHealthState => {\n  const { status, title } = getBareMetalHostStatus(obj);\n\n  return HOST_HARDWARE_ERROR_STATES.includes(status)\n    ? {\n        state: HealthState.ERROR,\n        title,\n      }\n    : {\n        title: '',\n        state: HealthState.OK,\n      };\n};\n\nconst filterAlerts = (alerts: Alert[]): Alert[] =>\n  alerts.filter((alert) => _.get(alert, 'labels.hwalert'));\n\nconst HealthCard: React.FC<HealthCardProps> = ({\n  watchAlerts,\n  stopWatchAlerts,\n  notificationAlerts,\n}) => {\n  const { obj } = React.useContext(BareMetalHostDashboardContext);\n\n  React.useEffect(() => {\n    watchAlerts();\n    return () => stopWatchAlerts();\n  }, [watchAlerts, stopWatchAlerts]);\n\n  const health = getHostHealthState(obj);\n  const hwHealth = getHostHardwareHealthState(obj);\n\n  const { data, loaded, loadError } = notificationAlerts || {};\n  const alerts = React.useMemo(() => filterAlerts(data), [data]);\n\n  return (\n    <DashboardCard gradient>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Status</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <HealthBody>\n          <Gallery className=\"co-overview-status__health\" gutter=\"md\">\n            <GalleryItem>\n              <HealthItem title=\"Status\" state={health.state} details={health.title} />\n            </GalleryItem>\n            <GalleryItem>\n              <HealthItem title=\"Hardware\" state={hwHealth.state} details={hwHealth.title} />\n            </GalleryItem>\n          </Gallery>\n        </HealthBody>\n        <AlertsBody error={!_.isEmpty(loadError)}>\n          {loaded && alerts.length !== 0\n            ? alerts.map((alert) => (\n                <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n              ))\n            : null}\n        </AlertsBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default withDashboardResources(HealthCard);\n\ntype HostHealthState = {\n  state: HealthState;\n  title: string;\n};\n\ntype HealthCardProps = DashboardItemProps & {\n  obj: BareMetalHostKind;\n};\n"]}]}