{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/graphActions.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/graphActions.ts","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { ServiceModel, addEventSource } from '@console/knative-plugin';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { addResourceMenu, addResourceMenuWithoutCatalog } from '../../../actions/add-resources';\nexport const graphActions = (graphData, connectorSource) => {\n    var _a, _b;\n    let resourceMenu = connectorSource ? addResourceMenuWithoutCatalog : addResourceMenu;\n    const isKnativeService = ((_b = (_a = connectorSource === null || connectorSource === void 0 ? void 0 : connectorSource.getData()) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.kind) === referenceForModel(ServiceModel);\n    if (isKnativeService && graphData.eventSourceEnabled) {\n        resourceMenu = [...addResourceMenuWithoutCatalog, addEventSource];\n    }\n    return _.reduce(resourceMenu, (menuItems, menuItem) => {\n        var _a, _b;\n        const item = menuItem(null, graphData.namespace, false, (_b = (_a = connectorSource === null || connectorSource === void 0 ? void 0 : connectorSource.getData()) === null || _a === void 0 ? void 0 : _a.resources) === null || _b === void 0 ? void 0 : _b.obj, graphData.createResourceAccess);\n        if (item) {\n            menuItems.push(item);\n        }\n        return menuItems;\n    }, []);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/graphActions.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/graphActions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,6BAA6B,EAAE,MAAM,gCAAgC,CAAC;AAGhG,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,SAAoB,EAAE,eAAsB,EAAE,EAAE;;IAC3E,IAAI,YAAY,GAAG,eAAe,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,eAAe,CAAC;IACrF,MAAM,gBAAgB,GACpB,aAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,OAAO,4CAAI,IAAI,0CAAE,IAAI,MAAK,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAC7E,IAAI,gBAAgB,IAAI,SAAS,CAAC,kBAAkB,EAAE;QACpD,YAAY,GAAG,CAAC,GAAG,6BAA6B,EAAE,cAAc,CAAC,CAAC;KACnE;IACD,OAAO,CAAC,CAAC,MAAM,CACb,YAAY,EACZ,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE;;QACtB,MAAM,IAAI,GAAG,QAAQ,CACnB,IAAI,EACJ,SAAS,CAAC,SAAS,EACnB,KAAK,cACL,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,OAAO,4CAAI,SAAS,0CAAE,GAAG,EAC1C,SAAS,CAAC,oBAAoB,CAC/B,CAAC;QACF,IAAI,IAAI,EAAE;YACR,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC,EACD,EAAE,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { Node } from '@console/topology';\nimport { ServiceModel, addEventSource } from '@console/knative-plugin';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { addResourceMenu, addResourceMenuWithoutCatalog } from '../../../actions/add-resources';\nimport { GraphData } from '../topology-types';\n\nexport const graphActions = (graphData: GraphData, connectorSource?: Node) => {\n  let resourceMenu = connectorSource ? addResourceMenuWithoutCatalog : addResourceMenu;\n  const isKnativeService =\n    connectorSource?.getData()?.data?.kind === referenceForModel(ServiceModel);\n  if (isKnativeService && graphData.eventSourceEnabled) {\n    resourceMenu = [...addResourceMenuWithoutCatalog, addEventSource];\n  }\n  return _.reduce(\n    resourceMenu,\n    (menuItems, menuItem) => {\n      const item = menuItem(\n        null,\n        graphData.namespace,\n        false,\n        connectorSource?.getData()?.resources?.obj,\n        graphData.createResourceAccess,\n      );\n      if (item) {\n        menuItems.push(item);\n      }\n      return menuItems;\n    },\n    [],\n  );\n};\n"]}]}