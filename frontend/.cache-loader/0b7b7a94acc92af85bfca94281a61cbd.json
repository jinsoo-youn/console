{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostDetails.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostDetails.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RebootingIcon } from '@patternfly/react-icons';\nimport { referenceForModel, } from '@console/internal/module/k8s';\nimport { SectionHeading, Timestamp, humanizeDecimalBytes, ResourceLink, } from '@console/internal/components/utils';\nimport { NodeModel } from '@console/internal/models';\nimport { getName, getMachineNode, getMachineNodeName, getNamespace, getMachineRole, StatusIconAndText, DetailPropertyList, DetailPropertyListItem, } from '@console/shared';\nimport { getHostStatus } from '../../status/host-status';\nimport { getHostNICs, getHostDescription, getHostBMCAddress, getHostCPU, getHostRAMMiB, getHostTotalStorageCapacity, getHostMachineName, getHostPowerStatus, getHostVendorInfo, getHostMachine, findNodeMaintenance, getHostBios, getHostProvisioningState, getHostBootMACAddress, isHostScheduledForRestart, } from '../../selectors';\nimport { HOST_REGISTERING_STATES } from '../../constants/bare-metal-host';\nimport MachineLink from './MachineLink';\nimport BareMetalHostPowerStatusIcon from './BareMetalHostPowerStatusIcon';\nimport BareMetalHostStatus from './BareMetalHostStatus';\nimport { HOST_SCHEDULED_FOR_RESTART } from './BareMetalHostSecondaryStatus';\nconst BareMetalHostDetails = ({ obj: host, machines, nodes, nodeMaintenances, }) => {\n    const { creationTimestamp } = host.metadata;\n    const namespace = getNamespace(host);\n    const nics = getHostNICs(host);\n    const ips = nics.map((nic) => nic.ip).join(', ');\n    const machineName = getHostMachineName(host);\n    const machine = getHostMachine(host, machines);\n    const nodeName = getMachineNodeName(machine);\n    const node = getMachineNode(machine, nodes);\n    const role = getMachineRole(machine);\n    const RAMGB = humanizeDecimalBytes(getHostRAMMiB(host) * 2 ** 20).string;\n    const totalStorageCapacity = humanizeDecimalBytes(getHostTotalStorageCapacity(host)).string;\n    const description = getHostDescription(host);\n    const powerStatus = getHostPowerStatus(host);\n    const provisioningState = getHostProvisioningState(host);\n    const { count: CPUCount, model: CPUModel } = getHostCPU(host);\n    const { manufacturer, productName, serialNumber } = getHostVendorInfo(host);\n    const bios = getHostBios(host);\n    const nodeMaintenance = findNodeMaintenance(nodeMaintenances, nodeName);\n    const status = getHostStatus({ host, machine, node, nodeMaintenance });\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Bare Metal Host Details\" }),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-xs-12 col-sm-6\", id: \"name-description-column\" },\n                React.createElement(\"dl\", null,\n                    React.createElement(\"dt\", null, \"Name\"),\n                    React.createElement(\"dd\", null, getName(host)),\n                    description && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Description\"),\n                        React.createElement(\"dd\", null, description))),\n                    React.createElement(\"dt\", null, \"Host Addresses\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(DetailPropertyList, null,\n                            React.createElement(DetailPropertyListItem, { title: \"Management\" }, getHostBMCAddress(host)),\n                            React.createElement(DetailPropertyListItem, { title: \"NICs\" }, ips),\n                            React.createElement(DetailPropertyListItem, { title: \"Boot Interface MAC\" }, getHostBootMACAddress(host)))),\n                    machineName && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Machine\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(MachineLink, { host: host })))),\n                    nodeName && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Node\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(ResourceLink, { kind: referenceForModel(NodeModel), name: nodeName, namespace: namespace, title: nodeName })))),\n                    React.createElement(\"dt\", null, \"Created at\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(Timestamp, { timestamp: creationTimestamp })))),\n            React.createElement(\"div\", { className: \"col-xs-12 col-sm-6\" },\n                React.createElement(\"dl\", null,\n                    React.createElement(\"dt\", null, \"Status\"),\n                    React.createElement(\"dd\", null,\n                        React.createElement(BareMetalHostStatus, Object.assign({}, status, { nodeMaintenance: nodeMaintenance, host: host }))),\n                    !HOST_REGISTERING_STATES.includes(provisioningState) && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Power Status\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(StatusIconAndText, { title: powerStatus, icon: React.createElement(BareMetalHostPowerStatusIcon, { powerStatus: powerStatus }) }),\n                            isHostScheduledForRestart(host) && (React.createElement(StatusIconAndText, { title: HOST_SCHEDULED_FOR_RESTART, icon: React.createElement(RebootingIcon, null) }))))),\n                    role && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Role\"),\n                        React.createElement(\"dd\", null, role))),\n                    (manufacturer || productName) && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Model\"),\n                        React.createElement(\"dd\", null, _.filter([manufacturer, productName]).join(', ')))),\n                    bios && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Bios\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(DetailPropertyList, null,\n                                React.createElement(DetailPropertyListItem, { title: \"Version\" }, bios.version),\n                                React.createElement(DetailPropertyListItem, { title: \"Vendor\" }, bios.vendor),\n                                React.createElement(DetailPropertyListItem, { title: \"Date\" }, bios.date))))),\n                    serialNumber && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Serial Number\"),\n                        React.createElement(\"dd\", null, serialNumber))),\n                    _.get(host, 'status.hardware') && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, \"Hardware\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(DetailPropertyList, null,\n                                React.createElement(DetailPropertyListItem, { title: \"CPU\" },\n                                    CPUCount,\n                                    \"x \",\n                                    CPUModel),\n                                React.createElement(DetailPropertyListItem, { title: \"RAM\" }, RAMGB),\n                                React.createElement(DetailPropertyListItem, { title: \"Storage\" }, totalStorageCapacity))))))))));\n};\nexport default BareMetalHostDetails;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostDetails.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostDetails.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RebootingIcon } from '@patternfly/react-icons';\nimport {\n  referenceForModel,\n  K8sResourceKind,\n  MachineKind,\n  NodeKind,\n} from '@console/internal/module/k8s';\nimport {\n  SectionHeading,\n  Timestamp,\n  humanizeDecimalBytes,\n  ResourceLink,\n} from '@console/internal/components/utils';\nimport { NodeModel } from '@console/internal/models';\nimport {\n  getName,\n  getMachineNode,\n  getMachineNodeName,\n  getNamespace,\n  getMachineRole,\n  StatusIconAndText,\n  DetailPropertyList,\n  DetailPropertyListItem,\n} from '@console/shared';\nimport { getHostStatus } from '../../status/host-status';\nimport {\n  getHostNICs,\n  getHostDescription,\n  getHostBMCAddress,\n  getHostCPU,\n  getHostRAMMiB,\n  getHostTotalStorageCapacity,\n  getHostMachineName,\n  getHostPowerStatus,\n  getHostVendorInfo,\n  getHostMachine,\n  findNodeMaintenance,\n  getHostBios,\n  getHostProvisioningState,\n  getHostBootMACAddress,\n  isHostScheduledForRestart,\n} from '../../selectors';\nimport { BareMetalHostKind } from '../../types';\nimport { HOST_REGISTERING_STATES } from '../../constants/bare-metal-host';\nimport MachineLink from './MachineLink';\nimport BareMetalHostPowerStatusIcon from './BareMetalHostPowerStatusIcon';\nimport BareMetalHostStatus from './BareMetalHostStatus';\nimport { HOST_SCHEDULED_FOR_RESTART } from './BareMetalHostSecondaryStatus';\n\ntype BareMetalHostDetailsProps = {\n  obj: BareMetalHostKind;\n  machines: MachineKind[];\n  nodes: NodeKind[];\n  nodeMaintenances: K8sResourceKind[];\n};\n\nconst BareMetalHostDetails: React.FC<BareMetalHostDetailsProps> = ({\n  obj: host,\n  machines,\n  nodes,\n  nodeMaintenances,\n}) => {\n  const { creationTimestamp } = host.metadata;\n  const namespace = getNamespace(host);\n  const nics = getHostNICs(host);\n  const ips = nics.map((nic) => nic.ip).join(', ');\n  const machineName = getHostMachineName(host);\n  const machine = getHostMachine(host, machines);\n  const nodeName = getMachineNodeName(machine);\n  const node = getMachineNode(machine, nodes);\n  const role = getMachineRole(machine);\n  const RAMGB = humanizeDecimalBytes(getHostRAMMiB(host) * 2 ** 20).string;\n  const totalStorageCapacity = humanizeDecimalBytes(getHostTotalStorageCapacity(host)).string;\n  const description = getHostDescription(host);\n  const powerStatus = getHostPowerStatus(host);\n  const provisioningState = getHostProvisioningState(host);\n  const { count: CPUCount, model: CPUModel } = getHostCPU(host);\n  const { manufacturer, productName, serialNumber } = getHostVendorInfo(host);\n  const bios = getHostBios(host);\n\n  const nodeMaintenance = findNodeMaintenance(nodeMaintenances, nodeName);\n  const status = getHostStatus({ host, machine, node, nodeMaintenance });\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Bare Metal Host Details\" />\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-sm-6\" id=\"name-description-column\">\n          <dl>\n            <dt>Name</dt>\n            <dd>{getName(host)}</dd>\n            {description && (\n              <>\n                <dt>Description</dt>\n                <dd>{description}</dd>\n              </>\n            )}\n            <dt>Host Addresses</dt>\n            <dd>\n              <DetailPropertyList>\n                <DetailPropertyListItem title=\"Management\">\n                  {getHostBMCAddress(host)}\n                </DetailPropertyListItem>\n                <DetailPropertyListItem title=\"NICs\">{ips}</DetailPropertyListItem>\n                <DetailPropertyListItem title=\"Boot Interface MAC\">\n                  {getHostBootMACAddress(host)}\n                </DetailPropertyListItem>\n              </DetailPropertyList>\n            </dd>\n            {machineName && (\n              <>\n                <dt>Machine</dt>\n                <dd>\n                  <MachineLink host={host} />\n                </dd>\n              </>\n            )}\n            {nodeName && (\n              <>\n                <dt>Node</dt>\n                <dd>\n                  <ResourceLink\n                    kind={referenceForModel(NodeModel)}\n                    name={nodeName}\n                    namespace={namespace}\n                    title={nodeName}\n                  />\n                </dd>\n              </>\n            )}\n            <dt>Created at</dt>\n            <dd>\n              <Timestamp timestamp={creationTimestamp} />\n            </dd>\n          </dl>\n        </div>\n        <div className=\"col-xs-12 col-sm-6\">\n          <dl>\n            <dt>Status</dt>\n            <dd>\n              <BareMetalHostStatus {...status} nodeMaintenance={nodeMaintenance} host={host} />\n            </dd>\n            {/* power status is not available until host registration/inspection is finished */}\n            {!HOST_REGISTERING_STATES.includes(provisioningState) && (\n              <>\n                <dt>Power Status</dt>\n                <dd>\n                  <StatusIconAndText\n                    title={powerStatus}\n                    icon={<BareMetalHostPowerStatusIcon powerStatus={powerStatus} />}\n                  />\n                  {isHostScheduledForRestart(host) && (\n                    <StatusIconAndText\n                      title={HOST_SCHEDULED_FOR_RESTART}\n                      icon={<RebootingIcon />}\n                    />\n                  )}\n                </dd>\n              </>\n            )}\n            {role && (\n              <>\n                <dt>Role</dt>\n                <dd>{role}</dd>\n              </>\n            )}\n            {(manufacturer || productName) && (\n              <>\n                <dt>Model</dt>\n                <dd>{_.filter([manufacturer, productName]).join(', ')}</dd>\n              </>\n            )}\n            {bios && (\n              <>\n                <dt>Bios</dt>\n                <dd>\n                  <DetailPropertyList>\n                    <DetailPropertyListItem title=\"Version\">{bios.version}</DetailPropertyListItem>\n                    <DetailPropertyListItem title=\"Vendor\">{bios.vendor}</DetailPropertyListItem>\n                    <DetailPropertyListItem title=\"Date\">{bios.date}</DetailPropertyListItem>\n                  </DetailPropertyList>\n                </dd>\n              </>\n            )}\n            {serialNumber && (\n              <>\n                <dt>Serial Number</dt>\n                <dd>{serialNumber}</dd>\n              </>\n            )}\n            {_.get(host, 'status.hardware') && (\n              <>\n                <dt>Hardware</dt>\n                <dd>\n                  <DetailPropertyList>\n                    <DetailPropertyListItem title=\"CPU\">\n                      {CPUCount}x {CPUModel}\n                    </DetailPropertyListItem>\n                    <DetailPropertyListItem title=\"RAM\">{RAMGB}</DetailPropertyListItem>\n                    <DetailPropertyListItem title=\"Storage\">\n                      {totalStorageCapacity}\n                    </DetailPropertyListItem>\n                  </DetailPropertyList>\n                </dd>\n              </>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BareMetalHostDetails;\n"]}]}