{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/claim-modal.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/claim-modal.jsx","mtime":1617957501080},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { k8sUpdateClaim } from '../../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { PromiseComponent } from '../../utils';\nconst STATUS_PATH = '/status/phase';\nconst REASON_PATH = '/status/reason';\n// const STATUS_PATH = '/status';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/status';\nclass BaseClaimModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this.successSubmit = () => {\n            this.props.close();\n            location.reload();\n        };\n        this.onChangeApproval = e => {\n            this.setState({ status: e.target.value });\n        };\n        this.onChangeReason = e => {\n            this.setState({ reason: e.target.value });\n        };\n        this._submit = this._submit.bind(this);\n        this._cancel = props.cancel.bind(this);\n        let status = _.get(props.resource, props.path.split('/').slice(1));\n        if (status === 'Awaiting') {\n            status = 'Approved';\n        }\n        const reason = _.get(props.resource, props.reasonPath.split('/').slice(1));\n        this.state = Object.assign(this.state, {\n            status,\n            reason,\n        });\n    }\n    _submit(e) {\n        e.preventDefault();\n        const { kind, resource } = this.props;\n        const clusterClaim = resource.metadata.name;\n        const userName = resource.metadata.annotations.creator;\n        // resourceURL\n        const admit = this.state.status === 'Approved' ? true : false;\n        const reason = this.state.reason;\n        const nameSpace = resource.metadata.namespace;\n        const promise = k8sUpdateClaim(kind, clusterClaim, admit, reason, userName, nameSpace);\n        this.handlePromise(promise).then(this.successSubmit);\n    }\n    render() {\n        const { kind, resource, description, message } = this.props;\n        return (React.createElement(\"form\", { onSubmit: this._submit, name: \"form\", className: \"modal-content\" },\n            React.createElement(ModalTitle, null, \"Approval Processing\"),\n            React.createElement(ModalBody, null,\n                React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12\" }, message || '')),\n                React.createElement(\"div\", { className: \"row co-m=-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12\", style: { marginBottom: '15px' } },\n                        React.createElement(\"select\", { className: \"col-sm-12\", value: this.state.status, onChange: this.onChangeApproval },\n                            React.createElement(\"option\", { value: \"Approved\" }, \"Approved\"),\n                            React.createElement(\"option\", { value: \"Rejected\" }, \"Rejected\"))),\n                    React.createElement(\"div\", { className: \"col-sm-12\" },\n                        React.createElement(\"textarea\", { className: \"col-sm-12\", style: { height: '100px' }, onChange: this.onChangeReason, value: this.state.reason })),\n                    React.createElement(\"div\", { className: \"col-sm-12\" }, \"Please enter a reason for refusal.\"))),\n            React.createElement(ModalSubmitFooter, { errorMessage: this.state.errorMessage, inProgress: this.state.inProgress, submitText: \"Confirm\", cancel: this._cancel })));\n    }\n}\nexport const claimModal = createModalLauncher(props => React.createElement(BaseClaimModal, Object.assign({ path: STATUS_PATH, reasonPath: REASON_PATH }, props)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/claim-modal.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/claim-modal.jsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,cAAc,EAAqB,MAAM,qBAAqB,CAAC;AACxE,OAAO,EAAE,mBAAmB,EAAE,UAAU,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACpG,OAAO,EAAE,gBAAgB,EAA+B,MAAM,aAAa,CAAC;AAE5E,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,iCAAiC;AACjC,MAAM,sBAAsB,GAAG,gCAAgC,CAAC;AAEhE,MAAM,cAAe,SAAQ,gBAAgB;IAC3C,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAgCf,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;QA1CA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,MAAM,KAAK,UAAU,EAAE;YACzB,MAAM,GAAG,UAAU,CAAC;SACrB;QACD,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;YACrC,MAAM;YACN,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,CAAC;QACP,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC5C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;QAEvD,cAAc;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAE9D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEjC,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC;QAE9C,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC;IAeD,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5D,OAAO,CACL,8BAAM,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,eAAe;YACjE,oBAAC,UAAU,8BAAiC;YAC5C,oBAAC,SAAS;gBACR,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,6BAAK,SAAS,EAAC,WAAW,IAAE,OAAO,IAAI,EAAE,CAAO,CAC5C;gBACN,6BAAK,SAAS,EAAC,oBAAoB;oBACjC,6BAAK,SAAS,EAAC,WAAW,EAAC,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE;wBACxD,gCAAQ,SAAS,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB;4BACrF,gCAAQ,KAAK,EAAC,UAAU,eAAkB;4BAC1C,gCAAQ,KAAK,EAAC,UAAU,eAAkB,CACnC,CACL;oBACN,6BAAK,SAAS,EAAC,WAAW;wBACxB,kCAAU,SAAS,EAAC,WAAW,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAI,CACnH;oBACN,6BAAK,SAAS,EAAC,WAAW,yCAAyC,CAC/D,CACI;YACZ,oBAAC,iBAAiB,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,EAAC,SAAS,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,GAAI,CACrI,CACR,CAAC;IACJ,CAAC;CACF;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,mBAAmB,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAC,cAAc,kBAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,IAAM,KAAK,EAAI,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport { ValidTabGuard } from 'packages/kubevirt-plugin/src/components/create-vm-wizard/tabs/valid-tab-guard';\nimport * as React from 'react';\n\nimport { k8sUpdateClaim, referenceForModel } from '../../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { PromiseComponent, ResourceIcon, SelectorInput } from '../../utils';\n\nconst STATUS_PATH = '/status/phase';\nconst REASON_PATH = '/status/reason';\n// const STATUS_PATH = '/status';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/status';\n\nclass BaseClaimModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = props.cancel.bind(this);\n    let status = _.get(props.resource, props.path.split('/').slice(1));\n    if (status === 'Awaiting') {\n      status = 'Approved';\n    }\n    const reason = _.get(props.resource, props.reasonPath.split('/').slice(1));\n    this.state = Object.assign(this.state, {\n      status,\n      reason,\n    });\n  }\n\n  _submit(e) {\n    e.preventDefault();\n\n    const { kind, resource } = this.props;\n    const clusterClaim = resource.metadata.name;\n    const userName = resource.metadata.annotations.creator;\n\n    // resourceURL\n    const admit = this.state.status === 'Approved' ? true : false;\n\n    const reason = this.state.reason;\n\n    const nameSpace = resource.metadata.namespace;\n\n    const promise = k8sUpdateClaim(kind, clusterClaim, admit, reason, userName, nameSpace);\n    this.handlePromise(promise).then(this.successSubmit);\n  }\n\n  successSubmit = () => {\n    this.props.close();\n    location.reload();\n  };\n\n  onChangeApproval = e => {\n    this.setState({ status: e.target.value });\n  };\n\n  onChangeReason = e => {\n    this.setState({ reason: e.target.value });\n  };\n\n  render() {\n    const { kind, resource, description, message } = this.props;\n\n    return (\n      <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>Approval Processing</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{message || ''}</div>\n          </div>\n          <div className=\"row co-m=-form-row\">\n            <div className=\"col-sm-12\" style={{ marginBottom: '15px' }}>\n              <select className=\"col-sm-12\" value={this.state.status} onChange={this.onChangeApproval}>\n                <option value=\"Approved\">Approved</option>\n                <option value=\"Rejected\">Rejected</option>\n              </select>\n            </div>\n            <div className=\"col-sm-12\">\n              <textarea className=\"col-sm-12\" style={{ height: '100px' }} onChange={this.onChangeReason} value={this.state.reason} />\n            </div>\n            <div className=\"col-sm-12\">Please enter a reason for refusal.</div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter errorMessage={this.state.errorMessage} inProgress={this.state.inProgress} submitText=\"Confirm\" cancel={this._cancel} />\n      </form>\n    );\n  }\n}\n\nexport const claimModal = createModalLauncher(props => <BaseClaimModal path={STATUS_PATH} reasonPath={REASON_PATH} {...props} />);\n"]}]}