{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/utils.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["const HEXCH_REGEX = '[0-9A-Fa-f]';\nexport const MAC_REGEX_COLON_DELIMITER = new RegExp(`^((${HEXCH_REGEX}{2}[:]){19}${HEXCH_REGEX}{2})$|` + // 01:23:45:67:89:ab:cd:ef:00:00:01:23:45:67:89:ab:cd:ef:00:00\n    `^((${HEXCH_REGEX}{2}[:]){7}${HEXCH_REGEX}{2})$|` + // 01:23:45:67:89:ab:cd:ef\n    `^((${HEXCH_REGEX}{2}[:]){5}${HEXCH_REGEX}{2})$`);\nexport const MAC_REGEX_DASH_DELIMITER = new RegExp(`^((${HEXCH_REGEX}{2}[-]){19}${HEXCH_REGEX}{2})$|` + // 01-23-45-67-89-ab-cd-ef-00-00-01-23-45-67-89-ab-cd-ef-00-00\n    `^((${HEXCH_REGEX}{2}[-]){7}${HEXCH_REGEX}{2})$|` + // 01-23-45-67-89-ab-cd-ef\n    `^((${HEXCH_REGEX}{2}[-]){5}${HEXCH_REGEX}{2})$`);\nexport const MAC_REGEX_PERIOD_DELIMITER = new RegExp(`^((${HEXCH_REGEX}{4}.){9}${HEXCH_REGEX}{4})$|` + // 0123.4567.89ab.cdef.0000.0123.4567.89ab.cdef.0000\n    `^((${HEXCH_REGEX}{4}.){3}${HEXCH_REGEX}{4})$|` + // 0123.4567.89ab.cdef\n    `^((${HEXCH_REGEX}{4}.){2}${HEXCH_REGEX}{4})$`);\n// Validates that the provided MAC address meets one of following formats supported by the golang ParseMAC function:\n// IEEE 802 MAC-48, EUI-48, EUI-64, or a 20-octet IP over InfiniBand link-layer address\n// https://golang.org/pkg/net/#ParseMAC\nexport const MAC_REGEX = new RegExp(`^(${MAC_REGEX_COLON_DELIMITER.source}|${MAC_REGEX_DASH_DELIMITER.source}|${MAC_REGEX_PERIOD_DELIMITER.source})$`);\nexport const IPV6_ADDRESS = new RegExp(/^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/);\nexport const URL_REGEX = new RegExp(/^([a-z][a-z0-9+\\-.]*:(\\/\\/([a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]+|\\[[a-f0-9:.]+\\]|\\[v[a-f0-9][a-z0-9\\-._~%!$&'()*+,;=:]+\\])(:[0-9]+)?(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/?[a-z0-9\\-._~%!$&'()*+,;=:@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?)?)|([a-z0-9\\-._~%!$&'()*+,;=@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)+\\/?))(\\?[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?(#[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?$/i);\nexport const BMC_ADDRESS_REGEX = new RegExp(/^((ipmi|idrac|idrac\\+http|idrac-virtualmedia|irmc|redfish|redfish\\+http|redfish-virtualmedia|ilo5-virtualmedia|https?|ftp):(\\/\\/([a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]+|\\[[a-f0-9:.]+\\]|\\[v[a-f0-9][a-z0-9\\-._~%!$&'()*+,;=:]+\\])(:[0-9]+)?(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/?[a-z0-9\\-._~%!$&'()*+,;=:@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?)?)|([a-z0-9\\-._~%!$&'()*+,;=@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)+\\/?))(\\?[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?(#[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?$/i);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/utils.ts"],"names":[],"mappings":"AAAA,MAAM,WAAW,GAAG,aAAa,CAAC;AAClC,MAAM,CAAC,MAAM,yBAAyB,GAAG,IAAI,MAAM,CACjD,MAAM,WAAW,cAAc,WAAW,QAAQ,GAAG,8DAA8D;IACnH,MAAM,WAAW,aAAa,WAAW,QAAQ,GAAG,0BAA0B;IAC5E,MAAM,WAAW,aAAa,WAAW,OAAO,CACnD,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,MAAM,CAChD,MAAM,WAAW,cAAc,WAAW,QAAQ,GAAG,8DAA8D;IACnH,MAAM,WAAW,aAAa,WAAW,QAAQ,GAAG,0BAA0B;IAC5E,MAAM,WAAW,aAAa,WAAW,OAAO,CACnD,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,MAAM,CAClD,MAAM,WAAW,WAAW,WAAW,QAAQ,GAAG,oDAAoD;IACtG,MAAM,WAAW,WAAW,WAAW,QAAQ,GAAG,sBAAsB;IACtE,MAAM,WAAW,WAAW,WAAW,OAAO,CACjD,CAAC;AAEF,oHAAoH;AACpH,uFAAuF;AACvF,uCAAuC;AACvC,MAAM,CAAC,MAAM,SAAS,GAAG,IAAI,MAAM,CACjC,KAAK,yBAAyB,CAAC,MAAM,IAAI,wBAAwB,CAAC,MAAM,IAAI,0BAA0B,CAAC,MAAM,IAAI,CAClH,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,MAAM,CACpC,yjCAAyjC,CAC1jC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,IAAI,MAAM,CACjC,yaAAya,CAC1a,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,MAAM,CACzC,+gBAA+gB,CAChhB,CAAC","sourcesContent":["const HEXCH_REGEX = '[0-9A-Fa-f]';\nexport const MAC_REGEX_COLON_DELIMITER = new RegExp(\n  `^((${HEXCH_REGEX}{2}[:]){19}${HEXCH_REGEX}{2})$|` + // 01:23:45:67:89:ab:cd:ef:00:00:01:23:45:67:89:ab:cd:ef:00:00\n  `^((${HEXCH_REGEX}{2}[:]){7}${HEXCH_REGEX}{2})$|` + // 01:23:45:67:89:ab:cd:ef\n    `^((${HEXCH_REGEX}{2}[:]){5}${HEXCH_REGEX}{2})$`, // 01:23:45:67:89:ab\n);\n\nexport const MAC_REGEX_DASH_DELIMITER = new RegExp(\n  `^((${HEXCH_REGEX}{2}[-]){19}${HEXCH_REGEX}{2})$|` + // 01-23-45-67-89-ab-cd-ef-00-00-01-23-45-67-89-ab-cd-ef-00-00\n  `^((${HEXCH_REGEX}{2}[-]){7}${HEXCH_REGEX}{2})$|` + // 01-23-45-67-89-ab-cd-ef\n    `^((${HEXCH_REGEX}{2}[-]){5}${HEXCH_REGEX}{2})$`, // 01-23-45-67-89-ab\n);\n\nexport const MAC_REGEX_PERIOD_DELIMITER = new RegExp(\n  `^((${HEXCH_REGEX}{4}.){9}${HEXCH_REGEX}{4})$|` + // 0123.4567.89ab.cdef.0000.0123.4567.89ab.cdef.0000\n  `^((${HEXCH_REGEX}{4}.){3}${HEXCH_REGEX}{4})$|` + // 0123.4567.89ab.cdef\n    `^((${HEXCH_REGEX}{4}.){2}${HEXCH_REGEX}{4})$`, // 0123.4567.89ab\n);\n\n// Validates that the provided MAC address meets one of following formats supported by the golang ParseMAC function:\n// IEEE 802 MAC-48, EUI-48, EUI-64, or a 20-octet IP over InfiniBand link-layer address\n// https://golang.org/pkg/net/#ParseMAC\nexport const MAC_REGEX = new RegExp(\n  `^(${MAC_REGEX_COLON_DELIMITER.source}|${MAC_REGEX_DASH_DELIMITER.source}|${MAC_REGEX_PERIOD_DELIMITER.source})$`,\n);\n\nexport const IPV6_ADDRESS = new RegExp(\n  /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n);\n\nexport const URL_REGEX = new RegExp(\n  /^([a-z][a-z0-9+\\-.]*:(\\/\\/([a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]+|\\[[a-f0-9:.]+\\]|\\[v[a-f0-9][a-z0-9\\-._~%!$&'()*+,;=:]+\\])(:[0-9]+)?(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/?[a-z0-9\\-._~%!$&'()*+,;=:@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?)?)|([a-z0-9\\-._~%!$&'()*+,;=@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)+\\/?))(\\?[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?(#[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?$/i,\n);\n\nexport const BMC_ADDRESS_REGEX = new RegExp(\n  /^((ipmi|idrac|idrac\\+http|idrac-virtualmedia|irmc|redfish|redfish\\+http|redfish-virtualmedia|ilo5-virtualmedia|https?|ftp):(\\/\\/([a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]+|\\[[a-f0-9:.]+\\]|\\[v[a-f0-9][a-z0-9\\-._~%!$&'()*+,;=:]+\\])(:[0-9]+)?(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/?[a-z0-9\\-._~%!$&'()*+,;=:@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?)?)|([a-z0-9\\-._~%!$&'()*+,;=@]+(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)*\\/?|(\\/[a-z0-9\\-._~%!$&'()*+,;=:@]+)+\\/?))(\\?[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?(#[a-z0-9\\-._~%!$&'()*+,;=:@/?]*)?$/i,\n);\n"]}]}