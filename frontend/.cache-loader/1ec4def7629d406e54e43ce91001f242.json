{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/name-value-editor.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/name-value-editor.jsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { DRAGGABLE_TYPE } from './draggable-item-types';\nimport { Button } from '@patternfly/react-core';\nimport { PficonDragdropIcon, MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { NameValueEditorPair, EnvFromPair, EnvType } from './index';\nimport { ValueFromPair } from './value-from-pair';\nimport withDragDropContext from './drag-drop-context';\nexport const NameValueEditor = withDragDropContext(class NameValueEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this._append = this._append.bind(this);\n        this._appendConfigMapOrSecret = this._appendConfigMapOrSecret.bind(this);\n        this._change = this._change.bind(this);\n        this._move = this._move.bind(this);\n        this._remove = this._remove.bind(this);\n    }\n    _append() {\n        const { updateParentData, nameValuePairs, nameValueId } = this.props;\n        updateParentData({ nameValuePairs: nameValuePairs.concat([['', '', nameValuePairs.length]]) }, nameValueId);\n    }\n    _appendConfigMapOrSecret() {\n        const { updateParentData, nameValuePairs, nameValueId } = this.props;\n        const configMapSecretKeyRef = { name: '', key: '' };\n        updateParentData({\n            nameValuePairs: nameValuePairs.concat([\n                ['', { configMapSecretKeyRef }, nameValuePairs.length],\n            ]),\n        }, nameValueId);\n    }\n    _remove(i) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        nameValuePairs.splice(i, 1);\n        nameValuePairs.forEach((values, index) => (values[2] = index)); // update the indices in order.\n        updateParentData({ nameValuePairs: nameValuePairs.length ? nameValuePairs : [['', '', 0]] }, nameValueId);\n    }\n    _change(e, i, type) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        nameValuePairs[i][type === NameValueEditorPair.Name ? NameValueEditorPair.Name : NameValueEditorPair.Value] = e.target.value;\n        updateParentData({ nameValuePairs }, nameValueId);\n    }\n    _move(dragIndex, hoverIndex) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        const movedPair = nameValuePairs[dragIndex];\n        nameValuePairs[dragIndex] = nameValuePairs[hoverIndex];\n        nameValuePairs[hoverIndex] = movedPair;\n        updateParentData({ nameValuePairs }, nameValueId);\n    }\n    render() {\n        const { nameString, valueString, addString, addSecondString, nameValuePairs, allowSorting, readOnly, nameValueId, configMaps, secrets, addConfigMapSecret, } = this.props;\n        const pairElems = nameValuePairs.map((pair, i) => {\n            const key = _.get(pair, [NameValueEditorPair.Index], i);\n            const isEmpty = nameValuePairs.length === 1 && nameValuePairs[0].every((value) => !value);\n            return (React.createElement(PairElement, { onChange: this._change, index: i, nameString: nameString, valueString: valueString, allowSorting: allowSorting, readOnly: readOnly, pair: pair, key: key, onRemove: this._remove, onMove: this._move, rowSourceId: nameValueId, configMaps: configMaps, secrets: secrets, isEmpty: isEmpty, disableReorder: nameValuePairs.length === 1 }));\n        });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"row pairs-list__heading\" },\n                !readOnly && allowSorting && React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" }),\n                React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, nameString),\n                React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, valueString),\n                React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" })),\n            pairElems,\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12\" }, readOnly ? null : (React.createElement(\"div\", { className: \"co-toolbar__group co-toolbar__group--left\" },\n                    React.createElement(Button, { className: \"pf-m-link--align-left\", \"data-test-id\": \"pairs-list__add-btn\", onClick: this._append, type: \"button\", variant: \"link\" },\n                        React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                        addString),\n                    addConfigMapSecret && (React.createElement(React.Fragment, null,\n                        React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: this._appendConfigMapOrSecret, type: \"button\", variant: \"link\" },\n                            React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                            addSecondString)))))))));\n    }\n});\nNameValueEditor.propTypes = {\n    nameString: PropTypes.string,\n    valueString: PropTypes.string,\n    addString: PropTypes.string,\n    addSecondString: PropTypes.string,\n    allowSorting: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    nameValueId: PropTypes.number,\n    nameValuePairs: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n    ])).isRequired,\n    updateParentData: PropTypes.func.isRequired,\n    configMaps: PropTypes.object,\n    secrets: PropTypes.object,\n    addConfigMapSecret: PropTypes.bool,\n};\nNameValueEditor.defaultProps = {\n    nameString: 'Key',\n    valueString: 'Value',\n    addString: 'Add More',\n    addSecondString: 'Add from Config Map or Secret',\n    allowSorting: false,\n    readOnly: false,\n    nameValueId: 0,\n    addConfigMapSecret: false,\n};\nNameValueEditor.displayName = 'Name Value Editor';\nexport const EnvFromEditor = withDragDropContext(class EnvFromEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this._append = this._append.bind(this);\n        this._change = this._change.bind(this);\n        this._move = this._move.bind(this);\n        this._remove = this._remove.bind(this);\n    }\n    _append() {\n        const { updateParentData, nameValuePairs, nameValueId } = this.props;\n        const configMapSecretRef = { name: '', key: '' };\n        updateParentData({\n            nameValuePairs: nameValuePairs.concat([\n                ['', { configMapSecretRef }, nameValuePairs.length],\n            ]),\n        }, nameValueId, EnvType.ENV_FROM);\n    }\n    _remove(i) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        nameValuePairs.splice(i, 1);\n        const configMapSecretRef = { name: '', key: '' };\n        updateParentData({ nameValuePairs: nameValuePairs.length ? nameValuePairs : [['', { configMapSecretRef }]] }, nameValueId, EnvType.ENV_FROM);\n    }\n    _change(e, i, type) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        nameValuePairs[i][type === EnvFromPair.Prefix ? EnvFromPair.Prefix : EnvFromPair.Resource] =\n            e.target.value;\n        updateParentData({ nameValuePairs }, nameValueId, EnvType.ENV_FROM);\n    }\n    _move(dragIndex, hoverIndex) {\n        const { updateParentData, nameValueId } = this.props;\n        const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n        const movedPair = nameValuePairs[dragIndex];\n        nameValuePairs[dragIndex] = nameValuePairs[hoverIndex];\n        nameValuePairs[hoverIndex] = movedPair;\n        updateParentData({ nameValuePairs }, nameValueId, EnvType.ENV_FROM);\n    }\n    render() {\n        const { nameValuePairs, readOnly, nameValueId, configMaps, secrets, serviceAccounts, firstTitle, secondTitle, addButtonDisabled, addButtonLabel, } = this.props;\n        const pairElems = nameValuePairs.map((pair, i) => {\n            const key = _.get(pair, [EnvFromPair.Index], i);\n            return (React.createElement(EnvFromPairElement, { onChange: this._change, index: i, nameString: \"config map/secret\", valueString: \"\", readOnly: readOnly, pair: pair, key: key, onRemove: this._remove, onMove: this._move, rowSourceId: nameValueId, configMaps: configMaps, secrets: secrets, serviceAccounts: serviceAccounts }));\n        });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"row pairs-list__heading\" },\n                !readOnly && React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" }),\n                React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, firstTitle),\n                React.createElement(\"div\", { className: \"col-xs-5 text-secondary text-uppercase\" }, secondTitle),\n                React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" })),\n            pairElems,\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12\" }, !readOnly && (React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: this._append, type: \"button\", variant: \"link\", isDisabled: addButtonDisabled },\n                    React.createElement(PlusCircleIcon, null),\n                    \" \",\n                    addButtonLabel))))));\n    }\n});\nEnvFromEditor.propTypes = {\n    readOnly: PropTypes.bool,\n    nameValueId: PropTypes.number,\n    nameValuePairs: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n    ])).isRequired,\n    updateParentData: PropTypes.func.isRequired,\n    configMaps: PropTypes.object,\n    secrets: PropTypes.object,\n    serviceAccounts: PropTypes.object,\n    firstTitle: PropTypes.string,\n    secondTitle: PropTypes.string,\n    addButtonDisabled: PropTypes.bool,\n};\nEnvFromEditor.defaultProps = {\n    readOnly: false,\n    nameValueId: 0,\n    firstTitle: 'Config map/secret',\n    secondTitle: 'Prefix (Optional)',\n    addButtonDisabled: false,\n    addButtonLabel: 'Add All From Config Map or Secret',\n};\nconst pairSource = {\n    beginDrag(props) {\n        return {\n            index: props.index,\n            rowSourceId: props.rowSourceId,\n        };\n    },\n};\nconst itemTarget = {\n    hover(props, monitor, component) {\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n        // Don't replace items with themselves or with other row groupings on the page\n        if (dragIndex === hoverIndex || monitor.getItem().rowSourceId !== props.rowSourceId) {\n            return;\n        }\n        // Determine rectangle on screen\n        const hoverBoundingRect = component.node.getBoundingClientRect();\n        // Get vertical middle\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset();\n        // Get pixels to the top\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n            return;\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n            return;\n        }\n        // Time to actually perform the action\n        props.onMove(dragIndex, hoverIndex);\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    },\n};\nconst collectSourcePair = (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n});\nconst collectTargetPair = (connect) => ({\n    connectDropTarget: connect.dropTarget(),\n});\nconst PairElement = DragSource(DRAGGABLE_TYPE.ENV_ROW, pairSource, collectSourcePair)(DropTarget(DRAGGABLE_TYPE.ENV_ROW, itemTarget, collectTargetPair)(class PairElement extends React.Component {\n    constructor(props) {\n        super(props);\n        this._onRemove = this._onRemove.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeValue = this._onChangeValue.bind(this);\n    }\n    _onRemove() {\n        const { index, onRemove } = this.props;\n        onRemove(index);\n    }\n    _onChangeName(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, NameValueEditorPair.Name);\n    }\n    _onChangeValue(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, NameValueEditorPair.Value);\n    }\n    render() {\n        const { isDragging, connectDragSource, connectDragPreview, connectDropTarget, nameString, valueString, allowSorting, readOnly, pair, configMaps, secrets, isEmpty, disableReorder, } = this.props;\n        const deleteIcon = (React.createElement(React.Fragment, null,\n            React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }),\n            React.createElement(\"span\", { className: \"sr-only\" }, \"Delete\")));\n        const dragButton = (React.createElement(\"div\", null,\n            React.createElement(Button, { type: \"button\", className: \"pairs-list__action-icon\", tabIndex: \"-1\", isDisabled: disableReorder, variant: \"plain\" },\n                React.createElement(PficonDragdropIcon, { className: \"pairs-list__action-icon--reorder\" }))));\n        return connectDropTarget(connectDragPreview(React.createElement(\"div\", { className: classNames('row', isDragging ? 'pairs-list__row-dragging' : 'pairs-list__row'), ref: (node) => (this.node = node) },\n            allowSorting && !readOnly && (React.createElement(\"div\", { className: \"col-xs-1 pairs-list__action\" }, disableReorder ? dragButton : connectDragSource(dragButton))),\n            React.createElement(\"div\", { className: \"col-xs-5 pairs-list__name-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", placeholder: nameString.toLowerCase(), value: pair[NameValueEditorPair.Name], onChange: this._onChangeName, disabled: readOnly })),\n            _.isPlainObject(pair[NameValueEditorPair.Value]) ? (React.createElement(\"div\", { className: \"col-xs-5 pairs-list__value-pair-field\" },\n                React.createElement(ValueFromPair, { pair: pair[NameValueEditorPair.Value], configMaps: configMaps, secrets: secrets, onChange: this._onChangeValue, disabled: readOnly }))) : (React.createElement(\"div\", { className: \"col-xs-5 pairs-list__value-field\" },\n                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", placeholder: valueString.toLowerCase(), value: pair[NameValueEditorPair.Value] || '', onChange: this._onChangeValue, disabled: readOnly }))),\n            !readOnly && (React.createElement(\"div\", { className: \"col-xs-1 pairs-list__action\" },\n                React.createElement(Button, { type: \"button\", \"data-test-id\": \"pairs-list__delete-btn\", className: classNames({\n                        'pairs-list__span-btns': allowSorting,\n                    }), onClick: this._onRemove, isDisabled: isEmpty, variant: \"plain\" }, deleteIcon))))));\n    }\n}));\nPairElement.propTypes = {\n    nameString: PropTypes.string,\n    valueString: PropTypes.string,\n    readOnly: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    pair: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n    ]),\n    allowSorting: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    onMove: PropTypes.func.isRequired,\n    rowSourceId: PropTypes.number.isRequired,\n    configMaps: PropTypes.object,\n    secrets: PropTypes.object,\n};\nconst EnvFromPairElement = DragSource(DRAGGABLE_TYPE.ENV_FROM_ROW, pairSource, collectSourcePair)(DropTarget(DRAGGABLE_TYPE.ENV_FROM_ROW, itemTarget, collectTargetPair)(class EnvFromPairElement extends React.Component {\n    constructor(props) {\n        super(props);\n        this._onRemove = this._onRemove.bind(this);\n        this._onChangePrefix = this._onChangePrefix.bind(this);\n        this._onChangeResource = this._onChangeResource.bind(this);\n    }\n    _onRemove() {\n        const { index, onRemove } = this.props;\n        onRemove(index);\n    }\n    _onChangePrefix(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, EnvFromPair.Prefix);\n    }\n    _onChangeResource(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, EnvFromPair.Resource);\n    }\n    render() {\n        const { isDragging, connectDragSource, connectDragPreview, connectDropTarget, valueString, readOnly, pair, configMaps, secrets, serviceAccounts, } = this.props;\n        const deleteButton = (React.createElement(React.Fragment, null,\n            React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }),\n            React.createElement(\"span\", { className: \"sr-only\" }, \"Delete\")));\n        return connectDropTarget(connectDragPreview(React.createElement(\"div\", { className: classNames('row', isDragging ? 'pairs-list__row-dragging' : 'pairs-list__row'), ref: (node) => (this.node = node) },\n            !readOnly &&\n                connectDragSource(React.createElement(\"div\", { className: \"col-xs-1 pairs-list__action\" },\n                    React.createElement(Button, { type: \"button\", className: \"pairs-list__action-icon\", tabIndex: \"-1\", variant: \"plain\" },\n                        React.createElement(PficonDragdropIcon, { className: \"pairs-list__action-icon--reorder\" })))),\n            React.createElement(\"div\", { className: \"col-xs-5 pairs-list__value-pair-field\" },\n                React.createElement(ValueFromPair, { pair: pair[EnvFromPair.Resource], configMaps: configMaps, secrets: secrets, serviceAccounts: serviceAccounts, onChange: this._onChangeResource, disabled: readOnly })),\n            React.createElement(\"div\", { className: \"col-xs-5 pairs-list__name-field\" },\n                React.createElement(\"input\", { \"data-test-id\": \"env-prefix\", type: \"text\", className: \"pf-c-form-control\", placeholder: valueString.toLowerCase(), value: pair[EnvFromPair.Prefix], onChange: this._onChangePrefix, disabled: readOnly })),\n            readOnly ? null : (React.createElement(\"div\", { className: \"col-xs-1 pairs-list__action\" },\n                React.createElement(Button, { type: \"button\", \"data-test-id\": \"pairs-list__delete-from-btn\", className: \"pairs-list__span-btns\", onClick: this._onRemove, variant: \"plain\" }, deleteButton))))));\n    }\n}));\nEnvFromPairElement.propTypes = {\n    valueString: PropTypes.string,\n    readOnly: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    pair: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n        PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n    ]),\n    onChange: PropTypes.func.isRequired,\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    onMove: PropTypes.func.isRequired,\n    rowSourceId: PropTypes.number.isRequired,\n    configMaps: PropTypes.object,\n    secrets: PropTypes.object,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/name-value-editor.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/name-value-editor.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { DRAGGABLE_TYPE } from './draggable-item-types';\nimport { Button } from '@patternfly/react-core';\nimport { PficonDragdropIcon, MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { NameValueEditorPair, EnvFromPair, EnvType } from './index';\nimport { ValueFromPair } from './value-from-pair';\nimport withDragDropContext from './drag-drop-context';\n\nexport const NameValueEditor = withDragDropContext(\n  class NameValueEditor extends React.Component {\n    constructor(props) {\n      super(props);\n      this._append = this._append.bind(this);\n      this._appendConfigMapOrSecret = this._appendConfigMapOrSecret.bind(this);\n      this._change = this._change.bind(this);\n      this._move = this._move.bind(this);\n      this._remove = this._remove.bind(this);\n    }\n\n    _append() {\n      const { updateParentData, nameValuePairs, nameValueId } = this.props;\n\n      updateParentData(\n        { nameValuePairs: nameValuePairs.concat([['', '', nameValuePairs.length]]) },\n        nameValueId,\n      );\n    }\n\n    _appendConfigMapOrSecret() {\n      const { updateParentData, nameValuePairs, nameValueId } = this.props;\n      const configMapSecretKeyRef = { name: '', key: '' };\n      updateParentData(\n        {\n          nameValuePairs: nameValuePairs.concat([\n            ['', { configMapSecretKeyRef }, nameValuePairs.length],\n          ]),\n        },\n        nameValueId,\n      );\n    }\n\n    _remove(i) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n      nameValuePairs.splice(i, 1);\n      nameValuePairs.forEach((values, index) => (values[2] = index)); // update the indices in order.\n\n      updateParentData(\n        { nameValuePairs: nameValuePairs.length ? nameValuePairs : [['', '', 0]] },\n        nameValueId,\n      );\n    }\n\n    _change(e, i, type) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n\n      nameValuePairs[i][\n        type === NameValueEditorPair.Name ? NameValueEditorPair.Name : NameValueEditorPair.Value\n      ] = e.target.value;\n      updateParentData({ nameValuePairs }, nameValueId);\n    }\n\n    _move(dragIndex, hoverIndex) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n      const movedPair = nameValuePairs[dragIndex];\n\n      nameValuePairs[dragIndex] = nameValuePairs[hoverIndex];\n      nameValuePairs[hoverIndex] = movedPair;\n      updateParentData({ nameValuePairs }, nameValueId);\n    }\n\n    render() {\n      const {\n        nameString,\n        valueString,\n        addString,\n        addSecondString,\n        nameValuePairs,\n        allowSorting,\n        readOnly,\n        nameValueId,\n        configMaps,\n        secrets,\n        addConfigMapSecret,\n      } = this.props;\n      const pairElems = nameValuePairs.map((pair, i) => {\n        const key = _.get(pair, [NameValueEditorPair.Index], i);\n        const isEmpty = nameValuePairs.length === 1 && nameValuePairs[0].every((value) => !value);\n\n        return (\n          <PairElement\n            onChange={this._change}\n            index={i}\n            nameString={nameString}\n            valueString={valueString}\n            allowSorting={allowSorting}\n            readOnly={readOnly}\n            pair={pair}\n            key={key}\n            onRemove={this._remove}\n            onMove={this._move}\n            rowSourceId={nameValueId}\n            configMaps={configMaps}\n            secrets={secrets}\n            isEmpty={isEmpty}\n            disableReorder={nameValuePairs.length === 1}\n          />\n        );\n      });\n      return (\n        <>\n          <div className=\"row pairs-list__heading\">\n            {!readOnly && allowSorting && <div className=\"col-xs-1 co-empty__header\" />}\n            <div className=\"col-xs-5 text-secondary text-uppercase\">{nameString}</div>\n            <div className=\"col-xs-5 text-secondary text-uppercase\">{valueString}</div>\n            <div className=\"col-xs-1 co-empty__header\" />\n          </div>\n          {pairElems}\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              {readOnly ? null : (\n                <div className=\"co-toolbar__group co-toolbar__group--left\">\n                  <Button\n                    className=\"pf-m-link--align-left\"\n                    data-test-id=\"pairs-list__add-btn\"\n                    onClick={this._append}\n                    type=\"button\"\n                    variant=\"link\"\n                  >\n                    <PlusCircleIcon\n                      data-test-id=\"pairs-list__add-icon\"\n                      className=\"co-icon-space-r\"\n                    />\n                    {addString}\n                  </Button>\n                  {addConfigMapSecret && (\n                    <>\n                      <Button\n                        className=\"pf-m-link--align-left\"\n                        onClick={this._appendConfigMapOrSecret}\n                        type=\"button\"\n                        variant=\"link\"\n                      >\n                        <PlusCircleIcon\n                          data-test-id=\"pairs-list__add-icon\"\n                          className=\"co-icon-space-r\"\n                        />\n                        {addSecondString}\n                      </Button>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </>\n      );\n    }\n  },\n);\nNameValueEditor.propTypes = {\n  nameString: PropTypes.string,\n  valueString: PropTypes.string,\n  addString: PropTypes.string,\n  addSecondString: PropTypes.string,\n  allowSorting: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  nameValueId: PropTypes.number,\n  nameValuePairs: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.string),\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number]),\n      ),\n    ]),\n  ).isRequired,\n  updateParentData: PropTypes.func.isRequired,\n  configMaps: PropTypes.object,\n  secrets: PropTypes.object,\n  addConfigMapSecret: PropTypes.bool,\n};\nNameValueEditor.defaultProps = {\n  nameString: 'Key',\n  valueString: 'Value',\n  addString: 'Add More',\n  addSecondString: 'Add from Config Map or Secret',\n  allowSorting: false,\n  readOnly: false,\n  nameValueId: 0,\n  addConfigMapSecret: false,\n};\n\nNameValueEditor.displayName = 'Name Value Editor';\n\nexport const EnvFromEditor = withDragDropContext(\n  class EnvFromEditor extends React.Component {\n    constructor(props) {\n      super(props);\n      this._append = this._append.bind(this);\n      this._change = this._change.bind(this);\n      this._move = this._move.bind(this);\n      this._remove = this._remove.bind(this);\n    }\n\n    _append() {\n      const { updateParentData, nameValuePairs, nameValueId } = this.props;\n      const configMapSecretRef = { name: '', key: '' };\n      updateParentData(\n        {\n          nameValuePairs: nameValuePairs.concat([\n            ['', { configMapSecretRef }, nameValuePairs.length],\n          ]),\n        },\n        nameValueId,\n        EnvType.ENV_FROM,\n      );\n    }\n\n    _remove(i) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n      nameValuePairs.splice(i, 1);\n      const configMapSecretRef = { name: '', key: '' };\n\n      updateParentData(\n        { nameValuePairs: nameValuePairs.length ? nameValuePairs : [['', { configMapSecretRef }]] },\n        nameValueId,\n        EnvType.ENV_FROM,\n      );\n    }\n\n    _change(e, i, type) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n      nameValuePairs[i][type === EnvFromPair.Prefix ? EnvFromPair.Prefix : EnvFromPair.Resource] =\n        e.target.value;\n      updateParentData({ nameValuePairs }, nameValueId, EnvType.ENV_FROM);\n    }\n\n    _move(dragIndex, hoverIndex) {\n      const { updateParentData, nameValueId } = this.props;\n      const nameValuePairs = _.cloneDeep(this.props.nameValuePairs);\n      const movedPair = nameValuePairs[dragIndex];\n\n      nameValuePairs[dragIndex] = nameValuePairs[hoverIndex];\n      nameValuePairs[hoverIndex] = movedPair;\n      updateParentData({ nameValuePairs }, nameValueId, EnvType.ENV_FROM);\n    }\n\n    render() {\n      const {\n        nameValuePairs,\n        readOnly,\n        nameValueId,\n        configMaps,\n        secrets,\n        serviceAccounts,\n        firstTitle,\n        secondTitle,\n        addButtonDisabled,\n        addButtonLabel,\n      } = this.props;\n      const pairElems = nameValuePairs.map((pair, i) => {\n        const key = _.get(pair, [EnvFromPair.Index], i);\n\n        return (\n          <EnvFromPairElement\n            onChange={this._change}\n            index={i}\n            nameString=\"config map/secret\"\n            valueString=\"\"\n            readOnly={readOnly}\n            pair={pair}\n            key={key}\n            onRemove={this._remove}\n            onMove={this._move}\n            rowSourceId={nameValueId}\n            configMaps={configMaps}\n            secrets={secrets}\n            serviceAccounts={serviceAccounts}\n          />\n        );\n      });\n\n      return (\n        <>\n          <div className=\"row pairs-list__heading\">\n            {!readOnly && <div className=\"col-xs-1 co-empty__header\" />}\n            <div className=\"col-xs-5 text-secondary text-uppercase\">{firstTitle}</div>\n            <div className=\"col-xs-5 text-secondary text-uppercase\">{secondTitle}</div>\n            <div className=\"col-xs-1 co-empty__header\" />\n          </div>\n          {pairElems}\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              {!readOnly && (\n                <Button\n                  className=\"pf-m-link--align-left\"\n                  onClick={this._append}\n                  type=\"button\"\n                  variant=\"link\"\n                  isDisabled={addButtonDisabled}\n                >\n                  <PlusCircleIcon /> {addButtonLabel}\n                </Button>\n              )}\n            </div>\n          </div>\n        </>\n      );\n    }\n  },\n);\nEnvFromEditor.propTypes = {\n  readOnly: PropTypes.bool,\n  nameValueId: PropTypes.number,\n  nameValuePairs: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.string),\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number]),\n      ),\n    ]),\n  ).isRequired,\n  updateParentData: PropTypes.func.isRequired,\n  configMaps: PropTypes.object,\n  secrets: PropTypes.object,\n  serviceAccounts: PropTypes.object,\n  firstTitle: PropTypes.string,\n  secondTitle: PropTypes.string,\n  addButtonDisabled: PropTypes.bool,\n};\nEnvFromEditor.defaultProps = {\n  readOnly: false,\n  nameValueId: 0,\n  firstTitle: 'Config map/secret',\n  secondTitle: 'Prefix (Optional)',\n  addButtonDisabled: false,\n  addButtonLabel: 'Add All From Config Map or Secret',\n};\n\nconst pairSource = {\n  beginDrag(props) {\n    return {\n      index: props.index,\n      rowSourceId: props.rowSourceId,\n    };\n  },\n};\n\nconst itemTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves or with other row groupings on the page\n    if (dragIndex === hoverIndex || monitor.getItem().rowSourceId !== props.rowSourceId) {\n      return;\n    }\n\n    // Determine rectangle on screen\n    const hoverBoundingRect = component.node.getBoundingClientRect();\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMove(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nconst collectSourcePair = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging(),\n});\n\nconst collectTargetPair = (connect) => ({\n  connectDropTarget: connect.dropTarget(),\n});\n\nconst PairElement = DragSource(\n  DRAGGABLE_TYPE.ENV_ROW,\n  pairSource,\n  collectSourcePair,\n)(\n  DropTarget(\n    DRAGGABLE_TYPE.ENV_ROW,\n    itemTarget,\n    collectTargetPair,\n  )(\n    class PairElement extends React.Component {\n      constructor(props) {\n        super(props);\n\n        this._onRemove = this._onRemove.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeValue = this._onChangeValue.bind(this);\n      }\n\n      _onRemove() {\n        const { index, onRemove } = this.props;\n        onRemove(index);\n      }\n\n      _onChangeName(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, NameValueEditorPair.Name);\n      }\n\n      _onChangeValue(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, NameValueEditorPair.Value);\n      }\n\n      render() {\n        const {\n          isDragging,\n          connectDragSource,\n          connectDragPreview,\n          connectDropTarget,\n          nameString,\n          valueString,\n          allowSorting,\n          readOnly,\n          pair,\n          configMaps,\n          secrets,\n          isEmpty,\n          disableReorder,\n        } = this.props;\n        const deleteIcon = (\n          <>\n            <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n            <span className=\"sr-only\">Delete</span>\n          </>\n        );\n        const dragButton = (\n          <div>\n            <Button\n              type=\"button\"\n              className=\"pairs-list__action-icon\"\n              tabIndex=\"-1\"\n              isDisabled={disableReorder}\n              variant=\"plain\"\n            >\n              <PficonDragdropIcon className=\"pairs-list__action-icon--reorder\" />\n            </Button>\n          </div>\n        );\n\n        return connectDropTarget(\n          connectDragPreview(\n            <div\n              className={classNames(\n                'row',\n                isDragging ? 'pairs-list__row-dragging' : 'pairs-list__row',\n              )}\n              ref={(node) => (this.node = node)}\n            >\n              {allowSorting && !readOnly && (\n                <div className=\"col-xs-1 pairs-list__action\">\n                  {disableReorder ? dragButton : connectDragSource(dragButton)}\n                </div>\n              )}\n              <div className=\"col-xs-5 pairs-list__name-field\">\n                <input\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  placeholder={nameString.toLowerCase()}\n                  value={pair[NameValueEditorPair.Name]}\n                  onChange={this._onChangeName}\n                  disabled={readOnly}\n                />\n              </div>\n              {_.isPlainObject(pair[NameValueEditorPair.Value]) ? (\n                <div className=\"col-xs-5 pairs-list__value-pair-field\">\n                  <ValueFromPair\n                    pair={pair[NameValueEditorPair.Value]}\n                    configMaps={configMaps}\n                    secrets={secrets}\n                    onChange={this._onChangeValue}\n                    disabled={readOnly}\n                  />\n                </div>\n              ) : (\n                <div className=\"col-xs-5 pairs-list__value-field\">\n                  <input\n                    type=\"text\"\n                    className=\"pf-c-form-control\"\n                    placeholder={valueString.toLowerCase()}\n                    value={pair[NameValueEditorPair.Value] || ''}\n                    onChange={this._onChangeValue}\n                    disabled={readOnly}\n                  />\n                </div>\n              )}\n              {!readOnly && (\n                <div className=\"col-xs-1 pairs-list__action\">\n                  <Button\n                    type=\"button\"\n                    data-test-id=\"pairs-list__delete-btn\"\n                    className={classNames({\n                      'pairs-list__span-btns': allowSorting,\n                    })}\n                    onClick={this._onRemove}\n                    isDisabled={isEmpty}\n                    variant=\"plain\"\n                  >\n                    {deleteIcon}\n                  </Button>\n                </div>\n              )}\n            </div>,\n          ),\n        );\n      }\n    },\n  ),\n);\nPairElement.propTypes = {\n  nameString: PropTypes.string,\n  valueString: PropTypes.string,\n  readOnly: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  pair: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n  ]),\n  allowSorting: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  isDragging: PropTypes.bool,\n  onMove: PropTypes.func.isRequired,\n  rowSourceId: PropTypes.number.isRequired,\n  configMaps: PropTypes.object,\n  secrets: PropTypes.object,\n};\n\nconst EnvFromPairElement = DragSource(\n  DRAGGABLE_TYPE.ENV_FROM_ROW,\n  pairSource,\n  collectSourcePair,\n)(\n  DropTarget(\n    DRAGGABLE_TYPE.ENV_FROM_ROW,\n    itemTarget,\n    collectTargetPair,\n  )(\n    class EnvFromPairElement extends React.Component {\n      constructor(props) {\n        super(props);\n\n        this._onRemove = this._onRemove.bind(this);\n        this._onChangePrefix = this._onChangePrefix.bind(this);\n        this._onChangeResource = this._onChangeResource.bind(this);\n      }\n\n      _onRemove() {\n        const { index, onRemove } = this.props;\n        onRemove(index);\n      }\n\n      _onChangePrefix(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, EnvFromPair.Prefix);\n      }\n\n      _onChangeResource(e) {\n        const { index, onChange } = this.props;\n        onChange(e, index, EnvFromPair.Resource);\n      }\n\n      render() {\n        const {\n          isDragging,\n          connectDragSource,\n          connectDragPreview,\n          connectDropTarget,\n          valueString,\n          readOnly,\n          pair,\n          configMaps,\n          secrets,\n          serviceAccounts,\n        } = this.props;\n        const deleteButton = (\n          <>\n            <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n            <span className=\"sr-only\">Delete</span>\n          </>\n        );\n\n        return connectDropTarget(\n          connectDragPreview(\n            <div\n              className={classNames(\n                'row',\n                isDragging ? 'pairs-list__row-dragging' : 'pairs-list__row',\n              )}\n              ref={(node) => (this.node = node)}\n            >\n              {!readOnly &&\n                connectDragSource(\n                  <div className=\"col-xs-1 pairs-list__action\">\n                    <Button\n                      type=\"button\"\n                      className=\"pairs-list__action-icon\"\n                      tabIndex=\"-1\"\n                      variant=\"plain\"\n                    >\n                      <PficonDragdropIcon className=\"pairs-list__action-icon--reorder\" />\n                    </Button>\n                  </div>,\n                )}\n              <div className=\"col-xs-5 pairs-list__value-pair-field\">\n                <ValueFromPair\n                  pair={pair[EnvFromPair.Resource]}\n                  configMaps={configMaps}\n                  secrets={secrets}\n                  serviceAccounts={serviceAccounts}\n                  onChange={this._onChangeResource}\n                  disabled={readOnly}\n                />\n              </div>\n              <div className=\"col-xs-5 pairs-list__name-field\">\n                <input\n                  data-test-id=\"env-prefix\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  placeholder={valueString.toLowerCase()}\n                  value={pair[EnvFromPair.Prefix]}\n                  onChange={this._onChangePrefix}\n                  disabled={readOnly}\n                />\n              </div>\n              {readOnly ? null : (\n                <div className=\"col-xs-1 pairs-list__action\">\n                  <Button\n                    type=\"button\"\n                    data-test-id=\"pairs-list__delete-from-btn\"\n                    className=\"pairs-list__span-btns\"\n                    onClick={this._onRemove}\n                    variant=\"plain\"\n                  >\n                    {deleteButton}\n                  </Button>\n                </div>\n              )}\n            </div>,\n          ),\n        );\n      }\n    },\n  ),\n);\nEnvFromPairElement.propTypes = {\n  valueString: PropTypes.string,\n  readOnly: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  pair: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number])),\n  ]),\n  onChange: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  isDragging: PropTypes.bool,\n  onMove: PropTypes.func.isRequired,\n  rowSourceId: PropTypes.number.isRequired,\n  configMaps: PropTypes.object,\n  secrets: PropTypes.object,\n};\n"]}]}