{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/contextmenu/ContextSubMenuItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/contextmenu/ContextSubMenuItem.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { DropdownMenu, DropdownItem } from '@patternfly/react-core';\n// FIXME fully qualified due to the effect of long build times on storybook\nimport Popper from '@console/shared/src/components/popper/Popper';\nimport { AngleRightIcon } from '@patternfly/react-icons';\nimport './ContextSubMenuItem.scss';\nconst ContextSubMenuItem = (_a) => {\n    var { label, children } = _a, other = __rest(_a, [\"label\", \"children\"]);\n    const nodeRef = React.useRef(null);\n    const subMenuRef = React.useRef(null);\n    const [open, setOpen] = React.useState(false);\n    const referenceCb = React.useCallback(() => nodeRef.current || { x: 0, y: 0 }, []);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DropdownItem, Object.assign({}, other, { className: \"topology-context-sub-menu\", component: React.createElement(\"button\", { ref: nodeRef, type: \"button\", \n                // prevent this DropdownItem from executing like a normal action item\n                onClick: (e) => e.stopPropagation(), \n                // mouse enter will open the sub menu\n                onMouseEnter: () => setOpen(true), onMouseLeave: (e) => {\n                    // if the mouse leaves this item, close the sub menu only if the mouse did not enter the sub menu itself\n                    if (!subMenuRef.current || !subMenuRef.current.contains(e.relatedTarget)) {\n                        setOpen(false);\n                    }\n                }, onKeyDown: (e) => {\n                    // open the sub menu on enter or right arrow\n                    if (e.keyCode === 39 || e.keyCode === 13) {\n                        setOpen(true);\n                        e.stopPropagation();\n                    }\n                } },\n                label,\n                React.createElement(AngleRightIcon, { className: \"topology-context-sub-menu__arrow\" })) })),\n        React.createElement(Popper, { open: open, placement: \"right-start\", closeOnEsc: true, closeOnOutsideClick: true, onRequestClose: (e) => {\n                // only close the sub menu if clicking anywhere outside the menu item that owns the sub menu\n                if (!e || !nodeRef.current || !nodeRef.current.contains(e.target)) {\n                    setOpen(false);\n                }\n            }, reference: referenceCb, \n            // use the parent node to capture the li\n            container: nodeRef.current ? nodeRef.current.parentElement : nodeRef.current, returnFocus: true },\n            React.createElement(\"div\", { ref: subMenuRef, role: \"presentation\", className: \"pf-c-dropdown pf-m-expanded\", onMouseLeave: (e) => {\n                    // only close the sub menu if the mouse does not enter the item\n                    if (!nodeRef.current || !nodeRef.current.contains(e.relatedTarget)) {\n                        setOpen(false);\n                    }\n                }, onKeyDown: (e) => {\n                    // close the sub menu on left arrow\n                    if (e.keyCode === 37) {\n                        setOpen(false);\n                        e.stopPropagation();\n                    }\n                } },\n                React.createElement(DropdownMenu, { className: \"pf-c-dropdown__menu\", autoFocus: true }, children)))));\n};\nexport default ContextSubMenuItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/contextmenu/ContextSubMenuItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/contextmenu/ContextSubMenuItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DropdownMenu, DropdownItem } from '@patternfly/react-core';\n// FIXME fully qualified due to the effect of long build times on storybook\nimport Popper from '@console/shared/src/components/popper/Popper';\nimport { AngleRightIcon } from '@patternfly/react-icons';\n\nimport './ContextSubMenuItem.scss';\n\ntype ContextSubMenuItemProps = {\n  label: React.ReactNode;\n  children: React.ReactNode[];\n};\n\nconst ContextSubMenuItem: React.FC<ContextSubMenuItemProps> = ({ label, children, ...other }) => {\n  const nodeRef = React.useRef<HTMLButtonElement>(null);\n  const subMenuRef = React.useRef<HTMLDivElement>(null);\n  const [open, setOpen] = React.useState(false);\n  const referenceCb = React.useCallback(() => nodeRef.current || { x: 0, y: 0 }, []);\n\n  return (\n    <>\n      <DropdownItem\n        {...other}\n        className=\"topology-context-sub-menu\"\n        component={\n          <button\n            ref={nodeRef}\n            type=\"button\"\n            // prevent this DropdownItem from executing like a normal action item\n            onClick={(e) => e.stopPropagation()}\n            // mouse enter will open the sub menu\n            onMouseEnter={() => setOpen(true)}\n            onMouseLeave={(e) => {\n              // if the mouse leaves this item, close the sub menu only if the mouse did not enter the sub menu itself\n              if (!subMenuRef.current || !subMenuRef.current.contains(e.relatedTarget as Node)) {\n                setOpen(false);\n              }\n            }}\n            onKeyDown={(e) => {\n              // open the sub menu on enter or right arrow\n              if (e.keyCode === 39 || e.keyCode === 13) {\n                setOpen(true);\n                e.stopPropagation();\n              }\n            }}\n          >\n            {label}\n            <AngleRightIcon className=\"topology-context-sub-menu__arrow\" />\n          </button>\n        }\n      />\n      <Popper\n        open={open}\n        placement=\"right-start\"\n        closeOnEsc\n        closeOnOutsideClick\n        onRequestClose={(e) => {\n          // only close the sub menu if clicking anywhere outside the menu item that owns the sub menu\n          if (!e || !nodeRef.current || !nodeRef.current.contains(e.target as Node)) {\n            setOpen(false);\n          }\n        }}\n        reference={referenceCb}\n        // use the parent node to capture the li\n        container={nodeRef.current ? nodeRef.current.parentElement : nodeRef.current}\n        returnFocus\n      >\n        <div\n          ref={subMenuRef}\n          role=\"presentation\"\n          className=\"pf-c-dropdown pf-m-expanded\"\n          onMouseLeave={(e) => {\n            // only close the sub menu if the mouse does not enter the item\n            if (!nodeRef.current || !nodeRef.current.contains(e.relatedTarget as Node)) {\n              setOpen(false);\n            }\n          }}\n          onKeyDown={(e) => {\n            // close the sub menu on left arrow\n            if (e.keyCode === 37) {\n              setOpen(false);\n              e.stopPropagation();\n            }\n          }}\n        >\n          <DropdownMenu className=\"pf-c-dropdown__menu\" autoFocus>\n            {children}\n          </DropdownMenu>\n        </div>\n      </Popper>\n    </>\n  );\n};\n\nexport default ContextSubMenuItem;\n"]}]}