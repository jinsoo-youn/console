{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/volume-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/volume-modal.tsx","mtime":1617848124060},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Section } from '../../utils/section';\nimport { Dropdown } from '../../utils/dropdown';\nimport { TextInput } from '../../utils/text-input';\nimport { useWatch } from 'react-hook-form';\nexport const VolumeModal = ({ methods, volume }) => {\n    const typeItems = {\n        emptyDir: '빈 디렉토리',\n        configMap: '컨피그 맵',\n        secret: '시크릿',\n    };\n    let target = document.getElementById('volume-list');\n    let modalType = target && [...target.childNodes].some(cur => cur['dataset']['modify'] === 'true') ? 'modify' : 'add';\n    let template;\n    if (modalType === 'modify') {\n        let list = target.childNodes;\n        list.forEach((cur, idx) => {\n            if (cur['dataset']['modify'] === 'true') {\n                template = volume[idx];\n            }\n        });\n    }\n    const type = useWatch({\n        control: methods.control,\n        name: 'type',\n        defaultValue: template ? template.type : 'emptyDir',\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Section, { label: \"Name\", id: \"volume-name\", isRequired: true },\n            React.createElement(TextInput, { id: \"name\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.name : '' })),\n        React.createElement(Section, { label: \"Type\", id: \"volume-type\", isRequired: true },\n            React.createElement(Dropdown, { name: \"type\", className: \"btn-group\", title: \"\\uBE48 \\uB514\\uB809\\uD1A0\\uB9AC\" // 드롭다운 title 지정\n                , methods: methods, items: typeItems, style: { display: 'block' }, buttonClassName: \"dropdown-btn col-md-12\" // 선택된 아이템 보여주는 button (title) 부분 className\n                , itemClassName: \"dropdown-item\" // 드롭다운 아이템 리스트 전체의 className - 각 row를 의미하는 것은 아님\n             })),\n        type === 'configMap' && (React.createElement(Section, { label: \"\\uCEE8\\uD53C\\uADF8 \\uB9F5\", id: \"volume-config-map\", isRequired: true },\n            React.createElement(TextInput, { id: \"config_map\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.configMap : '' }))),\n        type === 'secret' && (React.createElement(Section, { label: \"\\uC2DC\\uD06C\\uB9BF\", id: \"volume-secret\", isRequired: true },\n            React.createElement(TextInput, { id: \"secret\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.secret : '' })))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/volume-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/volume-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Section } from '../../utils/section';\nimport { Dropdown } from '../../utils/dropdown';\nimport { TextInput } from '../../utils/text-input';\nimport { useWatch } from 'react-hook-form';\n\nexport const VolumeModal: React.FC<VolumeModalProps> = ({ methods, volume }) => {\n  const typeItems = {\n    emptyDir: '빈 디렉토리',\n    configMap: '컨피그 맵',\n    secret: '시크릿',\n  };\n  let target = document.getElementById('volume-list');\n  let modalType = target && [...target.childNodes].some(cur => cur['dataset']['modify'] === 'true') ? 'modify' : 'add';\n  let template;\n  if (modalType === 'modify') {\n    let list = target.childNodes;\n    list.forEach((cur, idx) => {\n      if (cur['dataset']['modify'] === 'true') {\n        template = volume[idx];\n      }\n    });\n  }\n  const type = useWatch({\n    control: methods.control,\n    name: 'type',\n    defaultValue: template ? template.type : 'emptyDir',\n  });\n\n  return (\n    <>\n      <Section label=\"Name\" id=\"volume-name\" isRequired={true}>\n        <TextInput id=\"name\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.name : ''} />\n      </Section>\n      <Section label=\"Type\" id=\"volume-type\" isRequired={true}>\n        <Dropdown\n          name=\"type\"\n          className=\"btn-group\"\n          title=\"빈 디렉토리\" // 드롭다운 title 지정\n          methods={methods}\n          items={typeItems} // (필수)\n          style={{ display: 'block' }}\n          buttonClassName=\"dropdown-btn col-md-12\" // 선택된 아이템 보여주는 button (title) 부분 className\n          itemClassName=\"dropdown-item\" // 드롭다운 아이템 리스트 전체의 className - 각 row를 의미하는 것은 아님\n        />\n      </Section>\n      {type === 'configMap' && (\n        <Section label=\"컨피그 맵\" id=\"volume-config-map\" isRequired={true}>\n          <TextInput id=\"config_map\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.configMap : ''} />\n        </Section>\n      )}\n      {type === 'secret' && (\n        <Section label=\"시크릿\" id=\"volume-secret\" isRequired={true}>\n          <TextInput id=\"secret\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.secret : ''} />\n        </Section>\n      )}\n    </>\n  );\n};\n\ntype VolumeModalProps = {\n  methods: any;\n  volume: any;\n};\n"]}]}