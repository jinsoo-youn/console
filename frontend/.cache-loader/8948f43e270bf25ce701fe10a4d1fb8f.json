{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/geom/Point.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/geom/Point.ts","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export default class Point {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    static singleUse(x = 0, y = 0) {\n        Point.SINGLETON.x = x;\n        Point.SINGLETON.y = y;\n        return Point.SINGLETON;\n    }\n    static fromPoint(point) {\n        return new Point(point.x, point.y);\n    }\n    setLocation(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    negate() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    translate(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n        return this;\n    }\n    scale(scaleX, scaleY) {\n        this.x *= scaleX;\n        this.y *= scaleY != null ? scaleY : scaleX;\n        return this;\n    }\n    clone() {\n        return Point.fromPoint(this);\n    }\n    equals(p) {\n        return p.x === this.x && p.y === this.y;\n    }\n}\nPoint.EMPTY = new Point();\nPoint.SINGLETON = new Point();\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/geom/Point.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/geom/Point.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,OAAO,OAAO,KAAK;IAmBxB,YAAY,IAAY,CAAC,EAAE,IAAY,CAAC;QACtC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IAbD,MAAM,CAAC,SAAS,CAAC,IAAY,CAAC,EAAE,IAAY,CAAC;QAC3C,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,KAAK,CAAC,SAAS,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAa;QAC5B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAOD,WAAW,CAAC,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,EAAU,EAAE,EAAU;QAC9B,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,MAAc,EAAE,MAAe;QACnC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK;QACH,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,CAAS;QACd,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC;;AArDe,WAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAMrB,eAAS,GAAG,IAAI,KAAK,EAAE,CAAC","sourcesContent":["import { Translatable, IPoint } from './types';\n\nexport default class Point implements Translatable, IPoint {\n  static readonly EMPTY = new Point();\n\n  x: number;\n\n  y: number;\n\n  private static SINGLETON = new Point();\n\n  static singleUse(x: number = 0, y: number = 0) {\n    Point.SINGLETON.x = x;\n    Point.SINGLETON.y = y;\n    return Point.SINGLETON;\n  }\n\n  static fromPoint(point: IPoint): Point {\n    return new Point(point.x, point.y);\n  }\n\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  setLocation(x: number, y: number): Point {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  negate(): Point {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n\n  translate(dx: number, dy: number): Point {\n    this.x += dx;\n    this.y += dy;\n    return this;\n  }\n\n  scale(scaleX: number, scaleY?: number): Point {\n    this.x *= scaleX;\n    this.y *= scaleY != null ? scaleY : scaleX;\n    return this;\n  }\n\n  clone(): Point {\n    return Point.fromPoint(this);\n  }\n\n  equals(p: IPoint) {\n    return p.x === this.x && p.y === this.y;\n  }\n}\n"]}]}