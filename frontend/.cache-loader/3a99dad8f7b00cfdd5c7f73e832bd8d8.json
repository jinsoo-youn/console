{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/YAMLEditorSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/YAMLEditorSection.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { safeDump } from 'js-yaml';\nimport { useFormikContext } from 'formik';\nimport { YAMLEditorField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { getEventSourcesDepResource, isKnownEventSource, } from '../../../utils/create-eventsources-utils';\nconst YAMLEditorSection = () => {\n    const { setFieldValue, setFieldTouched, values } = useFormikContext();\n    const formData = React.useRef(values);\n    if (formData.current.type !== values.type) {\n        formData.current = values;\n    }\n    React.useEffect(() => {\n        if (!isKnownEventSource(values.type)) {\n            setFieldValue('yamlData', safeDump(getEventSourcesDepResource(formData.current)));\n            setFieldTouched('yamlData', true);\n        }\n    }, [values.type, setFieldTouched, setFieldValue]);\n    return (React.createElement(FormSection, { title: values.type, flexLayout: true, fullWidth: true },\n        React.createElement(YAMLEditorField, { name: \"yamlData\" })));\n};\nexport default YAMLEditorSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/YAMLEditorSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/YAMLEditorSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,WAAW,MAAM,gEAAgE,CAAC;AACzF,OAAO,EACL,0BAA0B,EAC1B,kBAAkB,GACnB,MAAM,0CAA0C,CAAC;AAGlD,MAAM,iBAAiB,GAAa,GAAG,EAAE;IACvC,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IACpF,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;QACzC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;KAC3B;IAED,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACpC,aAAa,CACX,UAAU,EACV,QAAQ,CAAC,0BAA0B,CAAC,QAAQ,CAAC,OAA8B,CAAC,CAAC,CAC9E,CAAC;YACF,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACnC;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC;IAElD,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,UAAU,QAAC,SAAS;QACnD,oBAAC,eAAe,IAAC,IAAI,EAAC,UAAU,GAAG,CACvB,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport { safeDump } from 'js-yaml';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { YAMLEditorField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport {\n  getEventSourcesDepResource,\n  isKnownEventSource,\n} from '../../../utils/create-eventsources-utils';\nimport { EventSourceFormData } from '../import-types';\n\nconst YAMLEditorSection: React.FC = () => {\n  const { setFieldValue, setFieldTouched, values } = useFormikContext<FormikValues>();\n  const formData = React.useRef(values);\n  if (formData.current.type !== values.type) {\n    formData.current = values;\n  }\n\n  React.useEffect(() => {\n    if (!isKnownEventSource(values.type)) {\n      setFieldValue(\n        'yamlData',\n        safeDump(getEventSourcesDepResource(formData.current as EventSourceFormData)),\n      );\n      setFieldTouched('yamlData', true);\n    }\n  }, [values.type, setFieldTouched, setFieldValue]);\n\n  return (\n    <FormSection title={values.type} flexLayout fullWidth>\n      <YAMLEditorField name=\"yamlData\" />\n    </FormSection>\n  );\n};\n\nexport default YAMLEditorSection;\n"]}]}