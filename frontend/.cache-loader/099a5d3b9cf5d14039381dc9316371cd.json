{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-service-broker.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-service-broker.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ClusterServiceBrokerModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst kind = ClusterServiceBrokerModel.kind;\nexport const clusterServiceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterServiceBrokerModel), ...common];\nconst ClusterServiceBrokerDetails = ({ obj: clusterServiceBroker }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(clusterServiceBroker, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourceSummary, { resource: clusterServiceBroker, showPodSelector: true, showNodeSelector: true })),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13'), obj: clusterServiceBroker, path: \"status.phase\" },\n                            React.createElement(Status, { status: ClusterServiceBrokerPhase(clusterServiceBroker) })),\n                        React.createElement(\"dt\", null, \"URL\"),\n                        React.createElement(\"dd\", null, clusterServiceBroker.spec.url)))))));\n};\nconst { details, editYaml } = navFactory;\nconst ClusterServiceBrokersDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: clusterServiceBrokerMenuActions, pages: [details(ClusterServiceBrokerDetails), editYaml()] }));\nClusterServiceBrokersDetailsPage.displayName = 'ClusterServiceBrokersDetailsPage';\nconst tableColumnClasses = ['', '', '', '', ''];\nconst ClusterServiceBrokerPhase = instance => {\n    let phase = '';\n    if (instance.status) {\n        instance.status.conditions.forEach(cur => {\n            if (cur.type === 'Ready') {\n                if (cur.status === 'True') {\n                    phase = 'Running';\n                }\n                else {\n                    phase = 'Error';\n                }\n            }\n        });\n        return phase;\n    }\n};\nconst ClusterServiceBrokerTableRow = ({ obj, index, key, style }) => {\n    let phase = ClusterServiceBrokerPhase(obj);\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, title: obj.metadata.name })),\n        React.createElement(TableData, { className: tableColumnClasses[1] }, obj.spec.url),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: phase })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: clusterServiceBrokerMenuActions, kind: kind, resource: obj }))));\n};\nconst ClusterServiceBrokerTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_4'),\n            sortField: 'spec.url',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'ServiceBrokerPhase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nClusterServiceBrokerTableHeader.displayName = 'ClusterServiceBrokerTableHeader';\nconst ClusterServiceBrokersList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Cluster Service Broker\", Header: ClusterServiceBrokerTableHeader.bind(null, t), Row: ClusterServiceBrokerTableRow, virtualize: true }));\n};\nClusterServiceBrokersList.displayName = 'ClusterServiceBrokersList';\nconst ClusterServiceBrokersPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_14'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_14') }), canCreate: true, kind: kind, ListComponent: ClusterServiceBrokersList }, props));\n};\nClusterServiceBrokersPage.displayName = 'ClusterServiceBrokersPage';\nexport { ClusterServiceBrokersList, ClusterServiceBrokersPage, ClusterServiceBrokersDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-service-broker.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster-service-broker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { ClusterServiceBrokerModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst kind = ClusterServiceBrokerModel.kind;\n\nexport const clusterServiceBrokerMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterServiceBrokerModel), ...common];\nconst ClusterServiceBrokerDetails: React.FC<ClusterServiceBrokerDetailsProps> = ({ obj: clusterServiceBroker }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(clusterServiceBroker, t)})} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={clusterServiceBroker} showPodSelector showNodeSelector></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={clusterServiceBroker} path=\"status.phase\">\n                <Status status={ClusterServiceBrokerPhase(clusterServiceBroker)} />\n              </DetailsItem>\n              <dt>URL</dt>\n              <dd>{clusterServiceBroker.spec.url}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype ClusterServiceBrokerDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst ClusterServiceBrokersDetailsPage: React.FC<ClusterServiceBrokersDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={clusterServiceBrokerMenuActions} pages={[details(ClusterServiceBrokerDetails), editYaml()]} />;\nClusterServiceBrokersDetailsPage.displayName = 'ClusterServiceBrokersDetailsPage';\n\nconst tableColumnClasses = ['', '', '', '', ''];\n\nconst ClusterServiceBrokerPhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === 'Ready') {\n        if (cur.status === 'True') {\n          phase = 'Running';\n        } else {\n          phase = 'Error';\n        }\n      }\n    });\n    return phase;\n  }\n};\n\nconst ClusterServiceBrokerTableRow = ({ obj, index, key, style }) => {\n  let phase = ClusterServiceBrokerPhase(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>{obj.spec.url}</TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={clusterServiceBrokerMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ClusterServiceBrokerTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_4'),\n      sortField: 'spec.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'ServiceBrokerPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nClusterServiceBrokerTableHeader.displayName = 'ClusterServiceBrokerTableHeader';\n\nconst ClusterServiceBrokersList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Cluster Service Broker\" Header={ClusterServiceBrokerTableHeader.bind(null, t)} Row={ClusterServiceBrokerTableRow} virtualize />;\n};\nClusterServiceBrokersList.displayName = 'ClusterServiceBrokersList';\n\nconst ClusterServiceBrokersPage: React.FC<ClusterServiceBrokersPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_14')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_14') })} canCreate={true} kind={kind} ListComponent={ClusterServiceBrokersList} {...props} />;\n};\nClusterServiceBrokersPage.displayName = 'ClusterServiceBrokersPage';\n\nexport { ClusterServiceBrokersList, ClusterServiceBrokersPage, ClusterServiceBrokersDetailsPage };\n\ntype ClusterServiceBrokersPageProps = {};\n\ntype ClusterServiceBrokersDetailsPageProps = {\n  match: any;\n};\n"]}]}