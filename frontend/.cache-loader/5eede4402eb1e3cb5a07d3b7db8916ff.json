{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/PodSet.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/PodSet.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { get } from 'lodash';\nimport { PodStatus, calculateRadius, getPodData, podRingLabel, podDataInProgress } from '@console/shared';\nconst calculateInnerPodStatusRadius = (outerPodStatusInnerRadius, outerPodStatusWidth) => {\n    const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n    const spaceBwOuterAndInnerPodStatus = 3;\n    const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n    const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n    return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\nexport const podSetInnerRadius = (size, data) => {\n    const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n    let radius = podStatusInnerRadius;\n    if (podDataInProgress(data.dc, data.current, data.isRollingOut)) {\n        const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(radius, podStatusStrokeWidth);\n        radius = innerPodStatusInnerRadius;\n    }\n    const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n    return radius - innerStrokeWidth - podStatusInset;\n};\nconst PodSet = ({ size, data, x = 0, y = 0, showPodCount }) => {\n    const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n    const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(podStatusInnerRadius, podStatusStrokeWidth);\n    const { inProgressDeploymentData, completedDeploymentData } = getPodData(data.dc, data.pods, data.current, data.previous, data.isRollingOut);\n    const obj = get(data, ['current', 'obj'], null) || data.dc;\n    const { title, subTitle, titleComponent } = podRingLabel(obj, data.dc.kind, data === null || data === void 0 ? void 0 : data.pods);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(PodStatus, { key: inProgressDeploymentData ? 'deploy' : 'notDeploy', x: x - size / 2, y: y - size / 2, innerRadius: podStatusInnerRadius, outerRadius: podStatusOuterRadius, data: completedDeploymentData, size: size, subTitle: showPodCount && subTitle, title: showPodCount && title, titleComponent: showPodCount && titleComponent }),\n        inProgressDeploymentData && React.createElement(PodStatus, { x: x - size / 2, y: y - size / 2, innerRadius: innerPodStatusInnerRadius, outerRadius: innerPodStatusOuterRadius, data: inProgressDeploymentData, size: size })));\n};\nexport default PodSet;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/PodSet.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/PodSet.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { get } from 'lodash';\nimport { PodStatus, calculateRadius, getPodData, podRingLabel, podDataInProgress } from '@console/shared';\nimport { DonutStatusData } from '../../topology-types';\n\ninterface PodSetProps {\n  size: number;\n  data: DonutStatusData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (outerPodStatusInnerRadius: number, outerPodStatusWidth: number): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data: DonutStatusData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (podDataInProgress(data.dc, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(radius, podStatusStrokeWidth);\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = ({ size, data, x = 0, y = 0, showPodCount }) => {\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(podStatusInnerRadius, podStatusStrokeWidth);\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data.dc, data.pods, data.current, data.previous, data.isRollingOut);\n\n  const obj = get(data, ['current', 'obj'], null) || data.dc;\n  const { title, subTitle, titleComponent } = podRingLabel(obj, data.dc.kind, data?.pods);\n  return (\n    <>\n      <PodStatus key={inProgressDeploymentData ? 'deploy' : 'notDeploy'} x={x - size / 2} y={y - size / 2} innerRadius={podStatusInnerRadius} outerRadius={podStatusOuterRadius} data={completedDeploymentData} size={size} subTitle={showPodCount && subTitle} title={showPodCount && title} titleComponent={showPodCount && titleComponent} />\n      {inProgressDeploymentData && <PodStatus x={x - size / 2} y={y - size / 2} innerRadius={innerPodStatusInnerRadius} outerRadius={innerPodStatusOuterRadius} data={inProgressDeploymentData} size={size} />}\n    </>\n  );\n};\n\nexport default PodSet;\n"]}]}