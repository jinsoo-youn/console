{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/build-strategy.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/build-strategy.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { DetailsItem } from './details-item';\nimport { ResourceLink } from './resource-link';\nimport { getStrategyType } from '../build';\nconst ImageStreamTagsReference = 'ImageStreamTag';\nexport const BuildStrategy = ({ resource, children }) => {\n    const dockerfile = _.get(resource, 'spec.source.dockerfile');\n    const jenkinsfile = _.get(resource, 'spec.strategy.jenkinsPipelineStrategy.jenkinsfile');\n    const strategyType = getStrategyType(resource.spec.strategy.type);\n    const buildFromPath = ['spec', 'strategy', strategyType, 'from'];\n    const buildFrom = _.get(resource, buildFromPath);\n    const outputTo = _.get(resource, 'spec.output.to');\n    const commitMessage = _.get(resource, 'spec.revision.git.message');\n    const commitHash = _.get(resource, 'spec.revision.git.commit');\n    const commitAuthorName = _.get(resource, 'spec.revision.git.author.name');\n    const pushSecret = _.get(resource, 'spec.output.pushSecret');\n    const resourceLimits = _.get(resource, 'spec.resources.limits');\n    const triggers = _.map(resource.spec.triggers, 'type').join(', ');\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        children,\n        React.createElement(DetailsItem, { label: \"Type\", obj: resource, path: \"spec.strategy.type\" }),\n        React.createElement(DetailsItem, { label: \"Git Repository\", obj: resource, path: \"spec.source.git.uri\", hideEmpty: true }),\n        React.createElement(DetailsItem, { label: \"Git Ref\", obj: resource, path: \"spec.source.git.ref\", hideEmpty: true }),\n        commitMessage && (React.createElement(DetailsItem, { label: \"Git Commit\", obj: resource, path: \"spec.revision.git.message\" },\n            commitMessage,\n            React.createElement(\"br\", null),\n            commitHash && React.createElement(\"code\", null, commitHash.substring(0, 7)),\n            ' ',\n            commitAuthorName && `by ${commitAuthorName}`)),\n        React.createElement(DetailsItem, { label: \"Binary File\", obj: resource, path: \"spec.source.binary.asFile\", hideEmpty: true }),\n        React.createElement(DetailsItem, { label: \"Context Dir\", obj: resource, path: \"spec.source.contextDir\", hideEmpty: true }),\n        dockerfile && (React.createElement(DetailsItem, { label: \"Dockerfile\", obj: resource, path: \"spec.source.dockerfile\" },\n            React.createElement(\"pre\", null, dockerfile))),\n        jenkinsfile && (React.createElement(DetailsItem, { label: \"Dockerfile\", obj: resource, path: \"spec.strategy.jenkinsPipelineStrategy.jenkinsfile\" },\n            React.createElement(\"pre\", null, jenkinsfile))),\n        React.createElement(DetailsItem, { label: \"JenskinsFile Path\", obj: resource, path: \"spec.strategy.jenkinsPipelineStrategy.jenkinsfilePath\", hideEmpty: true }),\n        buildFrom && buildFrom.kind === 'ImageStreamTag' && (React.createElement(DetailsItem, { label: \"Build From\", obj: resource, path: buildFromPath },\n            React.createElement(ResourceLink, { kind: ImageStreamTagsReference, name: buildFrom.name, namespace: buildFrom.namespace || resource.metadata.namespace, title: buildFrom.name }))),\n        buildFrom && buildFrom.kind === 'DockerImage' && (React.createElement(DetailsItem, { label: \"Build From\", obj: resource, path: buildFromPath }, buildFrom.name)),\n        outputTo && (React.createElement(DetailsItem, { label: \"Output To\", obj: resource, path: \"spec.output.to\" },\n            React.createElement(ResourceLink, { kind: ImageStreamTagsReference, name: outputTo.name, namespace: outputTo.namespace || resource.metadata.namespace, title: outputTo.name }))),\n        pushSecret && (React.createElement(DetailsItem, { label: \"Push Secret\", obj: resource, path: \"spec.output.pushSecret\" },\n            React.createElement(ResourceLink, { kind: \"Secret\", name: pushSecret.name, namespace: resource.metadata.namespace, title: pushSecret.name }))),\n        React.createElement(DetailsItem, { label: \"Run Policy\", obj: resource, path: \"spec.runPolicy\", hideEmpty: true }),\n        resourceLimits && (React.createElement(DetailsItem, { label: \"Resource Limits\", obj: resource, path: \"spec.resources.limits\" }, _.map(resourceLimits, (v, k) => `${k}: ${v}`).join(', '))),\n        triggers && (React.createElement(DetailsItem, { label: \"Triggers\", obj: resource, path: \"spec.triggers\" }, triggers))));\n};\nBuildStrategy.displayName = 'BuildStrategy';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/build-strategy.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/build-strategy.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../../module/k8s';\nimport { DetailsItem } from './details-item';\nimport { ResourceLink } from './resource-link';\nimport { getStrategyType } from '../build';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const BuildStrategy: React.SFC<BuildStrategyProps> = ({ resource, children }) => {\n  const dockerfile = _.get(resource, 'spec.source.dockerfile');\n  const jenkinsfile = _.get(resource, 'spec.strategy.jenkinsPipelineStrategy.jenkinsfile');\n  const strategyType = getStrategyType(resource.spec.strategy.type);\n  const buildFromPath = ['spec', 'strategy', strategyType, 'from'];\n  const buildFrom = _.get(resource, buildFromPath);\n  const outputTo = _.get(resource, 'spec.output.to');\n  const commitMessage = _.get(resource, 'spec.revision.git.message');\n  const commitHash = _.get(resource, 'spec.revision.git.commit');\n  const commitAuthorName = _.get(resource, 'spec.revision.git.author.name');\n  const pushSecret = _.get(resource, 'spec.output.pushSecret');\n  const resourceLimits = _.get(resource, 'spec.resources.limits');\n  const triggers = _.map(resource.spec.triggers, 'type').join(', ');\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      {children}\n      <DetailsItem label=\"Type\" obj={resource} path=\"spec.strategy.type\" />\n      <DetailsItem label=\"Git Repository\" obj={resource} path=\"spec.source.git.uri\" hideEmpty />\n      <DetailsItem label=\"Git Ref\" obj={resource} path=\"spec.source.git.ref\" hideEmpty />\n      {commitMessage && (\n        <DetailsItem label=\"Git Commit\" obj={resource} path=\"spec.revision.git.message\">\n          {commitMessage}\n          <br />\n          {commitHash && <code>{commitHash.substring(0, 7)}</code>}{' '}\n          {commitAuthorName && `by ${commitAuthorName}`}\n        </DetailsItem>\n      )}\n      <DetailsItem label=\"Binary File\" obj={resource} path=\"spec.source.binary.asFile\" hideEmpty />\n      <DetailsItem label=\"Context Dir\" obj={resource} path=\"spec.source.contextDir\" hideEmpty />\n      {dockerfile && (\n        <DetailsItem label=\"Dockerfile\" obj={resource} path=\"spec.source.dockerfile\">\n          <pre>{dockerfile}</pre>\n        </DetailsItem>\n      )}\n      {jenkinsfile && (\n        <DetailsItem\n          label=\"Dockerfile\"\n          obj={resource}\n          path=\"spec.strategy.jenkinsPipelineStrategy.jenkinsfile\"\n        >\n          <pre>{jenkinsfile}</pre>\n        </DetailsItem>\n      )}\n      <DetailsItem\n        label=\"JenskinsFile Path\"\n        obj={resource}\n        path=\"spec.strategy.jenkinsPipelineStrategy.jenkinsfilePath\"\n        hideEmpty\n      />\n      {buildFrom && buildFrom.kind === 'ImageStreamTag' && (\n        <DetailsItem label=\"Build From\" obj={resource} path={buildFromPath}>\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={buildFrom.name}\n            namespace={buildFrom.namespace || resource.metadata.namespace}\n            title={buildFrom.name}\n          />\n        </DetailsItem>\n      )}\n      {buildFrom && buildFrom.kind === 'DockerImage' && (\n        <DetailsItem label=\"Build From\" obj={resource} path={buildFromPath}>\n          {buildFrom.name}\n        </DetailsItem>\n      )}\n      {outputTo && (\n        <DetailsItem label=\"Output To\" obj={resource} path=\"spec.output.to\">\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={outputTo.name}\n            namespace={outputTo.namespace || resource.metadata.namespace}\n            title={outputTo.name}\n          />\n        </DetailsItem>\n      )}\n      {pushSecret && (\n        <DetailsItem label=\"Push Secret\" obj={resource} path=\"spec.output.pushSecret\">\n          <ResourceLink\n            kind=\"Secret\"\n            name={pushSecret.name}\n            namespace={resource.metadata.namespace}\n            title={pushSecret.name}\n          />\n        </DetailsItem>\n      )}\n      <DetailsItem label=\"Run Policy\" obj={resource} path=\"spec.runPolicy\" hideEmpty />\n      {resourceLimits && (\n        <DetailsItem label=\"Resource Limits\" obj={resource} path=\"spec.resources.limits\">\n          {_.map(resourceLimits, (v, k) => `${k}: ${v}`).join(', ')}\n        </DetailsItem>\n      )}\n      {triggers && (\n        <DetailsItem label=\"Triggers\" obj={resource} path=\"spec.triggers\">\n          {triggers}\n        </DetailsItem>\n      )}\n    </dl>\n  );\n};\n\nexport type BuildStrategyProps = {\n  resource: K8sResourceKind;\n  children?: JSX.Element[];\n};\n\nBuildStrategy.displayName = 'BuildStrategy';\n"]}]}