{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ModelKind } from '@console/topology';\nimport PipelineVisualizationSurface from './PipelineVisualizationSurface';\nimport './PipelineTopologyGraph.scss';\nconst PipelineTopologyGraph = ({ id, fluid, nodes, edges, layout, }) => {\n    return (React.createElement(\"div\", { className: \"odc-pipeline-topology-graph\", style: { display: fluid ? 'block' : undefined } },\n        React.createElement(PipelineVisualizationSurface, { model: {\n                graph: {\n                    id,\n                    type: ModelKind.graph,\n                    layout,\n                },\n                nodes,\n                edges,\n            } })));\n};\nexport default PipelineTopologyGraph;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,4BAA4B,MAAM,gCAAgC,CAAC;AAI1E,OAAO,8BAA8B,CAAC;AAUtC,MAAM,qBAAqB,GAAyC,CAAC,EACnE,EAAE,EACF,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,GACP,EAAE,EAAE;IACH,OAAO,CACL,6BAAK,SAAS,EAAC,6BAA6B,EAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE;QAC1F,oBAAC,4BAA4B,IAC3B,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,EAAE;oBACF,IAAI,EAAE,SAAS,CAAC,KAAK;oBACrB,MAAM;iBACP;gBACD,KAAK;gBACL,KAAK;aACN,GACD,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport { ModelKind } from '@console/topology';\nimport PipelineVisualizationSurface from './PipelineVisualizationSurface';\nimport { PipelineLayout } from './const';\nimport { PipelineEdgeModel, PipelineMixedNodeModel } from './types';\n\nimport './PipelineTopologyGraph.scss';\n\ntype PipelineTopologyGraphProps = {\n  id: string;\n  fluid?: boolean;\n  nodes: PipelineMixedNodeModel[];\n  edges: PipelineEdgeModel[];\n  layout: PipelineLayout;\n};\n\nconst PipelineTopologyGraph: React.FC<PipelineTopologyGraphProps> = ({\n  id,\n  fluid,\n  nodes,\n  edges,\n  layout,\n}) => {\n  return (\n    <div className=\"odc-pipeline-topology-graph\" style={{ display: fluid ? 'block' : undefined }}>\n      <PipelineVisualizationSurface\n        model={{\n          graph: {\n            id,\n            type: ModelKind.graph,\n            layout,\n          },\n          nodes,\n          edges,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PipelineTopologyGraph;\n"]}]}