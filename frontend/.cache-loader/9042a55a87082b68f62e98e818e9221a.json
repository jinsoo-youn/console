{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/list-page/PipelineAugmentRuns.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/list-page/PipelineAugmentRuns.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { inject } from '@console/internal/components/utils';\nimport { augmentRunsToData } from '../../../utils/pipeline-augment';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport { pipelineFilterReducer, pipelineStatusFilter, } from '../../../utils/pipeline-filter-reducer';\nexport const filters = [\n    {\n        filterGroupName: 'Status',\n        type: 'pipeline-status',\n        reducer: pipelineFilterReducer,\n        items: [\n            { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n            { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n            { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n            { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n            { id: ListFilterId.Other, title: ListFilterLabels[ListFilterId.Other] },\n        ],\n        filter: pipelineStatusFilter,\n    },\n];\n// Firehose injects a lot of props and some of those are considered the KeyedRuns\nconst PipelineAugmentRuns = (_a) => {\n    var { propsReferenceForRuns } = _a, props = __rest(_a, [\"propsReferenceForRuns\"]);\n    const allFilters = Object.assign(Object.assign({}, props.filters), (_.get(props.pipeline, 'filters.name') && { name: _.get(props.pipeline, 'filters.name') }));\n    const resourceData = props.pipeline && props.pipeline.data && propsReferenceForRuns\n        ? augmentRunsToData(props.pipeline.data, propsReferenceForRuns, props)\n        : null;\n    const children = inject(props.children, Object.assign(Object.assign({}, props), { filters: allFilters, resources: { pipeline: { data: resourceData } } }));\n    return React.createElement(React.Fragment, null, children);\n};\nexport default PipelineAugmentRuns;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/list-page/PipelineAugmentRuns.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/list-page/PipelineAugmentRuns.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAE5D,OAAO,EAAE,iBAAiB,EAA+B,MAAM,iCAAiC,CAAC;AACjG,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAC/E,OAAO,EACL,qBAAqB,EACrB,oBAAoB,GACrB,MAAM,wCAAwC,CAAC;AAKhD,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB;QACE,eAAe,EAAE,QAAQ;QACzB,IAAI,EAAE,iBAAiB;QACvB,OAAO,EAAE,qBAAqB;QAC9B,KAAK,EAAE;YACL,EAAE,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;YAC/E,EAAE,EAAE,EAAE,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;YAC3E,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;YACzE,EAAE,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;YAC/E,EAAE,EAAE,EAAE,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;SACxE;QACD,MAAM,EAAE,oBAAoB;KAC7B;CACF,CAAC;AAUF,iFAAiF;AACjF,MAAM,mBAAmB,GAAuC,CAAC,EAGhE,EAAE,EAAE;QAH4D,EAC/D,qBAAqB,OAEtB,EADC,6CAAQ;IAER,MAAM,UAAU,mCACX,KAAK,CAAC,OAAO,GACb,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,CAAC,CAC9F,CAAC;IACF,MAAM,YAAY,GAChB,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,qBAAqB;QAC5D,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,qBAAqB,EAAE,KAAkB,CAAC;QACnF,CAAC,CAAC,IAAI,CAAC;IAEX,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,kCACjC,KAAK,KACR,OAAO,EAAE,UAAU,EACnB,SAAS,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,IAC/C,CAAC;IACH,OAAO,0CAAG,QAAQ,CAAI,CAAC;AACzB,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { inject } from '@console/internal/components/utils';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { augmentRunsToData, PropPipelineData, KeyedRuns } from '../../../utils/pipeline-augment';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport {\n  pipelineFilterReducer,\n  pipelineStatusFilter,\n} from '../../../utils/pipeline-filter-reducer';\n\ninterface ListPipelineData extends K8sKind {\n  data: PropPipelineData[];\n}\nexport const filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'pipeline-status',\n    reducer: pipelineFilterReducer,\n    items: [\n      { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n      { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n      { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n      { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n      { id: ListFilterId.Other, title: ListFilterLabels[ListFilterId.Other] },\n    ],\n    filter: pipelineStatusFilter,\n  },\n];\n\nexport type PipelineAugmentRunsProps = {\n  data?: PropPipelineData[];\n  propsReferenceForRuns?: string[];\n  pipeline?: ListPipelineData;\n  reduxIDs?: string[];\n  applyFilter?: () => void;\n  filters?: Record<string, any>[];\n};\n// Firehose injects a lot of props and some of those are considered the KeyedRuns\nconst PipelineAugmentRuns: React.FC<PipelineAugmentRunsProps> = ({\n  propsReferenceForRuns,\n  ...props\n}) => {\n  const allFilters = {\n    ...props.filters,\n    ...(_.get(props.pipeline, 'filters.name') && { name: _.get(props.pipeline, 'filters.name') }),\n  };\n  const resourceData =\n    props.pipeline && props.pipeline.data && propsReferenceForRuns\n      ? augmentRunsToData(props.pipeline.data, propsReferenceForRuns, props as KeyedRuns)\n      : null;\n\n  const children = inject(props.children, {\n    ...props,\n    filters: allFilters,\n    resources: { pipeline: { data: resourceData } },\n  });\n  return <>{children}</>;\n};\n\nexport default PipelineAugmentRuns;\n"]}]}