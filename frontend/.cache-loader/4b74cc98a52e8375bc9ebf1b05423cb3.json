{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/EventSourcePage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/EventSourcePage.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PageBody, getBadgeFromType } from '@console/shared';\nimport { PageHeading } from '@console/internal/components/utils';\nimport NamespacedPage, { NamespacedPageVariants, } from '@console/dev-console/src/components/NamespacedPage';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport EventSource from './EventSource';\nimport { KnativeEventingModel } from '../../models';\nimport EventSourceAlert from './EventSourceAlert';\nimport { useEventSourceList } from '../../utils/create-eventsources-utils';\nconst EventSourcePage = ({ match, location }) => {\n    const namespace = match.params.ns;\n    const eventSourceStatus = useEventSourceList(namespace);\n    const searchParams = new URLSearchParams(location.search);\n    return (React.createElement(NamespacedPage, { disabled: true, variant: NamespacedPageVariants.light },\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"Event Sources\")),\n        React.createElement(PageHeading, { badge: getBadgeFromType(KnativeEventingModel.badge), title: \"Event Sources\" }, \"Create an event source to register interest in a class of events from a particular system\"),\n        React.createElement(PageBody, { flexLayout: true },\n            React.createElement(EventSourceAlert, { namespace: namespace, eventSourceStatus: eventSourceStatus }),\n            React.createElement(EventSource, { namespace: namespace, eventSourceStatus: eventSourceStatus, selectedApplication: searchParams.get(QUERY_PROPERTIES.APPLICATION), contextSource: searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE) }))));\n};\nexport default EventSourcePage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/EventSourcePage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/EventSourcePage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAEtC,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AACjE,OAAO,cAAc,EAAE,EACrB,sBAAsB,GACvB,MAAM,oDAAoD,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAClE,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,EAAE,oBAAoB,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAI3E,MAAM,eAAe,GAAmC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9E,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IAClC,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;IACxD,MAAM,YAAY,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1D,OAAO,CACL,oBAAC,cAAc,IAAC,QAAQ,QAAC,OAAO,EAAE,sBAAsB,CAAC,KAAK;QAC5D,oBAAC,MAAM;YACL,mDAA4B,CACrB;QACT,oBAAC,WAAW,IAAC,KAAK,EAAE,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,KAAK,EAAC,eAAe,gGAEzE;QACd,oBAAC,QAAQ,IAAC,UAAU;YAClB,oBAAC,gBAAgB,IAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,iBAAiB,GAAI;YAChF,oBAAC,WAAW,IACV,SAAS,EAAE,SAAS,EACpB,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,WAAW,CAAC,EACnE,aAAa,EAAE,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAChE,CACO,CACI,CAClB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { RouteComponentProps } from 'react-router';\nimport { PageBody, getBadgeFromType } from '@console/shared';\nimport { PageHeading } from '@console/internal/components/utils';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport EventSource from './EventSource';\nimport { KnativeEventingModel } from '../../models';\nimport EventSourceAlert from './EventSourceAlert';\nimport { useEventSourceList } from '../../utils/create-eventsources-utils';\n\ntype EventSourcePageProps = RouteComponentProps<{ ns?: string }>;\n\nconst EventSourcePage: React.FC<EventSourcePageProps> = ({ match, location }) => {\n  const namespace = match.params.ns;\n  const eventSourceStatus = useEventSourceList(namespace);\n  const searchParams = new URLSearchParams(location.search);\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>Event Sources</title>\n      </Helmet>\n      <PageHeading badge={getBadgeFromType(KnativeEventingModel.badge)} title=\"Event Sources\">\n        Create an event source to register interest in a class of events from a particular system\n      </PageHeading>\n      <PageBody flexLayout>\n        <EventSourceAlert namespace={namespace} eventSourceStatus={eventSourceStatus} />\n        <EventSource\n          namespace={namespace}\n          eventSourceStatus={eventSourceStatus}\n          selectedApplication={searchParams.get(QUERY_PROPERTIES.APPLICATION)}\n          contextSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n        />\n      </PageBody>\n    </NamespacedPage>\n  );\n};\n\nexport default EventSourcePage;\n"]}]}