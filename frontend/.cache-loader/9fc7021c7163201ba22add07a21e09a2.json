{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-pipeline.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-pipeline.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport { BanIcon, PendingIcon, SyncAltIcon } from '@patternfly/react-icons';\nimport { resourcePath, ExternalLink } from './utils';\nimport { fromNow } from './utils/datetime';\nimport { getBuildNumber } from '../module/k8s/builds';\nimport { GreenCheckCircleIcon, RedExclamationCircleIcon } from '@console/shared';\nconst getStages = (status) => (status && status.stages) || [];\nconst getJenkinsStatus = (resource) => {\n    const json = _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-status-json']);\n    if (!json) {\n        return {};\n    }\n    const status = _.attempt(JSON.parse, json);\n    return _.isError(status) ? {} : status;\n};\nexport const getJenkinsLogURL = (resource) => _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-console-log-url']);\nexport const getJenkinsBuildURL = (resource) => _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-build-uri']);\nconst BuildSummaryStatusIcon = ({ status }) => {\n    const statusClass = _.lowerCase(status);\n    const icon = {\n        new: '',\n        pending: React.createElement(PendingIcon, null),\n        running: React.createElement(SyncAltIcon, { className: \"fa-spin\" }),\n        complete: React.createElement(GreenCheckCircleIcon, null),\n        failed: React.createElement(RedExclamationCircleIcon, null),\n        cancelled: React.createElement(BanIcon, null),\n    }[statusClass];\n    return icon ? (React.createElement(\"span\", { className: `build-pipeline__status-icon build-pipeline__status-icon--${statusClass}` }, icon)) : null;\n};\nexport const BuildPipelineLogLink = ({ obj }) => {\n    const link = getJenkinsLogURL(obj);\n    return link ? (React.createElement(ExternalLink, { href: link, text: \"View logs\", additionalClassName: \"build-pipeline__log-link\" })) : null;\n};\nconst StagesNotStarted = () => (React.createElement(\"div\", { className: \"build-pipeline__stage build-pipeline__stage--none\" }, \"No stages have started.\"));\nconst BuildSummaryTimestamp = ({ timestamp }) => (React.createElement(\"span\", { className: \"build-pipeline__timestamp text-muted\" }, fromNow(timestamp)));\nconst BuildPipelineSummary = ({ obj }) => {\n    const { name, namespace } = obj.metadata;\n    const buildNumber = getBuildNumber(obj);\n    const path = resourcePath(obj.kind, name, namespace);\n    return (React.createElement(\"div\", { className: \"build-pipeline__summary\" },\n        React.createElement(\"div\", { className: \"build-pipeline__phase\" },\n            React.createElement(BuildSummaryStatusIcon, { status: obj.status.phase }),\n            ' ',\n            React.createElement(Link, { to: path, title: name },\n                \"Build \",\n                buildNumber)),\n        React.createElement(BuildSummaryTimestamp, { timestamp: obj.metadata.creationTimestamp }),\n        React.createElement(BuildPipelineLogLink, { obj: obj })));\n};\nconst BuildAnimation = ({ status }) => (React.createElement(\"div\", { className: `build-pipeline__status-bar build-pipeline__status-bar--${_.kebabCase(status)}` },\n    React.createElement(\"div\", { className: \"build-pipeline__animation-line\" }),\n    React.createElement(\"div\", { className: \"build-pipeline__animation-circle\" },\n        React.createElement(\"div\", { className: \"build-pipeline__circle-clip1\" }),\n        React.createElement(\"div\", { className: \"build-pipeline__circle-clip2\" }),\n        React.createElement(\"div\", { className: \"build-pipeline__circle-inner\" },\n            React.createElement(\"div\", { className: \"build-pipeline__circle-inner-fill\" })))));\nconst JenkinsInputUrl = ({ obj, stage }) => {\n    const pending = stage.status === 'PAUSED_PENDING_INPUT';\n    if (!pending) {\n        return null;\n    }\n    const buildUrl = getJenkinsBuildURL(obj);\n    return (React.createElement(\"div\", { className: \"build-pipeline__stage-actions text-muted\" },\n        React.createElement(ExternalLink, { href: buildUrl, text: \"Input Required\" })));\n};\nconst BuildStageTimestamp = ({ timestamp }) => (React.createElement(\"div\", { className: \"build-pipeline__stage-time text-muted\" }, fromNow(timestamp)));\nconst BuildStageName = ({ name }) => {\n    return (React.createElement(\"div\", { title: name, className: \"build-pipeline__stage-name\" }, name));\n};\nconst BuildStage = ({ obj, stage }) => {\n    return (React.createElement(\"div\", { className: \"build-pipeline__stage\" },\n        React.createElement(\"div\", { className: \"build-pipeline__stage-column\" },\n            React.createElement(BuildStageName, { name: stage.name }),\n            React.createElement(BuildAnimation, { status: stage.status }),\n            React.createElement(JenkinsInputUrl, { obj: obj, stage: stage }),\n            React.createElement(BuildStageTimestamp, { timestamp: stage.startTimeMillis }))));\n};\nexport const BuildPipeline = ({ obj }) => {\n    const jenkinsStatus = getJenkinsStatus(obj);\n    const stages = getStages(jenkinsStatus);\n    return (React.createElement(\"div\", { className: \"build-pipeline\" },\n        React.createElement(BuildPipelineSummary, { obj: obj }),\n        React.createElement(\"div\", { className: \"build-pipeline__container\" },\n            React.createElement(\"div\", { className: \"build-pipeline__stages\" }, _.isEmpty(stages) ? (React.createElement(StagesNotStarted, null)) : (stages.map((stage) => React.createElement(BuildStage, { obj: obj, stage: stage, key: stage.id })))))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-pipeline.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-pipeline.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport { BanIcon, PendingIcon, SyncAltIcon } from '@patternfly/react-icons';\n\nimport { resourcePath, ExternalLink } from './utils';\nimport { fromNow } from './utils/datetime';\nimport { K8sResourceKind } from '../module/k8s';\nimport { getBuildNumber } from '../module/k8s/builds';\nimport { GreenCheckCircleIcon, RedExclamationCircleIcon } from '@console/shared';\n\nconst getStages = (status): any[] => (status && status.stages) || [];\nconst getJenkinsStatus = (resource: K8sResourceKind) => {\n  const json = _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-status-json']);\n  if (!json) {\n    return {};\n  }\n\n  const status = _.attempt(JSON.parse, json);\n  return _.isError(status) ? {} : status;\n};\n\nexport const getJenkinsLogURL = (resource: K8sResourceKind): string =>\n  _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-console-log-url']);\nexport const getJenkinsBuildURL = (resource: K8sResourceKind): string =>\n  _.get(resource, ['metadata', 'annotations', 'openshift.io/jenkins-build-uri']);\n\nconst BuildSummaryStatusIcon: React.SFC<BuildSummaryStatusIconProps> = ({ status }) => {\n  const statusClass = _.lowerCase(status);\n  const icon = {\n    new: '',\n    pending: <PendingIcon />,\n    running: <SyncAltIcon className=\"fa-spin\" />,\n    complete: <GreenCheckCircleIcon />,\n    failed: <RedExclamationCircleIcon />,\n    cancelled: <BanIcon />,\n  }[statusClass];\n\n  return icon ? (\n    <span className={`build-pipeline__status-icon build-pipeline__status-icon--${statusClass}`}>\n      {icon}\n    </span>\n  ) : null;\n};\n\nexport const BuildPipelineLogLink: React.SFC<BuildPipelineLogLinkProps> = ({ obj }) => {\n  const link = getJenkinsLogURL(obj);\n  return link ? (\n    <ExternalLink href={link} text=\"View logs\" additionalClassName=\"build-pipeline__log-link\" />\n  ) : null;\n};\n\nconst StagesNotStarted: React.SFC = () => (\n  <div className=\"build-pipeline__stage build-pipeline__stage--none\">No stages have started.</div>\n);\n\nconst BuildSummaryTimestamp: React.SFC<BuildSummaryTimestampProps> = ({ timestamp }) => (\n  <span className=\"build-pipeline__timestamp text-muted\">{fromNow(timestamp)}</span>\n);\n\nconst BuildPipelineSummary: React.SFC<BuildPipelineSummaryProps> = ({ obj }) => {\n  const { name, namespace } = obj.metadata;\n  const buildNumber = getBuildNumber(obj);\n  const path: string = resourcePath(obj.kind, name, namespace);\n  return (\n    <div className=\"build-pipeline__summary\">\n      <div className=\"build-pipeline__phase\">\n        <BuildSummaryStatusIcon status={obj.status.phase} />{' '}\n        <Link to={path} title={name}>\n          Build {buildNumber}\n        </Link>\n      </div>\n      <BuildSummaryTimestamp timestamp={obj.metadata.creationTimestamp} />\n      <BuildPipelineLogLink obj={obj} />\n    </div>\n  );\n};\n\nconst BuildAnimation: React.SFC<BuildAnimationProps> = ({ status }) => (\n  <div className={`build-pipeline__status-bar build-pipeline__status-bar--${_.kebabCase(status)}`}>\n    <div className=\"build-pipeline__animation-line\" />\n    <div className=\"build-pipeline__animation-circle\">\n      <div className=\"build-pipeline__circle-clip1\" />\n      <div className=\"build-pipeline__circle-clip2\" />\n      <div className=\"build-pipeline__circle-inner\">\n        <div className=\"build-pipeline__circle-inner-fill\" />\n      </div>\n    </div>\n  </div>\n);\n\nconst JenkinsInputUrl: React.SFC<JenkinsInputUrlProps> = ({ obj, stage }) => {\n  const pending = stage.status === 'PAUSED_PENDING_INPUT';\n\n  if (!pending) {\n    return null;\n  }\n\n  const buildUrl = getJenkinsBuildURL(obj);\n  return (\n    <div className=\"build-pipeline__stage-actions text-muted\">\n      <ExternalLink href={buildUrl} text=\"Input Required\" />\n    </div>\n  );\n};\n\nconst BuildStageTimestamp: React.SFC<BuildStageTimestampProps> = ({ timestamp }) => (\n  <div className=\"build-pipeline__stage-time text-muted\">{fromNow(timestamp)}</div>\n);\n\nconst BuildStageName: React.SFC<BuildStageNameProps> = ({ name }) => {\n  return (\n    <div title={name} className=\"build-pipeline__stage-name\">\n      {name}\n    </div>\n  );\n};\n\nconst BuildStage: React.SFC<BuildStageProps> = ({ obj, stage }) => {\n  return (\n    <div className=\"build-pipeline__stage\">\n      <div className=\"build-pipeline__stage-column\">\n        <BuildStageName name={stage.name} />\n        <BuildAnimation status={stage.status} />\n        <JenkinsInputUrl obj={obj} stage={stage} />\n        <BuildStageTimestamp timestamp={stage.startTimeMillis} />\n      </div>\n    </div>\n  );\n};\n\nexport const BuildPipeline: React.SFC<BuildPipelineProps> = ({ obj }) => {\n  const jenkinsStatus: any = getJenkinsStatus(obj);\n  const stages = getStages(jenkinsStatus);\n  return (\n    <div className=\"build-pipeline\">\n      <BuildPipelineSummary obj={obj} />\n      <div className=\"build-pipeline__container\">\n        <div className=\"build-pipeline__stages\">\n          {_.isEmpty(stages) ? (\n            <StagesNotStarted />\n          ) : (\n            stages.map((stage) => <BuildStage obj={obj} stage={stage} key={stage.id} />)\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type BuildPipelineProps = {\n  obj: K8sResourceKind;\n};\n\nexport type BuildStageProps = {\n  obj: K8sResourceKind;\n  stage: any;\n};\n\nexport type BuildAnimationProps = {\n  status: string;\n};\n\nexport type BuildPipelineSummaryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type BuildSummaryStatusIconProps = {\n  status: string;\n};\n\nexport type BuildStageTimestampProps = {\n  timestamp: string;\n};\n\nexport type BuildPipelineLogLinkProps = {\n  obj: K8sResourceKind;\n};\n\nexport type BuildPipelineLinkProps = {\n  obj: K8sResourceKind;\n  title: string;\n};\n\nexport type BuildSummaryTimestampProps = {\n  timestamp: string;\n};\n\nexport type BuildStageNameProps = {\n  name: string;\n};\n\nexport type JenkinsInputUrlProps = {\n  obj: K8sResourceKind;\n  stage: any;\n};\n"]}]}