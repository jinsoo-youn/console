{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/kebab-actions.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/kebab-actions.ts","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { EditApplication } from '@console/dev-console/src/actions/modify-application';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { setTrafficDistribution } from '../actions/traffic-splitting';\nimport { setSinkSource } from '../actions/sink-source';\nimport { ServiceModel } from '../models';\nimport { getDynamicEventSourcesModelRefs } from './fetch-dynamic-eventsources-utils';\nexport const getKebabActionsForKind = (resourceKind) => {\n    const menuActions = [];\n    const eventSourceModelrefs = getDynamicEventSourcesModelRefs();\n    if (resourceKind) {\n        if (referenceForModel(resourceKind) === referenceForModel(ServiceModel)) {\n            menuActions.push(setTrafficDistribution, AddHealthChecks, EditApplication, EditHealthChecks);\n        }\n        if (_.includes(eventSourceModelrefs, referenceForModel(resourceKind))) {\n            menuActions.push(setSinkSource);\n        }\n    }\n    return menuActions;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/kebab-actions.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/utils/kebab-actions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAW,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAE1E,OAAO,EAAE,eAAe,EAAE,MAAM,qDAAqD,CAAC;AACtF,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,+CAA+C,CAAC;AAClG,OAAO,EAAE,sBAAsB,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,+BAA+B,EAAE,MAAM,oCAAoC,CAAC;AAErF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,YAAqB,EAAiB,EAAE;IAC7E,MAAM,WAAW,GAAkB,EAAE,CAAC;IACtC,MAAM,oBAAoB,GAAa,+BAA+B,EAAE,CAAC;IACzE,IAAI,YAAY,EAAE;QAChB,IAAI,iBAAiB,CAAC,YAAY,CAAC,KAAK,iBAAiB,CAAC,YAAY,CAAC,EAAE;YACvE,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE,eAAe,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC;SAC9F;QACD,IAAI,CAAC,CAAC,QAAQ,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,YAAY,CAAC,CAAC,EAAE;YACrE,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACjC;KACF;IACD,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { K8sKind, referenceForModel } from '@console/internal/module/k8s';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { EditApplication } from '@console/dev-console/src/actions/modify-application';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { setTrafficDistribution } from '../actions/traffic-splitting';\nimport { setSinkSource } from '../actions/sink-source';\nimport { ServiceModel } from '../models';\nimport { getDynamicEventSourcesModelRefs } from './fetch-dynamic-eventsources-utils';\n\nexport const getKebabActionsForKind = (resourceKind: K8sKind): KebabAction[] => {\n  const menuActions: KebabAction[] = [];\n  const eventSourceModelrefs: string[] = getDynamicEventSourcesModelRefs();\n  if (resourceKind) {\n    if (referenceForModel(resourceKind) === referenceForModel(ServiceModel)) {\n      menuActions.push(setTrafficDistribution, AddHealthChecks, EditApplication, EditHealthChecks);\n    }\n    if (_.includes(eventSourceModelrefs, referenceForModel(resourceKind))) {\n      menuActions.push(setSinkSource);\n    }\n  }\n  return menuActions;\n};\n"]}]}