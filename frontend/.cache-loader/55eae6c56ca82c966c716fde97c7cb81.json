{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-dropdown.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-dropdown.jsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport * as PropTypes from 'prop-types';\nimport { Alert } from '@patternfly/react-core';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { Dropdown } from './dropdown';\nimport { Firehose } from './firehose';\nimport { LoadingInline } from './status-box';\nimport { ResourceName } from './resource-icon';\nimport { connectToFlags, flagPending } from '../../reducers/features';\nclass ListDropdown_ extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: {},\n        };\n        if (props.selectedKey) {\n            this.state.selectedKey = props.selectedKeyKind\n                ? `${props.selectedKey}-${props.selectedKeyKind}`\n                : props.selectedKey;\n        }\n        this.state.title = props.loaded ? props.placeholder : React.createElement(LoadingInline, null);\n        this.autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n        // Pass both the resource name and the resource kind to onChange()\n        this.onChange = (key) => {\n            const { name, kindLabel } = _.get(this.state, ['items', key], {});\n            this.setState({ selectedKey: key, title: React.createElement(ResourceName, { kind: kindLabel, name: name }) });\n            this.props.onChange(name, kindLabel);\n        };\n    }\n    UNSAFE_componentWillMount() {\n        // we need to trigger state changes to get past shouldComponentUpdate...\n        //   but the entire working set of data can be loaded in memory at this point in time\n        //   in which case componentWillReceiveProps would not be called for a while...\n        this.UNSAFE_componentWillReceiveProps(this.props);\n    }\n    UNSAFE_componentWillReceiveProps({ desc, placeholder, loaded, loadError, resources, dataFilter, }) {\n        if (!loaded) {\n            return;\n        }\n        this.setState(({ selectedKey }) => {\n            if (loadError) {\n                return {\n                    title: React.createElement(\"div\", { className: \"cos-error-title\" },\n                        \"Error Loading \",\n                        desc),\n                };\n            }\n            const unsortedList = {};\n            _.each(resources, ({ data }, kindLabel) => {\n                _.reduce(data, (acc, resource) => {\n                    if (!dataFilter || dataFilter(resource)) {\n                        acc[`${resource.metadata.name}-${kindLabel}`] = {\n                            kindLabel,\n                            name: resource.metadata.name,\n                        };\n                    }\n                    return acc;\n                }, unsortedList);\n            });\n            const sortedList = {};\n            _.keys(unsortedList)\n                .sort()\n                .forEach((key) => {\n                sortedList[key] = unsortedList[key];\n            });\n            const selectedItem = sortedList[selectedKey];\n            return {\n                items: sortedList,\n                title: selectedItem ? (React.createElement(ResourceName, { kind: selectedItem.kindLabel, name: selectedItem.name })) : (placeholder),\n            };\n        });\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return !_.isEqual(this.state, nextState);\n    }\n    render() {\n        const { desc, fixed, placeholder, id, loaded, disabled } = this.props;\n        const items = {};\n        _.keys(this.state.items).forEach((key) => {\n            const item = this.state.items[key];\n            items[key] = React.createElement(ResourceName, { kind: item.kindLabel, name: item.name });\n        });\n        const { selectedKey } = this.state;\n        const Component = fixed ? (items[selectedKey]) : (React.createElement(Dropdown, { autocompleteFilter: this.autocompleteFilter, autocompletePlaceholder: placeholder, items: items, selectedKey: selectedKey, title: this.state.title, onChange: this.onChange, id: id, dropDownClassName: \"dropdown--full-width\", menuClassName: \"dropdown-menu--text-wrap\", disabled: disabled }));\n        return (React.createElement(\"div\", null,\n            Component,\n            loaded && _.isEmpty(items) && (React.createElement(Alert, { isInline: true, className: \"co-alert pf-c-alert--top-margin\", variant: \"info\", title: `No ${desc} found or defined` }))));\n    }\n}\nexport const ListDropdown = (props) => {\n    const resources = _.map(props.resources, (resource) => _.assign({ isList: true, prop: resource.kind }, resource));\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(ListDropdown_, Object.assign({}, props))));\n};\nListDropdown.propTypes = {\n    dataFilter: PropTypes.func,\n    desc: PropTypes.string,\n    // specify both key/kind\n    selectedKey: PropTypes.string,\n    selectedKeyKind: PropTypes.string,\n    fixed: PropTypes.bool,\n    resources: PropTypes.arrayOf(PropTypes.shape({\n        kind: PropTypes.string.isRequired,\n        namespace: PropTypes.string,\n    })).isRequired,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    id: PropTypes.string,\n};\nconst NsDropdown_ = (props) => {\n    const openshiftFlag = props.flags[FLAGS.OPENSHIFT];\n    if (flagPending(openshiftFlag)) {\n        return null;\n    }\n    const kind = openshiftFlag ? 'Project' : 'Namespace';\n    const resources = [{ kind }];\n    return (React.createElement(ListDropdown, Object.assign({}, props, { desc: \"Namespaces\", resources: resources, selectedKeyKind: kind, placeholder: \"Select namespace\" })));\n};\n/** @type {React.FC<{dataFilter?: (ns: any) => boolean, desc?: string, selectedKey?: string, selectedKeyKind?: string, fixed?: boolean, placeholder?: string, onChange?: (selectedKey: string, event: React.Event) => void, id?: string}}>} */\nexport const NsDropdown = connectToFlags(FLAGS.OPENSHIFT)(NsDropdown_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-dropdown.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-dropdown.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport * as PropTypes from 'prop-types';\nimport { Alert } from '@patternfly/react-core';\n\nimport { FLAGS } from '@console/shared/src/constants';\nimport { Dropdown } from './dropdown';\nimport { Firehose } from './firehose';\nimport { LoadingInline } from './status-box';\nimport { ResourceName } from './resource-icon';\nimport { connectToFlags, flagPending } from '../../reducers/features';\n\nclass ListDropdown_ extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {},\n    };\n\n    if (props.selectedKey) {\n      this.state.selectedKey = props.selectedKeyKind\n        ? `${props.selectedKey}-${props.selectedKeyKind}`\n        : props.selectedKey;\n    }\n\n    this.state.title = props.loaded ? props.placeholder : <LoadingInline />;\n\n    this.autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n    // Pass both the resource name and the resource kind to onChange()\n    this.onChange = (key) => {\n      const { name, kindLabel } = _.get(this.state, ['items', key], {});\n      this.setState({ selectedKey: key, title: <ResourceName kind={kindLabel} name={name} /> });\n      this.props.onChange(name, kindLabel);\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    // we need to trigger state changes to get past shouldComponentUpdate...\n    //   but the entire working set of data can be loaded in memory at this point in time\n    //   in which case componentWillReceiveProps would not be called for a while...\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps({\n    desc,\n    placeholder,\n    loaded,\n    loadError,\n    resources,\n    dataFilter,\n  }) {\n    if (!loaded) {\n      return;\n    }\n\n    this.setState(({ selectedKey }) => {\n      if (loadError) {\n        return {\n          title: <div className=\"cos-error-title\">Error Loading {desc}</div>,\n        };\n      }\n\n      const unsortedList = {};\n      _.each(resources, ({ data }, kindLabel) => {\n        _.reduce(\n          data,\n          (acc, resource) => {\n            if (!dataFilter || dataFilter(resource)) {\n              acc[`${resource.metadata.name}-${kindLabel}`] = {\n                kindLabel,\n                name: resource.metadata.name,\n              };\n            }\n            return acc;\n          },\n          unsortedList,\n        );\n      });\n\n      const sortedList = {};\n      _.keys(unsortedList)\n        .sort()\n        .forEach((key) => {\n          sortedList[key] = unsortedList[key];\n        });\n      const selectedItem = sortedList[selectedKey];\n      return {\n        items: sortedList,\n        title: selectedItem ? (\n          <ResourceName kind={selectedItem.kindLabel} name={selectedItem.name} />\n        ) : (\n          placeholder\n        ),\n      };\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  render() {\n    const { desc, fixed, placeholder, id, loaded, disabled } = this.props;\n    const items = {};\n\n    _.keys(this.state.items).forEach((key) => {\n      const item = this.state.items[key];\n      items[key] = <ResourceName kind={item.kindLabel} name={item.name} />;\n    });\n\n    const { selectedKey } = this.state;\n\n    const Component = fixed ? (\n      items[selectedKey]\n    ) : (\n      <Dropdown\n        autocompleteFilter={this.autocompleteFilter}\n        autocompletePlaceholder={placeholder}\n        items={items}\n        selectedKey={selectedKey}\n        title={this.state.title}\n        onChange={this.onChange}\n        id={id}\n        dropDownClassName=\"dropdown--full-width\"\n        menuClassName=\"dropdown-menu--text-wrap\"\n        disabled={disabled}\n      />\n    );\n\n    return (\n      <div>\n        {Component}\n        {loaded && _.isEmpty(items) && (\n          <Alert\n            isInline\n            className=\"co-alert pf-c-alert--top-margin\"\n            variant=\"info\"\n            title={`No ${desc} found or defined`}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport const ListDropdown = (props) => {\n  const resources = _.map(props.resources, (resource) =>\n    _.assign({ isList: true, prop: resource.kind }, resource),\n  );\n  return (\n    <Firehose resources={resources}>\n      <ListDropdown_ {...props} />\n    </Firehose>\n  );\n};\n\nListDropdown.propTypes = {\n  dataFilter: PropTypes.func,\n  desc: PropTypes.string,\n  // specify both key/kind\n  selectedKey: PropTypes.string,\n  selectedKeyKind: PropTypes.string,\n  fixed: PropTypes.bool,\n  resources: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string.isRequired,\n      namespace: PropTypes.string,\n    }),\n  ).isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n};\n\nconst NsDropdown_ = (props) => {\n  const openshiftFlag = props.flags[FLAGS.OPENSHIFT];\n  if (flagPending(openshiftFlag)) {\n    return null;\n  }\n  const kind = openshiftFlag ? 'Project' : 'Namespace';\n  const resources = [{ kind }];\n  return (\n    <ListDropdown\n      {...props}\n      desc=\"Namespaces\"\n      resources={resources}\n      selectedKeyKind={kind}\n      placeholder=\"Select namespace\"\n    />\n  );\n};\n/** @type {React.FC<{dataFilter?: (ns: any) => boolean, desc?: string, selectedKey?: string, selectedKeyKind?: string, fixed?: boolean, placeholder?: string, onChange?: (selectedKey: string, event: React.Event) => void, id?: string}}>} */\nexport const NsDropdown = connectToFlags(FLAGS.OPENSHIFT)(NsDropdown_);\n"]}]}