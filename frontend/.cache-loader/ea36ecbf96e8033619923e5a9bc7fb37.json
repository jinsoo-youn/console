{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { PipelineModel, TaskModel, ClusterTaskModel } from '../../models';\nimport PipelineVisualization from '../../../packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport DynamicResourceLinkList from '../../../packages/dev-console/src/components/pipelines/resource-overview/DynamicResourceLinkList';\nimport { PipelineForm, PipelineParametersForm, PipelineResourcesForm, parametersValidationSchema, resourcesValidationSchema } from '../../../packages/dev-console/src/components/pipelines/detail-page-tabs';\nimport { addTrigger } from '../../../packages/dev-console/src/utils/pipeline-actions';\nimport { PipelineRunsPage } from './pipeline-run';\nimport PipelineRowKebabActions from './pipelines/pipeline-row-kebab-actions';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nexport const menuActions = [addTrigger, ...Kebab.getExtensionsActionsForKind(PipelineModel), ...Kebab.factory.common];\nconst kind = PipelineModel.kind;\nconst tableColumnClasses = [\n    'col-xs-6 col-sm-4',\n    'col-xs-6 col-sm-4',\n    'col-sm-4 hidden-xs',\n    Kebab.columnClass,\n];\nconst PipelineTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nPipelineTableHeader.displayName = 'PipelineTableHeader';\nconst PipelineTableRow = ({ obj: pipeline, index, key, style }) => {\n    var _a, _b, _c, _d, _e;\n    return (React.createElement(TableRow, { id: pipeline.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: (_a = pipeline.metadata) === null || _a === void 0 ? void 0 : _a.name, namespace: (_b = pipeline.metadata) === null || _b === void 0 ? void 0 : _b.namespace, title: (_c = pipeline.metadata) === null || _c === void 0 ? void 0 : _c.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: (_d = pipeline.metadata) === null || _d === void 0 ? void 0 : _d.namespace, title: (_e = pipeline.metadata) === null || _e === void 0 ? void 0 : _e.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Timestamp, { timestamp: pipeline.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(PipelineRowKebabActions, { pipeline: pipeline }))));\n};\nexport const getResourceModelFromTaskKind = (kind) => (kind === ClusterTaskModel.kind ? ClusterTaskModel : TaskModel);\nexport const PipelineDetailsList = ({ ds: pipeline }) => {\n    const taskLinks = pipeline.spec.tasks\n        .filter((pipelineTask) => !!pipelineTask.taskRef)\n        .map(task => ({\n        model: getResourceModelFromTaskKind(task.taskRef.kind),\n        name: task.taskRef.name,\n        displayName: task.name,\n    }));\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DynamicResourceLinkList, { namespace: pipeline.metadata.namespace, links: taskLinks, title: \"Tasks\" })));\n};\nconst PipelineDetails = ({ obj: pipeline }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pipeline, t) }) }),\n            React.createElement(PipelineVisualization, { pipeline: pipeline }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: pipeline })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(PipelineDetailsList, { ds: pipeline }))))));\n};\nconst { details, editYaml } = navFactory;\nexport const Pipelines = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Pipelines\", Header: PipelineTableHeader.bind(null, t), Row: PipelineTableRow, virtualize: true }));\n};\nexport const PipelinesPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_59'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_59') }), canCreate: true, ListComponent: Pipelines, kind: kind }, props));\n};\nexport const PipelinesDetailsPage = props => (React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [\n        details(detailsPage(PipelineDetails)),\n        editYaml(),\n        {\n            href: 'runs',\n            name: 'Pipeline Runs',\n            component: pageProps => React.createElement(PipelineRunsPage, { showTitle: false, canCreate: false, namespace: pageProps.obj.metadata.namespace, selector: { 'tekton.dev/pipeline': pageProps.obj.metadata.name, } }),\n        },\n        {\n            href: 'parameters',\n            name: 'Parameters',\n            component: pageProps => React.createElement(PipelineForm, Object.assign({ PipelineFormComponent: PipelineParametersForm, formName: \"parameters\", validationSchema: parametersValidationSchema, obj: pageProps.obj }, pageProps)),\n        },\n        {\n            href: 'resources',\n            name: 'Resources',\n            component: pageProps => React.createElement(PipelineForm, Object.assign({ PipelineFormComponent: PipelineResourcesForm, formName: \"resources\", validationSchema: resourcesValidationSchema, obj: pageProps.obj }, pageProps)),\n        },\n    ] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/pipeline.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAGnD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,YAAY,CAAC;AAC5F,OAAO,EAAE,KAAK,EAAe,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AACjI,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAC1E,OAAO,qBAAqB,MAAM,gHAAgH,CAAC;AACnJ,OAAO,uBAAuB,MAAM,kGAAkG,CAAC;AAEvI,OAAO,EAAE,YAAY,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,MAAM,yEAAyE,CAAC;AAC7M,OAAO,EAAE,UAAU,EAAE,MAAM,0DAA0D,CAAC;AACtF,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,uBAAuB,MAAM,wCAAwC,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AAExE,MAAM,CAAC,MAAM,WAAW,GAAkB,CAAC,UAAU,EAAE,GAAG,KAAK,CAAC,2BAA2B,CAAC,aAAa,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErI,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;AAEhC,MAAM,kBAAkB,GAAG;IACzB,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;IACpB,KAAK,CAAC,WAAW;CAClB,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAAC,CAAa,EAAE,EAAE;IAC5C,OAAO;QACL;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,eAAe;YAC1B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,oBAAoB;YAC/B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,SAAS,EAAE,4BAA4B;YACvC,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,mBAAmB,CAAC,WAAW,GAAG,qBAAqB,CAAC;AAExD,MAAM,gBAAgB,GAA0B,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;;IACvF,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QACzE,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,QAAE,QAAQ,CAAC,QAAQ,0CAAE,IAAI,EAAE,SAAS,QAAE,QAAQ,CAAC,QAAQ,0CAAE,SAAS,EAAE,KAAK,QAAE,QAAQ,CAAC,QAAQ,0CAAE,GAAG,GAAI,CACzH;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC;YACtE,oBAAC,YAAY,IAAC,IAAI,EAAC,WAAW,EAAC,IAAI,QAAE,QAAQ,CAAC,QAAQ,0CAAE,SAAS,EAAE,KAAK,QAAE,QAAQ,CAAC,QAAQ,0CAAE,SAAS,GAAI,CAChG;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,SAAS,IAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,iBAAiB,GAAI,CACnD;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,uBAAuB,IAAC,QAAQ,EAAE,QAAQ,GAAI,CACrC,CACH,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,IAAY,EAAW,EAAE,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;AAEvI,MAAM,CAAC,MAAM,mBAAmB,GAAuC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC1F,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK;SAClC,MAAM,CAAC,CAAC,YAA0B,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;SAC9D,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACZ,KAAK,EAAE,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACtD,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;QACvB,WAAW,EAAE,IAAI,CAAC,IAAI;KACvB,CAAC,CAAC,CAAC;IAEN,OAAO,CACL,4BAAI,SAAS,EAAC,oBAAoB;QAChC,oBAAC,uBAAuB,IAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,OAAO,GAAG,CAChG,CACN,CAAC;AACJ,CAAC,CAAC;AAGF,MAAM,eAAe,GAAmC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5E,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAE,CAAC,CAAC,yCAAyC,EAAE,EAAE,CAAC,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAI;YACzG,oBAAC,qBAAqB,IAAC,QAAQ,EAAE,QAAQ,GAAI;YAC7C,6BAAK,SAAS,EAAC,KAAK;gBAClB,6BAAK,SAAS,EAAC,UAAU;oBACvB,oBAAC,eAAe,IAAC,QAAQ,EAAE,QAAQ,GAAI,CACnC;gBACN,6BAAK,SAAS,EAAC,UAAU;oBACvB,oBAAC,mBAAmB,IAAC,EAAE,EAAE,QAAQ,GAAI,CACjC,CACF,CACF,CACL,CACJ,CAAC;AACJ,CAAC,CAAA;AAED,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;AAEzC,MAAM,CAAC,MAAM,SAAS,GAAa,KAAK,CAAC,EAAE;IACzC,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,oBAAC,KAAK,oBAAK,KAAK,kBAAa,WAAW,EAAC,MAAM,EAAE,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,UAAU,UAAG,CAAA;AACjI,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAiC,KAAK,CAAC,EAAE;IACjE,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,OAAO,oBAAC,QAAQ,kBACd,KAAK,EAAE,CAAC,CAAC,wBAAwB,CAAC,EAClC,gBAAgB,EAAE,CAAC,CAAC,gCAAgC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,wBAAwB,CAAC,EAAE,CAAC,EACzF,SAAS,EAAE,IAAI,EACf,aAAa,EAAE,SAAS,EACxB,IAAI,EAAE,IAAI,IACN,KAAK,EACT,CAAC;AACL,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAwC,KAAK,CAAC,EAAE,CAAC,CAChF,oBAAC,WAAW,oBACN,KAAK,IACT,IAAI,EAAE,IAAI,EACV,WAAW,EAAE,WAAW,EACxB,KAAK,EAAE;QACL,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACrC,QAAQ,EAAE;QACV;YACE,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,eAAe;YACrB,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,oBAAC,gBAAgB,IAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,qBAAqB,EAAE,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAI;SACjM;QACD;YACE,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,YAAY;YAClB,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,oBAAC,YAAY,kBAAC,qBAAqB,EAAE,sBAAsB,EAAE,QAAQ,EAAC,YAAY,EAAC,gBAAgB,EAAE,0BAA0B,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,IAAM,SAAS,EAAI;SAC/L;QACD;YACE,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,oBAAC,YAAY,kBAAC,qBAAqB,EAAE,qBAAqB,EAAE,QAAQ,EAAC,WAAW,EAAC,gBAAgB,EAAE,yBAAyB,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,IAAM,SAAS,EAAI;SAC5L;KACF,IACD,CACH,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { PipelineModel, TaskModel, ClusterTaskModel } from '../../models';\nimport PipelineVisualization from '../../../packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport DynamicResourceLinkList from '../../../packages/dev-console/src/components/pipelines/resource-overview/DynamicResourceLinkList';\nimport { Pipeline } from './utils/pipeline-augment';\nimport { PipelineForm, PipelineParametersForm, PipelineResourcesForm, parametersValidationSchema, resourcesValidationSchema } from '../../../packages/dev-console/src/components/pipelines/detail-page-tabs';\nimport { addTrigger } from '../../../packages/dev-console/src/utils/pipeline-actions';\nimport { PipelineRunsPage } from './pipeline-run';\nimport PipelineRowKebabActions from './pipelines/pipeline-row-kebab-actions';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [addTrigger, ...Kebab.getExtensionsActionsForKind(PipelineModel), ...Kebab.factory.common];\n\nconst kind = PipelineModel.kind;\n\nconst tableColumnClasses = [\n  'col-xs-6 col-sm-4', // name\n  'col-xs-6 col-sm-4', // namespace\n  'col-sm-4 hidden-xs', // created\n  Kebab.columnClass,\n];\n\nconst PipelineTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\n\nPipelineTableHeader.displayName = 'PipelineTableHeader';\n\nconst PipelineTableRow: RowFunction<Pipeline> = ({ obj: pipeline, index, key, style }) => {\n  return (\n    <TableRow id={pipeline.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={pipeline.metadata?.name} namespace={pipeline.metadata?.namespace} title={pipeline.metadata?.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={pipeline.metadata?.namespace} title={pipeline.metadata?.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={pipeline.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <PipelineRowKebabActions pipeline={pipeline} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => (kind === ClusterTaskModel.kind ? ClusterTaskModel : TaskModel);\n\nexport const PipelineDetailsList: React.FC<PipelineDetailsListProps> = ({ ds: pipeline }) => {\n  const taskLinks = pipeline.spec.tasks\n    .filter((pipelineTask: PipelineTask) => !!pipelineTask.taskRef)\n    .map(task => ({\n      model: getResourceModelFromTaskKind(task.taskRef.kind),\n      name: task.taskRef.name,\n      displayName: task.name,\n    }));\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DynamicResourceLinkList namespace={pipeline.metadata.namespace} links={taskLinks} title=\"Tasks\" />\n    </dl>\n  );\n};\n\n\nconst PipelineDetails: React.FC<PipelineDetailsProps> = ({ obj: pipeline }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pipeline, t) })} />\n        <PipelineVisualization pipeline={pipeline} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={pipeline} />\n          </div>\n          <div className=\"col-lg-6\">\n            <PipelineDetailsList ds={pipeline} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nexport const Pipelines: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Pipelines\" Header={PipelineTableHeader.bind(null, t)} Row={PipelineTableRow} virtualize />\n};\n\nexport const PipelinesPage: React.FC<PipelinesPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_59')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_59') })}\n    canCreate={true}\n    ListComponent={Pipelines}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const PipelinesDetailsPage: React.FC<PipelinesDetailsPageProps> = props => (\n  <DetailsPage\n    {...props}\n    kind={kind}\n    menuActions={menuActions}\n    pages={[\n      details(detailsPage(PipelineDetails)),\n      editYaml(),\n      {\n        href: 'runs',\n        name: 'Pipeline Runs',\n        component: pageProps => <PipelineRunsPage showTitle={false} canCreate={false} namespace={pageProps.obj.metadata.namespace} selector={{ 'tekton.dev/pipeline': pageProps.obj.metadata.name, }} />,\n      },\n      {\n        href: 'parameters',\n        name: 'Parameters',\n        component: pageProps => <PipelineForm PipelineFormComponent={PipelineParametersForm} formName=\"parameters\" validationSchema={parametersValidationSchema} obj={pageProps.obj} {...pageProps} />,\n      },\n      {\n        href: 'resources',\n        name: 'Resources',\n        component: pageProps => <PipelineForm PipelineFormComponent={PipelineResourcesForm} formName=\"resources\" validationSchema={resourcesValidationSchema} obj={pageProps.obj} {...pageProps} />,\n      },\n    ]}\n  />\n);\n\ntype PipelineDetailsListProps = {\n  ds: Pipeline;\n};\n\ntype PipelinesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype PipelineDetailsProps = {\n  obj: Pipeline;\n};\n\ntype PipelinesDetailsPageProps = {\n  match: any;\n};\nexport interface PipelineTaskRef {\n  kind?: string;\n  name: string;\n}\n\nexport interface PipelineTaskParam {\n  name: string;\n  value: any;\n}\nexport interface PipelineTaskResources {\n  inputs?: PipelineTaskResource[];\n  outputs?: PipelineTaskResource[];\n}\nexport interface PipelineTaskResource {\n  name: string;\n  resource?: string;\n  from?: string[];\n}\nexport interface PipelineTask {\n  name: string;\n  runAfter?: string[];\n  taskRef: PipelineTaskRef;\n  params?: PipelineTaskParam[];\n  resources?: PipelineTaskResources;\n}\n"]}]}