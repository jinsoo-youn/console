{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/redux.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/redux.ts","mtime":1615298458760},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport * as _ from 'lodash-es';\nimport { featureReducer, featureReducerName } from './reducers/features';\nimport { monitoringReducer, monitoringReducerName } from './reducers/monitoring';\nimport k8sReducers from './reducers/k8s';\nimport UIReducers from './reducers/ui';\nimport { dashboardsReducer } from './reducers/dashboards';\nimport { registry } from './plugins';\nimport { isReduxReducer } from '@console/plugin-sdk';\nconst composeEnhancers = (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n/**\n * This is the entirety of the `redux-thunk` library.\n * It hasn't changed since 2016 and has problems with it's TypeScript definitions\n * (https://github.com/reduxjs/redux-thunk/issues/231), so just including it here.\n */\nfunction createThunkMiddleware(extraArgument) {\n    return ({ dispatch, getState }) => (next) => (action) => {\n        if (typeof action === 'function') {\n            return action(dispatch, getState, extraArgument);\n        }\n        return next(action);\n    };\n}\nconst thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\nconst baseReducers = Object.freeze({\n    k8s: k8sReducers,\n    UI: UIReducers,\n    [featureReducerName]: featureReducer,\n    [monitoringReducerName]: monitoringReducer,\n    dashboards: dashboardsReducer,\n});\nconst store = createStore(combineReducers(baseReducers), {}, composeEnhancers(applyMiddleware(thunk)));\nconst addPluginListener = () => {\n    const getReduxFlagsObject = () => {\n        const gatingFlags = registry.getGatingFlagNames([isReduxReducer]);\n        const featureState = store.getState()[featureReducerName];\n        return featureState ? _.pick(featureState.toObject(), gatingFlags) : null;\n    };\n    let flagsObject = getReduxFlagsObject();\n    store.subscribe(() => {\n        const currentFlagsObject = getReduxFlagsObject();\n        if (JSON.stringify(flagsObject) !== JSON.stringify(currentFlagsObject)) {\n            flagsObject = currentFlagsObject;\n            const pluginReducerExtensions = registry\n                .getReduxReducers()\n                .filter((e) => registry.isExtensionInUse(e, flagsObject));\n            const pluginReducers = pluginReducerExtensions.reduce((map, e) => {\n                map[e.properties.namespace] = e.properties.reducer;\n                return map;\n            }, {});\n            const nextReducers = _.isEmpty(pluginReducers)\n                ? baseReducers\n                : Object.assign({ plugins: combineReducers(pluginReducers) }, baseReducers);\n            store.replaceReducer(combineReducers(nextReducers));\n        }\n    });\n};\naddPluginListener();\nif (process.env.NODE_ENV !== 'production') {\n    // Expose Redux store for debugging\n    window.store = store;\n}\nexport default store;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/redux.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/redux.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,EAAE,OAAO,EAAqB,MAAM,OAAO,CAAC;AAClG,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAgB,MAAM,qBAAqB,CAAC;AACvF,OAAO,EAAE,iBAAiB,EAAE,qBAAqB,EAAmB,MAAM,uBAAuB,CAAC;AAClG,OAAO,WAAyB,MAAM,gBAAgB,CAAC;AACvD,OAAO,UAAuB,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,iBAAiB,EAAmB,MAAM,uBAAuB,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AACrC,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,MAAM,gBAAgB,GACpB,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,MAAM,CAAC,oCAAoC,CAAC,IAAI,OAAO,CAAC;AAEpG;;;;GAIG;AACH,SAAS,qBAAqB,CAAC,aAAc;IAC3C,OAAO,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE;QACtD,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YAChC,OAAO,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;SAClD;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,KAAK,GAAG,qBAAqB,EAAE,CAAC;AACrC,KAAa,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;AAazD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;IACjC,GAAG,EAAE,WAAW;IAChB,EAAE,EAAE,UAAU;IACd,CAAC,kBAAkB,CAAC,EAAE,cAAc;IACpC,CAAC,qBAAqB,CAAC,EAAE,iBAAiB;IAC1C,UAAU,EAAE,iBAAiB;CAC9B,CAAC,CAAC;AAEH,MAAM,KAAK,GAAG,WAAW,CACvB,eAAe,CAAY,YAAY,CAAC,EACxC,EAAE,EACF,gBAAgB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CACzC,CAAC;AAEF,MAAM,iBAAiB,GAAG,GAAG,EAAE;IAC7B,MAAM,mBAAmB,GAAG,GAAG,EAAE;QAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAClE,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,CAAC;QAC1D,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5E,CAAC,CAAC;IAEF,IAAI,WAAW,GAAG,mBAAmB,EAAE,CAAC;IAExC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,MAAM,kBAAkB,GAAG,mBAAmB,EAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE;YACtE,WAAW,GAAG,kBAAkB,CAAC;YAEjC,MAAM,uBAAuB,GAAG,QAAQ;iBACrC,gBAAgB,EAAE;iBAClB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;YAE5D,MAAM,cAAc,GAAsB,uBAAuB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;gBAClF,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;gBACnD,OAAO,GAAG,CAAC;YACb,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,MAAM,YAAY,GAAiC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC;gBAC1E,CAAC,CAAC,YAAY;gBACd,CAAC,iBAAG,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,IAAK,YAAY,CAAE,CAAC;YAElE,KAAK,CAAC,cAAc,CAAC,eAAe,CAAY,YAAY,CAAC,CAAC,CAAC;SAChE;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,iBAAiB,EAAE,CAAC;AAEpB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,mCAAmC;IACnC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;CACtB;AAED,eAAe,KAAK,CAAC","sourcesContent":["import { applyMiddleware, combineReducers, createStore, compose, ReducersMapObject } from 'redux';\nimport * as _ from 'lodash-es';\n\nimport { featureReducer, featureReducerName, FeatureState } from './reducers/features';\nimport { monitoringReducer, monitoringReducerName, MonitoringState } from './reducers/monitoring';\nimport k8sReducers, { K8sState } from './reducers/k8s';\nimport UIReducers, { UIState } from './reducers/ui';\nimport { dashboardsReducer, DashboardsState } from './reducers/dashboards';\nimport { registry } from './plugins';\nimport { isReduxReducer } from '@console/plugin-sdk';\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n/**\n * This is the entirety of the `redux-thunk` library.\n * It hasn't changed since 2016 and has problems with it's TypeScript definitions\n * (https://github.com/reduxjs/redux-thunk/issues/231), so just including it here.\n */\nfunction createThunkMiddleware(extraArgument?) {\n  return ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === 'function') {\n      return action(dispatch, getState, extraArgument);\n    }\n\n    return next(action);\n  };\n}\n\nconst thunk = createThunkMiddleware();\n(thunk as any).withExtraArgument = createThunkMiddleware;\n\nexport type RootState = {\n  k8s: K8sState;\n  UI: UIState;\n  [featureReducerName]: FeatureState;\n  [monitoringReducerName]: MonitoringState;\n  dashboards: DashboardsState;\n  plugins?: {\n    [namespace: string]: any;\n  };\n};\n\nconst baseReducers = Object.freeze({\n  k8s: k8sReducers, // data\n  UI: UIReducers,\n  [featureReducerName]: featureReducer,\n  [monitoringReducerName]: monitoringReducer,\n  dashboards: dashboardsReducer,\n});\n\nconst store = createStore(\n  combineReducers<RootState>(baseReducers),\n  {},\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nconst addPluginListener = () => {\n  const getReduxFlagsObject = () => {\n    const gatingFlags = registry.getGatingFlagNames([isReduxReducer]);\n    const featureState = store.getState()[featureReducerName];\n    return featureState ? _.pick(featureState.toObject(), gatingFlags) : null;\n  };\n\n  let flagsObject = getReduxFlagsObject();\n\n  store.subscribe(() => {\n    const currentFlagsObject = getReduxFlagsObject();\n\n    if (JSON.stringify(flagsObject) !== JSON.stringify(currentFlagsObject)) {\n      flagsObject = currentFlagsObject;\n\n      const pluginReducerExtensions = registry\n        .getReduxReducers()\n        .filter((e) => registry.isExtensionInUse(e, flagsObject));\n\n      const pluginReducers: ReducersMapObject = pluginReducerExtensions.reduce((map, e) => {\n        map[e.properties.namespace] = e.properties.reducer;\n        return map;\n      }, {});\n\n      const nextReducers: ReducersMapObject<RootState> = _.isEmpty(pluginReducers)\n        ? baseReducers\n        : { plugins: combineReducers(pluginReducers), ...baseReducers };\n\n      store.replaceReducer(combineReducers<RootState>(nextReducers));\n    }\n  });\n};\n\naddPluginListener();\n\nif (process.env.NODE_ENV !== 'production') {\n  // Expose Redux store for debugging\n  window.store = store;\n}\n\nexport default store;\n"]}]}