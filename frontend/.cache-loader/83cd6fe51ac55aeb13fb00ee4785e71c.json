{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-cpu-patches.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-cpu-patches.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { PatchBuilder } from '@console/shared/src/k8s';\nimport { getVMLikePatches } from '../vm-template';\nimport { getCPU, getResourcesRequestsCPUCount, getResourcesLimitsCPUCount, asVM, } from '../../../selectors/vm';\nexport const getDedicatedCpuPatch = (vmLikeEntity, dedicatedCpuPlacement) => {\n    const vm = asVM(vmLikeEntity);\n    const isCPUAvailable = !!getCPU(vm);\n    const patches = [];\n    if (isCPUAvailable) {\n        patches.push(new PatchBuilder('/spec/template/spec/domain/cpu/dedicatedCpuPlacement')\n            .replace(dedicatedCpuPlacement)\n            .build());\n    }\n    else {\n        const resourcesCPU = getResourcesRequestsCPUCount(vm) || getResourcesLimitsCPUCount(vm);\n        patches.push(new PatchBuilder('/spec/template/spec/domain/cpu')\n            .replace(resourcesCPU ? { dedicatedCpuPlacement } : { cores: 1, dedicatedCpuPlacement })\n            .build());\n    }\n    return getVMLikePatches(vmLikeEntity, () => patches);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-cpu-patches.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-cpu-patches.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAGvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EACL,MAAM,EACN,4BAA4B,EAC5B,0BAA0B,EAC1B,IAAI,GACL,MAAM,uBAAuB,CAAC;AAE/B,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,YAA8B,EAC9B,qBAA8B,EACrB,EAAE;IACX,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9B,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpC,MAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,IAAI,cAAc,EAAE;QAClB,OAAO,CAAC,IAAI,CACV,IAAI,YAAY,CAAC,sDAAsD,CAAC;aACrE,OAAO,CAAC,qBAAqB,CAAC;aAC9B,KAAK,EAAE,CACX,CAAC;KACH;SAAM;QACL,MAAM,YAAY,GAAG,4BAA4B,CAAC,EAAE,CAAC,IAAI,0BAA0B,CAAC,EAAE,CAAC,CAAC;QACxF,OAAO,CAAC,IAAI,CACV,IAAI,YAAY,CAAC,gCAAgC,CAAC;aAC/C,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,qBAAqB,EAAE,CAAC;aACvF,KAAK,EAAE,CACX,CAAC;KACH;IAED,OAAO,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;AACvD,CAAC,CAAC","sourcesContent":["import { PatchBuilder } from '@console/shared/src/k8s';\nimport { Patch } from '@console/internal/module/k8s';\nimport { VMLikeEntityKind } from '../../../types/vmLike';\nimport { getVMLikePatches } from '../vm-template';\nimport {\n  getCPU,\n  getResourcesRequestsCPUCount,\n  getResourcesLimitsCPUCount,\n  asVM,\n} from '../../../selectors/vm';\n\nexport const getDedicatedCpuPatch = (\n  vmLikeEntity: VMLikeEntityKind,\n  dedicatedCpuPlacement: boolean,\n): Patch[] => {\n  const vm = asVM(vmLikeEntity);\n  const isCPUAvailable = !!getCPU(vm);\n  const patches = [];\n\n  if (isCPUAvailable) {\n    patches.push(\n      new PatchBuilder('/spec/template/spec/domain/cpu/dedicatedCpuPlacement')\n        .replace(dedicatedCpuPlacement)\n        .build(),\n    );\n  } else {\n    const resourcesCPU = getResourcesRequestsCPUCount(vm) || getResourcesLimitsCPUCount(vm);\n    patches.push(\n      new PatchBuilder('/spec/template/spec/domain/cpu')\n        .replace(resourcesCPU ? { dedicatedCpuPlacement } : { cores: 1, dedicatedCpuPlacement })\n        .build(),\n    );\n  }\n\n  return getVMLikePatches(vmLikeEntity, () => patches);\n};\n"]}]}