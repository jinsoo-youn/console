{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-namespace.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-namespace.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedNamespaceModel } from '../../models';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(FederatedNamespaceModel), ...Kebab.factory.common];\n// export const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedNamespaceModel), EditHealthChecks, ...Kebab.factory.common];\nconst kind = FederatedNamespaceModel.kind;\nconst tableColumnClasses = ['', classNames('pf-m-hidden', 'pf-m-visible-on-sm'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst FederatedNamespaceTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nFederatedNamespaceTableHeader.displayName = 'FederatedNamespaceTableHeader';\nconst FederatedNamespaceTableRow = ({ obj: namespace, index, key, style }) => {\n    return (React.createElement(TableRow, { id: namespace.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: namespace.metadata.name, namespace: namespace.metadata.namespace, title: namespace.metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            React.createElement(LabelList, { kind: kind, labels: namespace.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Timestamp, { timestamp: namespace.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: namespace }))));\n};\nconst FederatedNamespaceDetails = ({ obj: namespace }) => (React.createElement(React.Fragment, null,\n    React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Federated Namespace Details\" }),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-lg-6\" },\n                React.createElement(ResourceSummary, { resource: namespace }))))));\nconst { details, editYaml, events } = navFactory;\nexport const FederatedNamespaces = props => React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Federated Namespaces\", Header: FederatedNamespaceTableHeader, Row: FederatedNamespaceTableRow, virtualize: true }));\nexport const FederatedNamespacesPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: FederatedNamespaces, kind: kind }, props));\nexport const FederatedNamespacesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(FederatedNamespaceDetails)), editYaml(), events(ResourceEventStream)] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-namespace.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-namespace.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n// import { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedNamespaceModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(FederatedNamespaceModel), ...Kebab.factory.common];\n// export const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedNamespaceModel), EditHealthChecks, ...Kebab.factory.common];\n\nconst kind = FederatedNamespaceModel.kind;\n\nconst tableColumnClasses = ['', classNames('pf-m-hidden', 'pf-m-visible-on-sm'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedNamespaceTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nFederatedNamespaceTableHeader.displayName = 'FederatedNamespaceTableHeader';\n\nconst FederatedNamespaceTableRow: RowFunction<K8sResourceKind> = ({ obj: namespace, index, key, style }) => {\n  return (\n    <TableRow id={namespace.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={namespace.metadata.name} namespace={namespace.metadata.namespace} title={namespace.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <LabelList kind={kind} labels={namespace.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={namespace.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={namespace} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst FederatedNamespaceDetails: React.FC<FederatedNamespaceDetailsProps> = ({ obj: namespace }) => (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Federated Namespace Details\" />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={namespace} />\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nconst { details, editYaml, events } = navFactory;\nexport const FederatedNamespaces: React.FC = props => <Table {...props} aria-label=\"Federated Namespaces\" Header={FederatedNamespaceTableHeader} Row={FederatedNamespaceTableRow} virtualize />;\n\nexport const FederatedNamespacesPage: React.FC<FederatedNamespacesPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedNamespaces} kind={kind} {...props} />;\n\nexport const FederatedNamespacesDetailsPage: React.FC<FederatedNamespacesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedNamespaceDetails)), editYaml(), events(ResourceEventStream)]} />;\n\ntype FederatedNamespaceDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedNamespacesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedNamespacesDetailsPageProps = {\n  match: any;\n};\n"]}]}