{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/k8s-resource.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/k8s-resource.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { ResourceLink, Timestamp, MsgBox, } from '@console/internal/components/utils';\nimport { MultiListPage, Table, TableRow, TableData, } from '@console/internal/components/factory';\nimport { kindForReference, modelFor, referenceForGroupVersionKind, } from '@console/internal/module/k8s';\nimport { referenceForProvidedAPI, providedAPIsFor } from './index';\nimport { OperandLink } from './operand/operand-link';\nconst tableColumnClasses = [\n    classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n    classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'col-xs-6'),\n    classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'hidden-xs'),\n];\nexport const ResourceTableHeader = () => [\n    {\n        title: 'Name',\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n    },\n    {\n        title: 'Kind',\n        sortField: 'kind',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n    },\n    {\n        title: 'Status',\n        sortField: 'status.phase',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n    },\n    {\n        title: 'Created',\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n    },\n];\nexport const ResourceTableRow = ({ obj, index, style, customData: { linkFor } }) => (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: obj.metadata.uid, style: style },\n    React.createElement(TableData, { className: tableColumnClasses[0] }, linkFor(obj)),\n    React.createElement(TableData, { className: tableColumnClasses[1] }, obj.kind),\n    React.createElement(TableData, { className: tableColumnClasses[2] },\n        React.createElement(Status, { status: _.get(obj.status, 'phase', 'Created') })),\n    React.createElement(TableData, { className: tableColumnClasses[3] },\n        React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp }))));\nexport const ResourceTable = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Operand Resources\", Header: ResourceTableHeader, Row: ResourceTableRow, EmptyMsg: () => (React.createElement(MsgBox, { title: \"No Resources Found\", detail: \"There are no Kubernetes resources used by this operand.\" })), virtualize: true })));\nexport const Resources = (props) => {\n    const providedAPI = providedAPIsFor(props.clusterServiceVersion).find((desc) => referenceForProvidedAPI(desc) === props.match.params.plural);\n    const defaultResources = ['Deployment', 'Service', 'ReplicaSet', 'Pod', 'Secret', 'ConfigMap'];\n    const firehoseResources = _.get(providedAPI, 'resources', defaultResources.map((kind) => ({\n        kind,\n    }))).map(({ name, kind, version }) => {\n        const group = name ? name.substring(name.indexOf('.') + 1) : '';\n        const reference = group ? referenceForGroupVersionKind(group)(version)(kind) : kind;\n        const model = modelFor(reference);\n        return {\n            kind: model && !model.crd ? kind : reference,\n            namespaced: model ? model.namespaced : true,\n            prop: kind,\n        };\n    });\n    // NOTE: This is us building the `ownerReferences` graph client-side\n    const flattenFor = (parentObj) => (resources) => {\n        return _.flatMap(resources, (resource, kind) => _.map(resource.data, (item) => (Object.assign(Object.assign({}, item), { kind })))).reduce((owned, resource) => {\n            return (resource.metadata.ownerReferences || []).some((ref) => ref.uid === parentObj.metadata.uid ||\n                owned.some(({ metadata }) => metadata.uid === ref.uid))\n                ? owned.concat([resource])\n                : owned;\n        }, []);\n    };\n    // FIXME: Comparing `kind` is not enough to determine if an object is a custom resource\n    const linkFor = (obj) => obj.metadata.namespace &&\n        _.get(providedAPI, 'resources', []).some(({ kind, name }) => name && kind === obj.kind) ? (React.createElement(OperandLink, { obj: obj })) : (React.createElement(ResourceLink, { kind: obj.kind, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name }));\n    return (React.createElement(MultiListPage, { filterLabel: \"Resources by name\", resources: firehoseResources, rowFilters: [\n            {\n                type: 'clusterserviceversion-resource-kind',\n                filterGroupName: 'Kind',\n                reducer: ({ kind }) => kindForReference(kind),\n                items: firehoseResources.map(({ kind }) => ({\n                    id: kindForReference(kind),\n                    title: kindForReference(kind),\n                })),\n            },\n        ], flatten: flattenFor(props.obj), namespace: props.obj.metadata.namespace, ListComponent: ResourceTable, customData: { linkFor } }));\n};\nResourceTableHeader.displayName = 'ResourceTableHeader';\nResourceTable.displayName = 'ResourceTable';\nResources.displayName = 'Resources';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/k8s-resource.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/k8s-resource.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { match } from 'react-router';\nimport { Status } from '@console/shared';\nimport {\n  ResourceLink,\n  Timestamp,\n  MsgBox,\n  FirehoseResource,\n} from '@console/internal/components/utils';\nimport {\n  MultiListPage,\n  Table,\n  TableRow,\n  TableData,\n  RowFunction,\n} from '@console/internal/components/factory';\nimport {\n  K8sResourceKind,\n  GroupVersionKind,\n  kindForReference,\n  modelFor,\n  referenceForGroupVersionKind,\n} from '@console/internal/module/k8s';\nimport { CRDDescription, ClusterServiceVersionKind } from '../types';\nimport { referenceForProvidedAPI, providedAPIsFor } from './index';\nimport { OperandLink } from './operand/operand-link';\n\nconst tableColumnClasses = [\n  classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-4', 'col-md-4', 'col-sm-4', 'hidden-xs'),\n];\n\nexport const ResourceTableHeader = () => [\n  {\n    title: 'Name',\n    sortField: 'metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: 'Kind',\n    sortField: 'kind',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[1] },\n  },\n  {\n    title: 'Status',\n    sortField: 'status.phase',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  },\n  {\n    title: 'Created',\n    sortField: 'metadata.creationTimestamp',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[3] },\n  },\n];\n\nexport const ResourceTableRow: RowFunction<\n  K8sResourceKind,\n  {\n    linkFor: (obj: K8sResourceKind) => JSX.Element;\n  }\n> = ({ obj, index, style, customData: { linkFor } }) => (\n  <TableRow id={obj.metadata.uid} index={index} trKey={obj.metadata.uid} style={style}>\n    <TableData className={tableColumnClasses[0]}>{linkFor(obj)}</TableData>\n    <TableData className={tableColumnClasses[1]}>{obj.kind}</TableData>\n    <TableData className={tableColumnClasses[2]}>\n      <Status status={_.get(obj.status, 'phase', 'Created')} />\n    </TableData>\n    <TableData className={tableColumnClasses[3]}>\n      <Timestamp timestamp={obj.metadata.creationTimestamp} />\n    </TableData>\n  </TableRow>\n);\n\nexport const ResourceTable: React.FC<ResourceTableProps> = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Operand Resources\"\n    Header={ResourceTableHeader}\n    Row={ResourceTableRow}\n    EmptyMsg={() => (\n      <MsgBox\n        title=\"No Resources Found\"\n        detail=\"There are no Kubernetes resources used by this operand.\"\n      />\n    )}\n    virtualize\n  />\n);\n\nexport const Resources: React.FC<ResourcesProps> = (props) => {\n  const providedAPI = providedAPIsFor(props.clusterServiceVersion).find(\n    (desc) => referenceForProvidedAPI(desc) === props.match.params.plural,\n  );\n\n  const defaultResources = ['Deployment', 'Service', 'ReplicaSet', 'Pod', 'Secret', 'ConfigMap'];\n  const firehoseResources = _.get(\n    providedAPI,\n    'resources',\n    defaultResources.map((kind) => ({\n      kind,\n    })) as CRDDescription['resources'],\n  ).map(\n    ({ name, kind, version }): FirehoseResource => {\n      const group = name ? name.substring(name.indexOf('.') + 1) : '';\n      const reference = group ? referenceForGroupVersionKind(group)(version)(kind) : kind;\n      const model = modelFor(reference);\n      return {\n        kind: model && !model.crd ? kind : reference,\n        namespaced: model ? model.namespaced : true,\n        prop: kind,\n      };\n    },\n  );\n\n  // NOTE: This is us building the `ownerReferences` graph client-side\n  const flattenFor = (parentObj: K8sResourceKind) => (resources: {\n    [kind: string]: { data: K8sResourceKind[] };\n  }) => {\n    return _.flatMap(resources, (resource, kind: string) =>\n      _.map(resource.data, (item) => ({ ...item, kind })),\n    ).reduce((owned, resource) => {\n      return (resource.metadata.ownerReferences || []).some(\n        (ref) =>\n          ref.uid === parentObj.metadata.uid ||\n          owned.some(({ metadata }) => metadata.uid === ref.uid),\n      )\n        ? owned.concat([resource])\n        : owned;\n    }, [] as K8sResourceKind[]);\n  };\n\n  // FIXME: Comparing `kind` is not enough to determine if an object is a custom resource\n  const linkFor = (obj: K8sResourceKind) =>\n    obj.metadata.namespace &&\n    _.get(providedAPI, 'resources', []).some(({ kind, name }) => name && kind === obj.kind) ? (\n      <OperandLink obj={obj} />\n    ) : (\n      <ResourceLink\n        kind={obj.kind}\n        name={obj.metadata.name}\n        namespace={obj.metadata.namespace}\n        title={obj.metadata.name}\n      />\n    );\n\n  return (\n    <MultiListPage\n      filterLabel=\"Resources by name\"\n      resources={firehoseResources}\n      rowFilters={[\n        {\n          type: 'clusterserviceversion-resource-kind',\n          filterGroupName: 'Kind',\n          reducer: ({ kind }) => kindForReference(kind),\n          items: firehoseResources.map(({ kind }) => ({\n            id: kindForReference(kind),\n            title: kindForReference(kind),\n          })),\n        },\n      ]}\n      flatten={flattenFor(props.obj)}\n      namespace={props.obj.metadata.namespace}\n      ListComponent={ResourceTable}\n      customData={{ linkFor }}\n    />\n  );\n};\n\nexport type ResourcesProps = {\n  obj: K8sResourceKind;\n  clusterServiceVersion: ClusterServiceVersionKind;\n  match: match<{ plural: GroupVersionKind; ns: string; appName: string; name: string }>;\n};\n\nexport type ResourceListProps = {};\n\nexport type ResourceTableProps = {\n  loaded: boolean;\n  loadError?: string;\n  data: K8sResourceKind[];\n  linkFor: (obj: K8sResourceKind) => JSX.Element;\n};\n\nResourceTableHeader.displayName = 'ResourceTableHeader';\nResourceTable.displayName = 'ResourceTable';\nResources.displayName = 'Resources';\n"]}]}