{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/strings.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/strings.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const COULD_NOT_LOAD_DATA = 'Could not load data';\nexport const CREATED = 'created';\nexport const CREATED_WITH_FAILED_CLEANUP = 'created & failed to clean up';\nexport const CREATED_WITH_CLEANUP = 'created & cleaned up';\nexport const FAILED_TO_CREATE = 'failed to create';\nexport const FAILED_TO_PATCH = 'failed to patch';\nexport const DYNAMIC = 'Dynamic';\nexport const EDIT = 'Edit';\nexport const SAVE = 'Save';\nexport const ADD = 'Add';\nexport const ADD_DISK = 'Add Disk';\nexport const ADD_NETWORK_INTERFACE = 'Add Network Interface';\nexport const getDialogUIError = (hasAllRequiredFilled) => hasAllRequiredFilled\n    ? 'Please correct the invalid fields.'\n    : 'Please fill in all required fields.';\nexport const getSimpleDialogUIError = (hasAllRequiredFilled) => hasAllRequiredFilled ? 'Some fields are not correct' : 'Required fields not completed';\nexport const getBooleanReadableValue = (value) => (value ? 'yes' : 'no');\nexport const getBooleanAsEnabledValue = (value) => (value ? 'Enabled' : 'Not Enabled');\nexport const getSequenceName = (name, usedSequenceNames) => {\n    if (!usedSequenceNames) {\n        return `${name}-${0}`;\n    }\n    for (let i = 0; i < usedSequenceNames.size + 1; i++) {\n        const sequenceName = `${name}-${i}`;\n        if (!usedSequenceNames.has(sequenceName)) {\n            return sequenceName;\n        }\n    }\n    return null;\n};\nexport const pluralize = (i, singular, plural = `${singular}s`) => i === 1 ? singular : plural;\nexport const intervalBracket = (isInclusive, leftValue, rightValue) => {\n    if (leftValue) {\n        return isInclusive && Number.isFinite(leftValue) ? '[' : '(';\n    }\n    return isInclusive && Number.isFinite(rightValue) ? ']' : ')';\n};\nexport const createUniqueNameResolver = (data) => {\n    const nameCounts = (data || [])\n        .filter(({ name }) => name)\n        .reduce((acc, { name }) => {\n        if (acc[name]) {\n            acc[name].max++;\n        }\n        else {\n            acc[name] = { max: 1, next: 1 };\n        }\n        return acc;\n    }, {});\n    return (name) => {\n        if (!name) {\n            return name;\n        }\n        if (nameCounts[name].max === 1) {\n            return name;\n        }\n        nameCounts[name].next++;\n        return `${name}-${nameCounts[name].next - 1}`;\n    };\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/strings.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/strings.ts"],"names":[],"mappings":"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","sourcesContent":["export const COULD_NOT_LOAD_DATA = 'Could not load data';\n\nexport const CREATED = 'created';\nexport const CREATED_WITH_FAILED_CLEANUP = 'created & failed to clean up';\nexport const CREATED_WITH_CLEANUP = 'created & cleaned up';\nexport const FAILED_TO_CREATE = 'failed to create';\nexport const FAILED_TO_PATCH = 'failed to patch';\nexport const DYNAMIC = 'Dynamic';\n\nexport const EDIT = 'Edit';\nexport const SAVE = 'Save';\nexport const ADD = 'Add';\n\nexport const ADD_DISK = 'Add Disk';\nexport const ADD_NETWORK_INTERFACE = 'Add Network Interface';\n\nexport const getDialogUIError = (hasAllRequiredFilled) =>\n  hasAllRequiredFilled\n    ? 'Please correct the invalid fields.'\n    : 'Please fill in all required fields.';\n\nexport const getSimpleDialogUIError = (hasAllRequiredFilled) =>\n  hasAllRequiredFilled ? 'Some fields are not correct' : 'Required fields not completed';\n\nexport const getBooleanReadableValue = (value: boolean) => (value ? 'yes' : 'no');\n\nexport const getBooleanAsEnabledValue = (value: boolean) => (value ? 'Enabled' : 'Not Enabled');\n\nexport const getSequenceName = (name: string, usedSequenceNames?: Set<string>) => {\n  if (!usedSequenceNames) {\n    return `${name}-${0}`;\n  }\n\n  for (let i = 0; i < usedSequenceNames.size + 1; i++) {\n    const sequenceName = `${name}-${i}`;\n    if (!usedSequenceNames.has(sequenceName)) {\n      return sequenceName;\n    }\n  }\n  return null;\n};\n\nexport const pluralize = (i: number, singular: string, plural: string = `${singular}s`) =>\n  i === 1 ? singular : plural;\n\nexport const intervalBracket = (isInclusive: boolean, leftValue?: number, rightValue?: number) => {\n  if (leftValue) {\n    return isInclusive && Number.isFinite(leftValue) ? '[' : '(';\n  }\n\n  return isInclusive && Number.isFinite(rightValue) ? ']' : ')';\n};\n\nexport const createUniqueNameResolver = (data: { name: string }[]) => {\n  const nameCounts = (data || [])\n    .filter(({ name }) => name)\n    .reduce((acc, { name }) => {\n      if (acc[name]) {\n        acc[name].max++;\n      } else {\n        acc[name] = { max: 1, next: 1 };\n      }\n      return acc;\n    }, {});\n\n  return (name: string) => {\n    if (!name) {\n      return name;\n    }\n    if (nameCounts[name].max === 1) {\n      return name;\n    }\n    nameCounts[name].next++;\n    return `${name}-${nameCounts[name].next - 1}`;\n  };\n};\n"]}]}