{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/work-space-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/work-space-modal.tsx","mtime":1617848124060},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Section } from '../../utils/section';\nimport { RadioGroup } from '../../utils/radio';\nimport { TextInput } from '../../utils/text-input';\nexport const WorkSpaceModal = ({ methods, workSpace }) => {\n    const accessModeItem = [\n        // RadioGroup 컴포넌트에 넣어줄 items\n        {\n            title: 'ReadWrite',\n            value: 'readWrite',\n        },\n        {\n            title: 'ReadOnly',\n            value: 'readOnly',\n        },\n    ];\n    let template;\n    //modify 기능 용\n    let target = document.getElementById('work-space-list');\n    let modalType = target && [...target.childNodes].some(cur => cur['dataset']['modify'] === 'true') ? 'modify' : 'add';\n    if (modalType === 'modify') {\n        let list = target.childNodes;\n        list.forEach((cur, idx) => {\n            if (cur['dataset']['modify'] === 'true') {\n                template = workSpace[idx];\n                // index = idx;\n            }\n        });\n    }\n    const [option, setOption] = React.useState(template === null || template === void 0 ? void 0 : template.option);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Section, { label: \"Name\", id: \"workspace_name\", isRequired: true },\n            React.createElement(TextInput, { id: \"name\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.name : '' })),\n        React.createElement(Section, { label: \"Description\", id: \"workspace_desc\" },\n            React.createElement(TextInput, { id: \"description\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.description : '' })),\n        React.createElement(Section, { label: \"\\uB9C8\\uC6B4\\uD2B8 \\uACBD\\uB85C\", id: \"workspace_path\" },\n            React.createElement(TextInput, { id: \"path\", inputClassName: \"col-md-12\", methods: methods, defaultValue: modalType === 'modify' ? template.path : '' })),\n        React.createElement(Section, { label: \"\\uC811\\uADFC \\uBAA8\\uB4DC\", id: \"workspace_access\" },\n            React.createElement(RadioGroup, { methods: methods, name: \"accessMode\" // 서버에 보낼 데이터에서의 path (필수)\n                , items: accessModeItem, inline: true })),\n        React.createElement(\"label\", null,\n            React.createElement(\"input\", { name: \"option\", type: \"checkbox\", ref: methods.register(), checked: option, onClick: () => {\n                    setOption(!option);\n                } }),\n            \"\\uC774 \\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4\\uB97C \\uC120\\uD0DD \\uD56D\\uBAA9\\uC73C\\uB85C \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4.\"),\n        React.createElement(\"p\", null, \"\\uC120\\uD0DD \\uD56D\\uBAA9\\uC73C\\uB85C \\uC81C\\uACF5\\uD560 \\uACBD\\uC6B0, \\uD0DC\\uC2A4\\uD06C \\uB7F0 \\uB610\\uB294 \\uD30C\\uC774\\uD504\\uB77C\\uC778 \\uBA54\\uB274\\uC5D0\\uC11C \\uD30C\\uC774\\uD504\\uB77C\\uC778 \\uC6CC\\uD06C\\uC2A4\\uD398\\uC774\\uC2A4\\uB97C \\uD544\\uC694\\uC5D0 \\uB530\\uB77C \\uD560\\uB2F9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/work-space-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/tasks/work-space-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Section } from '../../utils/section';\nimport { RadioGroup } from '../../utils/radio';\nimport { TextInput } from '../../utils/text-input';\n\nexport const WorkSpaceModal: React.FC<WorkSpaceModalProps> = ({ methods, workSpace }) => {\n  const accessModeItem = [\n    // RadioGroup 컴포넌트에 넣어줄 items\n    {\n      title: 'ReadWrite',\n      value: 'readWrite',\n    },\n    {\n      title: 'ReadOnly',\n      value: 'readOnly',\n    },\n  ];\n  let template;\n\n  //modify 기능 용\n  let target = document.getElementById('work-space-list');\n  let modalType = target && [...target.childNodes].some(cur => cur['dataset']['modify'] === 'true') ? 'modify' : 'add';\n  if (modalType === 'modify') {\n    let list = target.childNodes;\n    list.forEach((cur, idx) => {\n      if (cur['dataset']['modify'] === 'true') {\n        template = workSpace[idx];\n        // index = idx;\n      }\n    });\n  }\n  const [option, setOption] = React.useState(template?.option);\n\n  return (\n    <>\n      <Section label=\"Name\" id=\"workspace_name\" isRequired={true}>\n        <TextInput id=\"name\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.name : ''} />\n      </Section>\n      <Section label=\"Description\" id=\"workspace_desc\">\n        <TextInput id=\"description\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.description : ''} />\n      </Section>\n      <Section label=\"마운트 경로\" id=\"workspace_path\">\n        <TextInput id=\"path\" inputClassName=\"col-md-12\" methods={methods} defaultValue={modalType === 'modify' ? template.path : ''} />\n      </Section>\n      <Section label=\"접근 모드\" id=\"workspace_access\">\n        <RadioGroup\n          methods={methods}\n          name=\"accessMode\" // 서버에 보낼 데이터에서의 path (필수)\n          items={accessModeItem} // [{title: '', value: ''}] (필수)\n          inline={true} // inline속성 먹일거면 true, 아니면 빼면 됨 (선택)\n        />\n      </Section>\n      <label>\n        <input\n          name=\"option\"\n          type=\"checkbox\"\n          ref={methods.register()}\n          checked={option}\n          onClick={() => {\n            setOption(!option);\n          }}\n        />\n        이 워크스페이스를 선택 항목으로 제공합니다.\n      </label>\n      <p>선택 항목으로 제공할 경우, 태스크 런 또는 파이프라인 메뉴에서 파이프라인 워크스페이스를 필요에 따라 할당할 수 있습니다.</p>\n    </>\n  );\n};\n\ntype WorkSpaceModalProps = {\n  methods: any;\n  workSpace: any;\n};\n"]}]}