{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/multicolumn-field-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/multicolumn-field-utils.ts","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport const getSpans = (totalFieldCount) => {\n    const spans = _.fill(Array(totalFieldCount), Math.trunc(12 / totalFieldCount));\n    let remainder = 12 % totalFieldCount;\n    while (remainder--) {\n        spans[remainder]++;\n    }\n    return spans;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/multicolumn-field-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/multicolumn-field-utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAG5B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,eAAuC,EAA4B,EAAE;IAC5F,MAAM,KAAK,GAA6B,CAAC,CAAC,IAAI,CAC5C,KAAK,CAAC,eAAe,CAAC,EACtB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,eAAe,CAAC,CACL,CAAC;IAE9B,IAAI,SAAS,GAAG,EAAE,GAAG,eAAe,CAAC;IAErC,OAAO,SAAS,EAAE,EAAE;QAClB,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;KACpB;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { gridItemSpanValueShape } from '@patternfly/react-core';\n\nexport const getSpans = (totalFieldCount: gridItemSpanValueShape): gridItemSpanValueShape[] => {\n  const spans: gridItemSpanValueShape[] = _.fill(\n    Array(totalFieldCount),\n    Math.trunc(12 / totalFieldCount),\n  ) as gridItemSpanValueShape[];\n\n  let remainder = 12 % totalFieldCount;\n\n  while (remainder--) {\n    spans[remainder]++;\n  }\n\n  return spans;\n};\n"]}]}