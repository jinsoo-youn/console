{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/repository.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/repository.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { RepositoryModel } from '../../models/hypercloud';\nimport { Tags } from './tags';\nimport { scanningModal } from './modals';\nimport { k8sGet } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nexport const menuActions = [...Kebab.factory.common, Kebab.factory.ModifyScanning];\nconst kind = RepositoryModel.kind;\nconst tableColumnClasses = [\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    Kebab.columnClass,\n];\nconst RepositoryTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, displayName: obj.spec.name, namespace: obj.metadata.namespace, title: obj.metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: obj }))));\n};\nconst RepositoryTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_DETAILS_TABREPLICASETS_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABREPLICASETS_6'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[2] },\n        },\n    ];\n};\nRepositoryTableHeader.displayName = 'RepositoryTableHeader';\nconst RepositoriesList = (props) => {\n    const { t } = useTranslation();\n    return (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Repositories\", Header: RepositoryTableHeader.bind(null, t), Row: RepositoryTableRow, virtualize: true })));\n};\nconst RepositoriesPage = (props) => {\n    const { t } = useTranslation();\n    const { canCreate = true, namespace, isExtRegistry } = props;\n    let registry;\n    if (isExtRegistry) {\n        registry = props.selector.matchLabels['ext-registry'];\n    }\n    else {\n        registry = props.selector.matchLabels.registry;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"pf-m-expanded\", style: { padding: '30px 0 0 30px' } }, isExtRegistry ? React.createElement(\"button\", { className: \"pf-c-dropdown__toggle pf-m-primary\", style: { backgroundColor: '#0066cc', color: 'white', fontSize: '14px', width: '150px', height: '25px', display: 'flex', justifyContent: 'center' }, onClick: scanningModal.bind(null, { kind: 'Repository', ns: namespace, showNs: false, labelSelector: { 'ext-registry': registry }, isExtRegistry }) }, t('COMMON:MSG_DETAILS_TABREPOSITORIES_2')) : React.createElement(\"button\", { className: \"pf-c-dropdown__toggle pf-m-primary\", style: { backgroundColor: '#0066cc', color: 'white', fontSize: '14px', width: '150px', height: '25px', display: 'flex', justifyContent: 'center' }, onClick: scanningModal.bind(null, { kind: 'Repository', ns: namespace, showNs: false, labelSelector: { registry }, isExtRegistry }) }, t('COMMON:MSG_DETAILS_TABREPOSITORIES_2'))),\n        React.createElement(ListPage, Object.assign({ canCreate: canCreate, kind: \"Repository\", ListComponent: RepositoriesList }, props))));\n};\nconst RepositoryDetails = ({ obj: repository }) => {\n    const [addedTags, setAddedTags] = useState(repository.spec.versions);\n    useEffect(() => {\n        getScans();\n    }, []);\n    const isExtRegistry = repository.metadata.labels.app === 'ext-registry' ? true : false;\n    const getWorstScan = (scans, tag) => {\n        const res = scans[tag];\n        if (res) {\n            if (res.hasOwnProperty('Critical')) {\n                return 'Critical';\n            }\n            else if (res.hasOwnProperty('High')) {\n                return 'High';\n            }\n            else if (res.hasOwnProperty('Medium')) {\n                return 'Medium';\n            }\n            else if (res.hasOwnProperty('Low')) {\n                return 'Low';\n            }\n            else if (res.hasOwnProperty('Negligible')) {\n                return 'Negligible';\n            }\n            else if (res.hasOwnProperty('Unknown')) {\n                return 'Unknown';\n            }\n        }\n        return '';\n    };\n    const getScans = () => __awaiter(void 0, void 0, void 0, function* () {\n        const model = Object.assign({}, RepositoryModel);\n        model.apiGroup = 'registry.' + model.apiGroup;\n        if (isExtRegistry) {\n            model.plural = 'ext-repositories';\n        }\n        const scans = yield k8sGet(model, repository.metadata.name, repository.metadata.namespace, { path: 'imagescanresults' });\n        setAddedTags(addedTags.map((addedTag) => {\n            addedTag.severity = getWorstScan(scans, addedTag.version);\n            return addedTag;\n        }));\n    });\n    // const showSigner = repository.metadata.labels?.app === 'registry' ? true : false;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Registry Details\" }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: repository, showPodSelector: false, showNodeSelector: false, showAnnotations: false, showTolerations: false })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Tags\" }),\n            React.createElement(Tags, { repository: repository.metadata.name, tags: addedTags, namespace: repository.metadata.namespace, registry: repository.spec.registry, isExtRegistry: isExtRegistry }))));\n};\nconst { details, editYaml } = navFactory;\nconst RepositoriesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [\n        details(RepositoryDetails),\n        editYaml(),\n    ] }));\nexport { RepositoriesPage, RepositoriesDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/repository.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/repository.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { RepositoryModel } from '../../models/hypercloud';\nimport { Tags } from './tags';\nimport { scanningModal } from './modals';\nimport { k8sGet } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nexport const menuActions = [...Kebab.factory.common, Kebab.factory.ModifyScanning];\n\nconst kind = RepositoryModel.kind;\n\nconst tableColumnClasses = [\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst RepositoryTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={obj.metadata.name}\n          displayName={obj.spec.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst RepositoryTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_DETAILS_TABREPLICASETS_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABREPLICASETS_6'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[2] },\n    },\n  ];\n};\n\nRepositoryTableHeader.displayName = 'RepositoryTableHeader';\n\n\nconst RepositoriesList = (props) => {\n  const { t } = useTranslation();\n\n  return (<Table\n    {...props}\n    aria-label=\"Repositories\"\n    Header={RepositoryTableHeader.bind(null, t)}\n    Row={RepositoryTableRow}\n    virtualize\n  />\n  );\n}\nconst RepositoriesPage = (props) => {\n  const { t } = useTranslation();\n\n  const { canCreate = true, namespace, isExtRegistry } = props;\n  let registry;\n  if (isExtRegistry) {\n    registry = props.selector.matchLabels['ext-registry'];\n  } else {\n    registry = props.selector.matchLabels.registry;\n  }\n\n  return (\n    <>\n      <div className=\"pf-m-expanded\" style={{ padding: '30px 0 0 30px' }}>\n        {isExtRegistry ? <button className=\"pf-c-dropdown__toggle pf-m-primary\" style={{ backgroundColor: '#0066cc', color: 'white', fontSize: '14px', width: '150px', height: '25px', display: 'flex', justifyContent: 'center' }} onClick={scanningModal.bind(null, { kind: 'Repository', ns: namespace, showNs: false, labelSelector: { 'ext-registry': registry }, isExtRegistry })}>\n          {t('COMMON:MSG_DETAILS_TABREPOSITORIES_2')}\n        </button> : <button className=\"pf-c-dropdown__toggle pf-m-primary\" style={{ backgroundColor: '#0066cc', color: 'white', fontSize: '14px', width: '150px', height: '25px', display: 'flex', justifyContent: 'center' }} onClick={scanningModal.bind(null, { kind: 'Repository', ns: namespace, showNs: false, labelSelector: { registry }, isExtRegistry })}>\n          {t('COMMON:MSG_DETAILS_TABREPOSITORIES_2')}\n        </button>}\n      </div>\n      <ListPage canCreate={canCreate} kind=\"Repository\" ListComponent={RepositoriesList} {...props} />\n    </>\n  );\n};\n\nconst RepositoryDetails: React.FC<RepositoryDetailsProps> = ({ obj: repository }) => {\n\n  const [addedTags, setAddedTags] = useState(repository.spec.versions);\n\n  useEffect(() => {\n    getScans();\n  }, []);\n\n\n  const isExtRegistry = repository.metadata.labels.app === 'ext-registry' ? true : false;\n\n  const getWorstScan = (scans, tag) => {\n    const res = scans[tag];\n    if (res) {\n      if (res.hasOwnProperty('Critical')) {\n        return 'Critical';\n      } else if (res.hasOwnProperty('High')) {\n        return 'High';\n      } else if (res.hasOwnProperty('Medium')) {\n        return 'Medium';\n      } else if (res.hasOwnProperty('Low')) {\n        return 'Low';\n      } else if (res.hasOwnProperty('Negligible')) {\n        return 'Negligible';\n      } else if (res.hasOwnProperty('Unknown')) {\n        return 'Unknown';\n      }\n    }\n    return '';\n  }\n\n  const getScans = async () => {\n    const model = Object.assign({}, RepositoryModel);\n    model.apiGroup = 'registry.' + model.apiGroup;\n    if (isExtRegistry) {\n      model.plural = 'ext-repositories';\n    }\n\n    const scans = await k8sGet(model, repository.metadata.name, repository.metadata.namespace, { path: 'imagescanresults' });\n\n    setAddedTags(addedTags.map((addedTag) => {\n      addedTag.severity = getWorstScan(scans, addedTag.version);\n      return addedTag;\n    }));\n  }\n\n  // const showSigner = repository.metadata.labels?.app === 'registry' ? true : false;\n\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Registry Details\" />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={repository} showPodSelector={false} showNodeSelector={false} showAnnotations={false} showTolerations={false} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Tags\" />\n        <Tags repository={repository.metadata.name} tags={addedTags} namespace={repository.metadata.namespace} registry={repository.spec.registry} isExtRegistry={isExtRegistry} /* showSigner={showSigner} */ />\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\n\nconst RepositoriesDetailsPage: React.FC<RepositoriesDetailsPageProps> = props => <DetailsPage\n  {...props}\n  kind={kind}\n  menuActions={menuActions}\n  pages={[\n    details(RepositoryDetails),\n    editYaml(),\n  ]}\n/>;\n\n\ntype RepositoryDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype RepositoriesDetailsPageProps = {\n  match: any;\n};\n\nexport { RepositoriesPage, RepositoriesDetailsPage };"]}]}