{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/configure-count-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/configure-count-modal.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { k8sPatch } from '../../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { NumberSpinner, withHandlePromise } from '../../utils';\nimport { Section } from '../utils/section';\nexport const ConfigureCountModal = withHandlePromise((props) => {\n    console.log('configure count modal');\n    console.log({ props });\n    const getPath1 = props.path1.substring(1).replace('/', '.');\n    const [value1, setValue1] = React.useState(_.get(props.resource, getPath1) || props.defaultValue);\n    const getPath2 = props.path2.substring(1).replace('/', '.');\n    const [value2, setValue2] = React.useState(_.get(props.resource, getPath2) || props.defaultValue);\n    const submit = (e) => {\n        e.preventDefault();\n        const patch1 = [{ op: 'replace', path: props.path1, value: _.toInteger(value1) }];\n        const patch2 = [{ op: 'replace', path: props.path2, value: _.toInteger(value2) }];\n        const invalidateState = props.invalidateState || _.noop;\n        invalidateState(true, _.toInteger(value1));\n        invalidateState(true, _.toInteger(value2));\n        props\n            .handlePromise(k8sPatch(props.resourceKind, props.resource, patch1))\n            .then(props.close)\n            .catch((error) => {\n            invalidateState(false);\n            throw error;\n        });\n        props\n            .handlePromise(k8sPatch(props.resourceKind, props.resource, patch2))\n            .then(props.close)\n            .catch((error) => {\n            invalidateState(false);\n            throw error;\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content \" },\n        React.createElement(ModalTitle, null, props.title),\n        React.createElement(ModalBody, null,\n            React.createElement(\"p\", null, props.message),\n            React.createElement(Section, { label: \"Master Node\", id: \"master-node\" },\n                React.createElement(NumberSpinner, { className: \"pf-c-form-control\", value: value1, onChange: (e) => setValue1(e.target.value), changeValueBy: (operation) => setValue1(_.toInteger(value1) + operation * 2), autoFocus: true, required: true, min: 1 })),\n            React.createElement(Section, { label: \"Worker Node\", id: \"worker-node\" },\n                React.createElement(NumberSpinner, { className: \"pf-c-form-control\", value: value2, onChange: (e) => setValue2(e.target.value), changeValueBy: (operation) => setValue2(_.toInteger(value2) + operation), autoFocus: true, required: true, min: 1 }))),\n        React.createElement(ModalSubmitFooter, { errorMessage: props.errorMessage, inProgress: props.inProgress, submitText: props.buttonText, cancel: props.cancel })));\n});\nexport const configureCountModal = createModalLauncher(ConfigureCountModal);\nexport const configureClusterNodesModal = (props) => {\n    console.log('configure cluster nodes modal');\n    console.log({ props });\n    return configureCountModal(_.defaults({}, {\n        defaultValue: 1,\n        title: 'Edit Nodes',\n        message: `Master node and worker node can be scaled.`,\n        // path: '/spec/masterNum',\n        path1: '/spec/masterNum',\n        path2: '/spec/workerNum',\n        buttonText: 'Save',\n    }, props));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/configure-count-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/configure-count-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { k8sPatch, K8sResourceKind, K8sKind } from '../../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { NumberSpinner, withHandlePromise } from '../../utils';\nimport { Section } from '../utils/section';\n\nexport const ConfigureCountModal = withHandlePromise((props: ConfigureCountModalProps) => {\n    console.log('configure count modal');\n    console.log({ props });\n\n    const getPath1 = props.path1.substring(1).replace('/', '.');\n    const [value1, setValue1] = React.useState<number>(\n        _.get(props.resource, getPath1) || props.defaultValue,\n    );\n\n    const getPath2 = props.path2.substring(1).replace('/', '.');\n    const [value2, setValue2] = React.useState<number>(\n        _.get(props.resource, getPath2) || props.defaultValue,\n    );\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        const patch1 = [{ op: 'replace', path: props.path1, value: _.toInteger(value1) }];\n\n        const patch2 = [{ op: 'replace', path: props.path2, value: _.toInteger(value2) }];\n\n        const invalidateState = props.invalidateState || _.noop;\n\n        invalidateState(true, _.toInteger(value1));\n\n        invalidateState(true, _.toInteger(value2));\n\n        props\n            .handlePromise(k8sPatch(props.resourceKind, props.resource, patch1))\n            .then(props.close)\n            .catch((error) => {\n                invalidateState(false);\n                throw error;\n            });\n\n        props\n            .handlePromise(k8sPatch(props.resourceKind, props.resource, patch2))\n            .then(props.close)\n            .catch((error) => {\n                invalidateState(false);\n                throw error;\n            });\n    };\n\n    return (\n        <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n            <ModalTitle>{props.title}</ModalTitle>\n            <ModalBody>\n                <p>{props.message}</p>\n                <Section label=\"Master Node\" id=\"master-node\">\n                    <NumberSpinner\n                        className=\"pf-c-form-control\"\n                        value={value1}\n                        onChange={(e: any) => setValue1(e.target.value)}\n                        changeValueBy={(operation) => setValue1(_.toInteger(value1) + operation * 2)}\n                        autoFocus\n                        required\n                        min={1}\n                    />\n                </Section>\n                <Section label=\"Worker Node\" id=\"worker-node\">\n                    <NumberSpinner\n                        className=\"pf-c-form-control\"\n                        value={value2}\n                        onChange={(e: any) => setValue2(e.target.value)}\n                        changeValueBy={(operation) => setValue2(_.toInteger(value2) + operation)}\n                        autoFocus\n                        required\n                        min={1}\n                    />\n                </Section>\n            </ModalBody>\n            <ModalSubmitFooter\n                errorMessage={props.errorMessage}\n                inProgress={props.inProgress}\n                submitText={props.buttonText}\n                cancel={props.cancel}\n            />\n        </form>\n    );\n});\n\nexport const configureCountModal = createModalLauncher(ConfigureCountModal);\n\nexport const configureClusterNodesModal = (props) => {\n    console.log('configure cluster nodes modal');\n    console.log({ props });\n    return configureCountModal(\n        _.defaults(\n            {},\n            {\n                defaultValue: 1,\n                title: 'Edit Nodes',\n                message: `Master node and worker node can be scaled.`,\n                // path: '/spec/masterNum',\n                path1: '/spec/masterNum',\n                path2: '/spec/workerNum',\n                buttonText: 'Save',\n            },\n            props,\n        )\n    )\n}\n\nexport type ConfigureCountModalProps = {\n    message: string;\n    buttonText: string;\n    defaultValue: number;\n    // path: string;\n    path1: string;\n    path2: string;\n    resource: K8sResourceKind;\n    resourceKind: K8sKind;\n    title: string;\n    invalidateState?: (isInvalid: boolean, count?: number) => void;\n    handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n    inProgress: boolean;\n    errorMessage: string;\n    cancel?: () => void;\n    close?: () => void;\n};\n"]}]}