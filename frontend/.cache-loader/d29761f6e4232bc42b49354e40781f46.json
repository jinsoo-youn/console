{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/types/resource.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/types/resource.ts","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/types/resource.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/types/resource.ts"],"names":[],"mappings":"","sourcesContent":["import { K8sResourceKind, PodKind, RouteKind } from '@console/internal/module/k8s';\nimport { DEPLOYMENT_STRATEGY } from '../constants';\nimport { OverviewItemAlerts, PodControllerOverviewItem } from './pod';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager';\n\nexport type APIError = {\n  status?: string;\n  message?: string;\n  reason?: string;\n  details?: {\n    name?: string;\n    kind?: string;\n  };\n  code?: number;\n};\n\nexport type BuildConfigOverviewItem = K8sResourceKind & {\n  builds: K8sResourceKind[];\n};\n\nexport type OverviewItem<T = K8sResourceKind> = {\n  alerts?: OverviewItemAlerts;\n  buildConfigs: BuildConfigOverviewItem[];\n  current?: PodControllerOverviewItem;\n  isRollingOut?: boolean;\n  obj: T;\n  pods?: PodKind[];\n  previous?: PodControllerOverviewItem;\n  routes: RouteKind[];\n  services: K8sResourceKind[];\n  status?: React.ReactNode;\n  ksroutes?: K8sResourceKind[];\n  configurations?: K8sResourceKind[];\n  ksservices?: K8sResourceKind[];\n  revisions?: K8sResourceKind[];\n  isOperatorBackedService?: boolean;\n  isMonitorable?: boolean;\n};\n\nexport type OperatorBackedServiceKindMap = {\n  [name: string]: ClusterServiceVersionKind;\n};\n\nexport type DeploymentStrategy = DEPLOYMENT_STRATEGY.recreate | DEPLOYMENT_STRATEGY.rolling;\n"]}]}