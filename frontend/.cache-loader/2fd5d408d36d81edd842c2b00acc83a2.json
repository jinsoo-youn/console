{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/dashboards.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/dashboards.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ClusterDashboard } from './cluster-dashboard/cluster-dashboard';\nimport { HorizontalNav, PageHeading, LoadingBox, AsyncComponent } from '../../utils';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid, { GridPosition } from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useExtensions, isDashboardsCard, isDashboardsTab } from '@console/plugin-sdk';\nimport { useTranslation } from 'react-i18next';\nconst getCardsOnPosition = (cards, position) => cards\n    .filter(c => c.properties.position === position)\n    .map(c => ({\n    Card: () => React.createElement(AsyncComponent, { loader: c.properties.loader }),\n    span: c.properties.span,\n}));\nconst getPluginTabPages = (tabs, cards) => tabs.map(tab => {\n    const tabCards = cards.filter(c => c.properties.tab === tab.properties.id);\n    return {\n        href: tab.properties.id,\n        name: tab.properties.title,\n        component: () => (React.createElement(Dashboard, null,\n            React.createElement(DashboardGrid, { mainCards: getCardsOnPosition(tabCards, GridPosition.MAIN), leftCards: getCardsOnPosition(tabCards, GridPosition.LEFT), rightCards: getCardsOnPosition(tabCards, GridPosition.RIGHT) }))),\n    };\n});\nconst DashboardsPage_ = ({ match, kindsInFlight, k8sModels }) => {\n    const { t } = useTranslation();\n    const title = t('COMMON:MSG_LNB_MENU_90');\n    const tabExtensions = useExtensions(isDashboardsTab);\n    const cardExtensions = useExtensions(isDashboardsCard);\n    const pluginPages = React.useMemo(() => getPluginTabPages(tabExtensions, cardExtensions), [tabExtensions, cardExtensions]);\n    const allPages = React.useMemo(() => [\n        {\n            href: '',\n            name: t('SINGLE:MSG_OVERVIEW_MAIN_TABCLUSTER_1'),\n            component: ClusterDashboard,\n        },\n        ...pluginPages,\n    ], [pluginPages]);\n    return kindsInFlight && k8sModels.size === 0 ? (React.createElement(LoadingBox, null)) : (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, title)),\n        React.createElement(PageHeading, { title: title, detail: true }),\n        React.createElement(HorizontalNav, { match: match, pages: allPages, noStatusBox: true })));\n};\nconst mapStateToProps = (state) => ({\n    kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']),\n    k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const DashboardsPage = connect(mapStateToProps)(DashboardsPage_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/dashboards.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/dashboards.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAEtC,OAAO,EAAE,gBAAgB,EAAE,MAAM,uCAAuC,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAQ,cAAc,EAAE,MAAM,aAAa,CAAC;AAC3F,OAAO,SAAS,MAAM,oDAAoD,CAAC;AAC3E,OAAO,aAAa,EAAE,EAAE,YAAY,EAAqB,MAAM,wDAAwD,CAAC;AACxH,OAAO,EAAE,aAAa,EAAiC,gBAAgB,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtH,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,kBAAkB,GAAG,CAAC,KAAuB,EAAE,QAAsB,EAAuB,EAAE,CAClG,KAAK;KACF,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,KAAK,QAAQ,CAAC;KAC/C,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACT,IAAI,EAAE,GAAG,EAAE,CAAC,oBAAC,cAAc,IAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,GAAI;IAC3D,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI;CACxB,CAAC,CAAC,CAAC;AAER,MAAM,iBAAiB,GAAG,CAAC,IAAqB,EAAE,KAAuB,EAAU,EAAE,CACnF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACb,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC3E,OAAO;QACL,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;QACvB,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,KAAK;QAC1B,SAAS,EAAE,GAAG,EAAE,CAAC,CACf,oBAAC,SAAS;YACR,oBAAC,aAAa,IAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAC,KAAK,CAAC,GAAI,CAC7L,CACb;KACF,CAAC;AACJ,CAAC,CAAC,CAAC;AAEL,MAAM,eAAe,GAAkC,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,EAAE,EAAE;IAC7F,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,MAAM,KAAK,GAAG,CAAC,CAAC,wBAAwB,CAAC,CAAC;IAC1C,MAAM,aAAa,GAAG,aAAa,CAAgB,eAAe,CAAC,CAAC;IACpE,MAAM,cAAc,GAAG,aAAa,CAAiB,gBAAgB,CAAC,CAAC;IAEvE,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;IAE3H,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAC5B,GAAG,EAAE,CAAC;QACJ;YACE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,CAAC,CAAC,uCAAuC,CAAC;YAChD,SAAS,EAAE,gBAAgB;SAC5B;QACD,GAAG,WAAW;KACf,EACD,CAAC,WAAW,CAAC,CACd,CAAC;IAEF,OAAO,aAAa,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7C,oBAAC,UAAU,OAAG,CACf,CAAC,CAAC,CAAC,CACF;QACE,oBAAC,MAAM;YACL,mCAAQ,KAAK,CAAS,CACf;QACT,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,GAAI;QAC3C,oBAAC,aAAa,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,SAAG,CAC3D,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,KAAgB,EAAE,EAAE,CAAC,CAAC;IAC7C,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IACzD,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;CACpD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,cAAc,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Helmet } from 'react-helmet';\n\nimport { ClusterDashboard } from './cluster-dashboard/cluster-dashboard';\nimport { HorizontalNav, PageHeading, LoadingBox, Page, AsyncComponent } from '../../utils';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid, { GridPosition, GridDashboardCard } from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useExtensions, DashboardsCard, DashboardsTab, isDashboardsCard, isDashboardsTab } from '@console/plugin-sdk';\nimport { RootState } from '../../../redux';\nimport { useTranslation } from 'react-i18next';\n\nconst getCardsOnPosition = (cards: DashboardsCard[], position: GridPosition): GridDashboardCard[] =>\n  cards\n    .filter(c => c.properties.position === position)\n    .map(c => ({\n      Card: () => <AsyncComponent loader={c.properties.loader} />,\n      span: c.properties.span,\n    }));\n\nconst getPluginTabPages = (tabs: DashboardsTab[], cards: DashboardsCard[]): Page[] =>\n  tabs.map(tab => {\n    const tabCards = cards.filter(c => c.properties.tab === tab.properties.id);\n    return {\n      href: tab.properties.id,\n      name: tab.properties.title,\n      component: () => (\n        <Dashboard>\n          <DashboardGrid mainCards={getCardsOnPosition(tabCards, GridPosition.MAIN)} leftCards={getCardsOnPosition(tabCards, GridPosition.LEFT)} rightCards={getCardsOnPosition(tabCards, GridPosition.RIGHT)} />\n        </Dashboard>\n      ),\n    };\n  });\n\nconst DashboardsPage_: React.FC<DashboardsPageProps> = ({ match, kindsInFlight, k8sModels }) => {\n  const { t } = useTranslation();\n  const title = t('COMMON:MSG_LNB_MENU_90');\n  const tabExtensions = useExtensions<DashboardsTab>(isDashboardsTab);\n  const cardExtensions = useExtensions<DashboardsCard>(isDashboardsCard);\n\n  const pluginPages = React.useMemo(() => getPluginTabPages(tabExtensions, cardExtensions), [tabExtensions, cardExtensions]);\n\n  const allPages = React.useMemo(\n    () => [\n      {\n        href: '',\n        name: t('SINGLE:MSG_OVERVIEW_MAIN_TABCLUSTER_1'),\n        component: ClusterDashboard,\n      },\n      ...pluginPages,\n    ],\n    [pluginPages],\n  );\n\n  return kindsInFlight && k8sModels.size === 0 ? (\n    <LoadingBox />\n  ) : (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} detail={true} />\n      <HorizontalNav match={match} pages={allPages} noStatusBox />\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']),\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\n\nexport const DashboardsPage = connect(mapStateToProps)(DashboardsPage_);\n\ntype DashboardsPageProps = RouteComponentProps & {\n  kindsInFlight: boolean;\n  k8sModels: ImmutableMap<string, any>;\n};\n"]}]}