{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/restore-pvc-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/restore-pvc-modal.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import './_restore-pvc-modal.scss';\nimport * as React from 'react';\nimport { Form, FormGroup, Grid, GridItem, TextInput } from '@patternfly/react-core';\nimport { ResourceIcon, withHandlePromise, } from '@console/internal/components/utils/index';\nimport { k8sCreate, k8sGet } from '@console/internal/module/k8s';\nimport { ModalBody, ModalSubmitFooter, ModalTitle, createModalLauncher, } from '@console/internal/components/factory';\nimport { NamespaceModel, PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getName, getNamespace } from '@console/shared';\nimport { VolumeSnapshotModel } from '../../../models';\nexport const RestorePVCModal = withHandlePromise((props) => {\n    var _a, _b, _c, _d, _e;\n    const { close, cancel, resource, errorMessage, inProgress, handlePromise } = props;\n    const [pvcResource, setResource] = React.useState(null);\n    const [restorePVCName, setPVCName] = React.useState(`${getName(resource) || 'pvc'}-restore`);\n    React.useEffect(() => {\n        var _a, _b;\n        k8sGet(PersistentVolumeClaimModel, (_b = (_a = resource === null || resource === void 0 ? void 0 : resource.spec) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.persistentVolumeClaimName, getNamespace(resource))\n            .then(setResource)\n            .catch((error) => {\n            setResource(null);\n            throw error;\n        });\n    }, [resource]);\n    const submit = (event) => {\n        var _a, _b, _c;\n        event.preventDefault();\n        const snapshotName = getName(resource);\n        const pvcSize = (_a = resource === null || resource === void 0 ? void 0 : resource.status) === null || _a === void 0 ? void 0 : _a.restoreSize;\n        const accessModes = (_b = pvcResource === null || pvcResource === void 0 ? void 0 : pvcResource.spec) === null || _b === void 0 ? void 0 : _b.accessModes;\n        const pvcStorageClass = (_c = pvcResource === null || pvcResource === void 0 ? void 0 : pvcResource.spec) === null || _c === void 0 ? void 0 : _c.storageClassName;\n        const namespace = getNamespace(resource);\n        const restorePVCTemplate = {\n            apiVersion: PersistentVolumeClaimModel.apiVersion,\n            kind: PersistentVolumeClaimModel.kind,\n            metadata: {\n                name: restorePVCName,\n            },\n            spec: {\n                storageClassName: pvcStorageClass,\n                dataSource: {\n                    name: snapshotName,\n                    kind: VolumeSnapshotModel.kind,\n                    apiGroup: 'snapshot.storage.k8s.io',\n                },\n                accessModes,\n                resources: {\n                    requests: {\n                        storage: pvcSize,\n                    },\n                },\n            },\n        };\n        handlePromise(k8sCreate(PersistentVolumeClaimModel, restorePVCTemplate, { ns: namespace }))\n            .then(close)\n            .catch((error) => {\n            throw error;\n        });\n    };\n    return (React.createElement(\"div\", { className: \"modal-content modal-content--no-inner-scroll\" },\n        React.createElement(ModalTitle, null, \"Restore\"),\n        React.createElement(Form, { onSubmit: submit, name: \"form\" },\n            React.createElement(ModalBody, null,\n                React.createElement(\"p\", null, \"After restore action is finished, a new PVC will be created.\"),\n                React.createElement(FormGroup, { label: \"Name\", isRequired: true, fieldId: \"restore-pvc-modal__name\" },\n                    React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"restore-pvc-modal__name\", name: \"restore-pvc-modal__name\", value: restorePVCName, onChange: setPVCName })),\n                React.createElement(\"div\", { className: \"ceph-restore-pvc-modal__details-section\" },\n                    React.createElement(Grid, { gutter: \"md\" },\n                        React.createElement(GridItem, { span: 6 },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"Date\"),\n                                React.createElement(\"p\", { \"data-test-id\": \"snapshot-name\" }, (_a = resource === null || resource === void 0 ? void 0 : resource.metadata) === null || _a === void 0 ? void 0 : _a.creationTimestamp)),\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"Status\"),\n                                React.createElement(\"p\", { \"data-test-id\": \"snapshot-status\" }, ((_b = resource === null || resource === void 0 ? void 0 : resource.status) === null || _b === void 0 ? void 0 : _b.readyToUse) ? 'Ready' : 'Not Ready')),\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"Size\"),\n                                React.createElement(\"p\", { \"data-test-id\": \"snapshot-size\" }, ((_c = resource === null || resource === void 0 ? void 0 : resource.status) === null || _c === void 0 ? void 0 : _c.restoreSize) || 'No Data'))),\n                        React.createElement(GridItem, { span: 6 },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"Namespace\"),\n                                React.createElement(\"p\", null,\n                                    React.createElement(ResourceIcon, { kind: NamespaceModel.kind }),\n                                    React.createElement(\"span\", { \"data-test-id\": \"snapshot-ns\" }, getNamespace(resource)))),\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"API Version\"),\n                                React.createElement(\"p\", { \"data-test-id\": \"snapshot-apiversion\" }, resource === null || resource === void 0 ? void 0 : resource.apiVersion)),\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", { className: \"ceph-restore-pvc-modal__pvc-details\" }, \"Persistent Volume Claim\"),\n                                React.createElement(ResourceIcon, { kind: PersistentVolumeClaimModel.kind }),\n                                React.createElement(\"span\", { \"data-test-id\": \"snapshot-source\" }, (_e = (_d = resource === null || resource === void 0 ? void 0 : resource.spec) === null || _d === void 0 ? void 0 : _d.source) === null || _e === void 0 ? void 0 : _e.persistentVolumeClaimName)))))),\n            React.createElement(ModalSubmitFooter, { inProgress: inProgress, errorMessage: errorMessage, submitText: \"Restore\", cancel: cancel }))));\n});\nexport default createModalLauncher(RestorePVCModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/restore-pvc-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/restore-pvc-modal/restore-pvc-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import './_restore-pvc-modal.scss';\n\nimport * as React from 'react';\n\nimport { Form, FormGroup, Grid, GridItem, TextInput } from '@patternfly/react-core';\nimport {\n  HandlePromiseProps,\n  ResourceIcon,\n  withHandlePromise,\n} from '@console/internal/components/utils/index';\nimport { K8sResourceKind, k8sCreate, k8sGet } from '@console/internal/module/k8s';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '@console/internal/components/factory';\nimport { NamespaceModel, PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getName, getNamespace } from '@console/shared';\n\nimport { VolumeSnapshotModel } from '../../../models';\n\nexport const RestorePVCModal = withHandlePromise((props: RestorePVCModalProps) => {\n  const { close, cancel, resource, errorMessage, inProgress, handlePromise } = props;\n  const [pvcResource, setResource] = React.useState(null);\n  const [restorePVCName, setPVCName] = React.useState(`${getName(resource) || 'pvc'}-restore`);\n\n  React.useEffect(() => {\n    k8sGet(\n      PersistentVolumeClaimModel,\n      resource?.spec?.source?.persistentVolumeClaimName,\n      getNamespace(resource),\n    )\n      .then(setResource)\n      .catch((error) => {\n        setResource(null);\n        throw error;\n      });\n  }, [resource]);\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    const snapshotName = getName(resource);\n    const pvcSize = resource?.status?.restoreSize;\n    const accessModes = pvcResource?.spec?.accessModes;\n    const pvcStorageClass = pvcResource?.spec?.storageClassName;\n    const namespace = getNamespace(resource);\n    const restorePVCTemplate: K8sResourceKind = {\n      apiVersion: PersistentVolumeClaimModel.apiVersion,\n      kind: PersistentVolumeClaimModel.kind,\n      metadata: {\n        name: restorePVCName,\n      },\n      spec: {\n        storageClassName: pvcStorageClass,\n        dataSource: {\n          name: snapshotName,\n          kind: VolumeSnapshotModel.kind,\n          apiGroup: 'snapshot.storage.k8s.io',\n        },\n        accessModes,\n        resources: {\n          requests: {\n            storage: pvcSize,\n          },\n        },\n      },\n    };\n    handlePromise(k8sCreate(PersistentVolumeClaimModel, restorePVCTemplate, { ns: namespace }))\n      .then(close)\n      .catch((error) => {\n        throw error;\n      });\n  };\n\n  return (\n    <div className=\"modal-content modal-content--no-inner-scroll\">\n      <ModalTitle>Restore</ModalTitle>\n      <Form onSubmit={submit} name=\"form\">\n        <ModalBody>\n          <p>After restore action is finished, a new PVC will be created.</p>\n          <FormGroup label=\"Name\" isRequired fieldId=\"restore-pvc-modal__name\">\n            <TextInput\n              isRequired\n              type=\"text\"\n              id=\"restore-pvc-modal__name\"\n              name=\"restore-pvc-modal__name\"\n              value={restorePVCName}\n              onChange={setPVCName}\n            />\n          </FormGroup>\n          <div className=\"ceph-restore-pvc-modal__details-section\">\n            <Grid gutter=\"md\">\n              <GridItem span={6}>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Date</p>\n                  <p data-test-id=\"snapshot-name\">{resource?.metadata?.creationTimestamp}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Status</p>\n                  <p data-test-id=\"snapshot-status\">\n                    {resource?.status?.readyToUse ? 'Ready' : 'Not Ready'}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Size</p>\n                  <p data-test-id=\"snapshot-size\">{resource?.status?.restoreSize || 'No Data'}</p>\n                </div>\n              </GridItem>\n              <GridItem span={6}>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Namespace</p>\n                  <p>\n                    <ResourceIcon kind={NamespaceModel.kind} />\n                    <span data-test-id=\"snapshot-ns\">{getNamespace(resource)}</span>\n                  </p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">API Version</p>\n                  <p data-test-id=\"snapshot-apiversion\">{resource?.apiVersion}</p>\n                </div>\n                <div>\n                  <p className=\"ceph-restore-pvc-modal__pvc-details\">Persistent Volume Claim</p>\n                  <ResourceIcon kind={PersistentVolumeClaimModel.kind} />\n                  <span data-test-id=\"snapshot-source\">\n                    {resource?.spec?.source?.persistentVolumeClaimName}\n                  </span>\n                </div>\n              </GridItem>\n            </Grid>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={inProgress}\n          errorMessage={errorMessage}\n          submitText=\"Restore\"\n          cancel={cancel}\n        />\n      </Form>\n    </div>\n  );\n});\n\nexport type RestorePVCModalProps = {\n  resource: K8sResourceKind;\n} & HandlePromiseProps &\n  ModalComponentProps;\n\nexport default createModalLauncher(RestorePVCModal);\n"]}]}