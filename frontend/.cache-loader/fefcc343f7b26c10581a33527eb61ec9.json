{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/create-operand.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/create-operand.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { kindForReference, referenceForModel, nameForModel, definitionFor, } from '@console/internal/module/k8s';\nimport { CustomResourceDefinitionModel } from '@console/internal/models';\nimport { Firehose } from '@console/internal/components/utils/firehose';\nimport { StatusBox, BreadCrumbs, resourcePathFromModel, } from '@console/internal/components/utils';\nimport { SyncedEditor } from '@console/shared/src/components/synced-editor';\nimport { getActivePerspective } from '@console/internal/reducers/ui';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { OperandForm } from './operand-form';\nimport { OperandYAML } from './operand-yaml';\nimport { exampleForModel, providedAPIForModel } from '..';\nimport { FORM_HELP_TEXT, YAML_HELP_TEXT, DEFAULT_K8S_SCHEMA } from './const';\nimport { getSchemaErrors, prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { hasNoFields } from './utils';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { DEPRECATED_CreateOperandForm } from './DEPRECATED_operand-form';\nexport const CreateOperand = ({ clusterServiceVersion, customResourceDefinition, initialEditorType, loaded, loadError, match, model, activePerspective, }) => {\n    const { data: csv } = clusterServiceVersion;\n    const { data: crd } = customResourceDefinition;\n    const [helpText, setHelpText] = React.useState(FORM_HELP_TEXT);\n    const next = activePerspective === 'dev'\n        ? '/topology'\n        : `${resourcePathFromModel(ClusterServiceVersionModel, match.params.appName, match.params.ns)}/${match.params.plural}`;\n    const providedAPI = React.useMemo(() => providedAPIForModel(csv, model), [\n        csv,\n        model,\n    ]);\n    // TODO This logic should be removed in 4.6 and we should only be using\n    // the OperandForm component. We are providing a temporary fallback\n    // to the old form component to ease the transition to structural schemas\n    // over descriptors. In 4.6, structural schemas will be required, and\n    // the fallback will no longer be necessary/provided. If no structural schema\n    // is provided in 4.6, a form will not be generated.\n    const [schema, FormComponent] = React.useMemo(() => {\n        var _a, _b, _c, _d, _e;\n        const baseSchema = (_c = (_b = (_a = crd === null || crd === void 0 ? void 0 : crd.spec) === null || _a === void 0 ? void 0 : _a.validation) === null || _b === void 0 ? void 0 : _b.openAPIV3Schema) !== null && _c !== void 0 ? _c : definitionFor(model);\n        const useFallback = getSchemaErrors(baseSchema).length ||\n            hasNoFields(((_e = (_d = baseSchema === null || baseSchema === void 0 ? void 0 : baseSchema.properties) === null || _d === void 0 ? void 0 : _d.spec) !== null && _e !== void 0 ? _e : {}));\n        return useFallback\n            ? // eslint-disable-next-line @typescript-eslint/camelcase\n                [baseSchema, DEPRECATED_CreateOperandForm]\n            : [\n                _.defaultsDeep({}, DEFAULT_K8S_SCHEMA, _.omit(baseSchema, 'properties.status')),\n                OperandForm,\n            ];\n    }, [crd, model]);\n    const sample = React.useMemo(() => exampleForModel(csv, model), [csv, model]);\n    const pruneFunc = React.useCallback((data) => prune(data, sample), [sample]);\n    const onChangeEditorType = React.useCallback((newMethod) => {\n        setHelpText(newMethod === EditorType.Form ? FORM_HELP_TEXT : YAML_HELP_TEXT);\n    }, []);\n    return (React.createElement(StatusBox, { loaded: loaded, loadError: loadError, data: clusterServiceVersion }, loaded ? (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-create-operand__header\" },\n            React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" },\n                React.createElement(BreadCrumbs, { breadcrumbs: [\n                        {\n                            name: csv.spec.displayName,\n                            path: resourcePathFromModel(ClusterServiceVersionModel, csv.metadata.name, csv.metadata.namespace),\n                        },\n                        { name: `Create ${model.label}`, path: window.location.pathname },\n                    ] })),\n            React.createElement(\"h1\", { className: \"co-create-operand__header-text\" }, `Create ${model.label}`),\n            React.createElement(\"p\", { className: \"help-block\" }, helpText)),\n        React.createElement(SyncedEditor, { context: {\n                formContext: { csv, match, model, next, schema, providedAPI },\n                yamlContext: { next, match },\n            }, FormEditor: FormComponent, initialData: sample, initialType: initialEditorType, onChangeEditorType: onChangeEditorType, prune: pruneFunc, YAMLEditor: OperandYAML }))) : null));\n};\nconst stateToProps = (state, props) => ({\n    model: state.k8s.getIn(['RESOURCES', 'models', props.match.params.plural]),\n    activePerspective: getActivePerspective(state),\n});\nexport const CreateOperandPage = connect(stateToProps)((props) => (React.createElement(React.Fragment, null,\n    React.createElement(Helmet, null,\n        React.createElement(\"title\", null, `Create ${kindForReference(props.match.params.plural)}`)),\n    props.model && (React.createElement(Firehose, { resources: [\n            {\n                kind: referenceForModel(ClusterServiceVersionModel),\n                name: props.match.params.appName,\n                namespace: props.match.params.ns,\n                isList: false,\n                prop: 'clusterServiceVersion',\n            },\n            {\n                kind: CustomResourceDefinitionModel.kind,\n                isList: false,\n                name: nameForModel(props.model),\n                prop: 'customResourceDefinition',\n                optional: true,\n            },\n        ] },\n        React.createElement(CreateOperand, Object.assign({}, props, { model: props.model, match: props.match, initialEditorType: EditorType.Form })))))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/create-operand.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/create-operand.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { JSONSchema6 } from 'json-schema';\nimport {\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceForModel,\n  nameForModel,\n  CustomResourceDefinitionKind,\n  definitionFor,\n} from '@console/internal/module/k8s';\nimport { CustomResourceDefinitionModel } from '@console/internal/models';\nimport { Firehose } from '@console/internal/components/utils/firehose';\nimport {\n  StatusBox,\n  FirehoseResult,\n  BreadCrumbs,\n  resourcePathFromModel,\n} from '@console/internal/components/utils';\nimport { RootState } from '@console/internal/redux';\nimport { SyncedEditor } from '@console/shared/src/components/synced-editor';\nimport { getActivePerspective } from '@console/internal/reducers/ui';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { match as RouterMatch } from 'react-router';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { ClusterServiceVersionKind, ProvidedAPI } from '../../types';\nimport { OperandForm } from './operand-form';\nimport { OperandYAML } from './operand-yaml';\nimport { exampleForModel, providedAPIForModel } from '..';\nimport { FORM_HELP_TEXT, YAML_HELP_TEXT, DEFAULT_K8S_SCHEMA } from './const';\nimport { getSchemaErrors, prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { hasNoFields } from './utils';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport { DEPRECATED_CreateOperandForm } from './DEPRECATED_operand-form';\n\nexport const CreateOperand: React.FC<CreateOperandProps> = ({\n  clusterServiceVersion,\n  customResourceDefinition,\n  initialEditorType,\n  loaded,\n  loadError,\n  match,\n  model,\n  activePerspective,\n}) => {\n  const { data: csv } = clusterServiceVersion;\n  const { data: crd } = customResourceDefinition;\n  const [helpText, setHelpText] = React.useState(FORM_HELP_TEXT);\n  const next =\n    activePerspective === 'dev'\n      ? '/topology'\n      : `${resourcePathFromModel(\n          ClusterServiceVersionModel,\n          match.params.appName,\n          match.params.ns,\n        )}/${match.params.plural}`;\n\n  const providedAPI = React.useMemo<ProvidedAPI>(() => providedAPIForModel(csv, model), [\n    csv,\n    model,\n  ]);\n\n  // TODO This logic should be removed in 4.6 and we should only be using\n  // the OperandForm component. We are providing a temporary fallback\n  // to the old form component to ease the transition to structural schemas\n  // over descriptors. In 4.6, structural schemas will be required, and\n  // the fallback will no longer be necessary/provided. If no structural schema\n  // is provided in 4.6, a form will not be generated.\n  const [schema, FormComponent] = React.useMemo(() => {\n    const baseSchema =\n      crd?.spec?.validation?.openAPIV3Schema ?? (definitionFor(model) as JSONSchema6);\n    const useFallback =\n      getSchemaErrors(baseSchema).length ||\n      hasNoFields((baseSchema?.properties?.spec ?? {}) as JSONSchema6);\n    return useFallback\n      ? // eslint-disable-next-line @typescript-eslint/camelcase\n        [baseSchema, DEPRECATED_CreateOperandForm]\n      : [\n          _.defaultsDeep({}, DEFAULT_K8S_SCHEMA, _.omit(baseSchema, 'properties.status')),\n          OperandForm,\n        ];\n  }, [crd, model]);\n\n  const sample = React.useMemo<K8sResourceKind>(() => exampleForModel(csv, model), [csv, model]);\n\n  const pruneFunc = React.useCallback((data) => prune(data, sample), [sample]);\n\n  const onChangeEditorType = React.useCallback((newMethod) => {\n    setHelpText(newMethod === EditorType.Form ? FORM_HELP_TEXT : YAML_HELP_TEXT);\n  }, []);\n\n  return (\n    <StatusBox loaded={loaded} loadError={loadError} data={clusterServiceVersion}>\n      {loaded ? (\n        <>\n          <div className=\"co-create-operand__header\">\n            <div className=\"co-create-operand__header-buttons\">\n              <BreadCrumbs\n                breadcrumbs={[\n                  {\n                    name: csv.spec.displayName,\n                    path: resourcePathFromModel(\n                      ClusterServiceVersionModel,\n                      csv.metadata.name,\n                      csv.metadata.namespace,\n                    ),\n                  },\n                  { name: `Create ${model.label}`, path: window.location.pathname },\n                ]}\n              />\n            </div>\n            <h1 className=\"co-create-operand__header-text\">{`Create ${model.label}`}</h1>\n            <p className=\"help-block\">{helpText}</p>\n          </div>\n          <SyncedEditor\n            context={{\n              formContext: { csv, match, model, next, schema, providedAPI },\n              yamlContext: { next, match },\n            }}\n            FormEditor={FormComponent}\n            initialData={sample}\n            initialType={initialEditorType}\n            onChangeEditorType={onChangeEditorType}\n            prune={pruneFunc}\n            YAMLEditor={OperandYAML}\n          />\n        </>\n      ) : null}\n    </StatusBox>\n  );\n};\n\nconst stateToProps = (state: RootState, props: Omit<CreateOperandPageProps, 'model'>) => ({\n  model: state.k8s.getIn(['RESOURCES', 'models', props.match.params.plural]) as K8sKind,\n  activePerspective: getActivePerspective(state),\n});\n\nexport const CreateOperandPage = connect(stateToProps)((props: CreateOperandPageProps) => (\n  <>\n    <Helmet>\n      <title>{`Create ${kindForReference(props.match.params.plural)}`}</title>\n    </Helmet>\n    {props.model && (\n      <Firehose\n        resources={[\n          {\n            kind: referenceForModel(ClusterServiceVersionModel),\n            name: props.match.params.appName,\n            namespace: props.match.params.ns,\n            isList: false,\n            prop: 'clusterServiceVersion',\n          },\n          {\n            kind: CustomResourceDefinitionModel.kind,\n            isList: false,\n            name: nameForModel(props.model),\n            prop: 'customResourceDefinition',\n            optional: true,\n          },\n        ]}\n      >\n        {/* FIXME(alecmerdler): Hack because `Firehose` injects props without TypeScript knowing about it */}\n        <CreateOperand\n          {...(props as any)}\n          model={props.model}\n          match={props.match}\n          initialEditorType={EditorType.Form}\n        />\n      </Firehose>\n    )}\n  </>\n));\n\nexport type CreateOperandProps = {\n  activePerspective: string;\n  clusterServiceVersion: FirehoseResult<ClusterServiceVersionKind>;\n  customResourceDefinition?: FirehoseResult<CustomResourceDefinitionKind>;\n  initialEditorType: EditorType;\n  loaded: boolean;\n  loadError?: any;\n  match: RouterMatch<{ appName: string; ns: string; plural: K8sResourceKindReference }>;\n  model: K8sKind;\n};\n\nexport type CreateOperandPageProps = {\n  match: RouterMatch<{ appName: string; ns: string; plural: K8sResourceKindReference }>;\n  model: K8sKind;\n};\n"]}]}