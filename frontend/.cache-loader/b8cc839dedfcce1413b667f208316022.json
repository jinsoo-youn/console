{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/image-stream.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/image-stream.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nconst ImageStreamsReference = 'ImageStream';\nconst ImageStreamTagsReference = 'ImageStreamTag';\nexport const getImageStreamTagName = (imageStreamName, tag) => `${imageStreamName}:${tag}`;\nexport const getAnnotationTags = (specTag) => _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\nconst isBuilderTag = (specTag) => {\n    // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n    const annotationTags = getAnnotationTags(specTag);\n    return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\nconst getStatusTags = (imageStream) => {\n    const statusTags = _.get(imageStream, 'status.tags');\n    return _.keyBy(statusTags, 'tag');\n};\nexport const getBuilderTags = (imageStream) => {\n    const statusTags = getStatusTags(imageStream);\n    return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream) => {\n    return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n            return a.localeCompare(b);\n        }\n        if (!v1) {\n            return 1;\n        }\n        if (!v2) {\n            return -1;\n        }\n        return semver.rcompare(v1, v2);\n    });\n};\nexport const getMostRecentBuilderTag = (imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    return _.head(tags);\n};\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream) => !_.isEmpty(getBuilderTags(imageStream));\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\nconst ImageStreamTagsRow = ({ imageStream, specTag, statusTag, }) => {\n    const imageStreamStatus = _.get(imageStream, 'status');\n    const latest = _.get(statusTag, ['items', 0]);\n    const from = _.get(specTag, 'from');\n    const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n    const image = _.get(latest, 'image');\n    const created = _.get(latest, 'created');\n    const dockerRepositoryCheck = _.has(imageStream, [\n        'metadata',\n        'annotations',\n        'openshift.io/image.dockerRepositoryCheck',\n    ]);\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-md-2 col-sm-4 col-xs-4 co-break-word\" },\n            React.createElement(ResourceLink, { kind: ImageStreamTagsReference, name: getImageStreamTagName(imageStream.metadata.name, statusTag.tag), namespace: imageStream.metadata.namespace, title: statusTag.tag, linkTo: !!image })),\n        React.createElement(\"span\", { className: \"col-md-3 col-sm-4 col-xs-8 co-break-all\" },\n            from && referencesTag && (React.createElement(ResourceLink, { kind: ImageStreamTagsReference, name: getImageStreamTagName(imageStream.metadata.name, from.name), namespace: imageStream.metadata.namespace, title: from.name })),\n            from && !referencesTag && React.createElement(React.Fragment, null, from.name),\n            !from && React.createElement(\"span\", { className: \"text-muted\" }, \"pushed image\")),\n        React.createElement(\"span\", { className: \"col-md-4 col-sm-4 hidden-xs co-break-all\" },\n            !imageStreamStatus && dockerRepositoryCheck && (React.createElement(React.Fragment, null,\n                React.createElement(YellowExclamationTriangleIcon, null),\n                \"\\u00A0Unable to resolve\")),\n            !imageStreamStatus && !dockerRepositoryCheck && !from && React.createElement(React.Fragment, null, \"Not synced yet\"),\n            !imageStreamStatus && !dockerRepositoryCheck && from && React.createElement(React.Fragment, null, \"Unresolved\"),\n            imageStreamStatus && image && React.createElement(React.Fragment, null, image),\n            imageStreamStatus && !image && (React.createElement(React.Fragment, null,\n                React.createElement(YellowExclamationTriangleIcon, null),\n                \"\\u00A0There is no image associated with this tag\"))),\n        React.createElement(\"div\", { className: \"col-md-3 hidden-sm hidden-xs\" },\n            created && React.createElement(Timestamp, { timestamp: created }),\n            !created && '-')));\n};\nexport const ExampleDockerCommandPopover = ({ imageStream, tag, }) => {\n    const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n    if (!publicImageRepository) {\n        return null;\n    }\n    const loginCommand = 'oc registry login';\n    const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n    const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n    return (React.createElement(Popover, { headerContent: React.createElement(React.Fragment, null, \"Image registry commands\"), className: \"co-example-docker-command__popover\", minWidth: \"600px\", bodyContent: React.createElement(\"div\", null,\n            React.createElement(\"p\", null, \"Create a new Image Stream Tag by pushing an image to this Image Stream with the desired tag.\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null, \"Authenticate to the internal registry\"),\n            React.createElement(CopyToClipboard, { value: loginCommand }),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null, \"Push an image to this Image Stream\"),\n            React.createElement(CopyToClipboard, { value: pushCommand }),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null, \"Pull an image from this Image Stream\"),\n            React.createElement(CopyToClipboard, { value: pullCommand }),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null,\n                \"Red Hat Enterprise Linux users may use the equivalent \",\n                React.createElement(\"strong\", null, \"podman\"),\n                \" commands.\",\n                ' ',\n                React.createElement(ExternalLink, { href: \"https://podman.io/\", text: \"Learn more.\" }))) },\n        React.createElement(Button, { className: \"hidden-sm hidden-xs\", type: \"button\", variant: \"link\" },\n            React.createElement(QuestionCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Do you need to work with this Image Stream outside of the web console?\")));\n};\nconst getImportErrors = (imageStream) => {\n    return _.transform(imageStream.status.tags, (acc, tag) => {\n        const importErrorCondition = _.find(tag.conditions, (condition) => condition.type === 'ImportSuccess' && condition.status === 'False');\n        importErrorCondition &&\n            acc.push(`Unable to sync image for tag ${imageStream.metadata.name}:${tag.tag}. ${importErrorCondition.message}`);\n    });\n};\nexport const ImageStreamsDetails = ({ obj: imageStream }) => {\n    const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n    const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n    const imageCount = _.get(imageStream, 'status.tags.length');\n    const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n    const importErrors = getImportErrors(imageStream);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            !_.isEmpty(importErrors) && (React.createElement(ExpandableAlert, { variant: AlertVariant.warning, alerts: _.map(importErrors, (error, i) => (React.createElement(React.Fragment, { key: i }, error))) })),\n            React.createElement(SectionHeading, { text: \"Image Stream Details\" }),\n            React.createElement(ResourceSummary, { resource: imageStream },\n                imageRepository && React.createElement(\"dt\", null, \"Image Repository\"),\n                imageRepository && React.createElement(\"dd\", null, imageRepository),\n                publicImageRepository && React.createElement(\"dt\", null, \"Public Image Repository\"),\n                publicImageRepository && React.createElement(\"dd\", null, publicImageRepository),\n                React.createElement(\"dt\", null, \"Image Count\"),\n                React.createElement(\"dd\", null, imageCount ? imageCount : 0)),\n            React.createElement(ExampleDockerCommandPopover, { imageStream: imageStream })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Tags\" }),\n            _.isEmpty(imageStream.status.tags) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"No tags\")) : (React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n                    React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                        React.createElement(\"div\", { className: \"col-md-2 col-sm-4 col-xs-4\" }, \"Name\"),\n                        React.createElement(\"div\", { className: \"col-md-3 col-sm-4 col-xs-8\" }, \"From\"),\n                        React.createElement(\"div\", { className: \"col-md-4 col-sm-4 hidden-xs\" }, \"Identifier\"),\n                        React.createElement(\"div\", { className: \"col-md-3 hidden-sm hidden-xs\" }, \"Last Updated\")),\n                    React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.map(imageStream.status.tags, (statusTag) => (React.createElement(ImageStreamTagsRow, { key: statusTag.tag, imageStream: imageStream, specTag: specTagByName[statusTag.tag], statusTag: statusTag }))))))))));\n};\nconst ImageStreamHistory = ({ obj: imageStream }) => {\n    const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n    return (React.createElement(ImageStreamTimeline, { imageStreamTags: imageStreamStatusTags, imageStreamName: imageStream.metadata.name, imageStreamNamespace: imageStream.metadata.namespace }));\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\nconst pages = [\n    navFactory.details(ImageStreamsDetails),\n    navFactory.editYaml(),\n    navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: ImageStreamsReference, menuActions: menuActions, pages: pages })));\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\nconst tableColumnClasses = [\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'hidden-xs'),\n    classNames('col-sm-3', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst ImageStreamsTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\nconst ImageStreamsTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: ImageStreamsReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(LabelList, { kind: ImageStreamsReference, labels: obj.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: ImageStreamsReference, resource: obj }))));\n};\nexport const ImageStreamsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Image Streams\", Header: ImageStreamsTableHeader, Row: ImageStreamsTableRow, virtualize: true })));\nImageStreamsList.displayName = 'ImageStreamsList';\nexport const buildPhase = (build) => build.status.phase;\nexport const ImageStreamsPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { title: \"Image Streams\", kind: ImageStreamsReference, ListComponent: ImageStreamsList, canCreate: true })));\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/image-stream.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/image-stream.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={getImageStreamTagName(imageStream.metadata.name, from.name)}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">pushed image</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;Unable to resolve\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>Not synced yet</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>Unresolved</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;There is no image associated with this tag\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>Image registry commands</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            Create a new Image Stream Tag by pushing an image to this Image Stream with the desired\n            tag.\n          </p>\n          <br />\n          <p>Authenticate to the internal registry</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>Push an image to this Image Stream</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>Pull an image from this Image Stream</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong> commands.{' '}\n            <ExternalLink href=\"https://podman.io/\" text=\"Learn more.\" />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        Do you need to work with this Image Stream outside of the web console?\n      </Button>\n    </Popover>\n  );\n};\n\nconst getImportErrors = (imageStream: K8sResourceKind): string[] => {\n  return _.transform(imageStream.status.tags, (acc, tag: any) => {\n    const importErrorCondition = _.find(\n      tag.conditions,\n      (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n    );\n    importErrorCondition &&\n      acc.push(\n        `Unable to sync image for tag ${imageStream.metadata.name}:${tag.tag}. ${importErrorCondition.message}`,\n      );\n  });\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors(imageStream);\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text=\"Image Stream Details\" />\n        <ResourceSummary resource={imageStream}>\n          {imageRepository && <dt>Image Repository</dt>}\n          {imageRepository && <dd>{imageRepository}</dd>}\n          {publicImageRepository && <dt>Public Image Repository</dt>}\n          {publicImageRepository && <dd>{publicImageRepository}</dd>}\n          <dt>Image Count</dt>\n          <dd>{imageCount ? imageCount : 0}</dd>\n        </ResourceSummary>\n        <ExampleDockerCommandPopover imageStream={imageStream} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Tags\" />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">No tags</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">Name</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">From</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">Identifier</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">Last Updated</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC<ImageStreamsDetailsPageProps> = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'hidden-xs'),\n  classNames('col-sm-3', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\nconst ImageStreamsTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Image Streams\"\n    Header={ImageStreamsTableHeader}\n    Row={ImageStreamsTableRow}\n    virtualize\n  />\n);\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => (\n  <ListPage\n    {...props}\n    title=\"Image Streams\"\n    kind={ImageStreamsReference}\n    ListComponent={ImageStreamsList}\n    canCreate={true}\n  />\n);\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n\nexport type ImageStreamsDetailsPageProps = {\n  match: any;\n};\n"]}]}