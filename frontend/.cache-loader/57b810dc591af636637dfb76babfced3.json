{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/WorkloadNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/WorkloadNode.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { calculateRadius } from '@console/shared';\nimport { observer, } from '@console/topology';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { routeDecoratorIcon } from '../../../import/render-utils';\nimport { Decorator } from './Decorator';\nimport PodSet, { podSetInnerRadius } from './PodSet';\nimport BuildDecorator from './build-decorators/BuildDecorator';\nimport { BaseNode } from './BaseNode';\nimport { getCheURL, getEditURL, getServiceBindingStatus } from '../../topology-utils';\nimport { useDisplayFilters } from '../../filters/useDisplayFilters';\nimport './WorkloadNode.scss';\nconst ObservedWorkloadNode = (_a) => {\n    var { element, urlAnchorRef, canDrop, dropTarget, serviceBinding, cheURL } = _a, rest = __rest(_a, [\"element\", \"urlAnchorRef\", \"canDrop\", \"dropTarget\", \"serviceBinding\", \"cheURL\"]);\n    const { width, height } = element.getDimensions();\n    const workloadData = element.getData().data;\n    const filters = useDisplayFilters();\n    const size = Math.min(width, height);\n    const { donutStatus, editURL, vcsURI } = workloadData;\n    const { radius, decoratorRadius } = calculateRadius(size);\n    const cheEnabled = !!cheURL;\n    const cx = width / 2;\n    const cy = height / 2;\n    const editUrl = editURL || getEditURL(vcsURI, cheURL);\n    const repoIcon = routeDecoratorIcon(editUrl, decoratorRadius, cheEnabled);\n    const tipContent = `Create a ${serviceBinding && element.getData().operatorBackedService ? 'binding' : 'visual'} connector`;\n    return (React.createElement(\"g\", null,\n        React.createElement(Tooltip, { content: tipContent, trigger: \"manual\", isVisible: dropTarget && canDrop, tippyProps: { duration: 0, delay: 0 } },\n            React.createElement(BaseNode, Object.assign({ className: \"odc-workload-node\", outerRadius: radius, innerRadius: podSetInnerRadius(size, donutStatus), icon: !filters.podCount ? workloadData.builderImage : undefined, kind: workloadData.kind, element: element, dropTarget: dropTarget, canDrop: canDrop }, rest, { attachments: [\n                    repoIcon && (React.createElement(Tooltip, { key: \"edit\", content: \"Edit Source Code\", position: TooltipPosition.right },\n                        React.createElement(Decorator, { x: cx + radius - decoratorRadius * 0.7, y: cy + radius - decoratorRadius * 0.7, radius: decoratorRadius, href: editUrl, external: true },\n                            React.createElement(\"g\", { transform: `translate(-${decoratorRadius / 2}, -${decoratorRadius / 2})` }, repoIcon)))),\n                    workloadData.url && (React.createElement(Tooltip, { key: \"route\", content: \"Open URL\", position: TooltipPosition.right },\n                        React.createElement(Decorator, { x: cx + radius - decoratorRadius * 0.7, y: cy + -radius + decoratorRadius * 0.7, radius: decoratorRadius, href: workloadData.url, external: true, circleRef: urlAnchorRef },\n                            React.createElement(\"g\", { transform: `translate(-${decoratorRadius / 2}, -${decoratorRadius / 2})` },\n                                React.createElement(ExternalLinkAltIcon, { style: { fontSize: decoratorRadius }, alt: \"Open URL\" }))))),\n                    React.createElement(BuildDecorator, { key: \"build\", workloadData: workloadData, x: cx - radius + decoratorRadius * 0.7, y: cy + radius - decoratorRadius * 0.7, radius: decoratorRadius }),\n                ] }),\n                React.createElement(PodSet, { size: size, x: cx, y: cy, data: donutStatus, showPodCount: filters.podCount })))));\n};\nconst mapStateToProps = (state) => {\n    const consoleLinks = state.UI.get('consoleLinks');\n    return {\n        cheURL: getCheURL(consoleLinks),\n        serviceBinding: getServiceBindingStatus(state),\n    };\n};\nconst WorkloadNode = connect(mapStateToProps)(observer(ObservedWorkloadNode));\nexport { WorkloadNode };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/WorkloadNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/nodes/WorkloadNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { calculateRadius } from '@console/shared';\nimport {\n  Node,\n  observer,\n  WithCreateConnectorProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithContextMenuProps,\n} from '@console/topology';\nimport { RootState } from '@console/internal/redux';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { routeDecoratorIcon } from '../../../import/render-utils';\nimport { Decorator } from './Decorator';\nimport PodSet, { podSetInnerRadius } from './PodSet';\nimport BuildDecorator from './build-decorators/BuildDecorator';\nimport { BaseNode } from './BaseNode';\nimport { getCheURL, getEditURL, getServiceBindingStatus } from '../../topology-utils';\nimport { useDisplayFilters } from '../../filters/useDisplayFilters';\n\nimport './WorkloadNode.scss';\n\ninterface StateProps {\n  serviceBinding: boolean;\n  cheURL: string;\n}\n\nexport type WorkloadNodeProps = {\n  element: Node;\n  hover?: boolean;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps &\n  StateProps;\n\nconst ObservedWorkloadNode: React.FC<WorkloadNodeProps> = ({\n  element,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  serviceBinding,\n  cheURL,\n  ...rest\n}) => {\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const size = Math.min(width, height);\n  const { donutStatus, editURL, vcsURI } = workloadData;\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cheEnabled = !!cheURL;\n  const cx = width / 2;\n  const cy = height / 2;\n  const editUrl = editURL || getEditURL(vcsURI, cheURL);\n  const repoIcon = routeDecoratorIcon(editUrl, decoratorRadius, cheEnabled);\n  const tipContent = `Create a ${\n    serviceBinding && element.getData().operatorBackedService ? 'binding' : 'visual'\n  } connector`;\n\n  return (\n    <g>\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        tippyProps={{ duration: 0, delay: 0 }}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          outerRadius={radius}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={!filters.podCount ? workloadData.builderImage : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          {...rest}\n          attachments={[\n            repoIcon && (\n              <Tooltip key=\"edit\" content=\"Edit Source Code\" position={TooltipPosition.right}>\n                <Decorator\n                  x={cx + radius - decoratorRadius * 0.7}\n                  y={cy + radius - decoratorRadius * 0.7}\n                  radius={decoratorRadius}\n                  href={editUrl}\n                  external\n                >\n                  <g transform={`translate(-${decoratorRadius / 2}, -${decoratorRadius / 2})`}>\n                    {repoIcon}\n                  </g>\n                </Decorator>\n              </Tooltip>\n            ),\n            workloadData.url && (\n              <Tooltip key=\"route\" content=\"Open URL\" position={TooltipPosition.right}>\n                <Decorator\n                  x={cx + radius - decoratorRadius * 0.7}\n                  y={cy + -radius + decoratorRadius * 0.7}\n                  radius={decoratorRadius}\n                  href={workloadData.url}\n                  external\n                  circleRef={urlAnchorRef}\n                >\n                  <g transform={`translate(-${decoratorRadius / 2}, -${decoratorRadius / 2})`}>\n                    <ExternalLinkAltIcon style={{ fontSize: decoratorRadius }} alt=\"Open URL\" />\n                  </g>\n                </Decorator>\n              </Tooltip>\n            ),\n            <BuildDecorator\n              key=\"build\"\n              workloadData={workloadData}\n              x={cx - radius + decoratorRadius * 0.7}\n              y={cy + radius - decoratorRadius * 0.7}\n              radius={decoratorRadius}\n            />,\n          ]}\n        >\n          <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={filters.podCount} />\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const consoleLinks = state.UI.get('consoleLinks');\n  return {\n    cheURL: getCheURL(consoleLinks),\n    serviceBinding: getServiceBindingStatus(state),\n  };\n};\n\nconst WorkloadNode = connect(mapStateToProps)(observer(ObservedWorkloadNode));\nexport { WorkloadNode };\n"]}]}