{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/data-volume-source-type.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/data-volume-source-type.ts","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\nexport class DataVolumeSourceType extends ObjectEnum {\n}\nDataVolumeSourceType.BLANK = new DataVolumeSourceType('blank');\nDataVolumeSourceType.HTTP = new DataVolumeSourceType('http');\nDataVolumeSourceType.PVC = new DataVolumeSourceType('pvc');\nDataVolumeSourceType.REGISTRY = new DataVolumeSourceType('registry');\nDataVolumeSourceType.S3 = new DataVolumeSourceType('s3');\nDataVolumeSourceType.UPLOAD = new DataVolumeSourceType('upload');\nDataVolumeSourceType.ALL = Object.freeze(ObjectEnum.getAllClassEnumProperties(DataVolumeSourceType));\nDataVolumeSourceType.stringMapper = DataVolumeSourceType.ALL.reduce((accumulator, dataVolumeSourceType) => (Object.assign(Object.assign({}, accumulator), { [dataVolumeSourceType.value]: dataVolumeSourceType })), {});\nDataVolumeSourceType.getAll = () => DataVolumeSourceType.ALL;\nDataVolumeSourceType.fromString = (model) => DataVolumeSourceType.stringMapper[model];\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/data-volume-source-type.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/vm/storage/data-volume-source-type.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,OAAO,oBAAqB,SAAQ,UAAkB;;AAC1C,0BAAK,GAAG,IAAI,oBAAoB,CAAC,OAAO,CAAC,CAAC;AAC1C,yBAAI,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACxC,wBAAG,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACtC,6BAAQ,GAAG,IAAI,oBAAoB,CAAC,UAAU,CAAC,CAAC;AAChD,uBAAE,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACpC,2BAAM,GAAG,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAEpC,wBAAG,GAAG,MAAM,CAAC,MAAM,CACzC,UAAU,CAAC,yBAAyB,CAAuB,oBAAoB,CAAC,CACjF,CAAC;AAEsB,iCAAY,GAAG,oBAAoB,CAAC,GAAG,CAAC,MAAM,CACpE,CAAC,WAAW,EAAE,oBAA0C,EAAE,EAAE,CAAC,iCACxD,WAAW,KACd,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,oBAAoB,IAClD,EACF,EAAE,CACH,CAAC;AAEK,2BAAM,GAAG,GAAG,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC;AAExC,+BAAU,GAAG,CAAC,KAAa,EAAwB,EAAE,CAC1D,oBAAoB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC","sourcesContent":["/* eslint-disable lines-between-class-members */\nimport { ObjectEnum } from '../../object-enum';\n\nexport class DataVolumeSourceType extends ObjectEnum<string> {\n  static readonly BLANK = new DataVolumeSourceType('blank');\n  static readonly HTTP = new DataVolumeSourceType('http');\n  static readonly PVC = new DataVolumeSourceType('pvc');\n  static readonly REGISTRY = new DataVolumeSourceType('registry');\n  static readonly S3 = new DataVolumeSourceType('s3');\n  static readonly UPLOAD = new DataVolumeSourceType('upload');\n\n  private static readonly ALL = Object.freeze(\n    ObjectEnum.getAllClassEnumProperties<DataVolumeSourceType>(DataVolumeSourceType),\n  );\n\n  private static readonly stringMapper = DataVolumeSourceType.ALL.reduce(\n    (accumulator, dataVolumeSourceType: DataVolumeSourceType) => ({\n      ...accumulator,\n      [dataVolumeSourceType.value]: dataVolumeSourceType,\n    }),\n    {},\n  );\n\n  static getAll = () => DataVolumeSourceType.ALL;\n\n  static fromString = (model: string): DataVolumeSourceType =>\n    DataVolumeSourceType.stringMapper[model];\n}\n"]}]}