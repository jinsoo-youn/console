{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/groups/KnativeService.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/groups/KnativeService.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer, } from '@console/topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '@console/dev-console/src/components/topology';\nimport KnativeServiceNode from './KnativeServiceNode';\nimport KnativeServiceGroup from './KnativeServiceGroup';\nimport './KnativeService.scss';\nconst KnativeService = (props) => {\n    const resourceObj = getTopologyResourceObject(props.element.getData());\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n        group: resourceModel.apiGroup,\n        verb: 'patch',\n        resource: resourceModel.plural,\n        name: resourceObj.metadata.name,\n        namespace: resourceObj.metadata.namespace,\n    });\n    if (props.element.isCollapsed()) {\n        return React.createElement(KnativeServiceNode, Object.assign({}, props, { editAccess: editAccess }));\n    }\n    return React.createElement(KnativeServiceGroup, Object.assign({}, props, { editAccess: editAccess }));\n};\nexport default observer(KnativeService);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/groups/KnativeService.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/groups/KnativeService.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAEL,QAAQ,GAKT,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,yBAAyB,EAAE,MAAM,8CAA8C,CAAC;AACzF,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAExD,OAAO,uBAAuB,CAAC;AAa/B,MAAM,cAAc,GAAkC,CAAC,KAAK,EAAE,EAAE;IAC9D,MAAM,WAAW,GAAG,yBAAyB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IACvE,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1D,MAAM,UAAU,GAAG,eAAe,CAAC;QACjC,KAAK,EAAE,aAAa,CAAC,QAAQ;QAC7B,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,aAAa,CAAC,MAAM;QAC9B,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI;QAC/B,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS;KAC1C,CAAC,CAAC;IACH,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;QAC/B,OAAO,oBAAC,kBAAkB,oBAAK,KAAK,IAAE,UAAU,EAAE,UAAU,IAAI,CAAC;KAClE;IAED,OAAO,oBAAC,mBAAmB,oBAAK,KAAK,IAAE,UAAU,EAAE,UAAU,IAAI,CAAC;AACpE,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithCreateConnectorProps,\n} from '@console/topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '@console/dev-console/src/components/topology';\nimport KnativeServiceNode from './KnativeServiceNode';\nimport KnativeServiceGroup from './KnativeServiceGroup';\n\nimport './KnativeService.scss';\n\nexport type KnativeServiceProps = {\n  element: Node;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  edgeDragging?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\nconst KnativeService: React.FC<KnativeServiceProps> = (props) => {\n  const resourceObj = getTopologyResourceObject(props.element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const editAccess = useAccessReview({\n    group: resourceModel.apiGroup,\n    verb: 'patch',\n    resource: resourceModel.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  if (props.element.isCollapsed()) {\n    return <KnativeServiceNode {...props} editAccess={editAccess} />;\n  }\n\n  return <KnativeServiceGroup {...props} editAccess={editAccess} />;\n};\n\nexport default observer(KnativeService);\n"]}]}