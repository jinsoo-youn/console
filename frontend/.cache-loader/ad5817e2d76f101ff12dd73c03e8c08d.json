{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/dashboards/single-stat.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/dashboards/single-stat.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Bullseye } from '@patternfly/react-core';\nimport ErrorAlert from '@console/shared/src/components/alerts/error';\nimport { formatNumber } from './format';\nimport { getPrometheusURL, PrometheusEndpoint } from '../../graphs/helpers';\nimport { LoadingInline, usePoll, useSafeFetch } from '../../utils';\nconst Body = ({ children }) => (React.createElement(Bullseye, { className: \"monitoring-dashboards__single-stat query-browser__wrapper\" }, children));\nconst SingleStat = ({ panel, pollInterval, query }) => {\n    const { decimals, format, postfix, postfixFontSize, prefix, prefixFontSize, valueFontSize, } = panel;\n    const [error, setError] = React.useState();\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [value, setValue] = React.useState();\n    const safeFetch = React.useCallback(useSafeFetch(), []);\n    const tick = () => safeFetch(getPrometheusURL({ endpoint: PrometheusEndpoint.QUERY, query }))\n        .then((response) => {\n        setError(undefined);\n        setIsLoading(false);\n        setValue(_.get(response, 'data.result[0].value[1]'));\n    })\n        .catch((err) => {\n        if (err.name !== 'AbortError') {\n            setError(_.get(err, 'json.error', err.message));\n            setIsLoading(false);\n            setValue(undefined);\n        }\n    });\n    usePoll(tick, pollInterval, query);\n    if (isLoading) {\n        return React.createElement(LoadingInline, null);\n    }\n    if (error) {\n        return React.createElement(ErrorAlert, { message: error });\n    }\n    return (React.createElement(Body, null,\n        prefix && React.createElement(\"span\", { style: { fontSize: prefixFontSize } }, prefix),\n        React.createElement(\"span\", { style: { fontSize: valueFontSize } }, formatNumber(value, decimals, format)),\n        postfix && React.createElement(\"span\", { style: { fontSize: postfixFontSize } }, postfix)));\n};\nexport default SingleStat;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/dashboards/single-stat.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/dashboards/single-stat.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElD,OAAO,UAAU,MAAM,6CAA6C,CAAC;AAErE,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAGxC,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAEnE,MAAM,IAAI,GAA4C,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CACtE,oBAAC,QAAQ,IAAC,SAAS,EAAC,2DAA2D,IAC5E,QAAQ,CACA,CACZ,CAAC;AAEF,MAAM,UAAU,GAAoB,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE;IACrE,MAAM,EACJ,QAAQ,EACR,MAAM,EACN,OAAO,EACP,eAAe,EACf,MAAM,EACN,cAAc,EACd,aAAa,GACd,GAAG,KAAK,CAAC;IAEV,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAU,CAAC;IACnD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAU,CAAC;IAEnD,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IAExD,MAAM,IAAI,GAAG,GAAG,EAAE,CAChB,SAAS,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SACvE,IAAI,CAAC,CAAC,QAA4B,EAAE,EAAE;QACrC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpB,YAAY,CAAC,KAAK,CAAC,CAAC;QACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,yBAAyB,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;QACb,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;YAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAChD,YAAY,CAAC,KAAK,CAAC,CAAC;YACpB,QAAQ,CAAC,SAAS,CAAC,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IAEP,OAAO,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IAEnC,IAAI,SAAS,EAAE;QACb,OAAO,oBAAC,aAAa,OAAG,CAAC;KAC1B;IACD,IAAI,KAAK,EAAE;QACT,OAAO,oBAAC,UAAU,IAAC,OAAO,EAAE,KAAK,GAAI,CAAC;KACvC;IAED,OAAO,CACL,oBAAC,IAAI;QACF,MAAM,IAAI,8BAAM,KAAK,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,IAAG,MAAM,CAAQ;QACrE,8BAAM,KAAK,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAG,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAQ;QACvF,OAAO,IAAI,8BAAM,KAAK,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAG,OAAO,CAAQ,CACnE,CACR,CAAC;AACJ,CAAC,CAAC;AAQF,eAAe,UAAU,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Bullseye } from '@patternfly/react-core';\n\nimport ErrorAlert from '@console/shared/src/components/alerts/error';\n\nimport { formatNumber } from './format';\nimport { Panel } from './types';\nimport { PrometheusResponse } from '../../graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '../../graphs/helpers';\nimport { LoadingInline, usePoll, useSafeFetch } from '../../utils';\n\nconst Body: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <Bullseye className=\"monitoring-dashboards__single-stat query-browser__wrapper\">\n    {children}\n  </Bullseye>\n);\n\nconst SingleStat: React.FC<Props> = ({ panel, pollInterval, query }) => {\n  const {\n    decimals,\n    format,\n    postfix,\n    postfixFontSize,\n    prefix,\n    prefixFontSize,\n    valueFontSize,\n  } = panel;\n\n  const [error, setError] = React.useState<string>();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [value, setValue] = React.useState<string>();\n\n  const safeFetch = React.useCallback(useSafeFetch(), []);\n\n  const tick = () =>\n    safeFetch(getPrometheusURL({ endpoint: PrometheusEndpoint.QUERY, query }))\n      .then((response: PrometheusResponse) => {\n        setError(undefined);\n        setIsLoading(false);\n        setValue(_.get(response, 'data.result[0].value[1]'));\n      })\n      .catch((err) => {\n        if (err.name !== 'AbortError') {\n          setError(_.get(err, 'json.error', err.message));\n          setIsLoading(false);\n          setValue(undefined);\n        }\n      });\n\n  usePoll(tick, pollInterval, query);\n\n  if (isLoading) {\n    return <LoadingInline />;\n  }\n  if (error) {\n    return <ErrorAlert message={error} />;\n  }\n\n  return (\n    <Body>\n      {prefix && <span style={{ fontSize: prefixFontSize }}>{prefix}</span>}\n      <span style={{ fontSize: valueFontSize }}>{formatNumber(value, decimals, format)}</span>\n      {postfix && <span style={{ fontSize: postfixFontSize }}>{postfix}</span>}\n    </Body>\n  );\n};\n\ntype Props = {\n  panel: Panel;\n  pollInterval: number;\n  query: string;\n};\n\nexport default SingleStat;\n"]}]}