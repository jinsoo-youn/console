{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-owned-volume-referenced-resources.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-owned-volume-referenced-resources.ts","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable react-hooks/exhaustive-deps */\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { VolumeWrapper } from '../k8s/wrapper/vm/volume-wrapper';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getOwnerReferences } from '@console/shared/src';\nimport { compareOwnerReference } from '@console/shared/src/utils/owner-references';\nexport const useOwnedVolumeReferencedResources = (initialOwner, initialNamespace, volumes) => {\n    const volumeOwner = React.useMemo(() => initialOwner, []);\n    const namespace = React.useMemo(() => initialNamespace, []);\n    const referencedObjectLookup = React.useMemo(() => (volumes || []).reduce((acc, volume) => {\n        const ref = new VolumeWrapper(volume).getReferencedObject();\n        if (ref) {\n            acc[volume.name] = ref;\n        }\n        return acc;\n    }, {}), [volumes]);\n    const resourceWatches = React.useMemo(() => Object.keys(referencedObjectLookup).reduce((acc, volumeName) => {\n        const ref = referencedObjectLookup[volumeName];\n        acc[volumeName] = {\n            name: ref.name,\n            kind: ref.model.kind,\n            namespace,\n            isList: false,\n        };\n        return acc;\n    }, {}), [namespace, referencedObjectLookup]);\n    const results = useK8sWatchResources(resourceWatches);\n    let isLoaded = true;\n    const ownedResources = Object.keys(results)\n        .map((volumeName) => {\n        var _a;\n        const { data, loaded, loadError } = results[volumeName];\n        if (!loaded || loadError) {\n            if (((_a = loadError === null || loadError === void 0 ? void 0 : loadError.json) === null || _a === void 0 ? void 0 : _a.code) !== 404) {\n                isLoaded = false;\n            }\n            return null;\n        }\n        if (!_.isEmpty(data) &&\n            (getOwnerReferences(data) || []).some((ownerReference) => compareOwnerReference(ownerReference, volumeOwner))) {\n            const referencedObject = referencedObjectLookup[volumeName];\n            return {\n                model: referencedObject.model,\n                resource: data,\n            };\n        }\n        return null;\n    })\n        .filter((r) => r);\n    return [ownedResources, isLoaded];\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-owned-volume-referenced-resources.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-owned-volume-referenced-resources.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAA0B,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACzF,OAAO,EAAE,oBAAoB,EAAE,MAAM,mDAAmD,CAAC;AACzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AAGnF,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAC/C,YAA4B,EAC5B,gBAAwB,EACxB,OAAmB,EACnB,EAAE;IACF,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAE5D,MAAM,sBAAsB,GAAG,KAAK,CAAC,OAAO,CAC1C,GAAG,EAAE,CACH,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,GAAG,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,mBAAmB,EAAE,CAAC;QAC5D,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SACxB;QACD,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAA+C,CAAC,EACrD,CAAC,OAAO,CAAC,CACV,CAAC;IAEF,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CACnC,GAAG,EAAE,CACH,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE;QAC7D,MAAM,GAAG,GAAG,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC/C,GAAG,CAAC,UAAU,CAAC,GAAG;YAChB,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI;YACpB,SAAS;YACT,MAAM,EAAE,KAAK;SACd,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,EACR,CAAC,SAAS,EAAE,sBAAsB,CAAC,CACpC,CAAC;IAEF,MAAM,OAAO,GAAG,oBAAoB,CAAuC,eAAe,CAAC,CAAC;IAE5F,IAAI,QAAQ,GAAG,IAAI,CAAC;IAEpB,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACxC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;;QAClB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;QAExD,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE;YACxB,IAAI,OAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,0CAAE,IAAI,MAAK,GAAG,EAAE;gBACjC,QAAQ,GAAG,KAAK,CAAC;aAClB;YACD,OAAO,IAAI,CAAC;SACb;QAED,IACE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE,CACvD,qBAAqB,CAAC,cAAc,EAAE,WAAW,CAAC,CACnD,EACD;YACA,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,UAAU,CAAC,CAAC;YAC5D,OAAO;gBACL,KAAK,EAAE,gBAAgB,CAAC,KAAK;gBAC7B,QAAQ,EAAE,IAAI;aACf,CAAC;SACH;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;SACD,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAEpB,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAsC,CAAC;AACzE,CAAC,CAAC","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { K8sResourceCommon, OwnerReference } from '@console/internal/module/k8s';\nimport { V1Volume } from '../types/vm/disk/V1Volume';\nimport { VolumeReferencedObject, VolumeWrapper } from '../k8s/wrapper/vm/volume-wrapper';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getOwnerReferences } from '@console/shared/src';\nimport { compareOwnerReference } from '@console/shared/src/utils/owner-references';\nimport { K8sResourceWithModel } from '../types/k8s-resource-with-model';\n\nexport const useOwnedVolumeReferencedResources = (\n  initialOwner: OwnerReference,\n  initialNamespace: string,\n  volumes: V1Volume[],\n) => {\n  const volumeOwner = React.useMemo(() => initialOwner, []);\n  const namespace = React.useMemo(() => initialNamespace, []);\n\n  const referencedObjectLookup = React.useMemo(\n    () =>\n      (volumes || []).reduce((acc, volume) => {\n        const ref = new VolumeWrapper(volume).getReferencedObject();\n        if (ref) {\n          acc[volume.name] = ref;\n        }\n        return acc;\n      }, {} as { [key: string]: VolumeReferencedObject }),\n    [volumes],\n  );\n\n  const resourceWatches = React.useMemo(\n    () =>\n      Object.keys(referencedObjectLookup).reduce((acc, volumeName) => {\n        const ref = referencedObjectLookup[volumeName];\n        acc[volumeName] = {\n          name: ref.name,\n          kind: ref.model.kind, // referenceForModel does not work for basic types like Secret, DataVolume\n          namespace,\n          isList: false,\n        };\n        return acc;\n      }, {}),\n    [namespace, referencedObjectLookup],\n  );\n\n  const results = useK8sWatchResources<{ [key: string]: K8sResourceCommon }>(resourceWatches);\n\n  let isLoaded = true;\n\n  const ownedResources = Object.keys(results)\n    .map((volumeName) => {\n      const { data, loaded, loadError } = results[volumeName];\n\n      if (!loaded || loadError) {\n        if (loadError?.json?.code !== 404) {\n          isLoaded = false;\n        }\n        return null;\n      }\n\n      if (\n        !_.isEmpty(data) &&\n        (getOwnerReferences(data) || []).some((ownerReference) =>\n          compareOwnerReference(ownerReference, volumeOwner),\n        )\n      ) {\n        const referencedObject = referencedObjectLookup[volumeName];\n        return {\n          model: referencedObject.model,\n          resource: data,\n        };\n      }\n      return null;\n    })\n    .filter((r) => r);\n\n  return [ownedResources, isLoaded] as [K8sResourceWithModel[], boolean];\n};\n"]}]}