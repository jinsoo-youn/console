{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/k8s-resource-select-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/k8s-resource-select-row.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FormSelect, FormSelectOption } from '@patternfly/react-core';\nimport { getName, ValidationErrorType } from '@console/shared';\nimport { getLoadedData, getLoadError, isLoaded } from '../../utils';\nimport { ignoreCaseSort } from '../../utils/sort';\nimport { FormRow } from './form-row';\nimport { asFormSelectValue, FormSelectPlaceholderOption } from './form-select-placeholder-option';\nexport const K8sResourceSelectRow = ({ id, isDisabled, isRequired, isPlaceholderDisabled, hasPlaceholder, data, onChange, name, model, title, validation, filter, }) => {\n    const isLoading = !isLoaded(data);\n    const loadError = getLoadError(data, model);\n    let loadedData = getLoadedData(data, []);\n    if (filter) {\n        loadedData = loadedData.filter(filter);\n    }\n    let nameValue;\n    let missingError;\n    if (name && !isLoading && !loadError && !loadedData.some((entity) => getName(entity) === name)) {\n        missingError = `Selected ${name} is not available`;\n    }\n    else {\n        nameValue = name;\n    }\n    return (React.createElement(FormRow, { title: title || model.label, fieldId: id, isLoading: isLoading, validationMessage: loadError || missingError || (validation && validation.message), validationType: loadError || missingError ? ValidationErrorType.Error : validation && validation.type, isRequired: isRequired },\n        React.createElement(FormSelect, { onChange: onChange, value: asFormSelectValue(nameValue), id: id, isDisabled: isDisabled || isLoading || loadError },\n            hasPlaceholder && (React.createElement(FormSelectPlaceholderOption, { isDisabled: isPlaceholderDisabled, placeholder: loadedData.length === 0\n                    ? `--- ${model.labelPlural} not available ---`\n                    : `--- Select ${model.label} ---` })),\n            ignoreCaseSort(loadedData, ['metadata', 'name']).map((entity) => {\n                const selectName = getName(entity);\n                return React.createElement(FormSelectOption, { key: selectName, value: selectName, label: selectName });\n            }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/k8s-resource-select-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/k8s-resource-select-row.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAGtE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAoB,MAAM,iBAAiB,CAAC;AACjF,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACpE,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAiBlG,MAAM,CAAC,MAAM,oBAAoB,GAAqC,CAAC,EACrE,EAAE,EACF,UAAU,EACV,UAAU,EACV,qBAAqB,EACrB,cAAc,EACd,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,KAAK,EACL,KAAK,EACL,UAAU,EACV,MAAM,GACP,EAAE,EAAE;IACH,MAAM,SAAS,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAE5C,IAAI,UAAU,GAAG,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAEzC,IAAI,MAAM,EAAE;QACV,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACxC;IAED,IAAI,SAAS,CAAC;IACd,IAAI,YAAY,CAAC;IAEjB,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE;QAC9F,YAAY,GAAG,YAAY,IAAI,mBAAmB,CAAC;KACpD;SAAM;QACL,SAAS,GAAG,IAAI,CAAC;KAClB;IAED,OAAO,CACL,oBAAC,OAAO,IACN,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,KAAK,EAC3B,OAAO,EAAE,EAAE,EACX,SAAS,EAAE,SAAS,EACpB,iBAAiB,EAAE,SAAS,IAAI,YAAY,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,EAClF,cAAc,EACZ,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,EAEvF,UAAU,EAAE,UAAU;QAEtB,oBAAC,UAAU,IACT,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,iBAAiB,CAAC,SAAS,CAAC,EACnC,EAAE,EAAE,EAAE,EACN,UAAU,EAAE,UAAU,IAAI,SAAS,IAAI,SAAS;YAE/C,cAAc,IAAI,CACjB,oBAAC,2BAA2B,IAC1B,UAAU,EAAE,qBAAqB,EACjC,WAAW,EACT,UAAU,CAAC,MAAM,KAAK,CAAC;oBACrB,CAAC,CAAC,OAAO,KAAK,CAAC,WAAW,oBAAoB;oBAC9C,CAAC,CAAC,cAAc,KAAK,CAAC,KAAK,MAAM,GAErC,CACH;YACA,cAAc,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC/D,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;gBACnC,OAAO,oBAAC,gBAAgB,IAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,GAAI,CAAC;YACrF,CAAC,CAAC,CACS,CACL,CACX,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FormSelect, FormSelectOption } from '@patternfly/react-core';\nimport { FirehoseResult } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getName, ValidationErrorType, ValidationObject } from '@console/shared';\nimport { getLoadedData, getLoadError, isLoaded } from '../../utils';\nimport { ignoreCaseSort } from '../../utils/sort';\nimport { FormRow } from './form-row';\nimport { asFormSelectValue, FormSelectPlaceholderOption } from './form-select-placeholder-option';\n\ntype K8sResourceSelectProps = {\n  id: string;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  isPlaceholderDisabled?: boolean;\n  hasPlaceholder?: boolean;\n  data?: FirehoseResult<K8sResourceKind[]>;\n  name?: string;\n  onChange: (name: string) => void;\n  model: K8sKind;\n  title?: string;\n  validation?: ValidationObject;\n  filter?: (obj: K8sResourceKind) => boolean;\n};\n\nexport const K8sResourceSelectRow: React.FC<K8sResourceSelectProps> = ({\n  id,\n  isDisabled,\n  isRequired,\n  isPlaceholderDisabled,\n  hasPlaceholder,\n  data,\n  onChange,\n  name,\n  model,\n  title,\n  validation,\n  filter,\n}) => {\n  const isLoading = !isLoaded(data);\n  const loadError = getLoadError(data, model);\n\n  let loadedData = getLoadedData(data, []);\n\n  if (filter) {\n    loadedData = loadedData.filter(filter);\n  }\n\n  let nameValue;\n  let missingError;\n\n  if (name && !isLoading && !loadError && !loadedData.some((entity) => getName(entity) === name)) {\n    missingError = `Selected ${name} is not available`;\n  } else {\n    nameValue = name;\n  }\n\n  return (\n    <FormRow\n      title={title || model.label}\n      fieldId={id}\n      isLoading={isLoading}\n      validationMessage={loadError || missingError || (validation && validation.message)}\n      validationType={\n        loadError || missingError ? ValidationErrorType.Error : validation && validation.type\n      }\n      isRequired={isRequired}\n    >\n      <FormSelect\n        onChange={onChange}\n        value={asFormSelectValue(nameValue)}\n        id={id}\n        isDisabled={isDisabled || isLoading || loadError}\n      >\n        {hasPlaceholder && (\n          <FormSelectPlaceholderOption\n            isDisabled={isPlaceholderDisabled}\n            placeholder={\n              loadedData.length === 0\n                ? `--- ${model.labelPlural} not available ---`\n                : `--- Select ${model.label} ---`\n            }\n          />\n        )}\n        {ignoreCaseSort(loadedData, ['metadata', 'name']).map((entity) => {\n          const selectName = getName(entity);\n          return <FormSelectOption key={selectName} value={selectName} label={selectName} />;\n        })}\n      </FormSelect>\n    </FormRow>\n  );\n};\n"]}]}