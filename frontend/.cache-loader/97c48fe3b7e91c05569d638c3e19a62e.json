{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/utilization-card/card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/utilization-card/card.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport { Dropdown, humanizeBinaryBytes } from '@console/internal/components/utils';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport { useMetricDuration, Duration, } from '@console/shared/src/components/dashboard/duration-hook';\nimport { PrometheusUtilizationItem } from '@console/internal/components/dashboard/dashboards-page/cluster-dashboard/utilization-card';\nimport { StorageDashboardQuery, INDEPENDENT_UTILIZATION_QUERIES } from '../../../constants/queries';\nconst UtilizationCard = () => {\n    const [duration, setDuration] = useMetricDuration();\n    const [timestamps, setTimestamps] = React.useState();\n    return (React.createElement(DashboardCard, null,\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Utilization\"),\n            React.createElement(Dropdown, { items: Duration, onChange: setDuration, selectedKey: duration, title: duration })),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(UtilizationBody, { timestamps: timestamps },\n                React.createElement(PrometheusUtilizationItem, { title: \"Used Capacity\", utilizationQuery: INDEPENDENT_UTILIZATION_QUERIES[StorageDashboardQuery.USED_CAPACITY], duration: duration, humanizeValue: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, setTimestamps: setTimestamps }),\n                React.createElement(PrometheusUtilizationItem, { title: \"Requested capacity\", utilizationQuery: INDEPENDENT_UTILIZATION_QUERIES[StorageDashboardQuery.REQUESTED_CAPACITY], duration: duration, humanizeValue: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, setTimestamps: setTimestamps })))));\n};\nexport default UtilizationCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/utilization-card/card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/utilization-card/card.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,kBAAkB,MAAM,4EAA4E,CAAC;AAC5G,OAAO,mBAAmB,MAAM,6EAA6E,CAAC;AAC9G,OAAO,aAAa,MAAM,uEAAuE,CAAC;AAClG,OAAO,EAAE,QAAQ,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACnF,OAAO,eAAe,MAAM,2EAA2E,CAAC;AACxG,OAAO,EAAE,aAAa,EAAE,MAAM,6CAA6C,CAAC;AAC5E,OAAO,iBAAiB,MAAM,2EAA2E,CAAC;AAC1G,OAAO,EACL,iBAAiB,EACjB,QAAQ,GACT,MAAM,wDAAwD,CAAC;AAChE,OAAO,EAAE,yBAAyB,EAAE,MAAM,2FAA2F,CAAC;AACtI,OAAO,EAAE,qBAAqB,EAAE,+BAA+B,EAAE,MAAM,4BAA4B,CAAC;AAEpG,MAAM,eAAe,GAAa,GAAG,EAAE;IACrC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,iBAAiB,EAAE,CAAC;IACpD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAU,CAAC;IAE7D,OAAO,CACL,oBAAC,aAAa;QACZ,oBAAC,mBAAmB;YAClB,oBAAC,kBAAkB,sBAAiC;YACpD,oBAAC,QAAQ,IAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,GAAI,CACxE;QACtB,oBAAC,iBAAiB;YAChB,oBAAC,eAAe,IAAC,UAAU,EAAE,UAAU;gBACrC,oBAAC,yBAAyB,IACxB,KAAK,EAAC,eAAe,EACrB,gBAAgB,EAAE,+BAA+B,CAAC,qBAAqB,CAAC,aAAa,CAAC,EACtF,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,mBAAmB,EAClC,YAAY,EAAE,aAAa,CAAC,WAAW,EACvC,aAAa,EAAE,aAAa,GAC5B;gBACF,oBAAC,yBAAyB,IACxB,KAAK,EAAC,oBAAoB,EAC1B,gBAAgB,EACd,+BAA+B,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,EAE3E,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,mBAAmB,EAClC,YAAY,EAAE,aAAa,CAAC,WAAW,EACvC,aAAa,EAAE,aAAa,GAC5B,CACc,CACA,CACN,CACjB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport { Dropdown, humanizeBinaryBytes } from '@console/internal/components/utils';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport {\n  useMetricDuration,\n  Duration,\n} from '@console/shared/src/components/dashboard/duration-hook';\nimport { PrometheusUtilizationItem } from '@console/internal/components/dashboard/dashboards-page/cluster-dashboard/utilization-card';\nimport { StorageDashboardQuery, INDEPENDENT_UTILIZATION_QUERIES } from '../../../constants/queries';\n\nconst UtilizationCard: React.FC = () => {\n  const [duration, setDuration] = useMetricDuration();\n  const [timestamps, setTimestamps] = React.useState<Date[]>();\n\n  return (\n    <DashboardCard>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Utilization</DashboardCardTitle>\n        <Dropdown items={Duration} onChange={setDuration} selectedKey={duration} title={duration} />\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <UtilizationBody timestamps={timestamps}>\n          <PrometheusUtilizationItem\n            title=\"Used Capacity\"\n            utilizationQuery={INDEPENDENT_UTILIZATION_QUERIES[StorageDashboardQuery.USED_CAPACITY]}\n            duration={duration}\n            humanizeValue={humanizeBinaryBytes}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            setTimestamps={setTimestamps}\n          />\n          <PrometheusUtilizationItem\n            title=\"Requested capacity\"\n            utilizationQuery={\n              INDEPENDENT_UTILIZATION_QUERIES[StorageDashboardQuery.REQUESTED_CAPACITY]\n            }\n            duration={duration}\n            humanizeValue={humanizeBinaryBytes}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            setTimestamps={setTimestamps}\n          />\n        </UtilizationBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default UtilizationCard;\n"]}]}