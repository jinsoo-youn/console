{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/resource-quota.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/resource-quota.jsx","mtime":1617957501080},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon, ResourcesAlmostEmptyIcon, ResourcesAlmostFullIcon, ResourcesFullIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { ListPage, DetailsPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, SectionHeading, navFactory, ResourceKebab, ResourceLink, ResourceSummary, convertToBaseValue, FieldLevelHelp } from './utils';\nimport { connectToFlags, flagPending } from '../reducers/features';\nimport { GaugeChart } from './graphs/gauge';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceForModel } from '../module/k8s';\nimport { ResourceQuotaModel, ClusterResourceQuotaModel } from '../models';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst resourceQuotaMenuActions = [...Kebab.getExtensionsActionsForKind(ResourceQuotaModel), ...common];\nconst clusterResourceQuotaMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel), ...common];\nconst isClusterQuota = quota => !quota.metadata.namespace;\nconst quotaKind = quota => (isClusterQuota(quota) ? referenceForModel(ClusterResourceQuotaModel) : referenceForModel(ResourceQuotaModel));\nconst quotaActions = quota => (quota.metadata.namespace ? resourceQuotaMenuActions : clusterResourceQuotaMenuActions);\nconst gaugeChartThresholds = [{ value: 90 }, { value: 101 }];\nconst quotaScopes = Object.freeze({\n    Terminating: {\n        label: 'Terminating',\n        description: 'Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n    },\n    NotTerminating: {\n        label: 'Not Terminating',\n        description: 'Affects pods that do not have an active deadline. These pods usually include your applications.',\n    },\n    BestEffort: {\n        label: 'Best Effort',\n        description: 'Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n    },\n    NotBestEffort: {\n        label: 'Not Best Effort',\n        description: 'Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n    },\n});\nexport const getQuotaResourceTypes = quota => {\n    const specHard = isClusterQuota(quota) ? _.get(quota, 'spec.quota.hard') : _.get(quota, 'spec.hard');\n    return _.keys(specHard).sort();\n};\nconst getResourceUsage = (quota, resourceType) => {\n    const isCluster = isClusterQuota(quota);\n    const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n    const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n    const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n    const max = _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n    const used = _.get(quota, [...usedPath, resourceType]);\n    const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n    return {\n        used,\n        max,\n        percent,\n    };\n};\nconst tableColumnClasses = [classNames('col-md-5', 'col-xs-6'), classNames('col-md-7', 'col-xs-6'), Kebab.columnClass];\nconst ResourceQuotaTableHeader = t => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[2] },\n        },\n    ];\n};\nResourceQuotaTableHeader.displayName = 'ResourceQuotaTableHeader';\nexport const ResourceQuotaTableRow = ({ obj: rq, index, key, style }) => {\n    return (React.createElement(TableRow, { id: rq.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: quotaKind(rq), name: rq.metadata.name, namespace: rq.metadata.namespace, className: \"co-resource-item__resource-name\" })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') }, rq.metadata.namespace ? React.createElement(ResourceLink, { kind: \"Namespace\", name: rq.metadata.namespace, title: rq.metadata.namespace }) : 'None'),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(ResourceKebab, { actions: quotaActions(rq), kind: quotaKind(rq), resource: rq }))));\n};\nexport const UsageIcon = ({ percent }) => {\n    let usageIcon = React.createElement(UnknownIcon, null);\n    if (percent === 0) {\n        usageIcon = React.createElement(OutlinedCircleIcon, { className: \"co-resource-quota-empty\" });\n    }\n    else if (percent > 0 && percent < 50) {\n        usageIcon = React.createElement(ResourcesAlmostEmptyIcon, { className: \"co-resource-quota-almost-empty\" });\n    }\n    else if (percent >= 50 && percent < 100) {\n        usageIcon = React.createElement(ResourcesAlmostFullIcon, { className: \"co-resource-quota-almost-full\" });\n    }\n    else if (percent === 100) {\n        usageIcon = React.createElement(ResourcesFullIcon, { className: \"co-resource-quota-full\" });\n    }\n    else if (percent > 100) {\n        usageIcon = React.createElement(YellowExclamationTriangleIcon, { className: \"co-resource-quota-exceeded\" });\n    }\n    return usageIcon;\n};\nexport const ResourceUsageRow = ({ quota, resourceType }) => {\n    const { used, max, percent } = getResourceUsage(quota, resourceType);\n    return (React.createElement(\"div\", { className: \"row co-m-row\" },\n        React.createElement(\"div\", { className: \"col-sm-4 col-xs-6 co-break-word\" }, resourceType),\n        React.createElement(\"div\", { className: \"col-sm-2 hidden-xs co-resource-quota-icon\" },\n            React.createElement(UsageIcon, { percent: percent })),\n        React.createElement(\"div\", { className: \"col-sm-3 col-xs-3\" }, used),\n        React.createElement(\"div\", { className: \"col-sm-3 col-xs-3\" }, max)));\n};\nconst NoQuotaGuage = ({ title, className }) => React.createElement(GaugeChart, { error: \"No Quota\", thresholds: [{ value: 100 }], title: title, className: className });\nexport const QuotaGaugeCharts = ({ quota, resourceTypes, chartClassName = null }) => {\n    const { t } = useTranslation();\n    const resourceTypesSet = new Set(resourceTypes);\n    return (React.createElement(\"div\", { className: \"co-resource-quota-chart-row\" },\n        resourceTypesSet.has('requests.cpu') || resourceTypesSet.has('cpu') ? (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(GaugeChart, { data: {\n                    y: getResourceUsage(quota, resourceTypesSet.has('requests.cpu') ? 'requests.cpu' : 'cpu').percent,\n                }, thresholds: gaugeChartThresholds, title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_87'), className: chartClassName }))) : (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(NoQuotaGuage, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_87') }))),\n        resourceTypesSet.has('limits.cpu') ? (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(GaugeChart, { data: { y: getResourceUsage(quota, 'limits.cpu').percent }, thresholds: gaugeChartThresholds, title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_88'), className: chartClassName }))) : (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(NoQuotaGuage, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_88'), className: chartClassName }))),\n        resourceTypesSet.has('requests.memory') || resourceTypesSet.has('memory') ? (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(GaugeChart, { data: {\n                    y: getResourceUsage(quota, resourceTypesSet.has('requests.memory') ? 'requests.memory' : 'memory').percent,\n                }, thresholds: gaugeChartThresholds, title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_89'), className: chartClassName }))) : (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(NoQuotaGuage, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_89'), className: chartClassName }))),\n        resourceTypesSet.has('limits.memory') ? (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(GaugeChart, { data: { y: getResourceUsage(quota, 'limits.memory').percent }, thresholds: gaugeChartThresholds, title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_90'), className: chartClassName }))) : (React.createElement(\"div\", { className: \"co-resource-quota-gauge-chart\" },\n            React.createElement(NoQuotaGuage, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_90'), className: chartClassName })))));\n};\nexport const QuotaScopesInline = ({ scopes, className }) => {\n    return (React.createElement(\"span\", { className: classNames(className) },\n        \"(\",\n        scopes\n            .map(scope => {\n            const scopeObj = _.get(quotaScopes, scope);\n            return scopeObj ? scopeObj.label : scope;\n        })\n            .join(','),\n        \")\"));\n};\nexport const QuotaScopesList = ({ scopes }) => {\n    return scopes.map(scope => {\n        const scopeObj = _.get(quotaScopes, scope);\n        return scopeObj ? (React.createElement(\"dd\", { key: scope },\n            React.createElement(\"div\", { className: \"co-resource-quota-scope__label\" }, scopeObj.label),\n            React.createElement(\"div\", { className: \"co-resource-quota-scope__description\" }, scopeObj.description))) : (React.createElement(\"dd\", { key: scope, className: \"co-resource-quota-scope__label\" }, scope));\n    });\n};\nexport const hasComputeResources = resourceTypes => {\n    const chartResourceTypes = ['requests.cpu', 'cpu', 'limits.cpu', 'requests.memory', 'memory', 'limits.memory'];\n    return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\nconst Details = ({ obj: rq }) => {\n    const { t } = useTranslation();\n    const resourceTypes = getQuotaResourceTypes(rq);\n    const showChartRow = hasComputeResources(resourceTypes);\n    const scopes = _.get(rq, ['spec', 'scopes']);\n    const label = isClusterQuota(rq) ? ClusterResourceQuotaModel.label : ResourceQuotaModel.label;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_80') }) }),\n            showChartRow && React.createElement(QuotaGaugeCharts, { quota: rq, resourceTypes: resourceTypes }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(ResourceSummary, { resource: rq })),\n                scopes && (React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", null, \"Scopes\"),\n                        React.createElement(QuotaScopesList, { scopes: scopes })))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_80') }), style: { display: 'block', marginBottom: '20px' } },\n                React.createElement(FieldLevelHelp, null,\n                    React.createElement(\"p\", null, \"Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.\"),\n                    React.createElement(\"p\", null, \"Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.\"),\n                    React.createElement(\"p\", null, \"A cluster administrator can establish limits on both the amount you can Request and your Limits with a Resource Quota.\"))),\n            React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n                React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                    React.createElement(\"div\", { className: \"col-sm-4 col-xs-6\" }, t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_1')),\n                    React.createElement(\"div\", { className: \"col-sm-2 hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_2')),\n                    React.createElement(\"div\", { className: \"col-sm-3 col-xs-3\" }, t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_3')),\n                    React.createElement(\"div\", { className: \"col-sm-3 col-xs-3\" }, t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_4'))),\n                React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, resourceTypes.map(type => (React.createElement(ResourceUsageRow, { key: type, quota: rq, resourceType: type }))))))));\n};\nexport const ResourceQuotasList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Resource Quoates\", Header: ResourceQuotaTableHeader.bind(null, t), Row: ResourceQuotaTableRow, virtualize: true }));\n};\nexport const quotaType = quota => {\n    if (!quota) {\n        return undefined;\n    }\n    return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n// Split each resource quota into one row per subject\nexport const flatten = resources => _.flatMap(resources, resource => _.compact(resource.data));\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(props => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters;\n    const flags = props.flags;\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n        return React.createElement(LoadingBox, null);\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n        resources.push({\n            kind: referenceForModel(ClusterResourceQuotaModel),\n            namespaced: false,\n            optional: true,\n        });\n        rowFilters = [\n            {\n                filterGroupName: 'Role',\n                type: 'role-kind',\n                reducer: quotaType,\n                items: [\n                    { id: 'cluster', title: 'Cluster-wide Resource Quotas' },\n                    { id: 'namespace', title: 'Namespace Resource Quotas' },\n                ],\n            },\n        ];\n    }\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_80'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: ResourceLabel(ResourceQuotaModel, t) }), canCreate: true, ListComponent: ResourceQuotasList, kind: \"ResourceQuota\" }, props));\n});\nexport const ResourceQuotasDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { menuActions: resourceQuotaMenuActions, pages: [navFactory.details(Details), navFactory.editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/resource-quota.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/resource-quota.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon, ResourcesAlmostEmptyIcon, ResourcesAlmostFullIcon, ResourcesFullIcon, UnknownIcon } from '@patternfly/react-icons';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { ListPage, DetailsPage, MultiListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, SectionHeading, navFactory, ResourceKebab, ResourceLink, ResourceSummary, convertToBaseValue, FieldLevelHelp } from './utils';\nimport { connectToFlags, flagPending } from '../reducers/features';\nimport { GaugeChart } from './graphs/gauge';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceForModel } from '../module/k8s';\nimport { ResourceQuotaModel, ClusterResourceQuotaModel } from '../models';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst resourceQuotaMenuActions = [...Kebab.getExtensionsActionsForKind(ResourceQuotaModel), ...common];\nconst clusterResourceQuotaMenuActions = [...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel), ...common];\n\nconst isClusterQuota = quota => !quota.metadata.namespace;\n\nconst quotaKind = quota => (isClusterQuota(quota) ? referenceForModel(ClusterResourceQuotaModel) : referenceForModel(ResourceQuotaModel));\nconst quotaActions = quota => (quota.metadata.namespace ? resourceQuotaMenuActions : clusterResourceQuotaMenuActions);\nconst gaugeChartThresholds = [{ value: 90 }, { value: 101 }];\n\nconst quotaScopes = Object.freeze({\n  Terminating: {\n    label: 'Terminating',\n    description: 'Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n  },\n  NotTerminating: {\n    label: 'Not Terminating',\n    description: 'Affects pods that do not have an active deadline. These pods usually include your applications.',\n  },\n  BestEffort: {\n    label: 'Best Effort',\n    description: 'Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n  },\n  NotBestEffort: {\n    label: 'Not Best Effort',\n    description: 'Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n  },\n});\n\nexport const getQuotaResourceTypes = quota => {\n  const specHard = isClusterQuota(quota) ? _.get(quota, 'spec.quota.hard') : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nconst getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max = _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [classNames('col-md-5', 'col-xs-6'), classNames('col-md-7', 'col-xs-6'), Kebab.columnClass];\n\nconst ResourceQuotaTableHeader = t => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[2] },\n    },\n  ];\n};\nResourceQuotaTableHeader.displayName = 'ResourceQuotaTableHeader';\n\nexport const ResourceQuotaTableRow = ({ obj: rq, index, key, style }) => {\n  return (\n    <TableRow id={rq.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={quotaKind(rq)} name={rq.metadata.name} namespace={rq.metadata.namespace} className=\"co-resource-item__resource-name\" />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>{rq.metadata.namespace ? <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} title={rq.metadata.namespace} /> : 'None'}</TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <ResourceKebab actions={quotaActions(rq)} kind={quotaKind(rq)} resource={rq} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType }) => {\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nconst NoQuotaGuage = ({ title, className }) => <GaugeChart error=\"No Quota\" thresholds={[{ value: 100 }]} title={title} className={className} />;\n\nexport const QuotaGaugeCharts = ({ quota, resourceTypes, chartClassName = null }) => {\n  const { t } = useTranslation();\n  const resourceTypesSet = new Set(resourceTypes);\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {resourceTypesSet.has('requests.cpu') || resourceTypesSet.has('cpu') ? (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <GaugeChart\n            data={{\n              y: getResourceUsage(quota, resourceTypesSet.has('requests.cpu') ? 'requests.cpu' : 'cpu').percent,\n            }}\n            thresholds={gaugeChartThresholds}\n            title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_87')}\n            className={chartClassName}\n          />\n        </div>\n      ) : (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <NoQuotaGuage title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_87')} />\n        </div>\n      )}\n      {resourceTypesSet.has('limits.cpu') ? (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <GaugeChart data={{ y: getResourceUsage(quota, 'limits.cpu').percent }} thresholds={gaugeChartThresholds} title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_88')} className={chartClassName} />\n        </div>\n      ) : (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <NoQuotaGuage title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_88')} className={chartClassName} />\n        </div>\n      )}\n      {resourceTypesSet.has('requests.memory') || resourceTypesSet.has('memory') ? (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <GaugeChart\n            data={{\n              y: getResourceUsage(quota, resourceTypesSet.has('requests.memory') ? 'requests.memory' : 'memory').percent,\n            }}\n            thresholds={gaugeChartThresholds}\n            title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_89')}\n            className={chartClassName}\n          />\n        </div>\n      ) : (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <NoQuotaGuage title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_89')} className={chartClassName} />\n        </div>\n      )}\n      {resourceTypesSet.has('limits.memory') ? (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <GaugeChart data={{ y: getResourceUsage(quota, 'limits.memory').percent }} thresholds={gaugeChartThresholds} title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_90')} className={chartClassName} />\n        </div>\n      ) : (\n        <div className=\"co-resource-quota-gauge-chart\">\n          <NoQuotaGuage title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_90')} className={chartClassName} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes, className }) => {\n  return (\n    <span className={classNames(className)}>\n      (\n      {scopes\n        .map(scope => {\n          const scopeObj = _.get(quotaScopes, scope);\n          return scopeObj ? scopeObj.label : scope;\n        })\n        .join(',')}\n      )\n    </span>\n  );\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  return scopes.map(scope => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scopeObj.label}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = resourceTypes => {\n  const chartResourceTypes = ['requests.cpu', 'cpu', 'limits.cpu', 'requests.memory', 'memory', 'limits.memory'];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const showChartRow = hasComputeResources(resourceTypes);\n  const scopes = _.get(rq, ['spec', 'scopes']);\n  const label = isClusterQuota(rq) ? ClusterResourceQuotaModel.label : ResourceQuotaModel.label;\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_80') })} />\n        {showChartRow && <QuotaGaugeCharts quota={rq} resourceTypes={resourceTypes} />}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq} />\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>Scopes</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_80') })} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.</p>\n            <p>Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.</p>\n            <p>A cluster administrator can establish limits on both the amount you can Request and your Limits with a Resource Quota.</p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_1')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_2')}</div>\n            <div className=\"col-sm-3 col-xs-3\">{t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_3')}</div>\n            <div className=\"col-sm-3 col-xs-3\">{t('COMMON:MSG_DETAILS_TABDETAILS_RESOURCEQUOTADETAILS_TABLEHEADER_4')}</div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map(type => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Resource Quoates\" Header={ResourceQuotaTableHeader.bind(null, t)} Row={ResourceQuotaTableRow} virtualize />;\n};\n\nexport const quotaType = quota => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = resources => _.flatMap(resources, resource => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(props => {\n  const { t } = useTranslation();\n  const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n  let rowFilters;\n  const flags = props.flags;\n\n  if (flagPending(flags[FLAGS.OPENSHIFT])) {\n    return <LoadingBox />;\n  }\n  if (flags[FLAGS.OPENSHIFT]) {\n    resources.push({\n      kind: referenceForModel(ClusterResourceQuotaModel),\n      namespaced: false,\n      optional: true,\n    });\n    rowFilters = [\n      {\n        filterGroupName: 'Role',\n        type: 'role-kind',\n        reducer: quotaType,\n        items: [\n          { id: 'cluster', title: 'Cluster-wide Resource Quotas' },\n          { id: 'namespace', title: 'Namespace Resource Quotas' },\n        ],\n      },\n    ];\n  }\n\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_80')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: ResourceLabel(ResourceQuotaModel, t) })} canCreate={true} ListComponent={ResourceQuotasList} kind=\"ResourceQuota\" {...props} />;\n});\n\nexport const ResourceQuotasDetailsPage = props => <DetailsPage {...props} menuActions={resourceQuotaMenuActions} pages={[navFactory.details(Details), navFactory.editYaml()]} />;\n"]}]}