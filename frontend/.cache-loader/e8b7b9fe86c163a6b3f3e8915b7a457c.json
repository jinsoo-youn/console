{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/revisions/DeleteRevisionModalController.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/revisions/DeleteRevisionModalController.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Formik } from 'formik';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { RedExclamationCircleIcon } from '@console/shared';\nimport { k8sKill, k8sUpdate, referenceForModel, } from '@console/internal/module/k8s';\nimport { Firehose, history, resourceListPathFromModel, } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalBody, ModalFooter, ModalTitle, } from '@console/internal/components/factory';\nimport { KNATIVE_SERVING_LABEL } from '../../const';\nimport { RevisionModel, ServiceModel } from '../../models';\nimport { transformTrafficSplittingData, knativeServingResourcesTrafficSplitting, getRevisionItems, constructObjForUpdate, } from '../../utils/traffic-splitting-utils';\nimport DeleteRevisionModal from './DeleteRevisionModal';\nconst Controller = ({ loaded, resources, revision, cancel, close }) => {\n    var _a, _b;\n    if (!loaded) {\n        return null;\n    }\n    const service = resources.services.data.find((s) => {\n        return revision.metadata.labels[KNATIVE_SERVING_LABEL] === s.metadata.name;\n    });\n    const revisions = transformTrafficSplittingData(service, resources).filter((r) => revision.metadata.uid !== r.metadata.uid);\n    if (revisions.length === 0) {\n        return (React.createElement(\"form\", { className: \"modal-content\", onSubmit: close },\n            React.createElement(ModalTitle, null,\n                React.createElement(RedExclamationCircleIcon, { className: \"co-icon-space-r\" }),\n                \"Unable to delete \",\n                RevisionModel.label),\n            React.createElement(ModalBody, null,\n                React.createElement(\"p\", null,\n                    \"You cannot delete the last \",\n                    RevisionModel.label,\n                    \" for the \",\n                    ServiceModel.label,\n                    \".\")),\n            React.createElement(ModalFooter, { inProgress: false },\n                React.createElement(ActionGroup, { className: \"pf-c-form pf-c-form__actions--right pf-c-form__group--no-top-margin\" },\n                    React.createElement(Button, { type: \"button\", variant: \"secondary\", \"data-test-id\": \"modal-cancel-action\", onClick: close }, \"OK\")))));\n    }\n    const revisionItems = getRevisionItems(revisions);\n    const traffic = (_b = (_a = service === null || service === void 0 ? void 0 : service.status) === null || _a === void 0 ? void 0 : _a.traffic) !== null && _b !== void 0 ? _b : [{ percent: 0, tag: '', revisionName: '' }];\n    const deleteTraffic = traffic.find((t) => t.revisionName === revision.metadata.name);\n    const initialValues = {\n        trafficSplitting: traffic.reduce((acc, t) => {\n            if (!t.revisionName || revisions.find((r) => r.metadata.name === t.revisionName)) {\n                acc.push({\n                    percent: t.percent,\n                    tag: t.tag || '',\n                    revisionName: t.revisionName || '',\n                });\n            }\n            return acc;\n        }, []),\n    };\n    if (initialValues.trafficSplitting.length === 0 && revisions.length > 0) {\n        initialValues.trafficSplitting.push({\n            percent: 0,\n            tag: '',\n            revisionName: revisions[0].metadata.name,\n        });\n    }\n    const deleteRevision = (action) => {\n        k8sKill(RevisionModel, revision)\n            .then(() => {\n            close();\n            // If we are currently on the deleted revision's page, redirect to the list page\n            const re = new RegExp(`/${revision.metadata.name}(/|$)`);\n            if (re.test(window.location.pathname)) {\n                history.push(resourceListPathFromModel(RevisionModel, revision.metadata.namespace));\n            }\n        })\n            .catch((err) => {\n            action.setStatus({ error: err.message || 'An error occurred. Please try again' });\n        });\n    };\n    const handleSubmit = (values, action) => {\n        const obj = constructObjForUpdate(values.trafficSplitting, service);\n        if (!deleteTraffic || deleteTraffic.percent === 0) {\n            deleteRevision(action);\n            return;\n        }\n        k8sUpdate(ServiceModel, obj)\n            .then(() => {\n            deleteRevision(action);\n        })\n            .catch((err) => {\n            action.setStatus({ error: err.message || 'An error occurred. Please try again' });\n        });\n    };\n    return (React.createElement(Formik, { initialValues: initialValues, onSubmit: handleSubmit, onReset: cancel, initialStatus: { error: '' } }, (modalProps) => (React.createElement(DeleteRevisionModal, Object.assign({}, modalProps, { revisionItems: revisionItems, deleteRevision: revision, showTraffic: (deleteTraffic === null || deleteTraffic === void 0 ? void 0 : deleteTraffic.percent) > 0 })))));\n};\nconst DeleteRevisionModalController = (props) => {\n    const { metadata: { namespace }, } = props.revision;\n    const resources = knativeServingResourcesTrafficSplitting(namespace);\n    resources.push({\n        isList: true,\n        kind: referenceForModel(ServiceModel),\n        namespace,\n        prop: 'services',\n    });\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(Controller, Object.assign({}, props))));\n};\nexport const deleteRevisionModalLauncher = createModalLauncher(DeleteRevisionModalController);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/revisions/DeleteRevisionModalController.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/revisions/DeleteRevisionModalController.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Formik, FormikHelpers, FormikValues } from 'formik';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { RedExclamationCircleIcon } from '@console/shared';\nimport {\n  k8sKill,\n  K8sResourceKind,\n  k8sUpdate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport {\n  Firehose,\n  FirehoseResult,\n  history,\n  resourceListPathFromModel,\n} from '@console/internal/components/utils';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\nimport { KNATIVE_SERVING_LABEL } from '../../const';\nimport { RevisionModel, ServiceModel } from '../../models';\nimport {\n  transformTrafficSplittingData,\n  knativeServingResourcesTrafficSplitting,\n  getRevisionItems,\n  constructObjForUpdate,\n} from '../../utils/traffic-splitting-utils';\nimport { TrafficSplittingType } from '../traffic-splitting/TrafficSplitting';\nimport DeleteRevisionModal from './DeleteRevisionModal';\n\ntype ControllerProps = {\n  loaded?: boolean;\n  revision?: K8sResourceKind;\n  resources?: {\n    configurations: FirehoseResult;\n    revisions: FirehoseResult;\n    services: FirehoseResult;\n  };\n  cancel?: () => void;\n  close?: () => void;\n};\n\nconst Controller: React.FC<ControllerProps> = ({ loaded, resources, revision, cancel, close }) => {\n  if (!loaded) {\n    return null;\n  }\n  const service = resources.services.data.find((s: K8sResourceKind) => {\n    return revision.metadata.labels[KNATIVE_SERVING_LABEL] === s.metadata.name;\n  });\n\n  const revisions = transformTrafficSplittingData(service, resources).filter(\n    (r) => revision.metadata.uid !== r.metadata.uid,\n  );\n\n  if (revisions.length === 0) {\n    return (\n      <form className=\"modal-content\" onSubmit={close}>\n        <ModalTitle>\n          <RedExclamationCircleIcon className=\"co-icon-space-r\" />\n          Unable to delete {RevisionModel.label}\n        </ModalTitle>\n        <ModalBody>\n          <p>\n            You cannot delete the last {RevisionModel.label} for the {ServiceModel.label}.\n          </p>\n        </ModalBody>\n        <ModalFooter inProgress={false}>\n          <ActionGroup className=\"pf-c-form pf-c-form__actions--right pf-c-form__group--no-top-margin\">\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              data-test-id=\"modal-cancel-action\"\n              onClick={close}\n            >\n              OK\n            </Button>\n          </ActionGroup>\n        </ModalFooter>\n      </form>\n    );\n  }\n\n  const revisionItems = getRevisionItems(revisions);\n\n  const traffic = service?.status?.traffic ?? [{ percent: 0, tag: '', revisionName: '' }];\n  const deleteTraffic = traffic.find((t) => t.revisionName === revision.metadata.name);\n\n  const initialValues: TrafficSplittingType = {\n    trafficSplitting: traffic.reduce((acc, t) => {\n      if (!t.revisionName || revisions.find((r) => r.metadata.name === t.revisionName)) {\n        acc.push({\n          percent: t.percent,\n          tag: t.tag || '',\n          revisionName: t.revisionName || '',\n        });\n      }\n      return acc;\n    }, []),\n  };\n\n  if (initialValues.trafficSplitting.length === 0 && revisions.length > 0) {\n    initialValues.trafficSplitting.push({\n      percent: 0,\n      tag: '',\n      revisionName: revisions[0].metadata.name,\n    });\n  }\n\n  const deleteRevision = (action: FormikHelpers<FormikValues>) => {\n    k8sKill(RevisionModel, revision)\n      .then(() => {\n        close();\n        // If we are currently on the deleted revision's page, redirect to the list page\n        const re = new RegExp(`/${revision.metadata.name}(/|$)`);\n        if (re.test(window.location.pathname)) {\n          history.push(resourceListPathFromModel(RevisionModel, revision.metadata.namespace));\n        }\n      })\n      .catch((err) => {\n        action.setStatus({ error: err.message || 'An error occurred. Please try again' });\n      });\n  };\n\n  const handleSubmit = (values: FormikValues, action: FormikHelpers<FormikValues>) => {\n    const obj = constructObjForUpdate(values.trafficSplitting, service);\n    if (!deleteTraffic || deleteTraffic.percent === 0) {\n      deleteRevision(action);\n      return;\n    }\n\n    k8sUpdate(ServiceModel, obj)\n      .then(() => {\n        deleteRevision(action);\n      })\n      .catch((err) => {\n        action.setStatus({ error: err.message || 'An error occurred. Please try again' });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={cancel}\n      initialStatus={{ error: '' }}\n    >\n      {(modalProps) => (\n        <DeleteRevisionModal\n          {...modalProps}\n          revisionItems={revisionItems}\n          deleteRevision={revision}\n          showTraffic={deleteTraffic?.percent > 0}\n        />\n      )}\n    </Formik>\n  );\n};\n\ntype DeleteRevisionModalControllerProps = {\n  revision: K8sResourceKind;\n};\n\nconst DeleteRevisionModalController: React.FC<DeleteRevisionModalControllerProps> = (props) => {\n  const {\n    metadata: { namespace },\n  } = props.revision;\n  const resources = knativeServingResourcesTrafficSplitting(namespace);\n  resources.push({\n    isList: true,\n    kind: referenceForModel(ServiceModel),\n    namespace,\n    prop: 'services',\n  });\n\n  return (\n    <Firehose resources={resources}>\n      <Controller {...props} />\n    </Firehose>\n  );\n};\n\ntype Props = DeleteRevisionModalControllerProps & ModalComponentProps;\n\nexport const deleteRevisionModalLauncher = createModalLauncher<Props>(\n  DeleteRevisionModalController,\n);\n"]}]}