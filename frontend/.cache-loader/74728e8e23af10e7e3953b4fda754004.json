{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withRemoveConnector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withRemoveConnector.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport DefaultRemoveConnector from '../components/DefaultRemoveConnector';\nconst defaultRenderRemove = (edge, onRemove) => {\n    const removeEdge = () => {\n        onRemove(edge);\n    };\n    return (React.createElement(DefaultRemoveConnector, { startPoint: edge.getStartPoint(), endPoint: edge.getEndPoint(), onRemove: removeEdge }));\n};\nexport const withRemoveConnector = (onRemove, renderRemove = defaultRenderRemove) => (WrappedComponent) => {\n    const Component = (props) => {\n        const [show, setShow] = React.useState(false);\n        const onShowRemoveConnector = React.useCallback(() => setShow(true), []);\n        const onHideRemoveConnector = React.useCallback(() => setShow(false), []);\n        return (React.createElement(WrappedComponent, Object.assign({}, props, { onShowRemoveConnector: onShowRemoveConnector, onHideRemoveConnector: onHideRemoveConnector }), show && renderRemove(props.element, onRemove)));\n    };\n    return observer(Component);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withRemoveConnector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/behavior/withRemoveConnector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,OAAO,sBAAsB,MAAM,sCAAsC,CAAC;AAiB1E,MAAM,mBAAmB,GAAmB,CAAC,IAAU,EAAE,QAA8B,EAAE,EAAE;IACzF,MAAM,UAAU,GAAG,GAAG,EAAE;QACtB,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,sBAAsB,IACrB,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,EAChC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,EAC5B,QAAQ,EAAE,UAAU,GACpB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,QAA8B,EAC9B,eAA+B,mBAAmB,EAClD,EAAE,CAAC,CAAC,gBAAwC,EAAE,EAAE;IAChD,MAAM,SAAS,GAAsD,CAAC,KAAK,EAAE,EAAE;QAC7E,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACzE,MAAM,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAE1E,OAAO,CACL,oBAAC,gBAAgB,oBACV,KAAa,IAClB,qBAAqB,EAAE,qBAAqB,EAC5C,qBAAqB,EAAE,qBAAqB,KAE3C,IAAI,IAAI,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAC7B,CACpB,CAAC;IACJ,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Edge } from '../types';\nimport DefaultRemoveConnector from '../components/DefaultRemoveConnector';\n\ntype ElementProps = {\n  element: Edge;\n};\n\nexport type WithRemoveConnectorProps = {\n  onShowRemoveConnector?: () => void;\n  onHideRemoveConnector?: () => void;\n};\n\ntype RemoveRenderer = (\n  edge: Edge,\n  onRemove: (edge: Edge) => void,\n  size?: number,\n) => React.ReactElement;\n\nconst defaultRenderRemove: RemoveRenderer = (edge: Edge, onRemove: (edge: Edge) => void) => {\n  const removeEdge = () => {\n    onRemove(edge);\n  };\n\n  return (\n    <DefaultRemoveConnector\n      startPoint={edge.getStartPoint()}\n      endPoint={edge.getEndPoint()}\n      onRemove={removeEdge}\n    />\n  );\n};\n\nexport const withRemoveConnector = <P extends WithRemoveConnectorProps & ElementProps>(\n  onRemove: (edge: Edge) => void,\n  renderRemove: RemoveRenderer = defaultRenderRemove,\n) => (WrappedComponent: React.ComponentType<P>) => {\n  const Component: React.FC<Omit<P, keyof WithRemoveConnectorProps>> = (props) => {\n    const [show, setShow] = React.useState(false);\n    const onShowRemoveConnector = React.useCallback(() => setShow(true), []);\n    const onHideRemoveConnector = React.useCallback(() => setShow(false), []);\n\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowRemoveConnector={onShowRemoveConnector}\n        onHideRemoveConnector={onHideRemoveConnector}\n      >\n        {show && renderRemove(props.element, onRemove)}\n      </WrappedComponent>\n    );\n  };\n  return observer(Component);\n};\n"]}]}