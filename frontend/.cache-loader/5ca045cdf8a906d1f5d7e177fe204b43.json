{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/EmptyState.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/EmptyState.tsx","mtime":1617154808360},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport { CatalogTile } from '@patternfly/react-catalog-view-extension';\nimport { connect } from 'react-redux';\nimport { history, PageHeading, useAccessReview } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk';\nimport { isAddAction } from '../extensions/add-actions';\nimport './EmptyState.scss';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nconst navigateTo = (e, url) => {\n    history.push(url);\n    e.preventDefault();\n};\nconst Item = ({ action: { properties: { id, label, description, icon, iconClass, url, accessReview }, }, namespace, }) => {\n    const access = !accessReview ||\n        // Defined extensions are immutable. This check will be consistent.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        accessReview.map(descriptor => useAccessReview(Object.assign({ namespace }, descriptor))).every(x => x);\n    if (namespace === ALL_NAMESPACES_KEY && url.match(/:namespace\\b/)) {\n        // URL expects namespace scope\n        return null;\n    }\n    const resolvedUrl = url.replace(/:namespace\\b/g, namespace);\n    return access ? (React.createElement(GalleryItem, null,\n        React.createElement(CatalogTile, { \"data-test-id\": id, className: \"odc-empty-state__tile\", onClick: (e) => navigateTo(e, resolvedUrl), href: resolvedUrl, title: label, iconImg: typeof icon === 'string' ? icon : undefined, iconClass: iconClass, icon: React.isValidElement(icon) ? icon : undefined, description: description }))) : null;\n};\nconst ODCEmptyState = ({ title, activeNamespace, hintBlock = 'Select a way to create an application, component or service from one of the options.' }) => {\n    const addActionExtensions = useExtensions(isAddAction).filter(({ properties: { hide } }) => (hide ? hide() : true));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"odc-empty-state__title\" },\n            React.createElement(PageHeading, { title: title }),\n            hintBlock && React.createElement(\"div\", { className: \"co-catalog-page__description odc-empty-state__hint-block\" }, hintBlock)),\n        React.createElement(\"div\", { className: \"odc-empty-state__content\" },\n            React.createElement(Gallery, { className: \"co-catalog-tile-view\", gutter: \"sm\" }, addActionExtensions.map(action => (React.createElement(Item, { key: action.properties.id, namespace: activeNamespace, action: action })))))));\n};\nconst mapStateToProps = (state) => {\n    return {\n        activeNamespace: state.UI.get('activeNamespace'),\n    };\n};\nexport default connect(mapStateToProps)(ODCEmptyState);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/EmptyState.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/EmptyState.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport { CatalogTile } from '@patternfly/react-catalog-view-extension';\nimport { connect } from 'react-redux';\nimport { history, PageHeading, useAccessReview } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport { isAddAction, AddAction } from '../extensions/add-actions';\nimport './EmptyState.scss';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\n\nconst navigateTo = (e: React.SyntheticEvent, url: string) => {\n  history.push(url);\n  e.preventDefault();\n};\n\ninterface ItemProps {\n  action: AddAction;\n  namespace: string;\n}\n\nconst Item: React.FC<ItemProps> = ({\n  action: {\n    properties: { id, label, description, icon, iconClass, url, accessReview },\n  },\n  namespace,\n}) => {\n  const access =\n    !accessReview ||\n    // Defined extensions are immutable. This check will be consistent.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    accessReview.map(descriptor => useAccessReview({ namespace, ...descriptor })).every(x => x);\n  if (namespace === ALL_NAMESPACES_KEY && url.match(/:namespace\\b/)) {\n    // URL expects namespace scope\n    return null;\n  }\n  const resolvedUrl = url.replace(/:namespace\\b/g, namespace);\n  return access ? (\n    <GalleryItem>\n      <CatalogTile data-test-id={id} className=\"odc-empty-state__tile\" onClick={(e: React.SyntheticEvent) => navigateTo(e, resolvedUrl)} href={resolvedUrl} title={label} iconImg={typeof icon === 'string' ? icon : undefined} iconClass={iconClass} icon={React.isValidElement(icon) ? icon : undefined} description={description} />\n    </GalleryItem>\n  ) : null;\n};\n\ninterface StateProps {\n  activeNamespace: string;\n}\n\ninterface EmptySProps {\n  title: string;\n  hintBlock?: React.ReactNode;\n}\n\ntype Props = EmptySProps & StateProps;\n\nconst ODCEmptyState: React.FC<Props> = ({ title, activeNamespace, hintBlock = 'Select a way to create an application, component or service from one of the options.' }) => {\n  const addActionExtensions = useExtensions<AddAction>(isAddAction).filter(({ properties: { hide } }) => (hide ? hide() : true));\n  return (\n    <>\n      <div className=\"odc-empty-state__title\">\n        <PageHeading title={title} />\n        {hintBlock && <div className=\"co-catalog-page__description odc-empty-state__hint-block\">{hintBlock}</div>}\n      </div>\n      <div className=\"odc-empty-state__content\">\n        <Gallery className=\"co-catalog-tile-view\" gutter=\"sm\">\n          {addActionExtensions.map(action => (\n            <Item key={action.properties.id} namespace={activeNamespace} action={action} />\n          ))}\n        </Gallery>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    activeNamespace: state.UI.get('activeNamespace'),\n  };\n};\n\nexport default connect<StateProps>(mapStateToProps)(ODCEmptyState);\n"]}]}