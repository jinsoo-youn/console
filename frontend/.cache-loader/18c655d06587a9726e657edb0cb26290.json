{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleasePanel.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleasePanel.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { navFactory, ResourceIcon, SimpleTabNav, StatusBox, ActionsMenu, } from '@console/internal/components/utils';\nimport * as UIActions from '@console/internal/actions/ui';\nimport HelmReleaseOverview from '../../helm/details/overview/HelmReleaseOverview';\nimport { helmReleaseActions } from './actions/helmReleaseActions';\nimport TopologyHelmReleaseResourcesPanel from './TopologyHelmReleaseResourcesPanel';\nimport TopologyHelmReleaseNotesPanel from './TopologyHelmReleaseNotesPanel';\nconst stateToProps = ({ UI }) => ({\n    selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\nconst dispatchToProps = (dispatch) => ({\n    onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\nexport const ConnectedTopologyHelmReleasePanel = ({ helmRelease, selectedDetailsTab, onClickTab, }) => {\n    const secret = helmRelease.getData().resources.obj;\n    const { manifestResources, releaseNotes } = helmRelease.getData().data;\n    const name = helmRelease.getLabel();\n    const { namespace } = helmRelease.getData().groupResources[0].resources.obj.metadata;\n    const detailsComponent = !secret\n        ? () => (React.createElement(StatusBox, { loaded: true, loadError: { message: `Unable to find resource for ${helmRelease.getLabel()}` } }))\n        : navFactory.details(HelmReleaseOverview).component;\n    const resourcesComponent = () => manifestResources ? (React.createElement(TopologyHelmReleaseResourcesPanel, { manifestResources: manifestResources, releaseNamespace: namespace })) : null;\n    const releaseNotesComponent = () => React.createElement(TopologyHelmReleaseNotesPanel, { releaseNotes: releaseNotes });\n    const actions = helmReleaseActions(helmRelease);\n    return (React.createElement(\"div\", { className: \"overview__sidebar-pane resource-overview\" },\n        React.createElement(\"div\", { className: \"overview__sidebar-pane-head resource-overview__heading\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                React.createElement(\"div\", { className: \"co-m-pane__name co-resource-item\" },\n                    React.createElement(ResourceIcon, { className: \"co-m-resource-icon--lg\", kind: \"HelmRelease\" }),\n                    name && (React.createElement(Link, { to: `/helm-releases/ns/${namespace}/release/${name}`, className: \"co-resource-item__resource-name\" }, name))),\n                (actions === null || actions === void 0 ? void 0 : actions.length) && (React.createElement(\"div\", { className: \"co-actions\" },\n                    React.createElement(ActionsMenu, { actions: helmReleaseActions(helmRelease) }))))),\n        React.createElement(SimpleTabNav, { selectedTab: selectedDetailsTab || 'Resources', onClickTab: onClickTab, tabs: [\n                { name: 'Details', component: detailsComponent },\n                { name: 'Resources', component: resourcesComponent },\n                { name: 'Release Notes', component: releaseNotesComponent },\n            ], tabProps: { obj: secret }, additionalClassNames: \"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\" })));\n};\nconst TopologyHelmReleasePanel = connect(stateToProps, dispatchToProps)(ConnectedTopologyHelmReleasePanel);\nexport default TopologyHelmReleasePanel;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleasePanel.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleasePanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  navFactory,\n  ResourceIcon,\n  SimpleTabNav,\n  StatusBox,\n  ActionsMenu,\n} from '@console/internal/components/utils';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { Node } from '@console/topology';\nimport HelmReleaseOverview from '../../helm/details/overview/HelmReleaseOverview';\nimport { helmReleaseActions } from './actions/helmReleaseActions';\nimport TopologyHelmReleaseResourcesPanel from './TopologyHelmReleaseResourcesPanel';\nimport TopologyHelmReleaseNotesPanel from './TopologyHelmReleaseNotesPanel';\n\ntype PropsFromState = {\n  selectedDetailsTab?: any;\n};\n\ntype PropsFromDispatch = {\n  onClickTab?: (name: string) => void;\n};\n\nconst stateToProps = ({ UI }): PropsFromState => ({\n  selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\n\nconst dispatchToProps = (dispatch): PropsFromDispatch => ({\n  onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\n\ntype OwnProps = {\n  helmRelease: Node;\n};\n\ntype TopologyHelmReleasePanelProps = PropsFromState & PropsFromDispatch & OwnProps;\n\nexport const ConnectedTopologyHelmReleasePanel: React.FC<TopologyHelmReleasePanelProps> = ({\n  helmRelease,\n  selectedDetailsTab,\n  onClickTab,\n}: TopologyHelmReleasePanelProps) => {\n  const secret = helmRelease.getData().resources.obj;\n  const { manifestResources, releaseNotes } = helmRelease.getData().data;\n  const name = helmRelease.getLabel();\n  const { namespace } = helmRelease.getData().groupResources[0].resources.obj.metadata;\n\n  const detailsComponent = !secret\n    ? () => (\n        <StatusBox\n          loaded\n          loadError={{ message: `Unable to find resource for ${helmRelease.getLabel()}` }}\n        />\n      )\n    : navFactory.details(HelmReleaseOverview).component;\n\n  const resourcesComponent = () =>\n    manifestResources ? (\n      <TopologyHelmReleaseResourcesPanel\n        manifestResources={manifestResources}\n        releaseNamespace={namespace}\n      />\n    ) : null;\n\n  const releaseNotesComponent = () => <TopologyHelmReleaseNotesPanel releaseNotes={releaseNotes} />;\n\n  const actions = helmReleaseActions(helmRelease);\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            <ResourceIcon className=\"co-m-resource-icon--lg\" kind=\"HelmRelease\" />\n            {name && (\n              <Link\n                to={`/helm-releases/ns/${namespace}/release/${name}`}\n                className=\"co-resource-item__resource-name\"\n              >\n                {name}\n              </Link>\n            )}\n          </div>\n          {actions?.length && (\n            <div className=\"co-actions\">\n              <ActionsMenu actions={helmReleaseActions(helmRelease)} />\n            </div>\n          )}\n        </h1>\n      </div>\n      <SimpleTabNav\n        selectedTab={selectedDetailsTab || 'Resources'}\n        onClickTab={onClickTab}\n        tabs={[\n          { name: 'Details', component: detailsComponent },\n          { name: 'Resources', component: resourcesComponent },\n          { name: 'Release Notes', component: releaseNotesComponent },\n        ]}\n        tabProps={{ obj: secret }}\n        additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\"\n      />\n    </div>\n  );\n};\n\nconst TopologyHelmReleasePanel = connect<\n  PropsFromState,\n  PropsFromDispatch,\n  TopologyHelmReleasePanelProps\n>(\n  stateToProps,\n  dispatchToProps,\n)(ConnectedTopologyHelmReleasePanel);\n\nexport default TopologyHelmReleasePanel;\n"]}]}