{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/skeleton-catalog.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/skeleton-catalog.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\n// 12 works well because it divides evenly for 2, 3, and 4 column layouts\nconst skeletonTiles = Array.from({ length: 12 }, (_, k) => (React.createElement(\"div\", { key: k, className: \"skeleton-catalog--tile\" })));\nexport const skeletonCatalog = (React.createElement(\"div\", { className: \"loading-skeleton--catalog\" },\n    React.createElement(\"div\", { className: \"skeleton-catalog--list\" }),\n    React.createElement(\"div\", { className: \"skeleton-catalog--grid\" }, skeletonTiles)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/skeleton-catalog.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/skeleton-catalog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,yEAAyE;AACzE,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAS,EAAE,EAAE,CAAC,CACjE,6BAAK,GAAG,EAAE,CAAC,EAAE,SAAS,EAAC,wBAAwB,GAAG,CACnD,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,6BAAK,SAAS,EAAC,2BAA2B;IACxC,6BAAK,SAAS,EAAC,wBAAwB,GAAG;IAC1C,6BAAK,SAAS,EAAC,wBAAwB,IAAE,aAAa,CAAO,CACzD,CACP,CAAC","sourcesContent":["import * as React from 'react';\n\n// 12 works well because it divides evenly for 2, 3, and 4 column layouts\nconst skeletonTiles = Array.from({ length: 12 }, (_, k: number) => (\n  <div key={k} className=\"skeleton-catalog--tile\" />\n));\nexport const skeletonCatalog = (\n  <div className=\"loading-skeleton--catalog\">\n    <div className=\"skeleton-catalog--list\" />\n    <div className=\"skeleton-catalog--grid\">{skeletonTiles}</div>\n  </div>\n);\n"]}]}