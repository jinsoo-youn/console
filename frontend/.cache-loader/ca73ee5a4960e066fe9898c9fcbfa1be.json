{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/node-list.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/node-list.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport { getName, getNodeRoles, getNodeCPUCapacity, getNodeAllocatableMemory, hasLabel, } from '@console/shared';\nimport { humanizeCpuCores, ResourceLink, pluralize } from '@console/internal/components/utils/';\nimport { Table } from '@console/internal/components/factory';\nimport { hasOCSTaint, hasTaints, getConvertedUnits } from '../../utils/install';\nimport { cephStorageLabel } from '../../selectors';\nimport './ocs-install.scss';\nconst tableColumnClasses = [\n    classNames('col-md-1', 'col-sm-1', 'col-xs-1'),\n    classNames('col-md-4', 'col-sm-8', 'col-xs-11'),\n    classNames('col-md-2', 'col-sm-3', 'hidden-xs'),\n    classNames('col-md-2', 'hidden-sm', 'hidden-xs'),\n    classNames('col-md-1', 'hidden-sm', 'hidden-xs'),\n    classNames('col-md-2', 'hidden-sm', 'hidden-xs'),\n];\nconst getColumns = () => {\n    return [\n        {\n            title: 'Name',\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Role',\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Location',\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'CPU',\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: 'Memory',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nconst getSelected = (selected, nodeUID) => selected.map((node) => node.metadata.uid).includes(nodeUID);\nconst getRows = ({ componentProps, customData }) => {\n    const { data } = componentProps;\n    const { selectedNodes, setSelectedNodes, setVisibleRows, visibleRows } = customData;\n    const filteredData = data.filter((node) => hasOCSTaint(node) || !hasTaints(node));\n    const rows = filteredData.map((node) => {\n        var _a;\n        const roles = getNodeRoles(node).sort();\n        const cpuSpec = getNodeCPUCapacity(node);\n        const memSpec = getNodeAllocatableMemory(node);\n        const cells = [\n            {\n                title: React.createElement(ResourceLink, { kind: \"Node\", name: getName(node), title: node.metadata.uid }),\n            },\n            {\n                title: roles.join(', ') || '-',\n            },\n            {\n                title: ((_a = node.metadata.labels) === null || _a === void 0 ? void 0 : _a['failure-domain.beta.kubernetes.io/zone']) || '-',\n            },\n            {\n                title: `${humanizeCpuCores(cpuSpec).string || '-'}`,\n            },\n            {\n                title: `${getConvertedUnits(memSpec)}`,\n            },\n        ];\n        return {\n            cells,\n            selected: _.isArray(selectedNodes)\n                ? getSelected(selectedNodes, node.metadata.uid)\n                : hasLabel(node, cephStorageLabel),\n            props: {\n                id: node.metadata.uid,\n            },\n        };\n    });\n    if (!_.isEqual(filteredData, visibleRows)) {\n        setVisibleRows(filteredData);\n        if (!selectedNodes && filteredData.length) {\n            const preSelected = filteredData.filter((row) => hasLabel(row, cephStorageLabel));\n            setSelectedNodes(preSelected);\n        }\n    }\n    return rows;\n};\nconst NodeTable = (props) => {\n    const { selectedNodes, setSelectedNodes, visibleRows } = props.customData;\n    const onSelect = (_event, isSelected, rowIndex, rowData) => {\n        var _a;\n        const selectedUIDs = (_a = selectedNodes === null || selectedNodes === void 0 ? void 0 : selectedNodes.map((node) => node.metadata.uid)) !== null && _a !== void 0 ? _a : [];\n        const visibleUIDs = visibleRows === null || visibleRows === void 0 ? void 0 : visibleRows.map((row) => row.metadata.uid);\n        if (rowIndex === -1) {\n            if (isSelected) {\n                const uniqueUIDs = _.uniq([...visibleUIDs, ...selectedUIDs]);\n                setSelectedNodes(_.uniqBy([...visibleRows, ...selectedNodes].filter((node) => uniqueUIDs.includes(node.metadata.uid)), (n) => n.metadata.uid));\n            }\n            else {\n                setSelectedNodes(_.uniqBy(selectedNodes.filter((node) => !visibleUIDs.includes(node.metadata.uid)), (n) => n.metadata.uid));\n            }\n        }\n        else {\n            const uniqueUIDs = _.xor(selectedUIDs, [rowData.props.id]);\n            const data = _.uniqBy([...visibleRows, ...selectedNodes].filter((node) => uniqueUIDs.includes(node.metadata.uid)), (n) => n.metadata.uid);\n            setSelectedNodes(data);\n        }\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"ceph-node-list__max-height\" },\n            React.createElement(Table, Object.assign({ \"aria-label\": \"Node Table\", \"data-test-id\": \"select-nodes-table\" }, props, { Rows: getRows, Header: getColumns, virtualize: false, onSelect: onSelect }))),\n        React.createElement(\"p\", { className: \"control-label help-block\", \"data-test-id\": \"nodes-selected\" }, `${pluralize((selectedNodes === null || selectedNodes === void 0 ? void 0 : selectedNodes.length) || 0, 'node')} selected`)));\n};\nexport default NodeTable;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/node-list.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/node-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport {\n  getName,\n  getNodeRoles,\n  getNodeCPUCapacity,\n  getNodeAllocatableMemory,\n  hasLabel,\n} from '@console/shared';\nimport { humanizeCpuCores, ResourceLink, pluralize } from '@console/internal/components/utils/';\nimport { NodeKind } from '@console/internal/module/k8s';\nimport { Table } from '@console/internal/components/factory';\nimport { IRow, OnSelect } from '@patternfly/react-table';\nimport { hasOCSTaint, hasTaints, getConvertedUnits } from '../../utils/install';\nimport { cephStorageLabel } from '../../selectors';\nimport './ocs-install.scss';\n\nconst tableColumnClasses = [\n  classNames('col-md-1', 'col-sm-1', 'col-xs-1'),\n  classNames('col-md-4', 'col-sm-8', 'col-xs-11'),\n  classNames('col-md-2', 'col-sm-3', 'hidden-xs'),\n  classNames('col-md-2', 'hidden-sm', 'hidden-xs'),\n  classNames('col-md-1', 'hidden-sm', 'hidden-xs'),\n  classNames('col-md-2', 'hidden-sm', 'hidden-xs'),\n];\n\nconst getColumns = () => {\n  return [\n    {\n      title: 'Name',\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Role',\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Location',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'CPU',\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: 'Memory',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\nconst getSelected = (selected: NodeKind[], nodeUID: string) =>\n  selected.map((node) => node.metadata.uid).includes(nodeUID);\n\ntype GetRows = ({\n  componentProps,\n  customData,\n}: {\n  componentProps: { data: NodeKind[] };\n  customData: {\n    selectedNodes: NodeKind[];\n    setSelectedNodes: React.Dispatch<React.SetStateAction<NodeKind[]>>;\n    visibleRows: NodeKind[];\n    setVisibleRows: React.Dispatch<React.SetStateAction<NodeKind[]>>;\n  };\n}) => NodeTableRow[];\n\nconst getRows: GetRows = ({ componentProps, customData }) => {\n  const { data } = componentProps;\n  const { selectedNodes, setSelectedNodes, setVisibleRows, visibleRows } = customData;\n\n  const filteredData = data.filter((node: NodeKind) => hasOCSTaint(node) || !hasTaints(node));\n\n  const rows = filteredData.map((node: NodeKind) => {\n    const roles = getNodeRoles(node).sort();\n    const cpuSpec: string = getNodeCPUCapacity(node);\n    const memSpec: string = getNodeAllocatableMemory(node);\n    const cells: IRow['cells'] = [\n      {\n        title: <ResourceLink kind=\"Node\" name={getName(node)} title={node.metadata.uid} />,\n      },\n      {\n        title: roles.join(', ') || '-',\n      },\n      {\n        title: node.metadata.labels?.['failure-domain.beta.kubernetes.io/zone'] || '-',\n      },\n      {\n        title: `${humanizeCpuCores(cpuSpec).string || '-'}`,\n      },\n      {\n        title: `${getConvertedUnits(memSpec)}`,\n      },\n    ];\n    return {\n      cells,\n      selected: _.isArray(selectedNodes)\n        ? getSelected(selectedNodes, node.metadata.uid)\n        : hasLabel(node, cephStorageLabel),\n      props: {\n        id: node.metadata.uid,\n      },\n    };\n  });\n\n  if (!_.isEqual(filteredData, visibleRows)) {\n    setVisibleRows(filteredData);\n    if (!selectedNodes && filteredData.length) {\n      const preSelected = filteredData.filter((row) => hasLabel(row, cephStorageLabel));\n      setSelectedNodes(preSelected);\n    }\n  }\n  return rows;\n};\n\nconst NodeTable: React.FC<NodeTableProps> = (props) => {\n  const { selectedNodes, setSelectedNodes, visibleRows } = props.customData;\n\n  const onSelect: OnSelect = (_event, isSelected, rowIndex, rowData) => {\n    const selectedUIDs = selectedNodes?.map((node) => node.metadata.uid) ?? [];\n    const visibleUIDs = visibleRows?.map((row) => row.metadata.uid);\n    if (rowIndex === -1) {\n      if (isSelected) {\n        const uniqueUIDs = _.uniq([...visibleUIDs, ...selectedUIDs]);\n        setSelectedNodes(\n          _.uniqBy(\n            [...visibleRows, ...selectedNodes].filter((node) =>\n              uniqueUIDs.includes(node.metadata.uid),\n            ),\n            (n) => n.metadata.uid,\n          ),\n        );\n      } else {\n        setSelectedNodes(\n          _.uniqBy(\n            selectedNodes.filter((node) => !visibleUIDs.includes(node.metadata.uid)),\n            (n) => n.metadata.uid,\n          ),\n        );\n      }\n    } else {\n      const uniqueUIDs = _.xor(selectedUIDs, [rowData.props.id]);\n      const data = _.uniqBy(\n        [...visibleRows, ...selectedNodes].filter((node) => uniqueUIDs.includes(node.metadata.uid)),\n        (n) => n.metadata.uid,\n      );\n      setSelectedNodes(data);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"ceph-node-list__max-height\">\n        <Table\n          aria-label=\"Node Table\"\n          data-test-id=\"select-nodes-table\"\n          {...props}\n          Rows={getRows}\n          Header={getColumns}\n          virtualize={false}\n          onSelect={onSelect}\n        />\n      </div>\n      <p className=\"control-label help-block\" data-test-id=\"nodes-selected\">\n        {`${pluralize(selectedNodes?.length || 0, 'node')} selected`}\n      </p>\n    </>\n  );\n};\n\nexport default NodeTable;\n\ntype NodeTableProps = {\n  data: NodeKind[];\n  customData: {\n    selectedNodes: NodeKind[];\n    setSelectedNodes: React.Dispatch<React.SetStateAction<NodeKind[]>>;\n    visibleRows: NodeKind[];\n    setVisibleRows: React.Dispatch<React.SetStateAction<NodeKind[]>>;\n  };\n  filters: { name: string; label: { all: string[] } };\n};\n\ntype NodeTableRow = {\n  cells: IRow['cells'];\n  props: {\n    id: string;\n  };\n  selected: boolean;\n};\n"]}]}