{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/oauth.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/oauth.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { OAuthModel } from '../../models';\nimport { referenceForModel } from '../../module/k8s';\nimport { DetailsPage } from '../factory';\nimport { Dropdown, EmptyBox, Kebab, ResourceSummary, SectionHeading, history, navFactory, } from '../utils';\nimport { formatDuration } from '../utils/datetime';\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(OAuthModel), ...common];\nconst oAuthReference = referenceForModel(OAuthModel);\n// Convert to ms for formatDuration\nconst tokenDuration = (seconds) => _.isNil(seconds) ? '-' : formatDuration(seconds * 1000);\nconst IdentityProviders = ({ identityProviders }) => {\n    return _.isEmpty(identityProviders) ? (React.createElement(EmptyBox, { label: \"Identity Providers\" })) : (React.createElement(\"div\", { className: \"co-table-container\" },\n        React.createElement(\"table\", { className: \"table\" },\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"th\", null, \"Name\"),\n                    React.createElement(\"th\", null, \"Type\"),\n                    React.createElement(\"th\", null, \"Mapping Method\"))),\n            React.createElement(\"tbody\", null, _.map(identityProviders, (idp) => (React.createElement(\"tr\", { key: idp.name },\n                React.createElement(\"td\", { \"data-test-idp-name\": idp.name }, idp.name),\n                React.createElement(\"td\", { \"data-test-idp-type-for\": idp.name }, idp.type),\n                React.createElement(\"td\", { \"data-test-idp-mapping-for\": idp.name }, idp.mappingMethod || 'claim'))))))));\n};\nexport const addIDPItems = Object.freeze({\n    basicauth: 'Basic Authentication',\n    github: 'GitHub',\n    gitlab: 'GitLab',\n    google: 'Google',\n    htpasswd: 'HTPasswd',\n    keystone: 'Keystone',\n    ldap: 'LDAP',\n    oidconnect: 'OpenID Connect',\n    requestheader: 'Request Header',\n});\nconst OAuthDetails = ({ obj }) => {\n    const { identityProviders, tokenConfig } = obj.spec;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"OAuth Details\" }),\n            React.createElement(ResourceSummary, { resource: obj }, tokenConfig && (React.createElement(React.Fragment, null,\n                React.createElement(\"dt\", null, \"Access Token Max Age\"),\n                React.createElement(\"dd\", null, tokenDuration(tokenConfig.accessTokenMaxAgeSeconds)))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Identity Providers\" }),\n            React.createElement(\"p\", { className: \"co-m-pane__explanation co-m-pane__explanation--alt\" }, \"Identity providers determine how users log into the cluster.\"),\n            React.createElement(Dropdown, { className: \"co-m-pane__dropdown\", buttonClassName: \"pf-c-dropdown__toggle\", title: \"Add\", noSelection: true, items: addIDPItems, onChange: (name) => history.push(`/settings/idp/${name}`) }),\n            React.createElement(IdentityProviders, { identityProviders: identityProviders }))));\n};\nexport const OAuthDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: oAuthReference, menuActions: menuActions, pages: [navFactory.details(OAuthDetails), navFactory.editYaml()] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/oauth.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/oauth.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { OAuthModel } from '../../models';\nimport { IdentityProvider, OAuthKind, referenceForModel } from '../../module/k8s';\nimport { DetailsPage } from '../factory';\nimport {\n  Dropdown,\n  EmptyBox,\n  Kebab,\n  ResourceSummary,\n  SectionHeading,\n  history,\n  navFactory,\n} from '../utils';\nimport { formatDuration } from '../utils/datetime';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(OAuthModel), ...common];\n\nconst oAuthReference = referenceForModel(OAuthModel);\n\n// Convert to ms for formatDuration\nconst tokenDuration = (seconds: number) =>\n  _.isNil(seconds) ? '-' : formatDuration(seconds * 1000);\n\nconst IdentityProviders: React.SFC<IdentityProvidersProps> = ({ identityProviders }) => {\n  return _.isEmpty(identityProviders) ? (\n    <EmptyBox label=\"Identity Providers\" />\n  ) : (\n    <div className=\"co-table-container\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Mapping Method</th>\n          </tr>\n        </thead>\n        <tbody>\n          {_.map(identityProviders, (idp) => (\n            <tr key={idp.name}>\n              <td data-test-idp-name={idp.name}>{idp.name}</td>\n              <td data-test-idp-type-for={idp.name}>{idp.type}</td>\n              <td data-test-idp-mapping-for={idp.name}>{idp.mappingMethod || 'claim'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport const addIDPItems = Object.freeze({\n  basicauth: 'Basic Authentication',\n  github: 'GitHub',\n  gitlab: 'GitLab',\n  google: 'Google',\n  htpasswd: 'HTPasswd',\n  keystone: 'Keystone',\n  ldap: 'LDAP',\n  oidconnect: 'OpenID Connect',\n  requestheader: 'Request Header',\n});\n\nconst OAuthDetails: React.SFC<OAuthDetailsProps> = ({ obj }: { obj: OAuthKind }) => {\n  const { identityProviders, tokenConfig } = obj.spec;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"OAuth Details\" />\n        <ResourceSummary resource={obj}>\n          {tokenConfig && (\n            <>\n              <dt>Access Token Max Age</dt>\n              <dd>{tokenDuration(tokenConfig.accessTokenMaxAgeSeconds)}</dd>\n            </>\n          )}\n        </ResourceSummary>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Identity Providers\" />\n        <p className=\"co-m-pane__explanation co-m-pane__explanation--alt\">\n          Identity providers determine how users log into the cluster.\n        </p>\n        <Dropdown\n          className=\"co-m-pane__dropdown\"\n          buttonClassName=\"pf-c-dropdown__toggle\"\n          title=\"Add\"\n          noSelection={true}\n          items={addIDPItems}\n          onChange={(name: string) => history.push(`/settings/idp/${name}`)}\n        />\n        <IdentityProviders identityProviders={identityProviders} />\n      </div>\n    </>\n  );\n};\n\nexport const OAuthDetailsPage: React.SFC<OAuthDetailsPageProps> = (props) => (\n  <DetailsPage\n    {...props}\n    kind={oAuthReference}\n    menuActions={menuActions}\n    pages={[navFactory.details(OAuthDetails), navFactory.editYaml()]}\n  />\n);\n\ntype IdentityProvidersProps = {\n  identityProviders: IdentityProvider[];\n};\n\ntype OAuthDetailsProps = {\n  obj: OAuthKind;\n};\n\ntype OAuthDetailsPageProps = {\n  match: any;\n};\n"]}]}