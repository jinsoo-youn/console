{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/horizontal-nav.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/horizontal-nav.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Route, Switch, Link, withRouter, matchPath } from 'react-router-dom';\nimport { EmptyBox, StatusBox } from './status-box';\nimport { PodsPage } from '../pod';\nimport NodesPage from '@console/app/src/components/nodes/NodesPage';\nimport { AsyncComponent } from './async';\nimport { referenceForModel, referenceFor } from '../../module/k8s/k8s';\nimport { useExtensions, isHorizontalNavTab } from '@console/plugin-sdk';\nimport { useTranslation } from 'react-i18next';\nconst editYamlComponent = props => React.createElement(AsyncComponent, { loader: () => import('../edit-yaml').then(c => c.EditYAML), obj: props.obj });\nexport const viewYamlComponent = props => React.createElement(AsyncComponent, { loader: () => import('../edit-yaml').then(c => c.EditYAML), obj: props.obj, readOnly: true });\nexport class NodesComponent extends React.PureComponent {\n    render() {\n        return React.createElement(NodesPage, null);\n    }\n}\nexport class PodsComponent extends React.PureComponent {\n    render() {\n        const { metadata: { namespace }, spec: { selector }, } = this.props.obj;\n        const { customData } = this.props;\n        if (_.isEmpty(selector)) {\n            return React.createElement(EmptyBox, { label: \"Pods\" });\n        }\n        // Hide the create button to avoid confusion when showing pods for an object.\n        // Otherwise it might seem like you click \"Create Pod\" to add replicas instead\n        // of scaling the owner.\n        return React.createElement(PodsPage, { showTitle: false, namespace: namespace, selector: selector, canCreate: false, customData: customData });\n    }\n}\nexport const navFactory = {\n    details: component => ({\n        href: '',\n        name: 'COMMON:MSG_DETAILS_TABOVERVIEW_1',\n        component,\n    }),\n    events: component => ({\n        href: 'events',\n        name: '이벤트',\n        component,\n    }),\n    logs: component => ({\n        href: 'logs',\n        name: '로그',\n        component,\n    }),\n    editYaml: (component = editYamlComponent) => ({\n        href: 'yaml',\n        name: 'YAML',\n        component,\n    }),\n    pods: component => ({\n        href: 'pods',\n        name: '파드',\n        component: component || PodsComponent,\n    }),\n    nodes: component => ({\n        href: 'nodes',\n        name: '노드',\n        component: component || NodesComponent,\n    }),\n    roles: component => ({\n        href: 'roles',\n        name: '롤 바인딩',\n        component,\n    }),\n    builds: component => ({\n        href: 'builds',\n        name: '빌드',\n        component,\n    }),\n    envEditor: component => ({\n        href: 'environment',\n        name: '환경 변수',\n        component,\n    }),\n    clusterServiceClasses: component => ({\n        href: 'serviceclasses',\n        name: '서비스 클래스',\n        component,\n    }),\n    clusterServicePlans: component => ({\n        href: 'serviceplans',\n        name: '서비스 플랜',\n        component,\n    }),\n    serviceBindings: component => ({\n        href: 'servicebindings',\n        name: '서비스 바인딩',\n        component,\n    }),\n    clusterOperators: component => ({\n        href: 'clusteroperators',\n        name: '클러스터 오퍼레이터',\n        component,\n    }),\n    machineConfigs: component => ({\n        href: 'machineconfigs',\n        name: '머신 컨피그',\n        component,\n    }),\n    machines: component => ({\n        href: 'machines',\n        name: '머신',\n        component,\n    }),\n    workloads: component => ({\n        href: 'workloads',\n        name: '워크로드',\n        component,\n    }),\n    history: component => ({\n        href: 'history',\n        name: '히스토리',\n        component,\n    }),\n    signerKey: component => ({\n        href: 'signerkeys',\n        name: '서명자 키',\n        component,\n    }),\n};\nexport const NavBar = withRouter(({ pages, baseURL, basePath }) => {\n    basePath = basePath.replace(/\\/$/, '');\n    const { t } = useTranslation();\n    const tabs = (React.createElement(React.Fragment, null, pages.map(({ name, href, path }) => {\n        const matchURL = matchPath(location.pathname, {\n            path: `${basePath}/${path || href}`,\n            exact: true,\n        });\n        const klass = classNames('co-m-horizontal-nav__menu-item', {\n            'co-m-horizontal-nav-item--active': matchURL === null || matchURL === void 0 ? void 0 : matchURL.isExact,\n        });\n        return (React.createElement(\"li\", { className: klass, key: name },\n            React.createElement(Link, { to: `${baseURL.replace(/\\/$/, '')}/${href}`, \"data-test-id\": `horizontal-link-${name}` }, t(name))));\n    })));\n    return React.createElement(\"ul\", { className: \"co-m-horizontal-nav__menu\" }, tabs);\n});\nNavBar.displayName = 'NavBar';\nexport const HorizontalNav = React.memo((props) => {\n    var _a, _b;\n    const renderContent = (routes) => {\n        const { noStatusBox, obj, EmptyMsg, label } = props;\n        const content = React.createElement(Switch, null,\n            \" \",\n            routes,\n            \" \");\n        const skeletonDetails = (React.createElement(\"div\", { className: \"skeleton-detail-view\" },\n            React.createElement(\"div\", { className: \"skeleton-detail-view--head\" }),\n            React.createElement(\"div\", { className: \"skeleton-detail-view--grid\" },\n                React.createElement(\"div\", { className: \"skeleton-detail-view--column\" },\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-labels\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" })),\n                React.createElement(\"div\", { className: \"skeleton-detail-view--column\" },\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" }),\n                    React.createElement(\"div\", { className: \"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" })))));\n        if (noStatusBox) {\n            return content;\n        }\n        return (React.createElement(StatusBox, Object.assign({ skeleton: skeletonDetails }, obj, { EmptyMsg: EmptyMsg, label: label }), content));\n    };\n    const componentProps = Object.assign(Object.assign({}, _.pick(props, ['filters', 'selected', 'match', 'loaded'])), { obj: _.get(props.obj, 'data') });\n    const extraResources = _.reduce(props.resourceKeys, (extraObjs, key) => (Object.assign(Object.assign({}, extraObjs), { [key]: _.get(props[key], 'data') })), {});\n    const objReference = ((_a = props.obj) === null || _a === void 0 ? void 0 : _a.data) ? referenceFor(props.obj.data) : '';\n    const navTabExtensions = useExtensions(isHorizontalNavTab);\n    const pluginPages = React.useMemo(() => navTabExtensions\n        .filter(tab => referenceForModel(tab.properties.model) === objReference)\n        .map(tab => (Object.assign(Object.assign({}, tab.properties.page), { component: (params) => React.createElement(AsyncComponent, Object.assign({}, params, { loader: tab.properties.loader })) }))), [navTabExtensions, objReference]);\n    const pages = (props.pages || props.pagesFor((_b = props.obj) === null || _b === void 0 ? void 0 : _b.data)).concat(pluginPages);\n    const routes = pages.map(p => {\n        const path = `${props.match.path}/${p.path || p.href}`;\n        const render = params => {\n            return React.createElement(p.component, Object.assign({}, componentProps, extraResources, p.pageData, { params: params, customData: props.customData }));\n        };\n        return React.createElement(Route, { path: path, exact: true, key: p.name, render: render });\n    });\n    return (React.createElement(\"div\", { className: classNames('co-m-page__body', props.className) },\n        React.createElement(\"div\", { className: \"co-m-horizontal-nav\" }, !props.hideNav && React.createElement(NavBar, { pages: pages, baseURL: props.match.url, basePath: props.match.path })),\n        renderContent(routes)));\n}, _.isEqual);\nHorizontalNav.displayName = 'HorizontalNav';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/horizontal-nav.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/horizontal-nav.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { History, Location } from 'history';\nimport { Route, Switch, Link, withRouter, match, matchPath } from 'react-router-dom';\n\nimport { EmptyBox, StatusBox } from './status-box';\nimport { PodsPage } from '../pod';\nimport NodesPage from '@console/app/src/components/nodes/NodesPage';\nimport { AsyncComponent } from './async';\nimport { K8sResourceKind, K8sResourceCommon } from '../../module/k8s';\nimport { referenceForModel, referenceFor } from '../../module/k8s/k8s';\nimport { useExtensions, HorizontalNavTab, isHorizontalNavTab } from '@console/plugin-sdk';\nimport { useTranslation } from 'react-i18next';\n\nconst editYamlComponent = props => <AsyncComponent loader={() => import('../edit-yaml').then(c => c.EditYAML)} obj={props.obj} />;\nexport const viewYamlComponent = props => <AsyncComponent loader={() => import('../edit-yaml').then(c => c.EditYAML)} obj={props.obj} readOnly={true} />;\n\nexport class NodesComponent extends React.PureComponent<NodesComponentProps> {\n  render() {\n    return <NodesPage />;\n  }\n}\nexport class PodsComponent extends React.PureComponent<PodsComponentProps> {\n  render() {\n    const {\n      metadata: { namespace },\n      spec: { selector },\n    } = this.props.obj;\n    const { customData } = this.props;\n    if (_.isEmpty(selector)) {\n      return <EmptyBox label=\"Pods\" />;\n    }\n\n    // Hide the create button to avoid confusion when showing pods for an object.\n    // Otherwise it might seem like you click \"Create Pod\" to add replicas instead\n    // of scaling the owner.\n    return <PodsPage showTitle={false} namespace={namespace} selector={selector} canCreate={false} customData={customData} />;\n  }\n}\n\nexport type Page = {\n  href?: string;\n  path?: string;\n  name: string;\n  component?: React.ComponentType<PageComponentProps>;\n  pageData?: any;\n};\n\ntype NavFactory = { [name: string]: (c?: React.ComponentType<any>) => Page };\nexport const navFactory: NavFactory = {\n  details: component => ({\n    href: '',\n    name: 'COMMON:MSG_DETAILS_TABOVERVIEW_1',\n    component,\n  }),\n  events: component => ({\n    href: 'events',\n    name: '이벤트',\n    component,\n  }),\n  logs: component => ({\n    href: 'logs',\n    name: '로그',\n    component,\n  }),\n  editYaml: (component = editYamlComponent) => ({\n    href: 'yaml',\n    name: 'YAML',\n    component,\n  }),\n  pods: component => ({\n    href: 'pods',\n    name: '파드',\n    component: component || PodsComponent,\n  }),\n  nodes: component => ({\n    href: 'nodes',\n    name: '노드',\n    component: component || NodesComponent,\n  }),\n  roles: component => ({\n    href: 'roles',\n    name: '롤 바인딩',\n    component,\n  }),\n  builds: component => ({\n    href: 'builds',\n    name: '빌드',\n    component,\n  }),\n  envEditor: component => ({\n    href: 'environment',\n    name: '환경 변수',\n    component,\n  }),\n  clusterServiceClasses: component => ({\n    href: 'serviceclasses',\n    name: '서비스 클래스',\n    component,\n  }),\n  clusterServicePlans: component => ({\n    href: 'serviceplans',\n    name: '서비스 플랜',\n    component,\n  }),\n  serviceBindings: component => ({\n    href: 'servicebindings',\n    name: '서비스 바인딩',\n    component,\n  }),\n  clusterOperators: component => ({\n    href: 'clusteroperators',\n    name: '클러스터 오퍼레이터',\n    component,\n  }),\n  machineConfigs: component => ({\n    href: 'machineconfigs',\n    name: '머신 컨피그',\n    component,\n  }),\n  machines: component => ({\n    href: 'machines',\n    name: '머신',\n    component,\n  }),\n  workloads: component => ({\n    href: 'workloads',\n    name: '워크로드',\n    component,\n  }),\n  history: component => ({\n    href: 'history',\n    name: '히스토리',\n    component,\n  }),\n  signerKey: component => ({\n    href: 'signerkeys',\n    name: '서명자 키',\n    component,\n  }),\n};\n\nexport const NavBar = withRouter<NavBarProps>(({ pages, baseURL, basePath }) => {\n  basePath = basePath.replace(/\\/$/, '');\n\n  const { t } = useTranslation();\n  const tabs = (\n    <>\n      {pages.map(({ name, href, path }) => {\n        const matchURL = matchPath(location.pathname, {\n          path: `${basePath}/${path || href}`,\n          exact: true,\n        });\n        const klass = classNames('co-m-horizontal-nav__menu-item', {\n          'co-m-horizontal-nav-item--active': matchURL?.isExact,\n        });\n        return (\n          <li className={klass} key={name}>\n            <Link to={`${baseURL.replace(/\\/$/, '')}/${href}`} data-test-id={`horizontal-link-${name}`}>\n              {t(name)}\n            </Link>\n          </li>\n        );\n      })}\n    </>\n  );\n\n  return <ul className=\"co-m-horizontal-nav__menu\">{tabs}</ul>;\n});\nNavBar.displayName = 'NavBar';\n\nexport const HorizontalNav = React.memo((props: HorizontalNavProps) => {\n  const renderContent = (routes: JSX.Element[]) => {\n    const { noStatusBox, obj, EmptyMsg, label } = props;\n    const content = <Switch> {routes} </Switch>;\n\n    const skeletonDetails = (\n      <div className=\"skeleton-detail-view\">\n        <div className=\"skeleton-detail-view--head\" />\n        <div className=\"skeleton-detail-view--grid\">\n          <div className=\"skeleton-detail-view--column\">\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-labels\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" />\n          </div>\n          <div className=\"skeleton-detail-view--column\">\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-resource\" />\n            <div className=\"skeleton-detail-view--tile skeleton-detail-view--tile-plain\" />\n          </div>\n        </div>\n      </div>\n    );\n\n    if (noStatusBox) {\n      return content;\n    }\n\n    return (\n      <StatusBox skeleton={skeletonDetails} {...obj} EmptyMsg={EmptyMsg} label={label}>\n        {content}\n      </StatusBox>\n    );\n  };\n\n  const componentProps = {\n    ..._.pick(props, ['filters', 'selected', 'match', 'loaded']),\n    obj: _.get(props.obj, 'data'),\n  };\n  const extraResources = _.reduce(props.resourceKeys, (extraObjs, key) => ({ ...extraObjs, [key]: _.get(props[key], 'data') }), {});\n\n  const objReference = props.obj?.data ? referenceFor(props.obj.data) : '';\n  const navTabExtensions = useExtensions<HorizontalNavTab>(isHorizontalNavTab);\n\n  const pluginPages = React.useMemo(\n    () =>\n      navTabExtensions\n        .filter(tab => referenceForModel(tab.properties.model) === objReference)\n        .map(tab => ({\n          ...tab.properties.page,\n          component: (params: PageComponentProps) => <AsyncComponent {...params} loader={tab.properties.loader} />,\n        })),\n    [navTabExtensions, objReference],\n  );\n\n  const pages = (props.pages || props.pagesFor(props.obj?.data)).concat(pluginPages);\n\n  const routes = pages.map(p => {\n    const path = `${props.match.path}/${p.path || p.href}`;\n    const render = params => {\n      return <p.component {...componentProps} {...extraResources} {...p.pageData} params={params} customData={props.customData} />;\n    };\n    return <Route path={path} exact key={p.name} render={render} />;\n  });\n\n  return (\n    <div className={classNames('co-m-page__body', props.className)}>\n      <div className=\"co-m-horizontal-nav\">{!props.hideNav && <NavBar pages={pages} baseURL={props.match.url} basePath={props.match.path} />}</div>\n      {renderContent(routes)}\n    </div>\n  );\n}, _.isEqual);\n\nexport type PodsComponentProps = {\n  obj: K8sResourceKind;\n  customData?: any;\n};\n\nexport type NodesComponentProps = {\n  obj: K8sResourceKind;\n  customData?: any;\n};\n\nexport type NavBarProps = {\n  pages: Page[];\n  baseURL: string;\n  basePath: string;\n  history: History;\n  location: Location<any>;\n  match: match<any>;\n};\n\nexport type HorizontalNavProps = {\n  className?: string;\n  obj?: { loaded: boolean; data: K8sResourceKind };\n  label?: string;\n  pages: Page[];\n  pagesFor?: (obj: K8sResourceKind) => Page[];\n  match: any;\n  resourceKeys?: string[];\n  hideNav?: boolean;\n  EmptyMsg?: React.ComponentType<any>;\n  noStatusBox?: boolean;\n  customData?: any;\n};\n\nexport type PageComponentProps<R extends K8sResourceCommon = K8sResourceKind> = {\n  filters?: any;\n  selected?: any;\n  match?: any;\n  obj?: R;\n  params?: any;\n  customData?: any;\n  showTitle?: boolean;\n  fieldSelector?: string;\n};\n\nHorizontalNav.displayName = 'HorizontalNav';\n"]}]}