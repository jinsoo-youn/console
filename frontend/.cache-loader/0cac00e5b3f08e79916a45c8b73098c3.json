{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from '@console/topology';\nimport { BUILDER_NODE_ERROR_RADIUS } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport TaskListNode from './TaskListNode';\nconst InvalidTaskListNode = ({ element }) => {\n    const { task: { name }, } = element.getData();\n    return (React.createElement(\"g\", null,\n        React.createElement(TaskListNode, { element: element, unselectedText: name }),\n        React.createElement(ErrorNodeDecorator, { x: BUILDER_NODE_ERROR_RADIUS / 2, y: BUILDER_NODE_ERROR_RADIUS / 4, errorStr: \"Task does not exist\" })));\n};\nexport default observer(InvalidTaskListNode);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAmB,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AACpD,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAO1C,MAAM,mBAAmB,GAAuC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC9E,MAAM,EACJ,IAAI,EAAE,EAAE,IAAI,EAAE,GACf,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAEtB,OAAO,CACL;QACE,oBAAC,YAAY,IAAC,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,GAAI;QACxD,oBAAC,kBAAkB,IACjB,CAAC,EAAE,yBAAyB,GAAG,CAAC,EAChC,CAAC,EAAE,yBAAyB,GAAG,CAAC,EAChC,QAAQ,EAAC,qBAAqB,GAC9B,CACA,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Node, NodeModel, observer } from '@console/topology';\nimport { BUILDER_NODE_ERROR_RADIUS } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport TaskListNode from './TaskListNode';\nimport { TaskListNodeModelData } from './types';\n\ntype InvalidTaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n};\n\nconst InvalidTaskListNode: React.FC<InvalidTaskListNodeProps> = ({ element }) => {\n  const {\n    task: { name },\n  } = element.getData();\n\n  return (\n    <g>\n      <TaskListNode element={element} unselectedText={name} />\n      <ErrorNodeDecorator\n        x={BUILDER_NODE_ERROR_RADIUS / 2}\n        y={BUILDER_NODE_ERROR_RADIUS / 4}\n        errorStr=\"Task does not exist\"\n      />\n    </g>\n  );\n};\n\nexport default observer(InvalidTaskListNode);\n"]}]}