{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-builder/validation-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-builder/validation-utils.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as yup from 'yup';\nexport const validationSchema = yup.object({\n    name: yup.string().required('Required'),\n    params: yup.array().of(yup.object({\n        name: yup.string().required('Required'),\n        description: yup.string(),\n        default: yup.string(),\n    })),\n    resources: yup.array().of(yup.object({\n        name: yup.string().required('Required'),\n        type: yup.string().required('Required'),\n    })),\n    tasks: yup\n        .array()\n        .of(yup.object({\n        name: yup.string().required('Required'),\n        runAfter: yup.array().of(yup.string()),\n        taskRef: yup\n            .object({\n            name: yup.string().required('Required'),\n            kind: yup.string(),\n        })\n            .required('Required'),\n    }))\n        .min(1, 'Must define at least one task')\n        .required('Required'),\n    taskList: yup.array().of(yup.object({\n        name: yup.string().required('Required'),\n        runAfter: yup.string(),\n    })),\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-builder/validation-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-builder/validation-utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,GAAG,MAAM,KAAK,CAAC;AAE3B,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAG,CAAC,MAAM,CAAC;IACzC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;IACvC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CACpB,GAAG,CAAC,MAAM,CAAC;QACT,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;QACvC,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE;QACzB,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE;KACtB,CAAC,CACH;IACD,SAAS,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CACvB,GAAG,CAAC,MAAM,CAAC;QACT,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;QACvC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;KACxC,CAAC,CACH;IACD,KAAK,EAAE,GAAG;SACP,KAAK,EAAE;SACP,EAAE,CACD,GAAG,CAAC,MAAM,CAAC;QACT,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;QACvC,QAAQ,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACtC,OAAO,EAAE,GAAG;aACT,MAAM,CAAC;YACN,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE;SACnB,CAAC;aACD,QAAQ,CAAC,UAAU,CAAC;KACxB,CAAC,CACH;SACA,GAAG,CAAC,CAAC,EAAE,+BAA+B,CAAC;SACvC,QAAQ,CAAC,UAAU,CAAC;IACvB,QAAQ,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CACtB,GAAG,CAAC,MAAM,CAAC;QACT,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;QACvC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE;KACvB,CAAC,CACH;CACF,CAAC,CAAC","sourcesContent":["import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n  name: yup.string().required('Required'),\n  params: yup.array().of(\n    yup.object({\n      name: yup.string().required('Required'),\n      description: yup.string(),\n      default: yup.string(),\n    }),\n  ),\n  resources: yup.array().of(\n    yup.object({\n      name: yup.string().required('Required'),\n      type: yup.string().required('Required'),\n    }),\n  ),\n  tasks: yup\n    .array()\n    .of(\n      yup.object({\n        name: yup.string().required('Required'),\n        runAfter: yup.array().of(yup.string()),\n        taskRef: yup\n          .object({\n            name: yup.string().required('Required'),\n            kind: yup.string(),\n          })\n          .required('Required'),\n      }),\n    )\n    .min(1, 'Must define at least one task')\n    .required('Required'),\n  taskList: yup.array().of(\n    yup.object({\n      name: yup.string().required('Required'),\n      runAfter: yup.string(),\n    }),\n  ),\n});\n"]}]}