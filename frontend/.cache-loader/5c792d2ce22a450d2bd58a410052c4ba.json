{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/HelmReleaseDetails.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/HelmReleaseDetails.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { navFactory, LoadingBox, StatusBox, } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { Status } from '@console/shared';\nimport { Badge } from '@patternfly/react-core';\nimport { deleteHelmRelease, upgradeHelmRelease, rollbackHelmRelease, } from '../../../actions/modify-helm-release';\nimport { HelmActionOrigins } from '../helm-types';\nimport { fetchHelmReleases } from '../helm-utils';\nimport HelmReleaseResources from './resources/HelmReleaseResources';\nimport HelmReleaseOverview from './overview/HelmReleaseOverview';\nimport HelmReleaseHistory from './history/HelmReleaseHistory';\nimport HelmReleaseNotes from './notes/HelmReleaseNotes';\nconst SecretReference = 'Secret';\nconst HelmReleaseReference = 'HelmRelease';\nexport const LoadedHelmReleaseDetails = ({ match, secret, helmReleaseData, }) => {\n    const namespace = match.params.ns;\n    if (!helmReleaseData || !secret || (!secret.loaded && _.isEmpty(secret.loadError))) {\n        return React.createElement(LoadingBox, null);\n    }\n    if (secret.loadError) {\n        return React.createElement(StatusBox, { loaded: secret.loaded, loadError: secret.loadError });\n    }\n    const secretResources = secret.data;\n    if (_.isEmpty(secretResources))\n        return React.createElement(ErrorPage404, null);\n    const sortedSecretResources = _.orderBy(secretResources, (o) => Number(o.metadata.labels.version), 'desc');\n    const latestReleaseSecret = sortedSecretResources[0];\n    const secretName = latestReleaseSecret === null || latestReleaseSecret === void 0 ? void 0 : latestReleaseSecret.metadata.name;\n    const releaseName = helmReleaseData === null || helmReleaseData === void 0 ? void 0 : helmReleaseData.name;\n    const title = (React.createElement(React.Fragment, null,\n        releaseName,\n        React.createElement(Badge, { isRead: true, style: { verticalAlign: 'middle', marginLeft: 'var(--pf-global--spacer--md)' } },\n            React.createElement(Status, { status: _.capitalize(latestReleaseSecret === null || latestReleaseSecret === void 0 ? void 0 : latestReleaseSecret.metadata.labels.status) }))));\n    const menuActions = [\n        () => upgradeHelmRelease(releaseName, namespace, HelmActionOrigins.details),\n        () => rollbackHelmRelease(releaseName, namespace, HelmActionOrigins.details),\n        () => deleteHelmRelease(releaseName, namespace, `/helm-releases/ns/${namespace}`),\n    ];\n    return (React.createElement(DetailsPage, { kindObj: SecretModel, match: match, menuActions: menuActions, name: secretName, namespace: namespace, customData: helmReleaseData, breadcrumbsFor: () => [\n            {\n                name: `Helm Releases`,\n                path: `/helm-releases/ns/${namespace}`,\n            },\n            { name: `Helm Release Details`, path: `${match.url}` },\n        ], title: title, kind: SecretReference, pages: [\n            navFactory.details(HelmReleaseOverview),\n            {\n                href: 'resources',\n                name: 'Resources',\n                component: HelmReleaseResources,\n            },\n            {\n                href: 'history',\n                name: 'Revision History',\n                component: HelmReleaseHistory,\n            },\n            {\n                href: 'releasenotes',\n                name: 'Release Notes',\n                component: HelmReleaseNotes,\n            },\n        ], customKind: HelmReleaseReference }));\n};\nconst HelmReleaseDetails = ({ secret, match }) => {\n    const namespace = match.params.ns;\n    const helmReleaseName = match.params.name;\n    const [helmReleaseData, setHelmReleaseData] = React.useState();\n    React.useEffect(() => {\n        let ignore = false;\n        const getHelmReleases = () => __awaiter(void 0, void 0, void 0, function* () {\n            try {\n                const helmReleases = yield fetchHelmReleases(namespace);\n                if (!ignore) {\n                    const releaseData = helmReleases.find((release) => release.name === helmReleaseName);\n                    setHelmReleaseData(releaseData);\n                }\n                // eslint-disable-next-line no-empty\n            }\n            catch (_a) { }\n        });\n        getHelmReleases();\n        return () => {\n            ignore = true;\n        };\n    }, [helmReleaseName, namespace]);\n    return (React.createElement(LoadedHelmReleaseDetails, { match: match, secret: secret, helmReleaseData: helmReleaseData }));\n};\nexport default HelmReleaseDetails;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/HelmReleaseDetails.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/HelmReleaseDetails.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { match as RMatch } from 'react-router';\nimport {\n  navFactory,\n  LoadingBox,\n  StatusBox,\n  FirehoseResult,\n} from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { Badge } from '@patternfly/react-core';\nimport {\n  deleteHelmRelease,\n  upgradeHelmRelease,\n  rollbackHelmRelease,\n} from '../../../actions/modify-helm-release';\nimport { HelmRelease, HelmActionOrigins } from '../helm-types';\nimport { fetchHelmReleases } from '../helm-utils';\nimport HelmReleaseResources from './resources/HelmReleaseResources';\nimport HelmReleaseOverview from './overview/HelmReleaseOverview';\nimport HelmReleaseHistory from './history/HelmReleaseHistory';\nimport HelmReleaseNotes from './notes/HelmReleaseNotes';\n\nconst SecretReference: K8sResourceKindReference = 'Secret';\nconst HelmReleaseReference = 'HelmRelease';\ninterface HelmReleaseDetailsProps {\n  match: RMatch<{\n    ns?: string;\n    name?: string;\n  }>;\n  secret?: FirehoseResult;\n}\n\ninterface LoadedHelmReleaseDetailsProps extends HelmReleaseDetailsProps {\n  helmReleaseData: HelmRelease;\n}\n\nexport const LoadedHelmReleaseDetails: React.FC<LoadedHelmReleaseDetailsProps> = ({\n  match,\n  secret,\n  helmReleaseData,\n}) => {\n  const namespace = match.params.ns;\n  if (!helmReleaseData || !secret || (!secret.loaded && _.isEmpty(secret.loadError))) {\n    return <LoadingBox />;\n  }\n\n  if (secret.loadError) {\n    return <StatusBox loaded={secret.loaded} loadError={secret.loadError} />;\n  }\n\n  const secretResources = secret.data;\n\n  if (_.isEmpty(secretResources)) return <ErrorPage404 />;\n\n  const sortedSecretResources = _.orderBy(\n    secretResources,\n    (o) => Number(o.metadata.labels.version),\n    'desc',\n  );\n\n  const latestReleaseSecret = sortedSecretResources[0];\n  const secretName = latestReleaseSecret?.metadata.name;\n  const releaseName = helmReleaseData?.name;\n\n  const title = (\n    <>\n      {releaseName}\n      <Badge isRead style={{ verticalAlign: 'middle', marginLeft: 'var(--pf-global--spacer--md)' }}>\n        <Status status={_.capitalize(latestReleaseSecret?.metadata.labels.status)} />\n      </Badge>\n    </>\n  );\n\n  const menuActions = [\n    () => upgradeHelmRelease(releaseName, namespace, HelmActionOrigins.details),\n    () => rollbackHelmRelease(releaseName, namespace, HelmActionOrigins.details),\n    () => deleteHelmRelease(releaseName, namespace, `/helm-releases/ns/${namespace}`),\n  ];\n\n  return (\n    <DetailsPage\n      kindObj={SecretModel}\n      match={match}\n      menuActions={menuActions}\n      name={secretName}\n      namespace={namespace}\n      customData={helmReleaseData}\n      breadcrumbsFor={() => [\n        {\n          name: `Helm Releases`,\n          path: `/helm-releases/ns/${namespace}`,\n        },\n        { name: `Helm Release Details`, path: `${match.url}` },\n      ]}\n      title={title}\n      kind={SecretReference}\n      pages={[\n        navFactory.details(HelmReleaseOverview),\n        {\n          href: 'resources',\n          name: 'Resources',\n          component: HelmReleaseResources,\n        },\n        {\n          href: 'history',\n          name: 'Revision History',\n          component: HelmReleaseHistory,\n        },\n        {\n          href: 'releasenotes',\n          name: 'Release Notes',\n          component: HelmReleaseNotes,\n        },\n      ]}\n      customKind={HelmReleaseReference}\n    />\n  );\n};\n\nconst HelmReleaseDetails: React.FC<HelmReleaseDetailsProps> = ({ secret, match }) => {\n  const namespace = match.params.ns;\n  const helmReleaseName = match.params.name;\n\n  const [helmReleaseData, setHelmReleaseData] = React.useState<HelmRelease>();\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const getHelmReleases = async () => {\n      try {\n        const helmReleases = await fetchHelmReleases(namespace);\n        if (!ignore) {\n          const releaseData = helmReleases.find((release) => release.name === helmReleaseName);\n          setHelmReleaseData(releaseData);\n        }\n        // eslint-disable-next-line no-empty\n      } catch {}\n    };\n\n    getHelmReleases();\n\n    return () => {\n      ignore = true;\n    };\n  }, [helmReleaseName, namespace]);\n\n  return (\n    <LoadedHelmReleaseDetails match={match} secret={secret} helmReleaseData={helmReleaseData} />\n  );\n};\n\nexport default HelmReleaseDetails;\n"]}]}