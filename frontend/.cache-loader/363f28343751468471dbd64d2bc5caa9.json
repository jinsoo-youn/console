{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/alerts.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/alerts.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Alert, Button, List, ListItem } from '@patternfly/react-core';\nexport const ExpandableAlert = ({ alerts, variant }) => {\n    const alertCount = alerts.length;\n    const [expanded, setExpanded] = React.useState(false);\n    const alertContent = alertCount > 1 ? (React.createElement(List, null, _.map(alerts, (error, i) => (React.createElement(ListItem, { key: i }, error))))) : (alerts);\n    return (React.createElement(Alert, { isInline: true, variant: variant, className: \"co-alert\", title: React.createElement(React.Fragment, null,\n            `There are ${alertCount} ${variant} alerts.`,\n            React.createElement(Button, { type: \"button\", onClick: () => setExpanded(!expanded), variant: \"link\" },\n                expanded ? 'Hide' : 'Show',\n                \" Details\")) }, expanded && alertContent));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/alerts.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/alerts.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAgB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAErF,MAAM,CAAC,MAAM,eAAe,GAA+B,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACjF,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IACjC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,YAAY,GAChB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CACf,oBAAC,IAAI,QACF,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAC3B,oBAAC,QAAQ,IAAC,GAAG,EAAE,CAAC,IAAG,KAAK,CAAY,CACrC,CAAC,CACG,CACR,CAAC,CAAC,CAAC,CACF,MAAM,CACP,CAAC;IAEJ,OAAO,CACL,oBAAC,KAAK,IACJ,QAAQ,QACR,OAAO,EAAE,OAAO,EAChB,SAAS,EAAC,UAAU,EACpB,KAAK,EACH;YACG,aAAa,UAAU,IAAI,OAAO,UAAU;YAC7C,oBAAC,MAAM,IAAC,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAC,MAAM;gBACxE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;2BACpB,CACR,IAGJ,QAAQ,IAAI,YAAY,CACnB,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Alert, AlertVariant, Button, List, ListItem } from '@patternfly/react-core';\n\nexport const ExpandableAlert: React.FC<CustomAlertProps> = ({ alerts, variant }) => {\n  const alertCount = alerts.length;\n  const [expanded, setExpanded] = React.useState(false);\n  const alertContent =\n    alertCount > 1 ? (\n      <List>\n        {_.map(alerts, (error, i) => (\n          <ListItem key={i}>{error}</ListItem>\n        ))}\n      </List>\n    ) : (\n      alerts\n    );\n\n  return (\n    <Alert\n      isInline\n      variant={variant}\n      className=\"co-alert\"\n      title={\n        <>\n          {`There are ${alertCount} ${variant} alerts.`}\n          <Button type=\"button\" onClick={() => setExpanded(!expanded)} variant=\"link\">\n            {expanded ? 'Hide' : 'Show'} Details\n          </Button>\n        </>\n      }\n    >\n      {expanded && alertContent}\n    </Alert>\n  );\n};\n\ntype CustomAlertProps = {\n  alerts: React.ReactNode[];\n  variant: AlertVariant;\n};\n"]}]}