{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/BareMetalNodeDashboard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/BareMetalNodeDashboard.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport UtilizationCard from '@console/app/src/components/nodes/node-dashboard/UtilizationCard';\nimport ActivityCard from '@console/app/src/components/nodes/node-dashboard/ActivityCard';\nimport { NodeDashboardContext, } from '@console/app/src/components/nodes/node-dashboard/NodeDashboardContext';\nimport { reducer, initialState, ActionType, } from '@console/app/src/components/nodes/node-dashboard/NodeDashboard';\nimport { createBasicLookup, getNodeMachineName, getName } from '@console/shared';\nimport InventoryCard from './InventoryCard';\nimport DetailsCard from './DetailsCard';\nimport StatusCard from './StatusCard';\nimport { getHostMachineName, getNodeMaintenanceNodeName } from '../../../selectors';\nimport { BareMetalNodeDashboardContext } from './BareMetalNodeDashboardContext';\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }];\nconst rightCards = [{ Card: ActivityCard }];\nconst BareMetalNodeDashboard = ({ obj, hosts, nodeMaintenances, }) => {\n    const [state, dispatch] = React.useReducer(reducer, initialState(obj));\n    if (obj !== state.obj) {\n        dispatch({ type: ActionType.OBJ, payload: obj });\n    }\n    const hostsByMachineName = createBasicLookup(hosts, getHostMachineName);\n    const host = hostsByMachineName[getNodeMachineName(obj)];\n    const maintenancesByNodeName = createBasicLookup(nodeMaintenances, getNodeMaintenanceNodeName);\n    const nodeMaintenance = maintenancesByNodeName[getName(obj)];\n    const setCPULimit = React.useCallback((payload) => dispatch({ type: ActionType.CPU_LIMIT, payload }), []);\n    const setMemoryLimit = React.useCallback((payload) => dispatch({ type: ActionType.MEMORY_LIMIT, payload }), []);\n    const setHealthCheck = React.useCallback((payload) => dispatch({ type: ActionType.HEALTH_CHECK, payload }), []);\n    const context = {\n        obj,\n        cpuLimit: state.cpuLimit,\n        memoryLimit: state.memoryLimit,\n        setCPULimit,\n        setMemoryLimit,\n        setHealthCheck,\n    };\n    const bmnContext = {\n        host,\n        nodeMaintenance,\n    };\n    return (React.createElement(NodeDashboardContext.Provider, { value: context },\n        React.createElement(BareMetalNodeDashboardContext.Provider, { value: bmnContext },\n            React.createElement(Dashboard, null,\n                React.createElement(DashboardGrid, { mainCards: mainCards, leftCards: leftCards, rightCards: rightCards })))));\n};\nexport default BareMetalNodeDashboard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/BareMetalNodeDashboard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/BareMetalNodeDashboard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { NodeKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport UtilizationCard from '@console/app/src/components/nodes/node-dashboard/UtilizationCard';\nimport ActivityCard from '@console/app/src/components/nodes/node-dashboard/ActivityCard';\nimport {\n  NodeDashboardContext,\n  HealthCheck,\n} from '@console/app/src/components/nodes/node-dashboard/NodeDashboardContext';\nimport {\n  reducer,\n  initialState,\n  ActionType,\n} from '@console/app/src/components/nodes/node-dashboard/NodeDashboard';\nimport { createBasicLookup, getNodeMachineName, getName } from '@console/shared';\nimport { LimitRequested } from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\n\nimport InventoryCard from './InventoryCard';\nimport DetailsCard from './DetailsCard';\nimport StatusCard from './StatusCard';\nimport { BareMetalHostKind } from '../../../types';\nimport { getHostMachineName, getNodeMaintenanceNodeName } from '../../../selectors';\nimport { BareMetalNodeDashboardContext } from './BareMetalNodeDashboardContext';\n\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nconst BareMetalNodeDashboard: React.FC<BareMetalNodeDashboardProps> = ({\n  obj,\n  hosts,\n  nodeMaintenances,\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState(obj));\n\n  if (obj !== state.obj) {\n    dispatch({ type: ActionType.OBJ, payload: obj });\n  }\n\n  const hostsByMachineName = createBasicLookup(hosts, getHostMachineName);\n  const host = hostsByMachineName[getNodeMachineName(obj)];\n  const maintenancesByNodeName = createBasicLookup(nodeMaintenances, getNodeMaintenanceNodeName);\n  const nodeMaintenance = maintenancesByNodeName[getName(obj)];\n\n  const setCPULimit = React.useCallback(\n    (payload: LimitRequested) => dispatch({ type: ActionType.CPU_LIMIT, payload }),\n    [],\n  );\n  const setMemoryLimit = React.useCallback(\n    (payload: LimitRequested) => dispatch({ type: ActionType.MEMORY_LIMIT, payload }),\n    [],\n  );\n  const setHealthCheck = React.useCallback(\n    (payload: HealthCheck) => dispatch({ type: ActionType.HEALTH_CHECK, payload }),\n    [],\n  );\n\n  const context = {\n    obj,\n    cpuLimit: state.cpuLimit,\n    memoryLimit: state.memoryLimit,\n    setCPULimit,\n    setMemoryLimit,\n    setHealthCheck,\n  };\n\n  const bmnContext = {\n    host,\n    nodeMaintenance,\n  };\n\n  return (\n    <NodeDashboardContext.Provider value={context}>\n      <BareMetalNodeDashboardContext.Provider value={bmnContext}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rightCards} />\n        </Dashboard>\n      </BareMetalNodeDashboardContext.Provider>\n    </NodeDashboardContext.Provider>\n  );\n};\n\nexport default BareMetalNodeDashboard;\n\ntype BareMetalNodeDashboardProps = {\n  obj: NodeKind;\n  hosts: BareMetalHostKind[];\n  nodeMaintenances: K8sResourceKind[];\n};\n"]}]}