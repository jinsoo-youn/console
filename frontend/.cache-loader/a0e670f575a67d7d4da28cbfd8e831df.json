{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/pipeline-filter-reducer.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/pipeline-filter-reducer.ts","mtime":1616735742400},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport const pipelineRunStatus = (pipelineRun) => {\n    const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n    const isCancelled = conditions.find((c) => ['PipelineRunCancelled', 'TaskRunCancelled'].some((cancel) => cancel === c.reason));\n    if (isCancelled) {\n        return 'Cancelled';\n    }\n    if (conditions.length === 0)\n        return null;\n    const condition = conditions.find((c) => c.type === 'Succeeded');\n    return !condition || !condition.status\n        ? null\n        : condition.status === 'True'\n            ? 'Succeeded'\n            : condition.status === 'False'\n                ? 'Failed'\n                : 'Running';\n};\nexport const pipelineFilterReducer = (pipeline) => {\n    if (!pipeline.latestRun)\n        return '-';\n    return pipelineRunStatus(pipeline.latestRun) || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun) => {\n    const status = pipelineRunStatus(pipelineRun);\n    return status || '-';\n};\nexport const pipelineStatusFilter = (filters, pipeline) => {\n    if (!filters || !filters.selected || !filters.selected.size) {\n        return true;\n    }\n    const status = pipelineFilterReducer(pipeline);\n    return filters.selected.has(status) || !_.includes(filters.all, status);\n};\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n    if (!phases || !phases.selected || !phases.selected.size) {\n        return true;\n    }\n    const status = pipelineRunFilterReducer(pipeline);\n    return phases.selected.has(status) || !_.includes(phases.all, status);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/pipeline-filter-reducer.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/pipeline-filter-reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,WAAW,EAAU,EAAE;IACvD,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CACxC,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC,CACnF,CAAC;IACF,IAAI,WAAW,EAAE;QACf,OAAO,WAAW,CAAC;KACpB;IACD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAEzC,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;IACjE,OAAO,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM;QACpC,CAAC,CAAC,IAAI;QACN,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,MAAM;YAC7B,CAAC,CAAC,WAAW;YACb,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,OAAO;gBAC9B,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,QAAQ,EAAU,EAAE;IACxD,IAAI,CAAC,QAAQ,CAAC,SAAS;QAAE,OAAO,GAAG,CAAC;IACpC,OAAO,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,WAAW,EAAU,EAAE;IAC9D,MAAM,MAAM,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAC9C,OAAO,MAAM,IAAI,GAAG,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;IACxD,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;QAC3D,OAAO,IAAI,CAAC;KACb;IACD,MAAM,MAAM,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IAC/C,OAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC1E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;IAC1D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxD,OAAO,IAAI,CAAC;KACb;IAED,MAAM,MAAM,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IAClD,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACxE,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\n\nexport const pipelineRunStatus = (pipelineRun): string => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  const isCancelled = conditions.find((c) =>\n    ['PipelineRunCancelled', 'TaskRunCancelled'].some((cancel) => cancel === c.reason),\n  );\n  if (isCancelled) {\n    return 'Cancelled';\n  }\n  if (conditions.length === 0) return null;\n\n  const condition = conditions.find((c) => c.type === 'Succeeded');\n  return !condition || !condition.status\n    ? null\n    : condition.status === 'True'\n    ? 'Succeeded'\n    : condition.status === 'False'\n    ? 'Failed'\n    : 'Running';\n};\n\nexport const pipelineFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatus(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || '-';\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.size) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected.has(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.size) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected.has(status) || !_.includes(phases.all, status);\n};\n"]}]}