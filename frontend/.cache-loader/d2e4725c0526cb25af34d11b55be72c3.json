{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/replicaset.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/replicaset.jsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["// TODO file should be renamed replica-set.jsx to match convention\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from './factory';\nimport { Kebab, ContainerTable, navFactory, SectionHeading, ResourceSummary, ResourcePodCount, AsyncComponent, ResourceLink, resourcePath, LabelList, ResourceKebab, OwnerReferences, Timestamp, PodsComponent } from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { ReplicaSetModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\nexport const replicaSetMenuActions = [ModifyCount, AddStorage, ...Kebab.getExtensionsActionsForKind(ReplicaSetModel), ...common];\nconst Details = ({ obj: replicaSet }) => {\n    const { t } = useTranslation();\n    const revision = _.get(replicaSet, ['metadata', 'annotations', 'deployment.kubernetes.io/revision']);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(replicaSet, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourceSummary, { resource: replicaSet, showPodSelector: true, showNodeSelector: true, showTolerations: true }, revision && (React.createElement(React.Fragment, null,\n                        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_41')),\n                        React.createElement(\"dd\", null, revision))))),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourcePodCount, { resource: replicaSet })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }),\n            React.createElement(ContainerTable, { containers: replicaSet.spec.template.spec.containers })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(VolumesTable, { resource: replicaSet, heading: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1') }))));\n};\nconst EnvironmentPage = props => React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then(c => c.EnvironmentPage) }, props));\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = props => React.createElement(EnvironmentPage, { obj: props.obj, rawEnvData: props.obj.spec.template.spec, envPath: envPath, readOnly: false });\nconst ReplicaSetPods = props => React.createElement(PodsComponent, Object.assign({}, props, { customData: { showNodes: true } }));\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { menuActions: replicaSetMenuActions, pages: [details(Details), editYaml(), pods(ReplicaSetPods), envEditor(environmentComponent), events(ResourceEventStream)] }));\nconst kind = 'ReplicaSet';\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\nconst ReplicaSetTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Link, { to: `${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`, title: \"pods\" },\n                obj.status.replicas || 0,\n                \" of \",\n                obj.spec.replicas,\n                \" pods\")),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(LabelList, { kind: kind, labels: obj.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(OwnerReferences, { resource: obj })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(ResourceKebab, { actions: replicaSetMenuActions, kind: kind, resource: obj }))));\n};\nconst ReplicaSetTableHeader = t => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'numReplicas',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n            sortField: 'metadata.ownerReferences[0].name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[6] },\n        },\n    ];\n};\nReplicaSetTableHeader.displayName = 'ReplicaSetTableHeader';\nconst ReplicaSetsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Replica Sets\", Header: ReplicaSetTableHeader.bind(null, t), Row: ReplicaSetTableRow, virtualize: true }));\n};\nconst ReplicaSetsPage = props => {\n    const { t } = useTranslation();\n    const { canCreate = true } = props;\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_31'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_31') }), canCreate: canCreate, kind: \"ReplicaSet\", ListComponent: ReplicaSetsList }, props));\n};\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/replicaset.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/replicaset.jsx"],"names":[],"mappings":"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","sourcesContent":["// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from './factory';\nimport { Kebab, ContainerTable, navFactory, SectionHeading, ResourceSummary, ResourcePodCount, AsyncComponent, ResourceLink, resourcePath, LabelList, ResourceKebab, OwnerReferences, Timestamp, PodsComponent } from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { ReplicaSetModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const replicaSetMenuActions = [ModifyCount, AddStorage, ...Kebab.getExtensionsActionsForKind(ReplicaSetModel), ...common];\n\nconst Details = ({ obj: replicaSet }) => {\n  const { t } = useTranslation();\n  const revision = _.get(replicaSet, ['metadata', 'annotations', 'deployment.kubernetes.io/revision']);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(replicaSet, t) })} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_41')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <ResourcePodCount resource={replicaSet} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = props => <AsyncComponent loader={() => import('./environment.jsx').then(c => c.EnvironmentPage)} {...props} />;\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = props => <EnvironmentPage obj={props.obj} rawEnvData={props.obj.spec.template.spec} envPath={envPath} readOnly={false} />;\n\nconst ReplicaSetPods = props => <PodsComponent {...props} customData={{ showNodes: true }} />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = props => <DetailsPage {...props} menuActions={replicaSetMenuActions} pages={[details(Details), editYaml(), pods(ReplicaSetPods), envEditor(environmentComponent), events(ResourceEventStream)]} />;\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-xl'), Kebab.columnClass];\n\nconst ReplicaSetTableRow = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`} title=\"pods\">\n          {obj.status.replicas || 0} of {obj.spec.replicas} pods\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={replicaSetMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst ReplicaSetTableHeader = t => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nReplicaSetTableHeader.displayName = 'ReplicaSetTableHeader';\n\nconst ReplicaSetsList = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Replica Sets\" Header={ReplicaSetTableHeader.bind(null, t)} Row={ReplicaSetTableRow} virtualize />;\n};\nconst ReplicaSetsPage = props => {\n  const { t } = useTranslation();\n  const { canCreate = true } = props;\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_31')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_31') })} canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />;\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n"]}]}