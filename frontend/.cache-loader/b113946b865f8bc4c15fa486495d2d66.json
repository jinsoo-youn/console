{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/inventory-card/InventoryItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/inventory-card/InventoryItem.tsx","mtime":1615793099680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { InProgressIcon, QuestionCircleIcon } from '@patternfly/react-icons';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { Accordion, AccordionItem, AccordionToggle, AccordionContent } from '@patternfly/react-core';\nimport { pluralize } from '@console/internal/components/utils';\nimport { useExtensions, isDashboardsInventoryItemGroup } from '@console/plugin-sdk';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status/icons';\nimport { InventoryStatusGroup } from './status-group';\nimport { ResourceLabel, ResourceLabelPlural } from '@console/internal/models/hypercloud/resource-plural';\nimport { useTranslation } from 'react-i18next';\nimport './inventory-card.scss';\nconst defaultStatusGroupIcons = {\n    [InventoryStatusGroup.WARN]: React.createElement(YellowExclamationTriangleIcon, null),\n    [InventoryStatusGroup.ERROR]: React.createElement(RedExclamationCircleIcon, null),\n    [InventoryStatusGroup.PROGRESS]: React.createElement(InProgressIcon, { className: \"co-inventory-card__status-icon--progress\" }),\n    [InventoryStatusGroup.UNKNOWN]: React.createElement(QuestionCircleIcon, { className: \"co-inventory-card__status-icon--question\" }),\n};\nconst getStatusGroupIcons = (groups) => {\n    const groupStatusIcons = Object.assign({}, defaultStatusGroupIcons);\n    groups.forEach(group => {\n        if (!groupStatusIcons[group.properties.id]) {\n            groupStatusIcons[group.properties.id] = group.properties.icon;\n        }\n    });\n    return groupStatusIcons;\n};\nconst getTop3Groups = (groups, groupIDs) => {\n    const groupStatuses = [InventoryStatusGroup.ERROR, InventoryStatusGroup.WARN, InventoryStatusGroup.PROGRESS];\n    groups.forEach(group => {\n        if (!groupStatuses.includes(group.properties.id)) {\n            groupStatuses.push(group.properties.id);\n        }\n    });\n    groupStatuses.push(InventoryStatusGroup.UNKNOWN);\n    return groupIDs.sort((a, b) => groupStatuses.indexOf(a) - groupStatuses.indexOf(b)).slice(0, 3);\n};\nexport const InventoryItem = React.memo(({ isLoading, title, titlePlural, count, children, error = false, TitleComponent, ExpandedComponent }) => {\n    const [expanded, setExpanded] = React.useState(false);\n    const onClick = React.useCallback(() => setExpanded(!expanded), [expanded]);\n    const titleMessage = pluralize(count, title, titlePlural, !isLoading && !error);\n    return ExpandedComponent ? (React.createElement(Accordion, { asDefinitionList: false, headingLevel: \"h5\", className: \"co-inventory-card__accordion\" },\n        React.createElement(AccordionItem, null,\n            React.createElement(AccordionToggle, { onClick: onClick, isExpanded: expanded, id: title, className: \"co-inventory-card__accordion-toggle\" },\n                React.createElement(\"div\", { className: \"co-inventory-card__item\" },\n                    React.createElement(\"div\", { className: \"co-inventory-card__item-title\" },\n                        isLoading && !error && React.createElement(\"div\", { className: \"skeleton-inventory\" }),\n                        TitleComponent ? React.createElement(TitleComponent, null, titleMessage) : titleMessage),\n                    !expanded && (error || !isLoading) && React.createElement(\"div\", { className: \"co-inventory-card__item-status\" }, error ? React.createElement(\"div\", { className: \"co-dashboard-text--small text-secondary\" }, \"Not available\") : children))),\n            React.createElement(AccordionContent, { isHidden: !expanded, className: \"co-inventory-card__accordion-body\" },\n                React.createElement(ExpandedComponent, null))))) : (React.createElement(\"div\", { className: \"co-inventory-card__item\" },\n        React.createElement(\"div\", { className: \"co-inventory-card__item-title\" },\n            isLoading && !error && React.createElement(\"div\", { className: \"skeleton-inventory\" }),\n            TitleComponent ? React.createElement(TitleComponent, null, titleMessage) : titleMessage),\n        (error || !isLoading) && React.createElement(\"div\", { className: \"co-inventory-card__item-status\" }, error ? React.createElement(\"div\", { className: \"co-dashboard-text--small text-secondary\" }, \"Not available\") : children)));\n});\nexport const Status = ({ groupID, count }) => {\n    const groupExtensions = useExtensions(isDashboardsInventoryItemGroup);\n    const statusGroupIcons = React.useMemo(() => getStatusGroupIcons(groupExtensions), [groupExtensions]);\n    if (groupID === InventoryStatusGroup.NOT_MAPPED || !count) {\n        return null;\n    }\n    const groupIcon = statusGroupIcons[groupID] || statusGroupIcons[InventoryStatusGroup.UNKNOWN];\n    return (React.createElement(\"div\", { className: \"co-inventory-card__status\" },\n        React.createElement(\"span\", { className: \"co-dashboard-icon\" }, groupIcon),\n        React.createElement(\"span\", { className: \"co-inventory-card__status-text\" }, count)));\n};\nconst StatusLink = ({ groupID, count, statusIDs, kind, namespace, filterType, basePath }) => {\n    const groupExtensions = useExtensions(isDashboardsInventoryItemGroup);\n    const statusGroupIcons = React.useMemo(() => getStatusGroupIcons(groupExtensions), [groupExtensions]);\n    if (groupID === InventoryStatusGroup.NOT_MAPPED || !count) {\n        return null;\n    }\n    const groupIcon = statusGroupIcons[groupID] || statusGroupIcons[InventoryStatusGroup.NOT_MAPPED];\n    const statusItems = encodeURIComponent(statusIDs.join(','));\n    const path = basePath || resourcePathFromModel(kind, null, namespace);\n    const to = filterType && statusItems.length > 0 ? `${path}?rowFilter-${filterType}=${statusItems}` : path;\n    return (React.createElement(\"div\", { className: \"co-inventory-card__status\" },\n        React.createElement(Link, { to: to, style: { textDecoration: 'none' } },\n            React.createElement(\"span\", { className: \"co-dashboard-icon\" }, groupIcon),\n            React.createElement(\"span\", { className: \"co-inventory-card__status-text\" }, count))));\n};\nconst ResourceTitleComponent = ({ kind, namespace, children, basePath }) => React.createElement(Link, { to: basePath || resourcePathFromModel(kind, null, namespace) }, children);\nexport const ResourceInventoryItem = ({ kind, useAbbr, TitleComponent, resources = [], additionalResources, isLoading, mapper, namespace, error, showLink = true, ExpandedComponent, basePath }) => {\n    let Title = React.useCallback(props => React.createElement(ResourceTitleComponent, Object.assign({ kind: kind, namespace: namespace, basePath: basePath }, props)), [kind, namespace, basePath]);\n    const { t } = useTranslation();\n    if (TitleComponent)\n        Title = TitleComponent;\n    const groupExtensions = useExtensions(isDashboardsInventoryItemGroup);\n    const groups = React.useMemo(() => (mapper ? mapper(resources, additionalResources) : {}), [mapper, resources, additionalResources]);\n    const top3Groups = React.useMemo(() => getTop3Groups(groupExtensions, Object.keys(groups).filter(key => groups[key].count > 0)), [groupExtensions, groups]);\n    // The count can depend on additionalResources (like mixing of VM and VMI for kubevirt-plugin)\n    const totalCount = React.useMemo(() => (mapper ? Object.keys(groups).reduce((acc, cur) => groups[cur].count + acc, 0) : resources.length), [mapper, groups, resources]);\n    return (React.createElement(InventoryItem, { isLoading: isLoading, title: ResourceLabel(kind, t), titlePlural: ResourceLabelPlural(kind, t), count: totalCount, error: error, TitleComponent: showLink ? Title : null, ExpandedComponent: ExpandedComponent }, top3Groups.map(key => (showLink ? React.createElement(StatusLink, { key: key, kind: kind, namespace: namespace, groupID: key, count: groups[key].count, statusIDs: groups[key].statusIDs, filterType: groups[key].filterType, basePath: basePath }) : React.createElement(Status, { key: key, groupID: key, count: groups[key].count })))));\n};\nexport default InventoryItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/inventory-card/InventoryItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/inventory-card/InventoryItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { InProgressIcon, QuestionCircleIcon } from '@patternfly/react-icons';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { Accordion, AccordionItem, AccordionToggle, AccordionContent } from '@patternfly/react-core';\nimport { pluralize } from '@console/internal/components/utils';\nimport { useExtensions, DashboardsInventoryItemGroup, isDashboardsInventoryItemGroup } from '@console/plugin-sdk';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status/icons';\nimport { InventoryStatusGroup } from './status-group';\nimport { ResourceLabel, ResourceLabelPlural } from '@console/internal/models/hypercloud/resource-plural';\nimport { useTranslation } from 'react-i18next';\nimport './inventory-card.scss';\n\nconst defaultStatusGroupIcons = {\n  [InventoryStatusGroup.WARN]: <YellowExclamationTriangleIcon />,\n  [InventoryStatusGroup.ERROR]: <RedExclamationCircleIcon />,\n  [InventoryStatusGroup.PROGRESS]: <InProgressIcon className=\"co-inventory-card__status-icon--progress\" />,\n  [InventoryStatusGroup.UNKNOWN]: <QuestionCircleIcon className=\"co-inventory-card__status-icon--question\" />,\n};\n\nconst getStatusGroupIcons = (groups: DashboardsInventoryItemGroup[]) => {\n  const groupStatusIcons = { ...defaultStatusGroupIcons };\n  groups.forEach(group => {\n    if (!groupStatusIcons[group.properties.id]) {\n      groupStatusIcons[group.properties.id] = group.properties.icon;\n    }\n  });\n  return groupStatusIcons;\n};\n\nconst getTop3Groups = (groups: DashboardsInventoryItemGroup[], groupIDs: string[]) => {\n  const groupStatuses: (InventoryStatusGroup | string)[] = [InventoryStatusGroup.ERROR, InventoryStatusGroup.WARN, InventoryStatusGroup.PROGRESS];\n  groups.forEach(group => {\n    if (!groupStatuses.includes(group.properties.id)) {\n      groupStatuses.push(group.properties.id);\n    }\n  });\n  groupStatuses.push(InventoryStatusGroup.UNKNOWN);\n  return groupIDs.sort((a, b) => groupStatuses.indexOf(a) - groupStatuses.indexOf(b)).slice(0, 3);\n};\n\nexport const InventoryItem: React.FC<InventoryItemProps> = React.memo(({ isLoading, title, titlePlural, count, children, error = false, TitleComponent, ExpandedComponent }) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const onClick = React.useCallback(() => setExpanded(!expanded), [expanded]);\n  const titleMessage = pluralize(count, title, titlePlural, !isLoading && !error);\n  return ExpandedComponent ? (\n    <Accordion asDefinitionList={false} headingLevel=\"h5\" className=\"co-inventory-card__accordion\">\n      <AccordionItem>\n        <AccordionToggle onClick={onClick} isExpanded={expanded} id={title} className=\"co-inventory-card__accordion-toggle\">\n          <div className=\"co-inventory-card__item\">\n            <div className=\"co-inventory-card__item-title\">\n              {isLoading && !error && <div className=\"skeleton-inventory\" />}\n              {TitleComponent ? <TitleComponent>{titleMessage}</TitleComponent> : titleMessage}\n            </div>\n            {!expanded && (error || !isLoading) && <div className=\"co-inventory-card__item-status\">{error ? <div className=\"co-dashboard-text--small text-secondary\">Not available</div> : children}</div>}\n          </div>\n        </AccordionToggle>\n        <AccordionContent isHidden={!expanded} className=\"co-inventory-card__accordion-body\">\n          <ExpandedComponent />\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  ) : (\n    <div className=\"co-inventory-card__item\">\n      <div className=\"co-inventory-card__item-title\">\n        {isLoading && !error && <div className=\"skeleton-inventory\" />}\n        {TitleComponent ? <TitleComponent>{titleMessage}</TitleComponent> : titleMessage}\n      </div>\n      {(error || !isLoading) && <div className=\"co-inventory-card__item-status\">{error ? <div className=\"co-dashboard-text--small text-secondary\">Not available</div> : children}</div>}\n    </div>\n  );\n});\n\nexport const Status: React.FC<StatusProps> = ({ groupID, count }) => {\n  const groupExtensions = useExtensions<DashboardsInventoryItemGroup>(isDashboardsInventoryItemGroup);\n\n  const statusGroupIcons = React.useMemo(() => getStatusGroupIcons(groupExtensions), [groupExtensions]);\n\n  if (groupID === InventoryStatusGroup.NOT_MAPPED || !count) {\n    return null;\n  }\n\n  const groupIcon = statusGroupIcons[groupID] || statusGroupIcons[InventoryStatusGroup.UNKNOWN];\n\n  return (\n    <div className=\"co-inventory-card__status\">\n      <span className=\"co-dashboard-icon\">{groupIcon}</span>\n      <span className=\"co-inventory-card__status-text\">{count}</span>\n    </div>\n  );\n};\n\nconst StatusLink: React.FC<StatusLinkProps> = ({ groupID, count, statusIDs, kind, namespace, filterType, basePath }) => {\n  const groupExtensions = useExtensions<DashboardsInventoryItemGroup>(isDashboardsInventoryItemGroup);\n\n  const statusGroupIcons = React.useMemo(() => getStatusGroupIcons(groupExtensions), [groupExtensions]);\n\n  if (groupID === InventoryStatusGroup.NOT_MAPPED || !count) {\n    return null;\n  }\n\n  const groupIcon = statusGroupIcons[groupID] || statusGroupIcons[InventoryStatusGroup.NOT_MAPPED];\n  const statusItems = encodeURIComponent(statusIDs.join(','));\n  const path = basePath || resourcePathFromModel(kind, null, namespace);\n  const to = filterType && statusItems.length > 0 ? `${path}?rowFilter-${filterType}=${statusItems}` : path;\n\n  return (\n    <div className=\"co-inventory-card__status\">\n      <Link to={to} style={{ textDecoration: 'none' }}>\n        <span className=\"co-dashboard-icon\">{groupIcon}</span>\n        <span className=\"co-inventory-card__status-text\">{count}</span>\n      </Link>\n    </div>\n  );\n};\n\nconst ResourceTitleComponent: React.FC<ResourceTitleComponentComponent> = ({ kind, namespace, children, basePath }) => <Link to={basePath || resourcePathFromModel(kind, null, namespace)}>{children}</Link>;\n\nexport const ResourceInventoryItem: React.FC<ResourceInventoryItemProps> = ({ kind, useAbbr, TitleComponent, resources = [], additionalResources, isLoading, mapper, namespace, error, showLink = true, ExpandedComponent, basePath }) => {\n  let Title: React.ComponentType = React.useCallback(props => <ResourceTitleComponent kind={kind} namespace={namespace} basePath={basePath} {...props} />, [kind, namespace, basePath]);\n  const { t } = useTranslation();\n\n  if (TitleComponent) Title = TitleComponent;\n\n  const groupExtensions = useExtensions<DashboardsInventoryItemGroup>(isDashboardsInventoryItemGroup);\n\n  const groups = React.useMemo(() => (mapper ? mapper(resources, additionalResources) : {}), [mapper, resources, additionalResources]);\n\n  const top3Groups = React.useMemo(\n    () =>\n      getTop3Groups(\n        groupExtensions,\n        Object.keys(groups).filter(key => groups[key].count > 0),\n      ),\n    [groupExtensions, groups],\n  );\n\n  // The count can depend on additionalResources (like mixing of VM and VMI for kubevirt-plugin)\n  const totalCount = React.useMemo(() => (mapper ? Object.keys(groups).reduce((acc, cur) => groups[cur].count + acc, 0) : resources.length), [mapper, groups, resources]);\n\n  return (\n    <InventoryItem isLoading={isLoading} title={ResourceLabel(kind, t)} titlePlural={ResourceLabelPlural(kind, t)} count={totalCount} error={error} TitleComponent={showLink ? Title : null} ExpandedComponent={ExpandedComponent}>\n      {top3Groups.map(key => (showLink ? <StatusLink key={key} kind={kind} namespace={namespace} groupID={key} count={groups[key].count} statusIDs={groups[key].statusIDs} filterType={groups[key].filterType} basePath={basePath} /> : <Status key={key} groupID={key} count={groups[key].count} />))}\n    </InventoryItem>\n  );\n};\n\nexport default InventoryItem;\n\ntype StatusGroup = {\n  [key in InventoryStatusGroup | string]: {\n    filterType?: string;\n    statusIDs: string[];\n    count: number;\n  };\n};\n\nexport type StatusGroupMapper = (resources: K8sResourceKind[], additionalResources?: { [key: string]: K8sResourceKind[] }) => StatusGroup;\n\ntype InventoryItemProps = {\n  isLoading: boolean;\n  title: string;\n  titlePlural?: string;\n  count: number;\n  children?: React.ReactNode;\n  error?: boolean;\n  TitleComponent?: React.ComponentType<{}>;\n  ExpandedComponent?: React.ComponentType<{}>;\n};\n\ntype StatusProps = {\n  groupID: InventoryStatusGroup | string;\n  count: number;\n};\n\ntype StatusLinkProps = StatusProps & {\n  statusIDs: string[];\n  kind: K8sKind;\n  namespace?: string;\n  filterType?: string;\n  basePath?: string;\n};\n\nexport type ExpandedComponentProps = {\n  resource: K8sResourceKind[];\n  additionalResources?: { [key: string]: K8sResourceKind[] };\n};\n\ntype ResourceInventoryItemProps = {\n  resources: K8sResourceKind[];\n  additionalResources?: { [key: string]: K8sResourceKind[] };\n  mapper?: StatusGroupMapper;\n  kind: K8sKind;\n  useAbbr?: boolean;\n  isLoading: boolean;\n  namespace?: string;\n  error: boolean;\n  showLink?: boolean;\n  TitleComponent?: React.ComponentType<{}>;\n  ExpandedComponent?: React.ComponentType<{}>;\n  basePath?: string;\n};\n\ntype ResourceTitleComponentComponent = {\n  kind: K8sKind;\n  namespace: string;\n  basePath?: string;\n};\n"]}]}