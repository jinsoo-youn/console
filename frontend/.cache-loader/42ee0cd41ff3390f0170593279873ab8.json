{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/project-access/ProjectAccessForm.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/project-access/ProjectAccessForm.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Form, TextInputTypes } from '@patternfly/react-core';\nimport { MultiColumnField, InputField, DropdownField, FormFooter } from '@console/shared';\nvar accessRoles;\n(function (accessRoles) {\n    accessRoles[\"\"] = \"Select a role\";\n    accessRoles[\"admin\"] = \"Admin\";\n    accessRoles[\"edit\"] = \"Edit\";\n    accessRoles[\"view\"] = \"View\";\n})(accessRoles || (accessRoles = {}));\nconst ProjectAccessForm = ({ handleSubmit, handleReset, isSubmitting, status, errors, dirty, }) => (React.createElement(Form, { onSubmit: handleSubmit },\n    React.createElement(\"div\", { className: \"co-m-pane__form\" },\n        React.createElement(MultiColumnField, { name: \"projectAccess\", addLabel: \"Add Access\", headers: ['Name', 'Role'], emptyValues: { user: '', role: '' }, toolTip: \"Remove Access\" },\n            React.createElement(InputField, { name: \"user\", type: TextInputTypes.text, placeholder: \"Name\" }),\n            React.createElement(DropdownField, { name: \"role\", items: accessRoles, fullWidth: true })),\n        React.createElement(\"hr\", null),\n        React.createElement(FormFooter, { handleReset: handleReset, isSubmitting: isSubmitting, errorMessage: status && status.submitError, successMessage: status && !dirty && status.success, disableSubmit: !dirty || !_.isEmpty(errors), showAlert: dirty }))));\nexport default ProjectAccessForm;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/project-access/ProjectAccessForm.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/project-access/ProjectAccessForm.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAE9D,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE1F,IAAK,WAKJ;AALD,WAAK,WAAW;IACd,iCAAoB,CAAA;IACpB,8BAAe,CAAA;IACf,4BAAa,CAAA;IACb,4BAAa,CAAA;AACf,CAAC,EALI,WAAW,KAAX,WAAW,QAKf;AAED,MAAM,iBAAiB,GAAwC,CAAC,EAC9D,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,MAAM,EACN,MAAM,EACN,KAAK,GACN,EAAE,EAAE,CAAC,CACJ,oBAAC,IAAI,IAAC,QAAQ,EAAE,YAAY;IAC1B,6BAAK,SAAS,EAAC,iBAAiB;QAC9B,oBAAC,gBAAgB,IACf,IAAI,EAAC,eAAe,EACpB,QAAQ,EAAC,YAAY,EACrB,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EACzB,WAAW,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EACnC,OAAO,EAAC,eAAe;YAEvB,oBAAC,UAAU,IAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,WAAW,EAAC,MAAM,GAAG;YACxE,oBAAC,aAAa,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,WAAW,EAAE,SAAS,SAAG,CAC1C;QACnB,+BAAM;QACN,oBAAC,UAAU,IACT,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,EAC1B,YAAY,EAAE,MAAM,IAAI,MAAM,CAAC,WAAW,EAC1C,cAAc,EAAE,MAAM,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAClD,aAAa,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAC3C,SAAS,EAAE,KAAK,GAChB,CACE,CACD,CACR,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Form, TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport { MultiColumnField, InputField, DropdownField, FormFooter } from '@console/shared';\n\nenum accessRoles {\n  '' = 'Select a role',\n  admin = 'Admin',\n  edit = 'Edit',\n  view = 'View',\n}\n\nconst ProjectAccessForm: React.FC<FormikProps<FormikValues>> = ({\n  handleSubmit,\n  handleReset,\n  isSubmitting,\n  status,\n  errors,\n  dirty,\n}) => (\n  <Form onSubmit={handleSubmit}>\n    <div className=\"co-m-pane__form\">\n      <MultiColumnField\n        name=\"projectAccess\"\n        addLabel=\"Add Access\"\n        headers={['Name', 'Role']}\n        emptyValues={{ user: '', role: '' }}\n        toolTip=\"Remove Access\"\n      >\n        <InputField name=\"user\" type={TextInputTypes.text} placeholder=\"Name\" />\n        <DropdownField name=\"role\" items={accessRoles} fullWidth />\n      </MultiColumnField>\n      <hr />\n      <FormFooter\n        handleReset={handleReset}\n        isSubmitting={isSubmitting}\n        errorMessage={status && status.submitError}\n        successMessage={status && !dirty && status.success}\n        disableSubmit={!dirty || !_.isEmpty(errors)}\n        showAlert={dirty}\n      />\n    </div>\n  </Form>\n);\n\nexport default ProjectAccessForm;\n"]}]}