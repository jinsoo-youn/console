{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/common.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/common.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport const omitEmpty = (obj, justUndefined = false) => {\n    const omit = (o) => {\n        if (_.isArray(o)) {\n            for (let idx = o.length - 1; idx >= 0; idx--) {\n                const item = o[idx];\n                if (item === undefined || (!justUndefined && item === null)) {\n                    o.splice(idx, 1);\n                }\n                else {\n                    omit(item);\n                }\n            }\n        }\n        else if (_.isObject(o)) {\n            Object.keys(o).forEach((k) => {\n                const value = o[k];\n                if (value === undefined || (!justUndefined && value === null)) {\n                    delete o[k];\n                }\n                else {\n                    omit(value);\n                }\n            });\n        }\n    };\n    omit(obj);\n};\nexport const isSetEqual = (set, otherSet) => set.size === otherSet.size && [...set].every((s) => otherSet.has(s));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/common.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/common.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,aAAa,GAAG,KAAK,EAAE,EAAE;IACtD,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE;QACjB,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChB,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC5C,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACpB,IAAI,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,aAAa,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;oBAC3D,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBAClB;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,CAAC;iBACZ;aACF;SACF;aAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACxB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC3B,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,CAAC,aAAa,IAAI,KAAK,KAAK,IAAI,CAAC,EAAE;oBAC7D,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACb;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,CAAC;iBACb;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IACF,IAAI,CAAC,GAAG,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,GAAa,EAAE,QAAkB,EAAE,EAAE,CAC9D,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\n\nexport const omitEmpty = (obj, justUndefined = false) => {\n  const omit = (o) => {\n    if (_.isArray(o)) {\n      for (let idx = o.length - 1; idx >= 0; idx--) {\n        const item = o[idx];\n        if (item === undefined || (!justUndefined && item === null)) {\n          o.splice(idx, 1);\n        } else {\n          omit(item);\n        }\n      }\n    } else if (_.isObject(o)) {\n      Object.keys(o).forEach((k) => {\n        const value = o[k];\n        if (value === undefined || (!justUndefined && value === null)) {\n          delete o[k];\n        } else {\n          omit(value);\n        }\n      });\n    }\n  };\n  omit(obj);\n};\n\nexport const isSetEqual = (set: Set<any>, otherSet: Set<any>) =>\n  set.size === otherSet.size && [...set].every((s) => otherSet.has(s));\n"]}]}