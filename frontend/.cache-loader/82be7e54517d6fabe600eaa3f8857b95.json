{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/HealthItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/HealthItem.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { DashboardCardPopupLink } from '../dashboard-card/DashboardCardLink';\nimport { HealthState, healthStateMapping } from './states';\nconst HealthItemIcon = ({ state }) => (React.createElement(\"div\", { className: \"co-dashboard-icon\" }, (healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).icon));\nconst HealthItem = React.memo(({ className, state, title, details, popupTitle, noIcon = false, children }) => {\n    const detailMessage = details || (healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).message;\n    return (React.createElement(\"div\", { className: classNames('co-status-card__health-item', className) },\n        state === HealthState.LOADING ? (React.createElement(\"div\", { className: \"skeleton-health\" })) : (!noIcon && React.createElement(HealthItemIcon, { state: state })),\n        React.createElement(\"div\", null,\n            React.createElement(\"span\", { className: \"co-dashboard-text--small co-status-card__health-item-text\" }, React.Children.toArray(children).length && state !== HealthState.LOADING ? (React.createElement(DashboardCardPopupLink, { linkTitle: title, popupTitle: popupTitle, className: \"co-status-card__popup\" }, children)) : (title)),\n            state !== HealthState.LOADING && detailMessage && (React.createElement(\"div\", { className: \"co-dashboard-text--small co-status-card__health-item-text co-status-card__health-item-subtitle\" }, detailMessage)))));\n});\nexport default HealthItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/HealthItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/HealthItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,sBAAsB,EAAE,MAAM,qCAAqC,CAAC;AAC7E,OAAO,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAE3D,MAAM,cAAc,GAAkC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACnE,6BAAK,SAAS,EAAC,mBAAmB,IAC/B,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CACxE,CACP,CAAC;AAEF,MAAM,UAAU,GAA8B,KAAK,CAAC,IAAI,CACtD,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,GAAG,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC7E,MAAM,aAAa,GACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;IAC5F,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,6BAA6B,EAAE,SAAS,CAAC;QACjE,KAAK,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAC/B,6BAAK,SAAS,EAAC,iBAAiB,GAAG,CACpC,CAAC,CAAC,CAAC,CACF,CAAC,MAAM,IAAI,oBAAC,cAAc,IAAC,KAAK,EAAE,KAAK,GAAI,CAC5C;QACD;YACE,8BAAM,SAAS,EAAC,2DAA2D,IACxE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,KAAK,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAC1E,oBAAC,sBAAsB,IACrB,SAAS,EAAE,KAAK,EAChB,UAAU,EAAE,UAAU,EACtB,SAAS,EAAC,uBAAuB,IAEhC,QAAQ,CACc,CAC1B,CAAC,CAAC,CAAC,CACF,KAAK,CACN,CACI;YACN,KAAK,KAAK,WAAW,CAAC,OAAO,IAAI,aAAa,IAAI,CACjD,6BAAK,SAAS,EAAC,gGAAgG,IAC5G,aAAa,CACV,CACP,CACG,CACF,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { DashboardCardPopupLink } from '../dashboard-card/DashboardCardLink';\nimport { HealthState, healthStateMapping } from './states';\n\nconst HealthItemIcon: React.FC<HealthItemIconProps> = ({ state }) => (\n  <div className=\"co-dashboard-icon\">\n    {(healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).icon}\n  </div>\n);\n\nconst HealthItem: React.FC<HealthItemProps> = React.memo(\n  ({ className, state, title, details, popupTitle, noIcon = false, children }) => {\n    const detailMessage =\n      details || (healthStateMapping[state] || healthStateMapping[HealthState.UNKNOWN]).message;\n    return (\n      <div className={classNames('co-status-card__health-item', className)}>\n        {state === HealthState.LOADING ? (\n          <div className=\"skeleton-health\" />\n        ) : (\n          !noIcon && <HealthItemIcon state={state} />\n        )}\n        <div>\n          <span className=\"co-dashboard-text--small co-status-card__health-item-text\">\n            {React.Children.toArray(children).length && state !== HealthState.LOADING ? (\n              <DashboardCardPopupLink\n                linkTitle={title}\n                popupTitle={popupTitle}\n                className=\"co-status-card__popup\"\n              >\n                {children}\n              </DashboardCardPopupLink>\n            ) : (\n              title\n            )}\n          </span>\n          {state !== HealthState.LOADING && detailMessage && (\n            <div className=\"co-dashboard-text--small co-status-card__health-item-text co-status-card__health-item-subtitle\">\n              {detailMessage}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default HealthItem;\n\ntype HealthItemProps = {\n  title: string;\n  className?: string;\n  details?: string;\n  state?: HealthState;\n  popupTitle?: string;\n  noIcon?: boolean;\n};\n\ntype HealthItemIconProps = {\n  state?: HealthState;\n};\n"]}]}