{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/index.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/index.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status, SuccessStatus } from '@console/shared';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { MultiListPage, ListPage, DetailsPage, Table, TableRow, TableData, } from '@console/internal/components/factory';\nimport { Kebab, LabelList, LoadingBox, MsgBox, ResourceKebab, ResourceSummary, SectionHeading, StatusBox, Timestamp, navFactory, } from '@console/internal/components/utils';\nimport { connectToModel, connectToPlural } from '@console/internal/kinds';\nimport { apiGroupForReference, apiVersionForReference, kindForReference, modelFor, referenceFor, referenceForModel, } from '@console/internal/module/k8s';\nimport { deleteModal } from '@console/internal/components/modals';\nimport * as plugins from '@console/internal/plugins';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { isInternalObject, getInternalAPIReferences, getInternalObjects } from '../../utils';\nimport { StatusDescriptor } from '../descriptors/status';\nimport { SpecDescriptor } from '../descriptors/spec';\nimport { StatusCapability } from '../descriptors/types';\nimport { Resources } from '../k8s-resource';\nimport { referenceForProvidedAPI } from '../index';\nimport { OperandLink } from './operand-link';\nimport { connectToFlags } from '@console/internal/reducers/features';\nimport ErrorAlert from '@console/shared/src/components/alerts/error';\nconst csvName = () => window.location.pathname\n    .split('/')\n    .find((part, i, allParts) => allParts[i - 1] === referenceForModel(ClusterServiceVersionModel) ||\n    allParts[i - 1] === ClusterServiceVersionModel.plural);\nconst getActions = (ref, flags) => {\n    const actions = plugins.registry\n        .getClusterServiceVersionActions()\n        .filter((action) => plugins.registry.isExtensionInUse(action, flags) &&\n        action.properties.kind === kindForReference(ref) &&\n        apiGroupForReference(ref) === action.properties.apiGroup);\n    const pluginActions = actions.map((action) => (kind, ocsObj) => ({\n        label: action.properties.label,\n        callback: action.properties.callback(kind, ocsObj),\n    }));\n    return [\n        ...pluginActions,\n        (kind, obj) => {\n            const reference = referenceFor(obj);\n            const href = kind.namespaced\n                ? `/k8s/ns/${obj.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csvName()}/${reference}/${obj.metadata.name}/yaml`\n                : `/k8s/cluster/${reference}/${obj.metadata.name}/yaml`;\n            return {\n                label: `Edit ${kind.label}`,\n                href,\n                accessReview: {\n                    group: kind.apiGroup,\n                    resource: kind.plural,\n                    name: obj.metadata.name,\n                    namespace: obj.metadata.namespace,\n                    verb: 'update',\n                },\n            };\n        },\n        (kind, obj) => ({\n            label: `Delete ${kind.label}`,\n            callback: () => deleteModal({\n                kind,\n                resource: obj,\n                namespace: obj.metadata.namespace,\n                redirectTo: `/k8s/ns/${obj.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csvName()}/${referenceFor(obj)}`,\n            }),\n            accessReview: {\n                group: kind.apiGroup,\n                resource: kind.plural,\n                name: obj.metadata.name,\n                namespace: obj.metadata.namespace,\n                verb: 'delete',\n            },\n        }),\n    ];\n};\nconst tableColumnClasses = [\n    '',\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-2xl'),\n    Kebab.columnClass,\n];\nexport const OperandTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Kind',\n            sortField: 'kind',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Status',\n            sortFunc: 'operandStatus',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Last Updated',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nconst getOperandStatus = (obj) => {\n    const { phase, status, state, conditions } = (obj === null || obj === void 0 ? void 0 : obj.status) || {};\n    if (phase && _.isString(phase)) {\n        return {\n            type: 'Phase',\n            value: phase,\n        };\n    }\n    if (status && _.isString(status)) {\n        return {\n            type: 'Status',\n            value: status,\n        };\n    }\n    if (state && _.isString(state)) {\n        return {\n            type: 'State',\n            value: state,\n        };\n    }\n    const trueConditions = conditions === null || conditions === void 0 ? void 0 : conditions.filter((c) => c.status === 'True');\n    if (trueConditions === null || trueConditions === void 0 ? void 0 : trueConditions.length) {\n        const types = trueConditions.map((c) => c.type);\n        return {\n            type: types.length === 1 ? 'Condition' : 'Conditions',\n            value: types.join(', '),\n        };\n    }\n    return null;\n};\nexport const OperandStatus = ({ operand }) => {\n    const status = getOperandStatus(operand);\n    if (!status) {\n        return React.createElement(React.Fragment, null, \"-\");\n    }\n    const { type, value } = status;\n    return (React.createElement(\"span\", { className: \"co-icon-and-text\" },\n        type,\n        \":\\u00A0\",\n        value === 'Running' ? React.createElement(SuccessStatus, { title: value }) : React.createElement(Status, { status: value })));\n};\nconst getOperandStatusText = (operand) => {\n    const status = getOperandStatus(operand);\n    return status ? `${status.type}: ${status.value}` : '';\n};\nexport const OperandTableRow = ({ obj, index, rowKey, style, flags, }) => {\n    const actions = getActions(referenceFor(obj), flags);\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: rowKey, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(OperandLink, { obj: obj })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word'), \"data-test-operand-kind\": obj.kind }, obj.kind),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(OperandStatus, { operand: obj })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(LabelList, { kind: obj.kind, labels: obj.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: actions, kind: referenceFor(obj), resource: obj }))));\n};\n// eslint-disable-next-line no-underscore-dangle\nexport const OperandList_ = (props) => {\n    const { flags } = props;\n    const Row = React.useCallback((rowArgs) => (React.createElement(OperandTableRow, { obj: rowArgs.obj, index: rowArgs.index, rowKey: rowArgs.key, style: rowArgs.style, flags: flags !== null && flags !== void 0 ? flags : null })), [flags]);\n    const ensureKind = (data) => data.map((obj) => {\n        if (obj.apiVersion && obj.kind) {\n            return obj;\n        }\n        const reference = props.kinds[0];\n        return Object.assign({ apiVersion: apiVersionForReference(reference), kind: kindForReference(reference) }, obj);\n    });\n    const EmptyMsg = () => (React.createElement(MsgBox, { title: \"No Operands Found\", detail: \"Operands are declarative components used to define the behavior of the application.\" }));\n    return (React.createElement(Table, Object.assign({}, props, { customSorts: {\n            operandStatus: getOperandStatusText,\n        }, data: ensureKind(props.data), EmptyMsg: EmptyMsg, \"aria-label\": \"Operands\", Header: OperandTableHeader, Row: Row, virtualize: true })));\n};\nexport const OperandList = connectToFlags(...plugins.registry.getGatingFlagNames([plugins.isClusterServiceVersionAction]))(OperandList_);\nconst inFlightStateToProps = ({ k8s }) => ({\n    inFlight: k8s.getIn(['RESOURCES', 'inFlight']),\n});\nexport const ProvidedAPIsPage = connect(inFlightStateToProps)((props) => {\n    const { obj } = props;\n    const { owned = [] } = obj.spec.customresourcedefinitions;\n    const internalObjects = getInternalObjects(obj);\n    const internalAPIs = getInternalAPIReferences(obj);\n    const firehoseResources = owned.reduce((resources, desc) => {\n        const reference = referenceForProvidedAPI(desc);\n        const model = modelFor(reference);\n        return model && !internalAPIs.some((api) => api === reference)\n            ? [\n                ...resources,\n                {\n                    kind: referenceForProvidedAPI(desc),\n                    namespaced: model.namespaced,\n                    prop: desc.kind,\n                },\n            ]\n            : resources;\n    }, []);\n    const EmptyMsg = () => (React.createElement(MsgBox, { title: \"No Provided APIs Defined\", detail: \"This application was not properly installed or configured.\" }));\n    const createLink = (name) => `/k8s/ns/${obj.metadata.namespace}/${ClusterServiceVersionModel.plural}/${obj.metadata.name}/${referenceForProvidedAPI(_.find(owned, { name }))}/~new`;\n    const createProps = owned.length > 1\n        ? {\n            items: owned.reduce((acc, crd) => !isInternalObject(internalObjects, crd.name)\n                ? Object.assign(Object.assign({}, acc), { [crd.name]: crd.displayName }) : acc, {}),\n            createLink,\n        }\n        : { to: owned.length === 1 ? createLink(owned[0].name) : null };\n    const owners = (ownerRefs, items) => ownerRefs.filter(({ uid }) => items.filter(({ metadata }) => metadata.uid === uid).length > 0);\n    const flatten = (resources) => _.flatMap(resources, (resource) => _.map(resource.data, (item) => item)).filter(({ kind, metadata }, i, allResources) => owned.filter((item) => item.kind === kind).length > 0 ||\n        owners(metadata.ownerReferences || [], allResources).length > 0);\n    const rowFilters = [\n        {\n            filterGroupName: 'Resource Kind',\n            type: 'clusterserviceversion-resource-kind',\n            reducer: ({ kind }) => kind,\n            items: firehoseResources.map(({ kind }) => ({\n                id: kindForReference(kind),\n                title: kindForReference(kind),\n            })),\n        },\n    ];\n    if (props.inFlight) {\n        return null;\n    }\n    return firehoseResources.length > 0 ? (React.createElement(MultiListPage, Object.assign({}, props, { ListComponent: OperandList, filterLabel: \"Resources by name\", resources: firehoseResources, namespace: obj.metadata.namespace, canCreate: owned.length > 0, createProps: createProps, createButtonText: owned.length > 1 ? 'Create New' : `Create ${owned[0].displayName}`, flatten: flatten, rowFilters: firehoseResources.length > 1 ? rowFilters : null }))) : (React.createElement(StatusBox, { loaded: true, EmptyMsg: EmptyMsg }));\n});\nexport const ProvidedAPIPage = connectToModel((props) => {\n    const { namespace, kind, kindsInFlight, kindObj, csv } = props;\n    if (!kindObj) {\n        return kindsInFlight ? (React.createElement(LoadingBox, null)) : (React.createElement(ErrorPage404, { message: `The server doesn't have a resource type ${kindForReference(kind)}. Try refreshing the page if it was recently added.` }));\n    }\n    const to = `/k8s/ns/${csv.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csv.metadata.name}/${kind}/~new`;\n    return (React.createElement(ListPage, { kind: kind, ListComponent: OperandList, canCreate: _.get(kindObj, 'verbs', []).some((v) => v === 'create'), createProps: { to }, namespace: kindObj.namespaced ? namespace : null }));\n});\nexport const OperandDetails = connectToModel((props) => {\n    // TODO(alecmerdler): Use additional `x-descriptor` to specify if should be considered main?\n    const isMainDescriptor = (descriptor) => {\n        return (descriptor['x-descriptors'] || []).some((type) => {\n            switch (type) {\n                case StatusCapability.podStatuses:\n                    return true;\n                default:\n                    return false;\n            }\n        });\n    };\n    const blockValue = (descriptor, block) => !_.isEmpty(descriptor) ? _.get(block, descriptor.path, descriptor.value) : undefined;\n    const { kind, metadata, spec, status } = props.obj;\n    // Find the matching CRD spec for the kind of this resource in the CSV.\n    const ownedDefinitions = _.get(props.clusterServiceVersion, 'spec.customresourcedefinitions.owned', []);\n    const reqDefinitions = _.get(props.clusterServiceVersion, 'spec.customresourcedefinitions.required', []);\n    const thisDefinition = _.find(ownedDefinitions.concat(reqDefinitions), (def) => def.name.split('.')[0] === props.kindObj.plural);\n    const statusDescriptors = _.get(thisDefinition, 'statusDescriptors', []).filter(\n    // exclude Conditions since they are included in their own section\n    (descriptor) => descriptor.path !== 'conditions');\n    const specDescriptors = _.get(thisDefinition, 'specDescriptors', []);\n    const currentStatus = _.find(statusDescriptors, { displayName: 'Status' });\n    const primaryDescriptors = statusDescriptors.filter((descriptor) => isMainDescriptor(descriptor));\n    const header = (React.createElement(\"h2\", { className: \"co-section-heading\" },\n        (thisDefinition === null || thisDefinition === void 0 ? void 0 : thisDefinition.displayName) || kind,\n        \" Overview\"));\n    const primaryDescriptor = primaryDescriptors.map((statusDescriptor) => {\n        return (React.createElement(\"div\", { key: statusDescriptor.displayName, className: \"col-sm-6\" },\n            React.createElement(StatusDescriptor, { descriptor: statusDescriptor, value: blockValue(statusDescriptor, status), obj: props.obj, model: props.kindObj })));\n    });\n    const [errorMessage, setErrorMessage] = React.useState(null);\n    const handleError = (errorMsg) => setErrorMessage(errorMsg);\n    const details = (React.createElement(\"div\", { className: \"co-operand-details__section co-operand-details__section--info\" },\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-sm-6\" },\n                React.createElement(ResourceSummary, { resource: props.obj })),\n            currentStatus && (React.createElement(\"div\", { className: \"col-sm-6\", key: currentStatus.path },\n                React.createElement(StatusDescriptor, { namespace: metadata.namespace, obj: props.obj, model: props.kindObj, descriptor: currentStatus, value: blockValue(currentStatus, status) }))),\n            specDescriptors.map((specDescriptor) => (React.createElement(\"div\", { key: specDescriptor.path, className: \"col-sm-6\" },\n                React.createElement(SpecDescriptor, { namespace: metadata.namespace, obj: props.obj, model: props.kindObj, value: blockValue(specDescriptor, spec), descriptor: specDescriptor, onHandleError: handleError })))),\n            statusDescriptors\n                .filter(function (descriptor) {\n                return !isMainDescriptor(descriptor) && descriptor.displayName !== 'Status';\n            })\n                .map((statusDescriptor) => {\n                const statusValue = blockValue(statusDescriptor, status);\n                return (React.createElement(\"div\", { className: \"col-sm-6\", key: statusDescriptor.path },\n                    React.createElement(StatusDescriptor, { namespace: metadata.namespace, obj: props.obj, model: props.kindObj, descriptor: statusDescriptor, value: statusValue })));\n            }))));\n    return (React.createElement(\"div\", { className: \"co-operand-details co-m-pane\" },\n        _.isEmpty(primaryDescriptors) ? (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            errorMessage && React.createElement(ErrorAlert, { message: errorMessage }),\n            header,\n            details)) : (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                header,\n                React.createElement(\"div\", { className: \"row\" }, primaryDescriptor)),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" }, details))),\n        _.isArray(status === null || status === void 0 ? void 0 : status.conditions) && (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: status.conditions })))));\n});\nconst ResourcesTab = (resourceProps) => (React.createElement(Resources, Object.assign({}, resourceProps, { clusterServiceVersion: resourceProps.csv })));\nexport const OperandDetailsPage = compose(connectToFlags(...plugins.registry.getGatingFlagNames([plugins.isClusterServiceVersionAction])), connectToPlural)((props) => (React.createElement(DetailsPage, { match: props.match, name: props.match.params.name, kind: props.modelRef, namespace: props.match.params.ns, resources: [\n        {\n            kind: referenceForModel(ClusterServiceVersionModel),\n            name: props.match.params.appName,\n            namespace: props.match.params.ns,\n            isList: false,\n            prop: 'csv',\n        },\n    ], menuActions: getActions(props.modelRef, props.flags), breadcrumbsFor: () => [\n        {\n            name: 'Installed Operators',\n            path: `/k8s/ns/${props.match.params.ns}/${ClusterServiceVersionModel.plural}`,\n        },\n        {\n            name: props.match.params.appName,\n            path: props.match.url.slice(0, props.match.url.lastIndexOf('/')),\n        },\n        { name: `${kindForReference(props.modelRef)} Details`, path: `${props.match.url}` },\n    ], pages: [\n        navFactory.details((detailsProps) => (React.createElement(OperandDetails, Object.assign({}, detailsProps, { clusterServiceVersion: detailsProps.csv, appName: props.match.params.appName })))),\n        navFactory.editYaml(),\n        {\n            name: 'Resources',\n            href: 'resources',\n            component: ResourcesTab,\n        },\n    ] })));\n// TODO(alecmerdler): Find Webpack loader/plugin to add `displayName` to React components automagically\nOperandList.displayName = 'OperandList';\nOperandList_.displayName = 'OperandList';\nOperandDetails.displayName = 'OperandDetails';\nOperandList.displayName = 'OperandList';\nProvidedAPIsPage.displayName = 'ProvidedAPIsPage';\nOperandDetailsPage.displayName = 'OperandDetailsPage';\nOperandTableRow.displayName = 'OperandTableRow';\nOperandTableHeader.displayName = 'OperandTableHeader';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/index.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { match } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status, SuccessStatus } from '@console/shared';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport {\n  MultiListPage,\n  ListPage,\n  DetailsPage,\n  Table,\n  TableRow,\n  TableData,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  LoadingBox,\n  MsgBox,\n  ResourceKebab,\n  ResourceSummary,\n  SectionHeading,\n  StatusBox,\n  Timestamp,\n  navFactory,\n} from '@console/internal/components/utils';\nimport { connectToModel, connectToPlural } from '@console/internal/kinds';\nimport {\n  GroupVersionKind,\n  K8sKind,\n  K8sResourceCondition,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  OwnerReference,\n  apiGroupForReference,\n  apiVersionForReference,\n  kindForReference,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { deleteModal } from '@console/internal/components/modals';\nimport { RootState } from '@console/internal/redux';\nimport * as plugins from '@console/internal/plugins';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { ClusterServiceVersionKind } from '../../types';\nimport { isInternalObject, getInternalAPIReferences, getInternalObjects } from '../../utils';\nimport { StatusDescriptor } from '../descriptors/status';\nimport { SpecDescriptor } from '../descriptors/spec';\nimport { StatusCapability, Descriptor } from '../descriptors/types';\nimport { Resources } from '../k8s-resource';\nimport { referenceForProvidedAPI } from '../index';\nimport { OperandLink } from './operand-link';\nimport { FlagsObject, connectToFlags, WithFlagsProps } from '@console/internal/reducers/features';\nimport ErrorAlert from '@console/shared/src/components/alerts/error';\n\nconst csvName = () =>\n  window.location.pathname\n    .split('/')\n    .find(\n      (part, i, allParts) =>\n        allParts[i - 1] === referenceForModel(ClusterServiceVersionModel) ||\n        allParts[i - 1] === ClusterServiceVersionModel.plural,\n    );\n\nconst getActions = (ref: K8sResourceKindReference, flags: FlagsObject) => {\n  const actions = plugins.registry\n    .getClusterServiceVersionActions()\n    .filter(\n      (action) =>\n        plugins.registry.isExtensionInUse(action, flags) &&\n        action.properties.kind === kindForReference(ref) &&\n        apiGroupForReference(ref) === action.properties.apiGroup,\n    );\n  const pluginActions = actions.map((action) => (kind, ocsObj) => ({\n    label: action.properties.label,\n    callback: action.properties.callback(kind, ocsObj),\n  }));\n  return [\n    ...pluginActions,\n    (kind, obj) => {\n      const reference = referenceFor(obj);\n      const href = kind.namespaced\n        ? `/k8s/ns/${obj.metadata.namespace}/${\n            ClusterServiceVersionModel.plural\n          }/${csvName()}/${reference}/${obj.metadata.name}/yaml`\n        : `/k8s/cluster/${reference}/${obj.metadata.name}/yaml`;\n      return {\n        label: `Edit ${kind.label}`,\n        href,\n        accessReview: {\n          group: kind.apiGroup,\n          resource: kind.plural,\n          name: obj.metadata.name,\n          namespace: obj.metadata.namespace,\n          verb: 'update',\n        },\n      };\n    },\n\n    (kind, obj) => ({\n      label: `Delete ${kind.label}`,\n      callback: () =>\n        deleteModal({\n          kind,\n          resource: obj,\n          namespace: obj.metadata.namespace,\n          redirectTo: `/k8s/ns/${obj.metadata.namespace}/${\n            ClusterServiceVersionModel.plural\n          }/${csvName()}/${referenceFor(obj)}`,\n        }),\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace: obj.metadata.namespace,\n        verb: 'delete',\n      },\n    }),\n  ] as KebabAction[];\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl'),\n  Kebab.columnClass,\n];\n\nexport const OperandTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Kind',\n      sortField: 'kind',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'operandStatus',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Last Updated',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\n\ntype OperandStatusType = {\n  type: string;\n  value: string;\n};\n\nconst getOperandStatus = (obj: K8sResourceKind): OperandStatusType => {\n  const { phase, status, state, conditions } = obj?.status || {};\n\n  if (phase && _.isString(phase)) {\n    return {\n      type: 'Phase',\n      value: phase,\n    };\n  }\n\n  if (status && _.isString(status)) {\n    return {\n      type: 'Status',\n      value: status,\n    };\n  }\n\n  if (state && _.isString(state)) {\n    return {\n      type: 'State',\n      value: state,\n    };\n  }\n\n  const trueConditions = conditions?.filter((c: K8sResourceCondition) => c.status === 'True');\n  if (trueConditions?.length) {\n    const types = trueConditions.map((c: K8sResourceCondition) => c.type);\n    return {\n      type: types.length === 1 ? 'Condition' : 'Conditions',\n      value: types.join(', '),\n    };\n  }\n\n  return null;\n};\n\nexport const OperandStatus: React.FunctionComponent<OperandStatusProps> = ({ operand }) => {\n  const status: OperandStatusType = getOperandStatus(operand);\n  if (!status) {\n    return <>-</>;\n  }\n\n  const { type, value } = status;\n  return (\n    <span className=\"co-icon-and-text\">\n      {type}:&nbsp;\n      {value === 'Running' ? <SuccessStatus title={value} /> : <Status status={value} />}\n    </span>\n  );\n};\n\nconst getOperandStatusText = (operand: K8sResourceKind) => {\n  const status = getOperandStatus(operand);\n  return status ? `${status.type}: ${status.value}` : '';\n};\n\nexport const OperandTableRow: React.FC<OperandTableRowProps> = ({\n  obj,\n  index,\n  rowKey,\n  style,\n  flags,\n}) => {\n  const actions = getActions(referenceFor(obj), flags);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={rowKey} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <OperandLink obj={obj} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        data-test-operand-kind={obj.kind}\n      >\n        {obj.kind}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <OperandStatus operand={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={obj.kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={actions} kind={referenceFor(obj)} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\n// eslint-disable-next-line no-underscore-dangle\nexport const OperandList_: React.FC<OperandListProps & WithFlagsProps> = (props) => {\n  const { flags } = props;\n  const Row = React.useCallback(\n    (rowArgs: RowFunctionArgs<K8sResourceKind>) => (\n      <OperandTableRow\n        obj={rowArgs.obj}\n        index={rowArgs.index}\n        rowKey={rowArgs.key}\n        style={rowArgs.style}\n        flags={flags ?? null}\n      />\n    ),\n    [flags],\n  );\n  const ensureKind = (data: K8sResourceKind[]) =>\n    data.map((obj) => {\n      if (obj.apiVersion && obj.kind) {\n        return obj;\n      }\n      const reference = props.kinds[0];\n      return {\n        apiVersion: apiVersionForReference(reference),\n        kind: kindForReference(reference),\n        ...obj,\n      };\n    });\n  const EmptyMsg = () => (\n    <MsgBox\n      title=\"No Operands Found\"\n      detail=\"Operands are declarative components used to define the behavior of the application.\"\n    />\n  );\n\n  return (\n    <Table\n      {...props}\n      customSorts={{\n        operandStatus: getOperandStatusText,\n      }}\n      data={ensureKind(props.data)}\n      EmptyMsg={EmptyMsg}\n      aria-label=\"Operands\"\n      Header={OperandTableHeader}\n      Row={Row}\n      virtualize\n    />\n  );\n};\n\nexport const OperandList = connectToFlags(\n  ...plugins.registry.getGatingFlagNames([plugins.isClusterServiceVersionAction]),\n)(OperandList_);\n\nconst inFlightStateToProps = ({ k8s }: RootState) => ({\n  inFlight: k8s.getIn(['RESOURCES', 'inFlight']),\n});\n\nexport const ProvidedAPIsPage = connect(inFlightStateToProps)((props: ProvidedAPIsPageProps) => {\n  const { obj } = props;\n  const { owned = [] } = obj.spec.customresourcedefinitions;\n  const internalObjects = getInternalObjects(obj);\n  const internalAPIs = getInternalAPIReferences(obj);\n  const firehoseResources = owned.reduce((resources, desc) => {\n    const reference = referenceForProvidedAPI(desc);\n    const model = modelFor(reference);\n    return model && !internalAPIs.some((api) => api === reference)\n      ? [\n          ...resources,\n          {\n            kind: referenceForProvidedAPI(desc),\n            namespaced: model.namespaced,\n            prop: desc.kind,\n          },\n        ]\n      : resources;\n  }, []);\n\n  const EmptyMsg = () => (\n    <MsgBox\n      title=\"No Provided APIs Defined\"\n      detail=\"This application was not properly installed or configured.\"\n    />\n  );\n  const createLink = (name: string) =>\n    `/k8s/ns/${obj.metadata.namespace}/${ClusterServiceVersionModel.plural}/${\n      obj.metadata.name\n    }/${referenceForProvidedAPI(_.find(owned, { name }))}/~new`;\n  const createProps =\n    owned.length > 1\n      ? {\n          items: owned.reduce(\n            (acc, crd) =>\n              !isInternalObject(internalObjects, crd.name)\n                ? { ...acc, [crd.name]: crd.displayName }\n                : acc,\n            {},\n          ),\n          createLink,\n        }\n      : { to: owned.length === 1 ? createLink(owned[0].name) : null };\n\n  const owners = (ownerRefs: OwnerReference[], items: K8sResourceKind[]) =>\n    ownerRefs.filter(({ uid }) => items.filter(({ metadata }) => metadata.uid === uid).length > 0);\n  const flatten = (resources: { [kind: string]: { data: K8sResourceKind[] } }) =>\n    _.flatMap(resources, (resource) => _.map(resource.data, (item) => item)).filter(\n      ({ kind, metadata }, i, allResources) =>\n        owned.filter((item) => item.kind === kind).length > 0 ||\n        owners(metadata.ownerReferences || [], allResources).length > 0,\n    );\n\n  const rowFilters = [\n    {\n      filterGroupName: 'Resource Kind',\n      type: 'clusterserviceversion-resource-kind',\n      reducer: ({ kind }) => kind,\n      items: firehoseResources.map(({ kind }) => ({\n        id: kindForReference(kind),\n        title: kindForReference(kind),\n      })),\n    },\n  ];\n\n  if (props.inFlight) {\n    return null;\n  }\n\n  return firehoseResources.length > 0 ? (\n    <MultiListPage\n      {...props}\n      ListComponent={OperandList}\n      filterLabel=\"Resources by name\"\n      resources={firehoseResources}\n      namespace={obj.metadata.namespace}\n      canCreate={owned.length > 0}\n      createProps={createProps}\n      createButtonText={owned.length > 1 ? 'Create New' : `Create ${owned[0].displayName}`}\n      flatten={flatten}\n      rowFilters={firehoseResources.length > 1 ? rowFilters : null}\n    />\n  ) : (\n    <StatusBox loaded EmptyMsg={EmptyMsg} />\n  );\n});\n\nexport const ProvidedAPIPage = connectToModel((props: ProvidedAPIPageProps) => {\n  const { namespace, kind, kindsInFlight, kindObj, csv } = props;\n\n  if (!kindObj) {\n    return kindsInFlight ? (\n      <LoadingBox />\n    ) : (\n      <ErrorPage404\n        message={`The server doesn't have a resource type ${kindForReference(\n          kind,\n        )}. Try refreshing the page if it was recently added.`}\n      />\n    );\n  }\n\n  const to = `/k8s/ns/${csv.metadata.namespace}/${ClusterServiceVersionModel.plural}/${csv.metadata.name}/${kind}/~new`;\n  return (\n    <ListPage\n      kind={kind}\n      ListComponent={OperandList}\n      canCreate={_.get(kindObj, 'verbs', [] as string[]).some((v) => v === 'create')}\n      createProps={{ to }}\n      namespace={kindObj.namespaced ? namespace : null}\n    />\n  );\n});\n\nexport const OperandDetails = connectToModel((props: OperandDetailsProps) => {\n  // TODO(alecmerdler): Use additional `x-descriptor` to specify if should be considered main?\n  const isMainDescriptor = (descriptor: Descriptor) => {\n    return ((descriptor['x-descriptors'] as StatusCapability[]) || []).some((type) => {\n      switch (type) {\n        case StatusCapability.podStatuses:\n          return true;\n        default:\n          return false;\n      }\n    });\n  };\n\n  const blockValue = (descriptor: Descriptor, block: { [key: string]: any }) =>\n    !_.isEmpty(descriptor) ? _.get(block, descriptor.path, descriptor.value) : undefined;\n\n  const { kind, metadata, spec, status } = props.obj;\n\n  // Find the matching CRD spec for the kind of this resource in the CSV.\n  const ownedDefinitions = _.get(\n    props.clusterServiceVersion,\n    'spec.customresourcedefinitions.owned',\n    [],\n  );\n  const reqDefinitions = _.get(\n    props.clusterServiceVersion,\n    'spec.customresourcedefinitions.required',\n    [],\n  );\n  const thisDefinition = _.find(\n    ownedDefinitions.concat(reqDefinitions),\n    (def) => def.name.split('.')[0] === props.kindObj.plural,\n  );\n  const statusDescriptors = _.get<Descriptor[]>(thisDefinition, 'statusDescriptors', []).filter(\n    // exclude Conditions since they are included in their own section\n    (descriptor) => descriptor.path !== 'conditions',\n  );\n  const specDescriptors = _.get<Descriptor[]>(thisDefinition, 'specDescriptors', []);\n  const currentStatus = _.find(statusDescriptors, { displayName: 'Status' });\n  const primaryDescriptors = statusDescriptors.filter((descriptor) => isMainDescriptor(descriptor));\n\n  const header = (\n    <h2 className=\"co-section-heading\">{thisDefinition?.displayName || kind} Overview</h2>\n  );\n\n  const primaryDescriptor = primaryDescriptors.map((statusDescriptor: Descriptor) => {\n    return (\n      <div key={statusDescriptor.displayName} className=\"col-sm-6\">\n        <StatusDescriptor\n          descriptor={statusDescriptor}\n          value={blockValue(statusDescriptor, status)}\n          obj={props.obj}\n          model={props.kindObj}\n        />\n      </div>\n    );\n  });\n\n  const [errorMessage, setErrorMessage] = React.useState(null);\n  const handleError = (errorMsg: string) => setErrorMessage(errorMsg);\n\n  const details = (\n    <div className=\"co-operand-details__section co-operand-details__section--info\">\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={props.obj} />\n        </div>\n        {currentStatus && (\n          <div className=\"col-sm-6\" key={currentStatus.path}>\n            <StatusDescriptor\n              namespace={metadata.namespace}\n              obj={props.obj}\n              model={props.kindObj}\n              descriptor={currentStatus}\n              value={blockValue(currentStatus, status)}\n            />\n          </div>\n        )}\n\n        {specDescriptors.map((specDescriptor: Descriptor) => (\n          <div key={specDescriptor.path} className=\"col-sm-6\">\n            <SpecDescriptor\n              namespace={metadata.namespace}\n              obj={props.obj}\n              model={props.kindObj}\n              value={blockValue(specDescriptor, spec)}\n              descriptor={specDescriptor}\n              onHandleError={handleError}\n            />\n          </div>\n        ))}\n\n        {statusDescriptors\n          .filter(function(descriptor) {\n            return !isMainDescriptor(descriptor) && descriptor.displayName !== 'Status';\n          })\n          .map((statusDescriptor: Descriptor) => {\n            const statusValue = blockValue(statusDescriptor, status);\n            return (\n              <div className=\"col-sm-6\" key={statusDescriptor.path}>\n                <StatusDescriptor\n                  namespace={metadata.namespace}\n                  obj={props.obj}\n                  model={props.kindObj}\n                  descriptor={statusDescriptor}\n                  value={statusValue}\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"co-operand-details co-m-pane\">\n      {_.isEmpty(primaryDescriptors) ? (\n        <div className=\"co-m-pane__body\">\n          {errorMessage && <ErrorAlert message={errorMessage} />}\n          {header}\n          {details}\n        </div>\n      ) : (\n        <>\n          <div className=\"co-m-pane__body\">\n            {header}\n            <div className=\"row\">{primaryDescriptor}</div>\n          </div>\n          <div className=\"co-m-pane__body\">{details}</div>\n        </>\n      )}\n      {_.isArray(status?.conditions) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text=\"Conditions\" />\n          <Conditions conditions={status.conditions} />\n        </div>\n      )}\n    </div>\n  );\n});\n\nconst ResourcesTab = (resourceProps) => (\n  <Resources {...resourceProps} clusterServiceVersion={resourceProps.csv} />\n);\n\nexport const OperandDetailsPage = compose(\n  connectToFlags<OperandDetailsPageProps & WithFlagsProps>(\n    ...plugins.registry.getGatingFlagNames([plugins.isClusterServiceVersionAction]),\n  ),\n  connectToPlural,\n)((props: OperandDetailsPageProps & WithFlagsProps) => (\n  <DetailsPage\n    match={props.match}\n    name={props.match.params.name}\n    kind={props.modelRef}\n    namespace={props.match.params.ns}\n    resources={[\n      {\n        kind: referenceForModel(ClusterServiceVersionModel),\n        name: props.match.params.appName,\n        namespace: props.match.params.ns,\n        isList: false,\n        prop: 'csv',\n      },\n    ]}\n    menuActions={getActions(props.modelRef, props.flags)}\n    breadcrumbsFor={() => [\n      {\n        name: 'Installed Operators',\n        path: `/k8s/ns/${props.match.params.ns}/${ClusterServiceVersionModel.plural}`,\n      },\n      {\n        name: props.match.params.appName,\n        path: props.match.url.slice(0, props.match.url.lastIndexOf('/')),\n      },\n      { name: `${kindForReference(props.modelRef)} Details`, path: `${props.match.url}` },\n    ]}\n    pages={[\n      navFactory.details((detailsProps) => (\n        <OperandDetails\n          {...detailsProps}\n          clusterServiceVersion={detailsProps.csv}\n          appName={props.match.params.appName}\n        />\n      )),\n      navFactory.editYaml(),\n      {\n        name: 'Resources',\n        href: 'resources',\n        component: ResourcesTab,\n      },\n    ]}\n  />\n));\n\nexport type OperandListProps = {\n  loaded: boolean;\n  kinds?: GroupVersionKind[];\n  data: K8sResourceKind[];\n  filters: { [key: string]: any };\n  reduxID?: string;\n  reduxIDs?: string[];\n  rowSplitter?: any;\n  staticFilters?: any;\n  flags?: FlagsObject;\n};\n\nexport type OperandStatusProps = {\n  operand: K8sResourceKind;\n};\n\nexport type OperandHeaderProps = {\n  data: K8sResourceKind[];\n};\n\nexport type OperandRowProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ProvidedAPIsPageProps = {\n  obj: ClusterServiceVersionKind;\n  inFlight?: boolean;\n};\n\nexport type ProvidedAPIPageProps = {\n  csv: ClusterServiceVersionKind;\n  kindsInFlight?: boolean;\n  kind: GroupVersionKind;\n  kindObj: K8sKind;\n  namespace: string;\n};\n\nexport type OperandDetailsProps = {\n  obj: K8sResourceKind;\n  appName: string;\n  kindObj: K8sKind;\n  clusterServiceVersion: ClusterServiceVersionKind;\n};\n\nexport type OperandDetailsPageProps = {\n  modelRef: GroupVersionKind;\n  match: match<{\n    name: string;\n    ns: string;\n    appName: string;\n  }>;\n};\n\nexport type OperandesourceDetailsProps = {\n  csv?: { data: ClusterServiceVersionKind };\n  kind: GroupVersionKind;\n  name: string;\n  namespace: string;\n  match: match<{ appName: string }>;\n};\n\nexport type OperandTableRowProps = {\n  obj: K8sResourceKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  flags?: FlagsObject;\n};\n\n// TODO(alecmerdler): Find Webpack loader/plugin to add `displayName` to React components automagically\nOperandList.displayName = 'OperandList';\nOperandList_.displayName = 'OperandList';\nOperandDetails.displayName = 'OperandDetails';\nOperandList.displayName = 'OperandList';\nProvidedAPIsPage.displayName = 'ProvidedAPIsPage';\nOperandDetailsPage.displayName = 'OperandDetailsPage';\nOperandTableRow.displayName = 'OperandTableRow';\nOperandTableHeader.displayName = 'OperandTableHeader';\n"]}]}