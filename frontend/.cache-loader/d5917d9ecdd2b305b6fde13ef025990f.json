{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/perspectives.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/perspectives.ts","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const isPerspective = (e) => {\n    return e.type === 'Perspective';\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/perspectives.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-plugin-sdk/src/typings/perspectives.ts"],"names":[],"mappings":"AA6BA,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,CAAY,EAAoB,EAAE;IAC9D,OAAO,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC;AAClC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FlagsObject } from '@console/internal/reducers/features';\nimport { Extension } from './base';\n\nnamespace ExtensionProperties {\n  export interface Perspective {\n    /** The perspective identifier. */\n    id: string;\n    /** The perspective display name. */\n    name: string;\n    /** The perspective display icon. */\n    icon: React.ReactElement;\n    /** Whether the perspective is the default. There can only be one default. */\n    default?: boolean;\n    /** Default pinned resources on the nav */\n    defaultPins?: string[];\n    /** The function to get perspective landing page URL. */\n    getLandingPageURL: GetLandingPage;\n    /** The function to get perspective landing page URL for k8s. */\n    getK8sLandingPageURL: GetLandingPage;\n    /** The function to get redirect URL for import flow. */\n    getImportRedirectURL: (project: string) => string;\n  }\n}\n\nexport interface Perspective extends Extension<ExtensionProperties.Perspective> {\n  type: 'Perspective';\n}\n\nexport const isPerspective = (e: Extension): e is Perspective => {\n  return e.type === 'Perspective';\n};\n\nexport type GetLandingPage = (flags?: FlagsObject) => string;\n"]}]}