{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/activity-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/activity-card.tsx","mtime":1616735742360},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport { EventModel, PersistentVolumeClaimModel } from '@console/internal/models';\nimport ActivityBody, { RecentEventsBody, OngoingActivityBody, } from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { getNamespace } from '@console/shared';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { referenceForModel } from '@console/internal/module/k8s/k8s';\nimport { SubscriptionModel } from '@console/operator-lifecycle-manager';\nimport { CEPH_STORAGE_NAMESPACE, OCS_OPERATOR } from '../../../../constants/index';\nimport { DATA_RESILIENCY_QUERY, StorageDashboardQuery } from '../../../../constants/queries';\nimport { getResiliencyProgress } from '../../../../utils';\nimport { OCSServiceModel } from '../../../../models';\nimport { isClusterExpandActivity, ClusterExpandActivity } from './cluster-expand-activity';\nimport { isOCSUpgradeActivity, OCSUpgradeActivity } from './ocs-upgrade-activity';\nimport './activity-card.scss';\nconst eventsResource = { isList: true, kind: EventModel.kind, prop: 'events' };\nconst subscriptionResource = {\n    isList: true,\n    kind: referenceForModel(SubscriptionModel),\n    namespaced: false,\n    prop: 'subs',\n};\nconst storageClusterResource = {\n    isList: true,\n    kind: referenceForModel(OCSServiceModel),\n    namespaced: false,\n    prop: 'storage-cluster',\n};\nexport const getOCSSubscription = (subscriptions) => {\n    const itemsData = subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.data;\n    return _.find(itemsData, (item) => { var _a; return ((_a = item === null || item === void 0 ? void 0 : item.spec) === null || _a === void 0 ? void 0 : _a.name) === OCS_OPERATOR; });\n};\nconst ocsEventNamespaceKindFilter = (event) => {\n    var _a;\n    const eventKind = (_a = event === null || event === void 0 ? void 0 : event.involvedObject) === null || _a === void 0 ? void 0 : _a.kind;\n    const eventNamespace = getNamespace(event);\n    return eventNamespace === CEPH_STORAGE_NAMESPACE || eventKind === PersistentVolumeClaimModel.kind;\n};\nconst RecentEvent = withDashboardResources(({ watchK8sResource, stopWatchK8sResource, resources }) => {\n    React.useEffect(() => {\n        watchK8sResource(eventsResource);\n        return () => {\n            stopWatchK8sResource(eventsResource);\n        };\n    }, [watchK8sResource, stopWatchK8sResource]);\n    return (React.createElement(RecentEventsBody, { events: resources.events, filter: ocsEventNamespaceKindFilter }));\n});\nconst OngoingActivity = withDashboardResources(({ watchPrometheus, stopWatchPrometheusQuery, watchK8sResource, stopWatchK8sResource, resources, prometheusResults, }) => {\n    var _a, _b;\n    React.useEffect(() => {\n        watchK8sResource(subscriptionResource);\n        watchK8sResource(storageClusterResource);\n        watchPrometheus(DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS]);\n        return () => {\n            stopWatchK8sResource(subscriptionResource);\n            stopWatchK8sResource(storageClusterResource);\n            stopWatchPrometheusQuery(DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS]);\n        };\n    }, [watchPrometheus, stopWatchPrometheusQuery, watchK8sResource, stopWatchK8sResource]);\n    const progressResponse = prometheusResults.getIn([\n        DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS],\n        'data',\n    ]);\n    const progressError = prometheusResults.getIn([\n        DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS],\n        'loadError',\n    ]);\n    const subscriptions = resources === null || resources === void 0 ? void 0 : resources.subs;\n    const subscriptionsLoaded = subscriptions === null || subscriptions === void 0 ? void 0 : subscriptions.loaded;\n    const ocsSubscription = getOCSSubscription(subscriptions);\n    const storageClusters = resources === null || resources === void 0 ? void 0 : resources['storage-cluster'];\n    const storageClustersLoaded = storageClusters === null || storageClusters === void 0 ? void 0 : storageClusters.loaded;\n    const ocsCluster = (_a = storageClusters === null || storageClusters === void 0 ? void 0 : storageClusters.data) === null || _a === void 0 ? void 0 : _a[0];\n    const prometheusActivities = [];\n    const resourceActivities = [];\n    if (getResiliencyProgress(progressResponse) < 1) {\n        prometheusActivities.push({\n            results: progressResponse,\n            loader: () => import('./data-resiliency-activity').then((m) => m.DataResiliency),\n        });\n    }\n    if (isOCSUpgradeActivity(ocsSubscription)) {\n        resourceActivities.push({\n            resource: ocsSubscription,\n            timestamp: (_b = ocsSubscription === null || ocsSubscription === void 0 ? void 0 : ocsSubscription.status) === null || _b === void 0 ? void 0 : _b.lastUpdated,\n            loader: () => Promise.resolve(OCSUpgradeActivity),\n        });\n    }\n    if (isClusterExpandActivity(ocsCluster)) {\n        resourceActivities.push({\n            resource: ocsCluster,\n            timestamp: null,\n            loader: () => Promise.resolve(ClusterExpandActivity),\n        });\n    }\n    return (React.createElement(OngoingActivityBody, { loaded: (progressResponse || progressError) && subscriptionsLoaded && storageClustersLoaded, resourceActivities: resourceActivities, prometheusActivities: prometheusActivities }));\n});\nexport const ActivityCard = React.memo(() => (React.createElement(DashboardCard, { gradient: true },\n    React.createElement(DashboardCardHeader, null,\n        React.createElement(DashboardCardTitle, null, \"Activity\")),\n    React.createElement(DashboardCardBody, null,\n        React.createElement(ActivityBody, { className: \"ceph-activity-card__body\" },\n            React.createElement(OngoingActivity, null),\n            React.createElement(RecentEvent, null))))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/activity-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/activity-card/activity-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport { EventKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { FirehoseResource, FirehoseResult } from '@console/internal/components/utils';\nimport { EventModel, PersistentVolumeClaimModel } from '@console/internal/models';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getNamespace } from '@console/shared';\nimport {\n  DashboardItemProps,\n  withDashboardResources,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { referenceForModel } from '@console/internal/module/k8s/k8s';\nimport { SubscriptionModel, SubscriptionKind } from '@console/operator-lifecycle-manager';\nimport { CEPH_STORAGE_NAMESPACE, OCS_OPERATOR } from '../../../../constants/index';\nimport { DATA_RESILIENCY_QUERY, StorageDashboardQuery } from '../../../../constants/queries';\nimport { getResiliencyProgress } from '../../../../utils';\nimport { OCSServiceModel } from '../../../../models';\nimport { isClusterExpandActivity, ClusterExpandActivity } from './cluster-expand-activity';\nimport { isOCSUpgradeActivity, OCSUpgradeActivity } from './ocs-upgrade-activity';\nimport './activity-card.scss';\n\nconst eventsResource: FirehoseResource = { isList: true, kind: EventModel.kind, prop: 'events' };\nconst subscriptionResource: FirehoseResource = {\n  isList: true,\n  kind: referenceForModel(SubscriptionModel),\n  namespaced: false,\n  prop: 'subs',\n};\n\nconst storageClusterResource: FirehoseResource = {\n  isList: true,\n  kind: referenceForModel(OCSServiceModel),\n  namespaced: false,\n  prop: 'storage-cluster',\n};\n\nexport const getOCSSubscription = (subscriptions: FirehoseResult): SubscriptionKind => {\n  const itemsData: K8sResourceKind[] = subscriptions?.data;\n  return _.find(itemsData, (item) => item?.spec?.name === OCS_OPERATOR) as SubscriptionKind;\n};\n\nconst ocsEventNamespaceKindFilter = (event: EventKind): boolean => {\n  const eventKind = event?.involvedObject?.kind;\n  const eventNamespace = getNamespace(event);\n  return eventNamespace === CEPH_STORAGE_NAMESPACE || eventKind === PersistentVolumeClaimModel.kind;\n};\n\nconst RecentEvent = withDashboardResources(\n  ({ watchK8sResource, stopWatchK8sResource, resources }: DashboardItemProps) => {\n    React.useEffect(() => {\n      watchK8sResource(eventsResource);\n      return () => {\n        stopWatchK8sResource(eventsResource);\n      };\n    }, [watchK8sResource, stopWatchK8sResource]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        filter={ocsEventNamespaceKindFilter}\n      />\n    );\n  },\n);\n\nconst OngoingActivity = withDashboardResources(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    prometheusResults,\n  }) => {\n    React.useEffect(() => {\n      watchK8sResource(subscriptionResource);\n      watchK8sResource(storageClusterResource);\n      watchPrometheus(DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS]);\n      return () => {\n        stopWatchK8sResource(subscriptionResource);\n        stopWatchK8sResource(storageClusterResource);\n        stopWatchPrometheusQuery(DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS]);\n      };\n    }, [watchPrometheus, stopWatchPrometheusQuery, watchK8sResource, stopWatchK8sResource]);\n\n    const progressResponse = prometheusResults.getIn([\n      DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS],\n      'data',\n    ]) as PrometheusResponse;\n    const progressError = prometheusResults.getIn([\n      DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS],\n      'loadError',\n    ]);\n\n    const subscriptions = resources?.subs as FirehoseResult;\n    const subscriptionsLoaded = subscriptions?.loaded;\n    const ocsSubscription: SubscriptionKind = getOCSSubscription(subscriptions);\n\n    const storageClusters = resources?.['storage-cluster'] as FirehoseResult;\n    const storageClustersLoaded = storageClusters?.loaded;\n    const ocsCluster: K8sResourceKind = storageClusters?.data?.[0];\n\n    const prometheusActivities = [];\n    const resourceActivities = [];\n\n    if (getResiliencyProgress(progressResponse) < 1) {\n      prometheusActivities.push({\n        results: progressResponse,\n        loader: () => import('./data-resiliency-activity').then((m) => m.DataResiliency),\n      });\n    }\n\n    if (isOCSUpgradeActivity(ocsSubscription)) {\n      resourceActivities.push({\n        resource: ocsSubscription,\n        timestamp: ocsSubscription?.status?.lastUpdated,\n        loader: () => Promise.resolve(OCSUpgradeActivity),\n      });\n    }\n\n    if (isClusterExpandActivity(ocsCluster)) {\n      resourceActivities.push({\n        resource: ocsCluster,\n        timestamp: null,\n        loader: () => Promise.resolve(ClusterExpandActivity),\n      });\n    }\n\n    return (\n      <OngoingActivityBody\n        loaded={(progressResponse || progressError) && subscriptionsLoaded && storageClustersLoaded}\n        resourceActivities={resourceActivities}\n        prometheusActivities={prometheusActivities}\n      />\n    );\n  },\n);\n\nexport const ActivityCard: React.FC = React.memo(() => (\n  <DashboardCard gradient>\n    <DashboardCardHeader>\n      <DashboardCardTitle>Activity</DashboardCardTitle>\n    </DashboardCardHeader>\n    <DashboardCardBody>\n      <ActivityBody className=\"ceph-activity-card__body\">\n        <OngoingActivity />\n        <RecentEvent />\n      </ActivityBody>\n    </DashboardCardBody>\n  </DashboardCard>\n));\n"]}]}