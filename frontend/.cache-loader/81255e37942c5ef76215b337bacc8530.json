{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/object-bucket-claim-page/secret.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/object-bucket-claim-page/secret.tsx","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Base64 } from 'js-base64';\nimport { SecretValue } from '@console/internal/components/configmap-and-secret-data';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { getName, getNamespace } from '@console/shared';\nimport { SectionHeading, EmptyBox } from '@console/internal/components/utils';\nimport { Button } from '@patternfly/react-core';\nimport { EyeSlashIcon, EyeIcon } from '@patternfly/react-icons';\nexport const GetSecret = ({ obj }) => {\n    const [reveal, setReveal] = React.useState(false);\n    const [secretData, setSecretData] = React.useState([]);\n    const name = getName(obj);\n    const namespace = getNamespace(obj);\n    React.useEffect(() => {\n        const secret = k8sGet(SecretModel, name, namespace);\n        const configMap = k8sGet(ConfigMapModel, name, namespace);\n        Promise.all([secret, configMap])\n            .then((data) => {\n            const bucketName = _.get(data[1], 'data.BUCKET_NAME');\n            const endpoint = `${_.get(data[1], 'data.BUCKET_HOST')}:${_.get(data[1], 'data.BUCKET_PORT')}`;\n            const accessKey = Base64.decode(_.get(data[0], 'data.AWS_ACCESS_KEY_ID'));\n            const secretKey = Base64.decode(_.get(data[0], 'data.AWS_SECRET_ACCESS_KEY'));\n            const secretValues = [\n                { field: 'Endpoint', value: endpoint },\n                { field: 'Bucket Name', value: bucketName },\n                { field: 'Access Key', value: accessKey },\n                { field: 'Secret Key', value: secretKey },\n            ];\n            setSecretData(secretValues);\n        })\n            .catch(() => undefined);\n    }, [name, namespace]);\n    const dl = secretData.length\n        ? secretData.reduce((acc, datum) => {\n            const { field, value } = datum;\n            acc.push(React.createElement(\"dt\", { key: `${field}-k` }, field));\n            acc.push(React.createElement(\"dd\", { key: `${field}-v` },\n                React.createElement(SecretValue, { value: value, reveal: reveal, encoded: false })));\n            return acc;\n        }, [])\n        : [];\n    return dl.length ? (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(SectionHeading, { text: \"Object Bucket Claim Data\" }, secretData.length ? (React.createElement(Button, { type: \"button\", onClick: () => setReveal(!reveal), variant: \"link\", className: \"pf-m-link--align-right\" }, reveal ? (React.createElement(React.Fragment, null,\n            React.createElement(EyeSlashIcon, { className: \"co-icon-space-r\" }),\n            \"Hide Values\")) : (React.createElement(React.Fragment, null,\n            React.createElement(EyeIcon, { className: \"co-icon-space-r\" }),\n            \"Reveal Values\")))) : null),\n        dl.length ? React.createElement(\"dl\", { className: \"secret-data\" }, dl) : React.createElement(EmptyBox, { label: \"Data\" }))) : null;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/object-bucket-claim-page/secret.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/object-bucket-claim-page/secret.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Base64 } from 'js-base64';\nimport { SecretValue } from '@console/internal/components/configmap-and-secret-data';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getName, getNamespace } from '@console/shared';\nimport { SectionHeading, EmptyBox } from '@console/internal/components/utils';\nimport { Button } from '@patternfly/react-core';\nimport { EyeSlashIcon, EyeIcon } from '@patternfly/react-icons';\n\nexport const GetSecret: React.FC<GetSecretProps> = ({ obj }) => {\n  const [reveal, setReveal] = React.useState(false);\n  const [secretData, setSecretData] = React.useState([]);\n\n  const name = getName(obj);\n  const namespace = getNamespace(obj);\n\n  React.useEffect(() => {\n    const secret = k8sGet(SecretModel, name, namespace);\n    const configMap = k8sGet(ConfigMapModel, name, namespace);\n    Promise.all([secret, configMap])\n      .then((data) => {\n        const bucketName = _.get(data[1], 'data.BUCKET_NAME');\n        const endpoint = `${_.get(data[1], 'data.BUCKET_HOST')}:${_.get(\n          data[1],\n          'data.BUCKET_PORT',\n        )}`;\n        const accessKey = Base64.decode(_.get(data[0], 'data.AWS_ACCESS_KEY_ID'));\n        const secretKey = Base64.decode(_.get(data[0], 'data.AWS_SECRET_ACCESS_KEY'));\n        const secretValues = [\n          { field: 'Endpoint', value: endpoint },\n          { field: 'Bucket Name', value: bucketName },\n          { field: 'Access Key', value: accessKey },\n          { field: 'Secret Key', value: secretKey },\n        ];\n        setSecretData(secretValues);\n      })\n      .catch(() => undefined);\n  }, [name, namespace]);\n\n  const dl = secretData.length\n    ? secretData.reduce((acc, datum) => {\n        const { field, value } = datum;\n        acc.push(<dt key={`${field}-k`}>{field}</dt>);\n        acc.push(\n          <dd key={`${field}-v`}>\n            <SecretValue value={value} reveal={reveal} encoded={false} />\n          </dd>,\n        );\n        return acc;\n      }, [])\n    : [];\n\n  return dl.length ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text=\"Object Bucket Claim Data\">\n        {secretData.length ? (\n          <Button\n            type=\"button\"\n            onClick={() => setReveal(!reveal)}\n            variant=\"link\"\n            className=\"pf-m-link--align-right\"\n          >\n            {reveal ? (\n              <>\n                <EyeSlashIcon className=\"co-icon-space-r\" />\n                Hide Values\n              </>\n            ) : (\n              <>\n                <EyeIcon className=\"co-icon-space-r\" />\n                Reveal Values\n              </>\n            )}\n          </Button>\n        ) : null}\n      </SectionHeading>\n      {dl.length ? <dl className=\"secret-data\">{dl}</dl> : <EmptyBox label=\"Data\" />}\n    </div>\n  ) : null;\n};\n\ntype GetSecretProps = {\n  obj: K8sResourceKind;\n};\n"]}]}