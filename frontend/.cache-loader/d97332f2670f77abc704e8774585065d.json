{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/hypercloud/auth.js","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/hypercloud/auth.js","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const getAccessToken = function () {\n    return sessionStorage.getItem('accessToken');\n};\nexport const getId = function () {\n    return sessionStorage.getItem('id');\n};\nexport const getUserGroup = function () {\n    let usergroups = getParsedAccessToken().group;\n    let result = '';\n    if ((usergroups === null || usergroups === void 0 ? void 0 : usergroups.length) > 0) {\n        result = '&' + usergroups.map(cur => `userGroup=${cur}`).join('&');\n    }\n    return result;\n};\nexport const setAccessToken = function (at) {\n    sessionStorage.setItem('accessToken', at);\n    return;\n};\nexport const setId = function (id) {\n    sessionStorage.setItem('id', id);\n    return;\n};\n// 로그아웃 시 사용\nexport const resetLoginState = function () {\n    sessionStorage.clear();\n    return;\n};\nexport const getParsedAccessToken = function () {\n    const token = getAccessToken();\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64)\n        .split('')\n        .map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    })\n        .join(''));\n    return JSON.parse(jsonPayload);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/hypercloud/auth.js","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/hypercloud/auth.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,OAAO,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG;IACnB,OAAO,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,IAAI,UAAU,GAAG,oBAAoB,EAAE,CAAC,KAAK,CAAC;IAC9C,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,IAAG,CAAC,EAAE;QAC1B,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpE;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,UAAS,EAAE;IACvC,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;IAC1C,OAAO;AACT,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG,UAAS,EAAE;IAC9B,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACjC,OAAO;AACT,CAAC,CAAC;AAEF,YAAY;AACZ,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,cAAc,CAAC,KAAK,EAAE,CAAC;IACvB,OAAO;AACT,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,MAAM,KAAK,GAAG,cAAc,EAAE,CAAC;IAC/B,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC7D,IAAI,WAAW,GAAG,kBAAkB,CAClC,IAAI,CAAC,MAAM,CAAC;SACT,KAAK,CAAC,EAAE,CAAC;SACT,GAAG,CAAC,UAAS,CAAC;QACb,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CACZ,CAAC;IAEF,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACjC,CAAC,CAAC","sourcesContent":["export const getAccessToken = function() {\n  return sessionStorage.getItem('accessToken');\n};\n\nexport const getId = function() {\n  return sessionStorage.getItem('id');\n};\n\nexport const getUserGroup = function() {\n  let usergroups = getParsedAccessToken().group;\n  let result = '';\n  if (usergroups?.length > 0) {\n    result = '&' + usergroups.map(cur => `userGroup=${cur}`).join('&');\n  }\n  return result;\n};\n\nexport const setAccessToken = function(at) {\n  sessionStorage.setItem('accessToken', at);\n  return;\n};\n\nexport const setId = function(id) {\n  sessionStorage.setItem('id', id);\n  return;\n};\n\n// 로그아웃 시 사용\nexport const resetLoginState = function() {\n  sessionStorage.clear();\n  return;\n};\n\nexport const getParsedAccessToken = function() {\n  const token = getAccessToken();\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split('')\n      .map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n\n  return JSON.parse(jsonPayload);\n};\n"]}]}