{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/search.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/search.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Accordion, AccordionContent, AccordionItem, AccordionToggle, DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarItem } from '@patternfly/react-core';\nimport { getBadgeFromType } from '@console/shared';\nimport { getActivePerspective, getPinnedResources } from '../../reducers/ui';\nimport { setPinnedResources } from '../../actions/ui';\nimport { connectToModel } from '../../kinds';\nimport { DefaultPage } from '../default-resource';\nimport { requirementFromString } from '../../module/k8s/selector-requirement';\nimport { ResourceListDropdown } from '../resource-dropdown';\nimport { resourceListPages } from '../resource-pages';\nimport { withStartGuide } from '../start-guide';\nimport { split, selectorFromString } from '../../module/k8s/selector';\nimport { kindForReference, modelFor, referenceForModel } from '../../module/k8s';\nimport { LoadingBox, MsgBox, PageHeading, ResourceIcon, setQueryArgument, AsyncComponent } from '../utils';\nimport { SearchFilterDropdown } from '../search-filter-dropdown';\nimport { useTranslation } from 'react-i18next';\nconst ResourceList = connectToModel(({ kindObj, mock, namespace, selector, nameFilter }) => {\n    if (!kindObj) {\n        return React.createElement(LoadingBox, null);\n    }\n    const componentLoader = resourceListPages.get(referenceForModel(kindObj), () => Promise.resolve(DefaultPage));\n    const ns = kindObj.namespaced ? namespace : undefined;\n    return React.createElement(AsyncComponent, { loader: componentLoader, namespace: ns, selector: selector, nameFilter: nameFilter, kind: kindObj.crd ? referenceForModel(kindObj) : kindObj.kind, showTitle: false, hideTextFilter: true, autoFocus: false, mock: mock, badge: getBadgeFromType(kindObj.badge), hideToolbar: true });\n});\nconst SearchPage_ = props => {\n    const { t } = useTranslation();\n    const [selectedItems, setSelectedItems] = React.useState(new Set([]));\n    const [collapsedKinds, setCollapsedKinds] = React.useState(new Set([]));\n    const [labelFilter, setLabelFilter] = React.useState([]);\n    const [labelFilterInput, setLabelFilterInput] = React.useState('');\n    const [typeaheadNameFilter, setTypeaheadNameFilter] = React.useState('');\n    const { namespace, noProjectsAvailable } = props;\n    // Set state variables from the URL\n    React.useEffect(() => {\n        let kind, q, name;\n        if (window.location.search) {\n            const sp = new URLSearchParams(window.location.search);\n            kind = sp.get('kind');\n            q = sp.get('q');\n            name = sp.get('name');\n        }\n        // Ensure that the \"kind\" route parameter is a valid resource kind ID\n        kind = kind || '';\n        if (kind !== '') {\n            setSelectedItems(new Set(kind.split(',')));\n        }\n        const tags = split(q || '');\n        const validTags = _.reject(tags, tag => requirementFromString(tag) === undefined);\n        setLabelFilter(validTags);\n        setTypeaheadNameFilter(name || '');\n    }, []);\n    const updateSelectedItems = (selection) => {\n        const updateItems = selectedItems;\n        updateItems.has(selection) ? updateItems.delete(selection) : updateItems.add(selection);\n        setSelectedItems(updateItems);\n        setQueryArgument('kind', [...updateItems].join(','));\n    };\n    const updateNewItems = (filter, { key }) => {\n        const updateItems = selectedItems;\n        updateItems.has(key) ? updateItems.delete(key) : updateItems.add(key);\n        setSelectedItems(updateItems);\n        setQueryArgument('kind', [...updateItems].join(','));\n    };\n    const clearSelectedItems = () => {\n        setSelectedItems(new Set([]));\n        setQueryArgument('kind', '');\n    };\n    const clearNameFilter = () => {\n        setTypeaheadNameFilter('');\n        setQueryArgument('name', '');\n    };\n    const clearLabelFilter = () => {\n        setLabelFilter([]);\n        setQueryArgument('q', '');\n    };\n    const clearAll = () => {\n        clearSelectedItems();\n        clearNameFilter();\n        clearLabelFilter();\n    };\n    const toggleKindExpanded = (kindView) => {\n        const newCollasped = new Set(collapsedKinds);\n        newCollasped.has(kindView) ? newCollasped.delete(kindView) : newCollasped.add(kindView);\n        setCollapsedKinds(newCollasped);\n    };\n    const updateNameFilter = (value) => {\n        setTypeaheadNameFilter(value);\n        setQueryArgument('name', value);\n    };\n    const updateLabelFilter = (value, endOfString) => {\n        setLabelFilterInput(value);\n        if (requirementFromString(value) !== undefined && endOfString) {\n            const updatedLabels = _.uniq([...labelFilter, value]);\n            setLabelFilter(updatedLabels);\n            setQueryArgument('q', updatedLabels.join(','));\n            setLabelFilterInput('');\n        }\n    };\n    const updateSearchFilter = (type, value, endOfString) => {\n        type === t('COMMON:MSG_COMMON_SEARCH_FILTER_2') ? updateLabelFilter(value, endOfString) : updateNameFilter(value);\n    };\n    const removeLabelFilter = (filter, value) => {\n        const newLabels = labelFilter.filter((keepItem) => keepItem !== value);\n        setLabelFilter(newLabels);\n        setQueryArgument('q', newLabels.join(','));\n    };\n    const getToggleText = (item) => {\n        const model = modelFor(item);\n        // API discovery happens asynchronously. Avoid runtime errors if the model hasn't loaded.\n        if (!model) {\n            return '';\n        }\n        const { labelPlural, apiVersion, apiGroup } = model;\n        return (React.createElement(\"span\", { className: \"co-search-group__accordion-label\" },\n            labelPlural,\n            ' ',\n            React.createElement(\"span\", { className: \"text-muted show small\" },\n                apiGroup || 'core',\n                \"/\",\n                apiVersion)));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, t('COMMON:MSG_LNB_MENU_4'))),\n        React.createElement(PageHeading, { detail: true, title: t('COMMON:MSG_LNB_MENU_4') },\n            React.createElement(DataToolbar, { id: \"search-toolbar\", clearAllFilters: clearAll, clearFiltersButtonText: t('COMMON:MSG_COMMON_FILTER_11') },\n                React.createElement(DataToolbarContent, null,\n                    React.createElement(DataToolbarItem, null,\n                        React.createElement(DataToolbarFilter, { deleteChipGroup: clearSelectedItems, chips: [...selectedItems].map(resourceKind => ({\n                                key: resourceKind,\n                                node: (React.createElement(React.Fragment, null,\n                                    React.createElement(ResourceIcon, { kind: resourceKind }),\n                                    kindForReference(resourceKind))),\n                            })), deleteChip: updateNewItems, categoryName: t('COMMON:MSG_COMMON_FILTER_1') },\n                            React.createElement(ResourceListDropdown, { selected: [...selectedItems], onChange: updateSelectedItems, type: \"multiple\" }))),\n                    React.createElement(DataToolbarItem, { className: \"co-search-group__filter\" },\n                        React.createElement(DataToolbarFilter, { deleteChipGroup: clearLabelFilter, chips: [...labelFilter], deleteChip: removeLabelFilter, categoryName: t('COMMON:MSG_COMMON_SEARCH_FILTER_2') },\n                            React.createElement(DataToolbarFilter, { chips: typeaheadNameFilter.length > 0 ? [typeaheadNameFilter] : [], deleteChip: clearNameFilter, categoryName: t('COMMON:MSG_COMMON_SEARCH_FILTER_1') },\n                                React.createElement(SearchFilterDropdown, { onChange: updateSearchFilter, nameFilterInput: typeaheadNameFilter, labelFilterInput: labelFilterInput }))))))),\n        React.createElement(\"div\", { className: \"co-search\" },\n            React.createElement(Accordion, { className: \"co-search__accordion\", asDefinitionList: false, noBoxShadow: true }, [...selectedItems].map(resource => {\n                const isCollapsed = collapsedKinds.has(resource);\n                return (React.createElement(AccordionItem, { key: resource },\n                    React.createElement(AccordionToggle, { className: \"co-search-group__accordion-toggle\", onClick: () => toggleKindExpanded(resource), isExpanded: !isCollapsed, id: `${resource}-toggle` }, getToggleText(resource)),\n                    React.createElement(AccordionContent, { isHidden: isCollapsed }, !isCollapsed && React.createElement(ResourceList, { kind: resource, selector: selectorFromString(labelFilter.join(',')), nameFilter: typeaheadNameFilter, namespace: namespace, mock: noProjectsAvailable, key: resource }))));\n            })),\n            selectedItems.size === 0 && React.createElement(MsgBox, { title: t('SINGLE:MSG_SEARCH_MAIN_NORESOURCES_1'), detail: React.createElement(\"p\", null, t('SINGLE:MSG_SEARCH_MAIN_NORESOURCES_2')) }))));\n};\nconst mapStateToProps = (state) => ({\n    perspective: getActivePerspective(state),\n    pinnedResources: getPinnedResources(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n    onPinnedResourcesChange: (searches) => {\n        dispatch(setPinnedResources(searches));\n    },\n});\nexport const SearchPage = connect(mapStateToProps, mapDispatchToProps)(withStartGuide(SearchPage_));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/search.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/search.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect, Dispatch } from 'react-redux';\nimport { Accordion, AccordionContent, AccordionItem, AccordionToggle, DataToolbar, DataToolbarChip, DataToolbarContent, DataToolbarFilter, DataToolbarItem } from '@patternfly/react-core';\nimport { getBadgeFromType } from '@console/shared';\nimport { RootState } from '../../redux';\nimport { getActivePerspective, getPinnedResources } from '../../reducers/ui';\nimport { setPinnedResources } from '../../actions/ui';\nimport { connectToModel } from '../../kinds';\nimport { DefaultPage } from '../default-resource';\nimport { requirementFromString } from '../../module/k8s/selector-requirement';\nimport { ResourceListDropdown } from '../resource-dropdown';\nimport { resourceListPages } from '../resource-pages';\nimport { withStartGuide } from '../start-guide';\nimport { split, selectorFromString } from '../../module/k8s/selector';\nimport { kindForReference, modelFor, referenceForModel } from '../../module/k8s';\nimport { LoadingBox, MsgBox, PageHeading, ResourceIcon, setQueryArgument, AsyncComponent } from '../utils';\nimport { SearchFilterDropdown } from '../search-filter-dropdown';\nimport { useTranslation } from 'react-i18next';\n\nconst ResourceList = connectToModel(({ kindObj, mock, namespace, selector, nameFilter }) => {\n  if (!kindObj) {\n    return <LoadingBox />;\n  }\n\n  const componentLoader = resourceListPages.get(referenceForModel(kindObj), () => Promise.resolve(DefaultPage));\n  const ns = kindObj.namespaced ? namespace : undefined;\n\n  return <AsyncComponent loader={componentLoader} namespace={ns} selector={selector} nameFilter={nameFilter} kind={kindObj.crd ? referenceForModel(kindObj) : kindObj.kind} showTitle={false} hideTextFilter autoFocus={false} mock={mock} badge={getBadgeFromType(kindObj.badge)} hideToolbar />;\n});\n\ninterface StateProps {\n  perspective: string;\n  pinnedResources: string[];\n}\n\ninterface DispatchProps {\n  onPinnedResourcesChange: (searches: string[]) => void;\n}\n\nconst SearchPage_: React.FC<SearchProps & StateProps & DispatchProps> = props => {\n  const { t } = useTranslation();\n  const [selectedItems, setSelectedItems] = React.useState(new Set<string>([]));\n  const [collapsedKinds, setCollapsedKinds] = React.useState(new Set<string>([]));\n  const [labelFilter, setLabelFilter] = React.useState([]);\n  const [labelFilterInput, setLabelFilterInput] = React.useState('');\n  const [typeaheadNameFilter, setTypeaheadNameFilter] = React.useState('');\n  const { namespace, noProjectsAvailable } = props;\n\n  // Set state variables from the URL\n  React.useEffect(() => {\n    let kind: string, q: string, name: string;\n\n    if (window.location.search) {\n      const sp = new URLSearchParams(window.location.search);\n      kind = sp.get('kind');\n      q = sp.get('q');\n      name = sp.get('name');\n    }\n    // Ensure that the \"kind\" route parameter is a valid resource kind ID\n    kind = kind || '';\n    if (kind !== '') {\n      setSelectedItems(new Set(kind.split(',')));\n    }\n    const tags = split(q || '');\n    const validTags = _.reject(tags, tag => requirementFromString(tag) === undefined);\n    setLabelFilter(validTags);\n    setTypeaheadNameFilter(name || '');\n  }, []);\n\n  const updateSelectedItems = (selection: string) => {\n    const updateItems = selectedItems;\n    updateItems.has(selection) ? updateItems.delete(selection) : updateItems.add(selection);\n    setSelectedItems(updateItems);\n    setQueryArgument('kind', [...updateItems].join(','));\n  };\n\n  const updateNewItems = (filter: string, { key }: DataToolbarChip) => {\n    const updateItems = selectedItems;\n    updateItems.has(key) ? updateItems.delete(key) : updateItems.add(key);\n    setSelectedItems(updateItems);\n    setQueryArgument('kind', [...updateItems].join(','));\n  };\n\n  const clearSelectedItems = () => {\n    setSelectedItems(new Set([]));\n    setQueryArgument('kind', '');\n  };\n\n  const clearNameFilter = () => {\n    setTypeaheadNameFilter('');\n    setQueryArgument('name', '');\n  };\n\n  const clearLabelFilter = () => {\n    setLabelFilter([]);\n    setQueryArgument('q', '');\n  };\n\n  const clearAll = () => {\n    clearSelectedItems();\n    clearNameFilter();\n    clearLabelFilter();\n  };\n\n  const toggleKindExpanded = (kindView: string) => {\n    const newCollasped = new Set(collapsedKinds);\n    newCollasped.has(kindView) ? newCollasped.delete(kindView) : newCollasped.add(kindView);\n    setCollapsedKinds(newCollasped);\n  };\n\n  const updateNameFilter = (value: string) => {\n    setTypeaheadNameFilter(value);\n    setQueryArgument('name', value);\n  };\n\n  const updateLabelFilter = (value: string, endOfString: boolean) => {\n    setLabelFilterInput(value);\n    if (requirementFromString(value) !== undefined && endOfString) {\n      const updatedLabels = _.uniq([...labelFilter, value]);\n      setLabelFilter(updatedLabels);\n      setQueryArgument('q', updatedLabels.join(','));\n      setLabelFilterInput('');\n    }\n  };\n\n  const updateSearchFilter = (type: string, value: string, endOfString: boolean) => {\n    type === t('COMMON:MSG_COMMON_SEARCH_FILTER_2') ? updateLabelFilter(value, endOfString) : updateNameFilter(value);\n  };\n\n  const removeLabelFilter = (filter: string, value: string) => {\n    const newLabels = labelFilter.filter((keepItem: string) => keepItem !== value);\n    setLabelFilter(newLabels);\n    setQueryArgument('q', newLabels.join(','));\n  };\n\n  const getToggleText = (item: string) => {\n    const model = modelFor(item);\n    // API discovery happens asynchronously. Avoid runtime errors if the model hasn't loaded.\n    if (!model) {\n      return '';\n    }\n    const { labelPlural, apiVersion, apiGroup } = model;\n    return (\n      <span className=\"co-search-group__accordion-label\">\n        {labelPlural}{' '}\n        <span className=\"text-muted show small\">\n          {apiGroup || 'core'}/{apiVersion}\n        </span>\n      </span>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('COMMON:MSG_LNB_MENU_4')}</title>\n      </Helmet>\n      <PageHeading detail={true} title={t('COMMON:MSG_LNB_MENU_4')}>\n        <DataToolbar id=\"search-toolbar\" clearAllFilters={clearAll} clearFiltersButtonText={t('COMMON:MSG_COMMON_FILTER_11')}>\n          <DataToolbarContent>\n            <DataToolbarItem>\n              <DataToolbarFilter\n                deleteChipGroup={clearSelectedItems}\n                chips={[...selectedItems].map(resourceKind => ({\n                  key: resourceKind,\n                  node: (\n                    <>\n                      <ResourceIcon kind={resourceKind} />\n                      {kindForReference(resourceKind)}\n                    </>\n                  ),\n                }))}\n                deleteChip={updateNewItems}\n                categoryName={t('COMMON:MSG_COMMON_FILTER_1')}\n              >\n                <ResourceListDropdown selected={[...selectedItems]} onChange={updateSelectedItems} type=\"multiple\" />\n              </DataToolbarFilter>\n            </DataToolbarItem>\n            <DataToolbarItem className=\"co-search-group__filter\">\n              <DataToolbarFilter deleteChipGroup={clearLabelFilter} chips={[...labelFilter]} deleteChip={removeLabelFilter} categoryName={t('COMMON:MSG_COMMON_SEARCH_FILTER_2')}>\n                <DataToolbarFilter chips={typeaheadNameFilter.length > 0 ? [typeaheadNameFilter] : []} deleteChip={clearNameFilter} categoryName={t('COMMON:MSG_COMMON_SEARCH_FILTER_1')}>\n                  <SearchFilterDropdown onChange={updateSearchFilter} nameFilterInput={typeaheadNameFilter} labelFilterInput={labelFilterInput} />\n                </DataToolbarFilter>\n              </DataToolbarFilter>\n            </DataToolbarItem>\n          </DataToolbarContent>\n        </DataToolbar>\n      </PageHeading>\n      <div className=\"co-search\">\n        <Accordion className=\"co-search__accordion\" asDefinitionList={false} noBoxShadow>\n          {[...selectedItems].map(resource => {\n            const isCollapsed = collapsedKinds.has(resource);\n            return (\n              <AccordionItem key={resource}>\n                <AccordionToggle className=\"co-search-group__accordion-toggle\" onClick={() => toggleKindExpanded(resource)} isExpanded={!isCollapsed} id={`${resource}-toggle`}>\n                  {getToggleText(resource)}\n                </AccordionToggle>\n                <AccordionContent isHidden={isCollapsed}>{!isCollapsed && <ResourceList kind={resource} selector={selectorFromString(labelFilter.join(','))} nameFilter={typeaheadNameFilter} namespace={namespace} mock={noProjectsAvailable} key={resource} />}</AccordionContent>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n        {selectedItems.size === 0 && <MsgBox title={t('SINGLE:MSG_SEARCH_MAIN_NORESOURCES_1')} detail={<p>{t('SINGLE:MSG_SEARCH_MAIN_NORESOURCES_2')}</p>} />}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  perspective: getActivePerspective(state),\n  pinnedResources: getPinnedResources(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onPinnedResourcesChange: (searches: string[]) => {\n    dispatch(setPinnedResources(searches));\n  },\n});\n\nexport const SearchPage = connect(mapStateToProps, mapDispatchToProps)(withStartGuide(SearchPage_));\n\nexport type SearchProps = {\n  location: any;\n  namespace: string;\n  noProjectsAvailable: boolean;\n};\n"]}]}