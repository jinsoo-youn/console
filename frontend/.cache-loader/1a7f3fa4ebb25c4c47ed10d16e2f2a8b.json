{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/status-modal.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/status-modal.jsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { NamespaceClaimModel, ResourceQuotaClaimModel } from '../../../models';\nimport { k8sUpdateApproval } from '../../../module/k8s';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { PromiseComponent } from '../../utils';\nconst STATUS_PATH = '/status/result';\nconst REASON_PATH = '/status/reason';\n// const STATUS_PATH = '/status';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/status';\nclass BaseStatusModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this.successSubmit = () => {\n            this.props.close();\n            // location.reload();\n        };\n        this.onChangeApproval = e => {\n            this.setState({ status: e.target.value });\n        };\n        this.onSelect = (event, selection) => {\n            this.setState({ status: selection, isOptionsOpen: false });\n        };\n        this.onToggle = isOpen => {\n            this.setState({ isOptionsOpen: isOpen });\n        };\n        this.onChangeReason = e => {\n            this.setState({ reason: e.target.value });\n        };\n        this._submit = this._submit.bind(this);\n        this._cancel = props.cancel.bind(this);\n        // let status = _.get(props.resource, props.path.split('/').slice(1));\n        let status = '';\n        // if (status === 'Waiting') {\n        //   status = 'Approved';\n        // }\n        // const reason = _.get(props.resource, props.reasonPath.split('/').slice(1));\n        const reason = '';\n        this.state = Object.assign(this.state, {\n            status,\n            reason,\n            isOptionsOpen: false,\n        });\n        this.options = [\n            { value: 'Approved', disabled: false },\n            { value: 'Rejected', disabled: false },\n        ];\n    }\n    _submit(e) {\n        e.preventDefault();\n        const { kind, path, resource } = this.props;\n        switch (kind.kind) {\n            case ResourceQuotaClaimModel.kind:\n            case NamespaceClaimModel.kind: {\n                const stat = this.state.status === 'Approved' ? 'Success' : 'Reject';\n                const promise = k8sUpdateApproval(kind, resource, 'status', [\n                    { op: 'replace', path: '/status/status', value: stat },\n                    { op: 'replace', path: '/status/reason', value: this.state.reason },\n                ], 'PATCH');\n                this.handlePromise(promise).then(this.successSubmit);\n                break;\n            }\n            default: {\n                // resourceURL\n                const approval = this.state.status === 'Approved' ? 'approve' : 'reject';\n                const promise = k8sUpdateApproval(kind, resource, approval, {\n                    reason: this.state.reason,\n                });\n                this.handlePromise(promise).then(this.successSubmit);\n                break;\n            }\n        }\n    }\n    render() {\n        const { kind, resource, description, message } = this.props;\n        return (React.createElement(\"form\", { onSubmit: this._submit, name: \"form\", className: \"modal-content\" },\n            React.createElement(ModalTitle, null, \"Approval Processing\"),\n            React.createElement(ModalBody, null,\n                React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12\" }, message || '')),\n                React.createElement(\"div\", { className: \"row co-m=-form-row\" },\n                    React.createElement(\"div\", { className: \"col-sm-12 approval-dropdown--short-bottom\" },\n                        React.createElement(Select, { variant: SelectVariant.single, placeholderText: \"Select status\", selections: this.state.status, onSelect: this.onSelect, onToggle: this.onToggle, isExpanded: this.state.isOptionsOpen, isDisabled: false }, this.options.map((option, index) => (React.createElement(SelectOption, { isDisabled: option.disabled, key: index, value: option.value }))))),\n                    React.createElement(\"div\", { className: \"col-sm-12\" },\n                        React.createElement(\"textarea\", { className: \"col-sm-12 pf-c-form-control query-browser__query-input\", style: { height: '100px' }, onChange: this.onChangeReason, value: this.state.reason })),\n                    React.createElement(\"div\", { className: \"col-sm-12\" }, \"Please enter a reason.\"))),\n            React.createElement(ModalSubmitFooter, { errorMessage: this.state.errorMessage, inProgress: this.state.inProgress, submitText: \"Confirm\", cancel: this._cancel })));\n    }\n}\nexport const statusModal = createModalLauncher(props => React.createElement(BaseStatusModal, Object.assign({ path: STATUS_PATH, reasonPath: REASON_PATH }, props)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/status-modal.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/status-modal.jsx"],"names":[],"mappings":"AAGA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAqB,MAAM,qBAAqB,CAAC;AAC3E,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAC7E,OAAO,EAAE,mBAAmB,EAAE,UAAU,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACpG,OAAO,EAAE,gBAAgB,EAA+B,MAAM,aAAa,CAAC;AAE5E,MAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,MAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,iCAAiC;AACjC,MAAM,sBAAsB,GAAG,gCAAgC,CAAC;AAEhE,MAAM,eAAgB,SAAQ,gBAAgB;IAC5C,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAuDf,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,qBAAqB;QACvB,CAAC,CAAC;QAEF,qBAAgB,GAAG,CAAC,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,aAAQ,GAAG,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;QAzEA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,sEAAsE;QACtE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,8BAA8B;QAC9B,yBAAyB;QACzB,IAAI;QACJ,8EAA8E;QAC9E,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;YACrC,MAAM;YACN,MAAM;YACN,aAAa,EAAE,KAAK;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACtC,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;SACvC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,CAAC;QACP,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5C,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,uBAAuB,CAAC,IAAI,CAAC;YAClC,KAAK,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACrE,MAAM,OAAO,GAAG,iBAAiB,CAC/B,IAAI,EACJ,QAAQ,EACR,QAAQ,EACR;oBACE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;oBACtD,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;iBACpE,EACD,OAAO,CACR,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrD,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACP,cAAc;gBACd,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAEzE,MAAM,OAAO,GAAG,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;oBAC1D,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;iBAC1B,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrD,MAAM;aACP;SACF;IACH,CAAC;IAuBD,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5D,OAAO,CACL,8BAAM,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,eAAe;YACjE,oBAAC,UAAU,8BAAiC;YAC5C,oBAAC,SAAS;gBACR,6BAAK,SAAS,EAAC,mBAAmB;oBAChC,6BAAK,SAAS,EAAC,WAAW,IAAE,OAAO,IAAI,EAAE,CAAO,CAC5C;gBACN,6BAAK,SAAS,EAAC,oBAAoB;oBACjC,6BAAK,SAAS,EAAC,2CAA2C;wBAKxD,oBAAC,MAAM,IAAC,OAAO,EAAE,aAAa,CAAC,MAAM,EAAE,eAAe,EAAC,eAAe,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,IAC5M,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CACnC,oBAAC,YAAY,IAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,GAAI,CAC/E,CAAC,CACK,CACL;oBACN,6BAAK,SAAS,EAAC,WAAW;wBACxB,kCAAU,SAAS,EAAC,wDAAwD,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAI,CAChK;oBACN,6BAAK,SAAS,EAAC,WAAW,6BAA6B,CACnD,CACI;YACZ,oBAAC,iBAAiB,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,EAAC,SAAS,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,GAAI,CACrI,CACR,CAAC;IACJ,CAAC;CACF;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,mBAAmB,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAC,eAAe,kBAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,IAAM,KAAK,EAAI,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport { switchPerspective } from 'packages/dev-console/integration-tests/views/dev-perspective.view';\nimport { ValidTabGuard } from 'packages/kubevirt-plugin/src/components/create-vm-wizard/tabs/valid-tab-guard';\nimport * as React from 'react';\nimport { NamespaceClaimModel, ResourceQuotaClaimModel } from '../../../models';\nimport { k8sUpdateApproval, referenceForModel } from '../../../module/k8s';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../../factory/modal';\nimport { PromiseComponent, ResourceIcon, SelectorInput } from '../../utils';\n\nconst STATUS_PATH = '/status/result';\nconst REASON_PATH = '/status/reason';\n// const STATUS_PATH = '/status';\nconst TEMPLATE_SELECTOR_PATH = '/spec/template/metadata/status';\n\nclass BaseStatusModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = props.cancel.bind(this);\n    // let status = _.get(props.resource, props.path.split('/').slice(1));\n    let status = '';\n    // if (status === 'Waiting') {\n    //   status = 'Approved';\n    // }\n    // const reason = _.get(props.resource, props.reasonPath.split('/').slice(1));\n    const reason = '';\n    this.state = Object.assign(this.state, {\n      status,\n      reason,\n      isOptionsOpen: false,\n    });\n    this.options = [\n      { value: 'Approved', disabled: false },\n      { value: 'Rejected', disabled: false },\n    ];\n  }\n\n  _submit(e) {\n    e.preventDefault();\n\n    const { kind, path, resource } = this.props;\n    switch (kind.kind) {\n      case ResourceQuotaClaimModel.kind:\n      case NamespaceClaimModel.kind: {\n        const stat = this.state.status === 'Approved' ? 'Success' : 'Reject';\n        const promise = k8sUpdateApproval(\n          kind,\n          resource,\n          'status',\n          [\n            { op: 'replace', path: '/status/status', value: stat },\n            { op: 'replace', path: '/status/reason', value: this.state.reason },\n          ],\n          'PATCH',\n        );\n        this.handlePromise(promise).then(this.successSubmit);\n        break;\n      }\n      default: {\n        // resourceURL\n        const approval = this.state.status === 'Approved' ? 'approve' : 'reject';\n\n        const promise = k8sUpdateApproval(kind, resource, approval, {\n          reason: this.state.reason,\n        });\n        this.handlePromise(promise).then(this.successSubmit);\n        break;\n      }\n    }\n  }\n\n  successSubmit = () => {\n    this.props.close();\n    // location.reload();\n  };\n\n  onChangeApproval = e => {\n    this.setState({ status: e.target.value });\n  };\n\n  onSelect = (event, selection) => {\n    this.setState({ status: selection, isOptionsOpen: false });\n  };\n\n  onToggle = isOpen => {\n    this.setState({ isOptionsOpen: isOpen });\n  };\n\n  onChangeReason = e => {\n    this.setState({ reason: e.target.value });\n  };\n\n  render() {\n    const { kind, resource, description, message } = this.props;\n\n    return (\n      <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>Approval Processing</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{message || ''}</div>\n          </div>\n          <div className=\"row co-m=-form-row\">\n            <div className=\"col-sm-12 approval-dropdown--short-bottom\">\n              {/* <select className=\"col-sm-12\" value={this.state.status} onChange={this.onChangeApproval}>\n                <option value=\"Approved\">Approved</option>\n                <option value=\"Rejected\">Rejected</option>\n              </select> */}\n              <Select variant={SelectVariant.single} placeholderText=\"Select status\" selections={this.state.status} onSelect={this.onSelect} onToggle={this.onToggle} isExpanded={this.state.isOptionsOpen} isDisabled={false}>\n                {this.options.map((option, index) => (\n                  <SelectOption isDisabled={option.disabled} key={index} value={option.value} />\n                ))}\n              </Select>\n            </div>\n            <div className=\"col-sm-12\">\n              <textarea className=\"col-sm-12 pf-c-form-control query-browser__query-input\" style={{ height: '100px' }} onChange={this.onChangeReason} value={this.state.reason} />\n            </div>\n            <div className=\"col-sm-12\">Please enter a reason.</div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter errorMessage={this.state.errorMessage} inProgress={this.state.inProgress} submitText=\"Confirm\" cancel={this._cancel} />\n      </form>\n    );\n  }\n}\n\nexport const statusModal = createModalLauncher(props => <BaseStatusModal path={STATUS_PATH} reasonPath={REASON_PATH} {...props} />);\n"]}]}