{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/TopologyResourcePanel.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/TopologyResourcePanel.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ResourceOverviewPage } from '@console/internal/components/overview/resource-overview-page';\nimport * as _ from 'lodash';\nimport KnativeResourceOverviewPage from '@console/knative-plugin/src/components/overview/KnativeResourceOverviewPage';\nimport { ModifyApplication } from '../../actions/modify-application';\nconst TopologyResourcePanel = ({ item }) => {\n    const resourceItemToShowOnSideBar = item && item.resources;\n    // adds extra check, custom sidebar for all knative resources excluding deployment\n    const itemKind = _.get(item, 'data.kind', null);\n    if (_.get(item, 'data.isKnativeResource', false) && itemKind && itemKind !== 'Deployment') {\n        return React.createElement(KnativeResourceOverviewPage, { item: item.resources });\n    }\n    let customActions = null;\n    if (!item.operatorBackedService) {\n        customActions = [ModifyApplication];\n    }\n    return (resourceItemToShowOnSideBar && (React.createElement(ResourceOverviewPage, { item: resourceItemToShowOnSideBar, kind: resourceItemToShowOnSideBar.obj.kind, customActions: customActions })));\n};\nexport default TopologyResourcePanel;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/TopologyResourcePanel.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/TopologyResourcePanel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,8DAA8D,CAAC;AACpG,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,2BAA2B,MAAM,6EAA6E,CAAC;AAGtH,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AAMrE,MAAM,qBAAqB,GAAyC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/E,MAAM,2BAA2B,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;IAC3D,kFAAkF;IAClF,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAChD,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,wBAAwB,EAAE,KAAK,CAAC,IAAI,QAAQ,IAAI,QAAQ,KAAK,YAAY,EAAE;QACzF,OAAO,oBAAC,2BAA2B,IAAC,IAAI,EAAE,IAAI,CAAC,SAAS,GAAI,CAAC;KAC9D;IAED,IAAI,aAAa,GAAkB,IAAI,CAAC;IACxC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;QAC/B,aAAa,GAAG,CAAC,iBAAiB,CAAC,CAAC;KACrC;IAED,OAAO,CACL,2BAA2B,IAAI,CAC7B,oBAAC,oBAAoB,IACnB,IAAI,EAAE,2BAA2B,EACjC,IAAI,EAAE,2BAA2B,CAAC,GAAG,CAAC,IAAI,EAC1C,aAAa,EAAE,aAAa,GAC5B,CACH,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport { ResourceOverviewPage } from '@console/internal/components/overview/resource-overview-page';\nimport * as _ from 'lodash';\nimport KnativeResourceOverviewPage from '@console/knative-plugin/src/components/overview/KnativeResourceOverviewPage';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { TopologyDataObject } from './topology-types';\nimport { ModifyApplication } from '../../actions/modify-application';\n\nexport type TopologyResourcePanelProps = {\n  item: TopologyDataObject;\n};\n\nconst TopologyResourcePanel: React.FC<TopologyResourcePanelProps> = ({ item }) => {\n  const resourceItemToShowOnSideBar = item && item.resources;\n  // adds extra check, custom sidebar for all knative resources excluding deployment\n  const itemKind = _.get(item, 'data.kind', null);\n  if (_.get(item, 'data.isKnativeResource', false) && itemKind && itemKind !== 'Deployment') {\n    return <KnativeResourceOverviewPage item={item.resources} />;\n  }\n\n  let customActions: KebabAction[] = null;\n  if (!item.operatorBackedService) {\n    customActions = [ModifyApplication];\n  }\n\n  return (\n    resourceItemToShowOnSideBar && (\n      <ResourceOverviewPage\n        item={resourceItemToShowOnSideBar}\n        kind={resourceItemToShowOnSideBar.obj.kind}\n        customActions={customActions}\n      />\n    )\n  );\n};\n\nexport default TopologyResourcePanel;\n"]}]}