{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/CreateSecretModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/CreateSecretModal.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { withSecretForm, ImageSecretForm, SourceSecretForm, SecretTypeAbstraction, } from '@console/internal/components/secrets/create-secret';\nimport { createModalLauncher, } from '@console/internal/components/factory/modal';\nconst getSecretForm = (type) => {\n    switch (type) {\n        case SecretTypeAbstraction.source:\n            return withSecretForm(SourceSecretForm, true);\n        case SecretTypeAbstraction.image:\n            return withSecretForm(ImageSecretForm, true);\n        default:\n            return null;\n    }\n};\nconst CreateSecretModal = ({ close, namespace, save, secretType }) => {\n    const handleSave = (name) => {\n        close();\n        save(name);\n    };\n    const CreateSecretForm = getSecretForm(secretType);\n    return (React.createElement(CreateSecretForm, { onCancel: close, onSave: handleSave, fixed: { metadata: { namespace } }, secretTypeAbstraction: secretType, titleVerb: \"Create\", isCreate: true }));\n};\nexport const secretModalLauncher = createModalLauncher(CreateSecretModal);\nexport default CreateSecretModal;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/CreateSecretModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/CreateSecretModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,qBAAqB,GACtB,MAAM,oDAAoD,CAAC;AAC5D,OAAO,EACL,mBAAmB,GAEpB,MAAM,4CAA4C,CAAC;AAUpD,MAAM,aAAa,GAAG,CAAC,IAA2B,EAAE,EAAE;IACpD,QAAQ,IAAI,EAAE;QACZ,KAAK,qBAAqB,CAAC,MAAM;YAC/B,OAAO,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAChD,KAAK,qBAAqB,CAAC,KAAK;YAC9B,OAAO,cAAc,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC/C;YACE,OAAO,IAAI,CAAC;KACf;AACH,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAoB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;IACpF,MAAM,UAAU,GAAG,CAAC,IAAY,EAAE,EAAE;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IACnD,OAAO,CACL,oBAAC,gBAAgB,IACf,QAAQ,EAAE,KAAK,EACf,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,EAClC,qBAAqB,EAAE,UAAU,EACjC,SAAS,EAAC,QAAQ,EAClB,QAAQ,SACR,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,mBAAmB,CAAQ,iBAAiB,CAAC,CAAC;AAEjF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  withSecretForm,\n  ImageSecretForm,\n  SourceSecretForm,\n  SecretTypeAbstraction,\n} from '@console/internal/components/secrets/create-secret';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\n\nexport interface CreateSecretModalProps {\n  save?: (name: string) => void;\n  namespace: string;\n  secretType: SecretTypeAbstraction;\n}\n\ntype Props = CreateSecretModalProps & ModalComponentProps;\n\nconst getSecretForm = (type: SecretTypeAbstraction) => {\n  switch (type) {\n    case SecretTypeAbstraction.source:\n      return withSecretForm(SourceSecretForm, true);\n    case SecretTypeAbstraction.image:\n      return withSecretForm(ImageSecretForm, true);\n    default:\n      return null;\n  }\n};\n\nconst CreateSecretModal: React.FC<Props> = ({ close, namespace, save, secretType }) => {\n  const handleSave = (name: string) => {\n    close();\n    save(name);\n  };\n\n  const CreateSecretForm = getSecretForm(secretType);\n  return (\n    <CreateSecretForm\n      onCancel={close}\n      onSave={handleSave}\n      fixed={{ metadata: { namespace } }}\n      secretTypeAbstraction={secretType}\n      titleVerb=\"Create\"\n      isCreate\n    />\n  );\n};\n\nexport const secretModalLauncher = createModalLauncher<Props>(CreateSecretModal);\n\nexport default CreateSecretModal;\n"]}]}