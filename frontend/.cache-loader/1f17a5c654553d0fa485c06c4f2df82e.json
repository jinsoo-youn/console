{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-vm-like-entity.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-vm-like-entity.ts","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getName, getNamespace } from '@console/shared/src/selectors/common';\nimport { getVMLikeModel } from '../selectors/vm';\nexport const useUpToDateVMLikeEntity = (vmLikeEntity) => {\n    const vmName = getName(vmLikeEntity);\n    const namespace = getNamespace(vmLikeEntity);\n    const model = getVMLikeModel(vmLikeEntity);\n    const resourceWatch = React.useMemo(() => {\n        return {\n            name: vmName,\n            kind: model.kind,\n            namespace,\n            isList: false,\n        };\n    }, [model.kind, namespace, vmName]);\n    const [data, loaded, loadError] = useK8sWatchResource(resourceWatch);\n    if (loadError) {\n        return null;\n    }\n    if (!loaded) {\n        return vmLikeEntity;\n    }\n    return data;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-vm-like-entity.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/hooks/use-vm-like-entity.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,mDAAmD,CAAC;AACxF,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AAE7E,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,YAA8B,EAAoB,EAAE;IAC1F,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;IAC7C,MAAM,KAAK,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;IAC3C,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACvC,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,SAAS;YACT,MAAM,EAAE,KAAK;SACd,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IAEpC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;IAErE,IAAI,SAAS,EAAE;QACb,OAAO,IAAI,CAAC;KACb;IAED,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,YAAY,CAAC;KACrB;IACD,OAAO,IAAwB,CAAC;AAClC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getName, getNamespace } from '@console/shared/src/selectors/common';\nimport { VMLikeEntityKind } from '../types/vmLike';\nimport { getVMLikeModel } from '../selectors/vm';\n\nexport const useUpToDateVMLikeEntity = (vmLikeEntity: VMLikeEntityKind): VMLikeEntityKind => {\n  const vmName = getName(vmLikeEntity);\n  const namespace = getNamespace(vmLikeEntity);\n  const model = getVMLikeModel(vmLikeEntity);\n  const resourceWatch = React.useMemo(() => {\n    return {\n      name: vmName,\n      kind: model.kind,\n      namespace,\n      isList: false,\n    };\n  }, [model.kind, namespace, vmName]);\n\n  const [data, loaded, loadError] = useK8sWatchResource(resourceWatch);\n\n  if (loadError) {\n    return null;\n  }\n\n  if (!loaded) {\n    return vmLikeEntity;\n  }\n  return data as VMLikeEntityKind;\n};\n"]}]}