{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/InventoryCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/InventoryCard.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport InventoryItem, { ResourceInventoryItem, } from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport { getPodStatusGroups } from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodModel, NodeModel } from '@console/internal/models';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { NodeDashboardContext } from './NodeDashboardContext';\nexport const NodeInventoryItem = ({ nodeName, model, mapper, }) => {\n    const resource = React.useMemo(() => ({\n        kind: model.crd ? referenceForModel(model) : model.kind,\n        fieldSelector: `spec.nodeName=${nodeName}`,\n        isList: true,\n    }), [nodeName, model]);\n    const [data, loaded, loadError] = useK8sWatchResource(resource);\n    const basePath = `${resourcePathFromModel(NodeModel, nodeName)}/pods`;\n    return (React.createElement(ResourceInventoryItem, { kind: model, isLoading: !loaded, error: !!loadError, resources: data, mapper: mapper, basePath: basePath }));\n};\nconst InventoryCard = () => {\n    var _a, _b, _c;\n    const { obj } = React.useContext(NodeDashboardContext);\n    return (React.createElement(DashboardCard, { \"data-test-id\": \"inventory-card\" },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Inventory\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(NodeInventoryItem, { nodeName: obj.metadata.name, model: PodModel, mapper: getPodStatusGroups }),\n            React.createElement(InventoryItem, { isLoading: !obj, title: \"Image\", titlePlural: \"Images\", count: (_b = (_a = obj.status) === null || _a === void 0 ? void 0 : _a.images) === null || _b === void 0 ? void 0 : _b.length, error: !((_c = obj.status) === null || _c === void 0 ? void 0 : _c.images) }))));\n};\nexport default InventoryCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/InventoryCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/InventoryCard.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,aAAa,MAAM,uEAAuE,CAAC;AAClG,OAAO,mBAAmB,MAAM,6EAA6E,CAAC;AAC9G,OAAO,kBAAkB,MAAM,4EAA4E,CAAC;AAC5G,OAAO,iBAAiB,MAAM,2EAA2E,CAAC;AAC1G,OAAO,aAAa,EAAE,EACpB,qBAAqB,GAEtB,MAAM,uEAAuE,CAAC;AAC/E,OAAO,EAAE,kBAAkB,EAAE,MAAM,+DAA+D,CAAC;AACnG,OAAO,EAAE,iBAAiB,EAA8B,MAAM,8BAA8B,CAAC;AAC7F,OAAO,EAAE,mBAAmB,EAAE,MAAM,mDAAmD,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAE9D,MAAM,CAAC,MAAM,iBAAiB,GAAqC,CAAC,EAClE,QAAQ,EACR,KAAK,EACL,MAAM,GACP,EAAE,EAAE;IACH,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAC5B,GAAG,EAAE,CAAC,CAAC;QACL,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;QACvD,aAAa,EAAE,iBAAiB,QAAQ,EAAE;QAC1C,MAAM,EAAE,IAAI;KACb,CAAC,EACF,CAAC,QAAQ,EAAE,KAAK,CAAC,CAClB,CAAC;IACF,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,mBAAmB,CAAsB,QAAQ,CAAC,CAAC;IACrF,MAAM,QAAQ,GAAG,GAAG,qBAAqB,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC;IAEtE,OAAO,CACL,oBAAC,qBAAqB,IACpB,IAAI,EAAE,KAAK,EACX,SAAS,EAAE,CAAC,MAAM,EAClB,KAAK,EAAE,CAAC,CAAC,SAAS,EAClB,SAAS,EAAE,IAAI,EACf,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,GAClB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,aAAa,GAAa,GAAG,EAAE;;IACnC,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAEvD,OAAO,CACL,oBAAC,aAAa,oBAAc,gBAAgB;QAC1C,oBAAC,mBAAmB;YAClB,oBAAC,kBAAkB,oBAA+B,CAC9B;QACtB,oBAAC,iBAAiB;YAChB,oBAAC,iBAAiB,IAChB,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAC3B,KAAK,EAAE,QAAQ,EACf,MAAM,EAAE,kBAAkB,GAC1B;YACF,oBAAC,aAAa,IACZ,SAAS,EAAE,CAAC,GAAG,EACf,KAAK,EAAC,OAAO,EACb,WAAW,EAAC,QAAQ,EACpB,KAAK,cAAE,GAAG,CAAC,MAAM,0CAAE,MAAM,0CAAE,MAAM,EACjC,KAAK,EAAE,QAAC,GAAG,CAAC,MAAM,0CAAE,MAAM,CAAA,GAC1B,CACgB,CACN,CACjB,CAAC;AACJ,CAAC,CAAC;AAQF,eAAe,aAAa,CAAC","sourcesContent":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport InventoryItem, {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport { getPodStatusGroups } from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { referenceForModel, K8sResourceCommon, K8sKind } from '@console/internal/module/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodModel, NodeModel } from '@console/internal/models';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\n\nimport { NodeDashboardContext } from './NodeDashboardContext';\n\nexport const NodeInventoryItem: React.FC<NodeInventoryItemProps> = ({\n  nodeName,\n  model,\n  mapper,\n}) => {\n  const resource = React.useMemo(\n    () => ({\n      kind: model.crd ? referenceForModel(model) : model.kind,\n      fieldSelector: `spec.nodeName=${nodeName}`,\n      isList: true,\n    }),\n    [nodeName, model],\n  );\n  const [data, loaded, loadError] = useK8sWatchResource<K8sResourceCommon[]>(resource);\n  const basePath = `${resourcePathFromModel(NodeModel, nodeName)}/pods`;\n\n  return (\n    <ResourceInventoryItem\n      kind={model}\n      isLoading={!loaded}\n      error={!!loadError}\n      resources={data}\n      mapper={mapper}\n      basePath={basePath}\n    />\n  );\n};\n\nconst InventoryCard: React.FC = () => {\n  const { obj } = React.useContext(NodeDashboardContext);\n\n  return (\n    <DashboardCard data-test-id=\"inventory-card\">\n      <DashboardCardHeader>\n        <DashboardCardTitle>Inventory</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <NodeInventoryItem\n          nodeName={obj.metadata.name}\n          model={PodModel}\n          mapper={getPodStatusGroups}\n        />\n        <InventoryItem\n          isLoading={!obj}\n          title=\"Image\"\n          titlePlural=\"Images\"\n          count={obj.status?.images?.length}\n          error={!obj.status?.images}\n        />\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\ntype NodeInventoryItemProps = {\n  nodeName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n};\n\nexport default InventoryCard;\n"]}]}