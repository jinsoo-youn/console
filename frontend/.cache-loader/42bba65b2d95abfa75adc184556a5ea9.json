{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/MultiColumnField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/MultiColumnField.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { FieldArray, useFormikContext } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { SecondaryStatus, useFormikValidationFix } from '@console/shared';\nimport MultiColumnFieldHeader from './MultiColumnFieldHeader';\nimport MultiColumnFieldRow from './MultiColumnFieldRow';\nimport MultiColumnFieldFooter from './MultiColumnFieldFooter';\nimport { getSpans } from './multicolumn-field-utils';\nimport './MultiColumnField.scss';\nconst MultiColumnField = ({ children, name, label, helpText, required, addLabel, headers, emptyValues, emptyMessage, isReadOnly, disableDeleteRow, disableAddRow, toolTip, spans, }) => {\n    const { values } = useFormikContext();\n    const fieldValue = _.get(values, name, []);\n    const totalFieldCount = React.Children.count(children);\n    const fieldSpans = spans || getSpans(totalFieldCount);\n    useFormikValidationFix(fieldValue);\n    return (React.createElement(FieldArray, { name: name, render: ({ push, remove }) => {\n            return (React.createElement(FormGroup, { fieldId: `form-multi-column-input-${name.replace(/\\./g, '-')}-field`, label: label, helperText: helpText, isRequired: required },\n                fieldValue.length < 1 ? (emptyMessage && (React.createElement(\"div\", { className: \"odc-multi-column-field__empty-message\" },\n                    React.createElement(SecondaryStatus, { status: emptyMessage })))) : (React.createElement(MultiColumnFieldHeader, { headers: headers, spans: fieldSpans })),\n                fieldValue.length > 0 &&\n                    fieldValue.map((value, index) => (React.createElement(MultiColumnFieldRow, { key: `${index.toString()}`, name: name, toolTip: toolTip, rowIndex: index, onDelete: () => remove(index), isReadOnly: isReadOnly, disableDeleteRow: disableDeleteRow, spans: fieldSpans }, children))),\n                !isReadOnly && (React.createElement(MultiColumnFieldFooter, { disableAddRow: disableAddRow, addLabel: addLabel, onAdd: () => push(emptyValues) }))));\n        } }));\n};\nexport default MultiColumnField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/MultiColumnField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/multi-column-field/MultiColumnField.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACpE,OAAO,EAAE,SAAS,EAA0B,MAAM,wBAAwB,CAAC;AAC3E,OAAO,EAAE,eAAe,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAE1E,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AACxD,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,yBAAyB,CAAC;AAEjC,MAAM,gBAAgB,GAAoC,CAAC,EACzD,QAAQ,EACR,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,WAAW,EACX,YAAY,EACZ,UAAU,EACV,gBAAgB,EAChB,aAAa,EACb,OAAO,EACP,KAAK,GACN,EAAE,EAAE;IACH,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IACpD,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAC3C,MAAM,eAAe,GAA2B,KAAK,CAAC,QAAQ,CAAC,KAAK,CAClE,QAAQ,CACiB,CAAC;IAC5B,MAAM,UAAU,GAAG,KAAK,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC;IACtD,sBAAsB,CAAC,UAAU,CAAC,CAAC;IACnC,OAAO,CACL,oBAAC,UAAU,IACT,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;YAC3B,OAAO,CACL,oBAAC,SAAS,IACR,OAAO,EAAE,2BAA2B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,EACpE,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,QAAQ,EACpB,UAAU,EAAE,QAAQ;gBAEnB,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACvB,YAAY,IAAI,CACd,6BAAK,SAAS,EAAC,uCAAuC;oBACpD,oBAAC,eAAe,IAAC,MAAM,EAAE,YAAY,GAAI,CACrC,CACP,CACF,CAAC,CAAC,CAAC,CACF,oBAAC,sBAAsB,IAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,GAAI,CAChE;gBACA,UAAU,CAAC,MAAM,GAAG,CAAC;oBACpB,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAC/B,oBAAC,mBAAmB,IAClB,GAAG,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,EAAE,EAC1B,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,KAAK,EACf,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAC7B,UAAU,EAAE,UAAU,EACtB,gBAAgB,EAAE,gBAAgB,EAClC,KAAK,EAAE,UAAU,IAEhB,QAAQ,CACW,CACvB,CAAC;gBACH,CAAC,UAAU,IAAI,CACd,oBAAC,sBAAsB,IACrB,aAAa,EAAE,aAAa,EAC5B,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAC9B,CACH,CACS,CACb,CAAC;QACJ,CAAC,GACD,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { FieldArray, useFormikContext, FormikValues } from 'formik';\nimport { FormGroup, gridItemSpanValueShape } from '@patternfly/react-core';\nimport { SecondaryStatus, useFormikValidationFix } from '@console/shared';\nimport { MultiColumnFieldProps } from '../field-types';\nimport MultiColumnFieldHeader from './MultiColumnFieldHeader';\nimport MultiColumnFieldRow from './MultiColumnFieldRow';\nimport MultiColumnFieldFooter from './MultiColumnFieldFooter';\nimport { getSpans } from './multicolumn-field-utils';\nimport './MultiColumnField.scss';\n\nconst MultiColumnField: React.FC<MultiColumnFieldProps> = ({\n  children,\n  name,\n  label,\n  helpText,\n  required,\n  addLabel,\n  headers,\n  emptyValues,\n  emptyMessage,\n  isReadOnly,\n  disableDeleteRow,\n  disableAddRow,\n  toolTip,\n  spans,\n}) => {\n  const { values } = useFormikContext<FormikValues>();\n  const fieldValue = _.get(values, name, []);\n  const totalFieldCount: gridItemSpanValueShape = React.Children.count(\n    children,\n  ) as gridItemSpanValueShape;\n  const fieldSpans = spans || getSpans(totalFieldCount);\n  useFormikValidationFix(fieldValue);\n  return (\n    <FieldArray\n      name={name}\n      render={({ push, remove }) => {\n        return (\n          <FormGroup\n            fieldId={`form-multi-column-input-${name.replace(/\\./g, '-')}-field`}\n            label={label}\n            helperText={helpText}\n            isRequired={required}\n          >\n            {fieldValue.length < 1 ? (\n              emptyMessage && (\n                <div className=\"odc-multi-column-field__empty-message\">\n                  <SecondaryStatus status={emptyMessage} />\n                </div>\n              )\n            ) : (\n              <MultiColumnFieldHeader headers={headers} spans={fieldSpans} />\n            )}\n            {fieldValue.length > 0 &&\n              fieldValue.map((value, index) => (\n                <MultiColumnFieldRow\n                  key={`${index.toString()}`} // There is no other usable value for key prop in this case.\n                  name={name}\n                  toolTip={toolTip}\n                  rowIndex={index}\n                  onDelete={() => remove(index)}\n                  isReadOnly={isReadOnly}\n                  disableDeleteRow={disableDeleteRow}\n                  spans={fieldSpans}\n                >\n                  {children}\n                </MultiColumnFieldRow>\n              ))}\n            {!isReadOnly && (\n              <MultiColumnFieldFooter\n                disableAddRow={disableAddRow}\n                addLabel={addLabel}\n                onAdd={() => push(emptyValues)}\n              />\n            )}\n          </FormGroup>\n        );\n      }}\n    />\n  );\n};\n\nexport default MultiColumnField;\n"]}]}