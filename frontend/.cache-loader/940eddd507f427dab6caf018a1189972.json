{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Firehose } from '@console/internal/components/utils';\nimport { ClusterTriggerBindingModel, TriggerBindingModel } from '../../../../models';\nimport TriggerBindingSelectorDropdown from './TriggerBindingSelectorDropdown';\nconst TriggerBindingSelector = (props) => {\n    const { description, label = TriggerBindingModel.label, onChange } = props;\n    const { values } = useFormikContext();\n    return (React.createElement(Firehose, { resources: [\n            {\n                isList: true,\n                namespace: values.namespace,\n                kind: referenceForModel(TriggerBindingModel),\n                prop: 'triggerBindingData',\n                isOptional: true,\n            },\n            {\n                isList: true,\n                kind: referenceForModel(ClusterTriggerBindingModel),\n                prop: 'clusterTriggerBindingData',\n                isOptional: true,\n            },\n        ] },\n        React.createElement(TriggerBindingSelectorDropdown, { description: description, label: label, onChange: onChange })));\n};\nexport default TriggerBindingSelector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,0BAA0B,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAErF,OAAO,8BAA8B,MAAM,kCAAkC,CAAC;AAS9E,MAAM,sBAAsB,GAA0C,CAAC,KAAK,EAAE,EAAE;IAC9E,MAAM,EAAE,WAAW,EAAE,KAAK,GAAG,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC3E,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAwB,CAAC;IAE5D,OAAO,CACL,oBAAC,QAAQ,IACP,SAAS,EAAE;YACT;gBACE,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,MAAM,CAAC,SAAS;gBAC3B,IAAI,EAAE,iBAAiB,CAAC,mBAAmB,CAAC;gBAC5C,IAAI,EAAE,oBAAoB;gBAC1B,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;gBACnD,IAAI,EAAE,2BAA2B;gBACjC,UAAU,EAAE,IAAI;aACjB;SACF;QAED,oBAAC,8BAA8B,IAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,GAAI,CACrF,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Firehose } from '@console/internal/components/utils';\nimport { ClusterTriggerBindingModel, TriggerBindingModel } from '../../../../models';\nimport { TriggerBindingKind } from '../../resource-types';\nimport TriggerBindingSelectorDropdown from './TriggerBindingSelectorDropdown';\nimport { AddTriggerFormValues } from './types';\n\ntype TriggerBindingSelectorProps = {\n  description?: string;\n  label?: string;\n  onChange: (selectedTriggerBinding: TriggerBindingKind) => void;\n};\n\nconst TriggerBindingSelector: React.FC<TriggerBindingSelectorProps> = (props) => {\n  const { description, label = TriggerBindingModel.label, onChange } = props;\n  const { values } = useFormikContext<AddTriggerFormValues>();\n\n  return (\n    <Firehose\n      resources={[\n        {\n          isList: true,\n          namespace: values.namespace,\n          kind: referenceForModel(TriggerBindingModel),\n          prop: 'triggerBindingData',\n          isOptional: true,\n        },\n        {\n          isList: true,\n          kind: referenceForModel(ClusterTriggerBindingModel),\n          prop: 'clusterTriggerBindingData',\n          isOptional: true,\n        },\n      ]}\n    >\n      <TriggerBindingSelectorDropdown description={description} label={label} onChange={onChange} />\n    </Firehose>\n  );\n};\n\nexport default TriggerBindingSelector;\n"]}]}