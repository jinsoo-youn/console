{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/vm/flavor.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/vm/flavor.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { validateEmptyValue } from '@console/shared/src';\nexport const validateFlavor = ({ memory: { unit, size }, cpus, }, { isCustomFlavor }) => {\n    const validations = {\n        memory: null,\n        cpus: null,\n    };\n    let hasAllRequiredFilled = true;\n    const addRequired = (addon) => {\n        if (hasAllRequiredFilled) {\n            hasAllRequiredFilled = hasAllRequiredFilled && addon;\n        }\n    };\n    if (isCustomFlavor) {\n        addRequired(unit);\n        addRequired(size);\n        addRequired(cpus);\n        validations.memory = validateEmptyValue(size, { subject: 'Memory' });\n        validations.cpus = validateEmptyValue(cpus, { subject: 'CPUs' });\n    }\n    return {\n        validations,\n        hasAllRequiredFilled: !!hasAllRequiredFilled,\n        isValid: !!hasAllRequiredFilled && !Object.keys(validations).find((key) => validations[key]),\n    };\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/vm/flavor.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/utils/validations/vm/flavor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAoB,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAE3E,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,EACE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EACtB,IAAI,GAIL,EACD,EAAE,cAAc,EAA+B,EAC3B,EAAE;IACtB,MAAM,WAAW,GAAG;QAClB,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;KACX,CAAC;IAEF,IAAI,oBAAoB,GAAG,IAAI,CAAC;IAEhC,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,EAAE;QAC5B,IAAI,oBAAoB,EAAE;YACxB,oBAAoB,GAAG,oBAAoB,IAAI,KAAK,CAAC;SACtD;IACH,CAAC,CAAC;IAEF,IAAI,cAAc,EAAE;QAClB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,WAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QACrE,WAAW,CAAC,IAAI,GAAG,kBAAkB,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAClE;IAED,OAAO;QACL,WAAW;QACX,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;QAC5C,OAAO,EAAE,CAAC,CAAC,oBAAoB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;KAC7F,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ValidationObject, validateEmptyValue } from '@console/shared/src';\n\nexport const validateFlavor = (\n  {\n    memory: { unit, size },\n    cpus,\n  }: {\n    memory: { size: string; unit: string };\n    cpus: string;\n  },\n  { isCustomFlavor }: { isCustomFlavor: boolean },\n): UIFlavorValidation => {\n  const validations = {\n    memory: null,\n    cpus: null,\n  };\n\n  let hasAllRequiredFilled = true;\n\n  const addRequired = (addon) => {\n    if (hasAllRequiredFilled) {\n      hasAllRequiredFilled = hasAllRequiredFilled && addon;\n    }\n  };\n\n  if (isCustomFlavor) {\n    addRequired(unit);\n    addRequired(size);\n    addRequired(cpus);\n    validations.memory = validateEmptyValue(size, { subject: 'Memory' });\n    validations.cpus = validateEmptyValue(cpus, { subject: 'CPUs' });\n  }\n\n  return {\n    validations,\n    hasAllRequiredFilled: !!hasAllRequiredFilled,\n    isValid: !!hasAllRequiredFilled && !Object.keys(validations).find((key) => validations[key]),\n  };\n};\n\nexport type UIFlavorValidation = {\n  validations: {\n    memory?: ValidationObject;\n    cpus?: ValidationObject;\n  };\n  isValid: boolean;\n  hasAllRequiredFilled: boolean;\n};\n"]}]}