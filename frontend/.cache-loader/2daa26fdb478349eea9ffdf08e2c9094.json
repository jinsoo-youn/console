{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/EditApplicationModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/EditApplicationModal.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Title } from '@patternfly/react-core';\nimport { PromiseComponent } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory/modal';\nimport { Formik } from 'formik';\nimport FormSection from '../import/section/FormSection';\nimport ApplicationSelector from '../import/app/ApplicationSelector';\nimport { updateResourceApplication } from '../../utils/application-utils';\nimport { updateTopologyResourceApplication } from '../topology/topology-utils';\nimport { UNASSIGNED_KEY } from '../../const';\nconst EditApplicationForm = ({ resource, handleSubmit, isSubmitting, cancel, values, initialApplication, status, }) => {\n    const dirty = _.get(values, 'application.selectedKey') !== initialApplication;\n    return (React.createElement(\"form\", { onSubmit: handleSubmit, className: \"modal-content modal-content--no-inner-scroll\" },\n        React.createElement(ModalTitle, null, \"Edit Application Grouping\"),\n        React.createElement(ModalBody, null,\n            React.createElement(Title, { size: \"sm\", className: \"co-m-form-row\" },\n                \"Select an application group to add the component\",\n                React.createElement(\"strong\", null, ` ${resource.metadata.name} `),\n                \"to\"),\n            React.createElement(FormSection, { fullWidth: true },\n                React.createElement(ApplicationSelector, { namespace: resource.metadata.namespace }))),\n        React.createElement(ModalSubmitFooter, { submitText: \"Save\", submitDisabled: !dirty, cancel: cancel, inProgress: isSubmitting, errorMessage: status && status.submitError })));\n};\nclass EditApplicationModal extends PromiseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleSubmit = (values, actions) => {\n            const { resourceKind, resource } = this.props;\n            const application = _.get(values, 'application.name');\n            this.handlePromise(updateResourceApplication(resourceKind, resource, application))\n                .then(() => {\n                actions.setSubmitting(false);\n                this.props.close();\n            })\n                .catch((errorMessage) => {\n                actions.setSubmitting(false);\n                actions.setStatus({ submitError: errorMessage });\n            });\n        };\n    }\n    render() {\n        const { resource } = this.props;\n        const application = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n        const initialValues = {\n            application: {\n                name: application,\n                selectedKey: application || UNASSIGNED_KEY,\n            },\n        };\n        return (React.createElement(Formik, { initialValues: initialValues, onSubmit: this.handleSubmit, render: (formProps) => (React.createElement(EditApplicationForm, Object.assign({}, formProps, this.props, { initialApplication: application }))) }));\n    }\n}\nclass GroupEditApplicationModal extends PromiseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleSubmit = (values, actions) => {\n            const application = _.get(values, 'application.name');\n            this.handlePromise(updateTopologyResourceApplication(this.props.group.getData(), application))\n                .then(() => {\n                actions.setSubmitting(false);\n                this.props.close();\n            })\n                .catch((errorMessage) => {\n                actions.setSubmitting(false);\n                actions.setStatus({ submitError: errorMessage });\n            });\n        };\n    }\n    render() {\n        const { group } = this.props;\n        const resource = group.getData().resources.obj;\n        const application = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n        const initialValues = {\n            application: {\n                name: application,\n                selectedKey: application,\n            },\n        };\n        return (React.createElement(Formik, { initialValues: initialValues, onSubmit: this.handleSubmit, render: (formProps) => (React.createElement(EditApplicationForm, Object.assign({}, formProps, this.props, { resource: resource, initialApplication: application }))) }));\n    }\n}\nexport const editApplicationModal = createModalLauncher((props) => (React.createElement(EditApplicationModal, Object.assign({}, props))));\nexport const groupEditApplicationModal = createModalLauncher((props) => React.createElement(GroupEditApplicationModal, Object.assign({}, props)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/EditApplicationModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/EditApplicationModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Title } from '@patternfly/react-core';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { PromiseComponent } from '@console/internal/components/utils';\nimport { Node } from '@console/topology';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport FormSection from '../import/section/FormSection';\nimport ApplicationSelector from '../import/app/ApplicationSelector';\nimport { updateResourceApplication } from '../../utils/application-utils';\nimport { updateTopologyResourceApplication } from '../topology/topology-utils';\nimport { UNASSIGNED_KEY } from '../../const';\n\ntype EditApplicationFormProps = {\n  resource: K8sResourceKind;\n  initialApplication: string;\n  cancel?: () => void;\n};\n\ntype EditApplicationModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\ntype EditApplicationModalProps = EditApplicationFormProps & {\n  resourceKind: K8sKind;\n  close?: () => void;\n};\n\nconst EditApplicationForm: React.FC<FormikProps<FormikValues> & EditApplicationFormProps> = ({\n  resource,\n  handleSubmit,\n  isSubmitting,\n  cancel,\n  values,\n  initialApplication,\n  status,\n}) => {\n  const dirty = _.get(values, 'application.selectedKey') !== initialApplication;\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content modal-content--no-inner-scroll\">\n      <ModalTitle>Edit Application Grouping</ModalTitle>\n      <ModalBody>\n        <Title size=\"sm\" className=\"co-m-form-row\">\n          Select an application group to add the component\n          <strong>{` ${resource.metadata.name} `}</strong>\n          to\n        </Title>\n        <FormSection fullWidth>\n          <ApplicationSelector namespace={resource.metadata.namespace} />\n        </FormSection>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText=\"Save\"\n        submitDisabled={!dirty}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass EditApplicationModal extends PromiseComponent<\n  EditApplicationModalProps,\n  EditApplicationModalState\n> {\n  private handleSubmit = (values, actions) => {\n    const { resourceKind, resource } = this.props;\n    const application = _.get(values, 'application.name');\n\n    this.handlePromise(updateResourceApplication(resourceKind, resource, application))\n      .then(() => {\n        actions.setSubmitting(false);\n        this.props.close();\n      })\n      .catch((errorMessage) => {\n        actions.setSubmitting(false);\n        actions.setStatus({ submitError: errorMessage });\n      });\n  };\n\n  render() {\n    const { resource } = this.props;\n    const application = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n    const initialValues = {\n      application: {\n        name: application,\n        selectedKey: application || UNASSIGNED_KEY,\n      },\n    };\n    return (\n      <Formik\n        initialValues={initialValues}\n        onSubmit={this.handleSubmit}\n        render={(formProps) => (\n          <EditApplicationForm {...formProps} {...this.props} initialApplication={application} />\n        )}\n      />\n    );\n  }\n}\n\ntype GroupEditApplicationModalProps = {\n  group: Node;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nclass GroupEditApplicationModal extends PromiseComponent<\n  GroupEditApplicationModalProps,\n  EditApplicationModalState\n> {\n  private handleSubmit = (values, actions) => {\n    const application = _.get(values, 'application.name');\n\n    this.handlePromise(updateTopologyResourceApplication(this.props.group.getData(), application))\n      .then(() => {\n        actions.setSubmitting(false);\n        this.props.close();\n      })\n      .catch((errorMessage) => {\n        actions.setSubmitting(false);\n        actions.setStatus({ submitError: errorMessage });\n      });\n  };\n\n  render() {\n    const { group } = this.props;\n    const resource = group.getData().resources.obj;\n    const application = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n    const initialValues = {\n      application: {\n        name: application,\n        selectedKey: application,\n      },\n    };\n    return (\n      <Formik\n        initialValues={initialValues}\n        onSubmit={this.handleSubmit}\n        render={(formProps) => (\n          <EditApplicationForm\n            {...formProps}\n            {...this.props}\n            resource={resource}\n            initialApplication={application}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport const editApplicationModal = createModalLauncher((props: EditApplicationModalProps) => (\n  <EditApplicationModal {...props} />\n));\n\nexport const groupEditApplicationModal = createModalLauncher(\n  (props: GroupEditApplicationModalProps) => <GroupEditApplicationModal {...props} />,\n);\n"]}]}