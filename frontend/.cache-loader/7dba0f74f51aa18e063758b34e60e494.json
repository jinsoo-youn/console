{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/icon-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/icon-utils.ts","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as operatorLogo from '../images/operator.svg';\nexport const getImageForCSVIcon = (icon) => {\n    return icon ? `data:${icon.mediatype};base64,${icon.base64data}` : operatorLogo;\n};\nexport const isIconUrl = (url) => {\n    try {\n        // eslint-disable-next-line no-new\n        new URL(url);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport const getDefaultOperatorIcon = () => operatorLogo;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/icon-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/icon-utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,YAAY,MAAM,wBAAwB,CAAC;AAIvD,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAyB,EAAE,EAAE;IAC9D,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,SAAS,WAAW,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;AAClF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,GAAW,EAAW,EAAE;IAChD,IAAI;QACF,kCAAkC;QAClC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACb,OAAO,IAAI,CAAC;KACb;IAAC,WAAM;QACN,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC","sourcesContent":["import * as operatorLogo from '../images/operator.svg';\n\nexport type CSVIcon = { base64data: string; mediatype: string };\n\nexport const getImageForCSVIcon = (icon: CSVIcon | undefined) => {\n  return icon ? `data:${icon.mediatype};base64,${icon.base64data}` : operatorLogo;\n};\n\nexport const isIconUrl = (url: string): boolean => {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nexport const getDefaultOperatorIcon = () => operatorLogo;\n"]}]}