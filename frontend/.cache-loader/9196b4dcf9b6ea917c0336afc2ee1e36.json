{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/alert-routing-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/alert-routing-modal.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { patchAlertmanagerConfig } from '../monitoring/alert-manager-utils';\nconst updateAlertRoutingProperty = (config, propertyName, newValue, oldValue) => {\n    if (!_.isEqual(newValue, oldValue)) {\n        if (_.isEmpty(newValue)) {\n            _.unset(config, ['route', propertyName]); // unset so global/default value will be used\n        }\n        else {\n            _.set(config, ['route', propertyName], newValue);\n        }\n    }\n};\nexport const AlertRoutingModal = ({ config, secret, cancel, close, }) => {\n    const [errorMessage, setErrorMessage] = React.useState();\n    const [inProgress, setInProgress] = React.useState(false);\n    const submit = (event) => {\n        event.preventDefault();\n        let groupByNew = event.target.elements['input-group-by'].value.replace(/\\s+/g, '');\n        const groupWaitNew = event.target.elements['input-group-wait'].value;\n        const groupIntervalNew = event.target.elements['input-group-interval'].value;\n        const repeatIntervalNew = event.target.elements['input-repeat-interval'].value;\n        const groupByOld = _.get(config, ['route', 'group_by'], []);\n        const groupWaitOld = _.get(config, ['route', 'group_wait'], '');\n        const groupIntervalOld = _.get(config, ['route', 'group_interval'], '');\n        const repeatIntervalOld = _.get(config, ['route', 'repeat_interval'], '');\n        groupByNew = groupByNew === '' ? [] : groupByNew.split(',');\n        updateAlertRoutingProperty(config, 'group_by', groupByNew, groupByOld);\n        updateAlertRoutingProperty(config, 'group_wait', groupWaitNew, groupWaitOld);\n        updateAlertRoutingProperty(config, 'group_interval', groupIntervalNew, groupIntervalOld);\n        updateAlertRoutingProperty(config, 'repeat_interval', repeatIntervalNew, repeatIntervalOld);\n        setInProgress(true);\n        patchAlertmanagerConfig(secret, config).then(close, (err) => {\n            setErrorMessage(err.message);\n            setInProgress(false);\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content\" },\n        React.createElement(ModalTitle, { className: \"modal-header\" }, \"Edit Routing Configuration\"),\n        React.createElement(ModalBody, null,\n            React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                React.createElement(\"div\", { className: \"col-sm-12\" },\n                    React.createElement(\"label\", { htmlFor: \"group-by\", className: \"control-label\" }, \"Group By\")),\n                React.createElement(\"div\", { className: \"co-m-form-col col-sm-12\" },\n                    React.createElement(\"div\", { className: \"form-inline\" },\n                        React.createElement(\"div\", { className: \"pf-c-input-group\" },\n                            React.createElement(\"input\", { placeholder: \"cluster, alertname\", type: \"text\", className: \"pf-c-form-control\", id: \"input-group-by\", \"data-test-id\": \"input-group-by\", defaultValue: _.get(config, ['route', 'group_by']), \"aria-describedby\": \"input-group-by-help\" }))))),\n            React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                React.createElement(\"div\", { className: \"col-sm-12\" },\n                    React.createElement(\"label\", { htmlFor: \"group-wait\", className: \"control-label\" }, \"Group Wait\")),\n                React.createElement(\"div\", { className: \"co-m-form-col col-sm-12\" },\n                    React.createElement(\"div\", { className: \"form-inline\" },\n                        React.createElement(\"div\", { className: \"pf-c-input-group\" },\n                            React.createElement(\"input\", { placeholder: \"30s\", type: \"text\", className: \"pf-c-form-control\", id: \"input-group-wait\", \"data-test-id\": \"input-group-wait\", defaultValue: _.get(config, ['route', 'group_wait']), \"aria-describedby\": \"input-group-wait-help\" }))))),\n            React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                React.createElement(\"div\", { className: \"col-sm-12\" },\n                    React.createElement(\"label\", { htmlFor: \"group-interval\", className: \"control-label\" }, \"Group Interval\")),\n                React.createElement(\"div\", { className: \"co-m-form-col col-sm-12\" },\n                    React.createElement(\"div\", { className: \"form-inline\" },\n                        React.createElement(\"div\", { className: \"pf-c-input-group\" },\n                            React.createElement(\"input\", { placeholder: \"5m\", type: \"text\", className: \"pf-c-form-control\", id: \"input-group-interval\", \"data-test-id\": \"input-group-interval\", defaultValue: _.get(config, ['route', 'group_interval']), \"aria-describedby\": \"input-group-interval-help\" }))))),\n            React.createElement(\"div\", { className: \"row co-m-form-row\" },\n                React.createElement(\"div\", { className: \"col-sm-12\" },\n                    React.createElement(\"label\", { htmlFor: \"repeat-interval\", className: \"control-label\" }, \"Repeat Interval\")),\n                React.createElement(\"div\", { className: \"co-m-form-col col-sm-12\" },\n                    React.createElement(\"div\", { className: \"form-inline\" },\n                        React.createElement(\"div\", { className: \"pf-c-input-group\" },\n                            React.createElement(\"input\", { placeholder: \"3h\", type: \"text\", className: \"pf-c-form-control\", id: \"input-repeat-interval\", \"data-test-id\": \"input-repeat-interval\", defaultValue: _.get(config, ['route', 'repeat_interval']), \"aria-describedby\": \"input-repeat-interval-help\" })))))),\n        React.createElement(ModalSubmitFooter, { inProgress: inProgress, errorMessage: errorMessage, cancel: cancel, submitText: \"Save\" })));\n};\nexport const createAlertRoutingModal = createModalLauncher(AlertRoutingModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/alert-routing-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/alert-routing-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { AlertmanagerConfig } from '../monitoring/alert-manager-config';\nimport { patchAlertmanagerConfig } from '../monitoring/alert-manager-utils';\n\nconst updateAlertRoutingProperty = (\n  config: any,\n  propertyName: string,\n  newValue: string,\n  oldValue: string,\n) => {\n  if (!_.isEqual(newValue, oldValue)) {\n    if (_.isEmpty(newValue)) {\n      _.unset(config, ['route', propertyName]); // unset so global/default value will be used\n    } else {\n      _.set(config, ['route', propertyName], newValue);\n    }\n  }\n};\n\nexport const AlertRoutingModal: React.FC<AlertRoutingModalProps> = ({\n  config,\n  secret,\n  cancel,\n  close,\n}) => {\n  const [errorMessage, setErrorMessage] = React.useState();\n  const [inProgress, setInProgress] = React.useState(false);\n\n  const submit = (event): void => {\n    event.preventDefault();\n\n    let groupByNew = event.target.elements['input-group-by'].value.replace(/\\s+/g, '');\n    const groupWaitNew = event.target.elements['input-group-wait'].value;\n    const groupIntervalNew = event.target.elements['input-group-interval'].value;\n    const repeatIntervalNew = event.target.elements['input-repeat-interval'].value;\n\n    const groupByOld = _.get(config, ['route', 'group_by'], []);\n    const groupWaitOld = _.get(config, ['route', 'group_wait'], '');\n    const groupIntervalOld = _.get(config, ['route', 'group_interval'], '');\n    const repeatIntervalOld = _.get(config, ['route', 'repeat_interval'], '');\n\n    groupByNew = groupByNew === '' ? [] : groupByNew.split(',');\n    updateAlertRoutingProperty(config, 'group_by', groupByNew, groupByOld);\n    updateAlertRoutingProperty(config, 'group_wait', groupWaitNew, groupWaitOld);\n    updateAlertRoutingProperty(config, 'group_interval', groupIntervalNew, groupIntervalOld);\n    updateAlertRoutingProperty(config, 'repeat_interval', repeatIntervalNew, repeatIntervalOld);\n\n    setInProgress(true);\n    patchAlertmanagerConfig(secret, config).then(close, (err) => {\n      setErrorMessage(err.message);\n      setInProgress(false);\n    });\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n      <ModalTitle className=\"modal-header\">Edit Routing Configuration</ModalTitle>\n      <ModalBody>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-by\" className=\"control-label\">\n              Group By\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-c-input-group\">\n                <input\n                  placeholder=\"cluster, alertname\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  id=\"input-group-by\"\n                  data-test-id=\"input-group-by\"\n                  defaultValue={_.get(config, ['route', 'group_by'])}\n                  aria-describedby=\"input-group-by-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-wait\" className=\"control-label\">\n              Group Wait\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-c-input-group\">\n                <input\n                  placeholder=\"30s\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  id=\"input-group-wait\"\n                  data-test-id=\"input-group-wait\"\n                  defaultValue={_.get(config, ['route', 'group_wait'])}\n                  aria-describedby=\"input-group-wait-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-interval\" className=\"control-label\">\n              Group Interval\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-c-input-group\">\n                <input\n                  placeholder=\"5m\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  id=\"input-group-interval\"\n                  data-test-id=\"input-group-interval\"\n                  defaultValue={_.get(config, ['route', 'group_interval'])}\n                  aria-describedby=\"input-group-interval-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"repeat-interval\" className=\"control-label\">\n              Repeat Interval\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-c-input-group\">\n                <input\n                  placeholder=\"3h\"\n                  type=\"text\"\n                  className=\"pf-c-form-control\"\n                  id=\"input-repeat-interval\"\n                  data-test-id=\"input-repeat-interval\"\n                  defaultValue={_.get(config, ['route', 'repeat_interval'])}\n                  aria-describedby=\"input-repeat-interval-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={inProgress}\n        errorMessage={errorMessage}\n        cancel={cancel}\n        submitText=\"Save\"\n      />\n    </form>\n  );\n};\n\nexport const createAlertRoutingModal = createModalLauncher<AlertRoutingModalProps>(\n  AlertRoutingModal,\n);\n\nexport type AlertRoutingModalProps = {\n  cancel: () => void;\n  close: () => void;\n  config: AlertmanagerConfig;\n  secret: K8sResourceKind;\n};\n"]}]}