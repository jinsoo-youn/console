{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport PipelineTopologyGraph from '../../pipeline-topology/PipelineTopologyGraph';\nimport { getTopologyNodesEdges } from '../../pipeline-topology/utils';\nimport { PipelineLayout } from '../../pipeline-topology/const';\nimport './PipelineVisualization.scss';\nconst PipelineVisualization = ({ pipeline, pipelineRun, }) => {\n    var _a;\n    const { nodes, edges } = getTopologyNodesEdges(pipeline, pipelineRun);\n    if (nodes.length === 0 && edges.length === 0) {\n        // Nothing to render\n        // TODO: Confirm wording with UX; ODC-1860\n        return React.createElement(Alert, { variant: \"info\", isInline: true, title: \"This Pipeline has no tasks to visualize.\" });\n    }\n    return (React.createElement(\"div\", { className: \"odc-pipeline-visualization\" },\n        React.createElement(PipelineTopologyGraph, { id: ((_a = pipelineRun === null || pipelineRun === void 0 ? void 0 : pipelineRun.metadata) === null || _a === void 0 ? void 0 : _a.name) || pipeline.metadata.name, nodes: nodes, edges: edges, layout: PipelineLayout.DAGRE_VIEWER })));\n};\nexport default PipelineVisualization;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAE/C,OAAO,qBAAqB,MAAM,+CAA+C,CAAC;AAClF,OAAO,EAAE,qBAAqB,EAAE,MAAM,+BAA+B,CAAC;AACtE,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D,OAAO,8BAA8B,CAAC;AAOtC,MAAM,qBAAqB,GAAiD,CAAC,EAC3E,QAAQ,EACR,WAAW,GACZ,EAAE,EAAE;;IACH,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,qBAAqB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAEtE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QAC5C,oBAAoB;QACpB,0CAA0C;QAC1C,OAAO,oBAAC,KAAK,IAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,QAAC,KAAK,EAAC,0CAA0C,GAAG,CAAC;KAC3F;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,4BAA4B;QACzC,oBAAC,qBAAqB,IACpB,EAAE,EAAE,OAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,0CAAE,IAAI,KAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,EACzD,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,cAAc,CAAC,YAAY,GACnC,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { Pipeline, PipelineRun } from '../../../../utils/pipeline-augment';\nimport PipelineTopologyGraph from '../../pipeline-topology/PipelineTopologyGraph';\nimport { getTopologyNodesEdges } from '../../pipeline-topology/utils';\nimport { PipelineLayout } from '../../pipeline-topology/const';\n\nimport './PipelineVisualization.scss';\n\ninterface PipelineTopologyVisualizationProps {\n  pipeline: Pipeline;\n  pipelineRun?: PipelineRun;\n}\n\nconst PipelineVisualization: React.FC<PipelineTopologyVisualizationProps> = ({\n  pipeline,\n  pipelineRun,\n}) => {\n  const { nodes, edges } = getTopologyNodesEdges(pipeline, pipelineRun);\n\n  if (nodes.length === 0 && edges.length === 0) {\n    // Nothing to render\n    // TODO: Confirm wording with UX; ODC-1860\n    return <Alert variant=\"info\" isInline title=\"This Pipeline has no tasks to visualize.\" />;\n  }\n\n  return (\n    <div className=\"odc-pipeline-visualization\">\n      <PipelineTopologyGraph\n        id={pipelineRun?.metadata?.name || pipeline.metadata.name}\n        nodes={nodes}\n        edges={edges}\n        layout={PipelineLayout.DAGRE_VIEWER}\n      />\n    </div>\n  );\n};\n\nexport default PipelineVisualization;\n"]}]}