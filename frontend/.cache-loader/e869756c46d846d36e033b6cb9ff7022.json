{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/triggered-by/hooks.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/triggered-by/hooks.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { merge } from 'lodash';\n// FIXME react-redux types are 6.x while react-redux is 7.x\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { StartedByLabel } from '../../pipelines/const';\nconst mergeLabelsWithResource = (labels, resource) => {\n    return merge({}, resource, { metadata: { labels } });\n};\nexport const useUserLabelForManualStart = () => {\n    const user = useSelector((state) => state.UI.get('user'));\n    return {\n        // kube:admin is an invalid k8s label value\n        [StartedByLabel.user]: user.metadata.name.replace(/:/, ''),\n    };\n};\nexport const usePipelineRunWithUserLabel = (plr) => {\n    const labels = useUserLabelForManualStart();\n    return plr && mergeLabelsWithResource(labels, plr);\n};\nexport const useMenuActionsWithUserLabel = (menuActions) => {\n    const labels = useUserLabelForManualStart();\n    return menuActions.map((kebabAction) => {\n        return (kind, resource, ...rest) => kebabAction(kind, mergeLabelsWithResource(labels, resource), ...rest);\n    });\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/triggered-by/hooks.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/triggered-by/hooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,2DAA2D;AAC3D,4DAA4D;AAC5D,aAAa;AACb,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAI1C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAIvD,MAAM,uBAAuB,GAAG,CAAC,MAAgB,EAAE,QAA2B,EAAE,EAAE;IAChF,OAAO,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAAa,EAAE;IACvD,MAAM,IAAI,GAAG,WAAW,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAE1D,OAAO;QACL,2CAA2C;QAC3C,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;KAC3D,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,GAAgB,EAAe,EAAE;IAC3E,MAAM,MAAM,GAAG,0BAA0B,EAAE,CAAC;IAE5C,OAAO,GAAG,IAAI,uBAAuB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACrD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,WAA0B,EAAiB,EAAE;IACvF,MAAM,MAAM,GAAG,0BAA0B,EAAE,CAAC;IAE5C,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;QACrC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE,EAAE,CACjC,WAAW,CAAC,IAAI,EAAE,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { merge } from 'lodash';\n// FIXME react-redux types are 6.x while react-redux is 7.x\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRun } from '../../../utils/pipeline-augment';\nimport { StartedByLabel } from '../../pipelines/const';\n\ntype LabelMap = { [labelKey: string]: string };\n\nconst mergeLabelsWithResource = (labels: LabelMap, resource: K8sResourceCommon) => {\n  return merge({}, resource, { metadata: { labels } });\n};\n\nexport const useUserLabelForManualStart = (): LabelMap => {\n  const user = useSelector((state) => state.UI.get('user'));\n\n  return {\n    // kube:admin is an invalid k8s label value\n    [StartedByLabel.user]: user.metadata.name.replace(/:/, ''),\n  };\n};\n\nexport const usePipelineRunWithUserLabel = (plr: PipelineRun): PipelineRun => {\n  const labels = useUserLabelForManualStart();\n\n  return plr && mergeLabelsWithResource(labels, plr);\n};\n\nexport const useMenuActionsWithUserLabel = (menuActions: KebabAction[]): KebabAction[] => {\n  const labels = useUserLabelForManualStart();\n\n  return menuActions.map((kebabAction) => {\n    return (kind, resource, ...rest) =>\n      kebabAction(kind, mergeLabelsWithResource(labels, resource), ...rest);\n  });\n};\n"]}]}