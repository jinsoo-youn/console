{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/InventoryCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/InventoryCard.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport InventoryItem, { ResourceInventoryItem } from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport { PodModel, NodeModel } from '@console/internal/models';\nimport { getNamespace, getName } from '@console/shared/src/selectors/common';\nimport { getPodStatusGroups } from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { Link } from 'react-router-dom';\nimport { getHostStorage, getHostNICs, getHostCPU } from '../../../selectors';\nimport { BareMetalHostModel } from '../../../models';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\nconst PodInventoryItem = () => {\n    const { node, loaded } = React.useContext(BareMetalHostDashboardContext);\n    const nodeName = getName(node);\n    const podResource = React.useMemo(() => loaded && nodeName\n        ? {\n            isList: true,\n            kind: PodModel.kind,\n            fieldSelector: `spec.nodeName=${nodeName}`,\n        }\n        : null, [nodeName, loaded]);\n    const [pods, podsLoaded, podsError] = useK8sWatchResource(podResource);\n    if (!nodeName || !loaded) {\n        return React.createElement(InventoryItem, { title: PodModel.label, count: 0, isLoading: !loaded });\n    }\n    const basePath = `${resourcePathFromModel(NodeModel, nodeName)}/pods`;\n    return React.createElement(ResourceInventoryItem, { resources: pods, basePath: basePath, mapper: getPodStatusGroups, kind: PodModel, isLoading: !podsLoaded, error: !!podsError });\n};\nconst InventoryCard = () => {\n    const { obj } = React.useContext(BareMetalHostDashboardContext);\n    const namespace = getNamespace(obj);\n    const hostName = getName(obj);\n    const NICTitleComponent = React.useCallback(({ children }) => React.createElement(Link, { to: `${resourcePathFromModel(BareMetalHostModel, hostName, namespace)}/nics` }, children), [hostName, namespace]);\n    const DiskTitleComponent = React.useCallback(({ children }) => React.createElement(Link, { to: `${resourcePathFromModel(BareMetalHostModel, hostName, namespace)}/disks` }, children), [hostName, namespace]);\n    return (React.createElement(DashboardCard, null,\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Inventory\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(PodInventoryItem, null),\n            React.createElement(InventoryItem, { title: \"Disk\", isLoading: !obj, count: getHostStorage(obj).length, TitleComponent: DiskTitleComponent }),\n            React.createElement(InventoryItem, { title: \"NIC\", isLoading: !obj, count: getHostNICs(obj).length, TitleComponent: NICTitleComponent }),\n            React.createElement(InventoryItem, { title: \"CPU\", isLoading: !obj, count: getHostCPU(obj).count }))));\n};\nexport default InventoryCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/InventoryCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/InventoryCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport InventoryItem, { ResourceInventoryItem } from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport { PodModel, NodeModel } from '@console/internal/models';\nimport { getNamespace, getName } from '@console/shared/src/selectors/common';\nimport { getPodStatusGroups } from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodKind } from '@console/internal/module/k8s/types';\nimport { Link } from 'react-router-dom';\nimport { getHostStorage, getHostNICs, getHostCPU } from '../../../selectors';\nimport { BareMetalHostModel } from '../../../models';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\n\nconst PodInventoryItem: React.FC = () => {\n  const { node, loaded } = React.useContext(BareMetalHostDashboardContext);\n  const nodeName = getName(node);\n\n  const podResource = React.useMemo(\n    () =>\n      loaded && nodeName\n        ? {\n            isList: true,\n            kind: PodModel.kind,\n            fieldSelector: `spec.nodeName=${nodeName}`,\n          }\n        : null,\n    [nodeName, loaded],\n  );\n\n  const [pods, podsLoaded, podsError] = useK8sWatchResource<PodKind[]>(podResource);\n\n  if (!nodeName || !loaded) {\n    return <InventoryItem title={PodModel.label} count={0} isLoading={!loaded} />;\n  }\n\n  const basePath = `${resourcePathFromModel(NodeModel, nodeName)}/pods`;\n\n  return <ResourceInventoryItem resources={pods} basePath={basePath} mapper={getPodStatusGroups} kind={PodModel} isLoading={!podsLoaded} error={!!podsError} />;\n};\n\nconst InventoryCard: React.FC = () => {\n  const { obj } = React.useContext(BareMetalHostDashboardContext);\n\n  const namespace = getNamespace(obj);\n  const hostName = getName(obj);\n\n  const NICTitleComponent = React.useCallback(({ children }) => <Link to={`${resourcePathFromModel(BareMetalHostModel, hostName, namespace)}/nics`}>{children}</Link>, [hostName, namespace]);\n\n  const DiskTitleComponent = React.useCallback(({ children }) => <Link to={`${resourcePathFromModel(BareMetalHostModel, hostName, namespace)}/disks`}>{children}</Link>, [hostName, namespace]);\n\n  return (\n    <DashboardCard>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Inventory</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <PodInventoryItem />\n        <InventoryItem title=\"Disk\" isLoading={!obj} count={getHostStorage(obj).length} TitleComponent={DiskTitleComponent} />\n        <InventoryItem title=\"NIC\" isLoading={!obj} count={getHostNICs(obj).length} TitleComponent={NICTitleComponent} />\n        <InventoryItem title=\"CPU\" isLoading={!obj} count={getHostCPU(obj).count} />\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default InventoryCard;\n"]}]}