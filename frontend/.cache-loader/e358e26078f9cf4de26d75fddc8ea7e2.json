{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/ActivityCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/ActivityCard.tsx","mtime":1615793099680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport ActivityBody, { RecentEventsBody, OngoingActivityBody } from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { EventModel, NodeModel } from '@console/internal/models';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { NodeDashboardContext } from './NodeDashboardContext';\nimport { useTranslation } from 'react-i18next';\nconst eventsResource = {\n    isList: true,\n    kind: EventModel.kind,\n};\nconst nodeEventsFilter = (event, uid, kind, name) => {\n    const { uid: objectUID, kind: objectKind, name: objectName } = (event === null || event === void 0 ? void 0 : event.involvedObject) || {};\n    return objectUID === uid && objectKind === kind && objectName === name;\n};\nconst RecentEvent = ({ node }) => {\n    const [data, loaded, loadError] = useK8sWatchResource(eventsResource);\n    const { uid, name } = node.metadata;\n    const eventsFilter = React.useCallback(event => nodeEventsFilter(event, uid, NodeModel.kind, name), [uid, name]);\n    return React.createElement(RecentEventsBody, { events: { data, loaded, loadError }, filter: eventsFilter });\n};\nconst ActivityCard = () => {\n    const { obj } = React.useContext(NodeDashboardContext);\n    const eventsLink = `${resourcePathFromModel(NodeModel, obj.metadata.name)}/events`;\n    const { t } = useTranslation();\n    return (React.createElement(DashboardCard, { gradient: true, \"data-test-id\": \"activity-card\" },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_TITLE_1')),\n            React.createElement(DashboardCardLink, { to: eventsLink }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_ALL_1'))),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(ActivityBody, { className: \"co-project-dashboard__activity-body\" },\n                React.createElement(OngoingActivityBody, { loaded: true }),\n                React.createElement(RecentEvent, { node: obj })))));\n};\nexport default ActivityCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/ActivityCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/node-dashboard/ActivityCard.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,aAAa,MAAM,uEAAuE,CAAC;AAClG,OAAO,mBAAmB,MAAM,6EAA6E,CAAC;AAC9G,OAAO,kBAAkB,MAAM,4EAA4E,CAAC;AAC5G,OAAO,iBAAiB,MAAM,2EAA2E,CAAC;AAC1G,OAAO,iBAAiB,MAAM,2EAA2E,CAAC;AAC1G,OAAO,YAAY,EAAE,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,qEAAqE,CAAC;AAC1I,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAEjE,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAC3E,OAAO,EAAE,mBAAmB,EAAE,MAAM,mDAAmD,CAAC;AAExF,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,cAAc,GAAG;IACrB,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE,UAAU,CAAC,IAAI;CACtB,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,KAAgB,EAAE,GAAW,EAAE,IAAY,EAAE,IAAY,EAAW,EAAE;IAC9F,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,KAAI,EAAE,CAAC;IAC3F,OAAO,SAAS,KAAK,GAAG,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,CAAC;AACzE,CAAC,CAAC;AAEF,MAAM,WAAW,GAA+B,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3D,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,mBAAmB,CAAc,cAAc,CAAC,CAAC;IACnF,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACpC,MAAM,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IACjH,OAAO,oBAAC,gBAAgB,IAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,YAAY,GAAI,CAAC;AACzF,CAAC,CAAC;AAEF,MAAM,YAAY,GAAa,GAAG,EAAE;IAClC,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IACvD,MAAM,UAAU,GAAG,GAAG,qBAAqB,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;IACnF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,CACL,oBAAC,aAAa,IAAC,QAAQ,wBAAc,eAAe;QAClD,oBAAC,mBAAmB;YAClB,oBAAC,kBAAkB,QAAE,CAAC,CAAC,+CAA+C,CAAC,CAAsB;YAC7F,oBAAC,iBAAiB,IAAC,EAAE,EAAE,UAAU,IAAG,CAAC,CAAC,6CAA6C,CAAC,CAAqB,CACrF;QACtB,oBAAC,iBAAiB;YAChB,oBAAC,YAAY,IAAC,SAAS,EAAC,qCAAqC;gBAC3D,oBAAC,mBAAmB,IAAC,MAAM,SAAG;gBAC9B,oBAAC,WAAW,IAAC,IAAI,EAAE,GAAG,GAAI,CACb,CACG,CACN,CACjB,CAAC;AACJ,CAAC,CAAC;AAMF,eAAe,YAAY,CAAC","sourcesContent":["import * as React from 'react';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport ActivityBody, { RecentEventsBody, OngoingActivityBody } from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { EventModel, NodeModel } from '@console/internal/models';\nimport { EventKind, NodeKind } from '@console/internal/module/k8s';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport { NodeDashboardContext } from './NodeDashboardContext';\nimport { useTranslation } from 'react-i18next';\n\nconst eventsResource = {\n  isList: true,\n  kind: EventModel.kind,\n};\n\nconst nodeEventsFilter = (event: EventKind, uid: string, kind: string, name: string): boolean => {\n  const { uid: objectUID, kind: objectKind, name: objectName } = event?.involvedObject || {};\n  return objectUID === uid && objectKind === kind && objectName === name;\n};\n\nconst RecentEvent: React.FC<RecentEventProps> = ({ node }) => {\n  const [data, loaded, loadError] = useK8sWatchResource<EventKind[]>(eventsResource);\n  const { uid, name } = node.metadata;\n  const eventsFilter = React.useCallback(event => nodeEventsFilter(event, uid, NodeModel.kind, name), [uid, name]);\n  return <RecentEventsBody events={{ data, loaded, loadError }} filter={eventsFilter} />;\n};\n\nconst ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(NodeDashboardContext);\n  const eventsLink = `${resourcePathFromModel(NodeModel, obj.metadata.name)}/events`;\n  const { t } = useTranslation();\n  return (\n    <DashboardCard gradient data-test-id=\"activity-card\">\n      <DashboardCardHeader>\n        <DashboardCardTitle>{t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_TITLE_1')}</DashboardCardTitle>\n        <DashboardCardLink to={eventsLink}>{t('SINGLE:MSG_OVERVIEW_MAIN_CARDACTIVITY_ALL_1')}</DashboardCardLink>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <ActivityBody className=\"co-project-dashboard__activity-body\">\n          <OngoingActivityBody loaded />\n          <RecentEvent node={obj} />\n        </ActivityBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\ntype RecentEventProps = {\n  node: NodeKind;\n};\n\nexport default ActivityCard;\n"]}]}