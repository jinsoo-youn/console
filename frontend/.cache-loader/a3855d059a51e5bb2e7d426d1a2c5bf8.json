{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/kubevirtComponentFactory.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/kubevirtComponentFactory.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { kebabOptionsToMenu } from '@console/internal/components/utils';\nimport { withDragNode, withDndDrop, withSelection, } from '@console/topology';\nimport { nodeDragSourceSpec, nodeDropTargetSpec, withEditReviewAccess, withContextMenu, AbstractSBRComponentFactory, createMenuItems, getTopologyResourceObject, } from '@console/dev-console/src/components/topology';\nimport { ModifyApplication } from '@console/dev-console/src/actions/modify-application';\nimport { vmMenuActions } from '../../components/vms/menu-actions';\nimport { VmNode } from './nodes/VmNode';\nimport { TYPE_VIRTUAL_MACHINE } from './const';\nexport const vmActions = (vm) => {\n    const contextMenuResource = getTopologyResourceObject(vm);\n    if (!contextMenuResource) {\n        return null;\n    }\n    const { data: { vmi, vmStatusBundle }, } = vm;\n    const model = modelFor(referenceFor(contextMenuResource));\n    return [\n        ModifyApplication(model, contextMenuResource),\n        ...vmMenuActions.map((action) => {\n            return action(model, contextMenuResource, {\n                vmi,\n                vmStatusBundle,\n            });\n        }),\n    ];\n};\nexport const vmContextMenu = (element) => {\n    return createMenuItems(kebabOptionsToMenu(vmActions(element.getData())));\n};\nclass KubevirtComponentFactory extends AbstractSBRComponentFactory {\n    constructor() {\n        super(...arguments);\n        this.getFactory = () => {\n            return (kind, type) => {\n                switch (type) {\n                    case TYPE_VIRTUAL_MACHINE:\n                        return this.withAddResourceConnector()(withDndDrop(nodeDropTargetSpec)(withEditReviewAccess('patch')(withDragNode(nodeDragSourceSpec(type))(withSelection(false, true)(withContextMenu(vmContextMenu)(VmNode))))));\n                    default:\n                        return undefined;\n                }\n            };\n        };\n    }\n}\nexport { KubevirtComponentFactory };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/kubevirtComponentFactory.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/components/kubevirtComponentFactory.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAe,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AACrF,OAAO,EAGL,YAAY,EACZ,WAAW,EACX,aAAa,GAEd,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,kBAAkB,EAClB,kBAAkB,EAClB,oBAAoB,EACpB,eAAe,EACf,2BAA2B,EAC3B,eAAe,EAEf,yBAAyB,GAC1B,MAAM,8CAA8C,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qDAAqD,CAAC;AACxF,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAG/C,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAkC,EAAiB,EAAE;IAC7E,MAAM,mBAAmB,GAAG,yBAAyB,CAAC,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,mBAAmB,EAAE;QACxB,OAAO,IAAI,CAAC;KACb;IACD,MAAM,EACJ,IAAI,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,GAC9B,GAAG,EAAE,CAAC;IAEP,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC1D,OAAO;QACL,iBAAiB,CAAC,KAAK,EAAE,mBAAmB,CAAC;QAC7C,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,OAAO,MAAM,CAAC,KAAK,EAAE,mBAAmB,EAAE;gBACxC,GAAG;gBACH,cAAc;aACf,CAAC,CAAC;QACL,CAAC,CAAC;KACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAa,EAAE,EAAE;IAC7C,OAAO,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAEF,MAAM,wBAAyB,SAAQ,2BAA2B;IAAlE;;QACE,eAAU,GAAG,GAA6B,EAAE;YAC1C,OAAO,CAAC,IAAI,EAAE,IAAI,EAA8D,EAAE;gBAChF,QAAQ,IAAI,EAAE;oBACZ,KAAK,oBAAoB;wBACvB,OAAO,IAAI,CAAC,wBAAwB,EAAE,CACpC,WAAW,CAKT,kBAAkB,CAAC,CACnB,oBAAoB,CAAC,OAAO,CAAC,CAC3B,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CACpC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,CACnE,CACF,CACF,CACF,CAAC;oBACJ;wBACE,OAAO,SAAS,CAAC;iBACpB;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAED,OAAO,EAAE,wBAAwB,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { KebabOption, kebabOptionsToMenu } from '@console/internal/components/utils';\nimport {\n  GraphElement,\n  ComponentFactory as TopologyComponentFactory,\n  withDragNode,\n  withDndDrop,\n  withSelection,\n  Node,\n} from '@console/topology';\nimport {\n  NodeComponentProps,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  withEditReviewAccess,\n  withContextMenu,\n  AbstractSBRComponentFactory,\n  createMenuItems,\n  TopologyDataObject,\n  getTopologyResourceObject,\n} from '@console/dev-console/src/components/topology';\nimport { ModifyApplication } from '@console/dev-console/src/actions/modify-application';\nimport { vmMenuActions } from '../../components/vms/menu-actions';\nimport { VmNode } from './nodes/VmNode';\nimport { TYPE_VIRTUAL_MACHINE } from './const';\nimport { VMNodeData } from '../types';\n\nexport const vmActions = (vm: TopologyDataObject<VMNodeData>): KebabOption[] => {\n  const contextMenuResource = getTopologyResourceObject(vm);\n  if (!contextMenuResource) {\n    return null;\n  }\n  const {\n    data: { vmi, vmStatusBundle },\n  } = vm;\n\n  const model = modelFor(referenceFor(contextMenuResource));\n  return [\n    ModifyApplication(model, contextMenuResource),\n    ...vmMenuActions.map((action) => {\n      return action(model, contextMenuResource, {\n        vmi,\n        vmStatusBundle,\n      });\n    }),\n  ];\n};\n\nexport const vmContextMenu = (element: Node) => {\n  return createMenuItems(kebabOptionsToMenu(vmActions(element.getData())));\n};\n\nclass KubevirtComponentFactory extends AbstractSBRComponentFactory {\n  getFactory = (): TopologyComponentFactory => {\n    return (kind, type): React.ComponentType<{ element: GraphElement }> | undefined => {\n      switch (type) {\n        case TYPE_VIRTUAL_MACHINE:\n          return this.withAddResourceConnector()(\n            withDndDrop<\n              any,\n              any,\n              { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n              NodeComponentProps\n            >(nodeDropTargetSpec)(\n              withEditReviewAccess('patch')(\n                withDragNode(nodeDragSourceSpec(type))(\n                  withSelection(false, true)(withContextMenu(vmContextMenu)(VmNode)),\n                ),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n    };\n  };\n}\n\nexport { KubevirtComponentFactory };\n"]}]}