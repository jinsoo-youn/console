{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostSecondaryStatus.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostSecondaryStatus.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { SecondaryStatus } from '@console/shared';\nimport { getHostPowerStatus, getHostProvisioningState, isHostScheduledForRestart, } from '../../selectors';\nimport { HOST_POWER_STATUS_POWERED_ON, HOST_REGISTERING_STATES } from '../../constants';\nexport const HOST_SCHEDULED_FOR_RESTART = 'Restart pending';\nconst BareMetalHostSecondaryStatus = ({ host }) => {\n    const powerStatus = getHostPowerStatus(host);\n    const provisioningState = getHostProvisioningState(host);\n    const status = [];\n    // don't show power status when host registration/inspection hasn't finished\n    if (!HOST_REGISTERING_STATES.includes(provisioningState)) {\n        if (isHostScheduledForRestart(host)) {\n            status.push(HOST_SCHEDULED_FOR_RESTART);\n        }\n        // don't show power status when host is powered on\n        if (powerStatus !== HOST_POWER_STATUS_POWERED_ON) {\n            status.push(powerStatus);\n        }\n    }\n    return React.createElement(SecondaryStatus, { status: status });\n};\nexport default BareMetalHostSecondaryStatus;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostSecondaryStatus.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostSecondaryStatus.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAElD,OAAO,EACL,kBAAkB,EAClB,wBAAwB,EACxB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,4BAA4B,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAMxF,MAAM,CAAC,MAAM,0BAA0B,GAAG,iBAAiB,CAAC;AAE5D,MAAM,4BAA4B,GAAgD,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC7F,MAAM,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,iBAAiB,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACzD,MAAM,MAAM,GAAG,EAAE,CAAC;IAElB,4EAA4E;IAC5E,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QACxD,IAAI,yBAAyB,CAAC,IAAI,CAAC,EAAE;YACnC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;SACzC;QAED,kDAAkD;QAClD,IAAI,WAAW,KAAK,4BAA4B,EAAE;YAChD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1B;KACF;IAED,OAAO,oBAAC,eAAe,IAAC,MAAM,EAAE,MAAM,GAAI,CAAC;AAC7C,CAAC,CAAC;AAEF,eAAe,4BAA4B,CAAC","sourcesContent":["import * as React from 'react';\nimport { SecondaryStatus } from '@console/shared';\nimport { BareMetalHostKind } from '../../types';\nimport {\n  getHostPowerStatus,\n  getHostProvisioningState,\n  isHostScheduledForRestart,\n} from '../../selectors';\nimport { HOST_POWER_STATUS_POWERED_ON, HOST_REGISTERING_STATES } from '../../constants';\n\ntype BareMetalHostSecondaryStatusProps = {\n  host: BareMetalHostKind;\n};\n\nexport const HOST_SCHEDULED_FOR_RESTART = 'Restart pending';\n\nconst BareMetalHostSecondaryStatus: React.FC<BareMetalHostSecondaryStatusProps> = ({ host }) => {\n  const powerStatus = getHostPowerStatus(host);\n  const provisioningState = getHostProvisioningState(host);\n  const status = [];\n\n  // don't show power status when host registration/inspection hasn't finished\n  if (!HOST_REGISTERING_STATES.includes(provisioningState)) {\n    if (isHostScheduledForRestart(host)) {\n      status.push(HOST_SCHEDULED_FOR_RESTART);\n    }\n\n    // don't show power status when host is powered on\n    if (powerStatus !== HOST_POWER_STATUS_POWERED_ON) {\n      status.push(powerStatus);\n    }\n  }\n\n  return <SecondaryStatus status={status} />;\n};\n\nexport default BareMetalHostSecondaryStatus;\n"]}]}