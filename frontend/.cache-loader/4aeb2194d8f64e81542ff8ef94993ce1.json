{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/taints-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/taints-modal.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { k8sPatch } from '../../module/k8s';\nimport { createModalLauncher, ModalBody, ModalSubmitFooter, ModalTitle, } from '../factory';\nclass TaintsModal extends PromiseComponent {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this._submit = (e) => {\n            e.preventDefault();\n            const { taints } = this.state;\n            // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n            const op = this.props.resource.spec.taints ? 'replace' : 'add';\n            const patch = [{ path: '/spec/taints', op, value: taints }];\n            this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(this.props.close);\n        };\n        this._cancel = () => {\n            this.props.close();\n        };\n        this._change = (e, i, field) => {\n            const newValue = e.target ? e.target.value : e;\n            this.setState((prevState) => {\n                const clonedTaints = _.cloneDeep(prevState.taints);\n                clonedTaints[i][field] = newValue;\n                return {\n                    taints: clonedTaints,\n                };\n            });\n        };\n        this._remove = (i) => {\n            this.setState((state) => {\n                const taints = [...state.taints];\n                taints.splice(i, 1);\n                return { taints };\n            });\n        };\n        this._addRow = () => {\n            this.setState((state) => ({\n                taints: [...state.taints, this._newTaint()],\n            }));\n        };\n        // Add an empty row for editing if no taints exist.\n        this.state.taints = this.props.resource.spec.taints || [];\n    }\n    _newTaint() {\n        return { key: '', value: '', effect: 'NoSchedule' };\n    }\n    render() {\n        const effects = {\n            NoSchedule: 'NoSchedule',\n            PreferNoSchedule: 'PreferNoSchedule',\n            NoExecute: 'NoExecute',\n        };\n        const { taints, errorMessage, inProgress } = this.state;\n        return (React.createElement(\"form\", { onSubmit: this._submit, name: \"form\", className: \"modal-content modal-content--accommodate-dropdown taint-modal\" },\n            React.createElement(ModalTitle, null, \"Edit Taints\"),\n            React.createElement(ModalBody, null,\n                _.isEmpty(taints) ? (React.createElement(EmptyBox, { label: \"Taints\" })) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: \"row taint-modal__heading hidden-sm hidden-xs\" },\n                        React.createElement(\"div\", { className: \"col-sm-4 text-secondary text-uppercase\" }, \"Key\"),\n                        React.createElement(\"div\", { className: \"col-sm-3 text-secondary text-uppercase\" }, \"Value\"),\n                        React.createElement(\"div\", { className: \"col-sm-4 text-secondary text-uppercase\" }, \"Effect\"),\n                        React.createElement(\"div\", { className: \"col-sm-1 co-empty__header\" })),\n                    _.map(taints, (c, i) => (React.createElement(\"div\", { className: \"row taint-modal__row\", key: i },\n                        React.createElement(\"div\", { className: \"col-md-4 col-xs-5 taint-modal__field\" },\n                            React.createElement(\"div\", { className: \"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Key\"),\n                            React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control taint-modal__input\", value: c.key, onChange: (e) => this._change(e, i, 'key'), required: true })),\n                        React.createElement(\"div\", { className: \"col-md-3 col-xs-5 taint-modal__field\" },\n                            React.createElement(\"div\", { className: \"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Value\"),\n                            React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control taint-modal__input\", value: c.value, onChange: (e) => this._change(e, i, 'value') })),\n                        React.createElement(\"div\", { className: \"clearfix visible-sm visible-xs\" }),\n                        React.createElement(\"div\", { className: \"col-md-4 col-xs-5 taint-modal__field\" },\n                            React.createElement(\"div\", { className: \"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\" }, \"Effect\"),\n                            React.createElement(Dropdown, { className: \"taint-modal__dropdown\", dropDownClassName: \"dropdown--full-width\", items: effects, onChange: (e) => this._change(e, i, 'effect'), selectedKey: c.effect, title: effects[c.effect] })),\n                        React.createElement(\"div\", { className: \"col-md-1 col-md-offset-0 col-sm-offset-10 col-xs-offset-10\" },\n                            React.createElement(Button, { type: \"button\", className: \"taint-modal__delete-icon\", onClick: () => this._remove(i), \"aria-label\": \"Delete\", variant: \"plain\" },\n                                React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" })))))))),\n                React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: this._addRow, type: \"button\", variant: \"link\" },\n                    React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                    \"Add More\")),\n            React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, inProgress: inProgress, submitText: \"Save\", cancel: this._cancel })));\n    }\n}\nexport const taintsModal = createModalLauncher(TaintsModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/taints-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/taints-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { Dropdown, EmptyBox, PromiseComponent } from '../utils';\nimport { K8sKind, k8sPatch, NodeKind, Taint } from '../../module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory';\n\nclass TaintsModal extends PromiseComponent<TaintsModalProps, TaintsModalState> {\n  readonly state: TaintsModalState;\n\n  constructor(public props: TaintsModalProps) {\n    super(props);\n    // Add an empty row for editing if no taints exist.\n    this.state.taints = this.props.resource.spec.taints || [];\n  }\n\n  _submit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    const { taints } = this.state;\n\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = this.props.resource.spec.taints ? 'replace' : 'add';\n    const patch = [{ path: '/spec/taints', op, value: taints }];\n\n    this.handlePromise(k8sPatch(this.props.resourceKind, this.props.resource, patch)).then(\n      this.props.close,\n    );\n  };\n\n  _cancel = () => {\n    this.props.close();\n  };\n\n  _change = (e, i: number, field: string) => {\n    const newValue = e.target ? e.target.value : e;\n    this.setState((prevState: TaintsModalState) => {\n      const clonedTaints = _.cloneDeep(prevState.taints);\n      clonedTaints[i][field] = newValue;\n      return {\n        taints: clonedTaints,\n      };\n    });\n  };\n\n  _remove = (i: number) => {\n    this.setState((state: TaintsModalState) => {\n      const taints = [...state.taints];\n      taints.splice(i, 1);\n      return { taints };\n    });\n  };\n\n  _newTaint(): Taint {\n    return { key: '', value: '', effect: 'NoSchedule' };\n  }\n\n  _addRow = () => {\n    this.setState((state: TaintsModalState) => ({\n      taints: [...state.taints, this._newTaint()],\n    }));\n  };\n\n  render() {\n    const effects = {\n      NoSchedule: 'NoSchedule',\n      PreferNoSchedule: 'PreferNoSchedule',\n      NoExecute: 'NoExecute',\n    };\n    const { taints, errorMessage, inProgress } = this.state;\n    return (\n      <form\n        onSubmit={this._submit}\n        name=\"form\"\n        className=\"modal-content modal-content--accommodate-dropdown taint-modal\"\n      >\n        <ModalTitle>Edit Taints</ModalTitle>\n        <ModalBody>\n          {_.isEmpty(taints) ? (\n            <EmptyBox label=\"Taints\" />\n          ) : (\n            <>\n              <div className=\"row taint-modal__heading hidden-sm hidden-xs\">\n                <div className=\"col-sm-4 text-secondary text-uppercase\">Key</div>\n                <div className=\"col-sm-3 text-secondary text-uppercase\">Value</div>\n                <div className=\"col-sm-4 text-secondary text-uppercase\">Effect</div>\n                <div className=\"col-sm-1 co-empty__header\" />\n              </div>\n              {_.map(taints, (c, i) => (\n                <div className=\"row taint-modal__row\" key={i}>\n                  <div className=\"col-md-4 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Key\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control taint-modal__input\"\n                      value={c.key}\n                      onChange={(e) => this._change(e, i, 'key')}\n                      required\n                    />\n                  </div>\n                  <div className=\"col-md-3 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Value\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control taint-modal__input\"\n                      value={c.value}\n                      onChange={(e) => this._change(e, i, 'value')}\n                    />\n                  </div>\n                  <div className=\"clearfix visible-sm visible-xs\" />\n                  <div className=\"col-md-4 col-xs-5 taint-modal__field\">\n                    <div className=\"taint-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      Effect\n                    </div>\n                    <Dropdown\n                      className=\"taint-modal__dropdown\"\n                      dropDownClassName=\"dropdown--full-width\"\n                      items={effects}\n                      onChange={(e) => this._change(e, i, 'effect')}\n                      selectedKey={c.effect}\n                      title={effects[c.effect]}\n                    />\n                  </div>\n                  <div className=\"col-md-1 col-md-offset-0 col-sm-offset-10 col-xs-offset-10\">\n                    <Button\n                      type=\"button\"\n                      className=\"taint-modal__delete-icon\"\n                      onClick={() => this._remove(i)}\n                      aria-label=\"Delete\"\n                      variant=\"plain\"\n                    >\n                      <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </>\n          )}\n          <Button\n            className=\"pf-m-link--align-left\"\n            onClick={this._addRow}\n            type=\"button\"\n            variant=\"link\"\n          >\n            <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n            Add More\n          </Button>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={inProgress}\n          submitText=\"Save\"\n          cancel={this._cancel}\n        />\n      </form>\n    );\n  }\n}\n\nexport const taintsModal = createModalLauncher(TaintsModal);\n\ntype TaintsModalProps = {\n  resourceKind: K8sKind;\n  resource: NodeKind;\n} & ModalComponentProps;\n\ntype TaintsModalState = {\n  taints: Taint[];\n  inProgress: boolean;\n  errorMessage: string;\n};\n"]}]}