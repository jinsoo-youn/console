{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cron-job.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cron-job.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { ContainerTable, DetailsItem, Kebab, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, navFactory, pluralize } from './utils';\nimport { ResourceEventStream } from './events';\nimport { CronJobModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(CronJobModel), ...common];\nconst kind = 'CronJob';\nconst tableColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'hidden-xs'), classNames('col-lg-3', 'col-md-3', 'hidden-sm', 'hidden-xs'), classNames('col-lg-3', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\nconst CronJobTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_19'),\n            sortField: 'spec.schedule',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_20'),\n            sortField: 'spec.concurrencyPolicy',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_21'),\n            sortField: 'spec.startingDeadlineSeconds',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nCronJobTableHeader.displayName = 'CronJobTableHeader';\nconst CronJobTableRow = ({ obj: cronjob, index, key, style }) => {\n    return (React.createElement(TableRow, { id: cronjob.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: cronjob.metadata.name, title: cronjob.metadata.name, namespace: cronjob.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: cronjob.metadata.namespace, title: cronjob.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, cronjob.spec.schedule),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, _.get(cronjob.spec, 'concurrencyPolicy', '-')),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, _.get(cronjob.spec, 'startingDeadlineSeconds', '-')),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: cronjob }))));\n};\nconst CronJobDetails = ({ obj: cronjob }) => {\n    const { t } = useTranslation();\n    const job = cronjob.spec.jobTemplate;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(cronjob, t) }) }),\n                    React.createElement(ResourceSummary, { resource: cronjob },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_MAIN_TABLEHEADER_19'), obj: cronjob, path: \"spec.schedule\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_MAIN_TABLEHEADER_20'), obj: cronjob, path: \"spec.concurrencyPolicy\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_MAIN_TABLEHEADER_21'), obj: cronjob, path: \"spec.startingDeadlineSeconds\" }, cronjob.spec.startingDeadlineSeconds ? pluralize(cronjob.spec.startingDeadlineSeconds, 'second') : t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_33')),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_34'), obj: cronjob, path: \"status.lastScheduleTime\" },\n                            React.createElement(Timestamp, { timestamp: cronjob.status.lastScheduleTime })))),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(SectionHeading, { text: `${t('COMMON:MSG_LNB_MENU_29')} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}` }),\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_35'), obj: cronjob, path: \"spec.jobTemplate.spec.completions\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_36'), obj: cronjob, path: \"spec.jobTemplate.spec.parallelism\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_37'), obj: cronjob, path: \"spec.jobTemplate.spec.activeDeadlineSeconds\" }, job.spec.activeDeadlineSeconds ? pluralize(job.spec.activeDeadlineSeconds, 'second') : t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_33')))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }),\n            React.createElement(ContainerTable, { containers: job.spec.template.spec.containers }))));\n};\nexport const CronJobsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": CronJobModel.labelPlural, Header: CronJobTableHeader.bind(null, t), Row: CronJobTableRow, virtualize: true }));\n};\nexport const CronJobsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({}, props, { title: t('COMMON:MSG_LNB_MENU_28'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_28') }), ListComponent: CronJobsList, kind: kind, canCreate: true }));\n};\nexport const CronJobsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [navFactory.details(CronJobDetails), navFactory.editYaml(), navFactory.events(ResourceEventStream)] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cron-job.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cron-job.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { CronJobKind } from '../module/k8s';\nimport { ContainerTable, DetailsItem, Kebab, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, navFactory, pluralize } from './utils';\nimport { ResourceEventStream } from './events';\nimport { CronJobModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(CronJobModel), ...common];\n\nconst kind = 'CronJob';\n\nconst tableColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'hidden-xs'), classNames('col-lg-3', 'col-md-3', 'hidden-sm', 'hidden-xs'), classNames('col-lg-3', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\n\nconst CronJobTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_19'),\n      sortField: 'spec.schedule',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_20'),\n      sortField: 'spec.concurrencyPolicy',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_21'),\n      sortField: 'spec.startingDeadlineSeconds',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nCronJobTableHeader.displayName = 'CronJobTableHeader';\n\nconst CronJobTableRow: RowFunction<CronJobKind> = ({ obj: cronjob, index, key, style }) => {\n  return (\n    <TableRow id={cronjob.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={cronjob.metadata.name} title={cronjob.metadata.name} namespace={cronjob.metadata.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={cronjob.metadata.namespace} title={cronjob.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{cronjob.spec.schedule}</TableData>\n      <TableData className={tableColumnClasses[3]}>{_.get(cronjob.spec, 'concurrencyPolicy', '-')}</TableData>\n      <TableData className={tableColumnClasses[4]}>{_.get(cronjob.spec, 'startingDeadlineSeconds', '-')}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={cronjob} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst CronJobDetails: React.FC<CronJobDetailsProps> = ({ obj: cronjob }) => {\n  const { t } = useTranslation();\n  const job = cronjob.spec.jobTemplate;\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(cronjob, t) })} />\n            <ResourceSummary resource={cronjob}>\n              <DetailsItem label={t('COMMON:MSG_MAIN_TABLEHEADER_19')} obj={cronjob} path=\"spec.schedule\" />\n              <DetailsItem label={t('COMMON:MSG_MAIN_TABLEHEADER_20')} obj={cronjob} path=\"spec.concurrencyPolicy\" />\n              <DetailsItem label={t('COMMON:MSG_MAIN_TABLEHEADER_21')} obj={cronjob} path=\"spec.startingDeadlineSeconds\">\n                {cronjob.spec.startingDeadlineSeconds ? pluralize(cronjob.spec.startingDeadlineSeconds, 'second') : t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_33')}\n              </DetailsItem>\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_34')} obj={cronjob} path=\"status.lastScheduleTime\">\n                <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <SectionHeading text={`${t('COMMON:MSG_LNB_MENU_29')} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_35')} obj={cronjob} path=\"spec.jobTemplate.spec.completions\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_36')} obj={cronjob} path=\"spec.jobTemplate.spec.parallelism\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_37')} obj={cronjob} path=\"spec.jobTemplate.spec.activeDeadlineSeconds\">\n                {job.spec.activeDeadlineSeconds ? pluralize(job.spec.activeDeadlineSeconds, 'second') : t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_33')}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={job.spec.template.spec.containers} />\n      </div>\n    </>\n  );\n};\n\nexport const CronJobsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label={CronJobModel.labelPlural} Header={CronJobTableHeader.bind(null, t)} Row={CronJobTableRow} virtualize />;\n};\n\nexport const CronJobsPage: React.FC<CronJobsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage {...props} title={t('COMMON:MSG_LNB_MENU_28')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_28') })} ListComponent={CronJobsList} kind={kind} canCreate={true} />;\n};\n\nexport const CronJobsDetailsPage: React.FC<CronJobsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[navFactory.details(CronJobDetails), navFactory.editYaml(), navFactory.events(ResourceEventStream)]} />;\n\ntype CronJobDetailsProps = {\n  obj: CronJobKind;\n};\n\ntype CronJobsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype CronJobsDetailsPageProps = {\n  match: any;\n};\n"]}]}