{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/kinds.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/kinds.ts","mtime":1616735742490},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { kindForReference, isGroupVersionKind, allModels, getGroupVersionKind, } from './module/k8s';\nexport const connectToModel = connect((state, props) => {\n    const kind = props.kind || _.get(props, 'match.params.plural');\n    const kindObj = !_.isEmpty(kind)\n        ? state.k8s.getIn(['RESOURCES', 'models', kind]) ||\n            state.k8s.getIn(['RESOURCES', 'models', kindForReference(kind)])\n        : null;\n    return { kindObj, kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']) };\n});\n/**\n * @deprecated TODO(alecmerdler): `plural` is not a unique lookup key, remove uses of this.\n * FIXME(alecmerdler): Not returning correctly typed `WrappedComponent`\n */\nexport const connectToPlural = connect((state, props) => {\n    const plural = props.plural || _.get(props, 'match.params.plural');\n    const groupVersionKind = getGroupVersionKind(plural);\n    let kindObj = null;\n    if (groupVersionKind) {\n        const [group, version, kind] = groupVersionKind;\n        kindObj = allModels().find((model) => {\n            return model.apiGroup === group && model.apiVersion === version && model.kind === kind;\n        });\n        if (!kindObj) {\n            kindObj = state.k8s.getIn(['RESOURCES', 'models']).get(plural);\n        }\n    }\n    else {\n        kindObj = allModels().find((model) => model.plural === plural && (!model.crd || model.legacyPluralURL));\n    }\n    const modelRef = isGroupVersionKind(plural) ? plural : _.get(kindObj, 'kind');\n    return { kindObj, modelRef, kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']) };\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/kinds.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/kinds.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,OAAO,EAGL,gBAAgB,EAEhB,kBAAkB,EAClB,SAAS,EACT,mBAAmB,GACpB,MAAM,cAAc,CAAC;AAGtB,MAAM,CAAC,MAAM,cAAc,GAAG,OAAO,CACnC,CAAC,KAAgB,EAAE,KAA+C,EAAE,EAAE;IACpE,MAAM,IAAI,GAAW,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC;IAEvE,MAAM,OAAO,GAAY,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QACvC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC9C,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,QAAQ,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,IAAI,CAAC;IAET,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAS,CAAC;AACvF,CAAC,CACF,CAAC;AAcF;;;GAGG;AACH,MAAM,CAAC,MAAM,eAAe,GAAoB,OAAO,CACrD,CACE,KAAgB,EAChB,KAGC,EACD,EAAE;IACF,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC;IAEnE,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAErD,IAAI,OAAO,GAAY,IAAI,CAAC;IAC5B,IAAI,gBAAgB,EAAE;QACpB,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,gBAAgB,CAAC;QAChD,OAAO,GAAG,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,OAAO,KAAK,CAAC,QAAQ,KAAK,KAAK,IAAI,KAAK,CAAC,UAAU,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAChE;KACF;SAAM;QACL,OAAO,GAAG,SAAS,EAAE,CAAC,IAAI,CACxB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAC5E,CAAC;KACH;IAED,MAAM,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAE9E,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC;AAC1F,CAAC,CACF,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { match } from 'react-router-dom';\n\nimport {\n  K8sKind,\n  K8sResourceKindReference,\n  kindForReference,\n  GroupVersionKind,\n  isGroupVersionKind,\n  allModels,\n  getGroupVersionKind,\n} from './module/k8s';\nimport { RootState } from './redux';\n\nexport const connectToModel = connect(\n  (state: RootState, props: { kind: K8sResourceKindReference } & any) => {\n    const kind: string = props.kind || _.get(props, 'match.params.plural');\n\n    const kindObj: K8sKind = !_.isEmpty(kind)\n      ? state.k8s.getIn(['RESOURCES', 'models', kind]) ||\n        state.k8s.getIn(['RESOURCES', 'models', kindForReference(kind)])\n      : null;\n\n    return { kindObj, kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']) } as any;\n  },\n);\n\ntype WithPluralProps = {\n  kindObj?: K8sKind;\n  modelRef?: K8sResourceKindReference;\n  kindsInFlight?: boolean;\n};\n\nexport type ConnectToPlural = <P extends WithPluralProps>(\n  C: React.ComponentType<P>,\n) => React.ComponentType<Omit<P, keyof WithPluralProps>> & {\n  WrappedComponent: React.ComponentType<P>;\n};\n\n/**\n * @deprecated TODO(alecmerdler): `plural` is not a unique lookup key, remove uses of this.\n * FIXME(alecmerdler): Not returning correctly typed `WrappedComponent`\n */\nexport const connectToPlural: ConnectToPlural = connect(\n  (\n    state: RootState,\n    props: {\n      plural?: GroupVersionKind | string;\n      match: match<{ plural: GroupVersionKind | string }>;\n    },\n  ) => {\n    const plural = props.plural || _.get(props, 'match.params.plural');\n\n    const groupVersionKind = getGroupVersionKind(plural);\n\n    let kindObj: K8sKind = null;\n    if (groupVersionKind) {\n      const [group, version, kind] = groupVersionKind;\n      kindObj = allModels().find((model) => {\n        return model.apiGroup === group && model.apiVersion === version && model.kind === kind;\n      });\n\n      if (!kindObj) {\n        kindObj = state.k8s.getIn(['RESOURCES', 'models']).get(plural);\n      }\n    } else {\n      kindObj = allModels().find(\n        (model) => model.plural === plural && (!model.crd || model.legacyPluralURL),\n      );\n    }\n\n    const modelRef = isGroupVersionKind(plural) ? plural : _.get(kindObj, 'kind');\n\n    return { kindObj, modelRef, kindsInFlight: state.k8s.getIn(['RESOURCES', 'inFlight']) };\n  },\n);\n"]}]}