{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tags.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tags.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { k8sPatch } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { NameValueEditorPair, withHandlePromise } from '../utils';\nimport { AsyncComponent } from '../utils/async';\n/**\n * Set up an AsyncComponent to wrap the name-value-editor to allow on demand loading to reduce the\n * vendor footprint size.\n */\nconst NameValueEditorComponent = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('../utils/name-value-editor').then((c) => c.NameValueEditor) }, props)));\nexport const TagsModal = withHandlePromise((props) => {\n    // Track tags as an array instead of an object / Map so we can preserve the order during editing and so we can have\n    // duplicate keys during editing. However, the ordering and any duplicate keys are lost when the form is submitted.\n    const [tags, setTags] = React.useState(_.isEmpty(props.tags) ? [['', '']] : _.toPairs(props.tags));\n    const [errorMessage, setErrorMessage] = React.useState(props.errorMessage);\n    const submit = (e) => {\n        e.preventDefault();\n        // We just throw away any rows where the key is blank\n        const usedTags = _.reject(tags, (t) => _.isEmpty(t[NameValueEditorPair.Name]));\n        const keys = usedTags.map((t) => t[NameValueEditorPair.Name]);\n        if (_.uniq(keys).length !== keys.length) {\n            setErrorMessage('Duplicate keys found.');\n            return;\n        }\n        // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n        const op = props.tags ? 'replace' : 'add';\n        const patch = [{ path: props.path, op, value: _.fromPairs(usedTags) }];\n        const promise = k8sPatch(props.kind, props.resource, patch);\n        props.handlePromise(promise).then(props.close);\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, className: \"modal-content\" },\n        React.createElement(ModalTitle, null, props.title),\n        React.createElement(ModalBody, null,\n            React.createElement(NameValueEditorComponent, { nameValuePairs: tags, submit: submit, updateParentData: ({ nameValuePairs }) => setTags(nameValuePairs) })),\n        React.createElement(ModalSubmitFooter, { submitText: \"Save\", cancel: props.cancel, errorMessage: props.errorMessage || errorMessage, inProgress: props.inProgress })));\n});\nexport const annotationsModal = createModalLauncher((props) => (React.createElement(TagsModal, Object.assign({ path: \"/metadata/annotations\", tags: props.resource.metadata.annotations, title: \"Edit Annotations\" }, props))));\nTagsModal.displayName = 'TagsModal';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tags.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/tags.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { k8sPatch, K8sResourceKind, K8sKind } from '../../module/k8s';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { NameValueEditorPair, withHandlePromise } from '../utils';\nimport { AsyncComponent } from '../utils/async';\n\n/**\n * Set up an AsyncComponent to wrap the name-value-editor to allow on demand loading to reduce the\n * vendor footprint size.\n */\nconst NameValueEditorComponent = (props) => (\n  <AsyncComponent\n    loader={() => import('../utils/name-value-editor').then((c) => c.NameValueEditor)}\n    {...props}\n  />\n);\n\nexport const TagsModal = withHandlePromise((props: TagsModalProps) => {\n  // Track tags as an array instead of an object / Map so we can preserve the order during editing and so we can have\n  // duplicate keys during editing. However, the ordering and any duplicate keys are lost when the form is submitted.\n  const [tags, setTags] = React.useState(\n    _.isEmpty(props.tags) ? [['', '']] : _.toPairs(props.tags),\n  );\n  const [errorMessage, setErrorMessage] = React.useState(props.errorMessage);\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    // We just throw away any rows where the key is blank\n    const usedTags = _.reject(tags, (t) => _.isEmpty(t[NameValueEditorPair.Name]));\n\n    const keys = usedTags.map((t) => t[NameValueEditorPair.Name]);\n    if (_.uniq(keys).length !== keys.length) {\n      setErrorMessage('Duplicate keys found.');\n      return;\n    }\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = props.tags ? 'replace' : 'add';\n    const patch = [{ path: props.path, op, value: _.fromPairs(usedTags) }];\n    const promise = k8sPatch(props.kind, props.resource, patch);\n    props.handlePromise(promise).then(props.close);\n  };\n\n  return (\n    <form onSubmit={submit} className=\"modal-content\">\n      <ModalTitle>{props.title}</ModalTitle>\n      <ModalBody>\n        <NameValueEditorComponent\n          nameValuePairs={tags}\n          submit={submit}\n          updateParentData={({ nameValuePairs }) => setTags(nameValuePairs)}\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText=\"Save\"\n        cancel={props.cancel}\n        errorMessage={props.errorMessage || errorMessage}\n        inProgress={props.inProgress}\n      />\n    </form>\n  );\n});\n\nexport const annotationsModal = createModalLauncher((props: AnnotationsModalProps) => (\n  <TagsModal\n    path=\"/metadata/annotations\"\n    tags={props.resource.metadata.annotations}\n    title=\"Edit Annotations\"\n    {...props}\n  />\n));\n\ntype TagsModalProps = {\n  tags?: { [key: string]: string };\n  path: string;\n  title: string;\n  kind: K8sKind;\n  resource: K8sResourceKind;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype AnnotationsModalProps = Omit<TagsModalProps, 'path' | 'tags' | 'title'>;\n\nTagsModal.displayName = 'TagsModal';\n"]}]}