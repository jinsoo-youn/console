{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/DeleteResourceModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/DeleteResourceModal.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { PromiseComponent, history } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory/modal';\nimport { Formik } from 'formik';\nimport { YellowExclamationTriangleIcon, InputField } from '@console/shared';\nconst DeleteResourceForm = ({ handleSubmit, resourceName, resourceType, actionLabel = 'Delete', isSubmitting, cancel, values, status, }) => {\n    const isValid = values.resourceName === resourceName;\n    return (React.createElement(\"form\", { onSubmit: handleSubmit, className: \"modal-content modal-content--no-inner-scroll\" },\n        React.createElement(ModalTitle, null,\n            React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r\" }),\n            \" \",\n            actionLabel,\n            \" \",\n            resourceType,\n            \"?\"),\n        React.createElement(ModalBody, null,\n            React.createElement(\"p\", null, \"This action cannot be undone. All associated Deployments, Routes, Builds, Pipelines, Storage/PVC's, secrets, and configmaps will be deleted.\"),\n            React.createElement(\"p\", null,\n                \"Confirm deletion by typing \",\n                React.createElement(\"strong\", { className: \"co-break-word\" }, resourceName),\n                ' ',\n                \"below:\"),\n            React.createElement(InputField, { type: TextInputTypes.text, name: \"resourceName\" })),\n        React.createElement(ModalSubmitFooter, { submitText: actionLabel, submitDisabled: (status && !!status.submitError) || !isValid, cancel: cancel, inProgress: isSubmitting, submitDanger: true, errorMessage: status && status.submitError })));\n};\nclass DeleteResourceModal extends PromiseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleSubmit = (values, actions) => {\n            actions.setSubmitting(true);\n            const { onSubmit, close, redirect } = this.props;\n            onSubmit &&\n                this.handlePromise(onSubmit(values))\n                    .then(() => {\n                    actions.setSubmitting(false);\n                    close();\n                    redirect && history.push(redirect);\n                })\n                    .catch((errorMessage) => {\n                    actions.setSubmitting(false);\n                    actions.setStatus({ submitError: errorMessage });\n                });\n        };\n    }\n    render() {\n        const initialValues = {\n            resourceName: '',\n        };\n        return (React.createElement(Formik, { initialValues: initialValues, onSubmit: this.handleSubmit }, (formProps) => React.createElement(DeleteResourceForm, Object.assign({}, formProps, this.props))));\n    }\n}\nexport const deleteResourceModal = createModalLauncher((props) => (React.createElement(DeleteResourceModal, Object.assign({}, props))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/DeleteResourceModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/modals/DeleteResourceModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { PromiseComponent, history } from '@console/internal/components/utils';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { YellowExclamationTriangleIcon, InputField } from '@console/shared';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\ntype DeleteResourceModalProps = {\n  resourceName: string;\n  resourceType: string;\n  actionLabel?: string;\n  redirect?: string;\n  onSubmit: (values: FormikValues) => Promise<K8sResourceKind[]>;\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype DeleteResourceModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst DeleteResourceForm: React.FC<FormikProps<FormikValues> & DeleteResourceModalProps> = ({\n  handleSubmit,\n  resourceName,\n  resourceType,\n  actionLabel = 'Delete',\n  isSubmitting,\n  cancel,\n  values,\n  status,\n}) => {\n  const isValid = values.resourceName === resourceName;\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content modal-content--no-inner-scroll\">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" /> {actionLabel} {resourceType}?\n      </ModalTitle>\n      <ModalBody>\n        <p>\n          This action cannot be undone. All associated Deployments, Routes, Builds, Pipelines,\n          Storage/PVC&#39;s, secrets, and configmaps will be deleted.\n        </p>\n        <p>\n          Confirm deletion by typing <strong className=\"co-break-word\">{resourceName}</strong>{' '}\n          below:\n        </p>\n        <InputField type={TextInputTypes.text} name=\"resourceName\" />\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={actionLabel}\n        submitDisabled={(status && !!status.submitError) || !isValid}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        submitDanger\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass DeleteResourceModal extends PromiseComponent<\n  DeleteResourceModalProps,\n  DeleteResourceModalState\n> {\n  private handleSubmit = (values, actions) => {\n    actions.setSubmitting(true);\n    const { onSubmit, close, redirect } = this.props;\n    onSubmit &&\n      this.handlePromise(onSubmit(values))\n        .then(() => {\n          actions.setSubmitting(false);\n          close();\n          redirect && history.push(redirect);\n        })\n        .catch((errorMessage) => {\n          actions.setSubmitting(false);\n          actions.setStatus({ submitError: errorMessage });\n        });\n  };\n\n  render() {\n    const initialValues = {\n      resourceName: '',\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formProps) => <DeleteResourceForm {...formProps} {...this.props} />}\n      </Formik>\n    );\n  }\n}\n\nexport const deleteResourceModal = createModalLauncher((props: DeleteResourceModalProps) => (\n  <DeleteResourceModal {...props} />\n));\n"]}]}