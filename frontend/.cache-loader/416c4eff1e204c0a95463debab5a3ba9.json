{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/groupActions.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/groupActions.ts","mtime":1617154808360},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { ServiceModel, addEventSource } from '@console/knative-plugin';\nimport { addResourceMenuWithoutCatalog } from '../../../actions/add-resources';\nimport { getTopologyResourceObject } from '../topology-utils';\nimport { deleteResourceModal } from '../../modals';\nimport { cleanUpWorkload } from '../../../utils/application-utils';\nexport const getGroupComponents = (groupId, topology) => {\n    return _.values(topology).reduce((acc, val) => {\n        const dc = getTopologyResourceObject(val);\n        if (_.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']) === groupId) {\n            acc.resources.push(topology[dc.metadata.uid]);\n        }\n        return acc;\n    }, { id: groupId, name: groupId, resources: [] });\n};\nconst deleteGroup = (application) => {\n    // accessReview needs a resource but group is not a k8s resource,\n    // so currently picking the first resource to do the rbac checks (might change in future)\n    const primaryResource = _.get(application.resources[0], ['resources', 'obj']);\n    const resourceModel = modelFor(primaryResource.kind) ? modelFor(primaryResource.kind) : modelFor(referenceFor(primaryResource));\n    return {\n        label: 'Delete Application',\n        callback: () => {\n            const reqs = [];\n            deleteResourceModal({\n                blocking: true,\n                resourceName: application.name,\n                resourceType: 'Application',\n                onSubmit: () => {\n                    application.resources.forEach(workload => {\n                        const resource = _.get(workload, ['resources', 'obj']);\n                        reqs.push(cleanUpWorkload(resource, workload));\n                    });\n                    return Promise.all(reqs);\n                },\n            });\n        },\n        accessReview: asAccessReview(resourceModel, primaryResource, 'delete'),\n    };\n};\nconst addResourcesMenu = (graphData, application, connectorSource) => {\n    var _a, _b, _c, _d, _e, _f;\n    const primaryResource = (_b = (_a = application.resources[0]) === null || _a === void 0 ? void 0 : _a.resources) === null || _b === void 0 ? void 0 : _b.obj;\n    const connectorSourceObj = ((_d = (_c = connectorSource === null || connectorSource === void 0 ? void 0 : connectorSource.getData()) === null || _c === void 0 ? void 0 : _c.resources) === null || _d === void 0 ? void 0 : _d.obj) || {};\n    const isKnativeService = ((_f = (_e = connectorSource === null || connectorSource === void 0 ? void 0 : connectorSource.getData()) === null || _e === void 0 ? void 0 : _e.data) === null || _f === void 0 ? void 0 : _f.kind) === referenceForModel(ServiceModel);\n    let resourceMenu = addResourceMenuWithoutCatalog;\n    if (isKnativeService && graphData.eventSourceEnabled) {\n        resourceMenu = [...addResourceMenuWithoutCatalog, addEventSource];\n    }\n    return _.reduce(resourceMenu, (menuItems, menuItem) => {\n        var _a, _b;\n        const item = menuItem(primaryResource, (_b = (_a = application.resources[0]) === null || _a === void 0 ? void 0 : _a.resources) === null || _b === void 0 ? void 0 : _b.obj.metadata.namespace, true, connectorSourceObj, graphData.createResourceAccess);\n        if (item) {\n            menuItems.push(item);\n        }\n        return menuItems;\n    }, []);\n};\nexport const groupActions = (graphData, application, connectorSource) => {\n    const addItems = addResourcesMenu(graphData, application, connectorSource);\n    return !connectorSource ? [deleteGroup(application), ...addItems] : addItems;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/groupActions.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/actions/groupActions.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { Node } from '@console/topology';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { ServiceModel, addEventSource } from '@console/knative-plugin';\nimport { addResourceMenuWithoutCatalog } from '../../../actions/add-resources';\nimport { TopologyDataMap, TopologyApplicationObject, GraphData } from '../topology-types';\nimport { getTopologyResourceObject } from '../topology-utils';\nimport { deleteResourceModal } from '../../modals';\nimport { cleanUpWorkload } from '../../../utils/application-utils';\n\nexport const getGroupComponents = (groupId: string, topology: TopologyDataMap): TopologyApplicationObject => {\n  return _.values(topology).reduce(\n    (acc, val) => {\n      const dc = getTopologyResourceObject(val);\n      if (_.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']) === groupId) {\n        acc.resources.push(topology[dc.metadata.uid]);\n      }\n      return acc;\n    },\n    { id: groupId, name: groupId, resources: [] },\n  );\n};\n\nconst deleteGroup = (application: TopologyApplicationObject) => {\n  // accessReview needs a resource but group is not a k8s resource,\n  // so currently picking the first resource to do the rbac checks (might change in future)\n  const primaryResource = _.get(application.resources[0], ['resources', 'obj']);\n  const resourceModel = modelFor(primaryResource.kind) ? modelFor(primaryResource.kind) : modelFor(referenceFor(primaryResource));\n  return {\n    label: 'Delete Application',\n    callback: () => {\n      const reqs = [];\n      deleteResourceModal({\n        blocking: true,\n        resourceName: application.name,\n        resourceType: 'Application',\n        onSubmit: () => {\n          application.resources.forEach(workload => {\n            const resource = _.get(workload, ['resources', 'obj']);\n            reqs.push(cleanUpWorkload(resource, workload));\n          });\n          return Promise.all(reqs);\n        },\n      });\n    },\n    accessReview: asAccessReview(resourceModel, primaryResource, 'delete'),\n  };\n};\n\nconst addResourcesMenu = (graphData: GraphData, application: TopologyApplicationObject, connectorSource?: Node) => {\n  const primaryResource = application.resources[0]?.resources?.obj;\n  const connectorSourceObj = connectorSource?.getData()?.resources?.obj || {};\n  const isKnativeService = connectorSource?.getData()?.data?.kind === referenceForModel(ServiceModel);\n  let resourceMenu = addResourceMenuWithoutCatalog;\n  if (isKnativeService && graphData.eventSourceEnabled) {\n    resourceMenu = [...addResourceMenuWithoutCatalog, addEventSource];\n  }\n  return _.reduce(\n    resourceMenu,\n    (menuItems, menuItem) => {\n      const item = menuItem(primaryResource, application.resources[0]?.resources?.obj.metadata.namespace, true, connectorSourceObj, graphData.createResourceAccess);\n      if (item) {\n        menuItems.push(item);\n      }\n      return menuItems;\n    },\n    [],\n  );\n};\n\nexport const groupActions = (graphData: GraphData, application: TopologyApplicationObject, connectorSource?: Node): KebabOption[] => {\n  const addItems = addResourcesMenu(graphData, application, connectorSource);\n  return !connectorSource ? [deleteGroup(application), ...addItems] : addItems;\n};\n"]}]}