{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/k8s-watch-hook.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/k8s-watch-hook.ts","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport { makeQuery, makeReduxID } from './k8s-watcher';\nimport * as k8sActions from '../../actions/k8s';\nexport class NoModelError extends Error {\n    constructor() {\n        super('Model does not exist');\n    }\n}\nconst getIDAndDispatch = (resource, k8sModel) => {\n    if (!k8sModel || !resource) {\n        return null;\n    }\n    const query = makeQuery(resource.namespace, resource.selector, resource.fieldSelector, resource.name, resource.limit);\n    const id = makeReduxID(k8sModel, query);\n    const dispatch = resource.isList\n        ? k8sActions.watchK8sList(id, query, k8sModel)\n        : k8sActions.watchK8sObject(id, resource.name, resource.namespace, query, k8sModel);\n    return { id, dispatch };\n};\nconst getReduxData = (immutableData, resource) => {\n    if (!immutableData) {\n        return null;\n    }\n    if (resource.isList) {\n        return immutableData.toArray().map((a) => a.toJSON());\n    }\n    else if (immutableData.toJSON) {\n        return immutableData.toJSON();\n    }\n    return null;\n};\nconst useModelsLoaded = () => {\n    const ref = React.useRef(false);\n    const k8sModels = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'models']));\n    const inFlight = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']));\n    if (!ref.current && k8sModels.size && !inFlight) {\n        ref.current = true;\n    }\n    return ref.current;\n};\nexport const useK8sWatchResource = (resource) => {\n    const modelsLoaded = useModelsLoaded();\n    const k8sModel = useSelector(({ k8s }) => resource ? k8s.getIn(['RESOURCES', 'models', resource.kind]) : null);\n    const reduxID = React.useMemo(() => getIDAndDispatch(resource, k8sModel), [k8sModel, resource]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        if (reduxID) {\n            dispatch(reduxID.dispatch);\n        }\n        return () => {\n            if (reduxID) {\n                dispatch(k8sActions.stopK8sWatch(reduxID.id));\n            }\n        };\n    }, [dispatch, reduxID]);\n    const resourceK8s = useSelector(({ k8s }) => reduxID ? k8s.get(reduxID.id) : null);\n    return React.useMemo(() => {\n        if (!resourceK8s) {\n            const data = (resource === null || resource === void 0 ? void 0 : resource.isList) ? [] : {};\n            return modelsLoaded && !k8sModel\n                ? [data, true, new NoModelError()]\n                : [data, false, undefined];\n        }\n        const data = getReduxData(resourceK8s.get('data'), resource);\n        const loaded = resourceK8s.get('loaded');\n        const loadError = resourceK8s.get('loadError');\n        return [data, loaded, loadError];\n    }, [resourceK8s, resource, modelsLoaded, k8sModel]);\n};\nexport const useK8sWatchResources = (resources) => {\n    const modelsLoaded = useModelsLoaded();\n    const k8sModelSelectorCreator = React.useMemo(() => createSelectorCreator(\n    //specifying createSelectorCreator<ImmutableMap<string, any>> throws type error\n    defaultMemoize, (oldModels, newModels) => Object.values(resources).every(({ kind }) => oldModels.get(kind) === newModels.get(kind))), [resources]);\n    const k8sModelSelector = React.useMemo(() => k8sModelSelectorCreator((state) => state.k8s.getIn(['RESOURCES', 'models']), (models) => {\n        const requiredModels = Object.values(resources).map((r) => r.kind);\n        return models.filter((model, key) => requiredModels.includes(key));\n    }), [k8sModelSelectorCreator, resources]);\n    const k8sModels = useSelector(k8sModelSelector);\n    const hasAllModelsLoaded = React.useMemo(() => modelsLoaded || k8sModels.every((m) => !!m), [\n        k8sModels,\n        modelsLoaded,\n    ]);\n    const reduxIDs = React.useMemo(() => hasAllModelsLoaded\n        ? Object.keys(resources).reduce((ids, key) => {\n            const idAndDispatch = getIDAndDispatch(resources[key], k8sModels.get(resources[key].kind));\n            if (idAndDispatch) {\n                ids[key] = idAndDispatch;\n            }\n            return ids;\n        }, {})\n        : {}, [resources, k8sModels, hasAllModelsLoaded]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        Object.keys(reduxIDs)\n            .filter((k) => !!reduxIDs[k])\n            .forEach((k) => dispatch(reduxIDs[k].dispatch));\n        return () => {\n            Object.keys(reduxIDs)\n                .filter((k) => !!reduxIDs[k])\n                .forEach((k) => dispatch(k8sActions.stopK8sWatch(reduxIDs[k].id)));\n        };\n    }, [dispatch, reduxIDs]);\n    const resourceK8sSelectorCreator = React.useMemo(() => createSelectorCreator(\n    //specifying createSelectorCreator<ImmutableMap<string, K8sKind>> throws type error\n    defaultMemoize, (oldK8s, newK8s) => Object.keys(reduxIDs)\n        .filter((id) => !!id)\n        .every((k) => oldK8s.get(reduxIDs[k].id) === newK8s.get(reduxIDs[k].id))), [reduxIDs]);\n    const resourceK8sSelector = React.useMemo(() => resourceK8sSelectorCreator((state) => state.k8s, (k8s) => k8s), [resourceK8sSelectorCreator]);\n    const resourceK8s = useSelector(resourceK8sSelector);\n    const noModels = modelsLoaded && !Object.keys(reduxIDs).length;\n    const results = React.useMemo(() => {\n        if (Object.keys(reduxIDs).length) {\n            return Object.keys(resources).reduce((acc, key) => {\n                if (reduxIDs[key] && resourceK8s.has(reduxIDs[key].id)) {\n                    const data = getReduxData(resourceK8s.getIn([reduxIDs[key].id, 'data']), resources[key]);\n                    const loaded = resourceK8s.getIn([reduxIDs[key].id, 'loaded']);\n                    const loadError = resourceK8s.getIn([reduxIDs[key].id, 'loadError']);\n                    acc[key] = { data, loaded, loadError };\n                }\n                else {\n                    acc[key] = {\n                        data: resources[key].isList ? [] : {},\n                        loaded: true,\n                        loadError: new NoModelError(),\n                    };\n                }\n                return acc;\n            }, {});\n        }\n        return Object.keys(resources).reduce((acc, key) => {\n            const data = resources[key].isList ? [] : {};\n            acc[key] = noModels\n                ? { data, loaded: true, loadError: new NoModelError() }\n                : { data, loaded: false, loadError: undefined };\n            return acc;\n        }, {});\n    }, [reduxIDs, resources, resourceK8s, noModels]);\n    return results;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/k8s-watch-hook.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/k8s-watch-hook.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch, Dispatch } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport { makeQuery, makeReduxID } from './k8s-watcher';\nimport * as k8sActions from '../../actions/k8s';\nimport { K8sResourceCommon, K8sKind, K8sResourceKindReference, Selector } from '../../module/k8s';\nimport { RootState } from '../../redux';\nimport { K8sState } from '../../reducers/k8s';\n\nexport class NoModelError extends Error {\n  constructor() {\n    super('Model does not exist');\n  }\n}\n\nconst getIDAndDispatch: GetIDAndDispatch = (resource, k8sModel) => {\n  if (!k8sModel || !resource) {\n    return null;\n  }\n  const query = makeQuery(\n    resource.namespace,\n    resource.selector,\n    resource.fieldSelector,\n    resource.name,\n    resource.limit,\n  );\n  const id = makeReduxID(k8sModel, query);\n  const dispatch = resource.isList\n    ? k8sActions.watchK8sList(id, query, k8sModel)\n    : k8sActions.watchK8sObject(id, resource.name, resource.namespace, query, k8sModel);\n  return { id, dispatch };\n};\n\nconst getReduxData = (immutableData, resource: WatchK8sResource) => {\n  if (!immutableData) {\n    return null;\n  }\n  if (resource.isList) {\n    return immutableData.toArray().map((a) => a.toJSON());\n  } else if (immutableData.toJSON) {\n    return immutableData.toJSON();\n  }\n  return null;\n};\n\nconst useModelsLoaded = (): boolean => {\n  const ref = React.useRef(false);\n  const k8sModels = useSelector<RootState, K8sKind>(({ k8s }) =>\n    k8s.getIn(['RESOURCES', 'models']),\n  );\n  const inFlight = useSelector<RootState, K8sKind>(({ k8s }) =>\n    k8s.getIn(['RESOURCES', 'inFlight']),\n  );\n\n  if (!ref.current && k8sModels.size && !inFlight) {\n    ref.current = true;\n  }\n  return ref.current;\n};\n\nexport const useK8sWatchResource = <R extends K8sResourceCommon | K8sResourceCommon[]>(\n  resource: WatchK8sResource,\n): WatchK8sResult<R> => {\n  const modelsLoaded = useModelsLoaded();\n\n  const k8sModel = useSelector<RootState, K8sKind>(({ k8s }) =>\n    resource ? k8s.getIn(['RESOURCES', 'models', resource.kind]) : null,\n  );\n\n  const reduxID = React.useMemo(() => getIDAndDispatch(resource, k8sModel), [k8sModel, resource]);\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    if (reduxID) {\n      dispatch(reduxID.dispatch);\n    }\n    return () => {\n      if (reduxID) {\n        dispatch(k8sActions.stopK8sWatch(reduxID.id));\n      }\n    };\n  }, [dispatch, reduxID]);\n\n  const resourceK8s = useSelector<RootState, ImmutableMap<string, any>>(({ k8s }) =>\n    reduxID ? k8s.get(reduxID.id) : null,\n  );\n\n  return React.useMemo(() => {\n    if (!resourceK8s) {\n      const data = resource?.isList ? [] : {};\n      return modelsLoaded && !k8sModel\n        ? [data, true, new NoModelError()]\n        : [data, false, undefined];\n    }\n\n    const data = getReduxData(resourceK8s.get('data'), resource);\n    const loaded = resourceK8s.get('loaded');\n    const loadError = resourceK8s.get('loadError');\n    return [data, loaded, loadError];\n  }, [resourceK8s, resource, modelsLoaded, k8sModel]);\n};\n\nexport const useK8sWatchResources = <R extends ResourcesObject>(\n  resources: WatchK8sResources<R>,\n): WatchK8sResults<R> => {\n  const modelsLoaded = useModelsLoaded();\n  const k8sModelSelectorCreator = React.useMemo(\n    () =>\n      createSelectorCreator(\n        //specifying createSelectorCreator<ImmutableMap<string, any>> throws type error\n        defaultMemoize as any,\n        (oldModels: ImmutableMap<string, any>, newModels: ImmutableMap<string, any>) =>\n          Object.values(resources).every(({ kind }) => oldModels.get(kind) === newModels.get(kind)),\n      ),\n    [resources],\n  );\n\n  const k8sModelSelector = React.useMemo(\n    () =>\n      k8sModelSelectorCreator(\n        (state: RootState) => state.k8s.getIn(['RESOURCES', 'models']),\n        (models) => {\n          const requiredModels = Object.values(resources).map((r) => r.kind);\n          return models.filter((model, key) => requiredModels.includes(key));\n        },\n      ),\n    [k8sModelSelectorCreator, resources],\n  );\n\n  const k8sModels = useSelector<RootState, ImmutableMap<string, any>>(k8sModelSelector);\n  const hasAllModelsLoaded = React.useMemo(() => modelsLoaded || k8sModels.every((m) => !!m), [\n    k8sModels,\n    modelsLoaded,\n  ]);\n\n  const reduxIDs = React.useMemo(\n    () =>\n      hasAllModelsLoaded\n        ? Object.keys(resources).reduce((ids, key) => {\n            const idAndDispatch = getIDAndDispatch(\n              resources[key],\n              k8sModels.get(resources[key].kind),\n            );\n            if (idAndDispatch) {\n              ids[key] = idAndDispatch;\n            }\n            return ids;\n          }, {})\n        : {},\n    [resources, k8sModels, hasAllModelsLoaded],\n  );\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    Object.keys(reduxIDs)\n      .filter((k) => !!reduxIDs[k])\n      .forEach((k) => dispatch(reduxIDs[k].dispatch));\n    return () => {\n      Object.keys(reduxIDs)\n        .filter((k) => !!reduxIDs[k])\n        .forEach((k) => dispatch(k8sActions.stopK8sWatch(reduxIDs[k].id)));\n    };\n  }, [dispatch, reduxIDs]);\n\n  const resourceK8sSelectorCreator = React.useMemo(\n    () =>\n      createSelectorCreator(\n        //specifying createSelectorCreator<ImmutableMap<string, K8sKind>> throws type error\n        defaultMemoize as any,\n        (oldK8s: ImmutableMap<string, K8sKind>, newK8s: ImmutableMap<string, K8sKind>) =>\n          Object.keys(reduxIDs)\n            .filter((id) => !!id)\n            .every((k) => oldK8s.get(reduxIDs[k].id) === newK8s.get(reduxIDs[k].id)),\n      ),\n    [reduxIDs],\n  );\n\n  const resourceK8sSelector = React.useMemo(\n    () =>\n      resourceK8sSelectorCreator(\n        (state: RootState) => state.k8s,\n        (k8s) => k8s,\n      ),\n    [resourceK8sSelectorCreator],\n  );\n\n  const resourceK8s = useSelector<RootState, K8sState>(resourceK8sSelector);\n  const noModels = modelsLoaded && !Object.keys(reduxIDs).length;\n\n  const results = React.useMemo<WatchK8sResults<R>>(() => {\n    if (Object.keys(reduxIDs).length) {\n      return Object.keys(resources).reduce((acc, key) => {\n        if (reduxIDs[key] && resourceK8s.has(reduxIDs[key].id)) {\n          const data = getReduxData(resourceK8s.getIn([reduxIDs[key].id, 'data']), resources[key]);\n          const loaded = resourceK8s.getIn([reduxIDs[key].id, 'loaded']);\n          const loadError = resourceK8s.getIn([reduxIDs[key].id, 'loadError']);\n          acc[key] = { data, loaded, loadError };\n        } else {\n          acc[key] = {\n            data: resources[key].isList ? [] : {},\n            loaded: true,\n            loadError: new NoModelError(),\n          };\n        }\n        return acc;\n      }, {} as any);\n    }\n    return Object.keys(resources).reduce((acc, key) => {\n      const data = resources[key].isList ? [] : {};\n      acc[key] = noModels\n        ? { data, loaded: true, loadError: new NoModelError() }\n        : { data, loaded: false, loadError: undefined };\n      return acc;\n    }, {});\n  }, [reduxIDs, resources, resourceK8s, noModels]);\n\n  return results;\n};\n\ntype GetIDAndDispatch = (\n  resource: WatchK8sResource,\n  k8sModel: K8sKind,\n) => { id: string; dispatch: (dispatch: Dispatch, getState: () => RootState) => void };\n\nexport type ResourcesObject = { [key: string]: K8sResourceCommon | K8sResourceCommon[] };\n\nexport type WatchK8sResult<R extends K8sResourceCommon | K8sResourceCommon[]> = [R, boolean, any];\n\nexport type WatchK8sResultsObject<R extends K8sResourceCommon | K8sResourceCommon[]> = {\n  data: R;\n  loaded: boolean;\n  loadError: any;\n};\n\nexport type WatchK8sResults<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResultsObject<R[k]>;\n};\n\nexport type WatchK8sResources<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResource;\n};\n\nexport type WatchK8sResource = {\n  kind: K8sResourceKindReference;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  namespaced?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n  optional?: boolean;\n};\n"]}]}