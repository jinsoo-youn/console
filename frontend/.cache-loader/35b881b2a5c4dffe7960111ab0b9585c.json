{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/yaml-editor-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/yaml-editor-utils.ts","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as URL from 'url';\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter, } from 'monaco-languageclient/lib/monaco-converter';\nimport { getLanguageService, TextDocument } from 'yaml-language-server';\nimport { openAPItoJSONSchema } from '@console/internal/module/k8s/openapi-to-json-schema';\nimport { getStoredSwagger } from '@console/internal/module/k8s/swagger';\nimport { global_BackgroundColor_100 as lineNumberActiveForeground, global_BackgroundColor_300 as lineNumberForeground, global_BackgroundColor_dark_100 as editorBackground, } from '@patternfly/react-tokens';\nwindow.monaco.editor.defineTheme('console', {\n    base: 'vs-dark',\n    inherit: true,\n    rules: [\n        // avoid pf tokens for `rules` since tokens are opaque strings that might not be hex values\n        { token: 'number', foreground: 'ace12e' },\n        { token: 'type', foreground: '73bcf7' },\n        { token: 'string', foreground: 'f0ab00' },\n        { token: 'keyword', foreground: 'cbc0ff' },\n    ],\n    colors: {\n        'editor.background': editorBackground.value,\n        'editorGutter.background': '#292e34',\n        'editorLineNumber.activeForeground': lineNumberActiveForeground.value,\n        'editorLineNumber.foreground': lineNumberForeground.value,\n    },\n});\nexport const defaultEditorOptions = { readOnly: false, scrollBeyondLastLine: false };\n// Unfortunately, `editor.focus()` doesn't work when hiding the shortcuts\n// popover. We need to find the actual DOM element.\nexport const hackyFocusEditor = () => setTimeout(() => { var _a; return (_a = document.querySelector('.monaco-editor textarea')) === null || _a === void 0 ? void 0 : _a.focus(); });\nexport const registerYAMLLanguage = (monaco) => {\n    // register the YAML language with Monaco\n    monaco.languages.register({\n        id: 'yaml',\n        extensions: ['.yml', '.yaml'],\n        aliases: ['YAML', 'yaml'],\n        mimetypes: ['application/yaml'],\n    });\n};\nexport const createYAMLService = () => {\n    const resolveSchema = (url) => {\n        const promise = new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.onload = () => resolve(xhr.responseText);\n            xhr.onerror = () => reject(xhr.statusText);\n            xhr.open('GET', url, true);\n            xhr.send();\n        });\n        return promise;\n    };\n    const workspaceContext = {\n        resolveRelativePath: (relativePath, resource) => URL.resolve(resource, relativePath),\n    };\n    const yamlService = getLanguageService(resolveSchema, workspaceContext, []);\n    // Prepare the schema\n    const yamlOpenAPI = getStoredSwagger();\n    // Convert the openAPI schema to something the language server understands\n    const kubernetesJSONSchema = openAPItoJSONSchema(yamlOpenAPI);\n    const schemas = [\n        {\n            uri: 'inmemory:yaml',\n            fileMatch: ['*'],\n            schema: kubernetesJSONSchema,\n        },\n    ];\n    yamlService.configure({\n        validate: true,\n        schemas,\n        hover: true,\n        completion: true,\n    });\n    return yamlService;\n};\nexport const registerYAMLCompletion = (languageID, monaco, m2p, p2m, createDocument, yamlService) => {\n    monaco.languages.registerCompletionItemProvider(languageID, {\n        provideCompletionItems(model, position) {\n            const document = createDocument(model);\n            return yamlService\n                .doComplete(document, m2p.asPosition(position.lineNumber, position.column), true)\n                .then((list) => {\n                return p2m.asCompletionResult(list);\n            });\n        },\n        resolveCompletionItem(item) {\n            return yamlService\n                .doResolve(m2p.asCompletionItem(item))\n                .then((result) => p2m.asCompletionItem(result));\n        },\n    });\n};\nexport const registerYAMLDocumentSymbols = (languageID, monaco, p2m, createDocument, yamlService) => {\n    monaco.languages.registerDocumentSymbolProvider(languageID, {\n        provideDocumentSymbols(model) {\n            const document = createDocument(model);\n            return p2m.asSymbolInformations(yamlService.findDocumentSymbols(document));\n        },\n    });\n};\nexport const registerYAMLHover = (languageID, monaco, m2p, p2m, createDocument, yamlService) => {\n    monaco.languages.registerHoverProvider(languageID, {\n        provideHover(model, position) {\n            const doc = createDocument(model);\n            return yamlService\n                .doHover(doc, m2p.asPosition(position.lineNumber, position.column))\n                .then((hover) => {\n                return p2m.asHover(hover);\n            })\n                .then((e) => {\n                for (const el of document.getElementsByClassName('monaco-editor-hover')) {\n                    el.onclick = (event) => event.preventDefault();\n                    el.onauxclick = (event) => {\n                        window.open(event.target.getAttribute('data-href'), '_blank').opener = null;\n                        event.preventDefault();\n                    };\n                }\n                return e;\n            });\n        },\n    });\n};\nexport const enableYAMLValidation = (monaco, p2m, monacoURI, createDocument, yamlService) => {\n    const pendingValidationRequests = new Map();\n    const getModel = () => monaco.editor.getModels()[0];\n    const cleanPendingValidation = (document) => {\n        const request = pendingValidationRequests.get(document.uri);\n        if (request !== undefined) {\n            clearTimeout(request);\n            pendingValidationRequests.delete(document.uri);\n        }\n    };\n    const cleanDiagnostics = () => monaco.editor.setModelMarkers(monaco.editor.getModel(monacoURI), 'default', []);\n    const doValidate = (document) => {\n        if (document.getText().length === 0) {\n            cleanDiagnostics();\n            return;\n        }\n        yamlService\n            .doValidation(document, true)\n            .then((diagnostics) => {\n            const markers = p2m.asDiagnostics(diagnostics);\n            monaco.editor.setModelMarkers(getModel(), 'default', markers);\n        })\n            .catch(() => { });\n    };\n    getModel().onDidChangeContent(() => {\n        const document = createDocument(getModel());\n        cleanPendingValidation(document);\n        pendingValidationRequests.set(document.uri, setTimeout(() => {\n            pendingValidationRequests.delete(document.uri);\n            doValidate(document);\n        }));\n    });\n};\nexport const registerYAMLinMonaco = (monaco) => {\n    const LANGUAGE_ID = 'yaml';\n    const MODEL_URI = 'inmemory://model.yaml';\n    const MONACO_URI = monaco.Uri.parse(MODEL_URI);\n    const m2p = new MonacoToProtocolConverter();\n    const p2m = new ProtocolToMonacoConverter();\n    function createDocument(model) {\n        return TextDocument.create(MODEL_URI, model.getModeId(), model.getVersionId(), model.getValue());\n    }\n    const yamlService = createYAMLService();\n    // validation is not a 'registered' feature like the others, it relies on calling the yamlService\n    // directly for validation results when content in the editor has changed\n    enableYAMLValidation(monaco, p2m, MONACO_URI, createDocument, yamlService);\n    /**\n     * This exists because react-monaco-editor passes the same monaco\n     * object each time. Without it you would be registering all the features again and\n     * getting duplicate results.\n     *\n     * Monaco does not provide any apis for unregistering or checking if the features have already\n     * been registered for a language.\n     *\n     * We check that > 1 YAML language exists because one is the default and one is the initial register\n     * that setups our features.\n     */\n    if (monaco.languages.getLanguages().filter((x) => x.id === LANGUAGE_ID).length > 1) {\n        return;\n    }\n    registerYAMLLanguage(monaco); // register the YAML language with monaco\n    registerYAMLCompletion(LANGUAGE_ID, monaco, m2p, p2m, createDocument, yamlService);\n    registerYAMLDocumentSymbols(LANGUAGE_ID, monaco, p2m, createDocument, yamlService);\n    registerYAMLHover(LANGUAGE_ID, monaco, m2p, p2m, createDocument, yamlService);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/yaml-editor-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/editor/yaml-editor-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as URL from 'url';\nimport {\n  MonacoToProtocolConverter,\n  ProtocolToMonacoConverter,\n} from 'monaco-languageclient/lib/monaco-converter';\nimport { getLanguageService, TextDocument } from 'yaml-language-server';\nimport { openAPItoJSONSchema } from '@console/internal/module/k8s/openapi-to-json-schema';\nimport { getStoredSwagger } from '@console/internal/module/k8s/swagger';\nimport {\n  global_BackgroundColor_100 as lineNumberActiveForeground,\n  global_BackgroundColor_300 as lineNumberForeground,\n  global_BackgroundColor_dark_100 as editorBackground,\n} from '@patternfly/react-tokens';\n\nwindow.monaco.editor.defineTheme('console', {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    // avoid pf tokens for `rules` since tokens are opaque strings that might not be hex values\n    { token: 'number', foreground: 'ace12e' },\n    { token: 'type', foreground: '73bcf7' },\n    { token: 'string', foreground: 'f0ab00' },\n    { token: 'keyword', foreground: 'cbc0ff' },\n  ],\n  colors: {\n    'editor.background': editorBackground.value,\n    'editorGutter.background': '#292e34', // no pf token defined\n    'editorLineNumber.activeForeground': lineNumberActiveForeground.value,\n    'editorLineNumber.foreground': lineNumberForeground.value,\n  },\n});\n\nexport const defaultEditorOptions = { readOnly: false, scrollBeyondLastLine: false };\n\n// Unfortunately, `editor.focus()` doesn't work when hiding the shortcuts\n// popover. We need to find the actual DOM element.\nexport const hackyFocusEditor = () =>\n  setTimeout(() => document.querySelector<any>('.monaco-editor textarea')?.focus());\n\nexport const registerYAMLLanguage = (monaco) => {\n  // register the YAML language with Monaco\n  monaco.languages.register({\n    id: 'yaml',\n    extensions: ['.yml', '.yaml'],\n    aliases: ['YAML', 'yaml'],\n    mimetypes: ['application/yaml'],\n  });\n};\n\nexport const createYAMLService = () => {\n  const resolveSchema = (url: string): Thenable<string> => {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = () => resolve(xhr.responseText);\n      xhr.onerror = () => reject(xhr.statusText);\n      xhr.open('GET', url, true);\n      xhr.send();\n    });\n    return promise as Thenable<string>;\n  };\n\n  const workspaceContext = {\n    resolveRelativePath: (relativePath, resource) => URL.resolve(resource, relativePath),\n  };\n\n  const yamlService = getLanguageService(resolveSchema, workspaceContext, []);\n\n  // Prepare the schema\n  const yamlOpenAPI = getStoredSwagger();\n\n  // Convert the openAPI schema to something the language server understands\n  const kubernetesJSONSchema = openAPItoJSONSchema(yamlOpenAPI);\n\n  const schemas = [\n    {\n      uri: 'inmemory:yaml',\n      fileMatch: ['*'],\n      schema: kubernetesJSONSchema,\n    },\n  ];\n  yamlService.configure({\n    validate: true,\n    schemas,\n    hover: true,\n    completion: true,\n  });\n  return yamlService;\n};\n\nexport const registerYAMLCompletion = (\n  languageID,\n  monaco,\n  m2p,\n  p2m,\n  createDocument,\n  yamlService,\n) => {\n  monaco.languages.registerCompletionItemProvider(languageID, {\n    provideCompletionItems(model, position) {\n      const document = createDocument(model);\n      return yamlService\n        .doComplete(document, m2p.asPosition(position.lineNumber, position.column), true)\n        .then((list) => {\n          return p2m.asCompletionResult(list);\n        });\n    },\n\n    resolveCompletionItem(item) {\n      return yamlService\n        .doResolve(m2p.asCompletionItem(item))\n        .then((result) => p2m.asCompletionItem(result));\n    },\n  });\n};\n\nexport const registerYAMLDocumentSymbols = (\n  languageID,\n  monaco,\n  p2m,\n  createDocument,\n  yamlService,\n) => {\n  monaco.languages.registerDocumentSymbolProvider(languageID, {\n    provideDocumentSymbols(model) {\n      const document = createDocument(model);\n      return p2m.asSymbolInformations(yamlService.findDocumentSymbols(document));\n    },\n  });\n};\n\nexport const registerYAMLHover = (languageID, monaco, m2p, p2m, createDocument, yamlService) => {\n  monaco.languages.registerHoverProvider(languageID, {\n    provideHover(model, position) {\n      const doc = createDocument(model);\n      return yamlService\n        .doHover(doc, m2p.asPosition(position.lineNumber, position.column))\n        .then((hover) => {\n          return p2m.asHover(hover);\n        })\n        .then((e) => {\n          for (const el of <any>document.getElementsByClassName('monaco-editor-hover')) {\n            el.onclick = (event) => event.preventDefault();\n            el.onauxclick = (event) => {\n              window.open(event.target.getAttribute('data-href'), '_blank').opener = null;\n              event.preventDefault();\n            };\n          }\n          return e;\n        });\n    },\n  });\n};\n\nexport const enableYAMLValidation = (monaco, p2m, monacoURI, createDocument, yamlService) => {\n  const pendingValidationRequests = new Map();\n\n  const getModel = () => monaco.editor.getModels()[0];\n\n  const cleanPendingValidation = (document) => {\n    const request = pendingValidationRequests.get(document.uri);\n    if (request !== undefined) {\n      clearTimeout(request);\n      pendingValidationRequests.delete(document.uri);\n    }\n  };\n\n  const cleanDiagnostics = () =>\n    monaco.editor.setModelMarkers(monaco.editor.getModel(monacoURI), 'default', []);\n\n  const doValidate = (document) => {\n    if (document.getText().length === 0) {\n      cleanDiagnostics();\n      return;\n    }\n    yamlService\n      .doValidation(document, true)\n      .then((diagnostics) => {\n        const markers = p2m.asDiagnostics(diagnostics);\n        monaco.editor.setModelMarkers(getModel(), 'default', markers);\n      })\n      .catch(() => {});\n  };\n\n  getModel().onDidChangeContent(() => {\n    const document = createDocument(getModel());\n    cleanPendingValidation(document);\n    pendingValidationRequests.set(\n      document.uri,\n      setTimeout(() => {\n        pendingValidationRequests.delete(document.uri);\n        doValidate(document);\n      }),\n    );\n  });\n};\n\nexport const registerYAMLinMonaco = (monaco) => {\n  const LANGUAGE_ID = 'yaml';\n  const MODEL_URI = 'inmemory://model.yaml';\n  const MONACO_URI = monaco.Uri.parse(MODEL_URI);\n\n  const m2p = new MonacoToProtocolConverter();\n  const p2m = new ProtocolToMonacoConverter();\n\n  function createDocument(model) {\n    return TextDocument.create(\n      MODEL_URI,\n      model.getModeId(),\n      model.getVersionId(),\n      model.getValue(),\n    );\n  }\n\n  const yamlService = createYAMLService();\n\n  // validation is not a 'registered' feature like the others, it relies on calling the yamlService\n  // directly for validation results when content in the editor has changed\n  enableYAMLValidation(monaco, p2m, MONACO_URI, createDocument, yamlService);\n\n  /**\n   * This exists because react-monaco-editor passes the same monaco\n   * object each time. Without it you would be registering all the features again and\n   * getting duplicate results.\n   *\n   * Monaco does not provide any apis for unregistering or checking if the features have already\n   * been registered for a language.\n   *\n   * We check that > 1 YAML language exists because one is the default and one is the initial register\n   * that setups our features.\n   */\n  if (monaco.languages.getLanguages().filter((x) => x.id === LANGUAGE_ID).length > 1) {\n    return;\n  }\n\n  registerYAMLLanguage(monaco); // register the YAML language with monaco\n  registerYAMLCompletion(LANGUAGE_ID, monaco, m2p, p2m, createDocument, yamlService);\n  registerYAMLDocumentSymbols(LANGUAGE_ID, monaco, p2m, createDocument, yamlService);\n  registerYAMLHover(LANGUAGE_ID, monaco, m2p, p2m, createDocument, yamlService);\n};\n"]}]}