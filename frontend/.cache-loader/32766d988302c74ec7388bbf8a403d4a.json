{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/routes/route-charts.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/routes/route-charts.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { Area } from '@console/internal/components/graphs/area';\nimport { humanizeDecimalBytesPerSec } from '@console/internal/components/utils';\nimport { connectToFlags } from '../../reducers/features';\n// Build the RouteCharts component that presents 3 charts side by side in full screen\nconst chartClasses = 'col-md-4 col-sm-12';\nconst RouteCharts_ = ({ namespace, route, flags }) => {\n    if (!flags[FLAGS.CAN_GET_NS]) {\n        return null;\n    }\n    const interval = '[5m]';\n    const namespaceRouteQuery = `{exported_namespace=\"${namespace}\",route=\"${route}\"}${interval}`;\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: chartClasses },\n            React.createElement(Area, { title: \"Traffic In\", humanize: humanizeDecimalBytesPerSec, query: `sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_server_bytes_in_total${namespaceRouteQuery}))` })),\n        React.createElement(\"div\", { className: chartClasses },\n            React.createElement(Area, { title: \"Traffic Out\", humanize: humanizeDecimalBytesPerSec, query: `sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_server_bytes_out_total${namespaceRouteQuery}))` })),\n        React.createElement(\"div\", { className: chartClasses },\n            React.createElement(Area, { title: \"Connection Rate\", query: `sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_backend_connections_total${namespaceRouteQuery}))` }))));\n};\nexport const RouteCharts = connectToFlags(FLAGS.CAN_GET_NS)(RouteCharts_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/routes/route-charts.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/routes/route-charts.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,0CAA0C,CAAC;AAChE,OAAO,EAAE,0BAA0B,EAAE,MAAM,oCAAoC,CAAC;AAChF,OAAO,EAAE,cAAc,EAAkB,MAAM,yBAAyB,CAAC;AAEzE,qFAAqF;AACrF,MAAM,YAAY,GAAG,oBAAoB,CAAC;AAE1C,MAAM,YAAY,GAA+B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;IAC/E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC;KACb;IAED,MAAM,QAAQ,GAAG,MAAM,CAAC;IACxB,MAAM,mBAAmB,GAAG,wBAAwB,SAAS,YAAY,KAAK,KAAK,QAAQ,EAAE,CAAC;IAC9F,OAAO,CACL,6BAAK,SAAS,EAAC,KAAK;QAClB,6BAAK,SAAS,EAAE,YAAY;YAC1B,oBAAC,IAAI,IACH,KAAK,EAAC,YAAY,EAClB,QAAQ,EAAE,0BAA0B,EACpC,KAAK,EAAE,uGAAuG,mBAAmB,IAAI,GACrI,CACE;QACN,6BAAK,SAAS,EAAE,YAAY;YAC1B,oBAAC,IAAI,IACH,KAAK,EAAC,aAAa,EACnB,QAAQ,EAAE,0BAA0B,EACpC,KAAK,EAAE,wGAAwG,mBAAmB,IAAI,GACtI,CACE;QACN,6BAAK,SAAS,EAAE,YAAY;YAC1B,oBAAC,IAAI,IACH,KAAK,EAAC,iBAAiB,EACvB,KAAK,EAAE,2GAA2G,mBAAmB,IAAI,GACzI,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,WAAW,GAAG,cAAc,CAAmB,KAAK,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { Area } from '@console/internal/components/graphs/area';\nimport { humanizeDecimalBytesPerSec } from '@console/internal/components/utils';\nimport { connectToFlags, WithFlagsProps } from '../../reducers/features';\n\n// Build the RouteCharts component that presents 3 charts side by side in full screen\nconst chartClasses = 'col-md-4 col-sm-12';\n\nconst RouteCharts_: React.FC<RouteChartsProps> = ({ namespace, route, flags }) => {\n  if (!flags[FLAGS.CAN_GET_NS]) {\n    return null;\n  }\n\n  const interval = '[5m]';\n  const namespaceRouteQuery = `{exported_namespace=\"${namespace}\",route=\"${route}\"}${interval}`;\n  return (\n    <div className=\"row\">\n      <div className={chartClasses}>\n        <Area\n          title=\"Traffic In\"\n          humanize={humanizeDecimalBytesPerSec}\n          query={`sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_server_bytes_in_total${namespaceRouteQuery}))`}\n        />\n      </div>\n      <div className={chartClasses}>\n        <Area\n          title=\"Traffic Out\"\n          humanize={humanizeDecimalBytesPerSec}\n          query={`sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_server_bytes_out_total${namespaceRouteQuery}))`}\n        />\n      </div>\n      <div className={chartClasses}>\n        <Area\n          title=\"Connection Rate\"\n          query={`sum without (instance,exported_pod,exported_service,pod,server) (irate(haproxy_backend_connections_total${namespaceRouteQuery}))`}\n        />\n      </div>\n    </div>\n  );\n};\nexport const RouteCharts = connectToFlags<RouteChartsProps>(FLAGS.CAN_GET_NS)(RouteCharts_);\n\nexport type RouteChartsProps = {\n  namespace: string;\n  route: string;\n} & WithFlagsProps;\n"]}]}