{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/activity-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/activity-card.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport ActivityBody, { RecentEventsBody, OngoingActivityBody, } from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { withDashboardResources } from '../with-dashboard-resources';\nimport { EventModel } from '../../../models';\nimport { useExtensions, isDashboardsOverviewResourceActivity, } from '@console/plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nconst getEventsResource = (projectName) => ({\n    isList: true,\n    kind: EventModel.kind,\n    prop: 'events',\n    namespace: projectName,\n});\nconst RecentEvent = withDashboardResources(({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n        if (projectName) {\n            const eventsResource = getEventsResource(projectName);\n            watchK8sResource(eventsResource);\n            return () => {\n                stopWatchK8sResource(eventsResource);\n            };\n        }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (React.createElement(RecentEventsBody, { events: resources.events, moreLink: viewEvents }));\n});\nconst mapStateToProps = (state) => ({\n    models: state.k8s.getIn(['RESOURCES', 'models']),\n});\nconst OngoingActivity = connect(mapStateToProps)(withDashboardResources(({ watchK8sResource, stopWatchK8sResource, resources, projectName, models, }) => {\n    const resourceActivityExtensions = useExtensions(isDashboardsOverviewResourceActivity);\n    const resourceActivities = React.useMemo(() => resourceActivityExtensions.filter((e) => {\n        const model = models.get(e.properties.k8sResource.kind);\n        return model && model.namespaced;\n    }), [resourceActivityExtensions, models]);\n    React.useEffect(() => {\n        if (projectName) {\n            resourceActivities.forEach((a, index) => {\n                watchK8sResource(uniqueResource(Object.assign(Object.assign({}, a.properties.k8sResource), { namespace: projectName }), index));\n            });\n            return () => {\n                resourceActivities.forEach((a, index) => {\n                    stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n                });\n            };\n        }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n    const allResourceActivities = React.useMemo(() => _.flatten(resourceActivities.map((a, index) => {\n        const k8sResources = _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'data'], []);\n        return k8sResources\n            .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n            .map((r) => ({\n            resource: r,\n            timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n            loader: a.properties.loader,\n        }));\n    })), [resourceActivities, resources]);\n    const resourcesLoaded = React.useMemo(() => resourceActivities.every((a, index) => _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded'])), [resourceActivities, resources]);\n    return (React.createElement(OngoingActivityBody, { loaded: projectName && resourcesLoaded && models.size !== 0, resourceActivities: allResourceActivities }));\n}));\nexport const ActivityCard = () => {\n    const { obj } = React.useContext(ProjectDashboardContext);\n    const projectName = getName(obj);\n    const viewEvents = `/k8s/ns/${projectName}/events`;\n    return (React.createElement(DashboardCard, { gradient: true, \"data-test-id\": \"activity-card\" },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Activity\"),\n            React.createElement(DashboardCardLink, { to: viewEvents }, \"View events\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(ActivityBody, { className: \"co-project-dashboard__activity-body\" },\n                React.createElement(OngoingActivity, { projectName: projectName }),\n                React.createElement(RecentEvent, { projectName: projectName, viewEvents: viewEvents })))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/activity-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/activity-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n\n      const resourceActivities = React.useMemo(\n        () =>\n          resourceActivityExtensions.filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: a.properties.loader,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  return (\n    <DashboardCard gradient data-test-id=\"activity-card\">\n      <DashboardCardHeader>\n        <DashboardCardTitle>Activity</DashboardCardTitle>\n        <DashboardCardLink to={viewEvents}>View events</DashboardCardLink>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <ActivityBody className=\"co-project-dashboard__activity-body\">\n          <OngoingActivity projectName={projectName} />\n          <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n        </ActivityBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n"]}]}