{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/install-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/install-page.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport { BreadCrumbs } from '@console/internal/components/utils';\nimport { getAnnotations } from '@console/shared/src/selectors/common';\nimport { Radio, Title } from '@patternfly/react-core';\nimport { getRequiredKeys, createDownloadFile } from '../independent-mode/utils';\nimport { OCSServiceModel } from '../../models';\nimport InstallExternalCluster from '../independent-mode/install';\nimport { CreateOCSServiceForm } from './create-form';\nimport { OCS_SUPPORT_ANNOTATION } from '../../constants';\nimport './install-page.scss';\nvar MODES;\n(function (MODES) {\n    MODES[\"CONVERGED\"] = \"Converged\";\n    MODES[\"INDEPENDENT\"] = \"Independent\";\n})(MODES || (MODES = {}));\n// eslint-disable-next-line no-shadow\nconst InstallCluster = ({ match }) => {\n    const { params: { ns, appName }, url, } = match;\n    const [isIndependent, setIsIndependent] = React.useState(false);\n    const [independentReqdKeys, setIndependentReqdKeys] = React.useState(null);\n    const [downloadFile, setDownloadFile] = React.useState(null);\n    const [mode, setMode] = React.useState(MODES.CONVERGED);\n    const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n    const handleModeChange = (_checked, event) => {\n        const { value } = event.currentTarget;\n        setMode(value);\n    };\n    React.useEffect(() => {\n        k8sGet(ClusterServiceVersionModel, appName, ns)\n            .then((clusterServiceVersionObj) => {\n            var _a;\n            const isIndependentSupported = getAnnotations(clusterServiceVersionObj)[OCS_SUPPORT_ANNOTATION].includes('external');\n            if (isIndependentSupported) {\n                setIsIndependent(true);\n                const { configMaps = [], secrets = [], storageClasses = [] } = getRequiredKeys(clusterServiceVersionObj);\n                setIndependentReqdKeys({ configMaps, secrets, storageClasses });\n                setDownloadFile(createDownloadFile((_a = getAnnotations(clusterServiceVersionObj)) === null || _a === void 0 ? void 0 : _a['external.features.ocs.openshift.io/export-script']));\n            }\n            try {\n                setClusterServiceVersion(clusterServiceVersionObj);\n            }\n            catch (e) {\n                setClusterServiceVersion(null);\n            }\n        })\n            .catch(() => setClusterServiceVersion(null));\n    }, [appName, ns]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-create-operand__header\" },\n            React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" }, clusterServiceVersion !== null && (React.createElement(BreadCrumbs, { breadcrumbs: [\n                    {\n                        name: clusterServiceVersion.spec.displayName,\n                        path: url.replace('/~new', ''),\n                    },\n                    { name: `Create ${OCSServiceModel.label}`, path: url },\n                ] }))),\n            React.createElement(\"h1\", { className: \"co-create-operand__header-text\" }, \"Create Storage Cluster\"),\n            React.createElement(\"p\", { className: \"help-block\" }, \"OCS runs as a cloud-native service for optimal integration with applications in need of storage, and handles the scenes such as provisioning and management.\")),\n        React.createElement(\"div\", { className: \"co-m-pane__body co-m-pane__form\" },\n            isIndependent && (React.createElement(\"div\", { className: \"ceph-install__select-mode\" },\n                React.createElement(Title, { headingLevel: \"h5\", size: \"lg\", className: \"ceph-install-select-mode__title\" }, \"Select Mode\"),\n                React.createElement(\"div\", { className: \"ceph-install-select-mode\" },\n                    React.createElement(Radio, { value: MODES.CONVERGED, isChecked: mode === MODES.CONVERGED, onChange: handleModeChange, id: \"radio-1\", className: \"ceph-install--no-margin\", label: \"Internal\", name: \"converged-mode\" })),\n                React.createElement(\"div\", { className: \"ceph-install-select-mode\" },\n                    React.createElement(Radio, { value: MODES.INDEPENDENT, isChecked: mode === MODES.INDEPENDENT, onChange: handleModeChange, id: \"radio-2\", label: \"External\", name: \"independent-mode\", className: \"ceph-install--no-margin\" })))),\n            (isIndependent === false || mode === MODES.CONVERGED) && (React.createElement(CreateOCSServiceForm, { match: match })),\n            mode === MODES.INDEPENDENT && (React.createElement(InstallExternalCluster, { match: match, minRequiredKeys: independentReqdKeys, downloadFile: downloadFile })))));\n};\nexport default InstallCluster;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/install-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/ocs-install/install-page.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AACtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,qCAAqC,CAAC;AACjF,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,sCAAsC,CAAC;AACtE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAChF,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,sBAAsB,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,qBAAqB,CAAC;AAE7B,IAAK,KAGJ;AAHD,WAAK,KAAK;IACR,gCAAuB,CAAA;IACvB,oCAA2B,CAAA;AAC7B,CAAC,EAHI,KAAK,KAAL,KAAK,QAGT;AAED,qCAAqC;AACrC,MAAM,cAAc,GAAkC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAClE,MAAM,EACJ,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,EACvB,GAAG,GACJ,GAAG,KAAK,CAAC;IAEV,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChE,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAClE,IAAI,CACL,CAAC;IACF,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7D,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxD,MAAM,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAE/E,MAAM,gBAAgB,GAAG,CAAC,QAAiB,EAAE,KAAwC,EAAE,EAAE;QACvF,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC;QACtC,OAAO,CAAC,KAAc,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,MAAM,CAAC,0BAA0B,EAAE,OAAO,EAAE,EAAE,CAAC;aAC5C,IAAI,CAAC,CAAC,wBAAwB,EAAE,EAAE;;YACjC,MAAM,sBAAsB,GAAG,cAAc,CAAC,wBAAwB,CAAC,CACrE,sBAAsB,CACvB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACvB,IAAI,sBAAsB,EAAE;gBAC1B,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACvB,MAAM,EAAE,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,cAAc,GAAG,EAAE,EAAE,GAAG,eAAe,CAC5E,wBAAwB,CACzB,CAAC;gBACF,sBAAsB,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;gBAChE,eAAe,CACb,kBAAkB,OAChB,cAAc,CAAC,wBAAwB,CAAC,0CACtC,kDAAkD,EAErD,CACF,CAAC;aACH;YAED,IAAI;gBACF,wBAAwB,CAAC,wBAAwB,CAAC,CAAC;aACpD;YAAC,OAAO,CAAC,EAAE;gBACV,wBAAwB,CAAC,IAAI,CAAC,CAAC;aAChC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAElB,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,2BAA2B;YACxC,6BAAK,SAAS,EAAC,mCAAmC,IAC/C,qBAAqB,KAAK,IAAI,IAAI,CACjC,oBAAC,WAAW,IACV,WAAW,EAAE;oBACX;wBACE,IAAI,EAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW;wBAC5C,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;qBAC/B;oBACD,EAAE,IAAI,EAAE,UAAU,eAAe,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;iBACvD,GACD,CACH,CACG;YACN,4BAAI,SAAS,EAAC,gCAAgC,6BAA4B;YAC1E,2BAAG,SAAS,EAAC,YAAY,mKAGrB,CACA;QAEN,6BAAK,SAAS,EAAC,iCAAiC;YAC7C,aAAa,IAAI,CAChB,6BAAK,SAAS,EAAC,2BAA2B;gBACxC,oBAAC,KAAK,IAAC,YAAY,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,iCAAiC,kBAEtE;gBACR,6BAAK,SAAS,EAAC,0BAA0B;oBACvC,oBAAC,KAAK,IACJ,KAAK,EAAE,KAAK,CAAC,SAAS,EACtB,SAAS,EAAE,IAAI,KAAK,KAAK,CAAC,SAAS,EACnC,QAAQ,EAAE,gBAAgB,EAC1B,EAAE,EAAC,SAAS,EACZ,SAAS,EAAC,yBAAyB,EACnC,KAAK,EAAC,UAAU,EAChB,IAAI,EAAC,gBAAgB,GACrB,CACE;gBACN,6BAAK,SAAS,EAAC,0BAA0B;oBACvC,oBAAC,KAAK,IACJ,KAAK,EAAE,KAAK,CAAC,WAAW,EACxB,SAAS,EAAE,IAAI,KAAK,KAAK,CAAC,WAAW,EACrC,QAAQ,EAAE,gBAAgB,EAC1B,EAAE,EAAC,SAAS,EACZ,KAAK,EAAC,UAAU,EAChB,IAAI,EAAC,kBAAkB,EACvB,SAAS,EAAC,yBAAyB,GACnC,CACE,CACF,CACP;YACA,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,IAAI,CACxD,oBAAC,oBAAoB,IAAC,KAAK,EAAE,KAAK,GAAI,CACvC;YACA,IAAI,KAAK,KAAK,CAAC,WAAW,IAAI,CAC7B,oBAAC,sBAAsB,IACrB,KAAK,EAAE,KAAK,EACZ,eAAe,EAAE,mBAAmB,EACpC,YAAY,EAAE,YAAY,GAC1B,CACH,CACG,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import * as React from 'react';\nimport { match } from 'react-router';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport { BreadCrumbs } from '@console/internal/components/utils';\nimport { getAnnotations } from '@console/shared/src/selectors/common';\nimport { Radio, Title } from '@patternfly/react-core';\nimport { getRequiredKeys, createDownloadFile } from '../independent-mode/utils';\nimport { OCSServiceModel } from '../../models';\nimport InstallExternalCluster from '../independent-mode/install';\nimport { CreateOCSServiceForm } from './create-form';\nimport { OCS_SUPPORT_ANNOTATION } from '../../constants';\nimport './install-page.scss';\n\nenum MODES {\n  CONVERGED = 'Converged',\n  INDEPENDENT = 'Independent',\n}\n\n// eslint-disable-next-line no-shadow\nconst InstallCluster: React.FC<InstallClusterProps> = ({ match }) => {\n  const {\n    params: { ns, appName },\n    url,\n  } = match;\n\n  const [isIndependent, setIsIndependent] = React.useState(false);\n  const [independentReqdKeys, setIndependentReqdKeys] = React.useState<{ [key: string]: string[] }>(\n    null,\n  );\n  const [downloadFile, setDownloadFile] = React.useState(null);\n  const [mode, setMode] = React.useState(MODES.CONVERGED);\n  const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n\n  const handleModeChange = (_checked: boolean, event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    setMode(value as MODES);\n  };\n\n  React.useEffect(() => {\n    k8sGet(ClusterServiceVersionModel, appName, ns)\n      .then((clusterServiceVersionObj) => {\n        const isIndependentSupported = getAnnotations(clusterServiceVersionObj)[\n          OCS_SUPPORT_ANNOTATION\n        ].includes('external');\n        if (isIndependentSupported) {\n          setIsIndependent(true);\n          const { configMaps = [], secrets = [], storageClasses = [] } = getRequiredKeys(\n            clusterServiceVersionObj,\n          );\n          setIndependentReqdKeys({ configMaps, secrets, storageClasses });\n          setDownloadFile(\n            createDownloadFile(\n              getAnnotations(clusterServiceVersionObj)?.[\n                'external.features.ocs.openshift.io/export-script'\n              ],\n            ),\n          );\n        }\n\n        try {\n          setClusterServiceVersion(clusterServiceVersionObj);\n        } catch (e) {\n          setClusterServiceVersion(null);\n        }\n      })\n      .catch(() => setClusterServiceVersion(null));\n  }, [appName, ns]);\n\n  return (\n    <>\n      <div className=\"co-create-operand__header\">\n        <div className=\"co-create-operand__header-buttons\">\n          {clusterServiceVersion !== null && (\n            <BreadCrumbs\n              breadcrumbs={[\n                {\n                  name: clusterServiceVersion.spec.displayName,\n                  path: url.replace('/~new', ''),\n                },\n                { name: `Create ${OCSServiceModel.label}`, path: url },\n              ]}\n            />\n          )}\n        </div>\n        <h1 className=\"co-create-operand__header-text\">Create Storage Cluster</h1>\n        <p className=\"help-block\">\n          OCS runs as a cloud-native service for optimal integration with applications in need of\n          storage, and handles the scenes such as provisioning and management.\n        </p>\n      </div>\n\n      <div className=\"co-m-pane__body co-m-pane__form\">\n        {isIndependent && (\n          <div className=\"ceph-install__select-mode\">\n            <Title headingLevel=\"h5\" size=\"lg\" className=\"ceph-install-select-mode__title\">\n              Select Mode\n            </Title>\n            <div className=\"ceph-install-select-mode\">\n              <Radio\n                value={MODES.CONVERGED}\n                isChecked={mode === MODES.CONVERGED}\n                onChange={handleModeChange}\n                id=\"radio-1\"\n                className=\"ceph-install--no-margin\"\n                label=\"Internal\"\n                name=\"converged-mode\"\n              />\n            </div>\n            <div className=\"ceph-install-select-mode\">\n              <Radio\n                value={MODES.INDEPENDENT}\n                isChecked={mode === MODES.INDEPENDENT}\n                onChange={handleModeChange}\n                id=\"radio-2\"\n                label=\"External\"\n                name=\"independent-mode\"\n                className=\"ceph-install--no-margin\"\n              />\n            </div>\n          </div>\n        )}\n        {(isIndependent === false || mode === MODES.CONVERGED) && (\n          <CreateOCSServiceForm match={match} />\n        )}\n        {mode === MODES.INDEPENDENT && (\n          <InstallExternalCluster\n            match={match}\n            minRequiredKeys={independentReqdKeys}\n            downloadFile={downloadFile}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InstallCluster;\n\ntype InstallClusterProps = {\n  match: match<{ ns: string; appName: string }>;\n};\n"]}]}