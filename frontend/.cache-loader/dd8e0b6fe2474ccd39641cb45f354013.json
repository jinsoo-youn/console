{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-input.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-input.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { PlusCircleIcon, MinusCircleIcon } from '@patternfly/react-icons';\nexport class ListInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.helpID = _.uniqueId('list-view-help-');\n        this.state = {\n            values: props.initialValues || [''],\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.values !== this.state.values) {\n            const values = _.compact(this.state.values);\n            this.props.onChange(values);\n        }\n    }\n    valueChanged(i, v) {\n        this.setState((state) => {\n            const values = [...state.values];\n            values[i] = v;\n            return { values };\n        });\n    }\n    addValue() {\n        this.setState((state) => ({ values: [...state.values, ''] }));\n    }\n    removeValue(i) {\n        this.setState((state) => {\n            const values = [...state.values];\n            values.splice(i, 1);\n            return {\n                values: _.isEmpty(values) ? [''] : values,\n            };\n        });\n    }\n    render() {\n        const { label, required, helpText } = this.props;\n        const { values } = this.state;\n        const missingValues = required && (_.isEmpty(values) || _.every(values, (v) => !v));\n        const isEmpty = values.length === 1 && (_.isEmpty(values) || _.every(values, (v) => !v));\n        return (React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(\"label\", { className: classNames('control-label', { 'co-required': required }) }, label),\n            _.map(values, (v, i) => (React.createElement(\"div\", { className: \"co-list-input__row\", key: i },\n                React.createElement(\"div\", { className: \"co-list-input__value\" },\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", value: v, onChange: (e) => this.valueChanged(i, e.currentTarget.value), required: missingValues && i === 0, \"aria-describedby\": helpText ? this.helpID : undefined, \"data-test-list-input-for\": label })),\n                React.createElement(Button, { type: \"button\", className: \"pairs-list__span-btns\", onClick: () => this.removeValue(i), \"aria-label\": \"Remove\", variant: \"plain\", disabled: isEmpty },\n                    React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }))))),\n            helpText && (React.createElement(\"div\", { className: \"co-list-input__help-block help-block\", id: this.helpID }, helpText)),\n            React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: () => this.addValue(), type: \"button\", variant: \"link\" },\n                React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                \"Add More\")));\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-input.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/list-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Button } from '@patternfly/react-core';\nimport { PlusCircleIcon, MinusCircleIcon } from '@patternfly/react-icons';\n\nexport class ListInput extends React.Component<ListInputProps, ListInputState> {\n  private helpID: string = _.uniqueId('list-view-help-');\n  constructor(props: ListInputProps) {\n    super(props);\n    this.state = {\n      values: props.initialValues || [''],\n    };\n  }\n\n  componentDidUpdate(prevProps: ListInputProps, prevState: ListInputState) {\n    if (prevState.values !== this.state.values) {\n      const values = _.compact(this.state.values);\n      this.props.onChange(values);\n    }\n  }\n\n  valueChanged(i: number, v: string) {\n    this.setState((state) => {\n      const values = [...state.values];\n      values[i] = v;\n      return { values };\n    });\n  }\n\n  addValue() {\n    this.setState((state) => ({ values: [...state.values, ''] }));\n  }\n\n  removeValue(i: number) {\n    this.setState((state) => {\n      const values = [...state.values];\n      values.splice(i, 1);\n      return {\n        values: _.isEmpty(values) ? [''] : values,\n      };\n    });\n  }\n\n  render() {\n    const { label, required, helpText } = this.props;\n    const { values } = this.state;\n    const missingValues = required && (_.isEmpty(values) || _.every(values, (v) => !v));\n    const isEmpty = values.length === 1 && (_.isEmpty(values) || _.every(values, (v) => !v));\n    return (\n      <div className=\"form-group\">\n        <label className={classNames('control-label', { 'co-required': required })}>{label}</label>\n        {_.map(values, (v: string, i: number) => (\n          <div className=\"co-list-input__row\" key={i}>\n            <div className=\"co-list-input__value\">\n              <input\n                className=\"pf-c-form-control\"\n                type=\"text\"\n                value={v}\n                onChange={(e: React.FormEvent<HTMLInputElement>) =>\n                  this.valueChanged(i, e.currentTarget.value)\n                }\n                required={missingValues && i === 0}\n                aria-describedby={helpText ? this.helpID : undefined}\n                data-test-list-input-for={label}\n              />\n            </div>\n            <Button\n              type=\"button\"\n              className=\"pairs-list__span-btns\"\n              onClick={() => this.removeValue(i)}\n              aria-label=\"Remove\"\n              variant=\"plain\"\n              disabled={isEmpty}\n            >\n              <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n            </Button>\n          </div>\n        ))}\n        {helpText && (\n          <div className=\"co-list-input__help-block help-block\" id={this.helpID}>\n            {helpText}\n          </div>\n        )}\n        <Button\n          className=\"pf-m-link--align-left\"\n          onClick={() => this.addValue()}\n          type=\"button\"\n          variant=\"link\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          Add More\n        </Button>\n      </div>\n    );\n  }\n}\n\ntype ListInputState = {\n  values: string[];\n};\n\ntype ChangeCallback = (values: string[]) => void;\n\ntype ListInputProps = {\n  label: string;\n  initialValues?: string[];\n  onChange: ChangeCallback;\n  helpText?: string;\n  required?: boolean;\n};\n"]}]}