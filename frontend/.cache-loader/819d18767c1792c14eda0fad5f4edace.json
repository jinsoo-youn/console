{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/utils/convert.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/utils/convert.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { VMWrapper } from '../vm/vm-wrapper';\nimport { VMIWrapper } from '../vm/vmi-wrapper';\nimport { asVM } from '../../../selectors/vm/vmlike';\nimport { isVMI } from '../../../selectors/check-type';\nexport const asVMILikeWrapper = (vmLikeEntity, copy = false) => {\n    if (!vmLikeEntity) {\n        return null;\n    }\n    if (isVMI(vmLikeEntity)) {\n        return new VMIWrapper(vmLikeEntity, copy);\n    }\n    return new VMWrapper(asVM(vmLikeEntity), copy);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/utils/convert.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/utils/convert.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAC;AAEpD,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAEtD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,YAAqC,EACrC,IAAI,GAAG,KAAK,EACI,EAAE;IAClB,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;QACvB,OAAO,IAAI,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KAC3C;IAED,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC","sourcesContent":["import { VMGenericLikeEntityKind } from '../../../types/vmLike';\nimport { VMWrapper } from '../vm/vm-wrapper';\nimport { VMIWrapper } from '../vm/vmi-wrapper';\nimport { asVM } from '../../../selectors/vm/vmlike';\nimport { VMILikeWrapper } from '../types/vmlike';\nimport { isVMI } from '../../../selectors/check-type';\n\nexport const asVMILikeWrapper = (\n  vmLikeEntity: VMGenericLikeEntityKind,\n  copy = false,\n): VMILikeWrapper => {\n  if (!vmLikeEntity) {\n    return null;\n  }\n\n  if (isVMI(vmLikeEntity)) {\n    return new VMIWrapper(vmLikeEntity, copy);\n  }\n\n  return new VMWrapper(asVM(vmLikeEntity), copy);\n};\n"]}]}