{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport { AsyncComponent } from '@console/internal/components/utils';\nimport { HealthState } from './states';\nimport { getMostImportantStatuses } from './state-utils';\nimport { useTranslation } from 'react-i18next';\nimport './operator-body.scss';\nexport const OperatorsSection = ({ resources, getOperatorsWithStatuses, title, linkTo, rowLoader }) => {\n    const { t } = useTranslation();\n    const error = _.values(resources).some(r => r.loadError);\n    const operatorStatuses = getOperatorsWithStatuses(resources);\n    const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) => a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name));\n    const operatorsHealthy = sortedOperatorStatuses.every(o => o.status.health === HealthState.OK);\n    const RowLoading = React.useCallback(() => React.createElement(\"div\", { className: \"co-status__operator-skeleton\" }), []);\n    return (React.createElement(\"div\", { className: \"co-status-popup__section\" },\n        React.createElement(\"div\", { className: \"co-status-popup__row\" },\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { className: \"co-status-popup__text--bold\" }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_OPERATORS_1')),\n                React.createElement(\"span\", { className: \"text-secondary\" }, ` (${operatorStatuses.length} installed)`)),\n            React.createElement(\"div\", { className: \"text-secondary\" }, t('SINGLE:MSG_OVERVIEW_MAIN_POPOVEROPERATOR_STATUS_1'))),\n        error ? React.createElement(\"div\", { className: \"text-secondary\" }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_1')) : !operatorsHealthy && sortedOperatorStatuses.map(operatorStatus => React.createElement(AsyncComponent, { key: operatorStatus.operators[0].metadata.uid, operatorStatus: operatorStatus, loader: rowLoader, LoadingComponent: RowLoading })),\n        React.createElement(\"div\", { className: \"co-status-popup__row\" },\n            React.createElement(Link, { to: linkTo }, t('SINGLE:MSG_OVERVIEW_MAIN_POPOVEROPERATOR_ALL_1')),\n            !error && operatorsHealthy && operatorStatuses.length && (React.createElement(\"div\", { className: \"co-status-popup__status\" },\n                React.createElement(\"div\", { className: \"text-secondary\" },\n                    \"All \",\n                    operatorStatuses[0].status.title.toLowerCase()),\n                React.createElement(\"div\", { className: \"co-status-popup__icon\" }, operatorStatuses[0].status.icon))))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport { GetOperatorsWithStatuses, LazyLoader } from '@console/plugin-sdk';\nimport { AsyncComponent, FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { HealthState } from './states';\nimport { getMostImportantStatuses } from './state-utils';\nimport { useTranslation } from 'react-i18next';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({ resources, getOperatorsWithStatuses, title, linkTo, rowLoader }) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some(r => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) => a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name));\n  const operatorsHealthy = sortedOperatorStatuses.every(o => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  return (\n    <div className=\"co-status-popup__section\">\n      <div className=\"co-status-popup__row\">\n        <div>\n          <span className=\"co-status-popup__text--bold\">{t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_OPERATORS_1')}</span>\n          <span className=\"text-secondary\">{` (${operatorStatuses.length} installed)`}</span>\n        </div>\n        <div className=\"text-secondary\">{t('SINGLE:MSG_OVERVIEW_MAIN_POPOVEROPERATOR_STATUS_1')}</div>\n      </div>\n      {error ? <div className=\"text-secondary\">{t('SINGLE:MSG_OVERVIEW_MAIN_CARDSTATUS_1')}</div> : !operatorsHealthy && sortedOperatorStatuses.map(operatorStatus => <AsyncComponent key={operatorStatus.operators[0].metadata.uid} operatorStatus={operatorStatus} loader={rowLoader} LoadingComponent={RowLoading} />)}\n      <div className=\"co-status-popup__row\">\n        <Link to={linkTo}>{t('SINGLE:MSG_OVERVIEW_MAIN_POPOVEROPERATOR_ALL_1')}</Link>\n        {!error && operatorsHealthy && operatorStatuses.length && (\n          <div className=\"co-status-popup__status\">\n            <div className=\"text-secondary\">All {operatorStatuses[0].status.title.toLowerCase()}</div>\n            <div className=\"co-status-popup__icon\">{operatorStatuses[0].status.icon}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  rowLoader: LazyLoader;\n};\n"]}]}