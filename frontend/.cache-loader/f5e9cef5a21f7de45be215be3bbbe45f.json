{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/nodes/EventSource.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/nodes/EventSource.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { observer, useHover, useSvgAnchor, useCombineRefs, createSvgIdUrl, } from '@console/topology';\nimport SvgBoxedText from '@console/dev-console/src/components/svg/SvgBoxedText';\nimport { NodeShadows, NODE_SHADOW_FILTER_ID_HOVER, NODE_SHADOW_FILTER_ID, useSearchFilter, useDisplayFilters, } from '@console/dev-console/src/components/topology';\nimport { getKnativeEventSourceIcon } from '../../../utils/get-knative-icon';\nimport './EventSource.scss';\nconst EventSource = ({ element, selected, onSelect, onContextMenu, contextMenuOpen, dragNodeRef, dndDropRef, dragging, edgeDragging, }) => {\n    const svgAnchorRef = useSvgAnchor();\n    const [hover, hoverRef] = useHover();\n    const groupRefs = useCombineRefs(dragNodeRef, dndDropRef, hoverRef);\n    const [filtered] = useSearchFilter(element.getLabel());\n    const displayFilters = useDisplayFilters();\n    const showLabels = displayFilters.showLabels || hover;\n    const { width, height } = element.getBounds();\n    const size = Math.min(width, height);\n    const { data } = element.getData();\n    return (React.createElement(\"g\", { className: classNames('odc-event-source', {\n            'is-filtered': filtered,\n            'is-dragging': dragging || edgeDragging,\n            'is-selected': selected,\n        }), onClick: onSelect, onContextMenu: onContextMenu, ref: groupRefs },\n        React.createElement(NodeShadows, null),\n        React.createElement(\"polygon\", { className: \"odc-event-source__bg\", ref: svgAnchorRef, filter: createSvgIdUrl(hover || dragging || contextMenuOpen\n                ? NODE_SHADOW_FILTER_ID_HOVER\n                : NODE_SHADOW_FILTER_ID), points: `${width / 2}, ${(height - size) / 2} ${width - (width - size) / 2},${height /\n                2} ${width / 2},${height - (height - size) / 2} ${(width - size) / 2},${height / 2}` }),\n        React.createElement(\"image\", { x: width * 0.25, y: height * 0.25, width: size * 0.5, height: size * 0.5, xlinkHref: getKnativeEventSourceIcon(data.kind) }),\n        showLabels && (data.kind || element.getLabel()) && (React.createElement(SvgBoxedText, { className: \"odc-base-node__label\", x: width / 2, y: (height + size) / 2 + 20, paddingX: 8, paddingY: 4, kind: data.kind }, element.getLabel()))));\n};\nexport default observer(EventSource);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/nodes/EventSource.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/nodes/EventSource.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {\n  Node,\n  observer,\n  useHover,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithContextMenuProps,\n  useSvgAnchor,\n  useCombineRefs,\n  WithDragNodeProps,\n  createSvgIdUrl,\n} from '@console/topology';\nimport SvgBoxedText from '@console/dev-console/src/components/svg/SvgBoxedText';\nimport {\n  NodeShadows,\n  NODE_SHADOW_FILTER_ID_HOVER,\n  NODE_SHADOW_FILTER_ID,\n  useSearchFilter,\n  useDisplayFilters,\n} from '@console/dev-console/src/components/topology';\nimport { getKnativeEventSourceIcon } from '../../../utils/get-knative-icon';\n\nimport './EventSource.scss';\n\nexport type EventSourceProps = {\n  element: Node;\n  dragging?: boolean;\n  edgeDragging?: boolean;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps;\n\nconst EventSource: React.FC<EventSourceProps> = ({\n  element,\n  selected,\n  onSelect,\n  onContextMenu,\n  contextMenuOpen,\n  dragNodeRef,\n  dndDropRef,\n  dragging,\n  edgeDragging,\n}) => {\n  const svgAnchorRef = useSvgAnchor();\n  const [hover, hoverRef] = useHover();\n  const groupRefs = useCombineRefs(dragNodeRef, dndDropRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const displayFilters = useDisplayFilters();\n  const showLabels = displayFilters.showLabels || hover;\n  const { width, height } = element.getBounds();\n  const size = Math.min(width, height);\n  const { data } = element.getData();\n\n  return (\n    <g\n      className={classNames('odc-event-source', {\n        'is-filtered': filtered,\n        'is-dragging': dragging || edgeDragging,\n        'is-selected': selected,\n      })}\n      onClick={onSelect}\n      onContextMenu={onContextMenu}\n      ref={groupRefs}\n    >\n      <NodeShadows />\n      <polygon\n        className=\"odc-event-source__bg\"\n        ref={svgAnchorRef}\n        filter={createSvgIdUrl(\n          hover || dragging || contextMenuOpen\n            ? NODE_SHADOW_FILTER_ID_HOVER\n            : NODE_SHADOW_FILTER_ID,\n        )}\n        points={`${width / 2}, ${(height - size) / 2} ${width - (width - size) / 2},${height /\n          2} ${width / 2},${height - (height - size) / 2} ${(width - size) / 2},${height / 2}`}\n      />\n      <image\n        x={width * 0.25}\n        y={height * 0.25}\n        width={size * 0.5}\n        height={size * 0.5}\n        xlinkHref={getKnativeEventSourceIcon(data.kind)}\n      />\n      {showLabels && (data.kind || element.getLabel()) && (\n        <SvgBoxedText\n          className=\"odc-base-node__label\"\n          x={width / 2}\n          y={(height + size) / 2 + 20}\n          paddingX={8}\n          paddingY={4}\n          kind={data.kind}\n        >\n          {element.getLabel()}\n        </SvgBoxedText>\n      )}\n    </g>\n  );\n};\n\nexport default observer(EventSource);\n"]}]}