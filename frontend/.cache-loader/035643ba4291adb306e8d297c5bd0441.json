{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/prometheus-poll-hook.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/prometheus-poll-hook.ts","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from 'react';\nimport { usePoll, useSafeFetch } from '../utils';\nimport { getPrometheusURL } from './helpers';\nconst DEFAULT_DELAY = 15000; // 15 seconds\nconst DEFAULT_SAMPLES = 60;\nconst DEFAULT_TIMESPAN = 60 * 60 * 1000; // 1 hour\nexport const usePrometheusPoll = ({ delay = DEFAULT_DELAY, endpoint, endTime = undefined, namespace, query, samples = DEFAULT_SAMPLES, timeout, timespan = DEFAULT_TIMESPAN, }) => {\n    const url = getPrometheusURL({ endpoint, endTime, namespace, query, samples, timeout, timespan });\n    const [error, setError] = useState();\n    const [response, setResponse] = useState();\n    const [loading, setLoading] = useState(true);\n    const safeFetch = useSafeFetch();\n    const tick = useCallback(() => {\n        if (url) {\n            safeFetch(url)\n                .then((data) => {\n                setResponse(data);\n                setError(undefined);\n                setLoading(false);\n            })\n                .catch((err) => {\n                if (err.name !== 'AbortError') {\n                    setError(err);\n                    setLoading(false);\n                    // eslint-disable-next-line no-console\n                    console.error(`Error polling Prometheus: ${err}`);\n                }\n            });\n        }\n        else {\n            setLoading(false);\n        }\n    }, [url]);\n    usePoll(tick, delay, endTime, query, timespan);\n    return [response, error, loading];\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/prometheus-poll-hook.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/prometheus-poll-hook.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAsB,MAAM,WAAW,CAAC;AAGjE,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,aAAa;AAC1C,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,SAAS;AAElD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAChC,KAAK,GAAG,aAAa,EACrB,QAAQ,EACR,OAAO,GAAG,SAAS,EACnB,SAAS,EACT,KAAK,EACL,OAAO,GAAG,eAAe,EACzB,OAAO,EACP,QAAQ,GAAG,gBAAgB,GACP,EAAE,EAAE;IACxB,MAAM,GAAG,GAAG,gBAAgB,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClG,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAE,CAAC;IACrC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,EAAE,CAAC;IAC3C,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,SAAS,GAAG,YAAY,EAAE,CAAC;IACjC,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,EAAE;QAC5B,IAAI,GAAG,EAAE;YACP,SAAS,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBACb,WAAW,CAAC,IAAI,CAAC,CAAC;gBAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACpB,UAAU,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;oBAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACd,UAAU,CAAC,KAAK,CAAC,CAAC;oBAClB,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,EAAE,CAAC,CAAC;iBACnD;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,UAAU,CAAC,KAAK,CAAC,CAAC;SACnB;IACH,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAEV,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAE/C,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAyC,CAAC;AAC5E,CAAC,CAAC","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from 'react';\n\nimport { usePoll, useSafeFetch } from '../utils';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusResponse } from '.';\n\nconst DEFAULT_DELAY = 15000; // 15 seconds\nconst DEFAULT_SAMPLES = 60;\nconst DEFAULT_TIMESPAN = 60 * 60 * 1000; // 1 hour\n\nexport const usePrometheusPoll = ({\n  delay = DEFAULT_DELAY,\n  endpoint,\n  endTime = undefined,\n  namespace,\n  query,\n  samples = DEFAULT_SAMPLES,\n  timeout,\n  timespan = DEFAULT_TIMESPAN,\n}: PrometheusPollProps) => {\n  const url = getPrometheusURL({ endpoint, endTime, namespace, query, samples, timeout, timespan });\n  const [error, setError] = useState();\n  const [response, setResponse] = useState();\n  const [loading, setLoading] = useState(true);\n  const safeFetch = useSafeFetch();\n  const tick = useCallback(() => {\n    if (url) {\n      safeFetch(url)\n        .then((data) => {\n          setResponse(data);\n          setError(undefined);\n          setLoading(false);\n        })\n        .catch((err) => {\n          if (err.name !== 'AbortError') {\n            setError(err);\n            setLoading(false);\n            // eslint-disable-next-line no-console\n            console.error(`Error polling Prometheus: ${err}`);\n          }\n        });\n    } else {\n      setLoading(false);\n    }\n  }, [url]);\n\n  usePoll(tick, delay, endTime, query, timespan);\n\n  return [response, error, loading] as [PrometheusResponse, Error, boolean];\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  endpoint: PrometheusEndpoint;\n  endTime?: number;\n  namespace?: string;\n  query: string;\n  samples?: number;\n  timeout?: string;\n  timespan?: number;\n};\n"]}]}