{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationBody.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationBody.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ChartAxis } from '@patternfly/react-charts';\nimport { Grid } from '@patternfly/react-core';\nimport { useRefWidth } from '@console/internal/components/utils/ref-width-hook';\nimport './utilization-card.scss';\nimport { useTranslation } from 'react-i18next';\nconst formatDate = (date) => {\n    const minutes = `0${date.getMinutes()}`.slice(-2);\n    return `${date.getHours()}:${minutes}`;\n};\nconst UtilizationAxis = ({ timestamps = [] }) => {\n    const [containerRef, width] = useRefWidth();\n    return (React.createElement(\"div\", { ref: containerRef }, !!timestamps.length && (React.createElement(ChartAxis, { scale: { x: 'time' }, domain: { x: [timestamps[0], timestamps[timestamps.length - 1]] }, tickFormat: formatDate, orientation: \"top\", height: 15, width: width, padding: { top: 30, bottom: 0, left: 70, right: 0 }, style: {\n            axis: { visibility: 'hidden' },\n        }, fixLabelOverlap: true }))));\n};\nexport const UtilizationBody = ({ timestamps, children }) => {\n    const { t } = useTranslation();\n    const axis = (React.createElement(\"div\", { className: \"co-utilization-card__item\" },\n        React.createElement(\"div\", { className: \"co-utilization-card__item-section co-u-hidden co-u-visible-on-xl\" },\n            React.createElement(\"span\", { className: \"co-utilization-card__item-text\" }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_RESOURCE_1')),\n            React.createElement(\"span\", { className: \"co-utilization-card__item-text\" }, t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_USAGE_1'))),\n        React.createElement(\"div\", { className: \"co-utilization-card__item-chart co-utilization-card__item-chart--times\" },\n            React.createElement(UtilizationAxis, { timestamps: timestamps }))));\n    return (React.createElement(\"div\", { className: \"co-utilization-card__body\" },\n        React.createElement(Grid, null,\n            axis,\n            children)));\n};\nexport default UtilizationBody;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationBody.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/UtilizationBody.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,mDAAmD,CAAC;AAEhF,OAAO,yBAAyB,CAAC;AACjC,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,UAAU,GAAG,CAAC,IAAU,EAAU,EAAE;IACxC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,OAAO,EAAE,CAAC;AACzC,CAAC,CAAC;AAEF,MAAM,eAAe,GAAmC,CAAC,EAAE,UAAU,GAAG,EAAE,EAAE,EAAE,EAAE;IAC9E,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,GAAG,WAAW,EAAE,CAAC;IAC5C,OAAO,CACL,6BAAK,GAAG,EAAE,YAAY,IACnB,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CACtB,oBAAC,SAAS,IACR,KAAK,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,EACpB,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,EACjE,UAAU,EAAE,UAAU,EACtB,WAAW,EAAC,KAAK,EACjB,MAAM,EAAE,EAAE,EACV,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EACnD,KAAK,EAAE;YACL,IAAI,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;SAC/B,EACD,eAAe,SACf,CACH,CACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAmC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC1F,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,MAAM,IAAI,GAAG,CACX,6BAAK,SAAS,EAAC,2BAA2B;QACxC,6BAAK,SAAS,EAAC,kEAAkE;YAC/E,8BAAM,SAAS,EAAC,gCAAgC,IAAE,CAAC,CAAC,4DAA4D,CAAC,CAAQ;YACzH,8BAAM,SAAS,EAAC,gCAAgC,IAAE,CAAC,CAAC,yDAAyD,CAAC,CAAQ,CAClH;QACN,6BAAK,SAAS,EAAC,wEAAwE;YACrF,oBAAC,eAAe,IAAC,UAAU,EAAE,UAAU,GAAI,CACvC,CACF,CACP,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAC,2BAA2B;QACxC,oBAAC,IAAI;YACF,IAAI;YACJ,QAAQ,CACJ,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { ChartAxis } from '@patternfly/react-charts';\nimport { Grid } from '@patternfly/react-core';\nimport { useRefWidth } from '@console/internal/components/utils/ref-width-hook';\n\nimport './utilization-card.scss';\nimport { useTranslation } from 'react-i18next';\n\nconst formatDate = (date: Date): string => {\n  const minutes = `0${date.getMinutes()}`.slice(-2);\n  return `${date.getHours()}:${minutes}`;\n};\n\nconst UtilizationAxis: React.FC<UtilizationAxisProps> = ({ timestamps = [] }) => {\n  const [containerRef, width] = useRefWidth();\n  return (\n    <div ref={containerRef}>\n      {!!timestamps.length && (\n        <ChartAxis\n          scale={{ x: 'time' }}\n          domain={{ x: [timestamps[0], timestamps[timestamps.length - 1]] }}\n          tickFormat={formatDate}\n          orientation=\"top\"\n          height={15}\n          width={width}\n          padding={{ top: 30, bottom: 0, left: 70, right: 0 }}\n          style={{\n            axis: { visibility: 'hidden' },\n          }}\n          fixLabelOverlap\n        />\n      )}\n    </div>\n  );\n};\n\nexport const UtilizationBody: React.FC<UtilizationBodyProps> = ({ timestamps, children }) => {\n  const { t } = useTranslation();\n  const axis = (\n    <div className=\"co-utilization-card__item\">\n      <div className=\"co-utilization-card__item-section co-u-hidden co-u-visible-on-xl\">\n        <span className=\"co-utilization-card__item-text\">{t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_RESOURCE_1')}</span>\n        <span className=\"co-utilization-card__item-text\">{t('SINGLE:MSG_OVERVIEW_MAIN_CARDCLUSTERUTILIZATION_USAGE_1')}</span>\n      </div>\n      <div className=\"co-utilization-card__item-chart co-utilization-card__item-chart--times\">\n        <UtilizationAxis timestamps={timestamps} />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"co-utilization-card__body\">\n      <Grid>\n        {axis}\n        {children}\n      </Grid>\n    </div>\n  );\n};\n\nexport default UtilizationBody;\n\ntype UtilizationBodyProps = {\n  children: React.ReactNode;\n  timestamps: Date[];\n};\n\ntype UtilizationAxisProps = {\n  timestamps: Date[];\n};\n"]}]}