{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport PipelineVisualization from '../../pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport { pipelineRefExists } from '../../../utils/pipeline-augment';\nconst PipelineRunVisualization = ({ pipelineRun }) => {\n    const [errorMessage, setErrorMessage] = React.useState(null);\n    const [pipeline, setPipeline] = React.useState(null);\n    React.useEffect(() => {\n        if (pipelineRefExists(pipelineRun)) {\n            k8sGet(PipelineModel, pipelineRun.spec.pipelineRef.name, pipelineRun.metadata.namespace)\n                .then((res) => setPipeline(res))\n                .catch((error) => setErrorMessage((error === null || error === void 0 ? void 0 : error.message) || 'Could not load visualization at this time.'));\n        }\n        else {\n            const p = {\n                spec: {\n                    tasks: pipelineRun.spec.pipelineSpec.tasks.map((task) => {\n                        return {\n                            name: task.name,\n                            params: task.params,\n                            taskRef: {\n                                name: task.name,\n                            },\n                            runAfter: task.runAfter,\n                            resources: task.resources\n                        };\n                    })\n                }\n            };\n            setPipeline(p);\n        }\n    }, [pipelineRun, setPipeline]);\n    if (errorMessage) {\n        return React.createElement(Alert, { variant: \"danger\", isInline: true, title: errorMessage });\n    }\n    if (!pipeline || !pipelineRun) {\n        return null;\n    }\n    return React.createElement(PipelineVisualization, { pipeline: pipeline, pipelineRun: pipelineRun });\n};\nexport default PipelineRunVisualization;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,qBAAqB,MAAM,yEAAyE,CAAC;AAC5G,OAAO,EAAyB,iBAAiB,EAAgB,MAAM,iCAAiC,CAAC;AAMzG,MAAM,wBAAwB,GAA4C,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;IAC5F,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAS,IAAI,CAAC,CAAC;IACrE,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAW,IAAI,CAAC,CAAC;IAE/D,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,iBAAiB,CAAC,WAAW,CAAC,EAAE;YAClC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC;iBACrF,IAAI,CAAC,CAAC,GAAa,EAAE,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,eAAe,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,4CAA4C,CAAC,CAChF,CAAC;SACL;aAAM;YACL,MAAM,CAAC,GAAa;gBAClB,IAAI,EAAE;oBACJ,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAgB,EAAE;wBACpE,OAAO;4BACL,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,MAAM,EAAE,IAAI,CAAC,MAAM;4BACnB,OAAO,EAAE;gCACP,IAAI,EAAE,IAAI,CAAC,IAAI;6BAChB;4BACD,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,SAAS,EAAE,IAAI,CAAC,SAAS;yBAC1B,CAAA;oBACH,CAAC,CAAC;iBACH;aACF,CAAC;YACF,WAAW,CAAC,CAAC,CAAC,CAAC;SAChB;IACH,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IAE/B,IAAI,YAAY,EAAE;QAChB,OAAO,oBAAC,KAAK,IAAC,OAAO,EAAC,QAAQ,EAAC,QAAQ,QAAC,KAAK,EAAE,YAAY,GAAI,CAAC;KACjE;IAED,IAAI,CAAC,QAAQ,IAAI,CAAC,WAAW,EAAE;QAC7B,OAAO,IAAI,CAAC;KACb;IAED,OAAO,oBAAC,qBAAqB,IAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,GAAI,CAAC;AACjF,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport PipelineVisualization from '../../pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport { Pipeline, PipelineRun, pipelineRefExists, PipelineTask } from '../../../utils/pipeline-augment';\n\ntype PipelineRunVisualizationProps = {\n  pipelineRun: PipelineRun;\n};\n\nconst PipelineRunVisualization: React.FC<PipelineRunVisualizationProps> = ({ pipelineRun }) => {\n  const [errorMessage, setErrorMessage] = React.useState<string>(null);\n  const [pipeline, setPipeline] = React.useState<Pipeline>(null);\n\n  React.useEffect(() => {\n    if (pipelineRefExists(pipelineRun)) {\n      k8sGet(PipelineModel, pipelineRun.spec.pipelineRef.name, pipelineRun.metadata.namespace)\n        .then((res: Pipeline) => setPipeline(res))\n        .catch((error) =>\n          setErrorMessage(error?.message || 'Could not load visualization at this time.'),\n        );\n    } else {\n      const p: Pipeline = {\n        spec: {\n          tasks: pipelineRun.spec.pipelineSpec.tasks.map((task): PipelineTask => {\n            return {\n              name: task.name,\n              params: task.params,\n              taskRef: {\n                name: task.name,\n              },\n              runAfter: task.runAfter,\n              resources: task.resources\n            }\n          })\n        }\n      };\n      setPipeline(p);\n    }\n  }, [pipelineRun, setPipeline]);\n\n  if (errorMessage) {\n    return <Alert variant=\"danger\" isInline title={errorMessage} />;\n  }\n\n  if (!pipeline || !pipelineRun) {\n    return null;\n  }\n\n  return <PipelineVisualization pipeline={pipeline} pipelineRun={pipelineRun} />;\n};\n\nexport default PipelineRunVisualization;\n"]}]}