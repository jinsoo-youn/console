{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { SecretModel } from '@console/internal/models';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\nexport const getDefinedObj = (objData) => {\n    return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\nexport const createPipelineResource = (params, type, namespace, secretResp) => {\n    const resourceName = `${type}-${getRandomChars(6)}`;\n    const pipelineResource = {\n        apiVersion: 'tekton.dev/v1alpha1',\n        kind: PipelineResourceModel.kind,\n        metadata: {\n            name: resourceName,\n            namespace,\n        },\n        spec: Object.assign({ type, params: convertMapToNameValueArray(getDefinedObj(params)) }, (secretResp && {\n            secrets: _.map(secretResp.data, (value, name) => {\n                return {\n                    fieldName: name,\n                    secretKey: name,\n                    secretName: secretResp.metadata.name,\n                };\n            }),\n        })),\n    };\n    return k8sCreate(PipelineResourceModel, pipelineResource);\n};\nexport const createSecretResource = (secret, type, namespace) => {\n    const resourceName = `${type}-secret-${getRandomChars(6)}`;\n    const secretResource = {\n        apiVersion: 'v1',\n        kind: 'Secret',\n        metadata: {\n            name: resourceName,\n            namespace,\n        },\n        stringData: getDefinedObj(secret),\n    };\n    return k8sCreate(SecretModel, secretResource);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,SAAS,EAAmB,MAAM,8BAA8B,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AACjE,OAAO,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,0BAA0B,EAAE,MAAM,wBAAwB,CAAC;AAMpE,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAkB,EAAa,EAAE;IAC7D,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC/E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,MAAiB,EACjB,IAAY,EACZ,SAAiB,EACjB,UAA4B,EACF,EAAE;IAC5B,MAAM,YAAY,GAAG,GAAG,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;IACpD,MAAM,gBAAgB,GAAoB;QACxC,UAAU,EAAE,qBAAqB;QACjC,IAAI,EAAE,qBAAqB,CAAC,IAAI;QAChC,QAAQ,EAAE;YACR,IAAI,EAAE,YAAY;YAClB,SAAS;SACV;QACD,IAAI,kBACF,IAAI,EACJ,MAAM,EAAE,0BAA0B,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IACtD,CAAC,UAAU,IAAI;YAChB,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBAC9C,OAAO;oBACL,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI;iBACrC,CAAC;YACJ,CAAC,CAAC;SACH,CAAC,CACH;KACF,CAAC;IAEF,OAAO,SAAS,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,MAAiB,EACjB,IAAY,EACZ,SAAiB,EACS,EAAE;IAC5B,MAAM,YAAY,GAAG,GAAG,IAAI,WAAW,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3D,MAAM,cAAc,GAAG;QACrB,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE;YACR,IAAI,EAAE,YAAY;YAClB,SAAS;SACV;QACD,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC;KAClC,CAAC;IACF,OAAO,SAAS,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAChD,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { SecretModel } from '@console/internal/models';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n"]}]}