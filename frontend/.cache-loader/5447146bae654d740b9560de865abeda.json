{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/template-instance.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/template-instance.tsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { TemplateInstanceModel } from '../../models';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nconst { common } = Kebab.factory;\nconst kind = TemplateInstanceModel.kind;\nexport const templateInstanceMenuActions = [...Kebab.getExtensionsActionsForKind(TemplateInstanceModel), ...common];\nconst templateInstancePhase = instance => {\n    let phase = '';\n    if (instance.status) {\n        instance.status.conditions.forEach(cur => {\n            if (cur.type === '') {\n                phase = cur.status;\n            }\n        });\n        return phase;\n    }\n};\nconst templateObjectsSummary = templateinstance => {\n    var _a, _b, _c, _d;\n    // NOTE: template instance가 cluster/namespace 스코프에 따라 objects 정보의 위치가 달라서 분기처리함\n    const objects = !!((_b = (_a = templateinstance.spec) === null || _a === void 0 ? void 0 : _a.clustertemplate) === null || _b === void 0 ? void 0 : _b.objects) ? templateinstance.spec.clustertemplate.objects : !!((_d = (_c = templateinstance.spec) === null || _c === void 0 ? void 0 : _c.template) === null || _d === void 0 ? void 0 : _d.objects) ? templateinstance.spec.template.objects : [];\n    let objMap = new Map();\n    for (const i in objects) {\n        const kind = !!objects[i].kind ? objects[i].kind : 'unknown kind';\n        if (!!objMap.get(kind)) {\n            const num = objMap.get(kind);\n            objMap.set(kind, num + 1);\n        }\n        else {\n            objMap.set(kind, 1);\n        }\n    }\n    const objectList = [];\n    objMap.forEach((value, key) => {\n        objectList.push(React.createElement(\"div\", null,\n            key,\n            \" \",\n            value));\n    });\n    return React.createElement(\"div\", null, objectList);\n};\nconst TemplateInstanceDetails = ({ obj: templateInstance }) => {\n    var _a, _b, _c;\n    const { t } = useTranslation();\n    let phase = templateInstancePhase(templateInstance);\n    const objectSummary = templateObjectsSummary(templateInstance);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(templateInstance, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(ResourceSummary, { resource: templateInstance, showPodSelector: true, showNodeSelector: true, showOwner: false })),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13'), obj: templateInstance, path: \"status.phase\" },\n                            React.createElement(Status, { status: phase })),\n                        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104')),\n                        React.createElement(\"dd\", null, objectSummary),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_LNB_MENU_17'), obj: templateInstance, path: \"metadata.labels.serviceInstanceRef\" }, !!((_a = templateInstance.metadata.labels) === null || _a === void 0 ? void 0 : _a.serviceInstanceRef) ? React.createElement(ResourceLink, { kind: \"ServiceInstance\", name: (_b = templateInstance.metadata.labels) === null || _b === void 0 ? void 0 : _b.serviceInstanceRef, title: (_c = templateInstance.metadata.labels) === null || _c === void 0 ? void 0 : _c.serviceInstanceRef }) : 'None')))))));\n};\nconst { details, editYaml } = navFactory;\nconst TemplateInstancesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: templateInstanceMenuActions, pages: [details(TemplateInstanceDetails), editYaml()] }));\nTemplateInstancesDetailsPage.displayName = 'TemplateInstancesDetailsPage';\nconst tableColumnClasses = [\n    '',\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    Kebab.columnClass,\n];\nconst TemplateInstanceTableRow = ({ obj, index, key, style }) => {\n    var _a, _b, _c;\n    let phase = templateInstancePhase(obj);\n    const objectSummary = templateObjectsSummary(obj);\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1]) },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace, title: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: phase })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, objectSummary),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, !!((_a = obj.metadata.labels) === null || _a === void 0 ? void 0 : _a.serviceInstanceRef) ? React.createElement(ResourceLink, { kind: \"ServiceInstance\", name: (_b = obj.metadata.labels) === null || _b === void 0 ? void 0 : _b.serviceInstanceRef, namespace: obj.metadata.namespace, title: (_c = obj.metadata.labels) === null || _c === void 0 ? void 0 : _c.serviceInstanceRef }) : 'None'),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(ResourceKebab, { actions: templateInstanceMenuActions, kind: kind, resource: obj }))));\n};\nconst TemplateInstanceTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'templateInstancePhase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104'),\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_LNB_MENU_17'),\n            sortField: 'metadata.labels.serviceInstanceRef',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[6] },\n        },\n    ];\n};\nTemplateInstanceTableHeader.displayName = 'TemplateInstanceTableHeader';\nconst TemplateInstancesList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Template Instance\", Header: TemplateInstanceTableHeader.bind(null, t), Row: TemplateInstanceTableRow }));\n};\nTemplateInstancesList.displayName = 'TemplateInstancesList';\nconst TemplateInstancesPage = props => {\n    const { t } = useTranslation();\n    return (React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_21'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_21') }), canCreate: true, kind: kind, ListComponent: TemplateInstancesList, rowFilters: [\n            {\n                filterGroupName: 'Status',\n                type: 'template-instance-status',\n                reducer: templateInstancePhase,\n                items: [\n                    { id: 'Success', title: t('COMMON:MSG_COMMON_FILTER_5') },\n                    { id: 'Failed', title: t('COMMON:MSG_COMMON_FILTER_6') },\n                ],\n            },\n        ] }, props)));\n};\nTemplateInstancesPage.displayName = 'TemplateInstancesPage';\nexport { TemplateInstancesList, TemplateInstancesPage, TemplateInstancesDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/template-instance.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/template-instance.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Status } from '@console/shared';\nimport { sortable } from '@patternfly/react-table';\nimport { TemplateInstanceModel } from '../../models';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, TableData, TableRow } from '../factory';\nimport { DetailsItem, Kebab, navFactory, SectionHeading, ResourceSummary, ResourceLink, ResourceKebab, Timestamp } from '../utils';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nconst { common } = Kebab.factory;\n\nconst kind = TemplateInstanceModel.kind;\n\nexport const templateInstanceMenuActions = [...Kebab.getExtensionsActionsForKind(TemplateInstanceModel), ...common];\n\nconst templateInstancePhase = instance => {\n  let phase = '';\n  if (instance.status) {\n    instance.status.conditions.forEach(cur => {\n      if (cur.type === '') {\n        phase = cur.status;\n      }\n    });\n    return phase;\n  }\n};\n\nconst templateObjectsSummary = templateinstance => {\n  // NOTE: template instance가 cluster/namespace 스코프에 따라 objects 정보의 위치가 달라서 분기처리함\n  const objects = !!templateinstance.spec?.clustertemplate?.objects ? templateinstance.spec.clustertemplate.objects : !!templateinstance.spec?.template?.objects ? templateinstance.spec.template.objects : [];\n  let objMap = new Map();\n  for (const i in objects) {\n    const kind = !!objects[i].kind ? objects[i].kind : 'unknown kind';\n    if (!!objMap.get(kind)) {\n      const num = objMap.get(kind) as number;\n      objMap.set(kind, num + 1);\n    } else {\n      objMap.set(kind, 1);\n    }\n  }\n  const objectList = [];\n  objMap.forEach((value, key) => {\n    objectList.push(\n      <div>\n        {key} {value}\n      </div>,\n    );\n  });\n\n  return <div>{objectList}</div>;\n};\n\nconst TemplateInstanceDetails: React.FC<TemplateInstanceDetailsProps> = ({ obj: templateInstance }) => {\n  const { t } = useTranslation();\n  let phase = templateInstancePhase(templateInstance);\n  const objectSummary = templateObjectsSummary(templateInstance);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', {0: ResourceLabel(templateInstance, t)})} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={templateInstance} showPodSelector showNodeSelector showOwner={false}></ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={templateInstance} path=\"status.phase\">\n                <Status status={phase} />\n              </DetailsItem>\n              <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104')}</dt>\n              <dd>{objectSummary}</dd>\n              <DetailsItem label={t('COMMON:MSG_LNB_MENU_17')} obj={templateInstance} path=\"metadata.labels.serviceInstanceRef\">\n                {!!templateInstance.metadata.labels?.serviceInstanceRef ? <ResourceLink kind=\"ServiceInstance\" name={templateInstance.metadata.labels?.serviceInstanceRef} title={templateInstance.metadata.labels?.serviceInstanceRef} /> : 'None'}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype TemplateInstanceDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nconst { details, editYaml } = navFactory;\nconst TemplateInstancesDetailsPage: React.FC<TemplateInstancesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={templateInstanceMenuActions} pages={[details(TemplateInstanceDetails), editYaml()]} />;\nTemplateInstancesDetailsPage.displayName = 'TemplateInstancesDetailsPage';\n\nconst tableColumnClasses = [\n  '', // NAME\n  '', // NAMESPACE\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), // STATUS\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // RESOURCE SUMMARY\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // SERVICE INSTANCE\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // CREATED\n  Kebab.columnClass, // MENU ACTIONS\n];\n\nconst TemplateInstanceTableRow = ({ obj, index, key, style }) => {\n  let phase = templateInstancePhase(obj);\n  const objectSummary = templateObjectsSummary(obj);\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} title={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} title={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{objectSummary}</TableData>\n      <TableData className={tableColumnClasses[4]}>{!!obj.metadata.labels?.serviceInstanceRef ? <ResourceLink kind=\"ServiceInstance\" name={obj.metadata.labels?.serviceInstanceRef} namespace={obj.metadata.namespace} title={obj.metadata.labels?.serviceInstanceRef} /> : 'None'}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={templateInstanceMenuActions} kind={kind} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst TemplateInstanceTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'templateInstancePhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_104'),\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_LNB_MENU_17'),\n      sortField: 'metadata.labels.serviceInstanceRef',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nTemplateInstanceTableHeader.displayName = 'TemplateInstanceTableHeader';\n\nconst TemplateInstancesList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Template Instance\" Header={TemplateInstanceTableHeader.bind(null, t)} Row={TemplateInstanceTableRow} />;\n};\nTemplateInstancesList.displayName = 'TemplateInstancesList';\n\nconst TemplateInstancesPage: React.FC<TemplateInstancesPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      title={t('COMMON:MSG_LNB_MENU_21')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_21') })}\n      canCreate={true}\n      kind={kind}\n      ListComponent={TemplateInstancesList}\n      rowFilters={[\n        {\n          filterGroupName: 'Status',\n          type: 'template-instance-status',\n          reducer: templateInstancePhase,\n          items: [\n            { id: 'Success', title: t('COMMON:MSG_COMMON_FILTER_5') },\n            { id: 'Failed', title: t('COMMON:MSG_COMMON_FILTER_6') },\n          ],\n        },\n      ]}\n      {...props}\n    />\n  );\n};\nTemplateInstancesPage.displayName = 'TemplateInstancesPage';\n\nexport { TemplateInstancesList, TemplateInstancesPage, TemplateInstancesDetailsPage };\n\ntype TemplateInstancesPageProps = {};\n\ntype TemplateInstancesDetailsPageProps = {\n  match: any;\n};\n"]}]}