{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/create-backingstore-page/create-bs-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/create-backingstore-page/create-bs-page.tsx","mtime":1615298458680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Alert, AlertActionCloseButton, Title } from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils/router';\nimport { BreadCrumbs, resourcePathFromModel } from '@console/internal/components/utils';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { NooBaaBackingStoreModel } from '../../models';\nimport CreateBackingStoreForm from './create-bs';\nimport './create-bs.scss';\nconst CreateBackingStoreFormPage = ({ match }) => {\n    const [showHelp, setShowHelp] = React.useState(true);\n    const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n    const { ns, appName } = match.params;\n    const onCancel = () => {\n        history.goBack();\n    };\n    React.useEffect(() => {\n        k8sGet(ClusterServiceVersionModel, appName, ns)\n            .then((clusterServiceVersionObj) => {\n            setClusterServiceVersion(clusterServiceVersionObj);\n        })\n            .catch(() => setClusterServiceVersion(null));\n    }, [appName, ns]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-create-operand__header\" },\n            React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" },\n                React.createElement(BreadCrumbs, { breadcrumbs: [\n                        {\n                            name: _.get(clusterServiceVersion, 'spec.displayName', 'Openshift Container Storage Operator'),\n                            path: resourcePathFromModel(ClusterServiceVersionModel, appName, ns),\n                        },\n                        { name: `Create ${NooBaaBackingStoreModel.label}`, path: match.url },\n                    ] })),\n            React.createElement(\"div\", { className: \"nb-bs-page-title\" },\n                React.createElement(Title, { size: \"2xl\", headingLevel: \"h1\", className: \"nb-bs-page-title__main\" }, \"Create new Backing Store\"),\n                React.createElement(\"p\", { className: \"nb-bs-page-title__info\" }, \"Storage targets that are used to store chunks of data on MCG buckets.\"))),\n        React.createElement(\"div\", { className: \"nb-bs-page\" },\n            showHelp && (React.createElement(Alert, { isInline: true, variant: \"info\", title: \"What is a Backing Store?\", action: React.createElement(AlertActionCloseButton, { onClose: () => setShowHelp(false) }) },\n                \"A backing store represents a storage target to be used as the underlying storage layer in MCG buckets.\",\n                React.createElement(\"br\", null),\n                \"Multiple types of backing stores are supported: AWS S3, S3 Compatible, Google Cloud Storage, Azure Blob, PVC.\")),\n            React.createElement(CreateBackingStoreForm, { cancel: onCancel, isPage: true, namespace: ns, className: \"nb-bs-page-form__short\", csv: clusterServiceVersion }))));\n};\nexport default CreateBackingStoreFormPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/create-backingstore-page/create-bs-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/create-backingstore-page/create-bs-page.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAC9E,OAAO,EAAE,OAAO,EAAE,MAAM,2CAA2C,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AACxF,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AACtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,gDAAgD,CAAC;AAC5F,OAAO,EAAE,uBAAuB,EAAE,MAAM,cAAc,CAAC;AACvD,OAAO,sBAAsB,MAAM,aAAa,CAAC;AACjD,OAAO,kBAAkB,CAAC;AAE1B,MAAM,0BAA0B,GAA8C,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAC1F,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrD,MAAM,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/E,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;IAErC,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,OAAO,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,MAAM,CAAC,0BAA0B,EAAE,OAAO,EAAE,EAAE,CAAC;aAC5C,IAAI,CAAC,CAAC,wBAAwB,EAAE,EAAE;YACjC,wBAAwB,CAAC,wBAAwB,CAAC,CAAC;QACrD,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAElB,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,2BAA2B;YACxC,6BAAK,SAAS,EAAC,mCAAmC;gBAChD,oBAAC,WAAW,IACV,WAAW,EAAE;wBACX;4BACE,IAAI,EAAE,CAAC,CAAC,GAAG,CACT,qBAAqB,EACrB,kBAAkB,EAClB,sCAAsC,CACvC;4BACD,IAAI,EAAE,qBAAqB,CAAC,0BAA0B,EAAE,OAAO,EAAE,EAAE,CAAC;yBACrE;wBACD,EAAE,IAAI,EAAE,UAAU,uBAAuB,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE;qBACrE,GACD,CACE;YACN,6BAAK,SAAS,EAAC,kBAAkB;gBAC/B,oBAAC,KAAK,IAAC,IAAI,EAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAC,SAAS,EAAC,wBAAwB,+BAE9D;gBACR,2BAAG,SAAS,EAAC,wBAAwB,4EAEjC,CACA,CACF;QACN,6BAAK,SAAS,EAAC,YAAY;YACxB,QAAQ,IAAI,CACX,oBAAC,KAAK,IACJ,QAAQ,QACR,OAAO,EAAC,MAAM,EACd,KAAK,EAAC,0BAA0B,EAChC,MAAM,EAAE,oBAAC,sBAAsB,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,GAAI;;gBAIrE,+BAAM;gIAGA,CACT;YACD,oBAAC,sBAAsB,IACrB,MAAM,EAAE,QAAQ,EAChB,MAAM,QACN,SAAS,EAAE,EAAE,EACb,SAAS,EAAC,wBAAwB,EAClC,GAAG,EAAE,qBAAqB,GAC1B,CACE,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAIF,eAAe,0BAA0B,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RouteComponentProps } from 'react-router';\nimport { Alert, AlertActionCloseButton, Title } from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils/router';\nimport { BreadCrumbs, resourcePathFromModel } from '@console/internal/components/utils';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { NooBaaBackingStoreModel } from '../../models';\nimport CreateBackingStoreForm from './create-bs';\nimport './create-bs.scss';\n\nconst CreateBackingStoreFormPage: React.FC<CreateBackingStoreFormPageProps> = ({ match }) => {\n  const [showHelp, setShowHelp] = React.useState(true);\n  const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n  const { ns, appName } = match.params;\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  React.useEffect(() => {\n    k8sGet(ClusterServiceVersionModel, appName, ns)\n      .then((clusterServiceVersionObj) => {\n        setClusterServiceVersion(clusterServiceVersionObj);\n      })\n      .catch(() => setClusterServiceVersion(null));\n  }, [appName, ns]);\n\n  return (\n    <>\n      <div className=\"co-create-operand__header\">\n        <div className=\"co-create-operand__header-buttons\">\n          <BreadCrumbs\n            breadcrumbs={[\n              {\n                name: _.get(\n                  clusterServiceVersion,\n                  'spec.displayName',\n                  'Openshift Container Storage Operator',\n                ),\n                path: resourcePathFromModel(ClusterServiceVersionModel, appName, ns),\n              },\n              { name: `Create ${NooBaaBackingStoreModel.label}`, path: match.url },\n            ]}\n          />\n        </div>\n        <div className=\"nb-bs-page-title\">\n          <Title size=\"2xl\" headingLevel=\"h1\" className=\"nb-bs-page-title__main\">\n            Create new Backing Store\n          </Title>\n          <p className=\"nb-bs-page-title__info\">\n            Storage targets that are used to store chunks of data on MCG buckets.\n          </p>\n        </div>\n      </div>\n      <div className=\"nb-bs-page\">\n        {showHelp && (\n          <Alert\n            isInline\n            variant=\"info\"\n            title=\"What is a Backing Store?\"\n            action={<AlertActionCloseButton onClose={() => setShowHelp(false)} />}\n          >\n            A backing store represents a storage target to be used as the underlying storage layer\n            in MCG buckets.\n            <br />\n            Multiple types of backing stores are supported: AWS S3, S3 Compatible, Google Cloud\n            Storage, Azure Blob, PVC.\n          </Alert>\n        )}\n        <CreateBackingStoreForm\n          cancel={onCancel}\n          isPage\n          namespace={ns}\n          className=\"nb-bs-page-form__short\"\n          csv={clusterServiceVersion}\n        />\n      </div>\n    </>\n  );\n};\n\ntype CreateBackingStoreFormPageProps = RouteComponentProps<{ ns?: string; appName?: string }>;\n\nexport default CreateBackingStoreFormPage;\n"]}]}