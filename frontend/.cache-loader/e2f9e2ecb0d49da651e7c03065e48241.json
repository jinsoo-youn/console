{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageScanRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(ImageScanRequestModel), ...Kebab.factory.common];\nconst kind = ImageScanRequestModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst ImageScanRequestTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.status',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nImageScanRequestTableHeader.displayName = 'ImageScanRequestTableHeader';\nconst ImageScanRequestTableRow = ({ obj: scanrequest, index, key, style }) => {\n    var _a;\n    return (React.createElement(TableRow, { id: scanrequest.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: scanrequest.metadata.name, namespace: scanrequest.metadata.namespace, title: scanrequest.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: scanrequest.metadata.namespace, title: scanrequest.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: (_a = scanrequest === null || scanrequest === void 0 ? void 0 : scanrequest.status) === null || _a === void 0 ? void 0 : _a.status })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: scanrequest.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: scanrequest }))));\n};\nexport const ImageScanRequestStatus = ({ result }) => React.createElement(Status, { status: result });\nexport const ImageScanRequestDetailsList = ({ ds }) => {\n    var _a;\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(\"dt\", null, t('COMMON:MSG_MAIN_TABLEHEADER_3')),\n        React.createElement(\"dd\", null,\n            React.createElement(ImageScanRequestStatus, { result: (_a = ds === null || ds === void 0 ? void 0 : ds.status) === null || _a === void 0 ? void 0 : _a.status }))));\n};\nexport const ScanResultRow = ({ scanList }) => {\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, scanList === null || scanList === void 0 ? void 0 : scanList.image),\n        React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 hidden-xs\" }, scanList === null || scanList === void 0 ? void 0 : scanList.summary)));\n};\nexport const ScanResultTable = ({ heading, scanList }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SectionHeading, { text: heading }),\n        React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n            React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, `${t('COMMON:MSG_DETAILS_CONTAINER_IMAGEDETAILS_1')}`),\n                React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, `${t('COMMON:MSG_DETAILS_TABDETAILS_21')}`)),\n            React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, scanList.map((c, i) => (React.createElement(ScanResultRow, { key: i, scanList: c })))))));\n};\nconst ImageScanRequestDetails = ({ obj: scanrequest }) => {\n    var _a;\n    const { t } = useTranslation();\n    const summaries = [];\n    for (const key in (_a = scanrequest.status) === null || _a === void 0 ? void 0 : _a.results) {\n        let summary = { image: '', summary: '' };\n        summary.image = key;\n        for (const statusKey in scanrequest.status.results[key].summary) {\n            summary.summary += `${statusKey} ${scanrequest.status.results[key].summary[statusKey]}, `;\n        }\n        summary.summary = summary.summary.substr(0, summary.summary.length - 2);\n        summaries.push(summary);\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(scanrequest, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: scanrequest })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ImageScanRequestDetailsList, { ds: scanrequest })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(ScanResultTable, { heading: \"Scan Result\", scanList: summaries }))));\n};\nconst { details, editYaml } = navFactory;\nexport const ImageScanRequests = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"ImageScanRequests\", Header: ImageScanRequestTableHeader.bind(null, t), Row: ImageScanRequestTableRow, virtualize: true }));\n};\nexport const ImageScanRequestsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_95'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_95') }), canCreate: true, ListComponent: ImageScanRequests, kind: kind }, props));\n};\nexport const ImageScanRequestsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(ImageScanRequestDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAGnD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,YAAY,CAAC;AAC5F,OAAO,EAAE,KAAK,EAAe,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAChJ,OAAO,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;AACrD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AAExE,MAAM,CAAC,MAAM,WAAW,GAAkB,CAAC,GAAG,KAAK,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAEjI,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAExC,MAAM,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,CAAC,EAAE,UAAU,CAAC,aAAa,EAAE,oBAAoB,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;AAE5K,MAAM,2BAA2B,GAAG,CAAC,CAAa,EAAE,EAAE;IACpD,OAAO;QACL;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,eAAe;YAC1B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,oBAAoB;YAC/B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,eAAe;YAC1B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,SAAS,EAAE,4BAA4B;YACvC,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,2BAA2B,CAAC,WAAW,GAAG,6BAA6B,CAAC;AAExE,MAAM,wBAAwB,GAAiC,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;;IACzG,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QAC5E,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAI,CAC/H;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC;YACtE,oBAAC,YAAY,IAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS,GAAI,CACpG;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,MAAM,IAAC,MAAM,QAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,0CAAE,MAAM,GAAI,CACrC;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,SAAS,IAAC,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,iBAAiB,GAAI,CACtD;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,aAAa,IAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,GAAI,CAChE,CACH,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAgD,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,oBAAC,MAAM,IAAC,MAAM,EAAE,MAAM,GAAI,CAAC;AAE9H,MAAM,CAAC,MAAM,2BAA2B,GAA+C,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;;IAChG,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,OAAO,CACL,4BAAI,SAAS,EAAC,oBAAoB;QAChC,gCAAK,CAAC,CAAC,+BAA+B,CAAC,CAAM;QAC7C;YACE,oBAAC,sBAAsB,IAAC,MAAM,QAAE,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,MAAM,0CAAE,MAAM,GAAI,CACnD,CAgBF,CACN,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,aAAa,GAAiC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC1E,OAAO,CACL,6BAAK,SAAS,EAAC,KAAK;QAClB,6BAAK,SAAS,EAAC,qCAAqC,IAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,CAAO;QAC5E,6BAAK,SAAS,EAAC,sCAAsC,IAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAO,CAC3E,CACP,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,eAAe,GAAmC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE;IACvF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,CACL;QACE,oBAAC,cAAc,IAAC,IAAI,EAAE,OAAO,GAAI;QACjC,6BAAK,SAAS,EAAC,2CAA2C;YACxD,6BAAK,SAAS,EAAC,2BAA2B;gBACxC,6BAAK,SAAS,EAAC,qCAAqC,IAAE,GAAG,CAAC,CAAC,6CAA6C,CAAC,EAAE,CAAO;gBAClH,6BAAK,SAAS,EAAC,qCAAqC,IAAE,GAAG,CAAC,CAAC,kCAAkC,CAAC,EAAE,CAAO,CACnG;YACN,6BAAK,SAAS,EAAC,uBAAuB,IACnC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAS,EAAE,EAAE,CAAC,CACnC,oBAAC,aAAa,IAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAI,CACvC,CAAC,CACE,CACF,CACL,CACJ,CAAC;AACJ,CAAC,CAAA;AAED,MAAM,uBAAuB,GAA2C,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;;IAC/F,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,KAAK,MAAM,GAAG,UAAI,WAAW,CAAC,MAAM,0CAAE,OAAO,EAAE;QAC7C,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACzC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;QACpB,KAAK,MAAM,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE;YAC/D,OAAO,CAAC,OAAO,IAAI,GAAG,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;SAC3F;QACD,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB;IAED,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAE,CAAC,CAAC,yCAAyC,EAAE,EAAE,CAAC,EAAE,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,GAAI;YAC5G,6BAAK,SAAS,EAAC,KAAK;gBAClB,6BAAK,SAAS,EAAC,UAAU;oBACvB,oBAAC,eAAe,IAAC,QAAQ,EAAE,WAAW,GAAI,CACtC;gBACN,6BAAK,SAAS,EAAC,UAAU;oBACvB,oBAAC,2BAA2B,IAAC,EAAE,EAAE,WAAW,GAAI,CAC5C,CACF,CACF;QACN,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,eAAe,IAAC,OAAO,EAAC,aAAa,EAAC,QAAQ,EAAE,SAAS,GAAI,CAC1D,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;AAEzC,MAAM,CAAC,MAAM,iBAAiB,GAAa,KAAK,CAAC,EAAE;IACjD,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,OAAO,oBAAC,KAAK,oBACP,KAAK,kBACE,mBAAmB,EAC9B,MAAM,EAAE,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EACjD,GAAG,EAAE,wBAAwB,EAC7B,UAAU,UACV,CAAC;AACL,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,qBAAqB,GAAyC,KAAK,CAAC,EAAE;IACjF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,OAAO,oBAAC,QAAQ,kBACd,KAAK,EAAE,CAAC,CAAC,wBAAwB,CAAC,EAClC,gBAAgB,EAAE,CAAC,CAAC,gCAAgC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,wBAAwB,CAAC,EAAE,CAAC,EACzF,SAAS,EAAE,IAAI,EACf,aAAa,EAAE,iBAAiB,EAChC,IAAI,EAAE,IAAI,IACN,KAAK,EACT,CAAC;AACL,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,4BAA4B,GAAgD,KAAK,CAAC,EAAE,CAAC,oBAAC,WAAW,oBAAK,KAAK,IAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageScanRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageScanRequestModel), ...Kebab.factory.common];\n\nconst kind = ImageScanRequestModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ImageScanRequestTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nImageScanRequestTableHeader.displayName = 'ImageScanRequestTableHeader';\n\nconst ImageScanRequestTableRow: RowFunction<K8sResourceKind> = ({ obj: scanrequest, index, key, style }) => {\n  return (\n    <TableRow id={scanrequest.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={scanrequest.metadata.name} namespace={scanrequest.metadata.namespace} title={scanrequest.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={scanrequest.metadata.namespace} title={scanrequest.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={scanrequest?.status?.status} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={scanrequest.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={scanrequest} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageScanRequestStatus: React.FC<ImageScanRequestStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageScanRequestDetailsList: React.FC<ImageScanRequestDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_3')}</dt>\n      <dd>\n        <ImageScanRequestStatus result={ds?.status?.status} />\n      </dd>\n      {/* <dt>Summary</dt>\n      {summaries.map(summary => {\n        let summaryDisplay = summary.map(status => {\n          return <li key={status.key}> {`${status.key} ${status.value}`}</li>;\n        });\n        return (\n          <>\n            <dd>\n              {summaryKey.shift()}\n              <ul>{summaryDisplay}</ul>\n            </dd>\n          </>\n        );\n      })} */}\n      {/* <DetailsItem label=\"Summary\" obj={ds} path=\"status.summary\" /> */}\n    </dl>\n  );\n};\nexport const ScanResultRow: React.FC<ScanResultRowProps> = ({ scanList }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{scanList?.image}</div>\n      <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">{scanList?.summary}</div>\n    </div>\n  );\n};\nexport const ScanResultTable: React.FC<ScanResultTableProps> = ({ heading, scanList }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_CONTAINER_IMAGEDETAILS_1')}`}</div>\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_TABDETAILS_21')}`}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {scanList.map((c: any, i: number) => (\n            <ScanResultRow key={i} scanList={c} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst ImageScanRequestDetails: React.FC<ImageScanRequestDetailsProps> = ({ obj: scanrequest }) => {\n  const { t } = useTranslation();\n  const summaries = [];\n  for (const key in scanrequest.status?.results) {\n    let summary = { image: '', summary: '' };\n    summary.image = key;\n    for (const statusKey in scanrequest.status.results[key].summary) {\n      summary.summary += `${statusKey} ${scanrequest.status.results[key].summary[statusKey]}, `;\n    }\n    summary.summary = summary.summary.substr(0, summary.summary.length - 2);\n    summaries.push(summary);\n  }\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(scanrequest, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={scanrequest} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageScanRequestDetailsList ds={scanrequest} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <ScanResultTable heading=\"Scan Result\" scanList={summaries} />\n      </div>\n    </>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nexport const ImageScanRequests: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table\n    {...props}\n    aria-label=\"ImageScanRequests\"\n    Header={ImageScanRequestTableHeader.bind(null, t)}\n    Row={ImageScanRequestTableRow}\n    virtualize\n  />;\n}\n\nexport const ImageScanRequestsPage: React.FC<ImageScanRequestsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage\n    title={t('COMMON:MSG_LNB_MENU_95')}\n    createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_95') })}\n    canCreate={true}\n    ListComponent={ImageScanRequests}\n    kind={kind}\n    {...props}\n  />;\n}\n\nexport const ImageScanRequestsDetailsPage: React.FC<ImageScanRequestsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageScanRequestDetails)), editYaml()]} />;\n\ntype ImageScanRequestDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ScanResultTableProps = {\n  heading: string;\n  scanList: any;\n};\n\ntype ScanResultRowProps = {\n  scanList: any;\n};\n\ntype ImageScanRequestsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageScanRequestDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageScanRequestsDetailsPageProps = {\n  match: any;\n};\ntype ImageScanRequestStatusStatusProps = {\n  result: string;\n};\n"]}]}