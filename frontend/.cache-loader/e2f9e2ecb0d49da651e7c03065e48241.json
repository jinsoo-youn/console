{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","mtime":1617163139970},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageScanRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(ImageScanRequestModel), ...Kebab.factory.common];\nconst kind = ImageScanRequestModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst ImageScanRequestTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.status',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nImageScanRequestTableHeader.displayName = 'ImageScanRequestTableHeader';\nconst ImageScanRequestTableRow = ({ obj: scanrequest, index, key, style }) => {\n    var _a;\n    return (React.createElement(TableRow, { id: scanrequest.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: scanrequest.metadata.name, namespace: scanrequest.metadata.namespace, title: scanrequest.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: scanrequest.metadata.namespace, title: scanrequest.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: (_a = scanrequest === null || scanrequest === void 0 ? void 0 : scanrequest.status) === null || _a === void 0 ? void 0 : _a.status })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: scanrequest.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: scanrequest }))));\n};\nexport const ImageScanRequestStatus = ({ result }) => React.createElement(Status, { status: result });\nexport const ImageScanRequestDetailsList = ({ ds, summary }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const { t } = useTranslation();\n    let imageResult = [];\n    ds.spec.scanTargets.forEach(target => {\n        target.images.forEach(image => {\n            imageResult.push(React.createElement(\"span\", null, image));\n        });\n    });\n    const getImageResult = status => {\n        if (status === 'Pending' || !status) {\n            return '이미지 스캔대기 중입니다.';\n        }\n        else if (status === 'Scanning') {\n            return '이미지를 스캔 중입니다.';\n        }\n    };\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(\"dt\", null, t('COMMON:MSG_MAIN_TABLEHEADER_3')),\n        React.createElement(\"dd\", null,\n            React.createElement(ImageScanRequestStatus, { result: (_a = ds === null || ds === void 0 ? void 0 : ds.status) === null || _a === void 0 ? void 0 : _a.status })),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_42')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, getImageResult((_b = ds === null || ds === void 0 ? void 0 : ds.status) === null || _b === void 0 ? void 0 : _b.status)),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_5')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, (_c = ds === null || ds === void 0 ? void 0 : ds.spec) === null || _c === void 0 ? void 0 : _c.scanTargets.map(cur => `${cur === null || cur === void 0 ? void 0 : cur.registryUrl}/${cur === null || cur === void 0 ? void 0 : cur.images[0]}`)),\n        ((_d = ds === null || ds === void 0 ? void 0 : ds.status) === null || _d === void 0 ? void 0 : _d.status) === 'Success' && React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_21')),\n        ((_e = ds === null || ds === void 0 ? void 0 : ds.status) === null || _e === void 0 ? void 0 : _e.status) === 'Success' && (React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, _.keys(summary).map(cur => {\n            return React.createElement(\"span\", null, `${cur}: ${summary[cur]}`);\n        }))),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_15')),\n        React.createElement(\"dd\", null, ((_f = ds === null || ds === void 0 ? void 0 : ds.spec) === null || _f === void 0 ? void 0 : _f.insecure) ? t('COMMON:MSG_DETAILS_TABDETAILS_46') : t('COMMON:MSG_DETAILS_TABDETAILS_45')),\n        ((_g = ds === null || ds === void 0 ? void 0 : ds.spec) === null || _g === void 0 ? void 0 : _g.maxFixable) && React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_43')),\n        React.createElement(\"dd\", null, (_h = ds === null || ds === void 0 ? void 0 : ds.spec) === null || _h === void 0 ? void 0 : _h.maxFixable),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_44')),\n        React.createElement(\"dd\", null, ((_j = ds === null || ds === void 0 ? void 0 : ds.spec) === null || _j === void 0 ? void 0 : _j.sendReport) ? t('COMMON:MSG_DETAILS_TABDETAILS_47') : t('COMMON:MSG_DETAILS_TABDETAILS_48'))));\n};\nexport const ScanResultRow = ({ scanList }) => {\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, scanList === null || scanList === void 0 ? void 0 : scanList.image),\n        React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 hidden-xs\" }, scanList === null || scanList === void 0 ? void 0 : scanList.summary)));\n};\nexport const ScanResultTable = ({ heading, scanList }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SectionHeading, { text: heading }),\n        React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n            React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, `${t('COMMON:MSG_DETAILS_CONTAINER_IMAGEDETAILS_1')}`),\n                React.createElement(\"div\", { className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\" }, `${t('COMMON:MSG_DETAILS_TABDETAILS_21')}`)),\n            React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, scanList.map((c, i) => (React.createElement(ScanResultRow, { key: i, scanList: c })))))));\n};\nconst ImageScanRequestDetails = ({ obj: scanrequest }) => {\n    var _a, _b;\n    const { t } = useTranslation();\n    const summary = {};\n    for (const key in (_a = scanrequest.status) === null || _a === void 0 ? void 0 : _a.results) {\n        const result = (_b = scanrequest.status) === null || _b === void 0 ? void 0 : _b.results[key];\n        // let summary = { image: '', summaries: [] };\n        for (const statusKey in result.summary) {\n            const isKeyExist = _.has(summary, statusKey);\n            if (isKeyExist) {\n                summary[statusKey] += scanrequest.status.results[key].summary[statusKey];\n            }\n            else {\n                summary[statusKey] = scanrequest.status.results[key].summary[statusKey];\n            }\n        }\n    }\n    // [outdate] previous version\n    // for (const key in scanrequest.status?.results) {\n    //   let summary = { image: '', summary: '' };\n    //   summary.image = key;\n    //   for (const statusKey in scanrequest.status.results[key].summary) {\n    //     summary.summary += `${statusKey} ${scanrequest.status.results[key].summary[statusKey]}, `;\n    //   }\n    //   summary.summary = summary.summary.substr(0, summary.summary.length - 2);\n    //   summaries.push(summary);\n    // }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(scanrequest, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: scanrequest })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ImageScanRequestDetailsList, { ds: scanrequest, summary: summary }))))));\n};\nconst { details, editYaml } = navFactory;\nexport const ImageScanRequests = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"ImageScanRequests\", Header: ImageScanRequestTableHeader.bind(null, t), Row: ImageScanRequestTableRow, virtualize: true }));\n};\nexport const ImageScanRequestsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_95'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_95') }), canCreate: true, ListComponent: ImageScanRequests, kind: kind }, props));\n};\nexport const ImageScanRequestsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(ImageScanRequestDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-scan-request.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageScanRequestModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageScanRequestModel), ...Kebab.factory.common];\n\nconst kind = ImageScanRequestModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ImageScanRequestTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\n\nImageScanRequestTableHeader.displayName = 'ImageScanRequestTableHeader';\n\nconst ImageScanRequestTableRow: RowFunction<K8sResourceKind> = ({ obj: scanrequest, index, key, style }) => {\n  return (\n    <TableRow id={scanrequest.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={scanrequest.metadata.name} namespace={scanrequest.metadata.namespace} title={scanrequest.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={scanrequest.metadata.namespace} title={scanrequest.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={scanrequest?.status?.status} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={scanrequest.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={scanrequest} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageScanRequestStatus: React.FC<ImageScanRequestStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageScanRequestDetailsList: React.FC<ImageScanRequestDetailsListProps> = ({ ds, summary }) => {\n  const { t } = useTranslation();\n  let imageResult = [];\n\n  ds.spec.scanTargets.forEach(target => {\n    target.images.forEach(image => {\n      imageResult.push(<span>{image}</span>);\n    });\n  });\n\n  const getImageResult = status => {\n    if (status === 'Pending' || !status) {\n      return '이미지 스캔대기 중입니다.';\n    } else if (status === 'Scanning') {\n      return '이미지를 스캔 중입니다.';\n    }\n  };\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_3')}</dt>\n      <dd>\n        <ImageScanRequestStatus result={ds?.status?.status} />\n      </dd>\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_42')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{getImageResult(ds?.status?.status)}</dd>\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_5')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds?.spec?.scanTargets.map(cur => `${cur?.registryUrl}/${cur?.images[0]}`)}</dd>\n      {ds?.status?.status === 'Success' && <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_21')}</dt>}\n      {ds?.status?.status === 'Success' && (\n        <dd style={{ display: 'flex', flexDirection: 'column' }}>\n          {_.keys(summary).map(cur => {\n            return <span>{`${cur}: ${summary[cur]}`}</span>;\n          })}\n        </dd>\n      )}\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_15')}</dt>\n      <dd>{ds?.spec?.insecure ? t('COMMON:MSG_DETAILS_TABDETAILS_46') : t('COMMON:MSG_DETAILS_TABDETAILS_45')}</dd>\n      {ds?.spec?.maxFixable && <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_43')}</dt>}\n      <dd>{ds?.spec?.maxFixable}</dd>\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_44')}</dt>\n      <dd>{ds?.spec?.sendReport ? t('COMMON:MSG_DETAILS_TABDETAILS_47') : t('COMMON:MSG_DETAILS_TABDETAILS_48')}</dd>\n      {/* <DetailsItem label=\"Summary\" obj={ds} path=\"status.summary\" /> */}\n    </dl>\n  );\n};\nexport const ScanResultRow: React.FC<ScanResultRowProps> = ({ scanList }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{scanList?.image}</div>\n      <div className=\"col-lg-6 col-md-6 col-sm-6 hidden-xs\">{scanList?.summary}</div>\n    </div>\n  );\n};\nexport const ScanResultTable: React.FC<ScanResultTableProps> = ({ heading, scanList }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_CONTAINER_IMAGEDETAILS_1')}`}</div>\n          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">{`${t('COMMON:MSG_DETAILS_TABDETAILS_21')}`}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {scanList.map((c: any, i: number) => (\n            <ScanResultRow key={i} scanList={c} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ImageScanRequestDetails: React.FC<ImageScanRequestDetailsProps> = ({ obj: scanrequest }) => {\n  const { t } = useTranslation();\n  const summary = {};\n  for (const key in scanrequest.status?.results) {\n    const result = scanrequest.status?.results[key];\n    // let summary = { image: '', summaries: [] };\n    for (const statusKey in result.summary) {\n      const isKeyExist = _.has(summary, statusKey);\n      if (isKeyExist) {\n        summary[statusKey] += scanrequest.status.results[key].summary[statusKey];\n      } else {\n        summary[statusKey] = scanrequest.status.results[key].summary[statusKey];\n      }\n    }\n  }\n\n  // [outdate] previous version\n  // for (const key in scanrequest.status?.results) {\n  //   let summary = { image: '', summary: '' };\n  //   summary.image = key;\n  //   for (const statusKey in scanrequest.status.results[key].summary) {\n  //     summary.summary += `${statusKey} ${scanrequest.status.results[key].summary[statusKey]}, `;\n  //   }\n  //   summary.summary = summary.summary.substr(0, summary.summary.length - 2);\n  //   summaries.push(summary);\n  // }\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(scanrequest, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={scanrequest} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageScanRequestDetailsList ds={scanrequest} summary={summary} />\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"co-m-pane__body\">\n        <ScanResultTable heading=\"Scan Result\" scanList={summaries} />\n      </div> */}\n    </>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nexport const ImageScanRequests: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table {...props} aria-label=\"ImageScanRequests\" Header={ImageScanRequestTableHeader.bind(null, t)} Row={ImageScanRequestTableRow} virtualize />;\n};\n\nexport const ImageScanRequestsPage: React.FC<ImageScanRequestsPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_95')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_95') })} canCreate={true} ListComponent={ImageScanRequests} kind={kind} {...props} />;\n};\n\nexport const ImageScanRequestsDetailsPage: React.FC<ImageScanRequestsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageScanRequestDetails)), editYaml()]} />;\n\ntype ImageScanRequestDetailsListProps = {\n  ds: K8sResourceKind;\n  summary: any;\n};\n\ntype ScanResultTableProps = {\n  heading: string;\n  scanList: any;\n};\n\ntype ScanResultRowProps = {\n  scanList: any;\n};\n\ntype ImageScanRequestsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageScanRequestDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageScanRequestsDetailsPageProps = {\n  match: any;\n};\ntype ImageScanRequestStatusStatusProps = {\n  result: string;\n};\n"]}]}