{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/errors/errors.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/errors/errors.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Alert, AlertVariant } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\nimport './errors.scss';\nexport const Errors = ({ errors, endMargin }) => {\n    return (React.createElement(React.Fragment, null, errors &&\n        errors.map(({ message, key, title, variant }, idx, arr) => (React.createElement(Alert, { isInline: true, key: key || idx, variant: variant || AlertVariant.danger, title: title, className: classNames({\n                'kubevirt-errors__error-group--item': idx !== arr.length - 1,\n                'kubevirt-errors__error-group--end ': endMargin && idx === arr.length - 1,\n            }) }, message)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/errors/errors.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/errors/errors.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AAEzC,OAAO,eAAe,CAAC;AAcvB,MAAM,CAAC,MAAM,MAAM,GAA0B,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;IACrE,OAAO,CACL,0CACG,MAAM;QACL,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CACzD,oBAAC,KAAK,IACJ,QAAQ,QACR,GAAG,EAAE,GAAG,IAAI,GAAG,EACf,OAAO,EAAE,OAAO,IAAI,YAAY,CAAC,MAAM,EACvC,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,UAAU,CAAC;gBACpB,oCAAoC,EAAE,GAAG,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC;gBAC5D,oCAAoC,EAAE,SAAS,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC;aAC1E,CAAC,IAED,OAAO,CACF,CACT,CAAC,CACH,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Alert, AlertVariant } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\n\nimport './errors.scss';\n\nexport type Error = {\n  message?: string;\n  variant?: AlertVariant;\n  title: string;\n  key?: string;\n};\n\ntype ErrorsProps = {\n  errors: Error[];\n  endMargin?: boolean;\n};\n\nexport const Errors: React.FC<ErrorsProps> = ({ errors, endMargin }) => {\n  return (\n    <>\n      {errors &&\n        errors.map(({ message, key, title, variant }, idx, arr) => (\n          <Alert\n            isInline\n            key={key || idx}\n            variant={variant || AlertVariant.danger}\n            title={title}\n            className={classNames({\n              'kubevirt-errors__error-group--item': idx !== arr.length - 1,\n              'kubevirt-errors__error-group--end ': endMargin && idx === arr.length - 1,\n            })}\n          >\n            {message}\n          </Alert>\n        ))}\n    </>\n  );\n};\n"]}]}