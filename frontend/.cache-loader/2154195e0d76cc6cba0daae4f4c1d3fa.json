{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/patternfly/src/components/notification-drawer/notification-entry.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/patternfly/src/components/notification-drawer/notification-entry.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { YellowExclamationTriangleIcon, GreenCheckCircleIcon, BlueInfoCircleIcon, RedExclamationCircleIcon, } from '@console/shared';\nimport { ArrowCircleUpIcon } from '@patternfly/react-icons';\nimport { global_info_color_100 as blueInfoColor } from '@patternfly/react-tokens';\nimport { history, Timestamp } from '@console/internal/components/utils';\nexport var NotificationTypes;\n(function (NotificationTypes) {\n    NotificationTypes[\"info\"] = \"info\";\n    NotificationTypes[\"warning\"] = \"warning\";\n    NotificationTypes[\"critical\"] = \"danger\";\n    NotificationTypes[\"success\"] = \"success\";\n    NotificationTypes[\"update\"] = \"update\";\n})(NotificationTypes || (NotificationTypes = {}));\nconst NotificationIcon = ({ type }) => {\n    switch (type) {\n        case NotificationTypes.update:\n            return React.createElement(ArrowCircleUpIcon, { color: blueInfoColor.value });\n        case NotificationTypes.success:\n            return React.createElement(GreenCheckCircleIcon, null);\n        case NotificationTypes.critical:\n            return React.createElement(RedExclamationCircleIcon, null);\n        case NotificationTypes.warning:\n            return React.createElement(YellowExclamationTriangleIcon, null);\n        case NotificationTypes.info:\n        default:\n            return React.createElement(BlueInfoCircleIcon, null);\n    }\n};\nconst NotificationAction = ({ onClick, text, path }) => (React.createElement(\"div\", { className: \"pf-c-notification-drawer__header-action\" },\n    React.createElement(Link, { to: path, onClick: (e) => {\n            e.stopPropagation();\n            onClick(e);\n        } }, text)));\nconst NotificationEntry = ({ actionText, actionPath, title, description, isRead = false, timestamp, targetPath, toggleNotificationDrawer, type, }) => (React.createElement(\"li\", { className: classNames(`pf-c-notification-drawer__list-item pf-m-hoverable pf-m-${type}`, {\n        'pf-m-read': isRead,\n    }), tabIndex: 0, onClick: targetPath\n        ? () => {\n            history.push(targetPath);\n            toggleNotificationDrawer();\n        }\n        : null },\n    React.createElement(\"div\", { className: \"pf-c-notification-drawer__list-item-header\" },\n        React.createElement(\"span\", { className: \"pf-c-notification-drawer__list-item-header-icon\" },\n            React.createElement(NotificationIcon, { type: type })),\n        React.createElement(\"h4\", { className: \"pf-c-notification-drawer__list-item-header-title\" },\n            React.createElement(\"span\", { className: \"pf-screen-reader\" }, `${_.capitalize(type)} notification:`),\n            title),\n        actionText && actionPath && (React.createElement(NotificationAction, { text: actionText, path: actionPath, onClick: toggleNotificationDrawer }))),\n    React.createElement(\"div\", { className: \"pf-c-notification-drawer__list-item-description\" }, description),\n    React.createElement(\"div\", { className: \"pf-c-notification-drawer__list-item-timestamp\" }, timestamp && React.createElement(Timestamp, { simple: true, timestamp: timestamp }))));\nexport default NotificationEntry;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/patternfly/src/components/notification-drawer/notification-entry.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/patternfly/src/components/notification-drawer/notification-entry.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  YellowExclamationTriangleIcon,\n  GreenCheckCircleIcon,\n  BlueInfoCircleIcon,\n  RedExclamationCircleIcon,\n} from '@console/shared';\nimport { ArrowCircleUpIcon } from '@patternfly/react-icons';\nimport { global_info_color_100 as blueInfoColor } from '@patternfly/react-tokens';\nimport { history, Timestamp } from '@console/internal/components/utils';\n\nexport enum NotificationTypes {\n  info = 'info',\n  warning = 'warning',\n  critical = 'danger',\n  success = 'success',\n  update = 'update',\n}\n\nconst NotificationIcon: React.FC<NotificationIconTypes> = ({ type }) => {\n  switch (type) {\n    case NotificationTypes.update:\n      return <ArrowCircleUpIcon color={blueInfoColor.value} />;\n    case NotificationTypes.success:\n      return <GreenCheckCircleIcon />;\n    case NotificationTypes.critical:\n      return <RedExclamationCircleIcon />;\n    case NotificationTypes.warning:\n      return <YellowExclamationTriangleIcon />;\n    case NotificationTypes.info:\n    default:\n      return <BlueInfoCircleIcon />;\n  }\n};\n\nconst NotificationAction: React.FC<NotificationActionProps> = ({ onClick, text, path }) => (\n  <div className=\"pf-c-notification-drawer__header-action\">\n    <Link\n      to={path}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      {text}\n    </Link>\n  </div>\n);\n\nconst NotificationEntry: React.FC<NotificationEntryProps> = ({\n  actionText,\n  actionPath,\n  title,\n  description,\n  isRead = false,\n  timestamp,\n  targetPath,\n  toggleNotificationDrawer,\n  type,\n}) => (\n  <li\n    className={classNames(`pf-c-notification-drawer__list-item pf-m-hoverable pf-m-${type}`, {\n      'pf-m-read': isRead,\n    })}\n    tabIndex={0}\n    onClick={\n      targetPath\n        ? () => {\n            history.push(targetPath);\n            toggleNotificationDrawer();\n          }\n        : null\n    }\n  >\n    <div className=\"pf-c-notification-drawer__list-item-header\">\n      <span className=\"pf-c-notification-drawer__list-item-header-icon\">\n        <NotificationIcon type={type} />\n      </span>\n      <h4 className=\"pf-c-notification-drawer__list-item-header-title\">\n        <span className=\"pf-screen-reader\">{`${_.capitalize(type)} notification:`}</span>\n        {title}\n      </h4>\n      {actionText && actionPath && (\n        <NotificationAction\n          text={actionText}\n          path={actionPath}\n          onClick={toggleNotificationDrawer}\n        />\n      )}\n    </div>\n    <div className=\"pf-c-notification-drawer__list-item-description\">{description}</div>\n    <div className=\"pf-c-notification-drawer__list-item-timestamp\">\n      {timestamp && <Timestamp simple timestamp={timestamp} />}\n    </div>\n  </li>\n);\n\nexport type NotificationEntryProps = {\n  actionText?: string;\n  actionPath?: string;\n  description: string;\n  isRead?: boolean;\n  targetPath?: string;\n  timestamp?: string;\n  title: string;\n  toggleNotificationDrawer?: () => any;\n  type: NotificationTypes;\n};\n\ntype NotificationIconTypes = {\n  type: NotificationTypes;\n};\n\ntype NotificationActionProps = {\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n  text: string;\n  path: string;\n};\n\nexport default NotificationEntry;\n"]}]}