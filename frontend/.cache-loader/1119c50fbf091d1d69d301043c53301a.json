{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffHostModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffHostModal.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FormGroup, Checkbox, HelpBlock } from 'patternfly-react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { withHandlePromise, Firehose, } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory';\nimport { PodModel } from '@console/internal/models';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { powerOffHost } from '../../k8s/requests/bare-metal-host';\nimport { NODE_STATUS_UNDER_MAINTENANCE, HOST_STATUS_READY, HOST_STATUS_AVAILABLE, } from '../../constants';\nimport { startNodeMaintenanceModal } from './StartNodeMaintenanceModal';\nimport { StatusValidations, getStaticPods } from './PowerOffStatusValidations';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\nconst SafePowerOffDialog = ({ isUnderMaintenance }) => (React.createElement(\"p\", null,\n    \"Host is ready to be gracefully powered off.\",\n    ' ',\n    isUnderMaintenance && (React.createElement(React.Fragment, null, \"The host is currently under maintenance and all workloads have already been moved.\"))));\nconst ForcePowerOffDialog = ({ canStartMaintenance, forceOff, nodeName, setForceOff, status, nodePods, loadError, cancel, }) => {\n    const mainText = nodeName ? (React.createElement(\"p\", null,\n        \"To power off gracefully,\",\n        ' ',\n        React.createElement(Button, { variant: \"link\", onClick: () => startNodeMaintenanceModal({ nodeName }), isDisabled: !canStartMaintenance, isInline: true }, \"start maintenance\"),\n        ' ',\n        \"on this host to move all managed workloads to other nodes in the cluster.\")) : (React.createElement(\"p\", null, \"The host will be powered off gracefully.\"));\n    const helpText = nodeName\n        ? 'Workloads will not be moved before the host powers off.'\n        : 'The host will power off immediately as if it were unplugged.';\n    return (React.createElement(React.Fragment, null,\n        mainText,\n        React.createElement(StatusValidations, { status: status.status, nodePods: nodePods, loadError: loadError, onLinkClicked: cancel }),\n        React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(FormGroup, { controlId: \"host-force-off\" },\n                React.createElement(Checkbox, { onChange: () => setForceOff(!forceOff), checked: forceOff, inline: true }, \"Power off immediately\"),\n                React.createElement(HelpBlock, { id: \"host-force-off-help\" }, helpText)),\n            forceOff && (React.createElement(Alert, { variant: \"warning\", title: \"Applications may be temporarily disrupted.\", isInline: true }, \"Workloads currently running on this host will not be moved before powering off. This may cause service disruptions.\")))));\n};\nconst isPowerOffSafe = (status, nodePods) => {\n    const safeStates = [NODE_STATUS_UNDER_MAINTENANCE, HOST_STATUS_READY, HOST_STATUS_AVAILABLE];\n    return safeStates.includes(status) && !getStaticPods(nodePods).length;\n};\nconst PowerOffHostModal = withHandlePromise(({ host, nodeName, status, inProgress, errorMessage, handlePromise, close = undefined, cancel = undefined, nodePods, loadError, }) => {\n    const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n    const [canPowerOffSafely, setCanPowerOffSafely] = React.useState(false);\n    const [forceOff, setForceOff] = React.useState(false);\n    React.useEffect(() => {\n        isPowerOffSafe(status.status, nodePods === null || nodePods === void 0 ? void 0 : nodePods.data) && setCanPowerOffSafely(true);\n    }, [status, nodePods]);\n    React.useEffect(() => {\n        !canPowerOffSafely && setForceOff(false);\n    }, [canPowerOffSafely]);\n    const submit = (event) => {\n        event.preventDefault();\n        const promise = powerOffHost(host);\n        return handlePromise(promise).then(close);\n    };\n    const isUnderMaintenance = status.status === NODE_STATUS_UNDER_MAINTENANCE;\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content\" },\n        React.createElement(ModalTitle, null, \"Power Off Host\"),\n        React.createElement(ModalBody, null, canPowerOffSafely ? (React.createElement(SafePowerOffDialog, { isUnderMaintenance: isUnderMaintenance })) : (React.createElement(ForcePowerOffDialog, { forceOff: forceOff, setForceOff: setForceOff, canStartMaintenance: !isUnderMaintenance && nodeName && hasNodeMaintenanceCapability, nodeName: nodeName, status: status, nodePods: nodePods, loadError: loadError, cancel: cancel }))),\n        React.createElement(ModalSubmitFooter, { cancel: cancel, errorMessage: errorMessage, inProgress: inProgress, submitDisabled: !canPowerOffSafely && !forceOff, submitText: \"Power Off\" })));\n});\nconst PowerOffHostModalFirehose = (props) => {\n    const { nodeName } = props;\n    const resources = [];\n    resources.push({\n        kind: PodModel.kind,\n        namespaced: false,\n        isList: true,\n        prop: 'nodePods',\n        fieldSelector: `spec.nodeName=${nodeName}`,\n    });\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(PowerOffHostModal, Object.assign({}, props))));\n};\nexport const powerOffHostModal = createModalLauncher(PowerOffHostModalFirehose);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffHostModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/modals/PowerOffHostModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FormGroup, Checkbox, HelpBlock } from 'patternfly-react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport {\n  withHandlePromise,\n  Firehose,\n  FirehoseResult,\n  HandlePromiseProps,\n} from '@console/internal/components/utils';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory';\nimport { PodModel } from '@console/internal/models';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { powerOffHost } from '../../k8s/requests/bare-metal-host';\nimport {\n  NODE_STATUS_UNDER_MAINTENANCE,\n  HOST_STATUS_READY,\n  HOST_STATUS_AVAILABLE,\n} from '../../constants';\nimport { BareMetalHostKind } from '../../types';\nimport { startNodeMaintenanceModal } from './StartNodeMaintenanceModal';\nimport { StatusProps } from '../types';\nimport { StatusValidations, getStaticPods } from './PowerOffStatusValidations';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\n\ntype SafePowerOffDialogProps = { isUnderMaintenance: boolean };\n\nconst SafePowerOffDialog: React.FC<SafePowerOffDialogProps> = ({ isUnderMaintenance }) => (\n  <p>\n    Host is ready to be gracefully powered off.{' '}\n    {isUnderMaintenance && (\n      <>The host is currently under maintenance and all workloads have already been moved.</>\n    )}\n  </p>\n);\n\ntype ForcePowerOffDialogProps = {\n  canStartMaintenance: boolean;\n  forceOff: boolean;\n  nodeName: string;\n  setForceOff: React.Dispatch<React.SetStateAction<boolean>>;\n  status: StatusProps;\n  nodePods?: FirehoseResult<PodKind[]>;\n  loadError?: any;\n  cancel?: () => void;\n};\n\nconst ForcePowerOffDialog: React.FC<ForcePowerOffDialogProps> = ({\n  canStartMaintenance,\n  forceOff,\n  nodeName,\n  setForceOff,\n  status,\n  nodePods,\n  loadError,\n  cancel,\n}) => {\n  const mainText = nodeName ? (\n    <p>\n      To power off gracefully,{' '}\n      <Button\n        variant=\"link\"\n        onClick={() => startNodeMaintenanceModal({ nodeName })}\n        isDisabled={!canStartMaintenance}\n        isInline\n      >\n        start maintenance\n      </Button>{' '}\n      on this host to move all managed workloads to other nodes in the cluster.\n    </p>\n  ) : (\n    <p>The host will be powered off gracefully.</p>\n  );\n\n  const helpText = nodeName\n    ? 'Workloads will not be moved before the host powers off.'\n    : 'The host will power off immediately as if it were unplugged.';\n\n  return (\n    <>\n      {mainText}\n      <StatusValidations\n        status={status.status}\n        nodePods={nodePods}\n        loadError={loadError}\n        onLinkClicked={cancel}\n      />\n      <div className=\"form-group\">\n        <FormGroup controlId=\"host-force-off\">\n          <Checkbox onChange={() => setForceOff(!forceOff)} checked={forceOff} inline>\n            Power off immediately\n          </Checkbox>\n          <HelpBlock id=\"host-force-off-help\">{helpText}</HelpBlock>\n        </FormGroup>\n        {forceOff && (\n          <Alert variant=\"warning\" title=\"Applications may be temporarily disrupted.\" isInline>\n            Workloads currently running on this host will not be moved before powering off. This may\n            cause service disruptions.\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst isPowerOffSafe = (status: string, nodePods?: PodKind[]) => {\n  const safeStates = [NODE_STATUS_UNDER_MAINTENANCE, HOST_STATUS_READY, HOST_STATUS_AVAILABLE];\n  return safeStates.includes(status) && !getStaticPods(nodePods).length;\n};\n\nexport type PowerOffHostModalProps = {\n  host: BareMetalHostKind;\n  nodeName: string;\n  status: StatusProps;\n  cancel?: () => void;\n  close?: () => void;\n  nodePods?: FirehoseResult<PodKind[]>;\n  loadError?: any;\n  loaded?: boolean;\n};\n\nconst PowerOffHostModal = withHandlePromise(\n  ({\n    host,\n    nodeName,\n    status,\n    inProgress,\n    errorMessage,\n    handlePromise,\n    close = undefined,\n    cancel = undefined,\n    nodePods,\n    loadError,\n  }: PowerOffHostModalProps & HandlePromiseProps) => {\n    const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n    const [canPowerOffSafely, setCanPowerOffSafely] = React.useState(false);\n    const [forceOff, setForceOff] = React.useState(false);\n\n    React.useEffect(() => {\n      isPowerOffSafe(status.status, nodePods?.data) && setCanPowerOffSafely(true);\n    }, [status, nodePods]);\n\n    React.useEffect(() => {\n      !canPowerOffSafely && setForceOff(false);\n    }, [canPowerOffSafely]);\n\n    const submit = (event) => {\n      event.preventDefault();\n      const promise = powerOffHost(host);\n      return handlePromise(promise).then(close);\n    };\n\n    const isUnderMaintenance = status.status === NODE_STATUS_UNDER_MAINTENANCE;\n    return (\n      <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>Power Off Host</ModalTitle>\n        <ModalBody>\n          {canPowerOffSafely ? (\n            <SafePowerOffDialog isUnderMaintenance={isUnderMaintenance} />\n          ) : (\n            <ForcePowerOffDialog\n              forceOff={forceOff}\n              setForceOff={setForceOff}\n              canStartMaintenance={!isUnderMaintenance && nodeName && hasNodeMaintenanceCapability}\n              nodeName={nodeName}\n              status={status}\n              nodePods={nodePods}\n              loadError={loadError}\n              cancel={cancel}\n            />\n          )}\n        </ModalBody>\n        <ModalSubmitFooter\n          cancel={cancel}\n          errorMessage={errorMessage}\n          inProgress={inProgress}\n          submitDisabled={!canPowerOffSafely && !forceOff}\n          submitText=\"Power Off\"\n        />\n      </form>\n    );\n  },\n);\n\nconst PowerOffHostModalFirehose = (props: PowerOffHostModalProps) => {\n  const { nodeName } = props;\n\n  const resources = [];\n  resources.push({\n    kind: PodModel.kind,\n    namespaced: false,\n    isList: true,\n    prop: 'nodePods',\n    fieldSelector: `spec.nodeName=${nodeName}`,\n  });\n\n  return (\n    <Firehose resources={resources}>\n      <PowerOffHostModal {...props} />\n    </Firehose>\n  );\n};\n\nexport const powerOffHostModal = createModalLauncher(PowerOffHostModalFirehose);\n"]}]}