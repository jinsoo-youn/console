{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/safe-k8s-hook.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/safe-k8s-hook.tsx","mtime":1616735742400},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { useEffect, useRef } from 'react';\nimport { k8sGet } from '@console/internal/module/k8s';\nexport const useSafeK8s = () => {\n    const controller = useRef();\n    const mounted = useRef(true);\n    useEffect(() => {\n        controller.current = new AbortController();\n        return () => {\n            mounted.current = false;\n            controller.current.abort();\n        };\n    }, []);\n    return (kind, name, ns, opts = {}) => {\n        return new Promise((resolve, reject) => {\n            k8sGet(kind, name, ns, Object.assign({ signal: controller.current.signal }, opts))\n                .then((data) => mounted.current && resolve(data))\n                .catch((error) => mounted.current && reject(error));\n        });\n    };\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/safe-k8s-hook.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/utils/safe-k8s-hook.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAmB,MAAM,EAAE,MAAM,8BAA8B,CAAC;AAEvE,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE;IAC7B,MAAM,UAAU,GAAG,MAAM,EAAmB,CAAC;IAC7C,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAE7B,SAAS,CAAC,GAAG,EAAE;QACb,UAAU,CAAC,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;QAC3C,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YACxB,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,IAAqB,EACrB,IAAY,EACZ,EAAU,EACV,OAAe,EAAE,EACS,EAAE;QAC5B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,CACJ,IAAI,EACJ,IAAI,EACJ,EAAE,EACF,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC,MAAqB,EAAE,EAAE,IAAI,CAAC,CAC1E;iBACE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;iBAChD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { K8sResourceKind, k8sGet } from '@console/internal/module/k8s';\n\nexport const useSafeK8s = () => {\n  const controller = useRef<AbortController>();\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    controller.current = new AbortController();\n    return () => {\n      mounted.current = false;\n      controller.current.abort();\n    };\n  }, []);\n\n  return (\n    kind: K8sResourceKind,\n    name: string,\n    ns: string,\n    opts: object = {},\n  ): Promise<K8sResourceKind> => {\n    return new Promise((resolve, reject) => {\n      k8sGet(\n        kind,\n        name,\n        ns,\n        Object.assign({ signal: controller.current.signal as AbortSignal }, opts),\n      )\n        .then((data) => mounted.current && resolve(data))\n        .catch((error) => mounted.current && reject(error));\n    });\n  };\n};\n"]}]}