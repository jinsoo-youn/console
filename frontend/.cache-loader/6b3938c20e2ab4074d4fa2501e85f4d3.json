{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/volume-snapshot-modal/volume-snapshot-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/volume-snapshot-modal/volume-snapshot-modal.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Dropdown, Firehose, withHandlePromise, } from '@console/internal/components/utils';\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport { getName, getNamespace } from '@console/shared';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { ModalBody, ModalSubmitFooter, ModalTitle, createModalLauncher, } from '@console/internal/components/factory';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { VolumeSnapshotModel } from '../../../models';\nimport './_volume-snapshot-modal.scss';\nexport const snapshotTypes = {\n    Single: 'Single',\n};\nexport const VolumeSnapshotModal = withHandlePromise((props) => {\n    const { close, cancel, pvcData, errorMessage, inProgress, handlePromise } = props;\n    const resource = pvcData.data;\n    const [snapshotName, setSnapshotName] = React.useState(`${getName(resource) || 'pvc'}-snapshot`);\n    const [scheduleType, setScheduleType] = React.useState(snapshotTypes.Single);\n    const submit = (event) => {\n        event.preventDefault();\n        const ns = getNamespace(resource);\n        const pvcName = getName(resource);\n        const snapshotTemplate = {\n            apiVersion: VolumeSnapshotModel.apiVersion,\n            kind: VolumeSnapshotModel.kind,\n            metadata: {\n                name: snapshotName,\n                namespace: ns,\n            },\n            spec: {\n                source: {\n                    persistentVolumeClaimName: pvcName,\n                },\n            },\n        };\n        handlePromise(k8sCreate(VolumeSnapshotModel, snapshotTemplate)).then(close); // eslint-disable-line promise/catch-or-return\n    };\n    return (React.createElement(Form, { onSubmit: submit, name: \"form\" },\n        React.createElement(\"div\", { className: \"modal-content modal-content--no-inner-scroll\" },\n            React.createElement(ModalTitle, null, \"Create Snapshot\"),\n            React.createElement(ModalBody, null,\n                React.createElement(\"p\", null,\n                    \"Creating snapshot for \",\n                    getName(resource)),\n                React.createElement(FormGroup, { className: \"ceph-volume-snapshot-modal__input\", label: \"Name\", isRequired: true, fieldId: \"snapshot-name\" },\n                    React.createElement(TextInput, { type: \"text\", name: \"snapshot-name\", value: snapshotName, onChange: setSnapshotName, \"aria-labelledby\": \"snapshot-name\" })),\n                React.createElement(FormGroup, { className: \"ceph-volume-snapshot-modal__input\", label: \"Schedule\", fieldId: \"snapshot-type\" },\n                    React.createElement(Dropdown, { dropDownClassName: \"dropdown--full-width\", items: snapshotTypes, selectedKey: scheduleType, onChange: (value) => setScheduleType(snapshotTypes[value]) }))),\n            React.createElement(ModalSubmitFooter, { inProgress: inProgress, errorMessage: errorMessage, submitText: \"Create\", cancel: cancel }))));\n});\nexport const VolumeSnapshotModalWithFireHose = (_a) => {\n    var _b, _c;\n    var { resource } = _a, rest = __rest(_a, [\"resource\"]);\n    return (React.createElement(Firehose, { resources: [\n            {\n                kind: (resource === null || resource === void 0 ? void 0 : resource.kind) || PersistentVolumeClaimModel.kind,\n                prop: 'pvcData',\n                namespace: (_b = resource === null || resource === void 0 ? void 0 : resource.metadata) === null || _b === void 0 ? void 0 : _b.namespace,\n                isList: false,\n                name: (_c = resource === null || resource === void 0 ? void 0 : resource.metadata) === null || _c === void 0 ? void 0 : _c.name,\n            },\n        ] },\n        React.createElement(VolumeSnapshotModal, Object.assign({}, rest))));\n};\nexport const volumeSnapshotModal = createModalLauncher(VolumeSnapshotModalWithFireHose);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/volume-snapshot-modal/volume-snapshot-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/modals/volume-snapshot-modal/volume-snapshot-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  Dropdown,\n  Firehose,\n  FirehoseResourcesResult,\n  HandlePromiseProps,\n  withHandlePromise,\n} from '@console/internal/components/utils';\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport { getName, getNamespace } from '@console/shared';\nimport { K8sResourceKind, k8sCreate } from '@console/internal/module/k8s';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '@console/internal/components/factory';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { VolumeSnapshotModel } from '../../../models';\n\nimport './_volume-snapshot-modal.scss';\n\nexport type VolumeSnapshotModalProps = {\n  pvcData?: FirehoseResourcesResult;\n} & HandlePromiseProps &\n  ModalComponentProps;\n\nexport const snapshotTypes = {\n  Single: 'Single',\n};\n\nexport const VolumeSnapshotModal = withHandlePromise((props: VolumeSnapshotModalProps) => {\n  const { close, cancel, pvcData, errorMessage, inProgress, handlePromise } = props;\n  const resource = pvcData.data as K8sResourceKind;\n  const [snapshotName, setSnapshotName] = React.useState<string>(\n    `${getName(resource) || 'pvc'}-snapshot`,\n  );\n  const [scheduleType, setScheduleType] = React.useState(snapshotTypes.Single);\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    const ns = getNamespace(resource);\n    const pvcName = getName(resource);\n    const snapshotTemplate: K8sResourceKind = {\n      apiVersion: VolumeSnapshotModel.apiVersion,\n      kind: VolumeSnapshotModel.kind,\n      metadata: {\n        name: snapshotName,\n        namespace: ns,\n      },\n      spec: {\n        source: {\n          persistentVolumeClaimName: pvcName,\n        },\n      },\n    };\n    handlePromise(k8sCreate(VolumeSnapshotModel, snapshotTemplate)).then(close); // eslint-disable-line promise/catch-or-return\n  };\n\n  return (\n    <Form onSubmit={submit} name=\"form\">\n      <div className=\"modal-content modal-content--no-inner-scroll\">\n        <ModalTitle>Create Snapshot</ModalTitle>\n        <ModalBody>\n          <p>Creating snapshot for {getName(resource)}</p>\n          <FormGroup\n            className=\"ceph-volume-snapshot-modal__input\"\n            label=\"Name\"\n            isRequired\n            fieldId=\"snapshot-name\"\n          >\n            <TextInput\n              type=\"text\"\n              name=\"snapshot-name\"\n              value={snapshotName}\n              onChange={setSnapshotName}\n              aria-labelledby=\"snapshot-name\"\n            />\n          </FormGroup>\n          <FormGroup\n            className=\"ceph-volume-snapshot-modal__input\"\n            label=\"Schedule\"\n            fieldId=\"snapshot-type\"\n          >\n            <Dropdown\n              dropDownClassName=\"dropdown--full-width\"\n              items={snapshotTypes}\n              selectedKey={scheduleType}\n              onChange={(value) => setScheduleType(snapshotTypes[value])}\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalSubmitFooter\n          inProgress={inProgress}\n          errorMessage={errorMessage}\n          submitText=\"Create\"\n          cancel={cancel}\n        />\n      </div>\n    </Form>\n  );\n});\n\ntype VolumeSnapshotModalWithFireHoseProps = {\n  resource: K8sResourceKind;\n} & ModalComponentProps;\n\nexport const VolumeSnapshotModalWithFireHose: React.FC<VolumeSnapshotModalWithFireHoseProps> = ({\n  resource,\n  ...rest\n}) => (\n  <Firehose\n    resources={[\n      {\n        kind: resource?.kind || PersistentVolumeClaimModel.kind,\n        prop: 'pvcData',\n        namespace: resource?.metadata?.namespace,\n        isList: false,\n        name: resource?.metadata?.name,\n      },\n    ]}\n  >\n    <VolumeSnapshotModal {...rest} />\n  </Firehose>\n);\n\nexport const volumeSnapshotModal = createModalLauncher(VolumeSnapshotModalWithFireHose);\n"]}]}