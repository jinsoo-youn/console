{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/GroupNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/GroupNode.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { truncateMiddle, shouldTruncate, } from '@console/internal/components/utils';\nimport { useSize, useHover } from '@console/topology';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '../../../../const';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport { SvgResourceIcon } from '../../../svg/SvgResourceIcon';\nimport { ResourceKindsInfo } from './ResourceKindsInfo';\nimport './GroupNode.scss';\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\nconst truncateOptions = {\n    length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\nconst GroupNode = ({ element, groupResources, children, kind, emptyValue, typeIconClass, }) => {\n    const [textHover, textHoverRef] = useHover();\n    const [iconSize, iconRef] = useSize([kind]);\n    const iconWidth = iconSize ? iconSize.width : 0;\n    const iconHeight = iconSize ? iconSize.height : 0;\n    const title = element.getLabel();\n    const { width, height } = element.getDimensions();\n    return (React.createElement(React.Fragment, null,\n        typeIconClass && (React.createElement(SvgCircledIcon, { className: \"odc-group-node__type-icon\", x: 10, y: -10, width: 20, height: 20, iconClass: typeIconClass })),\n        React.createElement(SvgResourceIcon, { ref: iconRef, x: LEFT_MARGIN, y: TOP_MARGIN - 2, kind: kind, leftJustified: true }),\n        title && (React.createElement(Tooltip, { content: title, position: TooltipPosition.top, trigger: \"manual\", isVisible: textHover && shouldTruncate(title) },\n            React.createElement(\"text\", { ref: textHoverRef, className: \"odc-group-node__title\", x: LEFT_MARGIN + iconWidth + TEXT_MARGIN, y: TOP_MARGIN + iconHeight, textAnchor: \"start\", dy: \"-0.25em\" }, truncateMiddle(title, truncateOptions)))),\n        (children || groupResources || emptyValue) && (React.createElement(\"g\", { transform: `translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})` },\n            (groupResources || emptyValue) && (React.createElement(ResourceKindsInfo, { groupResources: groupResources, emptyValue: emptyValue, width: width - LEFT_MARGIN, height: height - TOP_MARGIN - iconHeight })),\n            children))));\n};\nexport { GroupNode };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/GroupNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/GroupNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { Node, useSize, useHover } from '@console/topology';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '../../../../const';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport { TopologyDataObject } from '../../topology-types';\nimport { SvgResourceIcon } from '../../../svg/SvgResourceIcon';\nimport { ResourceKindsInfo } from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  kind?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: TopologyDataObject;\n  children?: React.ReactNode;\n  typeIconClass?: string;\n};\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  groupResources,\n  children,\n  kind,\n  emptyValue,\n  typeIconClass,\n}) => {\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([kind]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { width, height } = element.getDimensions();\n  return (\n    <>\n      {typeIconClass && (\n        <SvgCircledIcon\n          className=\"odc-group-node__type-icon\"\n          x={10}\n          y={-10}\n          width={20}\n          height={20}\n          iconClass={typeIconClass}\n        />\n      )}\n      <SvgResourceIcon ref={iconRef} x={LEFT_MARGIN} y={TOP_MARGIN - 2} kind={kind} leftJustified />\n      {title && (\n        <Tooltip\n          content={title}\n          position={TooltipPosition.top}\n          trigger=\"manual\"\n          isVisible={textHover && shouldTruncate(title)}\n        >\n          <text\n            ref={textHoverRef}\n            className=\"odc-group-node__title\"\n            x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n            y={TOP_MARGIN + iconHeight}\n            textAnchor=\"start\"\n            dy=\"-0.25em\"\n          >\n            {truncateMiddle(title, truncateOptions)}\n          </text>\n        </Tooltip>\n      )}\n      {(children || groupResources || emptyValue) && (\n        <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n          {(groupResources || emptyValue) && (\n            <ResourceKindsInfo\n              groupResources={groupResources}\n              emptyValue={emptyValue}\n              width={width - LEFT_MARGIN}\n              height={height - TOP_MARGIN - iconHeight}\n            />\n          )}\n          {children}\n        </g>\n      )}\n    </>\n  );\n};\n\nexport { GroupNode };\n"]}]}