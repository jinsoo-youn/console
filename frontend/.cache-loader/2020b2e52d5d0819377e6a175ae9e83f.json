{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/custom-resource-list/CustomResourceList.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/custom-resource-list/CustomResourceList.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core';\nimport { Table } from '@console/internal/components/factory';\nimport { getQueryArgument, LoadingBox } from '@console/internal/components/utils';\nimport { FilterToolbar } from '@console/internal/components/filter-toolbar';\nconst CustomResourceList = ({ resources, loaded = true, EmptyMsg, queryArg, rowFilters, rowFilterReducer, textFilter, textFilterReducer, resourceHeader, resourceRow, sortBy, sortOrder, }) => {\n    const applyFilters = React.useCallback(() => {\n        const queryArgument = queryArg ? getQueryArgument(queryArg) : undefined;\n        const activeFilters = queryArgument === null || queryArgument === void 0 ? void 0 : queryArgument.split(',');\n        const params = new URLSearchParams(window.location.search);\n        const filteredText = params.get(textFilter);\n        let filteredItems = resources;\n        if (activeFilters) {\n            filteredItems = rowFilterReducer(filteredItems, activeFilters);\n        }\n        if (filteredText) {\n            filteredItems = textFilterReducer(filteredItems, filteredText);\n        }\n        return filteredItems;\n    }, [resources, queryArg, rowFilterReducer, textFilter, textFilterReducer]);\n    const filteredListItems = applyFilters();\n    if (!loaded) {\n        return React.createElement(LoadingBox, null);\n    }\n    if (_.isEmpty(resources)) {\n        return EmptyMsg ? (React.createElement(EmptyMsg, null)) : (React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n            React.createElement(\"p\", null, \"No resources found\")));\n    }\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        (rowFilters || textFilter) && (React.createElement(FilterToolbar, { rowFilters: rowFilters, data: resources, textFilter: textFilter, hideLabelFilter: true, reduxIDs: [] })),\n        React.createElement(Table, { data: filteredListItems, defaultSortField: sortBy, defaultSortOrder: sortOrder, \"aria-label\": \"CustomResources\", Header: resourceHeader, Row: resourceRow, loaded: loaded, virtualize: true })));\n};\nexport default React.memo(CustomResourceList);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/custom-resource-list/CustomResourceList.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/custom-resource-list/CustomResourceList.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAE,KAAK,EAAE,MAAM,sCAAsC,CAAC;AAC7D,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAElF,OAAO,EAAE,aAAa,EAAE,MAAM,6CAA6C,CAAC;AAE5E,MAAM,kBAAkB,GAAsC,CAAC,EAC7D,SAAS,EACT,MAAM,GAAG,IAAI,EACb,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,gBAAgB,EAChB,UAAU,EACV,iBAAiB,EACjB,cAAc,EACd,WAAW,EACX,MAAM,EACN,SAAS,GACV,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;QAC1C,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACxE,MAAM,aAAa,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QAChD,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE5C,IAAI,aAAa,GAAG,SAAS,CAAC;QAC9B,IAAI,aAAa,EAAE;YACjB,aAAa,GAAG,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;SAChE;QACD,IAAI,YAAY,EAAE;YAChB,aAAa,GAAG,iBAAiB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;SAChE;QACD,OAAO,aAAa,CAAC;IACvB,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB,EAAE,UAAU,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAE3E,MAAM,iBAAiB,GAAG,YAAY,EAAE,CAAC;IAEzC,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,oBAAC,UAAU,OAAG,CAAC;KACvB;IAED,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QACxB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAChB,oBAAC,QAAQ,OAAG,CACb,CAAC,CAAC,CAAC,CACF,oBAAC,UAAU,IAAC,OAAO,EAAE,iBAAiB,CAAC,IAAI;YACzC,oDAAyB,CACd,CACd,CAAC;KACH;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,iBAAiB;QAC7B,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,CAC7B,oBAAC,aAAa,IACZ,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,SAAS,EACf,UAAU,EAAE,UAAU,EACtB,eAAe,QACf,QAAQ,EAAE,EAAE,GACZ,CACH;QACD,oBAAC,KAAK,IACJ,IAAI,EAAE,iBAAiB,EACvB,gBAAgB,EAAE,MAAM,EACxB,gBAAgB,EAAE,SAAS,gBAChB,iBAAiB,EAC5B,MAAM,EAAE,cAAc,EACtB,GAAG,EAAE,WAAW,EAChB,MAAM,EAAE,MAAM,EACd,UAAU,SACV,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core';\nimport { Table } from '@console/internal/components/factory';\nimport { getQueryArgument, LoadingBox } from '@console/internal/components/utils';\nimport { CustomResourceListProps } from './custom-resource-list-types';\nimport { FilterToolbar } from '@console/internal/components/filter-toolbar';\n\nconst CustomResourceList: React.FC<CustomResourceListProps> = ({\n  resources,\n  loaded = true,\n  EmptyMsg,\n  queryArg,\n  rowFilters,\n  rowFilterReducer,\n  textFilter,\n  textFilterReducer,\n  resourceHeader,\n  resourceRow,\n  sortBy,\n  sortOrder,\n}) => {\n  const applyFilters = React.useCallback(() => {\n    const queryArgument = queryArg ? getQueryArgument(queryArg) : undefined;\n    const activeFilters = queryArgument?.split(',');\n    const params = new URLSearchParams(window.location.search);\n    const filteredText = params.get(textFilter);\n\n    let filteredItems = resources;\n    if (activeFilters) {\n      filteredItems = rowFilterReducer(filteredItems, activeFilters);\n    }\n    if (filteredText) {\n      filteredItems = textFilterReducer(filteredItems, filteredText);\n    }\n    return filteredItems;\n  }, [resources, queryArg, rowFilterReducer, textFilter, textFilterReducer]);\n\n  const filteredListItems = applyFilters();\n\n  if (!loaded) {\n    return <LoadingBox />;\n  }\n\n  if (_.isEmpty(resources)) {\n    return EmptyMsg ? (\n      <EmptyMsg />\n    ) : (\n      <EmptyState variant={EmptyStateVariant.full}>\n        <p>No resources found</p>\n      </EmptyState>\n    );\n  }\n\n  return (\n    <div className=\"co-m-pane__body\">\n      {(rowFilters || textFilter) && (\n        <FilterToolbar\n          rowFilters={rowFilters}\n          data={resources}\n          textFilter={textFilter}\n          hideLabelFilter\n          reduxIDs={[]}\n        />\n      )}\n      <Table\n        data={filteredListItems}\n        defaultSortField={sortBy}\n        defaultSortOrder={sortOrder}\n        aria-label=\"CustomResources\"\n        Header={resourceHeader}\n        Row={resourceRow}\n        loaded={loaded}\n        virtualize\n      />\n    </div>\n  );\n};\n\nexport default React.memo(CustomResourceList);\n"]}]}