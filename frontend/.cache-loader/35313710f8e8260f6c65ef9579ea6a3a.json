{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/networking-overview.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/networking-overview.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons';\nimport { RouteLocation } from '../routes';\nimport { ResourceLink, SidebarSectionHeading } from '../utils';\nconst ServicePortList = ({ service }) => {\n    const ports = _.get(service, 'spec.ports', []);\n    return (React.createElement(\"ul\", { className: \"port-list\" }, _.map(ports, ({ name, port, protocol, targetPort }) => (React.createElement(\"li\", { key: name || `${protocol}/${port}` },\n        React.createElement(\"span\", { className: \"text-muted\" }, \"Service port:\"),\n        \" \",\n        name || `${protocol}/${port}`,\n        \"\\u00A0\",\n        React.createElement(LongArrowAltRightIcon, null),\n        \"\\u00A0\",\n        React.createElement(\"span\", { className: \"text-muted\" }, \"Pod Port:\"),\n        \" \",\n        targetPort)))));\n};\nconst ServicesOverviewListItem = ({ service }) => {\n    const { name, namespace } = service.metadata;\n    return (React.createElement(\"li\", { className: \"list-group-item\" },\n        React.createElement(ResourceLink, { kind: \"Service\", name: name, namespace: namespace }),\n        React.createElement(ServicePortList, { service: service })));\n};\nconst ServicesOverviewList = ({ services }) => (React.createElement(\"ul\", { className: \"list-group\" }, _.map(services, (service) => (React.createElement(ServicesOverviewListItem, { key: service.metadata.uid, service: service })))));\nconst RoutesOverviewListItem = ({ route }) => {\n    const { name, namespace } = route.metadata;\n    return (React.createElement(\"li\", { className: \"list-group-item\" },\n        React.createElement(ResourceLink, { kind: \"Route\", name: name, namespace: namespace }),\n        React.createElement(\"span\", { className: \"text-muted\" }, 'Location: '),\n        React.createElement(RouteLocation, { obj: route })));\n};\nconst RoutesOverviewList = ({ routes }) => (React.createElement(\"ul\", { className: \"list-group\" }, _.map(routes, (route) => (React.createElement(RoutesOverviewListItem, { key: route.metadata.uid, route: route })))));\nexport const NetworkingOverview = ({ routes, services }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SidebarSectionHeading, { text: \"Services\" }),\n        _.isEmpty(services) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"No Services found for this resource.\")) : (React.createElement(ServicesOverviewList, { services: services })),\n        React.createElement(SidebarSectionHeading, { text: \"Routes\" }),\n        _.isEmpty(routes) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"No Routes found for this resource.\")) : (React.createElement(RoutesOverviewList, { routes: routes }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/networking-overview.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/networking-overview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons';\n\nimport { K8sResourceKind, RouteKind } from '../../module/k8s';\nimport { RouteLocation } from '../routes';\nimport { ResourceLink, SidebarSectionHeading } from '../utils';\n\nconst ServicePortList: React.SFC<ServicePortListProps> = ({ service }) => {\n  const ports = _.get(service, 'spec.ports', []);\n  return (\n    <ul className=\"port-list\">\n      {_.map(ports, ({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">Service port:</span> {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">Pod Port:</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.SFC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.SFC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {_.map(services, (service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.SFC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{'Location: '}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.SFC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {_.map(routes, (route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.SFC<NetworkingOverviewProps> = ({ routes, services }) => {\n  return (\n    <>\n      <SidebarSectionHeading text=\"Services\" />\n      {_.isEmpty(services) ? (\n        <span className=\"text-muted\">No Services found for this resource.</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text=\"Routes\" />\n      {_.isEmpty(routes) ? (\n        <span className=\"text-muted\">No Routes found for this resource.</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  routes: RouteKind[];\n  services: K8sResourceKind[];\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n"]}]}