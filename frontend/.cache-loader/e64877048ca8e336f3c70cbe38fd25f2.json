{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/utils.ts","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport const filterNooBaaAlerts = (alerts) => alerts.filter((alert) => _.get(alert, 'annotations.storage_type') === 'NooBaa');\nexport const getGaugeValue = (data) => _.get(data, 'data.result[0].value[1]');\nexport const getMetric = (result, metric) => _.get(result, ['data', 'result', '0', 'metric', metric], null);\nexport const getPhase = (obj) => {\n    return _.get(obj, 'status.phase', 'Lost');\n};\nexport const isBound = (obj) => getPhase(obj) === 'Bound';\nexport const getSCProvisioner = (obj) => obj.provisioner;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAM5B,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,MAAe,EAAW,EAAE,CAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,0BAA0B,CAAC,KAAK,QAAQ,CAAC,CAAC;AAElF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;AAE9E,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAA0B,EAAE,MAAc,EAAU,EAAE,CAC9E,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AAOjE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,GAAoB,EAAU,EAAE;IACvD,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAoB,EAAW,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC;AAEpF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,GAAiB,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { Alert } from '@console/internal/components/monitoring';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { StorageClass } from '@console/internal/components/storage-class-form';\n\nexport const filterNooBaaAlerts = (alerts: Alert[]): Alert[] =>\n  alerts.filter((alert) => _.get(alert, 'annotations.storage_type') === 'NooBaa');\n\nexport const getGaugeValue = (data) => _.get(data, 'data.result[0].value[1]');\n\nexport const getMetric = (result: PrometheusResponse, metric: string): string =>\n  _.get(result, ['data', 'result', '0', 'metric', metric], null);\n\nexport type PrometheusMetricResult = {\n  metric: { [key: string]: any };\n  value?: [number, string | number];\n};\n\nexport const getPhase = (obj: K8sResourceKind): string => {\n  return _.get(obj, 'status.phase', 'Lost');\n};\n\nexport const isBound = (obj: K8sResourceKind): boolean => getPhase(obj) === 'Bound';\n\nexport const getSCProvisioner = (obj: StorageClass) => obj.provisioner;\n"]}]}