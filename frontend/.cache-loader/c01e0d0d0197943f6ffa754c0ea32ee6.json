{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/daemon-set.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/daemon-set.tsx","mtime":1615701814890},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, ContainerTable, detailsPage, LabelList, navFactory, PodsComponent, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector, LoadingInline } from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodRingController, PodRing } from '@console/shared';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nexport const menuActions = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(DaemonSetModel), EditHealthChecks, ...Kebab.factory.common];\nconst kind = 'DaemonSet';\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst DaemonSetTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'daemonsetNumScheduled',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n            sortField: 'spec.selector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nDaemonSetTableHeader.displayName = 'DaemonSetTableHeader';\nconst DaemonSetTableRow = ({ obj: daemonset, index, key, style }) => {\n    return (React.createElement(TableRow, { id: daemonset.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: daemonset.metadata.name, namespace: daemonset.metadata.namespace, title: daemonset.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: daemonset.metadata.namespace, title: daemonset.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Link, { to: `/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`, title: \"pods\" },\n                daemonset.status.currentNumberScheduled,\n                \" of \",\n                daemonset.status.desiredNumberScheduled,\n                \" pods\")),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(LabelList, { kind: kind, labels: daemonset.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Selector, { selector: daemonset.spec.selector, namespace: daemonset.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: daemonset }))));\n};\nexport const DaemonSetDetailsList = ({ ds }) => {\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38'), obj: ds, path: \"status.currentNumberScheduled\" }),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39'), obj: ds, path: \"status.desiredNumberScheduled\" })));\n};\nconst DaemonSetDetails = ({ obj: daemonset }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(daemonset, t) }) }),\n            React.createElement(PodRingController, { namespace: daemonset.metadata.namespace, kind: daemonset.kind, render: d => {\n                    return d.loaded ? React.createElement(PodRing, { key: daemonset.metadata.uid, pods: d.data[daemonset.metadata.uid].pods, obj: daemonset, resourceKind: DaemonSetModel, enableScaling: false }) : React.createElement(LoadingInline, null);\n                } }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: daemonset, showPodSelector: true, showNodeSelector: true, showTolerations: true })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(DaemonSetDetailsList, { ds: daemonset })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }),\n            React.createElement(ContainerTable, { containers: daemonset.spec.template.spec.containers })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(VolumesTable, { resource: daemonset, heading: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1') }))));\n};\nconst EnvironmentPage = props => React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then(c => c.EnvironmentPage) }, props));\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab = props => React.createElement(EnvironmentPage, { obj: props.obj, rawEnvData: props.obj.spec.template.spec, envPath: envPath, readOnly: false });\nconst { details, pods, editYaml, envEditor, events } = navFactory;\nexport const DaemonSets = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Daemon Sets\", Header: DaemonSetTableHeader.bind(null, t), Row: DaemonSetTableRow, virtualize: true }));\n};\nexport const DaemonSetsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_30'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_30') }), canCreate: true, ListComponent: DaemonSets, kind: kind }, props));\n};\nconst DaemonSetPods = props => React.createElement(PodsComponent, Object.assign({}, props, { customData: { showNodes: true } }));\nexport const DaemonSetsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(DaemonSetDetails)), editYaml(), pods(DaemonSetPods), envEditor(EnvironmentTab), events(ResourceEventStream)] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/daemon-set.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/daemon-set.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { K8sResourceKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, KebabAction, ContainerTable, detailsPage, LabelList, navFactory, PodsComponent, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector, LoadingInline } from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodRingController, PodRing } from '@console/shared';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(DaemonSetModel), EditHealthChecks, ...Kebab.factory.common];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst DaemonSetTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nDaemonSetTableHeader.displayName = 'DaemonSetTableHeader';\n\nconst DaemonSetTableRow: RowFunction<K8sResourceKind> = ({ obj: daemonset, index, key, style }) => {\n  return (\n    <TableRow id={daemonset.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={daemonset.metadata.name} namespace={daemonset.metadata.namespace} title={daemonset.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} title={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`} title=\"pods\">\n          {daemonset.status.currentNumberScheduled} of {daemonset.status.desiredNumberScheduled} pods\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={daemonset} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38')} obj={ds} path=\"status.currentNumberScheduled\" />\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39')} obj={ds} path=\"status.desiredNumberScheduled\" />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(daemonset, t) })} />\n        <PodRingController\n          namespace={daemonset.metadata.namespace}\n          kind={daemonset.kind}\n          render={d => {\n            return d.loaded ? <PodRing key={daemonset.metadata.uid} pods={d.data[daemonset.metadata.uid].pods} obj={daemonset} resourceKind={DaemonSetModel} enableScaling={false} /> : <LoadingInline />;\n          }}\n        />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={daemonset} showPodSelector showNodeSelector showTolerations />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = props => <AsyncComponent loader={() => import('./environment.jsx').then(c => c.EnvironmentPage)} {...props} />;\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = props => <EnvironmentPage obj={props.obj} rawEnvData={props.obj.spec.template.spec} envPath={envPath} readOnly={false} />;\nconst { details, pods, editYaml, envEditor, events } = navFactory;\nexport const DaemonSets: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Daemon Sets\" Header={DaemonSetTableHeader.bind(null, t)} Row={DaemonSetTableRow} virtualize />;\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_30')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_30') })} canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />;\n};\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = props => <PodsComponent {...props} customData={{ showNodes: true }} />;\n\nexport const DaemonSetsDetailsPage: React.FC<DaemonSetsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(DaemonSetDetails)), editYaml(), pods(DaemonSetPods), envEditor(EnvironmentTab), events(ResourceEventStream)]} />;\n\ntype DaemonSetDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetsDetailsPageProps = {\n  match: any;\n};\n"]}]}