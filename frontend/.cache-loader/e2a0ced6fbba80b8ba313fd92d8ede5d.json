{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/filters/FilterDropdown.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/filters/FilterDropdown.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Select, SelectVariant, SelectOption, SelectGroup } from '@patternfly/react-core';\nimport { ShowFiltersKeyValue, ExpandFiltersKeyValue } from './filter-types';\nconst FilterDropdown = ({ filters, onChange }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const selected = Object.keys(filters).filter(key => filters[key]);\n    const onToggle = (open) => setIsOpen(open);\n    const onSelect = (e, key) => {\n        onChange(Object.assign(Object.assign({}, filters), { [key]: e.target.checked }));\n    };\n    const showOptions = (React.createElement(SelectGroup, { label: \"Show\" }, Object.keys(ShowFiltersKeyValue).map(key => (React.createElement(SelectOption, { key: key, value: key }, ShowFiltersKeyValue[key])))));\n    const expandOptions = (React.createElement(SelectGroup, { label: \"Expand\" }, Object.keys(ExpandFiltersKeyValue).map(key => (React.createElement(SelectOption, { key: key, value: key }, ExpandFiltersKeyValue[key])))));\n    return (React.createElement(Select, { className: \"odc-filter-dropdown__select\", variant: SelectVariant.checkbox, onToggle: onToggle, selections: selected, isExpanded: isOpen, onSelect: onSelect, placeholderText: \"Display Options\", isGrouped: true },\n        showOptions,\n        expandOptions));\n};\nexport default FilterDropdown;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/filters/FilterDropdown.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/filters/FilterDropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC1F,OAAO,EAAE,mBAAmB,EAAE,qBAAqB,EAAkB,MAAM,gBAAgB,CAAC;AAO5F,MAAM,cAAc,GAAkC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9E,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAElE,MAAM,QAAQ,GAAG,CAAC,IAAa,EAAQ,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC1D,MAAM,QAAQ,GAAG,CAAC,CAAmB,EAAE,GAAW,EAAE,EAAE;QACpD,QAAQ,iCAAM,OAAO,KAAE,CAAC,GAAG,CAAC,EAAG,CAAC,CAAC,MAA2B,CAAC,OAAO,IAAG,CAAC;IAC1E,CAAC,CAAC;IACF,MAAM,WAAW,GAAG,CAClB,oBAAC,WAAW,IAAC,KAAK,EAAC,MAAM,IACtB,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAC3C,oBAAC,YAAY,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,IAC/B,mBAAmB,CAAC,GAAG,CAAC,CACZ,CAChB,CAAC,CACU,CACf,CAAC;IACF,MAAM,aAAa,GAAG,CACpB,oBAAC,WAAW,IAAC,KAAK,EAAC,QAAQ,IACxB,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAC7C,oBAAC,YAAY,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,IAC/B,qBAAqB,CAAC,GAAG,CAAC,CACd,CAChB,CAAC,CACU,CACf,CAAC;IAEF,OAAO,CACL,oBAAC,MAAM,IAAC,SAAS,EAAC,6BAA6B,EAAC,OAAO,EAAE,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAC,iBAAiB,EAAC,SAAS;QAC3M,WAAW;QACX,aAAa,CACP,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import * as React from 'react';\nimport { Select, SelectVariant, SelectOption, SelectGroup } from '@patternfly/react-core';\nimport { ShowFiltersKeyValue, ExpandFiltersKeyValue, DisplayFilters } from './filter-types';\n\ntype FilterDropdownProps = {\n  filters: DisplayFilters;\n  onChange: (filter: DisplayFilters) => void;\n};\n\nconst FilterDropdown: React.FC<FilterDropdownProps> = ({ filters, onChange }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const selected = Object.keys(filters).filter(key => filters[key]);\n\n  const onToggle = (open: boolean): void => setIsOpen(open);\n  const onSelect = (e: React.MouseEvent, key: string) => {\n    onChange({ ...filters, [key]: (e.target as HTMLInputElement).checked });\n  };\n  const showOptions = (\n    <SelectGroup label=\"Show\">\n      {Object.keys(ShowFiltersKeyValue).map(key => (\n        <SelectOption key={key} value={key}>\n          {ShowFiltersKeyValue[key]}\n        </SelectOption>\n      ))}\n    </SelectGroup>\n  );\n  const expandOptions = (\n    <SelectGroup label=\"Expand\">\n      {Object.keys(ExpandFiltersKeyValue).map(key => (\n        <SelectOption key={key} value={key}>\n          {ExpandFiltersKeyValue[key]}\n        </SelectOption>\n      ))}\n    </SelectGroup>\n  );\n\n  return (\n    <Select className=\"odc-filter-dropdown__select\" variant={SelectVariant.checkbox} onToggle={onToggle} selections={selected} isExpanded={isOpen} onSelect={onSelect} placeholderText=\"Display Options\" isGrouped>\n      {showOptions}\n      {expandOptions}\n    </Select>\n  );\n};\n\nexport default FilterDropdown;\n"]}]}