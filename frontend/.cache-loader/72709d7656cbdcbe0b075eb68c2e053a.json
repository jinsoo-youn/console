{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-expression-list/affinity-expression-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-expression-list/affinity-expression-row.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { GridItem, TextInput, Button, FormSelect, FormSelectOption, Select, SelectVariant, SelectOption, } from '@patternfly/react-core';\nimport { EXPRESSION_OPERATORS } from '../../../shared/consts';\nimport './affinity-expression-row.scss';\nexport const AffinityExpressionRow = ({ expression, onChange, onDelete, }) => {\n    const { id, key, values, operator } = expression;\n    const enableValueField = operator !== 'Exists' && operator !== 'DoesNotExist';\n    const [isValuesExpanded, setIsValuesExpanded] = React.useState(false);\n    const onSelect = (event, selection) => {\n        const isValueExist = values.some((item) => item === selection);\n        if (isValueExist) {\n            onChange(Object.assign(Object.assign({}, expression), { values: values.filter((item) => item !== selection) }));\n        }\n        else {\n            onChange(Object.assign(Object.assign({}, expression), { values: [...values, selection] }));\n        }\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(GridItem, { span: 4 },\n            React.createElement(TextInput, { id: `affinity-${id}-key-input`, className: \"kv-affinity-expression-row__key-input\", placeholder: \"key\", isRequired: true, type: \"text\", value: key, onChange: (newKey) => onChange(Object.assign(Object.assign({}, expression), { key: newKey })), \"aria-label\": \"selector key\" })),\n        React.createElement(GridItem, { span: 2 },\n            React.createElement(FormSelect, { id: `affinity-${id}-effect-select`, className: \"kv-affinity-expression-row__operator-input\", isRequired: true, value: operator, onChange: (v) => onChange(Object.assign(Object.assign({}, expression), { operator: v })), \"aria-label\": \"selector effect\" }, EXPRESSION_OPERATORS.map((operatorOption) => (React.createElement(FormSelectOption, { key: operatorOption, value: operatorOption, label: operatorOption }))))),\n        React.createElement(GridItem, { span: 5 },\n            React.createElement(Select, { isDisabled: !enableValueField, variant: SelectVariant.typeaheadMulti, isExpanded: isValuesExpanded, isCreatable: true, ariaLabelTypeAhead: \"Enter Value\", onToggle: () => setIsValuesExpanded(!isValuesExpanded), onClear: () => onChange(Object.assign(Object.assign({}, expression), { values: [] })), onSelect: onSelect, selections: enableValueField ? values : [], ariaLabelledBy: \"values select\", placeholderText: enableValueField ? 'Enter Value' : '' }, values === null || values === void 0 ? void 0 : values.map((option, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            React.createElement(SelectOption, { isDisabled: false, key: index, value: option }))))),\n        React.createElement(GridItem, { span: 1 },\n            React.createElement(Button, { id: `affinity-${id}-delete-btn`, onClick: () => onDelete(id), variant: \"plain\" },\n                React.createElement(MinusCircleIcon, null)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-expression-list/affinity-expression-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/affinity-modal/components/affinity-expression-list/affinity-expression-row.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport {\n  GridItem,\n  TextInput,\n  Button,\n  FormSelect,\n  FormSelectOption,\n  Select,\n  SelectVariant,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { EXPRESSION_OPERATORS } from '../../../shared/consts';\nimport { AffinityLabel } from '../../types';\nimport './affinity-expression-row.scss';\n\nexport const AffinityExpressionRow = ({\n  expression,\n  onChange,\n  onDelete,\n}: AffinityExpressionRowProps) => {\n  const { id, key, values, operator } = expression;\n  const enableValueField = operator !== 'Exists' && operator !== 'DoesNotExist';\n  const [isValuesExpanded, setIsValuesExpanded] = React.useState(false);\n\n  const onSelect = (event, selection) => {\n    const isValueExist = values.some((item) => item === selection);\n    if (isValueExist) {\n      onChange({ ...expression, values: values.filter((item) => item !== selection) });\n    } else {\n      onChange({ ...expression, values: [...values, selection] });\n    }\n  };\n  return (\n    <>\n      <GridItem span={4}>\n        <TextInput\n          id={`affinity-${id}-key-input`}\n          className=\"kv-affinity-expression-row__key-input\"\n          placeholder=\"key\"\n          isRequired\n          type=\"text\"\n          value={key}\n          onChange={(newKey) => onChange({ ...expression, key: newKey })}\n          aria-label=\"selector key\"\n        />\n      </GridItem>\n      <GridItem span={2}>\n        <FormSelect\n          id={`affinity-${id}-effect-select`}\n          className=\"kv-affinity-expression-row__operator-input\"\n          isRequired\n          value={operator}\n          onChange={(v) => onChange({ ...expression, operator: v as AffinityLabel['operator'] })}\n          aria-label=\"selector effect\"\n        >\n          {EXPRESSION_OPERATORS.map((operatorOption) => (\n            <FormSelectOption key={operatorOption} value={operatorOption} label={operatorOption} />\n          ))}\n        </FormSelect>\n      </GridItem>\n      <GridItem span={5}>\n        <Select\n          isDisabled={!enableValueField}\n          variant={SelectVariant.typeaheadMulti}\n          isExpanded={isValuesExpanded}\n          isCreatable\n          ariaLabelTypeAhead=\"Enter Value\"\n          onToggle={() => setIsValuesExpanded(!isValuesExpanded)}\n          onClear={() => onChange({ ...expression, values: [] })}\n          onSelect={onSelect}\n          selections={enableValueField ? values : []}\n          ariaLabelledBy=\"values select\"\n          placeholderText={enableValueField ? 'Enter Value' : ''}\n        >\n          {values?.map((option, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <SelectOption isDisabled={false} key={index} value={option} />\n          ))}\n        </Select>\n      </GridItem>\n      <GridItem span={1}>\n        <Button id={`affinity-${id}-delete-btn`} onClick={() => onDelete(id)} variant=\"plain\">\n          <MinusCircleIcon />\n        </Button>\n      </GridItem>\n    </>\n  );\n};\n\ntype AffinityExpressionRowProps = {\n  expression: AffinityLabel;\n  onChange: (label: AffinityLabel) => void;\n  onDelete: (id: any) => void;\n};\n"]}]}