{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/inference-service.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/inference-service.tsx","mtime":1617182414010},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { InferenceServiceModel } from '../../models';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(InferenceServiceModel), ...Kebab.factory.common];\nconst kind = InferenceServiceModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst InferenceServiceTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:FRAMEWORK'),\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:STORAGEURI'),\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:URL'),\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:CANARY'),\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: t('COMMON:STATUS'),\n            transforms: [sortable],\n            props: { className: tableColumnClasses[6] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[7] },\n        },\n    ];\n};\nInferenceServiceTableHeader.displayName = 'InferenceServiceTableHeader';\nconst InferenceServiceTableRow = ({ obj: isvc, index, key, style }) => {\n    var _a;\n    const frameworkList = ['tensorflow', 'onnx', 'sklearn', 'xgboost', 'pytorch', 'tensorrt'];\n    let framework = frameworkList.includes(Object.keys(isvc.spec.default.predictor)[0]) ? Object.keys(isvc.spec.default.predictor)[0] : Object.keys(isvc.spec.default.predictor)[1];\n    return (React.createElement(TableRow, { id: isvc.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: isvc.metadata.name, namespace: isvc.metadata.namespace, title: isvc.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: isvc.metadata.namespace, title: isvc.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, framework),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, (_a = isvc.spec.default.predictor[framework]) === null || _a === void 0 ? void 0 : _a.storageUri),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, isvc.status.url),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, isvc.status.canary && Object.keys(isvc.status.canary).length === 0 ? 'N' : 'Y'),\n        React.createElement(TableData, { className: tableColumnClasses[6] }, isvc.status.conditions.length ? isvc.status.conditions[isvc.status.conditions.length - 1].status : ''),\n        React.createElement(TableData, { className: tableColumnClasses[7] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: isvc }))));\n};\nconst InferenceServiceDetails = ({ obj: isvc }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(isvc, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: isvc }))))));\n};\nconst { details, editYaml } = navFactory;\nexport const InferenceServices = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"InferenceServices\", Header: InferenceServiceTableHeader.bind(null, t), Row: InferenceServiceTableRow, virtualize: true }));\n};\nexport const InferenceServicesPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: InferenceServices, kind: kind }, props));\nexport const InferenceServicesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(InferenceServiceDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/inference-service.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/inference-service.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { InferenceServiceModel } from '../../models';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(InferenceServiceModel), ...Kebab.factory.common];\n\nconst kind = InferenceServiceModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst InferenceServiceTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:FRAMEWORK'),\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:STORAGEURI'),\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:URL'),\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:CANARY'),\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('COMMON:STATUS'),\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[7] },\n    },\n  ];\n};\nInferenceServiceTableHeader.displayName = 'InferenceServiceTableHeader';\n\nconst InferenceServiceTableRow: RowFunction<K8sResourceKind> = ({ obj: isvc, index, key, style }) => {\n  const frameworkList = ['tensorflow', 'onnx', 'sklearn', 'xgboost', 'pytorch', 'tensorrt'];\n  let framework = frameworkList.includes(Object.keys(isvc.spec.default.predictor)[0]) ? Object.keys(isvc.spec.default.predictor)[0] : Object.keys(isvc.spec.default.predictor)[1];\n  return (\n    <TableRow id={isvc.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={isvc.metadata.name} namespace={isvc.metadata.namespace} title={isvc.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={isvc.metadata.namespace} title={isvc.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {framework}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {isvc.spec.default.predictor[framework]?.storageUri}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {isvc.status.url}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {isvc.status.canary && Object.keys(isvc.status.canary).length === 0 ? 'N' : 'Y'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        {isvc.status.conditions.length ? isvc.status.conditions[isvc.status.conditions.length - 1].status : ''}\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={isvc} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst InferenceServiceDetails: React.FC<InferenceServiceDetailsProps> = ({ obj: isvc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(isvc, t) })}/>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={isvc} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst { details, editYaml } = navFactory;\nexport const InferenceServices: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"InferenceServices\" Header={InferenceServiceTableHeader.bind(null, t)} Row={InferenceServiceTableRow} virtualize />;\n}\n\nexport const InferenceServicesPage: React.FC<InferenceServicesPageProps> = props => <ListPage canCreate={true} ListComponent={InferenceServices} kind={kind} {...props} />;\n\nexport const InferenceServicesDetailsPage: React.FC<InferenceServicesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(InferenceServiceDetails)), editYaml()]} />;\n\ntype InferenceServiceDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype InferenceServicesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype InferenceServicesDetailsPageProps = {\n  match: any;\n};\n"]}]}