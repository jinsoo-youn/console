{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/reducers/features.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/reducers/features.ts","mtime":1615298458760},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash-es';\nimport { ChargebackReportModel, ClusterServiceClassModel, ConsoleCLIDownloadModel, ConsoleExternalLogLinkModel, ConsoleNotificationModel, ConsoleYAMLSampleModel, MachineAutoscalerModel, MachineConfigModel, MachineHealthCheckModel, MachineModel, PrometheusModel, } from '../models';\nimport { referenceForModel } from '../module/k8s';\nimport { ActionType as K8sActionType } from '../actions/k8s';\nimport { ActionType } from '../actions/features';\nimport { FLAGS } from '@console/shared/src/constants';\nimport * as plugins from '../plugins';\nexport const defaults = _.mapValues(FLAGS, (flag) => flag === FLAGS.AUTH_ENABLED ? !window.SERVER_FLAGS.authDisabled : undefined);\nexport const baseCRDs = {\n    [referenceForModel(ChargebackReportModel)]: FLAGS.CHARGEBACK,\n    [referenceForModel(ClusterServiceClassModel)]: FLAGS.SERVICE_CATALOG,\n    [referenceForModel(ConsoleCLIDownloadModel)]: FLAGS.CONSOLE_CLI_DOWNLOAD,\n    [referenceForModel(ConsoleExternalLogLinkModel)]: FLAGS.CONSOLE_EXTERNAL_LOG_LINK,\n    [referenceForModel(ConsoleNotificationModel)]: FLAGS.CONSOLE_NOTIFICATION,\n    [referenceForModel(ConsoleYAMLSampleModel)]: FLAGS.CONSOLE_YAML_SAMPLE,\n    [referenceForModel(MachineAutoscalerModel)]: FLAGS.MACHINE_AUTOSCALER,\n    [referenceForModel(MachineConfigModel)]: FLAGS.MACHINE_CONFIG,\n    [referenceForModel(MachineHealthCheckModel)]: FLAGS.MACHINE_HEALTH_CHECK,\n    [referenceForModel(MachineModel)]: FLAGS.CLUSTER_API,\n    [referenceForModel(PrometheusModel)]: FLAGS.PROMETHEUS,\n};\nconst CRDs = Object.assign({}, baseCRDs);\nplugins.registry.getModelFeatureFlags().forEach((ff) => {\n    const modelRef = referenceForModel(ff.properties.model);\n    if (!CRDs[modelRef]) {\n        CRDs[modelRef] = ff.properties.flag;\n    }\n});\nexport const featureReducerName = 'FLAGS';\nexport const featureReducer = (state, action) => {\n    if (!state) {\n        return ImmutableMap(defaults);\n    }\n    switch (action.type) {\n        case ActionType.SetFlag:\n            return state.set(action.payload.flag, action.payload.value);\n        case ActionType.ClearSSARFlags:\n            return state.withMutations((s) => action.payload.flags.reduce((acc, curr) => acc.remove(curr), s));\n        case K8sActionType.ReceivedResources:\n            // Flip all flags to false to signify that we did not see them\n            _.each(CRDs, (v) => (state = state.set(v, false)));\n            return action.payload.resources.models\n                .filter((model) => CRDs[referenceForModel(model)] !== undefined)\n                .reduce((nextState, model) => {\n                const flag = CRDs[referenceForModel(model)];\n                // eslint-disable-next-line no-console\n                console.log(`${flag} was detected.`);\n                return nextState.set(flag, true);\n            }, state);\n        default:\n            return state;\n    }\n};\nexport const stateToFlagsObject = (state, desiredFlags) => desiredFlags.reduce((allFlags, f) => (Object.assign(Object.assign({}, allFlags), { [f]: state.get(f) })), {});\nconst stateToProps = (state, desiredFlags) => ({\n    flags: stateToFlagsObject(state, desiredFlags),\n});\nexport const getFlagsObject = ({ [featureReducerName]: featureState }) => featureState.toObject();\nexport const connectToFlags = (...flags) => connect((state) => stateToProps(state[featureReducerName], flags), null, null, {\n    areStatePropsEqual: _.isEqual,\n});\n// Flag detection is not complete if the flag's value is `undefined`.\nexport const flagPending = (flag) => flag === undefined;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/reducers/features.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/reducers/features.ts"],"names":[],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash-es';\n\nimport {\n  ChargebackReportModel,\n  ClusterServiceClassModel,\n  ConsoleCLIDownloadModel,\n  ConsoleExternalLogLinkModel,\n  ConsoleNotificationModel,\n  ConsoleYAMLSampleModel,\n  MachineAutoscalerModel,\n  MachineConfigModel,\n  MachineHealthCheckModel,\n  MachineModel,\n  PrometheusModel,\n} from '../models';\nimport { referenceForModel } from '../module/k8s';\nimport { RootState } from '../redux';\nimport { ActionType as K8sActionType } from '../actions/k8s';\nimport { FeatureAction, ActionType } from '../actions/features';\nimport { FLAGS } from '@console/shared/src/constants';\nimport * as plugins from '../plugins';\n\nexport const defaults = _.mapValues(FLAGS, (flag) =>\n  flag === FLAGS.AUTH_ENABLED ? !window.SERVER_FLAGS.authDisabled : undefined,\n);\n\nexport const baseCRDs = {\n  [referenceForModel(ChargebackReportModel)]: FLAGS.CHARGEBACK,\n  [referenceForModel(ClusterServiceClassModel)]: FLAGS.SERVICE_CATALOG,\n  [referenceForModel(ConsoleCLIDownloadModel)]: FLAGS.CONSOLE_CLI_DOWNLOAD,\n  [referenceForModel(ConsoleExternalLogLinkModel)]: FLAGS.CONSOLE_EXTERNAL_LOG_LINK,\n  [referenceForModel(ConsoleNotificationModel)]: FLAGS.CONSOLE_NOTIFICATION,\n  [referenceForModel(ConsoleYAMLSampleModel)]: FLAGS.CONSOLE_YAML_SAMPLE,\n  [referenceForModel(MachineAutoscalerModel)]: FLAGS.MACHINE_AUTOSCALER,\n  [referenceForModel(MachineConfigModel)]: FLAGS.MACHINE_CONFIG,\n  [referenceForModel(MachineHealthCheckModel)]: FLAGS.MACHINE_HEALTH_CHECK,\n  [referenceForModel(MachineModel)]: FLAGS.CLUSTER_API,\n  [referenceForModel(PrometheusModel)]: FLAGS.PROMETHEUS,\n};\n\nconst CRDs = { ...baseCRDs };\n\nplugins.registry.getModelFeatureFlags().forEach((ff) => {\n  const modelRef = referenceForModel(ff.properties.model);\n  if (!CRDs[modelRef]) {\n    CRDs[modelRef] = ff.properties.flag as FLAGS;\n  }\n});\n\nexport type FeatureState = ImmutableMap<string, boolean>;\n\nexport const featureReducerName = 'FLAGS';\nexport const featureReducer = (state: FeatureState, action: FeatureAction): FeatureState => {\n  if (!state) {\n    return ImmutableMap(defaults);\n  }\n\n  switch (action.type) {\n    case ActionType.SetFlag:\n      return state.set(action.payload.flag, action.payload.value);\n\n    case ActionType.ClearSSARFlags:\n      return state.withMutations((s) =>\n        action.payload.flags.reduce((acc, curr) => acc.remove(curr), s),\n      );\n\n    case K8sActionType.ReceivedResources:\n      // Flip all flags to false to signify that we did not see them\n      _.each(CRDs, (v) => (state = state.set(v, false)));\n\n      return action.payload.resources.models\n        .filter((model) => CRDs[referenceForModel(model)] !== undefined)\n        .reduce((nextState, model) => {\n          const flag = CRDs[referenceForModel(model)];\n          // eslint-disable-next-line no-console\n          console.log(`${flag} was detected.`);\n\n          return nextState.set(flag, true);\n        }, state);\n\n    default:\n      return state;\n  }\n};\n\nexport const stateToFlagsObject = (state: FeatureState, desiredFlags: string[]): FlagsObject =>\n  desiredFlags.reduce((allFlags, f) => ({ ...allFlags, [f]: state.get(f) }), {} as FlagsObject);\n\nconst stateToProps = (state: FeatureState, desiredFlags: string[]): WithFlagsProps => ({\n  flags: stateToFlagsObject(state, desiredFlags),\n});\n\nexport const getFlagsObject = ({ [featureReducerName]: featureState }: RootState): FlagsObject =>\n  featureState.toObject();\n\nexport type FlagsObject = { [key: string]: boolean };\n\nexport type WithFlagsProps = {\n  flags: FlagsObject;\n};\n\nexport type ConnectToFlags = <P extends WithFlagsProps>(\n  ...flags: (FLAGS | string)[]\n) => (\n  C: React.ComponentType<P>,\n) => React.ComponentType<Omit<P, keyof WithFlagsProps>> & {\n  WrappedComponent: React.ComponentType<P>;\n};\n\nexport const connectToFlags: ConnectToFlags = (...flags) =>\n  connect((state: RootState) => stateToProps(state[featureReducerName], flags), null, null, {\n    areStatePropsEqual: _.isEqual,\n  });\n\n// Flag detection is not complete if the flag's value is `undefined`.\nexport const flagPending = (flag: boolean) => flag === undefined;\n"]}]}