{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/ResourceKindsInfo.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/ResourceKindsInfo.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { getTopologyResourceObject } from '../../topology-utils';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport './ResourceKindsInfo.scss';\nconst ResourceKindsInfo = ({ groupResources, emptyValue, width, height }) => {\n    const resourcesData = {};\n    _.forEach(groupResources, (res) => {\n        const a = getTopologyResourceObject(res);\n        const kindObj = modelFor(referenceFor(a));\n        const key = kindObj.abbr || a.kind;\n        resourcesData[key] = [...(resourcesData[key] ? resourcesData[key] : []), a];\n    });\n    const resourceTypes = _.keys(resourcesData);\n    if (!resourceTypes.length) {\n        return (React.createElement(\"foreignObject\", { width: width, height: height },\n            React.createElement(\"div\", { className: \"odc-resource-kinds-info\" }, emptyValue)));\n    }\n    return (React.createElement(\"foreignObject\", { width: width, height: height },\n        React.createElement(\"div\", { className: \"odc-resource-kinds-info\" },\n            React.createElement(\"table\", { className: \"odc-resource-kinds-info__table\" },\n                React.createElement(\"tbody\", { className: \"odc-resource-kinds-info__body\" }, resourceTypes.map(key => {\n                    const kindObj = modelFor(referenceFor(resourcesData[key][0]));\n                    return (React.createElement(\"tr\", { key: key, className: \"odc-resource-kinds-info__row\" },\n                        React.createElement(\"td\", { className: \"odc-resource-kinds-info__count\" }, resourcesData[key].length),\n                        React.createElement(\"td\", { className: \"odc-resource-kinds-info__resource-icon\" },\n                            React.createElement(ResourceIcon, { kind: kindObj.crd ? referenceForModel(kindObj) : kindObj.kind })),\n                        React.createElement(\"td\", { className: \"odc-resource-kinds-info__kind\" }, resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label)));\n                }))))));\n};\nexport { ResourceKindsInfo };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/ResourceKindsInfo.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/groups/ResourceKindsInfo.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACzF,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AAEjE,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAElE,OAAO,0BAA0B,CAAC;AASlC,MAAM,iBAAiB,GAAqC,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE;IAC5G,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,GAAuB,EAAE,EAAE;QACpD,MAAM,CAAC,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;QACnC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IACH,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAE5C,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;QACzB,OAAO,CACL,uCAAe,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;YACzC,6BAAK,SAAS,EAAC,yBAAyB,IAAE,UAAU,CAAO,CAC7C,CACjB,CAAC;KACH;IAED,OAAO,CACL,uCAAe,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;QACzC,6BAAK,SAAS,EAAC,yBAAyB;YACtC,+BAAO,SAAS,EAAC,gCAAgC;gBAC/C,+BAAO,SAAS,EAAC,+BAA+B,IAC7C,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBACvB,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9D,OAAO,CACL,4BAAI,GAAG,EAAE,GAAG,EAAE,SAAS,EAAC,8BAA8B;wBACpD,4BAAI,SAAS,EAAC,gCAAgC,IAAE,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,CAAM;wBAC/E,4BAAI,SAAS,EAAC,wCAAwC;4BACpD,oBAAC,YAAY,IAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,GAAI,CAC5E;wBACL,4BAAI,SAAS,EAAC,+BAA+B,IAAE,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAM,CACrH,CACN,CAAC;gBACJ,CAAC,CAAC,CACI,CACF,CACJ,CACQ,CACjB,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { getTopologyResourceObject } from '../../topology-utils';\nimport { TopologyDataObject } from '../../topology-types';\nimport { ResourceIcon } from '@console/internal/components/utils';\n\nimport './ResourceKindsInfo.scss';\n\ntype ResourceKindsInfoProps = {\n  groupResources: TopologyDataObject;\n  emptyValue?: React.ReactNode;\n  width: number;\n  height: number;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue, width, height }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (res: TopologyDataObject) => {\n    const a = getTopologyResourceObject(res);\n    const kindObj = modelFor(referenceFor(a));\n    const key = kindObj.abbr || a.kind;\n    resourcesData[key] = [...(resourcesData[key] ? resourcesData[key] : []), a];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject width={width} height={height}>\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject width={width} height={height}>\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map(key => {\n              const kindObj = modelFor(referenceFor(resourcesData[key][0]));\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kindObj.crd ? referenceForModel(kindObj) : kindObj.kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport { ResourceKindsInfo };\n"]}]}