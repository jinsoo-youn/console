{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/metrics.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/metrics.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { ActionGroup, Alert, AlertActionCloseButton, Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Pagination, PaginationVariant, Switch, Title, } from '@patternfly/react-core';\nimport { AngleDownIcon, AngleRightIcon, ChartLineIcon, CompressIcon, TimesIcon, } from '@patternfly/react-icons';\nimport { sortable, Table, TableBody, TableGridBreakpoint, TableHeader, TableVariant, wrappable, } from '@patternfly/react-table';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { RedExclamationCircleIcon, TechPreviewBadge, YellowExclamationTriangleIcon, } from '@console/shared';\nimport * as UIActions from '../../actions/ui';\nimport { fuzzyCaseInsensitive } from '../factory/table-filters';\nimport { PROMETHEUS_BASE_PATH } from '../graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '../graphs/helpers';\nimport { getPrometheusExpressionBrowserURL } from '../graphs/prometheus-graph';\nimport { ActionsMenu, Dropdown, ExternalLink, getURLSearchParams, Kebab, LoadingInline, usePoll, useSafeFetch, } from '../utils';\nimport { setAllQueryArguments } from '../utils/router';\nimport { colors, Error, QueryBrowser } from './query-browser';\nconst aggregationOperators = [\n    'avg()',\n    'bottomk()',\n    'count()',\n    'count_values()',\n    'max()',\n    'min()',\n    'quantile()',\n    'stddev()',\n    'stdvar()',\n    'sum()',\n    'topk()',\n];\nconst prometheusFunctions = [\n    'abs()',\n    'absent()',\n    'avg_over_time()',\n    'ceil()',\n    'changes()',\n    'clamp_max()',\n    'clamp_min()',\n    'count_over_time()',\n    'day_of_month()',\n    'day_of_week()',\n    'days_in_month()',\n    'delta()',\n    'deriv()',\n    'exp()',\n    'floor()',\n    'histogram_quantile()',\n    'holt_winters()',\n    'hour()',\n    'idelta()',\n    'increase()',\n    'irate()',\n    'label_join()',\n    'label_replace()',\n    'ln()',\n    'log10()',\n    'log2()',\n    'max_over_time()',\n    'min_over_time()',\n    'minute()',\n    'month()',\n    'predict_linear()',\n    'quantile_over_time()',\n    'rate()',\n    'resets()',\n    'round()',\n    'scalar()',\n    'sort()',\n    'sort_desc()',\n    'sqrt()',\n    'stddev_over_time()',\n    'stdvar_over_time()',\n    'sum_over_time()',\n    'time()',\n    'timestamp()',\n    'vector()',\n    'year()',\n];\n// Stores information about the currently focused query input\nlet focusedQuery;\nconst queryDispatchToProps = (dispatch, { index }) => ({\n    deleteQuery: () => dispatch(UIActions.queryBrowserDeleteQuery(index)),\n    patchQuery: (v) => dispatch(UIActions.queryBrowserPatchQuery(index, v)),\n    toggleIsEnabled: () => dispatch(UIActions.queryBrowserToggleIsEnabled(index)),\n});\nconst MetricsActionsMenu_ = ({ addQuery, deleteAll, isAllExpanded, setAllExpanded, }) => {\n    const doDelete = () => {\n        deleteAll();\n        focusedQuery = undefined;\n    };\n    const actionsMenuActions = [\n        { label: 'Add query', callback: addQuery },\n        {\n            label: `${isAllExpanded ? 'Collapse' : 'Expand'} all query tables`,\n            callback: () => setAllExpanded(!isAllExpanded),\n        },\n        { label: 'Delete all queries', callback: doDelete },\n    ];\n    return (React.createElement(\"div\", { className: \"co-actions\" },\n        React.createElement(ActionsMenu, { actions: actionsMenuActions })));\n};\nconst MetricsActionsMenu = connect(({ UI }) => ({\n    isAllExpanded: UI.getIn(['queryBrowser', 'queries']).every((q) => q.get('isExpanded')),\n}), {\n    addQuery: UIActions.queryBrowserAddQuery,\n    deleteAll: UIActions.queryBrowserDeleteAllQueries,\n    setAllExpanded: UIActions.queryBrowserSetAllExpanded,\n})(MetricsActionsMenu_);\nconst headerPrometheusLinkStateToProps = ({ UI }) => {\n    const liveQueries = UI.getIn(['queryBrowser', 'queries']).filter((q) => q.get('isEnabled') && q.get('query'));\n    const queryStrings = _.map(liveQueries.toJS(), 'query');\n    const url = window.SERVER_FLAGS.prometheusPublicURL;\n    return {\n        url: getPrometheusExpressionBrowserURL(url, queryStrings) ||\n            window.SERVER_FLAGS.prometheusPublicURL,\n    };\n};\nconst HeaderPrometheusLink_ = ({ url }) => {\n    return url ? (React.createElement(\"span\", { className: \"monitoring-header-link\" },\n        React.createElement(ExternalLink, { href: url, text: \"Prometheus UI\" }))) : null;\n};\nconst HeaderPrometheusLink = connect(headerPrometheusLinkStateToProps)(HeaderPrometheusLink_);\nexport const graphStateToProps = ({ UI }) => ({\n    hideGraphs: !!UI.getIn(['monitoring', 'hideGraphs']),\n});\nconst ToggleGraph_ = ({ hideGraphs, toggle }) => {\n    const icon = hideGraphs ? React.createElement(ChartLineIcon, null) : React.createElement(CompressIcon, null);\n    return (React.createElement(Button, { type: \"button\", className: \"pf-m-link--align-right query-browser__toggle-graph\", onClick: toggle, variant: \"link\" },\n        icon,\n        \" \",\n        hideGraphs ? 'Show' : 'Hide',\n        \" Graph\"));\n};\nexport const ToggleGraph = connect(graphStateToProps, { toggle: UIActions.monitoringToggleGraphs })(ToggleGraph_);\nconst MetricsDropdown_ = ({ insertText, namespace, setMetrics, }) => {\n    const [items, setItems] = React.useState();\n    const [isError, setIsError] = React.useState(false);\n    const safeFetch = React.useCallback(useSafeFetch(), []);\n    React.useEffect(() => {\n        const url = namespace\n            ? getPrometheusURL({\n                endpoint: PrometheusEndpoint.QUERY,\n                namespace,\n                query: `count({namespace=\"${namespace}\"}) by (__name__)`,\n            })\n            : `${PROMETHEUS_BASE_PATH}/${PrometheusEndpoint.LABEL}/__name__/values`;\n        safeFetch(url)\n            .then((response) => {\n            const metrics = namespace\n                ? _.map(_.get(response, 'data.result'), 'metric.__name__').sort()\n                : _.get(response, 'data');\n            setItems(_.zipObject(metrics, metrics));\n            setMetrics(metrics);\n        })\n            .catch(() => setIsError(true));\n    }, [namespace, safeFetch, setMetrics]);\n    const onChange = (metric) => {\n        // Replace the currently selected text with the metric\n        const { index = 0, selection = {}, target = undefined } = focusedQuery || {};\n        insertText(index, metric, selection.start, selection.end);\n        if (target) {\n            target.focus();\n            // Restore cursor position / currently selected text (use _.defer() to delay until after the input value is set)\n            _.defer(() => target.setSelectionRange(selection.start, selection.start + metric.length));\n        }\n    };\n    let title = 'Insert Metric at Cursor';\n    if (isError) {\n        title = (React.createElement(\"span\", null,\n            React.createElement(RedExclamationCircleIcon, null),\n            \" Failed to load metrics list.\"));\n    }\n    else if (items === undefined) {\n        title = React.createElement(LoadingInline, null);\n    }\n    else if (_.isEmpty(items)) {\n        title = (React.createElement(\"span\", null,\n            React.createElement(YellowExclamationTriangleIcon, null),\n            \" No metrics found.\"));\n    }\n    return (React.createElement(Dropdown, { autocompleteFilter: fuzzyCaseInsensitive, disabled: isError, id: \"metrics-dropdown\", items: items || {}, menuClassName: \"query-browser__metrics-dropdown-menu query-browser__metrics-dropdown-menu--insert\", onChange: onChange, title: title }));\n};\nconst MetricsDropdown = connect(null, {\n    insertText: UIActions.queryBrowserInsertText,\n    setMetrics: UIActions.queryBrowserSetMetrics,\n})(MetricsDropdown_);\nconst ExpandButton = ({ isExpanded, onClick }) => {\n    const title = `${isExpanded ? 'Hide' : 'Show'} Table`;\n    return (React.createElement(Button, { \"aria-label\": title, className: \"query-browser__expand-button\", onClick: onClick, title: title, variant: \"plain\" }, isExpanded ? (React.createElement(AngleDownIcon, { className: \"query-browser__expand-icon\" })) : (React.createElement(AngleRightIcon, { className: \"query-browser__expand-icon\" }))));\n};\nconst seriesButtonStateToProps = ({ UI }, { index, labels }) => {\n    const disabledSeries = UI.getIn(['queryBrowser', 'queries', index, 'disabledSeries']);\n    const isDisabled = _.some(disabledSeries, (s) => _.isEqual(s, labels));\n    if (!isDisabled) {\n        const series = UI.getIn(['queryBrowser', 'queries', index, 'series']);\n        if (_.isEmpty(series)) {\n            return { colorIndex: null, isDisabled, isSeriesEmpty: true };\n        }\n        const colorOffset = UI.getIn(['queryBrowser', 'queries'])\n            .take(index)\n            .filter((q) => q.get('isEnabled'))\n            .reduce((sum, q) => sum + _.size(q.get('series')), 0);\n        const seriesIndex = _.findIndex(series, (s) => _.isEqual(s, labels));\n        const colorIndex = (colorOffset + seriesIndex) % colors.length;\n        return { colorIndex, isDisabled };\n    }\n    return { colorIndex: null, isDisabled };\n};\nconst SeriesButton_ = ({ colorIndex, isDisabled, isSeriesEmpty = false, toggleSeries, }) => {\n    if (isSeriesEmpty) {\n        return null;\n    }\n    const title = `${isDisabled ? 'Show' : 'Hide'} series`;\n    return (React.createElement(\"div\", { className: \"query-browser__series-btn-wrap\" },\n        React.createElement(Button, { \"aria-label\": title, className: classNames('query-browser__series-btn', {\n                'query-browser__series-btn--disabled': isDisabled,\n            }), onClick: toggleSeries, style: colorIndex === null ? undefined : { backgroundColor: colors[colorIndex] }, title: title, type: \"button\", variant: \"plain\" })));\n};\nconst SeriesButton = connect(seriesButtonStateToProps, (dispatch, { index, labels }) => ({\n    toggleSeries: () => dispatch(UIActions.queryBrowserToggleSeries(index, labels)),\n}))(SeriesButton_);\nconst queryInputStateToProps = ({ UI }, { index }) => ({\n    metrics: UI.getIn(['queryBrowser', 'metrics']),\n    text: UI.getIn(['queryBrowser', 'queries', index, 'text']),\n});\nconst QueryInput_ = ({ index, metrics, patchQuery, runQueries, text = '', }) => {\n    const [token, setToken] = React.useState('');\n    const inputRef = React.useRef(null);\n    const getTextBeforeCursor = () => inputRef.current.value.substring(0, inputRef.current.selectionEnd);\n    const onChange = (e) => {\n        patchQuery({ text: e.target.value });\n        // Metric and function names can only contain the characters a-z, A-Z, 0-9, '_' and ':'\n        const allTokens = getTextBeforeCursor().split(/[^a-zA-Z0-9_:]+/);\n        // We always do case insensitive autocompletion, so convert to lower case immediately\n        setToken(_.toLower(_.last(allTokens)));\n    };\n    const onKeyDown = (e) => {\n        // Enter+Shift inserts newlines, Enter alone runs the query\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            runQueries();\n            setToken('');\n        }\n    };\n    const onBlur = (e) => {\n        focusedQuery = {\n            index,\n            selection: {\n                start: e.target.selectionStart,\n                end: e.target.selectionEnd,\n            },\n            target: e.target,\n        };\n        setToken('');\n    };\n    // Use onMouseDown instead of onClick so that this is run before the onBlur handler\n    const onMouseDown = (e) => {\n        // Replace the autocomplete token with the selected autocomplete option (case insensitive)\n        const re = new RegExp(`${_.escapeRegExp(token)}$`, 'i');\n        const newTextBeforeCursor = getTextBeforeCursor().replace(re, e.currentTarget.dataset.autocomplete);\n        patchQuery({ text: newTextBeforeCursor + text.substring(inputRef.current.selectionEnd) });\n        // Move cursor to just after the text we inserted (use _.defer() so this is called after the textarea value is set)\n        const cursorPosition = newTextBeforeCursor.length;\n        _.defer(() => {\n            inputRef.current.setSelectionRange(cursorPosition, cursorPosition);\n            inputRef.current.focus();\n        });\n    };\n    const onClear = () => {\n        patchQuery({ text: '' });\n        inputRef.current.focus();\n    };\n    // Order autocompletion suggestions so that exact matches (token as a substring) are first, then fuzzy matches after\n    // Exact matches are sorted first by how early the token appears and secondarily by string length (shortest first)\n    // Fuzzy matches are sorted by string length (shortest first)\n    const isMatch = (v) => fuzzyCaseInsensitive(token, v);\n    const matchScore = (v) => {\n        const i = v.toLowerCase().indexOf(token);\n        return i === -1 ? Infinity : i;\n    };\n    const filterSuggestions = (options) => _.sortBy(options.filter(isMatch), [matchScore, 'length']);\n    const allSuggestions = token.length < 2\n        ? {}\n        : _.omitBy({\n            ['Aggregation Operators']: filterSuggestions(aggregationOperators),\n            ['Functions']: filterSuggestions(prometheusFunctions),\n            ['Metrics']: filterSuggestions(metrics),\n        }, _.isEmpty);\n    // Set the default textarea height to the number of lines in the query text\n    const rows = _.clamp((text.match(/\\n/g) || []).length + 1, 2, 10);\n    return (React.createElement(\"div\", { className: \"query-browser__query pf-c-dropdown\" },\n        React.createElement(\"textarea\", { \"aria-label\": \"Expression (press Shift+Enter for newlines)\", autoFocus: true, className: \"pf-c-form-control query-browser__query-input\", onBlur: onBlur, onChange: onChange, onKeyDown: onKeyDown, placeholder: \"Expression (press Shift+Enter for newlines)\", ref: inputRef, rows: rows, spellCheck: false, value: text }),\n        React.createElement(Button, { className: \"query-browser__clear-icon\", \"aria-label\": \"Clear Query\", onClick: onClear, type: \"button\", variant: \"plain\" },\n            React.createElement(TimesIcon, null)),\n        !_.isEmpty(allSuggestions) && (React.createElement(\"ul\", { className: \"pf-c-dropdown__menu query-browser__metrics-dropdown-menu\" }, _.map(allSuggestions, (suggestions, title) => (React.createElement(React.Fragment, { key: title },\n            React.createElement(\"div\", { className: \"text-muted query-browser__dropdown--subtitle\" }, title),\n            _.map(suggestions, (s) => (React.createElement(\"li\", { key: s },\n                React.createElement(\"button\", { className: \"pf-c-dropdown__menu-item\", \"data-autocomplete\": s, onMouseDown: onMouseDown, type: \"button\" }, s)))))))))));\n};\nconst queryInputDispatchToProps = (dispatch, props) => Object.assign({ runQueries: () => dispatch(UIActions.queryBrowserRunQueries()) }, queryDispatchToProps(dispatch, props));\nexport const QueryInput = connect(queryInputStateToProps, queryInputDispatchToProps)(QueryInput_);\nconst QueryKebab_ = ({ deleteQuery, isDisabledSeriesEmpty, isEnabled, patchQuery, series, toggleIsEnabled, }) => {\n    const toggleAllSeries = () => patchQuery({ disabledSeries: isDisabledSeriesEmpty ? series : [] });\n    const doDelete = () => {\n        deleteQuery();\n        focusedQuery = undefined;\n    };\n    return (React.createElement(Kebab, { options: [\n            { label: `${isEnabled ? 'Disable' : 'Enable'} query`, callback: toggleIsEnabled },\n            {\n                label: `${isDisabledSeriesEmpty ? 'Hide' : 'Show'} all series`,\n                callback: toggleAllSeries,\n            },\n            { label: 'Delete query', callback: doDelete },\n        ] }));\n};\nconst QueryKebab = connect(({ UI }, { index }) => ({\n    isDisabledSeriesEmpty: _.isEmpty(UI.getIn(['queryBrowser', 'queries', index, 'disabledSeries'])),\n    isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n    series: UI.getIn(['queryBrowser', 'queries', index, 'series']),\n}), queryDispatchToProps)(QueryKebab_);\nconst queryTableStateToProps = ({ UI }, { index }) => ({\n    isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n    isExpanded: UI.getIn(['queryBrowser', 'queries', index, 'isExpanded']),\n    query: UI.getIn(['queryBrowser', 'queries', index, 'query']),\n    series: UI.getIn(['queryBrowser', 'queries', index, 'series']),\n});\nconst defaultPaginationOptions = [10, 20, 50, 100, 200, 500].map((n) => ({\n    title: n.toString(),\n    value: n,\n}));\nexport const TablePagination = ({ itemCount, page, perPage, setPage, setPerPage, paginationOptions = defaultPaginationOptions, }) => {\n    const onPerPageSelect = (e, v) => {\n        // When changing the number of results per page, keep the start row approximately the same\n        const firstRow = (page - 1) * perPage;\n        setPage(Math.floor(firstRow / v) + 1);\n        setPerPage(v);\n    };\n    return (React.createElement(Pagination, { className: \"query-browser__pagination\", itemCount: itemCount, onPerPageSelect: onPerPageSelect, onSetPage: (e, v) => setPage(v), page: page, perPage: perPage, perPageOptions: paginationOptions, variant: PaginationVariant.bottom }));\n};\nconst QueryTable_ = ({ index, isEnabled, isExpanded, namespace, query, series, }) => {\n    const [data, setData] = React.useState();\n    const [error, setError] = React.useState();\n    const [page, setPage] = React.useState(1);\n    const [perPage, setPerPage] = React.useState(50);\n    const [sortBy, setSortBy] = React.useState();\n    const safeFetch = React.useCallback(useSafeFetch(), []);\n    const tick = () => {\n        if (query) {\n            safeFetch(getPrometheusURL({ endpoint: PrometheusEndpoint.QUERY, namespace, query }))\n                .then((response) => {\n                setData(_.get(response, 'data'));\n                setError(undefined);\n            })\n                .catch((err) => {\n                if (err.name !== 'AbortError') {\n                    setData(undefined);\n                    setError(err);\n                }\n            });\n        }\n    };\n    usePoll(tick, 15 * 1000, namespace, query);\n    React.useEffect(() => {\n        setData(undefined);\n        setError(undefined);\n        setPage(1);\n        setSortBy(undefined);\n    }, [namespace, query]);\n    if (!isEnabled || !isExpanded || !query) {\n        return null;\n    }\n    if (error) {\n        return (React.createElement(\"div\", { className: \"query-browser__table-message\" },\n            React.createElement(Error, { error: error, title: \"Error loading values\" })));\n    }\n    if (!data) {\n        return (React.createElement(\"div\", { className: \"query-browser__table-message\" },\n            React.createElement(LoadingInline, null)));\n    }\n    const { result, resultType } = data;\n    // Add any data series from `series` (those displayed in the graph) that are not already in `result`. This happens\n    // for filtering PromQL queries that exclude a series currently, but did not exclude that same series at some point\n    // during that graph's range.\n    _.each(series, (labels) => {\n        if (_.every(result, (r) => !_.isEqual(labels, r.metric))) {\n            result.push({ metric: labels });\n        }\n    });\n    if (!result || result.length === 0) {\n        return (React.createElement(\"div\", { className: \"query-browser__table-message\" },\n            React.createElement(YellowExclamationTriangleIcon, null),\n            \" No datapoints found.\"));\n    }\n    const cellProps = {\n        props: { className: 'query-browser__table-cell' },\n        transforms: [sortable, wrappable],\n    };\n    // TableBody's shouldComponentUpdate seems to struggle with SeriesButton, so add a unique key to help TableBody\n    // determine when it should update\n    const buttonCell = (labels) => ({\n        title: React.createElement(SeriesButton, { index: index, key: _.uniqueId(), labels: labels }),\n    });\n    let columns, rows;\n    if (resultType === 'scalar') {\n        columns = ['', Object.assign({ title: 'Value' }, cellProps)];\n        rows = [[buttonCell({}), _.get(result, '[1]')]];\n    }\n    else {\n        const allLabelKeys = _.uniq(_.flatMap(result, ({ metric }) => Object.keys(metric))).sort();\n        columns = [\n            '',\n            ...allLabelKeys.map((k) => (Object.assign({ title: k === '__name__' ? 'Name' : k }, cellProps))),\n            Object.assign({ title: 'Value' }, cellProps),\n        ];\n        let rowMapper;\n        if (resultType === 'matrix') {\n            rowMapper = ({ metric, values }) => [\n                '',\n                ..._.map(allLabelKeys, (k) => metric[k]),\n                {\n                    title: (React.createElement(React.Fragment, null, _.map(values, ([time, v]) => (React.createElement(\"div\", { key: time },\n                        v,\n                        \"\\u00A0@\",\n                        time))))),\n                },\n            ];\n        }\n        else {\n            rowMapper = ({ metric, value }) => [\n                buttonCell(metric),\n                ..._.map(allLabelKeys, (k) => metric[k]),\n                _.get(value, '[1]', { title: React.createElement(\"span\", { className: \"text-muted\" }, \"None\") }),\n            ];\n        }\n        rows = _.map(result, rowMapper);\n        if (sortBy) {\n            // Sort Values column numerically and sort all the other columns alphabetically\n            const valuesColIndex = allLabelKeys.length + 1;\n            const sort = sortBy.index === valuesColIndex\n                ? (cells) => {\n                    const v = Number(cells[valuesColIndex]);\n                    return Number.isNaN(v) ? 0 : v;\n                }\n                : `${sortBy.index}`;\n            rows = _.orderBy(rows, [sort], [sortBy.direction]);\n        }\n    }\n    // Set the result table's break point based on the number of columns\n    let breakPoint = 'grid';\n    if (columns.length <= 2) {\n        breakPoint = 'none';\n    }\n    else if (columns.length <= 5) {\n        breakPoint = 'gridMd';\n    }\n    else if (columns.length <= 8) {\n        breakPoint = 'gridLg';\n    }\n    else if (columns.length <= 11) {\n        breakPoint = 'gridXl';\n    }\n    else if (columns.length <= 14) {\n        breakPoint = 'grid2xl';\n    }\n    const onSort = (e, i, direction) => setSortBy({ index: i, direction });\n    const tableRows = rows.slice((page - 1) * perPage, page * perPage).map((cells) => ({ cells }));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Table, { \"aria-label\": \"query results table\", cells: columns, gridBreakPoint: TableGridBreakpoint[breakPoint], onSort: onSort, rows: tableRows, sortBy: sortBy, variant: TableVariant.compact },\n            React.createElement(TableHeader, null),\n            React.createElement(TableBody, null)),\n        React.createElement(TablePagination, { itemCount: rows.length, page: page, perPage: perPage, setPage: setPage, setPerPage: setPerPage })));\n};\nexport const QueryTable = connect(queryTableStateToProps, queryDispatchToProps)(QueryTable_);\nconst NamespaceAlert_ = ({ dismiss, isDismissed, }) => isDismissed ? null : (React.createElement(Alert, { action: React.createElement(AlertActionCloseButton, { onClose: dismiss }), isInline: true, className: \"co-alert\", title: \"Queries entered here are limited to the data available in the currently selected project.\", variant: \"info\" }));\nconst NamespaceAlert = connect(({ UI }) => ({ isDismissed: !!UI.getIn(['queryBrowser', 'dismissNamespaceAlert']) }), { dismiss: UIActions.queryBrowserDismissNamespaceAlert })(NamespaceAlert_);\nconst Query_ = ({ id, index, isExpanded, isEnabled, namespace, patchQuery, toggleIsEnabled, }) => {\n    const switchKey = `${id}-${isEnabled}`;\n    const switchLabel = `${isEnabled ? 'Disable' : 'Enable'} query`;\n    const toggleIsExpanded = () => patchQuery({ isExpanded: !isExpanded });\n    return (React.createElement(\"div\", { className: classNames('query-browser__table', {\n            'query-browser__table--expanded': isExpanded,\n        }) },\n        React.createElement(\"div\", { className: \"query-browser__query-controls\" },\n            React.createElement(ExpandButton, { isExpanded: isExpanded, onClick: toggleIsExpanded }),\n            React.createElement(QueryInput, { index: index, namespace: namespace }),\n            React.createElement(\"div\", { title: switchLabel },\n                React.createElement(Switch, { \"aria-label\": switchLabel, id: switchKey, isChecked: isEnabled, key: switchKey, onChange: toggleIsEnabled })),\n            React.createElement(\"div\", { className: \"dropdown-kebab-pf\" },\n                React.createElement(QueryKebab, { index: index }))),\n        React.createElement(QueryTable, { index: index, namespace: namespace })));\n};\nconst Query = connect(({ UI }, { index }) => ({\n    id: UI.getIn(['queryBrowser', 'queries', index, 'id']),\n    isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n    isExpanded: UI.getIn(['queryBrowser', 'queries', index, 'isExpanded']),\n}), queryDispatchToProps)(Query_);\nconst QueryBrowserWrapper_ = ({ namespace, patchQuery, queriesList, }) => {\n    const queries = queriesList.toJS();\n    // Initialize queries from URL parameters\n    React.useEffect(() => {\n        const searchParams = getURLSearchParams();\n        for (let i = 0; _.has(searchParams, `query${i}`); ++i) {\n            const query = searchParams[`query${i}`];\n            patchQuery(i, { isEnabled: true, isExpanded: true, query, text: query });\n        }\n    }, [patchQuery]);\n    /* eslint-disable react-hooks/exhaustive-deps */\n    // Use React.useMemo() to prevent these two arrays being recreated on every render, which would trigger unnecessary\n    // re-renders of QueryBrowser, which can be quite slow\n    const queriesMemoKey = JSON.stringify(_.map(queries, 'query'));\n    const queryStrings = React.useMemo(() => _.map(queries, 'query'), [queriesMemoKey]);\n    const disabledSeriesMemoKey = JSON.stringify(_.reject(_.map(queries, 'disabledSeries'), _.isEmpty));\n    const disabledSeries = React.useMemo(() => _.map(queries, 'disabledSeries'), [\n        disabledSeriesMemoKey,\n    ]);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    // Update the URL parameters when the queries shown in the graph change\n    React.useEffect(() => {\n        const newParams = {};\n        _.each(queryStrings, (q, i) => (newParams[`query${i}`] = q || ''));\n        setAllQueryArguments(newParams);\n    }, [queryStrings]);\n    const insertExampleQuery = () => {\n        var _a;\n        const focusedIndex = (_a = focusedQuery === null || focusedQuery === void 0 ? void 0 : focusedQuery.index) !== null && _a !== void 0 ? _a : 0;\n        const index = queries[focusedIndex] ? focusedIndex : 0;\n        // Pick a suitable example query based on whether we are limiting results to a single namespace\n        const text = namespace\n            ? 'sum(rate(container_cpu_usage_seconds_total{image!=\"\", container!=\"POD\"}[5m])) by (pod)'\n            : 'sum(sort_desc(sum_over_time(ALERTS{alertstate=\"firing\"}[24h]))) by (alertname)';\n        patchQuery(index, { isEnabled: true, query: text, text });\n    };\n    return queryStrings.join('') === '' ? (React.createElement(\"div\", { className: \"query-browser__wrapper graph-empty-state\" },\n        React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n            React.createElement(EmptyStateIcon, { size: \"sm\", icon: ChartLineIcon }),\n            React.createElement(Title, { size: \"sm\" }, \"No Query Entered\"),\n            React.createElement(EmptyStateBody, null, \"Enter a query in the box below to explore metrics for this cluster.\"),\n            React.createElement(Button, { onClick: insertExampleQuery, variant: \"primary\" }, \"Insert Example Query\")))) : (React.createElement(QueryBrowser, { defaultTimespan: 30 * 60 * 1000, disabledSeries: disabledSeries, namespace: namespace, queries: queryStrings }));\n};\nconst QueryBrowserWrapper = connect(({ UI }) => ({ queriesList: UI.getIn(['queryBrowser', 'queries']) }), { patchQuery: UIActions.queryBrowserPatchQuery })(QueryBrowserWrapper_);\nconst AddQueryButton_ = ({ addQuery }) => (React.createElement(Button, { className: \"query-browser__inline-control\", onClick: addQuery, type: \"button\", variant: \"secondary\" }, \"Add Query\"));\nconst AddQueryButton = connect(null, { addQuery: UIActions.queryBrowserAddQuery })(AddQueryButton_);\nconst RunQueriesButton_ = ({ runQueries }) => (React.createElement(Button, { onClick: runQueries, type: \"submit\", variant: \"primary\" }, \"Run Queries\"));\nconst RunQueriesButton = connect(null, { runQueries: UIActions.queryBrowserRunQueries })(RunQueriesButton_);\nconst QueriesList_ = ({ count, namespace }) => (React.createElement(React.Fragment, null, _.range(count).map((i) => (React.createElement(Query, { index: i, key: i, namespace: namespace })))));\nconst QueriesList = connect(({ UI }) => ({\n    count: UI.getIn(['queryBrowser', 'queries']).size,\n}))(QueriesList_);\nconst TechPreview = () => (React.createElement(\"span\", { className: \"query-browser__tech-preview\" },\n    React.createElement(TechPreviewBadge, null)));\nconst QueryBrowserPage_ = ({ deleteAll, namespace }) => {\n    // Clear queries on unmount\n    React.useEffect(() => deleteAll, [deleteAll]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, \"Metrics\")),\n        React.createElement(\"div\", { className: \"co-m-nav-title\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                React.createElement(\"span\", null,\n                    \"Metrics\",\n                    namespace ? React.createElement(TechPreview, null) : React.createElement(HeaderPrometheusLink, null)),\n                React.createElement(\"div\", { className: \"co-actions\" },\n                    React.createElement(MetricsActionsMenu, null)))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            namespace && React.createElement(NamespaceAlert, null),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12\" },\n                    React.createElement(ToggleGraph, null))),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-xs-12\" },\n                    React.createElement(QueryBrowserWrapper, { namespace: namespace }),\n                    React.createElement(\"div\", { className: \"query-browser__controls\" },\n                        React.createElement(\"div\", { className: \"query-browser__controls--left\" },\n                            React.createElement(MetricsDropdown, { namespace: namespace })),\n                        React.createElement(\"div\", { className: \"query-browser__controls--right\" },\n                            React.createElement(ActionGroup, { className: \"pf-c-form pf-c-form__group--no-top-margin\" },\n                                React.createElement(AddQueryButton, null),\n                                React.createElement(RunQueriesButton, null)))),\n                    React.createElement(QueriesList, { namespace: namespace }))))));\n};\nexport const QueryBrowserPage = withFallback(connect(null, { deleteAll: UIActions.queryBrowserDeleteAllQueries })(QueryBrowserPage_));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/metrics.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/metrics.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { List as ImmutableList } from 'immutable';\nimport {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Pagination,\n  PaginationVariant,\n  Switch,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  AngleDownIcon,\n  AngleRightIcon,\n  ChartLineIcon,\n  CompressIcon,\n  TimesIcon,\n} from '@patternfly/react-icons';\nimport {\n  ISortBy,\n  sortable,\n  Table,\n  TableBody,\n  TableGridBreakpoint,\n  TableHeader,\n  TableVariant,\n  wrappable,\n} from '@patternfly/react-table';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\n\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport {\n  RedExclamationCircleIcon,\n  TechPreviewBadge,\n  YellowExclamationTriangleIcon,\n} from '@console/shared';\nimport * as UIActions from '../../actions/ui';\nimport { RootState } from '../../redux';\nimport { fuzzyCaseInsensitive } from '../factory/table-filters';\nimport { PrometheusData, PrometheusLabels, PROMETHEUS_BASE_PATH } from '../graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '../graphs/helpers';\nimport { getPrometheusExpressionBrowserURL } from '../graphs/prometheus-graph';\nimport {\n  ActionsMenu,\n  Dropdown,\n  ExternalLink,\n  getURLSearchParams,\n  Kebab,\n  LoadingInline,\n  usePoll,\n  useSafeFetch,\n} from '../utils';\nimport { setAllQueryArguments } from '../utils/router';\nimport { colors, Error, QueryObj, QueryBrowser } from './query-browser';\n\nconst aggregationOperators = [\n  'avg()',\n  'bottomk()',\n  'count()',\n  'count_values()',\n  'max()',\n  'min()',\n  'quantile()',\n  'stddev()',\n  'stdvar()',\n  'sum()',\n  'topk()',\n];\n\nconst prometheusFunctions = [\n  'abs()',\n  'absent()',\n  'avg_over_time()',\n  'ceil()',\n  'changes()',\n  'clamp_max()',\n  'clamp_min()',\n  'count_over_time()',\n  'day_of_month()',\n  'day_of_week()',\n  'days_in_month()',\n  'delta()',\n  'deriv()',\n  'exp()',\n  'floor()',\n  'histogram_quantile()',\n  'holt_winters()',\n  'hour()',\n  'idelta()',\n  'increase()',\n  'irate()',\n  'label_join()',\n  'label_replace()',\n  'ln()',\n  'log10()',\n  'log2()',\n  'max_over_time()',\n  'min_over_time()',\n  'minute()',\n  'month()',\n  'predict_linear()',\n  'quantile_over_time()',\n  'rate()',\n  'resets()',\n  'round()',\n  'scalar()',\n  'sort()',\n  'sort_desc()',\n  'sqrt()',\n  'stddev_over_time()',\n  'stdvar_over_time()',\n  'sum_over_time()',\n  'time()',\n  'timestamp()',\n  'vector()',\n  'year()',\n];\n\n// Stores information about the currently focused query input\nlet focusedQuery;\n\nconst queryDispatchToProps = (dispatch, { index }) => ({\n  deleteQuery: () => dispatch(UIActions.queryBrowserDeleteQuery(index)),\n  patchQuery: (v: QueryObj) => dispatch(UIActions.queryBrowserPatchQuery(index, v)),\n  toggleIsEnabled: () => dispatch(UIActions.queryBrowserToggleIsEnabled(index)),\n});\n\nconst MetricsActionsMenu_: React.FC<MetricsActionsMenuProps> = ({\n  addQuery,\n  deleteAll,\n  isAllExpanded,\n  setAllExpanded,\n}) => {\n  const doDelete = () => {\n    deleteAll();\n    focusedQuery = undefined;\n  };\n\n  const actionsMenuActions = [\n    { label: 'Add query', callback: addQuery },\n    {\n      label: `${isAllExpanded ? 'Collapse' : 'Expand'} all query tables`,\n      callback: () => setAllExpanded(!isAllExpanded),\n    },\n    { label: 'Delete all queries', callback: doDelete },\n  ];\n\n  return (\n    <div className=\"co-actions\">\n      <ActionsMenu actions={actionsMenuActions} />\n    </div>\n  );\n};\nconst MetricsActionsMenu = connect(\n  ({ UI }: RootState) => ({\n    isAllExpanded: UI.getIn(['queryBrowser', 'queries']).every((q) => q.get('isExpanded')),\n  }),\n  {\n    addQuery: UIActions.queryBrowserAddQuery,\n    deleteAll: UIActions.queryBrowserDeleteAllQueries,\n    setAllExpanded: UIActions.queryBrowserSetAllExpanded,\n  },\n)(MetricsActionsMenu_);\n\nconst headerPrometheusLinkStateToProps = ({ UI }: RootState) => {\n  const liveQueries = UI.getIn(['queryBrowser', 'queries']).filter(\n    (q) => q.get('isEnabled') && q.get('query'),\n  );\n  const queryStrings = _.map(liveQueries.toJS(), 'query');\n  const url = window.SERVER_FLAGS.prometheusPublicURL;\n  return {\n    url:\n      getPrometheusExpressionBrowserURL(url, queryStrings) ||\n      window.SERVER_FLAGS.prometheusPublicURL,\n  };\n};\n\nconst HeaderPrometheusLink_ = ({ url }) => {\n  return url ? (\n    <span className=\"monitoring-header-link\">\n      <ExternalLink href={url} text=\"Prometheus UI\" />\n    </span>\n  ) : null;\n};\nconst HeaderPrometheusLink = connect(headerPrometheusLinkStateToProps)(HeaderPrometheusLink_);\n\nexport const graphStateToProps = ({ UI }: RootState) => ({\n  hideGraphs: !!UI.getIn(['monitoring', 'hideGraphs']),\n});\n\nconst ToggleGraph_ = ({ hideGraphs, toggle }) => {\n  const icon = hideGraphs ? <ChartLineIcon /> : <CompressIcon />;\n\n  return (\n    <Button\n      type=\"button\"\n      className=\"pf-m-link--align-right query-browser__toggle-graph\"\n      onClick={toggle}\n      variant=\"link\"\n    >\n      {icon} {hideGraphs ? 'Show' : 'Hide'} Graph\n    </Button>\n  );\n};\nexport const ToggleGraph = connect(graphStateToProps, { toggle: UIActions.monitoringToggleGraphs })(\n  ToggleGraph_,\n);\n\nconst MetricsDropdown_: React.FC<MetricsDropdownProps> = ({\n  insertText,\n  namespace,\n  setMetrics,\n}) => {\n  const [items, setItems] = React.useState<MetricsDropdownItems>();\n  const [isError, setIsError] = React.useState(false);\n\n  const safeFetch = React.useCallback(useSafeFetch(), []);\n\n  React.useEffect(() => {\n    const url = namespace\n      ? getPrometheusURL({\n          endpoint: PrometheusEndpoint.QUERY,\n          namespace,\n          query: `count({namespace=\"${namespace}\"}) by (__name__)`,\n        })\n      : `${PROMETHEUS_BASE_PATH}/${PrometheusEndpoint.LABEL}/__name__/values`;\n    safeFetch(url)\n      .then((response) => {\n        const metrics = namespace\n          ? _.map(_.get(response, 'data.result'), 'metric.__name__').sort()\n          : _.get(response, 'data');\n        setItems(_.zipObject(metrics, metrics));\n        setMetrics(metrics);\n      })\n      .catch(() => setIsError(true));\n  }, [namespace, safeFetch, setMetrics]);\n\n  const onChange = (metric: string) => {\n    // Replace the currently selected text with the metric\n    const { index = 0, selection = {}, target = undefined } = focusedQuery || {};\n    insertText(index, metric, selection.start, selection.end);\n\n    if (target) {\n      target.focus();\n\n      // Restore cursor position / currently selected text (use _.defer() to delay until after the input value is set)\n      _.defer(() => target.setSelectionRange(selection.start, selection.start + metric.length));\n    }\n  };\n\n  let title: React.ReactNode = 'Insert Metric at Cursor';\n  if (isError) {\n    title = (\n      <span>\n        <RedExclamationCircleIcon /> Failed to load metrics list.\n      </span>\n    );\n  } else if (items === undefined) {\n    title = <LoadingInline />;\n  } else if (_.isEmpty(items)) {\n    title = (\n      <span>\n        <YellowExclamationTriangleIcon /> No metrics found.\n      </span>\n    );\n  }\n\n  return (\n    <Dropdown\n      autocompleteFilter={fuzzyCaseInsensitive}\n      disabled={isError}\n      id=\"metrics-dropdown\"\n      items={items || {}}\n      menuClassName=\"query-browser__metrics-dropdown-menu query-browser__metrics-dropdown-menu--insert\"\n      onChange={onChange}\n      title={title}\n    />\n  );\n};\nconst MetricsDropdown: React.ComponentType<{ namespace?: string }> = connect(null, {\n  insertText: UIActions.queryBrowserInsertText,\n  setMetrics: UIActions.queryBrowserSetMetrics,\n})(MetricsDropdown_);\n\nconst ExpandButton = ({ isExpanded, onClick }) => {\n  const title = `${isExpanded ? 'Hide' : 'Show'} Table`;\n  return (\n    <Button\n      aria-label={title}\n      className=\"query-browser__expand-button\"\n      onClick={onClick}\n      title={title}\n      variant=\"plain\"\n    >\n      {isExpanded ? (\n        <AngleDownIcon className=\"query-browser__expand-icon\" />\n      ) : (\n        <AngleRightIcon className=\"query-browser__expand-icon\" />\n      )}\n    </Button>\n  );\n};\n\nconst seriesButtonStateToProps = ({ UI }: RootState, { index, labels }) => {\n  const disabledSeries = UI.getIn(['queryBrowser', 'queries', index, 'disabledSeries']);\n  const isDisabled = _.some(disabledSeries, (s) => _.isEqual(s, labels));\n  if (!isDisabled) {\n    const series = UI.getIn(['queryBrowser', 'queries', index, 'series']);\n    if (_.isEmpty(series)) {\n      return { colorIndex: null, isDisabled, isSeriesEmpty: true };\n    }\n    const colorOffset = UI.getIn(['queryBrowser', 'queries'])\n      .take(index)\n      .filter((q) => q.get('isEnabled'))\n      .reduce((sum, q) => sum + _.size(q.get('series')), 0);\n    const seriesIndex = _.findIndex(series, (s) => _.isEqual(s, labels));\n    const colorIndex = (colorOffset + seriesIndex) % colors.length;\n    return { colorIndex, isDisabled };\n  }\n  return { colorIndex: null, isDisabled };\n};\n\nconst SeriesButton_: React.FC<SeriesButtonProps> = ({\n  colorIndex,\n  isDisabled,\n  isSeriesEmpty = false,\n  toggleSeries,\n}) => {\n  if (isSeriesEmpty) {\n    return null;\n  }\n  const title = `${isDisabled ? 'Show' : 'Hide'} series`;\n\n  return (\n    <div className=\"query-browser__series-btn-wrap\">\n      <Button\n        aria-label={title}\n        className={classNames('query-browser__series-btn', {\n          'query-browser__series-btn--disabled': isDisabled,\n        })}\n        onClick={toggleSeries}\n        style={colorIndex === null ? undefined : { backgroundColor: colors[colorIndex] }}\n        title={title}\n        type=\"button\"\n        variant=\"plain\"\n      />\n    </div>\n  );\n};\nconst SeriesButton = connect(seriesButtonStateToProps, (dispatch, { index, labels }) => ({\n  toggleSeries: () => dispatch(UIActions.queryBrowserToggleSeries(index, labels)),\n}))(SeriesButton_);\n\nconst queryInputStateToProps = ({ UI }: RootState, { index }) => ({\n  metrics: UI.getIn(['queryBrowser', 'metrics']),\n  text: UI.getIn(['queryBrowser', 'queries', index, 'text']),\n});\n\nconst QueryInput_: React.FC<QueryInputProps> = ({\n  index,\n  metrics,\n  patchQuery,\n  runQueries,\n  text = '',\n}) => {\n  const [token, setToken] = React.useState('');\n\n  const inputRef = React.useRef(null);\n\n  const getTextBeforeCursor = () =>\n    inputRef.current.value.substring(0, inputRef.current.selectionEnd);\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    patchQuery({ text: e.target.value });\n\n    // Metric and function names can only contain the characters a-z, A-Z, 0-9, '_' and ':'\n    const allTokens = getTextBeforeCursor().split(/[^a-zA-Z0-9_:]+/);\n\n    // We always do case insensitive autocompletion, so convert to lower case immediately\n    setToken(_.toLower(_.last(allTokens)));\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    // Enter+Shift inserts newlines, Enter alone runs the query\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      runQueries();\n      setToken('');\n    }\n  };\n\n  const onBlur = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    focusedQuery = {\n      index,\n      selection: {\n        start: e.target.selectionStart,\n        end: e.target.selectionEnd,\n      },\n      target: e.target,\n    };\n    setToken('');\n  };\n\n  // Use onMouseDown instead of onClick so that this is run before the onBlur handler\n  const onMouseDown = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // Replace the autocomplete token with the selected autocomplete option (case insensitive)\n    const re = new RegExp(`${_.escapeRegExp(token)}$`, 'i');\n    const newTextBeforeCursor = getTextBeforeCursor().replace(\n      re,\n      e.currentTarget.dataset.autocomplete,\n    );\n    patchQuery({ text: newTextBeforeCursor + text.substring(inputRef.current.selectionEnd) });\n\n    // Move cursor to just after the text we inserted (use _.defer() so this is called after the textarea value is set)\n    const cursorPosition = newTextBeforeCursor.length;\n    _.defer(() => {\n      inputRef.current.setSelectionRange(cursorPosition, cursorPosition);\n      inputRef.current.focus();\n    });\n  };\n\n  const onClear = () => {\n    patchQuery({ text: '' });\n    inputRef.current.focus();\n  };\n\n  // Order autocompletion suggestions so that exact matches (token as a substring) are first, then fuzzy matches after\n  // Exact matches are sorted first by how early the token appears and secondarily by string length (shortest first)\n  // Fuzzy matches are sorted by string length (shortest first)\n  const isMatch = (v: string) => fuzzyCaseInsensitive(token, v);\n  const matchScore = (v: string): number => {\n    const i = v.toLowerCase().indexOf(token);\n    return i === -1 ? Infinity : i;\n  };\n  const filterSuggestions = (options: string[]): string[] =>\n    _.sortBy(options.filter(isMatch), [matchScore, 'length']);\n\n  const allSuggestions =\n    token.length < 2\n      ? {}\n      : _.omitBy(\n          {\n            ['Aggregation Operators']: filterSuggestions(aggregationOperators),\n            ['Functions']: filterSuggestions(prometheusFunctions),\n            ['Metrics']: filterSuggestions(metrics),\n          },\n          _.isEmpty,\n        );\n\n  // Set the default textarea height to the number of lines in the query text\n  const rows = _.clamp((text.match(/\\n/g) || []).length + 1, 2, 10);\n\n  return (\n    <div className=\"query-browser__query pf-c-dropdown\">\n      <textarea\n        aria-label=\"Expression (press Shift+Enter for newlines)\"\n        autoFocus\n        className=\"pf-c-form-control query-browser__query-input\"\n        onBlur={onBlur}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        placeholder=\"Expression (press Shift+Enter for newlines)\"\n        ref={inputRef}\n        rows={rows}\n        spellCheck={false}\n        value={text}\n      />\n      <Button\n        className=\"query-browser__clear-icon\"\n        aria-label=\"Clear Query\"\n        onClick={onClear}\n        type=\"button\"\n        variant=\"plain\"\n      >\n        <TimesIcon />\n      </Button>\n      {!_.isEmpty(allSuggestions) && (\n        <ul className=\"pf-c-dropdown__menu query-browser__metrics-dropdown-menu\">\n          {_.map(allSuggestions, (suggestions, title) => (\n            <React.Fragment key={title}>\n              <div className=\"text-muted query-browser__dropdown--subtitle\">{title}</div>\n              {_.map(suggestions, (s) => (\n                <li key={s}>\n                  <button\n                    className=\"pf-c-dropdown__menu-item\"\n                    data-autocomplete={s}\n                    onMouseDown={onMouseDown}\n                    type=\"button\"\n                  >\n                    {s}\n                  </button>\n                </li>\n              ))}\n            </React.Fragment>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst queryInputDispatchToProps = (dispatch, props) =>\n  Object.assign(\n    { runQueries: () => dispatch(UIActions.queryBrowserRunQueries()) },\n    queryDispatchToProps(dispatch, props),\n  );\n\nexport const QueryInput = connect(queryInputStateToProps, queryInputDispatchToProps)(QueryInput_);\n\nconst QueryKebab_: React.FC<QueryKebabProps> = ({\n  deleteQuery,\n  isDisabledSeriesEmpty,\n  isEnabled,\n  patchQuery,\n  series,\n  toggleIsEnabled,\n}) => {\n  const toggleAllSeries = () => patchQuery({ disabledSeries: isDisabledSeriesEmpty ? series : [] });\n\n  const doDelete = () => {\n    deleteQuery();\n    focusedQuery = undefined;\n  };\n\n  return (\n    <Kebab\n      options={[\n        { label: `${isEnabled ? 'Disable' : 'Enable'} query`, callback: toggleIsEnabled },\n        {\n          label: `${isDisabledSeriesEmpty ? 'Hide' : 'Show'} all series`,\n          callback: toggleAllSeries,\n        },\n        { label: 'Delete query', callback: doDelete },\n      ]}\n    />\n  );\n};\nconst QueryKebab = connect(\n  ({ UI }: RootState, { index }) => ({\n    isDisabledSeriesEmpty: _.isEmpty(\n      UI.getIn(['queryBrowser', 'queries', index, 'disabledSeries']),\n    ),\n    isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n    series: UI.getIn(['queryBrowser', 'queries', index, 'series']),\n  }),\n  queryDispatchToProps,\n)(QueryKebab_);\n\nconst queryTableStateToProps = ({ UI }: RootState, { index }) => ({\n  isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n  isExpanded: UI.getIn(['queryBrowser', 'queries', index, 'isExpanded']),\n  query: UI.getIn(['queryBrowser', 'queries', index, 'query']),\n  series: UI.getIn(['queryBrowser', 'queries', index, 'series']),\n});\n\nconst defaultPaginationOptions = [10, 20, 50, 100, 200, 500].map((n) => ({\n  title: n.toString(),\n  value: n,\n}));\n\nexport const TablePagination = ({\n  itemCount,\n  page,\n  perPage,\n  setPage,\n  setPerPage,\n  paginationOptions = defaultPaginationOptions,\n}) => {\n  const onPerPageSelect = (e, v) => {\n    // When changing the number of results per page, keep the start row approximately the same\n    const firstRow = (page - 1) * perPage;\n    setPage(Math.floor(firstRow / v) + 1);\n    setPerPage(v);\n  };\n\n  return (\n    <Pagination\n      className=\"query-browser__pagination\"\n      itemCount={itemCount}\n      onPerPageSelect={onPerPageSelect}\n      onSetPage={(e, v) => setPage(v)}\n      page={page}\n      perPage={perPage}\n      perPageOptions={paginationOptions}\n      variant={PaginationVariant.bottom}\n    />\n  );\n};\n\nconst QueryTable_: React.FC<QueryTableProps> = ({\n  index,\n  isEnabled,\n  isExpanded,\n  namespace,\n  query,\n  series,\n}) => {\n  const [data, setData] = React.useState<PrometheusData>();\n  const [error, setError] = React.useState();\n  const [page, setPage] = React.useState(1);\n  const [perPage, setPerPage] = React.useState(50);\n  const [sortBy, setSortBy] = React.useState<ISortBy>();\n\n  const safeFetch = React.useCallback(useSafeFetch(), []);\n\n  const tick = () => {\n    if (query) {\n      safeFetch(getPrometheusURL({ endpoint: PrometheusEndpoint.QUERY, namespace, query }))\n        .then((response) => {\n          setData(_.get(response, 'data'));\n          setError(undefined);\n        })\n        .catch((err) => {\n          if (err.name !== 'AbortError') {\n            setData(undefined);\n            setError(err);\n          }\n        });\n    }\n  };\n\n  usePoll(tick, 15 * 1000, namespace, query);\n\n  React.useEffect(() => {\n    setData(undefined);\n    setError(undefined);\n    setPage(1);\n    setSortBy(undefined);\n  }, [namespace, query]);\n\n  if (!isEnabled || !isExpanded || !query) {\n    return null;\n  }\n\n  if (error) {\n    return (\n      <div className=\"query-browser__table-message\">\n        <Error error={error} title=\"Error loading values\" />\n      </div>\n    );\n  }\n\n  if (!data) {\n    return (\n      <div className=\"query-browser__table-message\">\n        <LoadingInline />\n      </div>\n    );\n  }\n\n  const { result, resultType } = data;\n\n  // Add any data series from `series` (those displayed in the graph) that are not already in `result`. This happens\n  // for filtering PromQL queries that exclude a series currently, but did not exclude that same series at some point\n  // during that graph's range.\n  _.each(series, (labels) => {\n    if (_.every(result, (r) => !_.isEqual(labels, r.metric))) {\n      result.push({ metric: labels });\n    }\n  });\n\n  if (!result || result.length === 0) {\n    return (\n      <div className=\"query-browser__table-message\">\n        <YellowExclamationTriangleIcon /> No datapoints found.\n      </div>\n    );\n  }\n\n  const cellProps = {\n    props: { className: 'query-browser__table-cell' },\n    transforms: [sortable, wrappable],\n  };\n\n  // TableBody's shouldComponentUpdate seems to struggle with SeriesButton, so add a unique key to help TableBody\n  // determine when it should update\n  const buttonCell = (labels) => ({\n    title: <SeriesButton index={index} key={_.uniqueId()} labels={labels} />,\n  });\n\n  let columns, rows;\n  if (resultType === 'scalar') {\n    columns = ['', { title: 'Value', ...cellProps }];\n    rows = [[buttonCell({}), _.get(result, '[1]')]];\n  } else {\n    const allLabelKeys = _.uniq(_.flatMap(result, ({ metric }) => Object.keys(metric))).sort();\n\n    columns = [\n      '',\n      ...allLabelKeys.map((k) => ({ title: k === '__name__' ? 'Name' : k, ...cellProps })),\n      { title: 'Value', ...cellProps },\n    ];\n\n    let rowMapper;\n    if (resultType === 'matrix') {\n      rowMapper = ({ metric, values }) => [\n        '',\n        ..._.map(allLabelKeys, (k) => metric[k]),\n        {\n          title: (\n            <>\n              {_.map(values, ([time, v]) => (\n                <div key={time}>\n                  {v}&nbsp;@{time}\n                </div>\n              ))}\n            </>\n          ),\n        },\n      ];\n    } else {\n      rowMapper = ({ metric, value }) => [\n        buttonCell(metric),\n        ..._.map(allLabelKeys, (k) => metric[k]),\n        _.get(value, '[1]', { title: <span className=\"text-muted\">None</span> }),\n      ];\n    }\n\n    rows = _.map(result, rowMapper);\n    if (sortBy) {\n      // Sort Values column numerically and sort all the other columns alphabetically\n      const valuesColIndex = allLabelKeys.length + 1;\n      const sort =\n        sortBy.index === valuesColIndex\n          ? (cells) => {\n              const v = Number(cells[valuesColIndex]);\n              return Number.isNaN(v) ? 0 : v;\n            }\n          : `${sortBy.index}`;\n      rows = _.orderBy(rows, [sort], [sortBy.direction]);\n    }\n  }\n\n  // Set the result table's break point based on the number of columns\n  let breakPoint: keyof typeof TableGridBreakpoint = 'grid';\n  if (columns.length <= 2) {\n    breakPoint = 'none';\n  } else if (columns.length <= 5) {\n    breakPoint = 'gridMd';\n  } else if (columns.length <= 8) {\n    breakPoint = 'gridLg';\n  } else if (columns.length <= 11) {\n    breakPoint = 'gridXl';\n  } else if (columns.length <= 14) {\n    breakPoint = 'grid2xl';\n  }\n\n  const onSort = (e, i, direction) => setSortBy({ index: i, direction });\n\n  const tableRows = rows.slice((page - 1) * perPage, page * perPage).map((cells) => ({ cells }));\n\n  return (\n    <>\n      <Table\n        aria-label=\"query results table\"\n        cells={columns}\n        gridBreakPoint={TableGridBreakpoint[breakPoint]}\n        onSort={onSort}\n        rows={tableRows}\n        sortBy={sortBy}\n        variant={TableVariant.compact}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <TablePagination\n        itemCount={rows.length}\n        page={page}\n        perPage={perPage}\n        setPage={setPage}\n        setPerPage={setPerPage}\n      />\n    </>\n  );\n};\nexport const QueryTable = connect(queryTableStateToProps, queryDispatchToProps)(QueryTable_);\n\nconst NamespaceAlert_: React.FC<{ dismiss: () => undefined; isDismissed: boolean }> = ({\n  dismiss,\n  isDismissed,\n}) =>\n  isDismissed ? null : (\n    <Alert\n      action={<AlertActionCloseButton onClose={dismiss} />}\n      isInline\n      className=\"co-alert\"\n      title=\"Queries entered here are limited to the data available in the currently selected project.\"\n      variant=\"info\"\n    />\n  );\nconst NamespaceAlert: React.ComponentType<{}> = connect(\n  ({ UI }: RootState) => ({ isDismissed: !!UI.getIn(['queryBrowser', 'dismissNamespaceAlert']) }),\n  { dismiss: UIActions.queryBrowserDismissNamespaceAlert },\n)(NamespaceAlert_);\n\nconst Query_: React.FC<QueryProps> = ({\n  id,\n  index,\n  isExpanded,\n  isEnabled,\n  namespace,\n  patchQuery,\n  toggleIsEnabled,\n}) => {\n  const switchKey = `${id}-${isEnabled}`;\n  const switchLabel = `${isEnabled ? 'Disable' : 'Enable'} query`;\n\n  const toggleIsExpanded = () => patchQuery({ isExpanded: !isExpanded });\n\n  return (\n    <div\n      className={classNames('query-browser__table', {\n        'query-browser__table--expanded': isExpanded,\n      })}\n    >\n      <div className=\"query-browser__query-controls\">\n        <ExpandButton isExpanded={isExpanded} onClick={toggleIsExpanded} />\n        <QueryInput index={index} namespace={namespace} />\n        <div title={switchLabel}>\n          <Switch\n            aria-label={switchLabel}\n            id={switchKey}\n            isChecked={isEnabled}\n            key={switchKey}\n            onChange={toggleIsEnabled}\n          />\n        </div>\n        <div className=\"dropdown-kebab-pf\">\n          <QueryKebab index={index} />\n        </div>\n      </div>\n      <QueryTable index={index} namespace={namespace} />\n    </div>\n  );\n};\nconst Query = connect(\n  ({ UI }: RootState, { index }) => ({\n    id: UI.getIn(['queryBrowser', 'queries', index, 'id']),\n    isEnabled: UI.getIn(['queryBrowser', 'queries', index, 'isEnabled']),\n    isExpanded: UI.getIn(['queryBrowser', 'queries', index, 'isExpanded']),\n  }),\n  queryDispatchToProps,\n)(Query_);\n\nconst QueryBrowserWrapper_: React.FC<QueryBrowserWrapperProps> = ({\n  namespace,\n  patchQuery,\n  queriesList,\n}) => {\n  const queries = queriesList.toJS();\n\n  // Initialize queries from URL parameters\n  React.useEffect(() => {\n    const searchParams = getURLSearchParams();\n    for (let i = 0; _.has(searchParams, `query${i}`); ++i) {\n      const query = searchParams[`query${i}`];\n      patchQuery(i, { isEnabled: true, isExpanded: true, query, text: query });\n    }\n  }, [patchQuery]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  // Use React.useMemo() to prevent these two arrays being recreated on every render, which would trigger unnecessary\n  // re-renders of QueryBrowser, which can be quite slow\n  const queriesMemoKey = JSON.stringify(_.map(queries, 'query'));\n  const queryStrings = React.useMemo(() => _.map(queries, 'query'), [queriesMemoKey]);\n  const disabledSeriesMemoKey = JSON.stringify(\n    _.reject(_.map(queries, 'disabledSeries'), _.isEmpty),\n  );\n  const disabledSeries = React.useMemo(() => _.map(queries, 'disabledSeries'), [\n    disabledSeriesMemoKey,\n  ]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  // Update the URL parameters when the queries shown in the graph change\n  React.useEffect(() => {\n    const newParams = {};\n    _.each(queryStrings, (q, i) => (newParams[`query${i}`] = q || ''));\n    setAllQueryArguments(newParams);\n  }, [queryStrings]);\n\n  const insertExampleQuery = () => {\n    const focusedIndex = focusedQuery?.index ?? 0;\n    const index = queries[focusedIndex] ? focusedIndex : 0;\n\n    // Pick a suitable example query based on whether we are limiting results to a single namespace\n    const text = namespace\n      ? 'sum(rate(container_cpu_usage_seconds_total{image!=\"\", container!=\"POD\"}[5m])) by (pod)'\n      : 'sum(sort_desc(sum_over_time(ALERTS{alertstate=\"firing\"}[24h]))) by (alertname)';\n\n    patchQuery(index, { isEnabled: true, query: text, text });\n  };\n\n  return queryStrings.join('') === '' ? (\n    <div className=\"query-browser__wrapper graph-empty-state\">\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon size=\"sm\" icon={ChartLineIcon} />\n        <Title size=\"sm\">No Query Entered</Title>\n        <EmptyStateBody>\n          Enter a query in the box below to explore metrics for this cluster.\n        </EmptyStateBody>\n        <Button onClick={insertExampleQuery} variant=\"primary\">\n          Insert Example Query\n        </Button>\n      </EmptyState>\n    </div>\n  ) : (\n    <QueryBrowser\n      defaultTimespan={30 * 60 * 1000}\n      disabledSeries={disabledSeries}\n      namespace={namespace}\n      queries={queryStrings}\n    />\n  );\n};\nconst QueryBrowserWrapper = connect(\n  ({ UI }: RootState) => ({ queriesList: UI.getIn(['queryBrowser', 'queries']) }),\n  { patchQuery: UIActions.queryBrowserPatchQuery },\n)(QueryBrowserWrapper_);\n\nconst AddQueryButton_ = ({ addQuery }) => (\n  <Button\n    className=\"query-browser__inline-control\"\n    onClick={addQuery}\n    type=\"button\"\n    variant=\"secondary\"\n  >\n    Add Query\n  </Button>\n);\nconst AddQueryButton = connect(null, { addQuery: UIActions.queryBrowserAddQuery })(AddQueryButton_);\n\nconst RunQueriesButton_ = ({ runQueries }) => (\n  <Button onClick={runQueries} type=\"submit\" variant=\"primary\">\n    Run Queries\n  </Button>\n);\nconst RunQueriesButton = connect(null, { runQueries: UIActions.queryBrowserRunQueries })(\n  RunQueriesButton_,\n);\n\nconst QueriesList_ = ({ count, namespace }) => (\n  <>\n    {_.range(count).map((i) => (\n      <Query index={i} key={i} namespace={namespace} />\n    ))}\n  </>\n);\nconst QueriesList = connect(({ UI }: RootState) => ({\n  count: UI.getIn(['queryBrowser', 'queries']).size,\n}))(QueriesList_);\n\nconst TechPreview = () => (\n  <span className=\"query-browser__tech-preview\">\n    <TechPreviewBadge />\n  </span>\n);\n\nconst QueryBrowserPage_: React.FC<QueryBrowserPageProps> = ({ deleteAll, namespace }) => {\n  // Clear queries on unmount\n  React.useEffect(() => deleteAll, [deleteAll]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Metrics</title>\n      </Helmet>\n      <div className=\"co-m-nav-title\">\n        <h1 className=\"co-m-pane__heading\">\n          <span>\n            Metrics\n            {namespace ? <TechPreview /> : <HeaderPrometheusLink />}\n          </span>\n          <div className=\"co-actions\">\n            <MetricsActionsMenu />\n          </div>\n        </h1>\n      </div>\n      <div className=\"co-m-pane__body\">\n        {namespace && <NamespaceAlert />}\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            <ToggleGraph />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            <QueryBrowserWrapper namespace={namespace} />\n            <div className=\"query-browser__controls\">\n              <div className=\"query-browser__controls--left\">\n                <MetricsDropdown namespace={namespace} />\n              </div>\n              <div className=\"query-browser__controls--right\">\n                <ActionGroup className=\"pf-c-form pf-c-form__group--no-top-margin\">\n                  <AddQueryButton />\n                  <RunQueriesButton />\n                </ActionGroup>\n              </div>\n            </div>\n            <QueriesList namespace={namespace} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport const QueryBrowserPage: React.ComponentType<{ namespace?: string }> = withFallback(\n  connect(null, { deleteAll: UIActions.queryBrowserDeleteAllQueries })(QueryBrowserPage_),\n);\n\ntype MetricsActionsMenuProps = {\n  addQuery: () => never;\n  deleteAll: () => never;\n  isAllExpanded: boolean;\n  setAllExpanded: (isExpanded: boolean) => never;\n};\n\ntype MetricsDropdownItems = {\n  [key: string]: string;\n};\n\ntype MetricsDropdownProps = {\n  insertText: (index: number, newText: string, replaceFrom: number, replaceTo: number) => never;\n  namespace?: string;\n  setMetrics: (metrics: string[]) => never;\n};\n\ntype QueryBrowserPageProps = {\n  deleteAll: () => never;\n  namespace?: string;\n};\n\ntype QueryBrowserWrapperProps = {\n  namespace?: string;\n  patchQuery: (index: number, patch: QueryObj) => any;\n  queriesList: ImmutableList<QueryObj>;\n};\n\ntype QueryInputProps = {\n  index: number;\n  metrics: string[];\n  patchQuery: (patch: QueryObj) => void;\n  runQueries: () => never;\n  text?: string;\n};\n\ntype QueryKebabProps = {\n  deleteQuery: () => never;\n  isDisabledSeriesEmpty: boolean;\n  isEnabled: boolean;\n  patchQuery: (patch: QueryObj) => void;\n  series: PrometheusLabels[];\n  toggleIsEnabled: () => never;\n};\n\ntype QueryProps = {\n  id: string;\n  index: number;\n  isEnabled: boolean;\n  isExpanded: boolean;\n  namespace?: string;\n  patchQuery: (patch: QueryObj) => void;\n  toggleIsEnabled: () => never;\n};\n\ntype QueryTableProps = {\n  index: number;\n  isEnabled: boolean;\n  isExpanded: boolean;\n  namespace?: string;\n  query: string;\n  series: PrometheusLabels[];\n};\n\ntype SeriesButtonProps = {\n  colorIndex: number;\n  isSeriesEmpty?: boolean;\n  isDisabled: boolean;\n  toggleSeries: () => never;\n};\n"]}]}