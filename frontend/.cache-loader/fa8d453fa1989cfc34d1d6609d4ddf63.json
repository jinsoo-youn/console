{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-item.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-item.tsx","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RedExclamationCircleIcon } from '@console/shared';\nconst ResourceProvidersItemStatus = React.memo(({ status, link }) => (React.createElement(\"div\", { className: \"nb-resource-providers-card__row-status\" },\n    React.createElement(\"div\", { className: \"nb-resource-providers-card__row-status-item\" },\n        React.createElement(\"a\", { href: link, style: { textDecoration: 'none' }, target: \"_blank\", rel: \"noopener noreferrer\" },\n            React.createElement(RedExclamationCircleIcon, { className: \"co-dashboard-icon nb-resource-providers-card__status-icon\" }),\n            React.createElement(\"span\", { className: \"nb-resource-providers-card__row-status-item-text\" }, status))))));\nexport const ResourceProvidersItem = React.memo(({ title, count, unhealthyProviders, link }) => (React.createElement(\"div\", { className: \"co-inventory-card__item\" },\n    React.createElement(\"div\", { className: \"nb-resource-providers-card__row-title\" }, `${count} ${title}`),\n    !_.isNil(unhealthyProviders[title]) && unhealthyProviders[title] > 0 ? (React.createElement(ResourceProvidersItemStatus, { status: unhealthyProviders[title], link: link })) : null)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-item.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-item.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE3D,MAAM,2BAA2B,GAA8C,KAAK,CAAC,IAAI,CACvF,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACpB,6BAAK,SAAS,EAAC,wCAAwC;IACrD,6BAAK,SAAS,EAAC,6CAA6C;QAC1D,2BAAG,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,cAAc,EAAE,MAAM,EAAE,EAAE,MAAM,EAAC,QAAQ,EAAC,GAAG,EAAC,qBAAqB;YACzF,oBAAC,wBAAwB,IAAC,SAAS,EAAC,2DAA2D,GAAG;YAClG,8BAAM,SAAS,EAAC,kDAAkD,IAAE,MAAM,CAAQ,CAChF,CACA,CACF,CACP,CACF,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAwC,KAAK,CAAC,IAAI,CAClF,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAC9C,6BAAK,SAAS,EAAC,yBAAyB;IACtC,6BAAK,SAAS,EAAC,uCAAuC,IAAE,GAAG,KAAK,IAAI,KAAK,EAAE,CAAO;IACjF,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACtE,oBAAC,2BAA2B,IAAC,MAAM,EAAE,kBAAkB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,GAAI,CAC/E,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CACF,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { RedExclamationCircleIcon } from '@console/shared';\n\nconst ResourceProvidersItemStatus: React.FC<ResourceProvidersRowStatusProps> = React.memo(\n  ({ status, link }) => (\n    <div className=\"nb-resource-providers-card__row-status\">\n      <div className=\"nb-resource-providers-card__row-status-item\">\n        <a href={link} style={{ textDecoration: 'none' }} target=\"_blank\" rel=\"noopener noreferrer\">\n          <RedExclamationCircleIcon className=\"co-dashboard-icon nb-resource-providers-card__status-icon\" />\n          <span className=\"nb-resource-providers-card__row-status-item-text\">{status}</span>\n        </a>\n      </div>\n    </div>\n  ),\n);\n\nexport const ResourceProvidersItem: React.FC<ResourceProvidersRowProps> = React.memo(\n  ({ title, count, unhealthyProviders, link }) => (\n    <div className=\"co-inventory-card__item\">\n      <div className=\"nb-resource-providers-card__row-title\">{`${count} ${title}`}</div>\n      {!_.isNil(unhealthyProviders[title]) && unhealthyProviders[title] > 0 ? (\n        <ResourceProvidersItemStatus status={unhealthyProviders[title]} link={link} />\n      ) : null}\n    </div>\n  ),\n);\n\nexport type ProviderType = {\n  [key: string]: number;\n};\n\ntype ResourceProvidersRowProps = {\n  count: number;\n  link: string;\n  title: string;\n  unhealthyProviders: ProviderType;\n};\n\ntype ResourceProvidersRowStatusProps = {\n  link: string;\n  status: number;\n};\n"]}]}