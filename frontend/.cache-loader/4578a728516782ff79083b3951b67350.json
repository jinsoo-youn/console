{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal/modal-footer.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal/modal-footer.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Alert, Button, ButtonVariant, ActionGroup } from '@patternfly/react-core';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport './modal-footer.scss';\nexport const ModalErrorMessage = ({ message }) => (React.createElement(Alert, { isInline: true, className: \"co-alert co-alert--scrollable\", variant: \"danger\", title: \"An error occurred\" },\n    React.createElement(\"div\", { className: \"co-pre-line\" }, message)));\nexport const ModalSimpleMessage = ({ message, variant = 'danger', }) => React.createElement(Alert, { isInline: true, className: \"co-alert\", variant: variant, title: message });\nexport const ModalInfoMessage = ({ title, children }) => (React.createElement(Alert, { isInline: true, className: \"co-alert co-alert--scrollable\", variant: \"info\", title: title }, children));\nexport const ModalFooter = ({ className = '', errorMessage = null, warningMessage = null, isDisabled = false, inProgress = false, isSimpleError = false, onSubmit, onCancel, submitButtonText = 'Add', cancelButtonText = 'Cancel', infoMessage = null, infoTitle = null, }) => (React.createElement(\"footer\", { className: classNames('co-m-btn-bar modal-footer kubevirt-modal-footer__buttons', className) },\n    warningMessage && isSimpleError && (React.createElement(ModalSimpleMessage, { message: warningMessage, variant: \"warning\" })),\n    errorMessage && isSimpleError && React.createElement(ModalSimpleMessage, { message: errorMessage }),\n    errorMessage && !isSimpleError && React.createElement(ModalErrorMessage, { message: errorMessage }),\n    infoTitle && React.createElement(ModalInfoMessage, { title: infoTitle }, infoMessage),\n    React.createElement(ActionGroup, { className: \"pf-c-form pf-c-form__actions--right pf-c-form__group--no-top-margin\" },\n        React.createElement(Button, { type: \"button\", variant: ButtonVariant.secondary, \"data-test-id\": \"modal-cancel-action\", onClick: onCancel }, cancelButtonText),\n        React.createElement(Button, { variant: ButtonVariant.primary, isDisabled: isDisabled, id: \"confirm-action\", onClick: onSubmit }, submitButtonText)),\n    inProgress && React.createElement(LoadingInline, null)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal/modal-footer.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal/modal-footer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAc,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC/F,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AAEnE,OAAO,qBAAqB,CAAC;AAM7B,MAAM,CAAC,MAAM,iBAAiB,GAAqC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAClF,oBAAC,KAAK,IACJ,QAAQ,QACR,SAAS,EAAC,+BAA+B,EACzC,OAAO,EAAC,QAAQ,EAChB,KAAK,EAAC,mBAAmB;IAEzB,6BAAK,SAAS,EAAC,aAAa,IAAE,OAAO,CAAO,CACtC,CACT,CAAC;AAOF,MAAM,CAAC,MAAM,kBAAkB,GAAsC,CAAC,EACpE,OAAO,EACP,OAAO,GAAG,QAAQ,GACnB,EAAE,EAAE,CAAC,oBAAC,KAAK,IAAC,QAAQ,QAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,GAAI,CAAC;AAOhF,MAAM,CAAC,MAAM,gBAAgB,GAAoC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CACxF,oBAAC,KAAK,IAAC,QAAQ,QAAC,SAAS,EAAC,+BAA+B,EAAC,OAAO,EAAC,MAAM,EAAC,KAAK,EAAE,KAAK,IAClF,QAAQ,CACH,CACT,CAAC;AAkBF,MAAM,CAAC,MAAM,WAAW,GAA+B,CAAC,EACtD,SAAS,GAAG,EAAE,EACd,YAAY,GAAG,IAAI,EACnB,cAAc,GAAG,IAAI,EACrB,UAAU,GAAG,KAAK,EAClB,UAAU,GAAG,KAAK,EAClB,aAAa,GAAG,KAAK,EACrB,QAAQ,EACR,QAAQ,EACR,gBAAgB,GAAG,KAAK,EACxB,gBAAgB,GAAG,QAAQ,EAC3B,WAAW,GAAG,IAAI,EAClB,SAAS,GAAG,IAAI,GACjB,EAAE,EAAE,CAAC,CACJ,gCACE,SAAS,EAAE,UAAU,CAAC,0DAA0D,EAAE,SAAS,CAAC;IAE3F,cAAc,IAAI,aAAa,IAAI,CAClC,oBAAC,kBAAkB,IAAC,OAAO,EAAE,cAAc,EAAE,OAAO,EAAC,SAAS,GAAG,CAClE;IACA,YAAY,IAAI,aAAa,IAAI,oBAAC,kBAAkB,IAAC,OAAO,EAAE,YAAY,GAAI;IAC9E,YAAY,IAAI,CAAC,aAAa,IAAI,oBAAC,iBAAiB,IAAC,OAAO,EAAE,YAAY,GAAI;IAC9E,SAAS,IAAI,oBAAC,gBAAgB,IAAC,KAAK,EAAE,SAAS,IAAG,WAAW,CAAoB;IAElF,oBAAC,WAAW,IAAC,SAAS,EAAC,qEAAqE;QAC1F,oBAAC,MAAM,IACL,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,aAAa,CAAC,SAAS,kBACnB,qBAAqB,EAClC,OAAO,EAAE,QAAQ,IAEhB,gBAAgB,CACV;QACT,oBAAC,MAAM,IACL,OAAO,EAAE,aAAa,CAAC,OAAO,EAC9B,UAAU,EAAE,UAAU,EACtB,EAAE,EAAC,gBAAgB,EACnB,OAAO,EAAE,QAAQ,IAEhB,gBAAgB,CACV,CACG;IAEb,UAAU,IAAI,oBAAC,aAAa,OAAG,CACzB,CACV,CAAC","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Alert, Button, ButtonVariant, AlertProps, ActionGroup } from '@patternfly/react-core';\nimport { LoadingInline } from '@console/internal/components/utils';\n\nimport './modal-footer.scss';\n\ntype ModalErrorMessageProps = {\n  message: string;\n};\n\nexport const ModalErrorMessage: React.FC<ModalErrorMessageProps> = ({ message }) => (\n  <Alert\n    isInline\n    className=\"co-alert co-alert--scrollable\"\n    variant=\"danger\"\n    title=\"An error occurred\"\n  >\n    <div className=\"co-pre-line\">{message}</div>\n  </Alert>\n);\n\ntype ModalSimpleMessageProps = {\n  message: string;\n  variant?: AlertProps['variant'];\n};\n\nexport const ModalSimpleMessage: React.FC<ModalSimpleMessageProps> = ({\n  message,\n  variant = 'danger',\n}) => <Alert isInline className=\"co-alert\" variant={variant} title={message} />;\n\ntype ModalInfoMessageProps = {\n  title: string;\n  children: React.ReactNode;\n};\n\nexport const ModalInfoMessage: React.FC<ModalInfoMessageProps> = ({ title, children }) => (\n  <Alert isInline className=\"co-alert co-alert--scrollable\" variant=\"info\" title={title}>\n    {children}\n  </Alert>\n);\n\ntype ModalFooterProps = {\n  id?: string;\n  className?: string;\n  errorMessage?: string;\n  warningMessage?: string;\n  isSimpleError?: boolean;\n  onSubmit: (e) => void;\n  onCancel: (e) => void;\n  isDisabled?: boolean;\n  inProgress?: boolean;\n  submitButtonText?: string;\n  cancelButtonText?: string;\n  infoTitle?: string;\n  infoMessage?: React.ReactNode;\n};\n\nexport const ModalFooter: React.FC<ModalFooterProps> = ({\n  className = '',\n  errorMessage = null,\n  warningMessage = null,\n  isDisabled = false,\n  inProgress = false,\n  isSimpleError = false,\n  onSubmit,\n  onCancel,\n  submitButtonText = 'Add',\n  cancelButtonText = 'Cancel',\n  infoMessage = null,\n  infoTitle = null,\n}) => (\n  <footer\n    className={classNames('co-m-btn-bar modal-footer kubevirt-modal-footer__buttons', className)}\n  >\n    {warningMessage && isSimpleError && (\n      <ModalSimpleMessage message={warningMessage} variant=\"warning\" />\n    )}\n    {errorMessage && isSimpleError && <ModalSimpleMessage message={errorMessage} />}\n    {errorMessage && !isSimpleError && <ModalErrorMessage message={errorMessage} />}\n    {infoTitle && <ModalInfoMessage title={infoTitle}>{infoMessage}</ModalInfoMessage>}\n\n    <ActionGroup className=\"pf-c-form pf-c-form__actions--right pf-c-form__group--no-top-margin\">\n      <Button\n        type=\"button\"\n        variant={ButtonVariant.secondary}\n        data-test-id=\"modal-cancel-action\"\n        onClick={onCancel}\n      >\n        {cancelButtonText}\n      </Button>\n      <Button\n        variant={ButtonVariant.primary}\n        isDisabled={isDisabled}\n        id=\"confirm-action\"\n        onClick={onSubmit}\n      >\n        {submitButtonText}\n      </Button>\n    </ActionGroup>\n\n    {inProgress && <LoadingInline />}\n  </footer>\n);\n"]}]}