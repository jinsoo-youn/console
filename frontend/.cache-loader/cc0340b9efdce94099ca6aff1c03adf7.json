{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/noobaa-operator/noobaa-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/noobaa-operator/noobaa-page.tsx","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Firehose, HorizontalNav, PageHeading, resourcePathFromModel, BreadCrumbs, } from '@console/internal/components/utils';\nimport { referenceForModel, k8sGet } from '@console/internal/module/k8s';\nimport { EditYAML } from '@console/internal/components/edit-yaml';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport { NooBaaSystemModel } from '../../models';\nimport InfoPage from './infoPage';\nimport MCGResourceList from './resourceTable';\nconst getFireHoseResources = (namespace) => {\n    const system = {\n        kind: referenceForModel(NooBaaSystemModel),\n        namespace,\n        prop: 'obj',\n        isList: false,\n        name: 'noobaa',\n    };\n    return [system];\n};\nconst pages = [\n    {\n        href: '',\n        name: 'Details Page',\n        component: InfoPage,\n    },\n    {\n        href: 'yaml',\n        name: 'YAML',\n        component: EditYAML,\n    },\n    {\n        href: 'resources',\n        path: 'resources',\n        name: 'Resources',\n        component: MCGResourceList,\n    },\n];\nconst NooBaaPage = (props) => {\n    const { ns: namespace, appName } = props.match.params;\n    const resources = getFireHoseResources(namespace);\n    const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n    React.useEffect(() => {\n        k8sGet(ClusterServiceVersionModel, appName, namespace)\n            .then((clusterServiceVersionObj) => {\n            setClusterServiceVersion(clusterServiceVersionObj);\n        })\n            .catch(() => setClusterServiceVersion(null));\n    }, [appName, namespace]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-create-operand__header\" },\n            React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" },\n                React.createElement(BreadCrumbs, { breadcrumbs: [\n                        {\n                            name: _.get(clusterServiceVersion, 'spec.displayName', 'Openshift Container Storage Operator'),\n                            path: resourcePathFromModel(ClusterServiceVersionModel, appName, namespace),\n                        },\n                        { name: 'Multi Cloud Gateway', path: props.match.url },\n                    ] })),\n            React.createElement(Firehose, { resources: resources },\n                React.createElement(PageHeading, { title: \"Multi Cloud Gateway\", kind: referenceForModel(NooBaaSystemModel) }))),\n        React.createElement(Firehose, { resources: resources },\n            React.createElement(HorizontalNav, { pages: pages, match: props.match, customData: { namespace } }))));\n};\nexport default NooBaaPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/noobaa-operator/noobaa-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/noobaa-operator/noobaa-page.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { match } from 'react-router';\nimport * as _ from 'lodash';\nimport {\n  Firehose,\n  FirehoseResult,\n  HorizontalNav,\n  PageHeading,\n  FirehoseResource,\n  resourcePathFromModel,\n  BreadCrumbs,\n} from '@console/internal/components/utils';\nimport { referenceForModel, k8sGet } from '@console/internal/module/k8s';\nimport { EditYAML } from '@console/internal/components/edit-yaml';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager';\nimport { NooBaaSystemModel } from '../../models';\nimport InfoPage from './infoPage';\nimport MCGResourceList from './resourceTable';\n\nconst getFireHoseResources = (namespace: string): FirehoseResource[] => {\n  const system = {\n    kind: referenceForModel(NooBaaSystemModel),\n    namespace,\n    prop: 'obj',\n    isList: false,\n    name: 'noobaa',\n  };\n  return [system];\n};\n\nconst pages = [\n  {\n    href: '',\n    name: 'Details Page',\n    component: InfoPage,\n  },\n  {\n    href: 'yaml',\n    name: 'YAML',\n    component: EditYAML,\n  },\n  {\n    href: 'resources',\n    path: 'resources',\n    name: 'Resources',\n    component: MCGResourceList,\n  },\n];\n\nconst NooBaaPage: React.FC<NooBaaPageProps> = (props) => {\n  const { ns: namespace, appName } = props.match.params;\n  const resources = getFireHoseResources(namespace);\n  const [clusterServiceVersion, setClusterServiceVersion] = React.useState(null);\n\n  React.useEffect(() => {\n    k8sGet(ClusterServiceVersionModel, appName, namespace)\n      .then((clusterServiceVersionObj) => {\n        setClusterServiceVersion(clusterServiceVersionObj);\n      })\n      .catch(() => setClusterServiceVersion(null));\n  }, [appName, namespace]);\n\n  return (\n    <>\n      <div className=\"co-create-operand__header\">\n        <div className=\"co-create-operand__header-buttons\">\n          <BreadCrumbs\n            breadcrumbs={[\n              {\n                name: _.get(\n                  clusterServiceVersion,\n                  'spec.displayName',\n                  'Openshift Container Storage Operator',\n                ),\n                path: resourcePathFromModel(ClusterServiceVersionModel, appName, namespace),\n              },\n              { name: 'Multi Cloud Gateway', path: props.match.url },\n            ]}\n          />\n        </div>\n        <Firehose resources={resources}>\n          <PageHeading title=\"Multi Cloud Gateway\" kind={referenceForModel(NooBaaSystemModel)} />\n        </Firehose>\n      </div>\n      <Firehose resources={resources}>\n        <HorizontalNav pages={pages} match={props.match} customData={{ namespace }} />\n      </Firehose>\n    </>\n  );\n};\n\ntype NooBaaPageProps = {\n  match: match<{ ns: string; appName: string }>;\n  obj?: FirehoseResult;\n};\n\nexport default NooBaaPage;\n"]}]}