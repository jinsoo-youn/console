{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/modals/ConfigureUnschedulableModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/modals/ConfigureUnschedulableModal.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ModalTitle, ModalBody, ModalSubmitFooter, createModalLauncher, } from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { makeNodeUnschedulable } from '../../../k8s/requests/nodes';\nconst ConfigureUnschedulableModal = ({ handlePromise, resource, close, cancel, errorMessage, inProgress, }) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        handlePromise(makeNodeUnschedulable(resource))\n            .then(close)\n            .catch((error) => {\n            throw error;\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: handleSubmit, name: \"form\", className: \"modal-content \" },\n        React.createElement(ModalTitle, null, \"Mark as Unschedulable\"),\n        React.createElement(ModalBody, null, \"Unschedulable nodes won't accept new pods. This is useful for scheduling maintenance or preparing to decommission a node.\"),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, inProgress: inProgress, submitText: \"Mark Unschedulable\", cancel: cancel })));\n};\nexport default createModalLauncher(withHandlePromise(ConfigureUnschedulableModal));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/modals/ConfigureUnschedulableModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/modals/ConfigureUnschedulableModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,UAAU,EACV,SAAS,EACT,iBAAiB,EACjB,mBAAmB,GACpB,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAAE,iBAAiB,EAAsB,MAAM,oCAAoC,CAAC;AAE3F,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAC;AAQpE,MAAM,2BAA2B,GAA+C,CAAC,EAC/E,aAAa,EACb,QAAQ,EACR,KAAK,EACL,MAAM,EACN,YAAY,EACZ,UAAU,GACX,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,EAAE;QAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,aAAa,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;aAC3C,IAAI,CAAC,KAAK,CAAC;aACX,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,OAAO,CACL,8BAAM,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,gBAAgB;QAClE,oBAAC,UAAU,gCAAmC;QAC9C,oBAAC,SAAS,oIAGE;QACZ,oBAAC,iBAAiB,IAChB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,EACtB,UAAU,EAAC,oBAAoB,EAC/B,MAAM,EAAE,MAAM,GACd,CACG,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  createModalLauncher,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '@console/internal/components/utils';\nimport { NodeKind } from '@console/internal/module/k8s';\nimport { makeNodeUnschedulable } from '../../../k8s/requests/nodes';\n\ntype ConfigureUnschedulableModalProps = HandlePromiseProps & {\n  resource: NodeKind;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nconst ConfigureUnschedulableModal: React.FC<ConfigureUnschedulableModalProps> = ({\n  handlePromise,\n  resource,\n  close,\n  cancel,\n  errorMessage,\n  inProgress,\n}) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handlePromise(makeNodeUnschedulable(resource))\n      .then(close)\n      .catch((error) => {\n        throw error;\n      });\n  };\n  return (\n    <form onSubmit={handleSubmit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>Mark as Unschedulable</ModalTitle>\n      <ModalBody>\n        Unschedulable nodes won&#39;t accept new pods. This is useful for scheduling maintenance or\n        preparing to decommission a node.\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitText=\"Mark Unschedulable\"\n        cancel={cancel}\n      />\n    </form>\n  );\n};\n\nexport default createModalLauncher(withHandlePromise(ConfigureUnschedulableModal));\n"]}]}