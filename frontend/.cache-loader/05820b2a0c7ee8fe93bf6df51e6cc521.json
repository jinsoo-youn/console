{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/types.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/types.ts","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/*\n  Add the enum for NameValueEditorPair here and not in its namesake file because the editor should always be\n  loaded asynchronously in order not to bloat the vendor file. The enum reference into the editor\n  will cause it not to load asynchronously.\n */\nexport var NameValueEditorPair;\n(function (NameValueEditorPair) {\n    NameValueEditorPair[NameValueEditorPair[\"Name\"] = 0] = \"Name\";\n    NameValueEditorPair[NameValueEditorPair[\"Value\"] = 1] = \"Value\";\n    NameValueEditorPair[NameValueEditorPair[\"Index\"] = 2] = \"Index\";\n})(NameValueEditorPair || (NameValueEditorPair = {}));\nexport var EnvFromPair;\n(function (EnvFromPair) {\n    EnvFromPair[EnvFromPair[\"Prefix\"] = 0] = \"Prefix\";\n    EnvFromPair[EnvFromPair[\"Resource\"] = 1] = \"Resource\";\n    EnvFromPair[EnvFromPair[\"Index\"] = 2] = \"Index\";\n})(EnvFromPair || (EnvFromPair = {}));\n/**\n * The environment editor manages two types of env variables env and envFrom. This const distinguishes the two.\n */\nexport var EnvType;\n(function (EnvType) {\n    EnvType[EnvType[\"ENV\"] = 0] = \"ENV\";\n    EnvType[EnvType[\"ENV_FROM\"] = 1] = \"ENV_FROM\";\n})(EnvType || (EnvType = {}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/types.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/types.ts"],"names":[],"mappings":"AAqBA;;;;GAIG;AACH,MAAM,CAAN,IAAkB,mBAIjB;AAJD,WAAkB,mBAAmB;IACnC,6DAAQ,CAAA;IACR,+DAAK,CAAA;IACL,+DAAK,CAAA;AACP,CAAC,EAJiB,mBAAmB,KAAnB,mBAAmB,QAIpC;AAED,MAAM,CAAN,IAAkB,WAIjB;AAJD,WAAkB,WAAW;IAC3B,iDAAU,CAAA;IACV,qDAAQ,CAAA;IACR,+CAAK,CAAA;AACP,CAAC,EAJiB,WAAW,KAAX,WAAW,QAI5B;AACD;;GAEG;AACH,MAAM,CAAN,IAAkB,OAGjB;AAHD,WAAkB,OAAO;IACvB,mCAAO,CAAA;IACP,6CAAY,CAAA;AACd,CAAC,EAHiB,OAAO,KAAP,OAAO,QAGxB","sourcesContent":["import {\n  K8sResourceKindReference,\n  Selector,\n  K8sResourceKind,\n  K8sResourceCommon,\n} from '../../module/k8s';\n\nexport type FirehoseResult<\n  R extends K8sResourceCommon | K8sResourceCommon[] = K8sResourceKind[]\n> = {\n  loaded: boolean;\n  loadError: string;\n  optional?: boolean;\n  data: R;\n  kind?: string;\n};\n\nexport type FirehoseResourcesResult = {\n  [key: string]: FirehoseResult<K8sResourceCommon | K8sResourceCommon[]>;\n};\n\n/*\n  Add the enum for NameValueEditorPair here and not in its namesake file because the editor should always be\n  loaded asynchronously in order not to bloat the vendor file. The enum reference into the editor\n  will cause it not to load asynchronously.\n */\nexport const enum NameValueEditorPair {\n  Name = 0,\n  Value,\n  Index,\n}\n\nexport const enum EnvFromPair {\n  Prefix = 0,\n  Resource,\n  Index,\n}\n/**\n * The environment editor manages two types of env variables env and envFrom. This const distinguishes the two.\n */\nexport const enum EnvType {\n  ENV = 0,\n  ENV_FROM = 1,\n}\n\nexport type FirehoseResource = {\n  kind: K8sResourceKindReference;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  prop: string;\n  namespaced?: boolean;\n  optional?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n};\n\nexport type HumanizeResult = {\n  string: string;\n  value: number;\n  unit: string;\n};\n\nexport type Humanize = {\n  (v: React.ReactText, initialUnit?: string, preferredUnit?: string): HumanizeResult;\n};\n"]}]}