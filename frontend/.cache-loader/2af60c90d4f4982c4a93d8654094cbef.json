{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/k8s/patch.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/k8s/patch.ts","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { assureEndsWith } from '../utils';\nexport const patchSafeValue = (value) => value.replace('~', '~0').replace('/', '~1');\nexport var PatchOperation;\n(function (PatchOperation) {\n    PatchOperation[\"ADD\"] = \"add\";\n    PatchOperation[\"REMOVE\"] = \"remove\";\n    PatchOperation[\"REPLACE\"] = \"replace\";\n})(PatchOperation || (PatchOperation = {}));\nexport class PatchBuilder {\n    constructor(path) {\n        this.valueIndex = -1;\n        this.valueKey = '';\n        this.valid = true;\n        this.setValue = (value) => {\n            this.value = value;\n            return this;\n        };\n        this.setOperation = (operation) => {\n            this.operation = operation;\n            return this;\n        };\n        this.setListIndex = (index) => {\n            this.valueIndex = index;\n            return this;\n        };\n        this.add = (value) => {\n            this.value = value;\n            return this.setOperation(PatchOperation.ADD);\n        };\n        this.replace = (value) => {\n            this.value = value;\n            return this.setOperation(PatchOperation.REPLACE);\n        };\n        this.remove = () => this.setOperation(PatchOperation.REMOVE);\n        this.setListRemove = (items, removedItemEquals) => {\n            this.value = undefined;\n            this.operation = PatchOperation.REMOVE;\n            if (items) {\n                const foundIndex = items.findIndex(removedItemEquals);\n                if (foundIndex < 0) {\n                    this.valid = false; // do not do anything\n                }\n                else {\n                    this.valueIndex = items.length === 1 ? -1 : foundIndex; // delete the whole list if last value there\n                }\n            }\n            else {\n                this.valueIndex = -1; // remove the empty list\n            }\n            return this;\n        };\n        this.setListUpdate = (item, items, updatedItemEquals = (other, updatedValue) => other === updatedValue) => {\n            if (items) {\n                const foundIndex = items.findIndex((other) => updatedItemEquals(other, item));\n                if (foundIndex < 0) {\n                    this.value = item;\n                    this.valueIndex = items.length;\n                    this.operation = PatchOperation.ADD;\n                }\n                else if (_.isEqual(items[foundIndex], item)) {\n                    this.valid = false; // no change\n                }\n                else {\n                    this.value = item;\n                    this.valueIndex = foundIndex;\n                    this.operation = PatchOperation.REPLACE;\n                }\n            }\n            else {\n                // list is missing - add the whole list\n                this.value = [item];\n                this.valueIndex = -1;\n                this.operation = PatchOperation.ADD;\n            }\n            return this;\n        };\n        this.setObjectRemove = (key, object) => {\n            if (_.has(object, [key])) {\n                this.value = undefined;\n                this.valueKey = key;\n                this.operation = PatchOperation.REMOVE;\n            }\n            else {\n                this.valid = false;\n            }\n            return this;\n        };\n        this.setObjectUpdate = (key, value, object) => {\n            if (object == null) {\n                this.value = { [key]: value };\n            }\n            else if (object[key] === value) {\n                this.valid = false;\n            }\n            else {\n                this.value = value;\n                this.valueKey = key;\n            }\n            this.operation = _.has(object, [key]) ? PatchOperation.REPLACE : PatchOperation.ADD;\n            return this;\n        };\n        this.isPatchValid = () => this.valid && !!(this.path && this.operation);\n        this.build = () => {\n            if (!this.isPatchValid()) {\n                return null;\n            }\n            let resultPath;\n            if (this.valueIndex < 0) {\n                resultPath = this.valueKey\n                    ? assureEndsWith(this.path, `/${patchSafeValue(this.valueKey)}`)\n                    : this.path;\n            }\n            else {\n                resultPath = `${assureEndsWith(this.path, '/')}${this.valueIndex}`;\n            }\n            const result = {\n                op: this.operation,\n                path: resultPath,\n            };\n            if (this.operation !== PatchOperation.REMOVE) {\n                result.value = this.value;\n            }\n            return result;\n        };\n        this.buildAddObjectKeysPatches = (newObject, oldObject) => {\n            if (!newObject) {\n                return [];\n            }\n            let builders;\n            if (!oldObject) {\n                builders = [new PatchBuilder(this.path).add(newObject)];\n            }\n            else {\n                builders = Object.keys(newObject).map((key) => new PatchBuilder(this.path).setObjectUpdate(key, newObject[key], oldObject));\n            }\n            return _.compact(builders.map((u) => u.build()));\n        };\n        this.path = path;\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/k8s/patch.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/k8s/patch.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { Patch } from '@console/internal/module/k8s';\nimport { assureEndsWith } from '../utils';\n\nexport const patchSafeValue = (value: string): string =>\n  value.replace('~', '~0').replace('/', '~1');\n\nexport enum PatchOperation {\n  ADD = 'add',\n  REMOVE = 'remove',\n  REPLACE = 'replace',\n}\n\nexport class PatchBuilder {\n  private readonly path: string;\n\n  private value: any;\n\n  private valueIndex: number = -1;\n\n  private valueKey: string = '';\n\n  private operation: PatchOperation;\n\n  private valid = true;\n\n  constructor(path: string) {\n    this.path = path;\n  }\n\n  setValue = (value) => {\n    this.value = value;\n    return this;\n  };\n\n  setOperation = (operation: PatchOperation) => {\n    this.operation = operation;\n    return this;\n  };\n\n  setListIndex = (index: number) => {\n    this.valueIndex = index;\n    return this;\n  };\n\n  add = (value) => {\n    this.value = value;\n    return this.setOperation(PatchOperation.ADD);\n  };\n\n  replace = (value) => {\n    this.value = value;\n    return this.setOperation(PatchOperation.REPLACE);\n  };\n\n  remove = () => this.setOperation(PatchOperation.REMOVE);\n\n  setListRemove = <T>(items: T[], removedItemEquals: (item: T) => boolean) => {\n    this.value = undefined;\n    this.operation = PatchOperation.REMOVE;\n    if (items) {\n      const foundIndex = items.findIndex(removedItemEquals);\n      if (foundIndex < 0) {\n        this.valid = false; // do not do anything\n      } else {\n        this.valueIndex = items.length === 1 ? -1 : foundIndex; // delete the whole list if last value there\n      }\n    } else {\n      this.valueIndex = -1; // remove the empty list\n    }\n    return this;\n  };\n\n  setListUpdate = <T>(\n    item: T,\n    items?: T[],\n    updatedItemEquals: (other: T, updatedItem: T) => boolean = (other, updatedValue) =>\n      other === updatedValue,\n  ) => {\n    if (items) {\n      const foundIndex = items.findIndex((other) => updatedItemEquals(other, item));\n      if (foundIndex < 0) {\n        this.value = item;\n        this.valueIndex = items.length;\n        this.operation = PatchOperation.ADD;\n      } else if (_.isEqual(items[foundIndex], item)) {\n        this.valid = false; // no change\n      } else {\n        this.value = item;\n        this.valueIndex = foundIndex;\n        this.operation = PatchOperation.REPLACE;\n      }\n    } else {\n      // list is missing - add the whole list\n      this.value = [item];\n      this.valueIndex = -1;\n      this.operation = PatchOperation.ADD;\n    }\n    return this;\n  };\n\n  setObjectRemove = (key: string, object: { [k: string]: any }) => {\n    if (_.has(object, [key])) {\n      this.value = undefined;\n      this.valueKey = key;\n      this.operation = PatchOperation.REMOVE;\n    } else {\n      this.valid = false;\n    }\n    return this;\n  };\n\n  setObjectUpdate = (key: string, value: any, object: { [k: string]: any }) => {\n    if (object == null) {\n      this.value = { [key]: value };\n    } else if (object[key] === value) {\n      this.valid = false;\n    } else {\n      this.value = value;\n      this.valueKey = key;\n    }\n    this.operation = _.has(object, [key]) ? PatchOperation.REPLACE : PatchOperation.ADD;\n    return this;\n  };\n\n  isPatchValid = () => this.valid && !!(this.path && this.operation);\n\n  build = (): Patch => {\n    if (!this.isPatchValid()) {\n      return null;\n    }\n\n    let resultPath;\n\n    if (this.valueIndex < 0) {\n      resultPath = this.valueKey\n        ? assureEndsWith(this.path, `/${patchSafeValue(this.valueKey)}`)\n        : this.path;\n    } else {\n      resultPath = `${assureEndsWith(this.path, '/')}${this.valueIndex}`;\n    }\n\n    const result: Patch = {\n      op: this.operation,\n      path: resultPath,\n    };\n\n    if (this.operation !== PatchOperation.REMOVE) {\n      result.value = this.value;\n    }\n\n    return result;\n  };\n\n  buildAddObjectKeysPatches = (\n    newObject: { [k: string]: any },\n    oldObject: { [k: string]: any },\n  ): Patch[] => {\n    if (!newObject) {\n      return [];\n    }\n    let builders;\n    if (!oldObject) {\n      builders = [new PatchBuilder(this.path).add(newObject)];\n    } else {\n      builders = Object.keys(newObject).map((key) =>\n        new PatchBuilder(this.path).setObjectUpdate(key, newObject[key], oldObject),\n      );\n    }\n\n    return _.compact(builders.map((u) => u.build()));\n  };\n}\n"]}]}