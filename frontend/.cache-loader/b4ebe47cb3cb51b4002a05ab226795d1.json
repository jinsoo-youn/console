{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/alert-manager-utils.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/alert-manager-utils.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable camelcase */\nimport * as _ from 'lodash-es';\nimport { Base64 } from 'js-base64';\nimport { safeLoad, safeDump } from 'js-yaml';\nimport { k8sPatch } from '../../module/k8s';\nimport { SecretModel } from '../../models';\nexport const receiverTypes = Object.freeze({\n    pagerduty_configs: 'PagerDuty',\n    webhook_configs: 'Webhook',\n    email_configs: 'Email',\n    slack_configs: 'Slack',\n});\nexport const getAlertmanagerYAML = (secret, setErrorMsg) => {\n    const alertManagerYaml = _.get(secret, ['data', 'alertmanager.yaml']);\n    let yaml = '';\n    if (_.isEmpty(alertManagerYaml)) {\n        setErrorMsg('Error: alertmanager.yaml not found in Secret \"alertmanager-main\", in namespace \"openshift-monitoring\"');\n        return yaml;\n    }\n    try {\n        yaml = Base64.decode(alertManagerYaml);\n    }\n    catch (e) {\n        setErrorMsg(`Error decoding alertmanager.yaml: ${e}`);\n    }\n    return yaml;\n};\nexport const getAlertmanagerConfig = (secret, setErrorMsg) => {\n    const alertManagerYAML = getAlertmanagerYAML(secret, setErrorMsg);\n    try {\n        return safeLoad(alertManagerYAML);\n    }\n    catch (e) {\n        setErrorMsg(`Error loading alertmanager.yaml: ${e}`);\n        return null;\n    }\n};\nexport const patchAlertmanagerConfig = (secret, yaml) => {\n    const yamlString = _.isObject(yaml) ? safeDump(yaml) : yaml;\n    const yamlEncodedString = Base64.encode(yamlString);\n    const patch = [{ op: 'replace', path: '/data/alertmanager.yaml', value: yamlEncodedString }];\n    return k8sPatch(SecretModel, secret, patch);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/alert-manager-utils.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/alert-manager-utils.tsx"],"names":[],"mappings":"AAAA,8BAA8B;AAC9B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAmB,MAAM,kBAAkB,CAAC;AAE7D,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,MAAM,CAAC,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC;IACzC,iBAAiB,EAAE,WAAW;IAC9B,eAAe,EAAE,SAAS;IAC1B,aAAa,EAAE,OAAO;IACtB,aAAa,EAAE,OAAO;CACvB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,MAAuB,EAAE,WAAW,EAAU,EAAE;IAClF,MAAM,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,CAAC;IACtE,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,IAAI,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;QAC/B,WAAW,CACT,uGAAuG,CACxG,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAED,IAAI;QACF,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACxC;IAAC,OAAO,CAAC,EAAE;QACV,WAAW,CAAC,qCAAqC,CAAC,EAAE,CAAC,CAAC;KACvD;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,MAAuB,EAAE,WAAW,EAAsB,EAAE;IAChG,MAAM,gBAAgB,GAAW,mBAAmB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC1E,IAAI;QACF,OAAO,QAAQ,CAAC,gBAAgB,CAAC,CAAC;KACnC;IAAC,OAAO,CAAC,EAAE;QACV,WAAW,CAAC,oCAAoC,CAAC,EAAE,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,MAAuB,EACvB,IAAqB,EACP,EAAE;IAChB,MAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAC;IAC7F,OAAO,QAAQ,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC,CAAC","sourcesContent":["/* eslint-disable camelcase */\nimport * as _ from 'lodash-es';\nimport { Base64 } from 'js-base64';\nimport { safeLoad, safeDump } from 'js-yaml';\n\nimport { k8sPatch, K8sResourceKind } from '../../module/k8s';\nimport { AlertmanagerConfig } from './alert-manager-config';\nimport { SecretModel } from '../../models';\n\nexport const receiverTypes = Object.freeze({\n  pagerduty_configs: 'PagerDuty',\n  webhook_configs: 'Webhook',\n  email_configs: 'Email',\n  slack_configs: 'Slack',\n});\n\nexport const getAlertmanagerYAML = (secret: K8sResourceKind, setErrorMsg): string => {\n  const alertManagerYaml = _.get(secret, ['data', 'alertmanager.yaml']);\n  let yaml = '';\n\n  if (_.isEmpty(alertManagerYaml)) {\n    setErrorMsg(\n      'Error: alertmanager.yaml not found in Secret \"alertmanager-main\", in namespace \"openshift-monitoring\"',\n    );\n    return yaml;\n  }\n\n  try {\n    yaml = Base64.decode(alertManagerYaml);\n  } catch (e) {\n    setErrorMsg(`Error decoding alertmanager.yaml: ${e}`);\n  }\n\n  return yaml;\n};\n\nexport const getAlertmanagerConfig = (secret: K8sResourceKind, setErrorMsg): AlertmanagerConfig => {\n  const alertManagerYAML: string = getAlertmanagerYAML(secret, setErrorMsg);\n  try {\n    return safeLoad(alertManagerYAML);\n  } catch (e) {\n    setErrorMsg(`Error loading alertmanager.yaml: ${e}`);\n    return null;\n  }\n};\n\nexport const patchAlertmanagerConfig = (\n  secret: K8sResourceKind,\n  yaml: object | string,\n): Promise<any> => {\n  const yamlString = _.isObject(yaml) ? safeDump(yaml) : yaml;\n  const yamlEncodedString = Base64.encode(yamlString);\n  const patch = [{ op: 'replace', path: '/data/alertmanager.yaml', value: yamlEncodedString }];\n  return k8sPatch(SecretModel, secret, patch);\n};\n"]}]}