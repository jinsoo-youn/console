{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/network-policy.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/network-policy.jsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { connectToFlags } from '../reducers/features';\nimport { FLAGS } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, navFactory, ResourceKebab, SectionHeading, ResourceLink, ResourceSummary, Selector, ExternalLink } from './utils';\nimport { NetworkPolicyModel } from '../models';\nimport { getNetworkPolicyDocLink } from './utils/documentation';\nimport { useTranslation } from 'react-i18next';\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(NetworkPolicyModel), ...common];\nconst tableColumnClasses = [classNames('col-sm-4', 'col-xs-6'), classNames('col-sm-4', 'col-xs-6'), classNames('col-sm-4', 'hidden-xs'), Kebab.columnClass];\nconst NetworkPolicyTableHeader = t => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n            sortField: 'spec.podSelector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nNetworkPolicyTableHeader.displayName = 'NetworkPolicyTableHeader';\nconst kind = 'NetworkPolicy';\nconst NetworkPolicyTableRow = ({ obj: np, index, key, style }) => {\n    return (React.createElement(TableRow, { id: np.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: np.metadata.name, namespace: np.metadata.namespace, title: np.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: 'Namespace', name: np.metadata.namespace, title: np.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[2], 'co-break-word') }, _.isEmpty(np.spec.podSelector) ? React.createElement(Link, { to: `/search/ns/${np.metadata.namespace}?kind=Pod` }, `All pods within ${np.metadata.namespace}`) : React.createElement(Selector, { selector: np.spec.podSelector, namespace: np.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: np }))));\n};\nconst NetworkPoliciesList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Network Policies\", Header: NetworkPolicyTableHeader.bind(null, t), Row: NetworkPolicyTableRow, virtualize: true }));\n};\nexport const NetworkPoliciesPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({}, props, { title: t('COMMON:MSG_LNB_MENU_49'), ListComponent: NetworkPoliciesList, kind: kind, canCreate: true }));\n};\nconst IngressHeader = () => {\n    const { t } = useTranslation();\n    return (React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n        React.createElement(\"div\", { className: \"col-xs-4\" }, \"Target Pods\"),\n        React.createElement(\"div\", { className: \"col-xs-5\" }, \"From\"),\n        React.createElement(\"div\", { className: \"col-xs-3\" }, \"To Ports\")));\n};\nconst IngressRow = ({ ingress, namespace, podSelector }) => {\n    const podSelectors = [];\n    const nsSelectors = [];\n    let i = 0;\n    const style = { margin: '5px 0' };\n    _.each(ingress.from, ({ namespaceSelector, podSelector: ps }) => {\n        if (namespaceSelector) {\n            nsSelectors.push(React.createElement(\"div\", { key: i++, style: style },\n                React.createElement(Selector, { selector: namespaceSelector, kind: \"Namespace\" })));\n        }\n        else {\n            podSelectors.push(React.createElement(\"div\", { key: i++, style: style },\n                React.createElement(Selector, { selector: ps, namespace: namespace })));\n        }\n    });\n    return (React.createElement(\"div\", { className: \"row co-resource-list__item\" },\n        React.createElement(\"div\", { className: \"col-xs-4\" },\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { className: \"text-muted\" }, \"Pod Selector:\")),\n            React.createElement(\"div\", { style: style },\n                React.createElement(Selector, { selector: podSelector, namespace: namespace }))),\n        React.createElement(\"div\", { className: \"col-xs-5\" },\n            React.createElement(\"div\", null,\n                !podSelectors.length ? null : (React.createElement(\"div\", null,\n                    React.createElement(\"span\", { className: \"text-muted\" }, \"Pod Selector:\"),\n                    podSelectors)),\n                !nsSelectors.length ? null : (React.createElement(\"div\", { style: { paddingTop: podSelectors.length ? 10 : 0 } },\n                    React.createElement(\"span\", { className: \"text-muted\" }, \"NS Selector:\"),\n                    nsSelectors)))),\n        React.createElement(\"div\", { className: \"col-xs-3\" }, _.map(ingress.ports, (port, k) => (React.createElement(\"p\", { key: k },\n            port.protocol,\n            \"/\",\n            port.port))))));\n};\nconst Details_ = ({ obj: np, flags }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_49') }) }),\n            React.createElement(ResourceSummary, { resource: np, podSelector: 'spec.podSelector', showPodSelector: true })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_INGRESSRULES_1') }),\n            React.createElement(\"p\", { className: \"co-m-pane__explanation\" },\n                \"Pods accept all traffic by default. They can be isolated via Network Policies which specify a whitelist of ingress rules. When a Pod is selected by a Network Policy, it will reject all traffic not explicitly allowed via a Network Policy. See more details in \",\n                React.createElement(ExternalLink, { href: getNetworkPolicyDocLink(flags[FLAGS.OPENSHIFT]), text: \"Network Policies Documentation\" }),\n                \".\"),\n            _.isEmpty(_.get(np, 'spec.ingress[0]', [])) ? (`All traffic is allowed to Pods in ${np.metadata.namespace}.`) : (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n                React.createElement(IngressHeader, null),\n                React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.map(np.spec.ingress, (ingress, i) => (React.createElement(IngressRow, { key: i, ingress: ingress, podSelector: np.spec.podSelector, namespace: np.metadata.namespace })))))))));\n};\nconst Details = connectToFlags(FLAGS.OPENSHIFT)(Details_);\nexport const NetworkPoliciesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { menuActions: menuActions, pages: [navFactory.details(Details), navFactory.editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/network-policy.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/network-policy.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { connectToFlags } from '../reducers/features';\nimport { FLAGS } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, navFactory, ResourceKebab, SectionHeading, ResourceLink, ResourceSummary, Selector, ExternalLink } from './utils';\nimport { NetworkPolicyModel } from '../models';\nimport { getNetworkPolicyDocLink } from './utils/documentation';\nimport { useTranslation } from 'react-i18next';\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(NetworkPolicyModel), ...common];\n\nconst tableColumnClasses = [classNames('col-sm-4', 'col-xs-6'), classNames('col-sm-4', 'col-xs-6'), classNames('col-sm-4', 'hidden-xs'), Kebab.columnClass];\n\nconst NetworkPolicyTableHeader = t => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n      sortField: 'spec.podSelector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nNetworkPolicyTableHeader.displayName = 'NetworkPolicyTableHeader';\n\nconst kind = 'NetworkPolicy';\n\nconst NetworkPolicyTableRow = ({ obj: np, index, key, style }) => {\n  return (\n    <TableRow id={np.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={np.metadata.name} namespace={np.metadata.namespace} title={np.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind={'Namespace'} name={np.metadata.namespace} title={np.metadata.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>{_.isEmpty(np.spec.podSelector) ? <Link to={`/search/ns/${np.metadata.namespace}?kind=Pod`}>{`All pods within ${np.metadata.namespace}`}</Link> : <Selector selector={np.spec.podSelector} namespace={np.metadata.namespace} />}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={np} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst NetworkPoliciesList = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Network Policies\" Header={NetworkPolicyTableHeader.bind(null, t)} Row={NetworkPolicyTableRow} virtualize />;\n};\n\nexport const NetworkPoliciesPage = props => {\n  const { t } = useTranslation();\n  return <ListPage {...props} title={t('COMMON:MSG_LNB_MENU_49')} ListComponent={NetworkPoliciesList} kind={kind} canCreate={true} />;\n};\n\nconst IngressHeader = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row co-m-table-grid__head\">\n      <div className=\"col-xs-4\">Target Pods</div>\n      <div className=\"col-xs-5\">From</div>\n      <div className=\"col-xs-3\">To Ports</div>\n    </div>\n  );\n};\n\nconst IngressRow = ({ ingress, namespace, podSelector }) => {\n  const podSelectors = [];\n  const nsSelectors = [];\n  let i = 0;\n\n  const style = { margin: '5px 0' };\n  _.each(ingress.from, ({ namespaceSelector, podSelector: ps }) => {\n    if (namespaceSelector) {\n      nsSelectors.push(\n        <div key={i++} style={style}>\n          <Selector selector={namespaceSelector} kind=\"Namespace\" />\n        </div>,\n      );\n    } else {\n      podSelectors.push(\n        <div key={i++} style={style}>\n          <Selector selector={ps} namespace={namespace} />\n        </div>,\n      );\n    }\n  });\n  return (\n    <div className=\"row co-resource-list__item\">\n      <div className=\"col-xs-4\">\n        <div>\n          <span className=\"text-muted\">Pod Selector:</span>\n        </div>\n        <div style={style}>\n          <Selector selector={podSelector} namespace={namespace} />\n        </div>\n      </div>\n      <div className=\"col-xs-5\">\n        <div>\n          {!podSelectors.length ? null : (\n            <div>\n              <span className=\"text-muted\">Pod Selector:</span>\n              {podSelectors}\n            </div>\n          )}\n          {!nsSelectors.length ? null : (\n            <div style={{ paddingTop: podSelectors.length ? 10 : 0 }}>\n              <span className=\"text-muted\">NS Selector:</span>\n              {nsSelectors}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"col-xs-3\">\n        {_.map(ingress.ports, (port, k) => (\n          <p key={k}>\n            {port.protocol}/{port.port}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Details_ = ({ obj: np, flags }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: t('COMMON:MSG_LNB_MENU_49') })} />\n        <ResourceSummary resource={np} podSelector={'spec.podSelector'} showPodSelector />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_INGRESSRULES_1')} />\n        <p className=\"co-m-pane__explanation\">\n          Pods accept all traffic by default. They can be isolated via Network Policies which specify a whitelist of ingress rules. When a Pod is selected by a Network Policy, it will reject all traffic not explicitly allowed via a Network Policy. See more details in <ExternalLink href={getNetworkPolicyDocLink(flags[FLAGS.OPENSHIFT])} text=\"Network Policies Documentation\" />.\n        </p>\n        {_.isEmpty(_.get(np, 'spec.ingress[0]', [])) ? (\n          `All traffic is allowed to Pods in ${np.metadata.namespace}.`\n        ) : (\n          <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n            <IngressHeader />\n            <div className=\"co-m-table-grid__body\">\n              {_.map(np.spec.ingress, (ingress, i) => (\n                <IngressRow key={i} ingress={ingress} podSelector={np.spec.podSelector} namespace={np.metadata.namespace} />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst Details = connectToFlags(FLAGS.OPENSHIFT)(Details_);\n\nexport const NetworkPoliciesDetailsPage = props => <DetailsPage {...props} menuActions={menuActions} pages={[navFactory.details(Details), navFactory.editYaml()]} />;\n"]}]}