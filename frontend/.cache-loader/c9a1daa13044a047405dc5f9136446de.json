{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/SinkSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/SinkSection.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useFormikContext } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { getFieldId, ResourceDropdownField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { knativeServingResourcesServices } from '../../../utils/get-knative-resources';\nconst SinkSection = ({ namespace }) => {\n    const { setFieldValue, setFieldTouched, validateForm, initialValues } = useFormikContext();\n    const autocompleteFilter = (strText, item) => { var _a; return fuzzy(strText, (_a = item === null || item === void 0 ? void 0 : item.props) === null || _a === void 0 ? void 0 : _a.name); };\n    const fieldId = getFieldId('sink-name', 'dropdown');\n    const onChange = React.useCallback((selectedValue) => {\n        if (selectedValue) {\n            setFieldTouched('sink.knativeService', true);\n            setFieldValue('sink.knativeService', selectedValue);\n            validateForm();\n        }\n    }, [setFieldValue, setFieldTouched, validateForm]);\n    const contextAvailable = !!initialValues.sink.knativeService;\n    return (React.createElement(FormSection, { title: \"Sink\", extraMargin: true },\n        React.createElement(FormGroup, { fieldId: fieldId, helperText: !contextAvailable ? 'Select a Service to sink to.' : '', isRequired: true },\n            React.createElement(ResourceDropdownField, { name: \"sink.knativeService\", label: \"Knative Service\", resources: knativeServingResourcesServices(namespace), dataSelector: ['metadata', 'name'], fullWidth: true, required: true, placeholder: \"Select Knative Service\", showBadge: true, disabled: contextAvailable, onChange: onChange, autocompleteFilter: autocompleteFilter, autoSelect: true }))));\n};\nexport default SinkSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/SinkSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/add/event-sources/SinkSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AACpE,OAAO,WAAW,MAAM,gEAAgE,CAAC;AACzF,OAAO,EAAE,+BAA+B,EAAE,MAAM,sCAAsC,CAAC;AAMvF,MAAM,WAAW,GAA+B,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;IAChE,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAErF,CAAC;IACJ,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,IAAI,EAAW,EAAE,WAAC,OAAA,KAAK,CAAC,OAAO,QAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,0CAAE,IAAI,CAAC,CAAA,EAAA,CAAC;IACzF,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAChC,CAAC,aAAa,EAAE,EAAE;QAChB,IAAI,aAAa,EAAE;YACjB,eAAe,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;YAC7C,aAAa,CAAC,qBAAqB,EAAE,aAAa,CAAC,CAAC;YACpD,YAAY,EAAE,CAAC;SAChB;IACH,CAAC,EACD,CAAC,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC,CAC/C,CAAC;IACF,MAAM,gBAAgB,GAAG,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7D,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAC,MAAM,EAAC,WAAW;QACnC,oBAAC,SAAS,IACR,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,EAAE,EACnE,UAAU;YAEV,oBAAC,qBAAqB,IACpB,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAC,iBAAiB,EACvB,SAAS,EAAE,+BAA+B,CAAC,SAAS,CAAC,EACrD,YAAY,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,EAClC,SAAS,QACT,QAAQ,QACR,WAAW,EAAC,wBAAwB,EACpC,SAAS,QACT,QAAQ,EAAE,gBAAgB,EAC1B,QAAQ,EAAE,QAAQ,EAClB,kBAAkB,EAAE,kBAAkB,EACtC,UAAU,SACV,CACQ,CACA,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { getFieldId, ResourceDropdownField } from '@console/shared';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { knativeServingResourcesServices } from '../../../utils/get-knative-resources';\n\ninterface SinkSectionProps {\n  namespace: string;\n}\n\nconst SinkSection: React.FC<SinkSectionProps> = ({ namespace }) => {\n  const { setFieldValue, setFieldTouched, validateForm, initialValues } = useFormikContext<\n    FormikValues\n  >();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const fieldId = getFieldId('sink-name', 'dropdown');\n  const onChange = React.useCallback(\n    (selectedValue) => {\n      if (selectedValue) {\n        setFieldTouched('sink.knativeService', true);\n        setFieldValue('sink.knativeService', selectedValue);\n        validateForm();\n      }\n    },\n    [setFieldValue, setFieldTouched, validateForm],\n  );\n  const contextAvailable = !!initialValues.sink.knativeService;\n  return (\n    <FormSection title=\"Sink\" extraMargin>\n      <FormGroup\n        fieldId={fieldId}\n        helperText={!contextAvailable ? 'Select a Service to sink to.' : ''}\n        isRequired\n      >\n        <ResourceDropdownField\n          name=\"sink.knativeService\"\n          label=\"Knative Service\"\n          resources={knativeServingResourcesServices(namespace)}\n          dataSelector={['metadata', 'name']}\n          fullWidth\n          required\n          placeholder=\"Select Knative Service\"\n          showBadge\n          disabled={contextAvailable}\n          onChange={onChange}\n          autocompleteFilter={autocompleteFilter}\n          autoSelect\n        />\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default SinkSection;\n"]}]}