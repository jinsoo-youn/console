{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/cdrom-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/cdrom-row.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { getName } from '@console/shared';\nimport { FormSelect, FormGroup, Text, TextVariants, FormSelectOption, TextInput, Button, } from '@patternfly/react-core';\nimport { PersistentVolumeClaimModel, StorageClassModel } from '@console/internal/models';\nimport { K8sResourceSelectRow } from '../../form/k8s-resource-select-row';\nimport { FormSelectPlaceholderOption } from '../../form/form-select-placeholder-option';\nimport { StorageType, CD_SIZE, CD_STORAGE_CLASS } from './constants';\nexport const CDRomRow = ({ cd, pvcs, usedPVCs, storageClasses, index, onChange, onDelete, isWindows, inProgress, winToolsContainer, }) => {\n    const { name, type, container, pvc, url, windowsTools, size, storageClass, isURLValid } = cd;\n    return (React.createElement(\"div\", null,\n        React.createElement(Text, { component: TextVariants.h4 }, `Drive ${index + 1}`),\n        React.createElement(FormGroup, { fieldId: \"cd-rom-modal-grid\", className: \"kubevirt-cdrom-modal__grid pf-l-grid pf-m-11-col-on-md\" },\n            React.createElement(FormGroup, { label: \"Source\", fieldId: \"cd-rom-modal-type\", className: \"pf-m-3-col-on-md\" },\n                React.createElement(FormSelect, { value: type, onChange: (v) => onChange(name, 'type', v), id: `cd-rom-modal-select-type-${name}` },\n                    React.createElement(FormSelectOption, { key: \"container-option\", value: \"container\", label: \"Container\" }),\n                    React.createElement(FormSelectOption, { key: \"pvc-option\", value: \"pvc\", label: \"Attach Disk\" }),\n                    React.createElement(FormSelectOption, { key: \"url-option\", value: \"url\", label: \"URL\" }),\n                    isWindows && (React.createElement(FormSelectOption, { key: \"wintools-option\", value: \"windowsTools\", label: \"Windows guest tools\" })))),\n            type === StorageType.URL && (React.createElement(React.Fragment, null,\n                React.createElement(FormGroup, { label: \"URL\", className: \"pf-m-3-col-on-md\", fieldId: \"cd-rom-modal-url\", id: `cd-url-text-input-${name}`, isValid: isURLValid, helperTextInvalid: \"Invalid URL\" },\n                    React.createElement(TextInput, { isRequired: true, type: \"text\", value: url, onChange: (v) => onChange(name, StorageType.URL, v), \"aria-label\": \"url path\" })),\n                React.createElement(FormGroup, { id: `cd-url-size-input-${name}`, label: \"Size (GiB)\", className: \"pf-m-2-col-on-md\", fieldId: \"cd-rom-modal-cdsize\" },\n                    React.createElement(TextInput, { isRequired: true, type: \"text\", value: size, onChange: (v) => onChange(name, CD_SIZE, v), \"aria-label\": \"cd size\" })),\n                React.createElement(\"div\", { className: \"pf-m-3-col-on-md\" },\n                    React.createElement(K8sResourceSelectRow, { key: \"storage-class\", id: `cd-url-storageclass-input-${name}`, isDisabled: inProgress, name: storageClass, data: storageClasses, model: StorageClassModel, hasPlaceholder: true, onChange: (sc) => onChange(name, CD_STORAGE_CLASS, sc) })))),\n            type === StorageType.CONTAINER && (React.createElement(FormGroup, { className: \"pf-m-8-col-on-md\", label: \"Container\", fieldId: \"cd-rom-modal-container\", id: `cdrom-container-input-${name}` },\n                React.createElement(TextInput, { isRequired: true, type: \"text\", value: container, onChange: (v) => onChange(name, StorageType.CONTAINER, v), \"aria-label\": \"container path\" }))),\n            type === StorageType.PVC && (React.createElement(\"div\", { className: \"pf-m-8-col-on-md\" },\n                React.createElement(K8sResourceSelectRow, { key: \"pvc-select\", title: \"Attach Disk\", id: `cdrom-pvc-input-${name}`, isDisabled: inProgress, name: pvc, data: pvcs, model: PersistentVolumeClaimModel, hasPlaceholder: true, isPlaceholderDisabled: true, onChange: (p) => onChange(name, StorageType.PVC, p), filter: (p) => !_.includes(_.without(usedPVCs, pvc), getName(p)) }))),\n            type === StorageType.WINTOOLS && (React.createElement(FormGroup, { label: \"Windows guest tools\", id: `cdrom-wintools-input-${name}`, className: \"pf-m-8-col-on-md\", fieldId: \"cd-rom-modal-wintools\" },\n                React.createElement(FormSelect, { \"aria-label\": \"cd-rom-wintools-label\", value: windowsTools, onChange: (v) => onChange(name, StorageType.WINTOOLS, v) },\n                    React.createElement(FormSelectPlaceholderOption, { placeholder: \"--- Select Windows Tools Container ---\" }),\n                    React.createElement(FormSelectOption, { key: winToolsContainer, value: winToolsContainer, label: winToolsContainer })))),\n            React.createElement(\"div\", { className: \"kubevirt-cdrom-modal__delete pf-m-1-col-on-md\" },\n                React.createElement(Button, { onClick: () => onDelete(name), variant: \"plain\" },\n                    React.createElement(MinusCircleIcon, null))))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/cdrom-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/cdrom-row.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { getName } from '@console/shared';\nimport {\n  FormSelect,\n  FormGroup,\n  Text,\n  TextVariants,\n  FormSelectOption,\n  TextInput,\n  Button,\n} from '@patternfly/react-core';\nimport { PersistentVolumeClaimModel, StorageClassModel } from '@console/internal/models';\nimport { FirehoseResult } from '@console/internal/components/utils';\nimport { K8sResourceSelectRow } from '../../form/k8s-resource-select-row';\nimport { VMKind } from '../../../types';\nimport { FormSelectPlaceholderOption } from '../../form/form-select-placeholder-option';\nimport { StorageType, CD_SIZE, CD_STORAGE_CLASS } from './constants';\nimport { CD } from './types';\n\nexport const CDRomRow: React.FC<CDRomRowProps> = ({\n  cd,\n  pvcs,\n  usedPVCs,\n  storageClasses,\n  index,\n  onChange,\n  onDelete,\n  isWindows,\n  inProgress,\n  winToolsContainer,\n}) => {\n  const { name, type, container, pvc, url, windowsTools, size, storageClass, isURLValid } = cd;\n\n  return (\n    <div>\n      <Text component={TextVariants.h4}>{`Drive ${index + 1}`}</Text>\n      <FormGroup\n        fieldId=\"cd-rom-modal-grid\"\n        className=\"kubevirt-cdrom-modal__grid pf-l-grid pf-m-11-col-on-md\"\n      >\n        <FormGroup label=\"Source\" fieldId=\"cd-rom-modal-type\" className=\"pf-m-3-col-on-md\">\n          <FormSelect\n            value={type}\n            onChange={(v) => onChange(name, 'type', v)}\n            id={`cd-rom-modal-select-type-${name}`}\n          >\n            <FormSelectOption key=\"container-option\" value=\"container\" label=\"Container\" />\n            <FormSelectOption key=\"pvc-option\" value=\"pvc\" label=\"Attach Disk\" />\n            <FormSelectOption key=\"url-option\" value=\"url\" label=\"URL\" />\n            {isWindows && (\n              <FormSelectOption\n                key=\"wintools-option\"\n                value=\"windowsTools\"\n                label=\"Windows guest tools\"\n              />\n            )}\n          </FormSelect>\n        </FormGroup>\n        {type === StorageType.URL && (\n          <>\n            <FormGroup\n              label=\"URL\"\n              className=\"pf-m-3-col-on-md\"\n              fieldId=\"cd-rom-modal-url\"\n              id={`cd-url-text-input-${name}`}\n              isValid={isURLValid}\n              helperTextInvalid=\"Invalid URL\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                value={url}\n                onChange={(v) => onChange(name, StorageType.URL, v)}\n                aria-label=\"url path\"\n              />\n            </FormGroup>\n            <FormGroup\n              id={`cd-url-size-input-${name}`}\n              label=\"Size (GiB)\"\n              className=\"pf-m-2-col-on-md\"\n              fieldId=\"cd-rom-modal-cdsize\"\n            >\n              <TextInput\n                isRequired\n                type=\"text\"\n                value={size}\n                onChange={(v) => onChange(name, CD_SIZE, v)}\n                aria-label=\"cd size\"\n              />\n            </FormGroup>\n            <div className=\"pf-m-3-col-on-md\">\n              <K8sResourceSelectRow\n                key=\"storage-class\"\n                id={`cd-url-storageclass-input-${name}`}\n                isDisabled={inProgress}\n                name={storageClass}\n                data={storageClasses}\n                model={StorageClassModel}\n                hasPlaceholder\n                onChange={(sc) => onChange(name, CD_STORAGE_CLASS, sc)}\n              />\n            </div>\n          </>\n        )}\n        {type === StorageType.CONTAINER && (\n          <FormGroup\n            className=\"pf-m-8-col-on-md\"\n            label=\"Container\"\n            fieldId=\"cd-rom-modal-container\"\n            id={`cdrom-container-input-${name}`}\n          >\n            <TextInput\n              isRequired\n              type=\"text\"\n              value={container}\n              onChange={(v) => onChange(name, StorageType.CONTAINER, v)}\n              aria-label=\"container path\"\n            />\n          </FormGroup>\n        )}\n        {type === StorageType.PVC && (\n          <div className=\"pf-m-8-col-on-md\">\n            <K8sResourceSelectRow\n              key=\"pvc-select\"\n              title=\"Attach Disk\"\n              id={`cdrom-pvc-input-${name}`}\n              isDisabled={inProgress}\n              name={pvc}\n              data={pvcs}\n              model={PersistentVolumeClaimModel}\n              hasPlaceholder\n              isPlaceholderDisabled\n              onChange={(p) => onChange(name, StorageType.PVC, p)}\n              filter={(p) => !_.includes(_.without(usedPVCs, pvc), getName(p))}\n            />\n          </div>\n        )}\n        {type === StorageType.WINTOOLS && (\n          <FormGroup\n            label=\"Windows guest tools\"\n            id={`cdrom-wintools-input-${name}`}\n            className=\"pf-m-8-col-on-md\"\n            fieldId=\"cd-rom-modal-wintools\"\n          >\n            <FormSelect\n              aria-label=\"cd-rom-wintools-label\"\n              value={windowsTools}\n              onChange={(v) => onChange(name, StorageType.WINTOOLS, v)}\n            >\n              <FormSelectPlaceholderOption placeholder=\"--- Select Windows Tools Container ---\" />\n              <FormSelectOption\n                key={winToolsContainer}\n                value={winToolsContainer}\n                label={winToolsContainer}\n              />\n            </FormSelect>\n          </FormGroup>\n        )}\n        <div className=\"kubevirt-cdrom-modal__delete pf-m-1-col-on-md\">\n          <Button onClick={() => onDelete(name)} variant=\"plain\">\n            <MinusCircleIcon />\n          </Button>\n        </div>\n      </FormGroup>\n    </div>\n  );\n};\n\nexport type CDRomRowProps = {\n  cd: CD;\n  pvcs: FirehoseResult<VMKind[]>;\n  storageClasses: FirehoseResult<VMKind[]>;\n  winToolsContainer: string;\n  usedPVCs: string[];\n  index: number;\n  onChange: (cdName: string, key: string, value: string) => void;\n  onDelete: (cdName: any) => void;\n  isWindows: boolean;\n  inProgress: boolean;\n};\n"]}]}