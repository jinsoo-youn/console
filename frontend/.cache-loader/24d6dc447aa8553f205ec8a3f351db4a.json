{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/withEditReviewAccess.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/withEditReviewAccess.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../topology-utils';\nexport const withEditReviewAccess = (verb) => (WrappedComponent) => {\n    const Component = (props) => {\n        const resourceObj = getTopologyResourceObject(props.element.getData());\n        const resourceModel = modelFor(referenceFor(resourceObj));\n        const editAccess = useAccessReview({\n            group: resourceModel.apiGroup,\n            verb,\n            resource: resourceModel.plural,\n            name: resourceObj.metadata.name,\n            namespace: resourceObj.metadata.namespace,\n        });\n        return React.createElement(WrappedComponent, Object.assign({}, props, { canEdit: editAccess }));\n    };\n    return observer(Component);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/withEditReviewAccess.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/withEditReviewAccess.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAW,MAAM,8BAA8B,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EAAE,yBAAyB,EAAE,MAAM,mBAAmB,CAAC;AAM9D,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,IAAa,EAAE,EAAE,CAAC,CAAC,gBAAqC,EAAE,EAAE;IAC/F,MAAM,SAAS,GAA6B,CAAC,KAAK,EAAE,EAAE;QACpD,MAAM,WAAW,GAAG,yBAAyB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QACvE,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;QAC1D,MAAM,UAAU,GAAG,eAAe,CAAC;YACjC,KAAK,EAAE,aAAa,CAAC,QAAQ;YAC7B,IAAI;YACJ,QAAQ,EAAE,aAAa,CAAC,MAAM;YAC9B,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI;YAC/B,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS;SAC1C,CAAC,CAAC;QACH,OAAO,oBAAC,gBAAgB,oBAAM,KAAa,IAAE,OAAO,EAAE,UAAU,IAAI,CAAC;IACvE,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { Node } from '@console/topology';\nimport { getTopologyResourceObject } from '../topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getTopologyResourceObject(props.element.getData());\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  return observer(Component);\n};\n"]}]}