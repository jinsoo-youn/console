{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/requests/vm/clone.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/requests/vm/clone.ts","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { VirtualMachineModel } from '../../../models';\nimport { VMClone } from '../../helpers/vm-clone';\nimport { isVMExpectedRunning } from '../../../selectors/vm';\nimport { stopVM } from './actions';\nexport const cloneVM = ({ vm, persistentVolumeClaims, dataVolumes }, cloneTo) => __awaiter(void 0, void 0, void 0, function* () {\n    if (isVMExpectedRunning(vm)) {\n        yield stopVM(vm);\n    }\n    const vmClone = new VMClone(vm, cloneTo)\n        .withClonedPVCs(persistentVolumeClaims)\n        .withClonedDataVolumes(dataVolumes)\n        .build();\n    return k8sCreate(VirtualMachineModel, vmClone);\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/requests/vm/clone.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/requests/vm/clone.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAmB,MAAM,8BAA8B,CAAC;AAE1E,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAW,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAQnC,MAAM,CAAC,MAAM,OAAO,GAAG,CACrB,EAAE,EAAE,EAAE,sBAAsB,EAAE,WAAW,EAAa,EACtD,OAAgB,EAChB,EAAE;IACF,IAAI,mBAAmB,CAAC,EAAE,CAAC,EAAE;QAC3B,MAAM,MAAM,CAAC,EAAE,CAAC,CAAC;KAClB;IAED,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC;SACrC,cAAc,CAAC,sBAAsB,CAAC;SACtC,qBAAqB,CAAC,WAAW,CAAC;SAClC,KAAK,EAAE,CAAC;IAEX,OAAO,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AACjD,CAAC,CAAA,CAAC","sourcesContent":["import { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { VMKind } from '../../../types/vm';\nimport { VirtualMachineModel } from '../../../models';\nimport { CloneTo, VMClone } from '../../helpers/vm-clone';\nimport { isVMExpectedRunning } from '../../../selectors/vm';\nimport { stopVM } from './actions';\n\ntype CloneFrom = {\n  vm: VMKind;\n  persistentVolumeClaims: K8sResourceKind[];\n  dataVolumes: K8sResourceKind[];\n};\n\nexport const cloneVM = async (\n  { vm, persistentVolumeClaims, dataVolumes }: CloneFrom,\n  cloneTo: CloneTo,\n) => {\n  if (isVMExpectedRunning(vm)) {\n    await stopVM(vm);\n  }\n\n  const vmClone = new VMClone(vm, cloneTo)\n    .withClonedPVCs(persistentVolumeClaims)\n    .withClonedDataVolumes(dataVolumes)\n    .build();\n\n  return k8sCreate(VirtualMachineModel, vmClone);\n};\n"]}]}