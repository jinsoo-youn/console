{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Formik } from 'formik';\nimport { createModalLauncher, } from '@console/internal/components/factory/modal';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { addTriggerSchema } from '../common/validation-utils';\nimport AddTriggerForm from './AddTriggerForm';\nimport { TRIGGER_BINDING_EMPTY } from './const';\nimport { submitTrigger } from './submit-utils';\nconst AddTriggerModal = ({ pipeline, close }) => {\n    const initialValues = Object.assign(Object.assign({}, convertPipelineToModalData(pipeline, true)), { triggerBinding: {\n            name: TRIGGER_BINDING_EMPTY,\n            resource: null,\n        } });\n    const handleSubmit = (values, actions) => {\n        actions.setSubmitting(true);\n        submitTrigger(pipeline, values)\n            .then(() => {\n            actions.setSubmitting(false);\n            close();\n        })\n            .catch((error) => {\n            actions.setStatus({ submitError: (error === null || error === void 0 ? void 0 : error.message) || 'There was an unknown error' });\n        });\n    };\n    return (React.createElement(Formik, { initialValues: initialValues, onSubmit: handleSubmit, validationSchema: addTriggerSchema }, (props) => (React.createElement(ModalStructure, Object.assign({ submitBtnText: \"Add\", title: \"Add Trigger\", close: close }, props),\n        React.createElement(AddTriggerForm, Object.assign({}, props))))));\n};\nexport default createModalLauncher(AddTriggerModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/AddTriggerModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,EACL,mBAAmB,GAEpB,MAAM,4CAA4C,CAAC;AAEpD,OAAO,cAAc,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAC9D,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAO/C,MAAM,eAAe,GAAmC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE;IAC9E,MAAM,aAAa,mCACd,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,KAC7C,cAAc,EAAE;YACd,IAAI,EAAE,qBAAqB;YAC3B,QAAQ,EAAE,IAAI;SACf,GACF,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,MAA4B,EAAE,OAAO,EAAE,EAAE;QAC7D,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE5B,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC;aAC5B,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7B,KAAK,EAAE,CAAC;QACV,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,4BAA4B,EAAE,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,MAAM,IACL,aAAa,EAAE,aAAa,EAC5B,QAAQ,EAAE,YAAY,EACtB,gBAAgB,EAAE,gBAAgB,IAEjC,CAAC,KAAK,EAAE,EAAE,CAAC,CACV,oBAAC,cAAc,kBAAC,aAAa,EAAC,KAAK,EAAC,KAAK,EAAC,aAAa,EAAC,KAAK,EAAE,KAAK,IAAM,KAAK;QAC7E,oBAAC,cAAc,oBAAK,KAAK,EAAI,CACd,CAClB,CACM,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Formik } from 'formik';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { Pipeline } from '../../../../utils/pipeline-augment';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { addTriggerSchema } from '../common/validation-utils';\nimport AddTriggerForm from './AddTriggerForm';\nimport { TRIGGER_BINDING_EMPTY } from './const';\nimport { submitTrigger } from './submit-utils';\nimport { AddTriggerFormValues } from './types';\n\ntype AddTriggerModalProps = ModalComponentProps & {\n  pipeline: Pipeline;\n};\n\nconst AddTriggerModal: React.FC<AddTriggerModalProps> = ({ pipeline, close }) => {\n  const initialValues: AddTriggerFormValues = {\n    ...convertPipelineToModalData(pipeline, true),\n    triggerBinding: {\n      name: TRIGGER_BINDING_EMPTY,\n      resource: null,\n    },\n  };\n\n  const handleSubmit = (values: AddTriggerFormValues, actions) => {\n    actions.setSubmitting(true);\n\n    submitTrigger(pipeline, values)\n      .then(() => {\n        actions.setSubmitting(false);\n        close();\n      })\n      .catch((error) => {\n        actions.setStatus({ submitError: error?.message || 'There was an unknown error' });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={addTriggerSchema}\n    >\n      {(props) => (\n        <ModalStructure submitBtnText=\"Add\" title=\"Add Trigger\" close={close} {...props}>\n          <AddTriggerForm {...props} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(AddTriggerModal);\n"]}]}