{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/operators-topology-model.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/operators-topology-model.ts","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { TYPE_OPERATOR_BACKED_SERVICE, OPERATOR_GROUP_WIDTH, OPERATOR_GROUP_HEIGHT, OPERATOR_GROUP_PADDING } from './components/const';\nimport { dataObjectFromModel } from '../data-transforms/transform-utils';\nimport { NodeShape } from '@console/topology/src/types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorGroupModel = (d, model, filters) => {\n    return null;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorNodeModel = (d, model, filters) => {\n    if (d.type === TYPE_OPERATOR_BACKED_SERVICE) {\n        const data = model.topology[d.id] || dataObjectFromModel(d);\n        data.groupResources = d.children && d.children.map(id => model.topology[id]);\n        return {\n            width: OPERATOR_GROUP_WIDTH,\n            height: OPERATOR_GROUP_HEIGHT,\n            id: d.id,\n            type: d.type,\n            label: model.topology[d.id].name,\n            data,\n            visible: true,\n            collapsed: filters && d.type === TYPE_OPERATOR_BACKED_SERVICE && !filters.display.operatorGrouping,\n            children: d.children,\n            group: true,\n            shape: NodeShape.rect,\n            style: {\n                padding: OPERATOR_GROUP_PADDING,\n            },\n        };\n    }\n    return null;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorEdgeModel = (d, model, filters) => {\n    return null;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/operators-topology-model.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/operators-topology-model.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,4BAA4B,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;AACvI,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;AAExD,6DAA6D;AAC7D,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,CAAQ,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IAC/F,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,6DAA6D;AAC7D,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAO,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IAC7F,IAAI,CAAC,CAAC,IAAI,KAAK,4BAA4B,EAAE;QAC3C,MAAM,IAAI,GAAuB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7E,OAAO;YACL,KAAK,EAAE,oBAAoB;YAC3B,MAAM,EAAE,qBAAqB;YAC7B,EAAE,EAAE,CAAC,CAAC,EAAE;YACR,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI;YAChC,IAAI;YACJ,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,4BAA4B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB;YAClG,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,SAAS,CAAC,IAAI;YACrB,KAAK,EAAE;gBACL,OAAO,EAAE,sBAAsB;aAChC;SACF,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,6DAA6D;AAC7D,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAO,EAAE,KAAgB,EAAE,OAAgB,EAAa,EAAE;IAC7F,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import { NodeModel, EdgeModel } from '@console/topology';\nimport { TopologyFilters as Filters } from '../filters';\nimport { TopologyDataModel as DataModel, TopologyDataObject, Node, Group, Edge } from '../topology-types';\nimport { TYPE_OPERATOR_BACKED_SERVICE, OPERATOR_GROUP_WIDTH, OPERATOR_GROUP_HEIGHT, OPERATOR_GROUP_PADDING } from './components/const';\nimport { dataObjectFromModel } from '../data-transforms/transform-utils';\nimport { NodeShape } from '@console/topology/src/types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorGroupModel = (d: Group, model: DataModel, filters: Filters): NodeModel => {\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorNodeModel = (d: Node, model: DataModel, filters: Filters): NodeModel => {\n  if (d.type === TYPE_OPERATOR_BACKED_SERVICE) {\n    const data: TopologyDataObject = model.topology[d.id] || dataObjectFromModel(d);\n    data.groupResources = d.children && d.children.map(id => model.topology[id]);\n    return {\n      width: OPERATOR_GROUP_WIDTH,\n      height: OPERATOR_GROUP_HEIGHT,\n      id: d.id,\n      type: d.type,\n      label: model.topology[d.id].name,\n      data,\n      visible: true,\n      collapsed: filters && d.type === TYPE_OPERATOR_BACKED_SERVICE && !filters.display.operatorGrouping,\n      children: d.children,\n      group: true,\n      shape: NodeShape.rect,\n      style: {\n        padding: OPERATOR_GROUP_PADDING,\n      },\n    };\n  }\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getOperatorEdgeModel = (d: Edge, model: DataModel, filters: Filters): EdgeModel => {\n  return null;\n};\n"]}]}