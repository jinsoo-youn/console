{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/namespace-redirect.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/namespace-redirect.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\nconst appendActiveNamespace = (namespace, pathname) => {\n    const basePath = pathname.replace(/\\/$/, '');\n    return namespace === ALL_NAMESPACES_KEY\n        ? `${basePath}/all-namespaces`\n        : `${basePath}/ns/${namespace}`;\n};\nconst NamespaceRedirect_ = ({ activeNamespace, location: { pathname }, }) => React.createElement(Redirect, { to: appendActiveNamespace(activeNamespace, pathname) + location.search });\nconst mapStateToProps = (state) => {\n    return {\n        activeNamespace: state.UI.get('activeNamespace'),\n    };\n};\nexport const NamespaceRedirect = connect(mapStateToProps)(NamespaceRedirect_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/namespace-redirect.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/namespace-redirect.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAuB,MAAM,kBAAkB,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAGnE,MAAM,qBAAqB,GAAG,CAAC,SAAiB,EAAE,QAAgB,EAAU,EAAE;IAC5E,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC7C,OAAO,SAAS,KAAK,kBAAkB;QACrC,CAAC,CAAC,GAAG,QAAQ,iBAAiB;QAC9B,CAAC,CAAC,GAAG,QAAQ,OAAO,SAAS,EAAE,CAAC;AACpC,CAAC,CAAC;AAQF,MAAM,kBAAkB,GAAqC,CAAC,EAC5D,eAAe,EACf,QAAQ,EAAE,EAAE,QAAQ,EAAE,GACvB,EAAE,EAAE,CAAC,oBAAC,QAAQ,IAAC,EAAE,EAAE,qBAAqB,CAAC,eAAe,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAI,CAAC;AAE3F,MAAM,eAAe,GAAG,CAAC,KAAgB,EAAc,EAAE;IACvD,OAAO;QACL,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC;KACjD,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\nimport { RootState } from '../../redux';\n\nconst appendActiveNamespace = (namespace: string, pathname: string): string => {\n  const basePath = pathname.replace(/\\/$/, '');\n  return namespace === ALL_NAMESPACES_KEY\n    ? `${basePath}/all-namespaces`\n    : `${basePath}/ns/${namespace}`;\n};\n\ninterface StateProps {\n  activeNamespace: string;\n}\n\nexport type NamespaceRedirectProps = StateProps & RouteComponentProps;\n\nconst NamespaceRedirect_: React.FC<NamespaceRedirectProps> = ({\n  activeNamespace,\n  location: { pathname },\n}) => <Redirect to={appendActiveNamespace(activeNamespace, pathname) + location.search} />;\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    activeNamespace: state.UI.get('activeNamespace'),\n  };\n};\n\nexport const NamespaceRedirect = connect(mapStateToProps)(NamespaceRedirect_);\n"]}]}