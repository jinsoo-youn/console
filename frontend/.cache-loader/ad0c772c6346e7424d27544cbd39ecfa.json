{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/with-dashboard-resources.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/with-dashboard-resources.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { stopWatchPrometheusQuery, stopWatchURL, watchPrometheusQuery, watchURL, getQueryKey, } from '../../actions/dashboards';\nimport { Firehose } from '../utils';\nconst mapDispatchToProps = (dispatch) => ({\n    watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n    stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n    watchPrometheusQuery: (query, namespace, timespan) => dispatch(watchPrometheusQuery(query, namespace, timespan)),\n    stopWatchPrometheusQuery: (query, timespan) => dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\nconst mapStateToProps = (state) => ({\n    [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n    [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS),\n    notificationAlerts: state.UI.getIn(['monitoring', 'notificationAlerts']),\n});\nexport const withDashboardResources = (WrappedComponent) => connect(mapStateToProps, mapDispatchToProps)(class WithDashboardResources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.urls = [];\n        this.queries = [];\n        this.watchingAlerts = false;\n        this.watchURL = (url, fetch) => {\n            this.urls.push(url);\n            this.props.watchURL(url, fetch);\n        };\n        this.watchPrometheus = (query, namespace, timespan) => {\n            this.queries.push(getQueryKey(query, timespan));\n            this.props.watchPrometheusQuery(query, namespace, timespan);\n        };\n        this.stopWatchPrometheusQuery = (query, timespan) => {\n            const queryKey = getQueryKey(query, timespan);\n            this.queries = this.queries.filter((q) => q !== queryKey);\n            this.props.stopWatchPrometheusQuery(query, timespan);\n        };\n        this.watchAlerts = () => {\n            this.watchingAlerts = true;\n        };\n        this.stopWatchAlerts = () => {\n            this.watchingAlerts = false;\n        };\n        this.watchK8sResource = (resource) => {\n            this.setState((state) => ({\n                k8sResources: [...state.k8sResources, Object.assign(Object.assign({}, resource), { optional: true })],\n            }));\n        };\n        this.stopWatchK8sResource = (resource) => {\n            this.setState((state) => ({\n                k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n            }));\n        };\n        this.getExternalProps = (props) => {\n            return _.omit(props, 'watchURL', 'stopWatchURL', 'watchPrometheusQuery', 'stopWatchPrometheusQuery', 'watchAlerts', 'stopWatchAlerts', RESULTS_TYPE.URL, RESULTS_TYPE.PROMETHEUS, 'notificationAlerts');\n        };\n        this.state = {\n            k8sResources: [],\n        };\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        var _a, _b, _c, _d, _e, _f;\n        const urlResultChanged = this.urls.some((urlKey) => this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n            nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n                nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']));\n        const queryResultChanged = this.queries.some((query) => this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n            nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n                nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']));\n        const alertsResultChanged = ((_b = (_a = this.props) === null || _a === void 0 ? void 0 : _a.notificationAlerts) === null || _b === void 0 ? void 0 : _b.data) !== ((_c = nextProps === null || nextProps === void 0 ? void 0 : nextProps.notificationAlerts) === null || _c === void 0 ? void 0 : _c.data) ||\n            ((_e = (_d = this.props) === null || _d === void 0 ? void 0 : _d.notificationAlerts) === null || _e === void 0 ? void 0 : _e.loadError) !== ((_f = nextProps === null || nextProps === void 0 ? void 0 : nextProps.notificationAlerts) === null || _f === void 0 ? void 0 : _f.loadError);\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n        return (urlResultChanged ||\n            queryResultChanged ||\n            k8sResourcesChanged ||\n            (this.watchingAlerts && alertsResultChanged) ||\n            Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n            Object.keys(nextExternalProps).some((key) => nextExternalProps[key] !== externalProps[key]));\n    }\n    render() {\n        return (React.createElement(Firehose, { resources: this.state.k8sResources },\n            React.createElement(WrappedComponent, Object.assign({ watchURL: this.watchURL, stopWatchURL: this.props.stopWatchURL, watchPrometheus: this.watchPrometheus, stopWatchPrometheusQuery: this.stopWatchPrometheusQuery, watchAlerts: this.watchAlerts, stopWatchAlerts: this.stopWatchAlerts, urlResults: this.props[RESULTS_TYPE.URL], prometheusResults: this.props[RESULTS_TYPE.PROMETHEUS], notificationAlerts: this.props.notificationAlerts, watchK8sResource: this.watchK8sResource, stopWatchK8sResource: this.stopWatchK8sResource }, this.getExternalProps(this.props)))));\n    }\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/with-dashboard-resources.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/with-dashboard-resources.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE, RequestMap } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/ui';\nimport {\n  Fetch,\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.UI.getIn(['monitoring', 'notificationAlerts']),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]: FirehoseResult | FirehoseResult<K8sResourceKind>;\n  };\n};\n"]}]}