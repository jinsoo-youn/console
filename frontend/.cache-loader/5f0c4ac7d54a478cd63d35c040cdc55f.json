{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/transformResourceData.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/transformResourceData.ts","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { createDaemonSetItems, createDeploymentConfigItems, createDeploymentItems, createPodItems, createStatefulSetItems, getBuildConfigsForResource, getPodsForDeploymentConfigs, getPodsForDeployments, getReplicaSetsForResource, getRoutesForServices, getServicesForResource, } from './resource-utils';\nexport class TransformResourceData {\n    constructor(resources, utils, installedOperators) {\n        this.utils = utils;\n        this.installedOperators = installedOperators;\n        this.getReplicaSetsForResource = (deployment) => getReplicaSetsForResource(deployment, this.resources);\n        this.getBuildConfigsForResource = (resource) => getBuildConfigsForResource(resource, this.resources);\n        this.getRoutesForServices = (services) => getRoutesForServices(services, this.resources);\n        this.getServicesForResource = (resource) => getServicesForResource(resource, this.resources);\n        this.createDeploymentConfigItems = (deploymentConfigs, operatorsFilter) => createDeploymentConfigItems(deploymentConfigs, this.resources, this.installedOperators, this.utils, operatorsFilter);\n        this.createDeploymentItems = (deployments, operatorsFilter) => createDeploymentItems(deployments, this.resources, this.installedOperators, this.utils, operatorsFilter);\n        this.createDaemonSetItems = (daemonSets, operatorsFilter) => createDaemonSetItems(daemonSets, this.resources, this.installedOperators, this.utils, operatorsFilter);\n        this.createStatefulSetItems = (statefulSets, operatorsFilter) => createStatefulSetItems(statefulSets, this.resources, this.installedOperators, this.utils, operatorsFilter);\n        this.createPodItems = () => createPodItems(this.resources);\n        this.getPodsForDeploymentConfigs = (deploymentConfigs) => getPodsForDeploymentConfigs(deploymentConfigs, this.resources);\n        this.getPodsForDeployments = (deployments) => getPodsForDeployments(deployments, this.resources);\n        this.resources = Object.assign({}, resources);\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/transformResourceData.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/transformResourceData.ts"],"names":[],"mappings":"AAQA,OAAO,EACL,oBAAoB,EACpB,2BAA2B,EAC3B,qBAAqB,EACrB,cAAc,EACd,sBAAsB,EACtB,0BAA0B,EAC1B,2BAA2B,EAC3B,qBAAqB,EACrB,yBAAyB,EACzB,oBAAoB,EACpB,sBAAsB,GACvB,MAAM,kBAAkB,CAAC;AAE1B,MAAM,OAAO,qBAAqB;IAGhC,YACE,SAAc,EACP,KAAkB,EAClB,kBAAgD;QADhD,UAAK,GAAL,KAAK,CAAa;QAClB,uBAAkB,GAAlB,kBAAkB,CAA8B;QAKlD,8BAAyB,GAAG,CAAC,UAA2B,EAA+B,EAAE,CAC9F,yBAAyB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEjD,+BAA0B,GAAG,CAAC,QAAyB,EAA6B,EAAE,CAC3F,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEhD,yBAAoB,GAAG,CAAC,QAA2B,EAAe,EAAE,CACzE,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1C,2BAAsB,GAAG,CAAC,QAAyB,EAAqB,EAAE,CAC/E,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5C,gCAA2B,GAAG,CACnC,iBAAoC,EACpC,eAAyB,EACT,EAAE,CAClB,2BAA2B,CACzB,iBAAiB,EACjB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,KAAK,EACV,eAAe,CAChB,CAAC;QAEG,0BAAqB,GAAG,CAC7B,WAA6B,EAC7B,eAAyB,EACO,EAAE,CAClC,qBAAqB,CACnB,WAAW,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,KAAK,EACV,eAAe,CAChB,CAAC;QAEG,yBAAoB,GAAG,CAC5B,UAA6B,EAC7B,eAAyB,EACT,EAAE,CAClB,oBAAoB,CAClB,UAAU,EACV,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,KAAK,EACV,eAAe,CAChB,CAAC;QAEG,2BAAsB,GAAG,CAC9B,YAA+B,EAC/B,eAAyB,EACT,EAAE,CAClB,sBAAsB,CACpB,YAAY,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,KAAK,EACV,eAAe,CAChB,CAAC;QAEG,mBAAc,GAAG,GAAmB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEtE,gCAA2B,GAAG,CAAC,iBAAoC,EAAe,EAAE,CACzF,2BAA2B,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1D,0BAAqB,GAAG,CAAC,WAA8B,EAAe,EAAE,CAC7E,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QArEnD,IAAI,CAAC,SAAS,qBAAQ,SAAS,CAAE,CAAC;IACpC,CAAC;CAqEF","sourcesContent":["import { DeploymentKind, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  BuildConfigOverviewItem,\n  PodControllerOverviewItem,\n  OverviewItem,\n  PodRCData,\n} from '../types';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager';\nimport {\n  createDaemonSetItems,\n  createDeploymentConfigItems,\n  createDeploymentItems,\n  createPodItems,\n  createStatefulSetItems,\n  getBuildConfigsForResource,\n  getPodsForDeploymentConfigs,\n  getPodsForDeployments,\n  getReplicaSetsForResource,\n  getRoutesForServices,\n  getServicesForResource,\n} from './resource-utils';\n\nexport class TransformResourceData {\n  private resources: any;\n\n  constructor(\n    resources: any,\n    public utils?: Function[],\n    public installedOperators?: ClusterServiceVersionKind[],\n  ) {\n    this.resources = { ...resources };\n  }\n\n  public getReplicaSetsForResource = (deployment: K8sResourceKind): PodControllerOverviewItem[] =>\n    getReplicaSetsForResource(deployment, this.resources);\n\n  public getBuildConfigsForResource = (resource: K8sResourceKind): BuildConfigOverviewItem[] =>\n    getBuildConfigsForResource(resource, this.resources);\n\n  public getRoutesForServices = (services: K8sResourceKind[]): RouteKind[] =>\n    getRoutesForServices(services, this.resources);\n\n  public getServicesForResource = (resource: K8sResourceKind): K8sResourceKind[] =>\n    getServicesForResource(resource, this.resources);\n\n  public createDeploymentConfigItems = (\n    deploymentConfigs: K8sResourceKind[],\n    operatorsFilter?: boolean,\n  ): OverviewItem[] =>\n    createDeploymentConfigItems(\n      deploymentConfigs,\n      this.resources,\n      this.installedOperators,\n      this.utils,\n      operatorsFilter,\n    );\n\n  public createDeploymentItems = (\n    deployments: DeploymentKind[],\n    operatorsFilter?: boolean,\n  ): OverviewItem<DeploymentKind>[] =>\n    createDeploymentItems(\n      deployments,\n      this.resources,\n      this.installedOperators,\n      this.utils,\n      operatorsFilter,\n    );\n\n  public createDaemonSetItems = (\n    daemonSets: K8sResourceKind[],\n    operatorsFilter?: boolean,\n  ): OverviewItem[] =>\n    createDaemonSetItems(\n      daemonSets,\n      this.resources,\n      this.installedOperators,\n      this.utils,\n      operatorsFilter,\n    );\n\n  public createStatefulSetItems = (\n    statefulSets: K8sResourceKind[],\n    operatorsFilter?: boolean,\n  ): OverviewItem[] =>\n    createStatefulSetItems(\n      statefulSets,\n      this.resources,\n      this.installedOperators,\n      this.utils,\n      operatorsFilter,\n    );\n\n  public createPodItems = (): OverviewItem[] => createPodItems(this.resources);\n\n  public getPodsForDeploymentConfigs = (deploymentConfigs: K8sResourceKind[]): PodRCData[] =>\n    getPodsForDeploymentConfigs(deploymentConfigs, this.resources);\n\n  public getPodsForDeployments = (deployments: K8sResourceKind[]): PodRCData[] =>\n    getPodsForDeployments(deployments, this.resources);\n}\n"]}]}