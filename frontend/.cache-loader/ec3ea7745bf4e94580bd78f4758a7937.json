{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { PodStatus } from '@console/shared';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { RevisionModel } from '../../models';\nimport './RevisionsOverviewListItem.scss';\nconst RevisionsOverviewListItem = ({ revision, service, }) => {\n    const { metadata: { name, namespace }, } = revision;\n    const { status: { traffic }, } = service;\n    const getTraffic = (revName) => {\n        if (!traffic || !traffic.length) {\n            return null;\n        }\n        const trafficPercent = traffic\n            .filter((t) => t.revisionName === revName)\n            .map((tr) => tr.percent)\n            .reduce((a, b) => a + b, 0);\n        return trafficPercent ? `${trafficPercent}%` : null;\n    };\n    const deploymentData = _.get(revision, 'resources.current.obj.metadata.ownerReferences[0]', {});\n    const current = _.get(revision, 'resources.current', null);\n    const availableReplicas = _.get(revision, 'resources.current.obj.status.availableReplicas', '0');\n    return (React.createElement(\"li\", { className: \"list-group-item\" },\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-sm-8 col-xs-9\" },\n                React.createElement(ResourceLink, { kind: referenceForModel(RevisionModel), name: name, namespace: namespace })),\n            React.createElement(\"span\", { className: \"col-sm-4 col-xs-3 text-right\" }, getTraffic(name))),\n        deploymentData.name && (React.createElement(\"div\", { className: \"odc-revision-deployment-list\" },\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-8 col-xs-9\" },\n                    React.createElement(ResourceLink, { kind: deploymentData.kind, name: deploymentData.name, namespace: namespace })),\n                React.createElement(\"div\", { className: \"col-sm-4 col-xs-3\" },\n                    React.createElement(\"div\", { className: \"odc-revision-deployment-list__pod\" },\n                        React.createElement(PodStatus, { standalone: true, data: current ? current.pods : [], size: 25, innerRadius: 8, outerRadius: 12, title: availableReplicas, titleComponent: React.createElement(ChartLabel, { style: { fontSize: '10px' } }), showTooltip: false }))))))));\n};\nexport default RevisionsOverviewListItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { PodStatus } from '@console/shared';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { Traffic } from '../../types';\nimport { RevisionModel } from '../../models';\nimport './RevisionsOverviewListItem.scss';\n\nexport type RevisionsOverviewListItemProps = {\n  revision: K8sResourceKind;\n  service: K8sResourceKind;\n};\n\nconst RevisionsOverviewListItem: React.FC<RevisionsOverviewListItemProps> = ({\n  revision,\n  service,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = revision;\n  const {\n    status: { traffic },\n  } = service;\n  const getTraffic = (revName: string) => {\n    if (!traffic || !traffic.length) {\n      return null;\n    }\n    const trafficPercent = traffic\n      .filter((t: Traffic) => t.revisionName === revName)\n      .map((tr: Traffic) => tr.percent)\n      .reduce((a: number, b: number) => a + b, 0);\n\n    return trafficPercent ? `${trafficPercent}%` : null;\n  };\n  const deploymentData = _.get(revision, 'resources.current.obj.metadata.ownerReferences[0]', {});\n  const current = _.get(revision, 'resources.current', null);\n  const availableReplicas = _.get(revision, 'resources.current.obj.status.availableReplicas', '0');\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-sm-8 col-xs-9\">\n          <ResourceLink kind={referenceForModel(RevisionModel)} name={name} namespace={namespace} />\n        </div>\n        <span className=\"col-sm-4 col-xs-3 text-right\">{getTraffic(name)}</span>\n      </div>\n      {deploymentData.name && (\n        <div className=\"odc-revision-deployment-list\">\n          <div className=\"row\">\n            <div className=\"col-sm-8 col-xs-9\">\n              <ResourceLink\n                kind={deploymentData.kind}\n                name={deploymentData.name}\n                namespace={namespace}\n              />\n            </div>\n            <div className=\"col-sm-4 col-xs-3\">\n              <div className=\"odc-revision-deployment-list__pod\">\n                <PodStatus\n                  standalone\n                  data={current ? current.pods : []}\n                  size={25}\n                  innerRadius={8}\n                  outerRadius={12}\n                  title={availableReplicas}\n                  titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n                  showTooltip={false}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default RevisionsOverviewListItem;\n"]}]}