{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/details-card/details-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/details-card/details-card.tsx","mtime":1615298458680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { getInfrastructurePlatform } from '@console/shared';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport DetailItem from '@console/shared/src/components/dashboard/details-card/DetailItem';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { InfrastructureModel } from '@console/internal/models/index';\nimport { SubscriptionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { getOCSVersion } from '@console/ceph-storage-plugin/src/selectors';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { getMetric } from '../../utils';\nconst NOOBAA_SYSTEM_NAME_QUERY = 'NooBaa_system_info';\nconst NOOBAA_DASHBOARD_LINK_QUERY = 'NooBaa_system_links';\nconst SubscriptionResource = {\n    kind: referenceForModel(SubscriptionModel),\n    namespaced: false,\n    prop: 'subscription',\n    isList: true,\n};\nexport const ObjectServiceDetailsCard = ({ watchK8sResource, stopWatchK8sResource, watchPrometheus, stopWatchPrometheusQuery, prometheusResults, resources, }) => {\n    const [infrastructure, infrastructureLoaded, infrastructureError] = useK8sGet(InfrastructureModel, 'cluster');\n    React.useEffect(() => {\n        watchK8sResource(SubscriptionResource);\n        watchPrometheus(NOOBAA_SYSTEM_NAME_QUERY);\n        watchPrometheus(NOOBAA_DASHBOARD_LINK_QUERY);\n        return () => {\n            stopWatchK8sResource(SubscriptionResource);\n            stopWatchPrometheusQuery(NOOBAA_SYSTEM_NAME_QUERY);\n            stopWatchPrometheusQuery(NOOBAA_DASHBOARD_LINK_QUERY);\n        };\n    }, [watchK8sResource, stopWatchK8sResource, watchPrometheus, stopWatchPrometheusQuery]);\n    const systemResult = prometheusResults.getIn([\n        NOOBAA_SYSTEM_NAME_QUERY,\n        'data',\n    ]);\n    const dashboardLinkResult = prometheusResults.getIn([\n        NOOBAA_DASHBOARD_LINK_QUERY,\n        'data',\n    ]);\n    const systemLoadError = prometheusResults.getIn([NOOBAA_SYSTEM_NAME_QUERY, 'loadError']);\n    const dashboardLinkLoadError = prometheusResults.getIn([\n        NOOBAA_DASHBOARD_LINK_QUERY,\n        'loadError',\n    ]);\n    const systemName = getMetric(systemResult, 'system_name');\n    const systemLink = getMetric(dashboardLinkResult, 'dashboard');\n    const infrastructurePlatform = getInfrastructurePlatform(infrastructure);\n    const subscription = _.get(resources, 'subscription');\n    const subscriptionLoaded = _.get(subscription, 'loaded');\n    const ocsVersion = getOCSVersion(subscription);\n    return (React.createElement(DashboardCard, null,\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Details\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(DetailsBody, null,\n                React.createElement(DetailItem, { key: \"service_name\", title: \"Service Name\", error: false, isLoading: false }, \"OpenShift Container Storage (OCS)\"),\n                React.createElement(DetailItem, { key: \"system_name\", title: \"System Name\", isLoading: !systemResult || !dashboardLinkResult, error: systemLoadError || dashboardLinkLoadError || !systemName || !systemLink },\n                    React.createElement(ExternalLink, { href: systemLink, text: systemName })),\n                React.createElement(DetailItem, { key: \"provider\", title: \"Provider\", error: !!infrastructureError || (infrastructure && !infrastructurePlatform), isLoading: !infrastructureLoaded }, infrastructurePlatform),\n                React.createElement(DetailItem, { key: \"version\", title: \"Version\", isLoading: !subscriptionLoaded, error: subscriptionLoaded && !ocsVersion }, ocsVersion)))));\n};\nexport const DetailsCard = withDashboardResources(ObjectServiceDetailsCard);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/details-card/details-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/details-card/details-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { getInfrastructurePlatform } from '@console/shared';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport DetailItem from '@console/shared/src/components/dashboard/details-card/DetailItem';\nimport {\n  DashboardItemProps,\n  withDashboardResources,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { FirehoseResource, ExternalLink, FirehoseResult } from '@console/internal/components/utils';\nimport { InfrastructureModel } from '@console/internal/models/index';\nimport { SubscriptionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getOCSVersion } from '@console/ceph-storage-plugin/src/selectors';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { getMetric } from '../../utils';\n\nconst NOOBAA_SYSTEM_NAME_QUERY = 'NooBaa_system_info';\nconst NOOBAA_DASHBOARD_LINK_QUERY = 'NooBaa_system_links';\n\nconst SubscriptionResource: FirehoseResource = {\n  kind: referenceForModel(SubscriptionModel),\n  namespaced: false,\n  prop: 'subscription',\n  isList: true,\n};\n\nexport const ObjectServiceDetailsCard: React.FC<DashboardItemProps> = ({\n  watchK8sResource,\n  stopWatchK8sResource,\n  watchPrometheus,\n  stopWatchPrometheusQuery,\n  prometheusResults,\n  resources,\n}) => {\n  const [infrastructure, infrastructureLoaded, infrastructureError] = useK8sGet<K8sResourceKind>(\n    InfrastructureModel,\n    'cluster',\n  );\n  React.useEffect(() => {\n    watchK8sResource(SubscriptionResource);\n    watchPrometheus(NOOBAA_SYSTEM_NAME_QUERY);\n    watchPrometheus(NOOBAA_DASHBOARD_LINK_QUERY);\n    return () => {\n      stopWatchK8sResource(SubscriptionResource);\n      stopWatchPrometheusQuery(NOOBAA_SYSTEM_NAME_QUERY);\n      stopWatchPrometheusQuery(NOOBAA_DASHBOARD_LINK_QUERY);\n    };\n  }, [watchK8sResource, stopWatchK8sResource, watchPrometheus, stopWatchPrometheusQuery]);\n\n  const systemResult = prometheusResults.getIn([\n    NOOBAA_SYSTEM_NAME_QUERY,\n    'data',\n  ]) as PrometheusResponse;\n  const dashboardLinkResult = prometheusResults.getIn([\n    NOOBAA_DASHBOARD_LINK_QUERY,\n    'data',\n  ]) as PrometheusResponse;\n  const systemLoadError = prometheusResults.getIn([NOOBAA_SYSTEM_NAME_QUERY, 'loadError']);\n  const dashboardLinkLoadError = prometheusResults.getIn([\n    NOOBAA_DASHBOARD_LINK_QUERY,\n    'loadError',\n  ]);\n\n  const systemName = getMetric(systemResult, 'system_name');\n  const systemLink = getMetric(dashboardLinkResult, 'dashboard');\n\n  const infrastructurePlatform = getInfrastructurePlatform(infrastructure);\n\n  const subscription = _.get(resources, 'subscription') as FirehoseResult;\n  const subscriptionLoaded = _.get(subscription, 'loaded');\n  const ocsVersion = getOCSVersion(subscription);\n\n  return (\n    <DashboardCard>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Details</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <DetailsBody>\n          <DetailItem key=\"service_name\" title=\"Service Name\" error={false} isLoading={false}>\n            OpenShift Container Storage (OCS)\n          </DetailItem>\n          <DetailItem\n            key=\"system_name\"\n            title=\"System Name\"\n            isLoading={!systemResult || !dashboardLinkResult}\n            error={systemLoadError || dashboardLinkLoadError || !systemName || !systemLink}\n          >\n            <ExternalLink href={systemLink} text={systemName} />\n          </DetailItem>\n          <DetailItem\n            key=\"provider\"\n            title=\"Provider\"\n            error={!!infrastructureError || (infrastructure && !infrastructurePlatform)}\n            isLoading={!infrastructureLoaded}\n          >\n            {infrastructurePlatform}\n          </DetailItem>\n          <DetailItem\n            key=\"version\"\n            title=\"Version\"\n            isLoading={!subscriptionLoaded}\n            error={subscriptionLoaded && !ocsVersion}\n          >\n            {ocsVersion}\n          </DetailItem>\n        </DetailsBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport const DetailsCard = withDashboardResources(ObjectServiceDetailsCard);\n"]}]}