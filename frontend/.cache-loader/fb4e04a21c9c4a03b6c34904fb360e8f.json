{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/project-dashboard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/project-dashboard.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { LabelSelector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { connect } from 'react-redux';\nimport { ResourceQuotaCard } from './resource-quota-card';\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\nconst mapStateToProps = ({ UI }) => ({\n    consoleLinks: UI.get('consoleLinks'),\n});\nexport const getNamespaceDashboardConsoleLinks = (ns, consoleLinks) => {\n    return _.filter(consoleLinks, (link) => {\n        if (link.spec.location !== 'NamespaceDashboard') {\n            return false;\n        }\n        const namespaces = _.get(link, 'spec.namespaceDashboard.namespaces');\n        const selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n        // If neither namespaces or selector was provided, show the link for all namespaces.\n        if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n            return true;\n        }\n        // Show the link if either namespaces or the selector matches this namespace.\n        if (_.includes(namespaces, ns.metadata.name)) {\n            return true;\n        }\n        return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n    });\n};\nconst ProjectDashboard_ = ({ obj, consoleLinks, }) => {\n    const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n    const context = {\n        obj,\n        namespaceLinks,\n    };\n    const hasNamespaceLinks = !!namespaceLinks.length;\n    const rc = React.useMemo(() => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards), [hasNamespaceLinks]);\n    return (React.createElement(ProjectDashboardContext.Provider, { value: context },\n        React.createElement(Dashboard, null,\n            React.createElement(DashboardGrid, { mainCards: mainCards, leftCards: leftCards, rightCards: rc }))));\n};\nexport const ProjectDashboard = connect(mapStateToProps)(ProjectDashboard_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/project-dashboard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/project-dashboard/project-dashboard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { K8sResourceKind, LabelSelector, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { connect } from 'react-redux';\nimport { RootState } from '../../../redux';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nconst mapStateToProps = ({ UI }: RootState): ProjectDashboardReduxProps => ({\n  consoleLinks: UI.get('consoleLinks'),\n});\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nconst ProjectDashboard_: React.FC<ProjectDashboardReduxProps & ProjectDashboardProps> = ({\n  obj,\n  consoleLinks,\n}) => {\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <ProjectDashboardContext.Provider value={context}>\n      <Dashboard>\n        <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n      </Dashboard>\n    </ProjectDashboardContext.Provider>\n  );\n};\n\nexport const ProjectDashboard = connect<ProjectDashboardReduxProps, {}, ProjectDashboardProps>(\n  mapStateToProps,\n)(ProjectDashboard_);\n\ntype ProjectDashboardReduxProps = {\n  consoleLinks: K8sResourceKind[];\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n"]}]}