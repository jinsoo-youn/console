{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShellDrawer.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShellDrawer.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Tooltip, Flex, FlexItem, FlexModifiers, Button } from '@patternfly/react-core';\nimport { CloseIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { InlineTechPreviewBadge } from '@console/shared';\nimport Drawer from '@console/shared/src/components/drawer/Drawer';\nimport MinimizeRestoreButton from './MinimizeRestoreButton';\nimport './CloudShellDrawer.scss';\nconst getMastheadHeight = () => {\n    const masthead = document.getElementById('page-main-header');\n    if (!masthead)\n        return 0;\n    const { height } = masthead.getBoundingClientRect();\n    return height;\n};\nconst CloudShellDrawer = ({ children, onClose }) => {\n    const [expanded, setExpanded] = React.useState(true);\n    const onMRButtonClick = (expandedState) => {\n        setExpanded(!expandedState);\n    };\n    const handleChange = (openState) => {\n        setExpanded(openState);\n    };\n    const header = (React.createElement(Flex, { style: { flexGrow: 1 } },\n        React.createElement(FlexItem, { className: \"co-cloud-shell-drawer__heading\" }, \"Command line terminal\"),\n        React.createElement(FlexItem, null,\n            React.createElement(InlineTechPreviewBadge, null)),\n        React.createElement(FlexItem, { breakpointMods: [{ modifier: FlexModifiers['align-right'] }] },\n            React.createElement(Tooltip, { content: \"Open terminal in new tab\" },\n                React.createElement(Button, { variant: \"plain\", component: \"a\", href: \"/terminal\", target: \"_blank\", \"aria-label\": \"Open terminal in new tab\" },\n                    React.createElement(ExternalLinkAltIcon, null))),\n            React.createElement(MinimizeRestoreButton, { minimize: expanded, minimizeText: \"Minimize terminal\", restoreText: \"Restore terminal\", onClick: onMRButtonClick }),\n            React.createElement(Tooltip, { content: \"Close terminal\" },\n                React.createElement(Button, { variant: \"plain\", \"data-test-id\": \"cloudshell-terminal-close\", type: \"button\", onClick: onClose, \"aria-label\": \"Close terminal\" },\n                    React.createElement(CloseIcon, null))))));\n    return (React.createElement(Drawer, { open: expanded, defaultHeight: 365, header: header, maxHeight: `calc(100vh - ${getMastheadHeight()}px)`, onChange: handleChange, resizable: true }, children));\n};\nexport default CloudShellDrawer;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShellDrawer.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShellDrawer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AACxF,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AACzE,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,MAAM,MAAM,8CAA8C,CAAC;AAClE,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAE5D,OAAO,yBAAyB,CAAC;AAMjC,MAAM,iBAAiB,GAAG,GAAW,EAAE;IACrC,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IAC7D,IAAI,CAAC,QAAQ;QAAE,OAAO,CAAC,CAAC;IACxB,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;IACpD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAoC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE;IAClF,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAU,IAAI,CAAC,CAAC;IAC9D,MAAM,eAAe,GAAG,CAAC,aAAsB,EAAE,EAAE;QACjD,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC;IAC9B,CAAC,CAAC;IACF,MAAM,YAAY,GAAG,CAAC,SAAkB,EAAE,EAAE;QAC1C,WAAW,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,MAAM,MAAM,GAAG,CACb,oBAAC,IAAI,IAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;QAC1B,oBAAC,QAAQ,IAAC,SAAS,EAAC,gCAAgC,4BAAiC;QACrF,oBAAC,QAAQ;YACP,oBAAC,sBAAsB,OAAG,CACjB;QACX,oBAAC,QAAQ,IAAC,cAAc,EAAE,CAAC,EAAE,QAAQ,EAAE,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC;YACpE,oBAAC,OAAO,IAAC,OAAO,EAAC,0BAA0B;gBACzC,oBAAC,MAAM,IACL,OAAO,EAAC,OAAO,EACf,SAAS,EAAC,GAAG,EACb,IAAI,EAAC,WAAW,EAChB,MAAM,EAAC,QAAQ,gBACJ,0BAA0B;oBAErC,oBAAC,mBAAmB,OAAG,CAChB,CACD;YACV,oBAAC,qBAAqB,IACpB,QAAQ,EAAE,QAAQ,EAClB,YAAY,EAAC,mBAAmB,EAChC,WAAW,EAAC,kBAAkB,EAC9B,OAAO,EAAE,eAAe,GACxB;YACF,oBAAC,OAAO,IAAC,OAAO,EAAC,gBAAgB;gBAC/B,oBAAC,MAAM,IACL,OAAO,EAAC,OAAO,kBACF,2BAA2B,EACxC,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,OAAO,gBACL,gBAAgB;oBAE3B,oBAAC,SAAS,OAAG,CACN,CACD,CACD,CACN,CACR,CAAC;IACF,OAAO,CACL,oBAAC,MAAM,IACL,IAAI,EAAE,QAAQ,EACd,aAAa,EAAE,GAAG,EAClB,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,gBAAgB,iBAAiB,EAAE,KAAK,EACnD,QAAQ,EAAE,YAAY,EACtB,SAAS,UAER,QAAQ,CACF,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport { Tooltip, Flex, FlexItem, FlexModifiers, Button } from '@patternfly/react-core';\nimport { CloseIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { InlineTechPreviewBadge } from '@console/shared';\nimport Drawer from '@console/shared/src/components/drawer/Drawer';\nimport MinimizeRestoreButton from './MinimizeRestoreButton';\n\nimport './CloudShellDrawer.scss';\n\ntype CloudShellDrawerProps = {\n  onClose: () => void;\n};\n\nconst getMastheadHeight = (): number => {\n  const masthead = document.getElementById('page-main-header');\n  if (!masthead) return 0;\n  const { height } = masthead.getBoundingClientRect();\n  return height;\n};\n\nconst CloudShellDrawer: React.FC<CloudShellDrawerProps> = ({ children, onClose }) => {\n  const [expanded, setExpanded] = React.useState<boolean>(true);\n  const onMRButtonClick = (expandedState: boolean) => {\n    setExpanded(!expandedState);\n  };\n  const handleChange = (openState: boolean) => {\n    setExpanded(openState);\n  };\n  const header = (\n    <Flex style={{ flexGrow: 1 }}>\n      <FlexItem className=\"co-cloud-shell-drawer__heading\">Command line terminal</FlexItem>\n      <FlexItem>\n        <InlineTechPreviewBadge />\n      </FlexItem>\n      <FlexItem breakpointMods={[{ modifier: FlexModifiers['align-right'] }]}>\n        <Tooltip content=\"Open terminal in new tab\">\n          <Button\n            variant=\"plain\"\n            component=\"a\"\n            href=\"/terminal\"\n            target=\"_blank\"\n            aria-label=\"Open terminal in new tab\"\n          >\n            <ExternalLinkAltIcon />\n          </Button>\n        </Tooltip>\n        <MinimizeRestoreButton\n          minimize={expanded}\n          minimizeText=\"Minimize terminal\"\n          restoreText=\"Restore terminal\"\n          onClick={onMRButtonClick}\n        />\n        <Tooltip content=\"Close terminal\">\n          <Button\n            variant=\"plain\"\n            data-test-id=\"cloudshell-terminal-close\"\n            type=\"button\"\n            onClick={onClose}\n            aria-label=\"Close terminal\"\n          >\n            <CloseIcon />\n          </Button>\n        </Tooltip>\n      </FlexItem>\n    </Flex>\n  );\n  return (\n    <Drawer\n      open={expanded}\n      defaultHeight={365}\n      header={header}\n      maxHeight={`calc(100vh - ${getMastheadHeight()}px)`}\n      onChange={handleChange}\n      resizable\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default CloudShellDrawer;\n"]}]}