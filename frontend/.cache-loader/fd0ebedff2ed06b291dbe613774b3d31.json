{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/job.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/job.tsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { Status } from '@console/shared';\nimport { getJobTypeAndCompletions } from '../module/k8s';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { configureJobParallelismModal } from './modals';\nimport { ContainerTable, DetailsItem, Kebab, LabelList, PodsComponent, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, navFactory, pluralize } from './utils';\nimport { ResourceEventStream } from './events';\nimport { JobModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\nconst ModifyJobParallelism = (kind, obj) => {\n    const { t } = useTranslation();\n    return {\n        label: t('COMMON:MSG_MAIN_ACTIONBUTTON_10'),\n        callback: () => configureJobParallelismModal({\n            resourceKind: kind,\n            resource: obj,\n        }),\n        accessReview: {\n            group: kind.apiGroup,\n            resource: kind.plural,\n            name: obj.metadata.name,\n            namespace: obj.metadata.namespace,\n            verb: 'patch',\n        },\n    };\n};\nconst menuActions = [ModifyJobParallelism, ...Kebab.getExtensionsActionsForKind(JobModel), ...Kebab.factory.common];\nconst kind = 'Job';\nconst tableColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-1', 'hidden-md', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\nconst JobTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_22'),\n            sortFunc: 'jobCompletions',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_17'),\n            sortFunc: 'jobType',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortFunc: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[6] },\n        },\n    ];\n};\nJobTableHeader.displayName = 'JobTableHeader';\nconst JobTableRow = ({ obj: job, index, key, style }) => {\n    const { type, completions } = getJobTypeAndCompletions(job);\n    return (React.createElement(TableRow, { id: job.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: job.metadata.name, namespace: job.metadata.namespace, title: job.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: job.metadata.namespace, title: job.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(LabelList, { kind: kind, labels: job.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Link, { to: `/k8s/ns/${job.metadata.namespace}/jobs/${job.metadata.name}/pods`, title: \"pods\" },\n                job.status.succeeded || 0,\n                \" of \",\n                completions)),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, type),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(Timestamp, { timestamp: job.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: \"Job\", resource: job }))));\n};\nconst jobStatus = (job) => {\n    return job && job.status ? _.get(job, 'status.conditions[0].type', 'In Progress') : null;\n};\nconst JobDetails = ({ obj: job }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(job, t) }) }),\n                    React.createElement(ResourceSummary, { resource: job, showPodSelector: true },\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_35'), obj: job, path: \"spec.completions\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_36'), obj: job, path: \"spec.parallelism\" }),\n                        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_37'), obj: job, path: \"spec.activeDeadlineSeconds\" }, job.spec.activeDeadlineSeconds ? pluralize(job.spec.activeDeadlineSeconds, 'second') : 'Not Configured'))),\n                React.createElement(\"div\", { className: \"col-md-6\" },\n                    React.createElement(SectionHeading, { text: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_1') }),\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", null, t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_2')),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Status, { status: jobStatus(job) })),\n                        React.createElement(DetailsItem, { label: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_3'), obj: job, path: \"status.startTime\" },\n                            React.createElement(Timestamp, { timestamp: job.status.startTime })),\n                        React.createElement(DetailsItem, { label: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_4'), obj: job, path: \"status.completionTime\" },\n                            React.createElement(Timestamp, { timestamp: job.status.completionTime })),\n                        React.createElement(DetailsItem, { label: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_5'), obj: job, path: \"status.succeeded\", defaultValue: \"0\" }),\n                        React.createElement(DetailsItem, { label: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_6'), obj: job, path: \"status.active\", defaultValue: \"0\" }),\n                        React.createElement(DetailsItem, { label: t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_7'), obj: job, path: \"status.failed\", defaultValue: \"0\" }))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }),\n            React.createElement(ContainerTable, { containers: job.spec.template.spec.containers })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1') }),\n            React.createElement(Conditions, { conditions: job.status.conditions }))));\n};\nconst JobPods = props => React.createElement(PodsComponent, Object.assign({}, props, { customData: { showNodes: true } }));\nconst { details, pods, editYaml, events } = navFactory;\nconst JobsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { getResourceStatus: jobStatus, kind: kind, menuActions: menuActions, pages: [details(JobDetails), editYaml(), pods(JobPods), events(ResourceEventStream)] }));\nconst JobsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": JobModel.labelPlural, Header: JobTableHeader.bind(null, t), Row: JobTableRow, virtualize: true }));\n};\nconst JobsPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_29'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_29') }), ListComponent: JobsList, kind: kind, canCreate: true }, props));\n};\nexport { JobsList, JobsPage, JobsDetailsPage };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/job.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/job.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { Status } from '@console/shared';\nimport { getJobTypeAndCompletions, K8sKind, JobKind, K8sResourceKind } from '../module/k8s';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { configureJobParallelismModal } from './modals';\nimport { ContainerTable, DetailsItem, Kebab, KebabAction, LabelList, PodsComponent, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp, navFactory, pluralize } from './utils';\nimport { ResourceEventStream } from './events';\nimport { JobModel } from '../models';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\nconst ModifyJobParallelism: KebabAction = (kind: K8sKind, obj: JobKind) => {\n  const { t } = useTranslation();\n  return {\n    label: t('COMMON:MSG_MAIN_ACTIONBUTTON_10'),\n    callback: () =>\n      configureJobParallelismModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  };\n};\nconst menuActions: KebabAction[] = [ModifyJobParallelism, ...Kebab.getExtensionsActionsForKind(JobModel), ...Kebab.factory.common];\n\nconst kind = 'Job';\n\nconst tableColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-6'), classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-1', 'hidden-md', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\n\nconst JobTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_22'),\n      sortFunc: 'jobCompletions',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_17'),\n      sortFunc: 'jobType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortFunc: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\nJobTableHeader.displayName = 'JobTableHeader';\n\nconst JobTableRow: RowFunction<JobKind> = ({ obj: job, index, key, style }) => {\n  const { type, completions } = getJobTypeAndCompletions(job);\n  return (\n    <TableRow id={job.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={job.metadata.name} namespace={job.metadata.namespace} title={job.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={job.metadata.namespace} title={job.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={kind} labels={job.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Link to={`/k8s/ns/${job.metadata.namespace}/jobs/${job.metadata.name}/pods`} title=\"pods\">\n          {job.status.succeeded || 0} of {completions}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>{type}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={job.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab actions={menuActions} kind=\"Job\" resource={job} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst jobStatus = (job: JobKind): string => {\n  return job && job.status ? _.get(job, 'status.conditions[0].type', 'In Progress') : null;\n};\n\nconst JobDetails: React.FC<JobsDetailsProps> = ({ obj: job }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(job, t) })} />\n            <ResourceSummary resource={job} showPodSelector>\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_35')} obj={job} path=\"spec.completions\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_36')} obj={job} path=\"spec.parallelism\" />\n              <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_37')} obj={job} path=\"spec.activeDeadlineSeconds\">\n                {job.spec.activeDeadlineSeconds ? pluralize(job.spec.activeDeadlineSeconds, 'second') : 'Not Configured'}\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_1')} />\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_2')}</dt>\n              <dd>\n                <Status status={jobStatus(job)} />\n              </dd>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_3')} obj={job} path=\"status.startTime\">\n                <Timestamp timestamp={job.status.startTime} />\n              </DetailsItem>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_4')} obj={job} path=\"status.completionTime\">\n                <Timestamp timestamp={job.status.completionTime} />\n              </DetailsItem>\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_5')} obj={job} path=\"status.succeeded\" defaultValue=\"0\" />\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_6')} obj={job} path=\"status.active\" defaultValue=\"0\" />\n              <DetailsItem label={t('SINGLE:MSG_JOBS_JOBDETAILS_TABDETAILS_JOBSTATUS_7')} obj={job} path=\"status.failed\" defaultValue=\"0\" />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n        <ContainerTable containers={job.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1')} />\n        <Conditions conditions={job.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst JobPods: React.FC<JobPodsProps> = props => <PodsComponent {...props} customData={{ showNodes: true }} />;\n\nconst { details, pods, editYaml, events } = navFactory;\nconst JobsDetailsPage: React.FC<JobsDetailsPageProps> = props => <DetailsPage {...props} getResourceStatus={jobStatus} kind={kind} menuActions={menuActions} pages={[details(JobDetails), editYaml(), pods(JobPods), events(ResourceEventStream)]} />;\nconst JobsList: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label={JobModel.labelPlural} Header={JobTableHeader.bind(null, t)} Row={JobTableRow} virtualize />;\n};\n\nconst JobsPage: React.FC<JobsPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_29')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_29') })} ListComponent={JobsList} kind={kind} canCreate={true} {...props} />;\n};\nexport { JobsList, JobsPage, JobsDetailsPage };\n\ntype JobsDetailsProps = {\n  obj: JobKind;\n};\n\ntype JobsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype JobPodsProps = {\n  obj: K8sResourceKind;\n};\n\ntype JobsDetailsPageProps = {\n  match: any;\n};\n"]}]}