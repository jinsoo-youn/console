{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster.tsx","mtime":1617849896290},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { Status } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { DetailsItem, Kebab, detailsPage, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp } from '../utils';\nimport { ClusterManagerModel } from '../../models';\nimport { configureClusterNodesModal } from './modals';\nimport { MembersPage } from './members';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nimport { ResourceEventStream } from '../events';\nconst ModifyClusterNodes = (kind, obj) => ({\n    label: 'Edit Nodes',\n    callback: () => configureClusterNodesModal({\n        resourceKind: kind,\n        resource: obj,\n    }),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        verb: 'patch',\n    },\n});\nexport const menuActions = [ModifyClusterNodes, ...Kebab.getExtensionsActionsForKind(ClusterManagerModel), ...Kebab.factory.common];\nconst kind = ClusterManagerModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst ClusterTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_58'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_59'),\n            sortField: 'spec.provider',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_60'),\n            sortField: 'spec.provider',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_61'),\n            sortField: 'status.ready',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_62'),\n            sortField: 'spec.version',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: 'Master Node',\n            sortField: 'spec.masterNum',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: 'Worker Node',\n            sortField: 'spec.workerNum',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[6] },\n        },\n        {\n            title: 'Owner',\n            // sortField: 'status.owner',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[7] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[8] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[9] },\n        },\n    ];\n};\nClusterTableHeader.displayName = 'ClusterTableHeader';\nconst ClusterTableRow = ({ obj: cluster, index, key, style }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const owner = (_b = (_a = cluster.metadata) === null || _a === void 0 ? void 0 : _a.annotations) === null || _b === void 0 ? void 0 : _b.owner;\n    return (React.createElement(TableRow, { id: cluster.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: cluster.metadata.name, displayName: cluster.fakeMetadata.fakename, title: cluster.metadata.uid, namespace: cluster.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1]) }, cluster.spec.provider),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[2]) }, cluster.spec.provider ? '생성' : '등록'),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, ((_c = cluster.status) === null || _c === void 0 ? void 0 : _c.ready) ? '준비' : '생성 중'),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, cluster.spec.version),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, `${(_e = (_d = cluster.status) === null || _d === void 0 ? void 0 : _d.masterRun) !== null && _e !== void 0 ? _e : 0} / ${(_g = (_f = cluster.spec) === null || _f === void 0 ? void 0 : _f.masterNum) !== null && _g !== void 0 ? _g : 0}`),\n        React.createElement(TableData, { className: tableColumnClasses[6] }, `${(_j = (_h = cluster.status) === null || _h === void 0 ? void 0 : _h.workerRun) !== null && _j !== void 0 ? _j : 0} / ${(_l = (_k = cluster.spec) === null || _k === void 0 ? void 0 : _k.workerNum) !== null && _l !== void 0 ? _l : 0}`),\n        React.createElement(TableData, { className: tableColumnClasses[7] }, owner),\n        React.createElement(TableData, { className: tableColumnClasses[8] },\n            React.createElement(Timestamp, { timestamp: cluster.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[9] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: cluster }))));\n};\nexport const ClusterDetailsList = ({ cl }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_1'), obj: cl, path: \"spec.provider\" }),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_2'), obj: cl, path: \"spec.provider\" }, cl.spec.provider ? t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_TYPE_1') : t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_TYPE_2')),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13'), obj: cl, path: \"status.ready\" },\n            React.createElement(Status, { status: cl.status.ready ? t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_STATUS_1') : t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_STATUS_2') })),\n        React.createElement(DetailsItem, { label: \"Version\", obj: cl, path: \"spec.version\" }),\n        React.createElement(DetailsItem, { label: \"Region\", obj: cl, path: \"spec.region\" }),\n        React.createElement(DetailsItem, { label: \"Master Node\", obj: cl, path: \"spec.masterNum\" }, `${(_b = (_a = cl.status) === null || _a === void 0 ? void 0 : _a.masterRun) !== null && _b !== void 0 ? _b : 0} / ${(_c = cl.spec.masterNum) !== null && _c !== void 0 ? _c : 0}`),\n        React.createElement(DetailsItem, { label: \"Master Node Type\", obj: cl, path: \"spec.masterType\" }),\n        React.createElement(DetailsItem, { label: \"Worker Node\", obj: cl, path: \"spec.workerNum\" }, `${(_e = (_d = cl.status) === null || _d === void 0 ? void 0 : _d.workerRun) !== null && _e !== void 0 ? _e : 0} / ${(_f = cl.spec.workerNum) !== null && _f !== void 0 ? _f : 0}`),\n        React.createElement(DetailsItem, { label: \"Worker Node Type\", obj: cl, path: \"spec.workerType\" }),\n        React.createElement(DetailsItem, { label: \"SSH Key\", obj: cl, path: \"spec.sshKey\" })));\n};\nconst KeyValuePrint = ({ obj, key }) => {\n    return React.createElement(\"div\", null, `${key} / ${obj[key]}`);\n};\nconst ClusterDetails = ({ obj: cluster }) => {\n    const owner = cluster.status.owner && Object.keys(cluster.status.owner)[0];\n    const members = cluster.status.members && Object.keys(cluster.status.members);\n    const groups = cluster.status.groups && Object.keys(cluster.status.groups);\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(cluster, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: cluster, customPathName: 'fakeMetadata.fakename', showOwner: false }),\n                    cluster.status.owner && React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_44'), obj: cluster, children: KeyValuePrint({ obj: cluster.status.owner, key: owner }) }),\n                    cluster.status.members && React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_39'), obj: cluster, children: members.map(member => KeyValuePrint({ obj: cluster.status.members, key: member })) }),\n                    cluster.status.groups && React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_40'), obj: cluster, children: groups.map(group => KeyValuePrint({ obj: cluster.status.groups, key: group })) })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ClusterDetailsList, { cl: cluster }))))));\n};\nconst { details, /* nodes, */ editYaml, events } = navFactory;\nexport const Clusters = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Clusters\", Header: ClusterTableHeader.bind(null, t), Row: ClusterTableRow, virtualize: true }));\n};\nexport const ClustersPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_84'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_84') }), ListComponent: Clusters, kind: kind }, props));\n};\nexport const ClustersDetailsPage = props => {\n    const { t } = useTranslation();\n    return (React.createElement(DetailsPage, Object.assign({}, props, { titleFunc: (obj) => obj.fakeMetadata.fakename, kind: kind, menuActions: menuActions, pages: [\n            details(detailsPage(ClusterDetails)),\n            editYaml() /* nodes(ClusterNodes),  events(ResourceEventStream) */,\n            /*{\n              href: 'node',\n              name: 'Node',\n              component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n            },\n            {\n              href: 'namespace',\n              name: 'Namespace',\n              component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n            },\n            {\n              href: 'federation',\n              name: 'Federation',\n              component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n            },*/\n            events(ResourceEventStream),\n            {\n                href: 'access',\n                name: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_1'),\n                component: pageProps => React.createElement(MembersPage, { clusterName: pageProps.obj.metadata.name, namespace: pageProps.obj.metadata.namespace, owner: pageProps.obj.metadata.annotations.owner, title: \"Members\" }),\n            },\n        ] })));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/cluster.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { Status } from '@console/shared';\nimport { K8sResourceKind, K8sKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Timestamp } from '../utils';\nimport { ClusterManagerModel } from '../../models';\nimport { configureClusterNodesModal } from './modals';\nimport { MembersPage } from './members';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nimport { ResourceEventStream } from '../events';\n\nconst ModifyClusterNodes: KebabAction = (kind: K8sKind, obj: any) => ({\n  label: 'Edit Nodes',\n  callback: () =>\n    configureClusterNodesModal({\n      resourceKind: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions: KebabAction[] = [ModifyClusterNodes, ...Kebab.getExtensionsActionsForKind(ClusterManagerModel), ...Kebab.factory.common];\n\nconst kind = ClusterManagerModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst ClusterTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_58'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_59'),\n      sortField: 'spec.provider',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_60'),\n      sortField: 'spec.provider',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_61'),\n      sortField: 'status.ready',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_62'),\n      sortField: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: 'Master Node',\n      sortField: 'spec.masterNum',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: 'Worker Node',\n      sortField: 'spec.workerNum',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: 'Owner',\n      // sortField: 'status.owner',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[8] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[9] },\n    },\n  ];\n};\nClusterTableHeader.displayName = 'ClusterTableHeader';\n\nconst ClusterTableRow: RowFunction<IClusterTableRow> = ({ obj: cluster, index, key, style }) => {\n  const owner = cluster.metadata?.annotations?.owner;\n  return (\n    <TableRow id={cluster.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={cluster.metadata.name} displayName={cluster.fakeMetadata.fakename} title={cluster.metadata.uid} namespace={cluster.metadata.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1])}>{cluster.spec.provider}</TableData>\n      <TableData className={classNames(tableColumnClasses[2])}>{cluster.spec.provider ? '생성' : '등록'}</TableData>\n      <TableData className={tableColumnClasses[3]}>{cluster.status?.ready ? '준비' : '생성 중'}</TableData>\n      <TableData className={tableColumnClasses[4]}>{cluster.spec.version}</TableData>\n      <TableData className={tableColumnClasses[5]}>{`${cluster.status?.masterRun ?? 0} / ${cluster.spec?.masterNum ?? 0}`}</TableData>\n      <TableData className={tableColumnClasses[6]}>{`${cluster.status?.workerRun ?? 0} / ${cluster.spec?.workerNum ?? 0}`}</TableData>\n      <TableData className={tableColumnClasses[7]}>{owner}</TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <Timestamp timestamp={cluster.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[9]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={cluster} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterDetailsList: React.FC<ClusterDetailsListProps> = ({ cl }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_1')} obj={cl} path=\"spec.provider\" />\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_2')} obj={cl} path=\"spec.provider\">\n        {cl.spec.provider ? t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_TYPE_1') : t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_TYPE_2')}\n      </DetailsItem>\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_13')} obj={cl} path=\"status.ready\">\n        <Status status={cl.status.ready ? t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_STATUS_1') : t('MULTI:MSG_MULTI_CLUSTERS_TABLECONTENTS_STATUS_2')} />\n      </DetailsItem>\n      <DetailsItem label=\"Version\" obj={cl} path=\"spec.version\" />\n      <DetailsItem label=\"Region\" obj={cl} path=\"spec.region\" />\n      <DetailsItem label=\"Master Node\" obj={cl} path=\"spec.masterNum\">\n        {`${cl.status?.masterRun ?? 0} / ${cl.spec.masterNum ?? 0}`}\n      </DetailsItem>\n      <DetailsItem label=\"Master Node Type\" obj={cl} path=\"spec.masterType\" />\n      <DetailsItem label=\"Worker Node\" obj={cl} path=\"spec.workerNum\">\n        {`${cl.status?.workerRun ?? 0} / ${cl.spec.workerNum ?? 0}`}\n      </DetailsItem>\n      <DetailsItem label=\"Worker Node Type\" obj={cl} path=\"spec.workerType\" />\n      <DetailsItem label=\"SSH Key\" obj={cl} path=\"spec.sshKey\" />\n    </dl>\n  );\n};\n\ninterface KeyValuePrintProps {\n  obj: any;\n  key: string;\n}\n\nconst KeyValuePrint: React.FC<KeyValuePrintProps> = ({ obj, key }) => {\n  return <div>{`${key} / ${obj[key]}`}</div>;\n};\n\nconst ClusterDetails: React.FC<ClusterDetailsProps> = ({ obj: cluster }) => {\n  const owner = cluster.status.owner && Object.keys(cluster.status.owner)[0];\n  const members = cluster.status.members && Object.keys(cluster.status.members);\n  const groups = cluster.status.groups && Object.keys(cluster.status.groups);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(cluster, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={cluster} customPathName={'fakeMetadata.fakename'} showOwner={false} />\n            {cluster.status.owner && <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_44')} obj={cluster} children={KeyValuePrint({ obj: cluster.status.owner, key: owner })} />}\n            {cluster.status.members && <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_39')} obj={cluster} children={members.map(member => KeyValuePrint({ obj: cluster.status.members, key: member }))} />}\n            {cluster.status.groups && <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_40')} obj={cluster} children={groups.map(group => KeyValuePrint({ obj: cluster.status.groups, key: group }))} />}\n          </div>\n          <div className=\"col-lg-6\">\n            <ClusterDetailsList cl={cluster} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst { details, /* nodes, */ editYaml, events } = navFactory;\nexport const Clusters: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Clusters\" Header={ClusterTableHeader.bind(null, t)} Row={ClusterTableRow} virtualize />;\n};\n\nexport const ClustersPage: React.FC<ClustersPageProps> = props => {\n  const { t } = useTranslation();\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_84')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_84') })} ListComponent={Clusters} kind={kind} {...props} />;\n};\n\nexport const ClustersDetailsPage: React.FC<ClustersDetailsPageProps> = props => {\n  const { t } = useTranslation();\n  return (\n    <DetailsPage\n      {...props}\n      titleFunc={(obj: any) => obj.fakeMetadata.fakename}\n      kind={kind}\n      menuActions={menuActions}\n      pages={[\n        details(detailsPage(ClusterDetails)),\n        editYaml() /* nodes(ClusterNodes),  events(ResourceEventStream) */,\n        /*{\n          href: 'node',\n          name: 'Node',\n          component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n        },\n        {\n          href: 'namespace',\n          name: 'Namespace',\n          component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n        },\n        {\n          href: 'federation',\n          name: 'Federation',\n          component: pageProps => <MembersPage resource={pageProps.obj} title=\"Members\" userHeading=\"Users\" userGroupHeading=\"User Groups\" />,\n        },*/\n        events(ResourceEventStream),\n        {\n          href: 'access',\n          name: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_1'),\n          component: pageProps => <MembersPage clusterName={pageProps.obj.metadata.name} namespace={pageProps.obj.metadata.namespace} owner={pageProps.obj.metadata.annotations.owner} title=\"Members\" />,\n        },\n      ]}\n    />\n  );\n};\n\ninterface IClusterTableRow extends K8sResourceKind {\n  fakeMetadata: any;\n}\n\ntype ClusterDetailsListProps = {\n  cl: K8sResourceKind;\n};\n\ntype ClusterDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ClustersPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ClustersDetailsPageProps = {\n  match: any;\n};\n"]}]}