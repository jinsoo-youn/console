{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/edges/CreateConnector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/edges/CreateConnector.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { DefaultCreateConnector } from '@console/topology';\nimport './CreateConnector.scss';\nconst CreateConnector = ({ startPoint, endPoint, dragging, hints }) => {\n    const [hover, setHover] = React.useState(false);\n    const unsetHandle = React.useRef();\n    React.useEffect(() => {\n        setHover(false);\n        clearTimeout(unsetHandle.current);\n        unsetHandle.current = window.setTimeout(() => {\n            setHover(dragging);\n        }, 2000);\n        return () => {\n            clearTimeout(unsetHandle.current);\n        };\n    }, [endPoint.x, endPoint.y, dragging]);\n    const classes = classNames('odc-create-connector', { 'is-dragging': dragging });\n    return React.createElement(DefaultCreateConnector, { className: classes, startPoint: startPoint, endPoint: endPoint, dragging: dragging, hints: hints, tipContents: hover && dragging ? 'Add Resources' : null });\n};\nexport { CreateConnector };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/edges/CreateConnector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/edges/CreateConnector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAS,MAAM,mBAAmB,CAAC;AAElE,OAAO,wBAAwB,CAAC;AAShC,MAAM,eAAe,GAAmC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE;IACpG,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,EAAU,CAAC;IAE3C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChB,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAClC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YAC3C,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,GAAG,EAAE;YACV,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEvC,MAAM,OAAO,GAAG,UAAU,CAAC,sBAAsB,EAAE,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC;IAChF,OAAO,oBAAC,sBAAsB,IAAC,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,GAAI,CAAC;AAC/L,CAAC,CAAC;AAEF,OAAO,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { DefaultCreateConnector, Point } from '@console/topology';\n\nimport './CreateConnector.scss';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({ startPoint, endPoint, dragging, hints }) => {\n  const [hover, setHover] = React.useState(false);\n  const unsetHandle = React.useRef<number>();\n\n  React.useEffect(() => {\n    setHover(false);\n    clearTimeout(unsetHandle.current);\n    unsetHandle.current = window.setTimeout(() => {\n      setHover(dragging);\n    }, 2000);\n    return () => {\n      clearTimeout(unsetHandle.current);\n    };\n  }, [endPoint.x, endPoint.y, dragging]);\n\n  const classes = classNames('odc-create-connector', { 'is-dragging': dragging });\n  return <DefaultCreateConnector className={classes} startPoint={startPoint} endPoint={endPoint} dragging={dragging} hints={hints} tipContents={hover && dragging ? 'Add Resources' : null} />;\n};\n\nexport { CreateConnector };\n"]}]}