{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/vm-cdrom-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/vm-cdrom-modal.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { getNamespace } from '@console/shared';\nimport { Firehose } from '@console/internal/components/utils';\nimport { createModalLauncher } from '@console/internal/components/factory';\nimport { PersistentVolumeClaimModel, StorageClassModel } from '@console/internal/models';\nimport { asVM } from '../../../selectors/vm';\nimport { CDRomModal } from './cdrom-modal';\nimport { WINTOOLS_CONTAINER_NAMES } from './constants';\nconst CDRomModalFirehose = (props) => {\n    const { vmLikeEntity } = props;\n    const winToolsContainer = WINTOOLS_CONTAINER_NAMES[window.SERVER_FLAGS.branding] || WINTOOLS_CONTAINER_NAMES.okd;\n    const resources = [\n        {\n            kind: StorageClassModel.kind,\n            isList: true,\n            prop: 'storageClasses',\n        },\n        {\n            kind: PersistentVolumeClaimModel.kind,\n            isList: true,\n            namespace: getNamespace(asVM(vmLikeEntity)),\n            prop: 'persistentVolumeClaims',\n        },\n    ];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(CDRomModal, Object.assign({ winToolsContainer: winToolsContainer }, props))));\n};\nexport const VMCDRomModal = createModalLauncher(CDRomModalFirehose);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/vm-cdrom-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/cdrom-vm-modal/vm-cdrom-modal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAuB,MAAM,sCAAsC,CAAC;AAChG,OAAO,EAAE,0BAA0B,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAEzF,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,wBAAwB,EAAE,MAAM,aAAa,CAAC;AAEvD,MAAM,kBAAkB,GAAsC,CAAC,KAAK,EAAE,EAAE;IACtE,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;IAE/B,MAAM,iBAAiB,GACrB,wBAAwB,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,wBAAwB,CAAC,GAAG,CAAC;IAEzF,MAAM,SAAS,GAAG;QAChB;YACE,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,gBAAgB;SACvB;QACD;YACE,IAAI,EAAE,0BAA0B,CAAC,IAAI;YACrC,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3C,IAAI,EAAE,wBAAwB;SAC/B;KACF,CAAC;IAEF,OAAO,CACL,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;QAC5B,oBAAC,UAAU,kBAAC,iBAAiB,EAAE,iBAAiB,IAAM,KAAK,EAAI,CACtD,CACZ,CAAC;AACJ,CAAC,CAAC;AAOF,MAAM,CAAC,MAAM,YAAY,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { getNamespace } from '@console/shared';\nimport { Firehose } from '@console/internal/components/utils';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport { PersistentVolumeClaimModel, StorageClassModel } from '@console/internal/models';\nimport { VMLikeEntityKind } from '../../../types/vmLike';\nimport { asVM } from '../../../selectors/vm';\nimport { V1alpha1DataVolume } from '../../../types/vm/disk/V1alpha1DataVolume';\nimport { CDRomModal } from './cdrom-modal';\nimport { WINTOOLS_CONTAINER_NAMES } from './constants';\n\nconst CDRomModalFirehose: React.FC<CDRomModalFirehoseProps> = (props) => {\n  const { vmLikeEntity } = props;\n\n  const winToolsContainer =\n    WINTOOLS_CONTAINER_NAMES[window.SERVER_FLAGS.branding] || WINTOOLS_CONTAINER_NAMES.okd;\n\n  const resources = [\n    {\n      kind: StorageClassModel.kind,\n      isList: true,\n      prop: 'storageClasses',\n    },\n    {\n      kind: PersistentVolumeClaimModel.kind,\n      isList: true,\n      namespace: getNamespace(asVM(vmLikeEntity)),\n      prop: 'persistentVolumeClaims',\n    },\n  ];\n\n  return (\n    <Firehose resources={resources}>\n      <CDRomModal winToolsContainer={winToolsContainer} {...props} />\n    </Firehose>\n  );\n};\n\ntype CDRomModalFirehoseProps = ModalComponentProps & {\n  vmLikeEntity: VMLikeEntityKind;\n  dataVolume?: V1alpha1DataVolume;\n};\n\nexport const VMCDRomModal = createModalLauncher(CDRomModalFirehose);\n"]}]}