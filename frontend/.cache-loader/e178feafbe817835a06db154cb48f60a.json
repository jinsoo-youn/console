{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-body.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-body.tsx","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { LoadingInline } from '@console/internal/components/utils';\nexport const ResourceProvidersBody = ({ isLoading, hasProviders, children, error, }) => {\n    let body;\n    if (isLoading) {\n        body = React.createElement(LoadingInline, null);\n    }\n    if (error || !hasProviders) {\n        body = (React.createElement(\"div\", { className: \"nb-resource-providers-card__not-available text-secondary\" }, \"Not available\"));\n    }\n    return React.createElement(React.Fragment, null, body || children);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-body.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/resource-providers-card/resource-providers-card-body.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AAEnE,MAAM,CAAC,MAAM,qBAAqB,GAAyC,CAAC,EAC1E,SAAS,EACT,YAAY,EACZ,QAAQ,EACR,KAAK,GACN,EAAE,EAAE;IACH,IAAI,IAAqB,CAAC;IAC1B,IAAI,SAAS,EAAE;QACb,IAAI,GAAG,oBAAC,aAAa,OAAG,CAAC;KAC1B;IACD,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;QAC1B,IAAI,GAAG,CACL,6BAAK,SAAS,EAAC,0DAA0D,oBAAoB,CAC9F,CAAC;KACH;IACD,OAAO,0CAAG,IAAI,IAAI,QAAQ,CAAI,CAAC;AACjC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { LoadingInline } from '@console/internal/components/utils';\n\nexport const ResourceProvidersBody: React.FC<ResourceProvidersBodyProps> = ({\n  isLoading,\n  hasProviders,\n  children,\n  error,\n}) => {\n  let body: React.ReactNode;\n  if (isLoading) {\n    body = <LoadingInline />;\n  }\n  if (error || !hasProviders) {\n    body = (\n      <div className=\"nb-resource-providers-card__not-available text-secondary\">Not available</div>\n    );\n  }\n  return <>{body || children}</>;\n};\n\ntype ResourceProvidersBodyProps = {\n  children: React.ReactNode;\n  hasProviders: boolean;\n  isLoading: boolean;\n  error: boolean;\n};\n"]}]}