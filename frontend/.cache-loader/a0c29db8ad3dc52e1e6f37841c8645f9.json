{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/MonitoringPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/MonitoringPage.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HorizontalNav, PageHeading, history } from '@console/internal/components/utils';\nimport { TechPreviewBadge, ALL_NAMESPACES_KEY } from '@console/shared';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport ProjectListPage from '../projects/ProjectListPage';\nimport ConnectedMonitoringDashboard from './dashboard/MonitoringDashboard';\nimport ConnectedMonitoringMetrics from './metrics/MonitoringMetrics';\nimport MonitoringEvents from './events/MonitoringEvents';\nexport const MONITORING_ALL_NS_PAGE_URI = '/dev-monitoring/all-namespaces';\nconst handleNamespaceChange = (newNamespace) => {\n    if (newNamespace === ALL_NAMESPACES_KEY) {\n        history.push(MONITORING_ALL_NS_PAGE_URI);\n    }\n};\nexport const PageContents = ({ match }) => {\n    const activeNamespace = match.params.ns;\n    const pages = [\n        {\n            href: '',\n            name: 'Dashboard',\n            component: ConnectedMonitoringDashboard,\n        },\n        {\n            href: 'metrics',\n            name: 'Metrics',\n            component: ConnectedMonitoringMetrics,\n        },\n        {\n            href: 'events',\n            name: 'Events',\n            component: MonitoringEvents,\n        },\n    ];\n    return activeNamespace ? (React.createElement(React.Fragment, null,\n        React.createElement(PageHeading, { badge: React.createElement(TechPreviewBadge, null), title: \"Monitoring\" }),\n        React.createElement(HorizontalNav, { pages: pages, match: match, noStatusBox: true }))) : (React.createElement(ProjectListPage, { badge: React.createElement(TechPreviewBadge, null), title: \"Monitoring\" }, \"Select a project to view monitoring metrics\"));\n};\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\nexport const MonitoringPage = (props) => (React.createElement(React.Fragment, null,\n    React.createElement(Helmet, null,\n        React.createElement(\"title\", null, \"Monitoring\")),\n    React.createElement(NamespacedPage, { hideApplications: true, variant: NamespacedPageVariants.light, onNamespaceChange: handleNamespaceChange },\n        React.createElement(PageContentsWithStartGuide, Object.assign({}, props)))));\nexport default MonitoringPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/MonitoringPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/MonitoringPage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAEtC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AACzF,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,cAAc,EAAE,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAC3E,OAAO,eAAe,MAAM,6BAA6B,CAAC;AAC1D,OAAO,4BAA4B,MAAM,iCAAiC,CAAC;AAC3E,OAAO,0BAA0B,MAAM,6BAA6B,CAAC;AACrE,OAAO,gBAAgB,MAAM,2BAA2B,CAAC;AAEzD,MAAM,CAAC,MAAM,0BAA0B,GAAG,gCAAgC,CAAC;AAQ3E,MAAM,qBAAqB,GAAG,CAAC,YAAoB,EAAQ,EAAE;IAC3D,IAAI,YAAY,KAAK,kBAAkB,EAAE;QACvC,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;KAC1C;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAkC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IACvE,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IACxC,MAAM,KAAK,GAAG;QACZ;YACE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,4BAA4B;SACxC;QACD;YACE,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,0BAA0B;SACtC;QACD;YACE,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,gBAAgB;SAC5B;KACF,CAAC;IACF,OAAO,eAAe,CAAC,CAAC,CAAC,CACvB;QACE,oBAAC,WAAW,IAAC,KAAK,EAAE,oBAAC,gBAAgB,OAAG,EAAE,KAAK,EAAC,YAAY,GAAG;QAC/D,oBAAC,aAAa,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,SAAG,CACxD,CACJ,CAAC,CAAC,CAAC,CACF,oBAAC,eAAe,IAAC,KAAK,EAAE,oBAAC,gBAAgB,OAAG,EAAE,KAAK,EAAC,YAAY,kDAE9C,CACnB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,0BAA0B,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;AAEhE,MAAM,CAAC,MAAM,cAAc,GAAkC,CAAC,KAAK,EAAE,EAAE,CAAC,CACtE;IACE,oBAAC,MAAM;QACL,gDAAyB,CAClB;IACT,oBAAC,cAAc,IACb,gBAAgB,QAChB,OAAO,EAAE,sBAAsB,CAAC,KAAK,EACrC,iBAAiB,EAAE,qBAAqB;QAExC,oBAAC,0BAA0B,oBAAK,KAAK,EAAI,CAC1B,CAChB,CACJ,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { match as RMatch } from 'react-router';\nimport { HorizontalNav, PageHeading, history } from '@console/internal/components/utils';\nimport { TechPreviewBadge, ALL_NAMESPACES_KEY } from '@console/shared';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport ProjectListPage from '../projects/ProjectListPage';\nimport ConnectedMonitoringDashboard from './dashboard/MonitoringDashboard';\nimport ConnectedMonitoringMetrics from './metrics/MonitoringMetrics';\nimport MonitoringEvents from './events/MonitoringEvents';\n\nexport const MONITORING_ALL_NS_PAGE_URI = '/dev-monitoring/all-namespaces';\n\ntype MonitoringPageProps = {\n  match: RMatch<{\n    ns?: string;\n  }>;\n};\n\nconst handleNamespaceChange = (newNamespace: string): void => {\n  if (newNamespace === ALL_NAMESPACES_KEY) {\n    history.push(MONITORING_ALL_NS_PAGE_URI);\n  }\n};\n\nexport const PageContents: React.FC<MonitoringPageProps> = ({ match }) => {\n  const activeNamespace = match.params.ns;\n  const pages = [\n    {\n      href: '',\n      name: 'Dashboard',\n      component: ConnectedMonitoringDashboard,\n    },\n    {\n      href: 'metrics',\n      name: 'Metrics',\n      component: ConnectedMonitoringMetrics,\n    },\n    {\n      href: 'events',\n      name: 'Events',\n      component: MonitoringEvents,\n    },\n  ];\n  return activeNamespace ? (\n    <>\n      <PageHeading badge={<TechPreviewBadge />} title=\"Monitoring\" />\n      <HorizontalNav pages={pages} match={match} noStatusBox />\n    </>\n  ) : (\n    <ProjectListPage badge={<TechPreviewBadge />} title=\"Monitoring\">\n      Select a project to view monitoring metrics\n    </ProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nexport const MonitoringPage: React.FC<MonitoringPageProps> = (props) => (\n  <>\n    <Helmet>\n      <title>Monitoring</title>\n    </Helmet>\n    <NamespacedPage\n      hideApplications\n      variant={NamespacedPageVariants.light}\n      onNamespaceChange={handleNamespaceChange}\n    >\n      <PageContentsWithStartGuide {...props} />\n    </NamespacedPage>\n  </>\n);\n\nexport default MonitoringPage;\n"]}]}