{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/prometheus.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/prometheus.jsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, LabelList, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { PrometheusModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\nconst { Edit, Delete, ModifyCount } = Kebab.factory;\nconst menuActions = [ModifyCount, Edit, Delete];\nconst tableColumnClasses = [\n    classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n    classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n    classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'hidden-xs'),\n    classNames('col-lg-1', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n    classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst PrometheusTableRow = ({ obj: instance, index, key, style }) => {\n    const { metadata, spec } = instance;\n    return (React.createElement(TableRow, { id: instance.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: referenceForModel(PrometheusModel), name: metadata.name, namespace: metadata.namespace, title: metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[1] },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: metadata.namespace, title: metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(LabelList, { kind: PrometheusModel.kind, labels: metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, spec.version),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Selector, { selector: spec.serviceMonitorSelector, kind: \"ServiceMonitor\", namespace: metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: referenceForModel(PrometheusModel), resource: instance }))));\n};\nconst PrometheusTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Version',\n            sortField: 'spec.version',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: 'Service Monitor Selector',\n            sortField: 'spec.serviceMonitorSelector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nPrometheusTableHeader.displayName = 'PrometheusTableHeader';\nconst PrometheusInstancesList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Promethesuses\", Header: PrometheusTableHeader, Row: PrometheusTableRow, virtualize: true })));\nexport const PrometheusInstancesPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { ListComponent: PrometheusInstancesList, canCreate: true, kind: referenceForModel(PrometheusModel) })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/prometheus.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/prometheus.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, LabelList, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { PrometheusModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\n\nconst { Edit, Delete, ModifyCount } = Kebab.factory;\nconst menuActions = [ModifyCount, Edit, Delete];\n\nconst tableColumnClasses = [\n  classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-3', 'col-md-3', 'col-sm-4', 'col-xs-6'),\n  classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'hidden-xs'),\n  classNames('col-lg-1', 'col-md-2', 'hidden-sm', 'hidden-xs'),\n  classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst PrometheusTableRow = ({ obj: instance, index, key, style }) => {\n  const { metadata, spec } = instance;\n  return (\n    <TableRow id={instance.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(PrometheusModel)}\n          name={metadata.name}\n          namespace={metadata.namespace}\n          title={metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={PrometheusModel.kind} labels={metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{spec.version}</TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector\n          selector={spec.serviceMonitorSelector}\n          kind=\"ServiceMonitor\"\n          namespace={metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={referenceForModel(PrometheusModel)}\n          resource={instance}\n        />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst PrometheusTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Version',\n      sortField: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: 'Service Monitor Selector',\n      sortField: 'spec.serviceMonitorSelector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nPrometheusTableHeader.displayName = 'PrometheusTableHeader';\n\nconst PrometheusInstancesList = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Promethesuses\"\n    Header={PrometheusTableHeader}\n    Row={PrometheusTableRow}\n    virtualize\n  />\n);\n\nexport const PrometheusInstancesPage = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={PrometheusInstancesList}\n    canCreate={true}\n    kind={referenceForModel(PrometheusModel)}\n  />\n);\n"]}]}