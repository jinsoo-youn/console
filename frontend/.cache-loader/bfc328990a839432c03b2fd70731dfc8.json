{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/inject.js","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/inject.js","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { modelFor, kindForReference } from '../../module/k8s';\nexport const inject = (children, props) => {\n    const safeProps = _.omit(props, ['children']);\n    return React.Children.map(children, (c) => {\n        if (!_.isObject(c)) {\n            return c;\n        }\n        return React.cloneElement(c, safeProps);\n    });\n};\nconst lastKind = new Set();\n/**\n * @deprecated: Use `modelFor` or `connectToModel`.\n * Provides a synchronous way to acquire a statically-defined Kubernetes model.\n * NOTE: This will not work for CRDs defined at runtime, use `connectToModels` instead.\n */\nexport const kindObj = (kind) => {\n    if (kindForReference(kind) === kind && !lastKind.has(kind)) {\n        // eslint-disable-next-line no-console\n        console.warn(`Attempting to get Kubernetes object model using string kind: ${kind}, which is not guaranteed to be unique!`);\n        lastKind.add(kind);\n    }\n    const model = modelFor(kind);\n    if (!model) {\n        // eslint-disable-next-line no-console\n        console.warn('kindObj: no model for kind', kind);\n    }\n    return model || {};\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/inject.js","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/inject.js"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAE9D,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;IACxC,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;QACxC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YAClB,OAAO,CAAC,CAAC;SACV;QACD,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAE3B;;;;GAIG;AACH,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,EAAE;IAC9B,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAC1D,sCAAsC;QACtC,OAAO,CAAC,IAAI,CACV,gEAAgE,IAAI,yCAAyC,CAC9G,CAAC;QACF,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACpB;IACD,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,CAAC,KAAK,EAAE;QACV,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;KAClD;IACD,OAAO,KAAK,IAAI,EAAE,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { modelFor, kindForReference } from '../../module/k8s';\n\nexport const inject = (children, props) => {\n  const safeProps = _.omit(props, ['children']);\n  return React.Children.map(children, (c) => {\n    if (!_.isObject(c)) {\n      return c;\n    }\n    return React.cloneElement(c, safeProps);\n  });\n};\n\nconst lastKind = new Set();\n\n/**\n * @deprecated: Use `modelFor` or `connectToModel`.\n * Provides a synchronous way to acquire a statically-defined Kubernetes model.\n * NOTE: This will not work for CRDs defined at runtime, use `connectToModels` instead.\n */\nexport const kindObj = (kind) => {\n  if (kindForReference(kind) === kind && !lastKind.has(kind)) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Attempting to get Kubernetes object model using string kind: ${kind}, which is not guaranteed to be unique!`,\n    );\n    lastKind.add(kind);\n  }\n  const model = modelFor(kind);\n  if (!model) {\n    // eslint-disable-next-line no-console\n    console.warn('kindObj: no model for kind', kind);\n  }\n  return model || {};\n};\n"]}]}