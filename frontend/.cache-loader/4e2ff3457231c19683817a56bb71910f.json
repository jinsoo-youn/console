{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/StatusIconAndText.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/StatusIconAndText.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { CamelCaseWrap } from '@console/internal/components/utils';\nimport { DASH } from '../../constants';\nconst StatusIconAndText = ({ icon, title, spin, iconOnly, noTooltip, className, }) => {\n    if (!title) {\n        return React.createElement(React.Fragment, null, DASH);\n    }\n    return (React.createElement(\"span\", { className: classNames('co-icon-and-text', className), title: iconOnly && !noTooltip ? title : undefined },\n        icon &&\n            React.cloneElement(icon, {\n                className: classNames(spin && 'fa-spin', icon.props.className, !iconOnly && 'co-icon-and-text__icon co-icon-flex-child'),\n            }),\n        !iconOnly && React.createElement(CamelCaseWrap, { value: title })));\n};\nexport default StatusIconAndText;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/StatusIconAndText.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/status/StatusIconAndText.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AACnE,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAQvC,MAAM,iBAAiB,GAAqC,CAAC,EAC3D,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,SAAS,EACT,SAAS,GACV,EAAE,EAAE;IACH,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,0CAAG,IAAI,CAAI,CAAC;KACpB;IAED,OAAO,CACL,8BACE,SAAS,EAAE,UAAU,CAAC,kBAAkB,EAAE,SAAS,CAAC,EACpD,KAAK,EAAE,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;QAEhD,IAAI;YACH,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE;gBACvB,SAAS,EAAE,UAAU,CACnB,IAAI,IAAI,SAAS,EACjB,IAAI,CAAC,KAAK,CAAC,SAAS,EACpB,CAAC,QAAQ,IAAI,2CAA2C,CACzD;aACF,CAAC;QACH,CAAC,QAAQ,IAAI,oBAAC,aAAa,IAAC,KAAK,EAAE,KAAK,GAAI,CACxC,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { CamelCaseWrap } from '@console/internal/components/utils';\nimport { DASH } from '../../constants';\nimport { StatusComponentProps } from './types';\n\ntype StatusIconAndTextProps = StatusComponentProps & {\n  icon?: React.ReactElement;\n  spin?: boolean;\n};\n\nconst StatusIconAndText: React.FC<StatusIconAndTextProps> = ({\n  icon,\n  title,\n  spin,\n  iconOnly,\n  noTooltip,\n  className,\n}) => {\n  if (!title) {\n    return <>{DASH}</>;\n  }\n\n  return (\n    <span\n      className={classNames('co-icon-and-text', className)}\n      title={iconOnly && !noTooltip ? title : undefined}\n    >\n      {icon &&\n        React.cloneElement(icon, {\n          className: classNames(\n            spin && 'fa-spin',\n            icon.props.className,\n            !iconOnly && 'co-icon-and-text__icon co-icon-flex-child',\n          ),\n        })}\n      {!iconOnly && <CamelCaseWrap value={title} />}\n    </span>\n  );\n};\n\nexport default StatusIconAndText;\n"]}]}