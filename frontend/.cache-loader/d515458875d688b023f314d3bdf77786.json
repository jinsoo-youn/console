{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/BareMetalNodesTable.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/BareMetalNodesTable.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Kebab, ResourceLink } from '@console/internal/components/utils';\nimport { sortable } from '@patternfly/react-table';\nimport { DASH, getName, getUID, getNamespace, SecondaryStatus } from '@console/shared';\nimport { TableRow, TableData, Table } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport NodeRoles from '@console/app/src/components/nodes/NodeRoles';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { MachineModel, NodeModel } from '@console/internal/models';\nimport { getHostBMCAddress } from '../../selectors';\nimport { BareMetalHostModel } from '../../models';\nimport { baremetalNodeSecondaryStatus } from '../../status/baremetal-node-status';\nimport { menuActions } from './menu-actions';\nimport BareMetalNodeStatus from './BareMetalNodeStatus';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\nimport { useTranslation } from 'react-i18next';\nconst tableColumnClasses = {\n    name: classNames('col-lg-3', 'col-md-4', 'col-sm-12', 'col-xs-12'),\n    status: classNames('col-lg-3', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n    role: classNames('col-lg-2', 'col-md-4', 'hidden-sm', 'hidden-xs'),\n    machine: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    address: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n    kebab: Kebab.columnClass,\n};\nconst BareMetalNodesTableHeader = t => [\n    {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n        sortField: 'node.metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.name },\n    },\n    {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n        sortField: 'status.status',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.status },\n    },\n    {\n        title: 'Role',\n        sortField: 'machine.metadata.labels[\"machine.openshift.io/cluster-api-machine-role\"]',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.role },\n    },\n    {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_92'),\n        sortField: \"metadata.annotations['machine.openshift.io/machine']\",\n        transforms: [sortable],\n        props: { className: tableColumnClasses.machine },\n    },\n    {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_93'),\n        sortField: 'host.spec.bmc.address',\n        transforms: [sortable],\n        props: { className: tableColumnClasses.address },\n    },\n    {\n        title: '',\n        props: { className: tableColumnClasses.kebab },\n    },\n];\nconst BareMetalNodesTableRow = ({ obj: { host, node, nodeMaintenance, machine, status }, index, key, style }) => {\n    const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n    const nodeName = getName(node);\n    const hostName = getName(host);\n    const namespace = getNamespace(host);\n    const address = getHostBMCAddress(host);\n    const uid = getUID(node);\n    return (React.createElement(TableRow, { id: uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses.name }, node ? React.createElement(ResourceLink, { kind: \"Node\", name: nodeName }) : React.createElement(ResourceLink, { kind: referenceForModel(BareMetalHostModel), name: hostName, namespace: namespace })),\n        React.createElement(TableData, { className: tableColumnClasses.status },\n            React.createElement(BareMetalNodeStatus, Object.assign({}, status, { nodeMaintenance: nodeMaintenance })),\n            React.createElement(SecondaryStatus, { status: baremetalNodeSecondaryStatus({ node, nodeMaintenance, host }) })),\n        React.createElement(TableData, { className: tableColumnClasses.role },\n            React.createElement(NodeRoles, { node: node })),\n        React.createElement(TableData, { className: tableColumnClasses.machine }, machine ? React.createElement(ResourceLink, { kind: referenceForModel(MachineModel), name: getName(machine), namespace: getNamespace(machine) }) : DASH),\n        React.createElement(TableData, { className: tableColumnClasses.address }, address),\n        React.createElement(TableData, { className: tableColumnClasses.kebab },\n            React.createElement(Kebab, { options: menuActions.map(action => action(NodeModel, node, null, { nodeMaintenance, hasNodeMaintenanceCapability })), key: `kebab-for-${uid}`, id: `kebab-for-${uid}` }))));\n};\nconst BareMetalNodesTable = props => {\n    const { t } = useTranslation();\n    const row = React.useCallback(rowProps => React.createElement(BareMetalNodesTableRow, Object.assign({}, rowProps)), []);\n    return React.createElement(Table, Object.assign({}, props, { defaultSortField: \"node.metadata.name\", \"aria-label\": \"Nodes\", Header: BareMetalNodesTableHeader.bind(null, t), Row: row, virtualize: true }));\n};\nexport default BareMetalNodesTable;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/BareMetalNodesTable.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/BareMetalNodesTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Kebab, ResourceLink } from '@console/internal/components/utils';\nimport { sortable } from '@patternfly/react-table';\nimport { DASH, getName, getUID, getNamespace, SecondaryStatus } from '@console/shared';\nimport { TableRow, TableData, Table, RowFunction, RowFunctionArgs } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport NodeRoles from '@console/app/src/components/nodes/NodeRoles';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { MachineModel, NodeModel } from '@console/internal/models';\nimport { BareMetalNodeBundle } from '../types';\nimport { getHostBMCAddress } from '../../selectors';\nimport { BareMetalHostModel } from '../../models';\nimport { baremetalNodeSecondaryStatus } from '../../status/baremetal-node-status';\nimport { menuActions } from './menu-actions';\nimport BareMetalNodeStatus from './BareMetalNodeStatus';\nimport { NODE_MAINTENANCE_FLAG } from '../../features';\nimport { useTranslation } from 'react-i18next';\n\nconst tableColumnClasses = {\n  name: classNames('col-lg-3', 'col-md-4', 'col-sm-12', 'col-xs-12'),\n  status: classNames('col-lg-3', 'col-md-4', 'col-sm-6', 'hidden-xs'),\n  role: classNames('col-lg-2', 'col-md-4', 'hidden-sm', 'hidden-xs'),\n  machine: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  address: classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'),\n  kebab: Kebab.columnClass,\n};\n\nconst BareMetalNodesTableHeader = t => [\n  {\n    title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n    sortField: 'node.metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.name },\n  },\n  {\n    title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n    sortField: 'status.status',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.status },\n  },\n  {\n    title: 'Role',\n    sortField: 'machine.metadata.labels[\"machine.openshift.io/cluster-api-machine-role\"]',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.role },\n  },\n  {\n    title: t('COMMON:MSG_MAIN_TABLEHEADER_92'),\n    sortField: \"metadata.annotations['machine.openshift.io/machine']\",\n    transforms: [sortable],\n    props: { className: tableColumnClasses.machine },\n  },\n  {\n    title: t('COMMON:MSG_MAIN_TABLEHEADER_93'),\n    sortField: 'host.spec.bmc.address',\n    transforms: [sortable],\n    props: { className: tableColumnClasses.address },\n  },\n  {\n    title: '',\n    props: { className: tableColumnClasses.kebab },\n  },\n];\n\nconst BareMetalNodesTableRow: React.FC<RowFunctionArgs<BareMetalNodeBundle>> = ({ obj: { host, node, nodeMaintenance, machine, status }, index, key, style }) => {\n  const hasNodeMaintenanceCapability = useFlag(NODE_MAINTENANCE_FLAG);\n  const nodeName = getName(node);\n  const hostName = getName(host);\n  const namespace = getNamespace(host);\n  const address = getHostBMCAddress(host);\n  const uid = getUID(node);\n\n  return (\n    <TableRow id={uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses.name}>{node ? <ResourceLink kind=\"Node\" name={nodeName} /> : <ResourceLink kind={referenceForModel(BareMetalHostModel)} name={hostName} namespace={namespace} />}</TableData>\n      <TableData className={tableColumnClasses.status}>\n        <BareMetalNodeStatus {...status} nodeMaintenance={nodeMaintenance} />\n        <SecondaryStatus status={baremetalNodeSecondaryStatus({ node, nodeMaintenance, host })} />\n      </TableData>\n      <TableData className={tableColumnClasses.role}>\n        <NodeRoles node={node} />\n      </TableData>\n      <TableData className={tableColumnClasses.machine}>{machine ? <ResourceLink kind={referenceForModel(MachineModel)} name={getName(machine)} namespace={getNamespace(machine)} /> : DASH}</TableData>\n      <TableData className={tableColumnClasses.address}>{address}</TableData>\n      <TableData className={tableColumnClasses.kebab}>\n        <Kebab options={menuActions.map(action => action(NodeModel, node, null, { nodeMaintenance, hasNodeMaintenanceCapability }))} key={`kebab-for-${uid}`} id={`kebab-for-${uid}`} />\n      </TableData>\n    </TableRow>\n  );\n};\n\ntype BareMetalNodesTableProps = React.ComponentProps<typeof Table> & {\n  data: BareMetalNodeBundle[];\n};\n\nconst BareMetalNodesTable: React.FC<BareMetalNodesTableProps> = props => {\n  const { t } = useTranslation();\n  const row = React.useCallback<RowFunction<BareMetalNodeBundle>>(rowProps => <BareMetalNodesTableRow {...rowProps} />, []);\n  return <Table {...props} defaultSortField=\"node.metadata.name\" aria-label=\"Nodes\" Header={BareMetalNodesTableHeader.bind(null, t)} Row={row} virtualize />;\n};\n\nexport default BareMetalNodesTable;\n"]}]}