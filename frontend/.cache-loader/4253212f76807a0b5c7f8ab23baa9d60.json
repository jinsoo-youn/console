{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/list-view.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/list-view.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { useFormContext, useFieldArray } from 'react-hook-form';\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nexport const ListView = ({ name, defaultItem = { key: '', value: '' }, itemRenderer, headerFragment, addButtonText }) => {\n    const { control, register, getValues } = useFormContext();\n    const { fields, append, remove } = useFieldArray({ control, name: name });\n    const DefaultListHeaderFragment = (React.createElement(\"div\", { className: \"row pairs-list__heading\" },\n        React.createElement(\"div\", { className: \"col-xs-4 text-secondary text-uppercase\" }, \"KEY\"),\n        React.createElement(\"div\", { className: \"col-xs-4 text-secondary text-uppercase\" }, \"VALUE\"),\n        React.createElement(\"div\", { className: \"col-xs-1 co-empty__header\" })));\n    const DefaultListItemRenderer = (register, item, index, ListActions, ListDefaultIcons) => {\n        return (React.createElement(\"div\", { className: \"row\", key: item.id },\n            React.createElement(\"div\", { className: \"col-xs-4 pairs-list__name-field\" },\n                React.createElement(\"input\", { ref: register(), className: \"pf-c-form-control\", name: `${name}[${index}].key`, defaultValue: item.key })),\n            React.createElement(\"div\", { className: \"col-xs-4 pairs-list__value-field\" },\n                React.createElement(\"input\", { ref: register(), className: \"pf-c-form-control\", name: `${name}[${index}].value`, defaultValue: item.value })),\n            React.createElement(\"div\", { className: \"col-xs-1 pairs-list__action\" },\n                React.createElement(Button, { type: \"button\", \"data-test-id\": \"pairs-list__delete-btn\", className: \"pairs-list__span-btns\", onClick: () => {\n                        ListActions.remove(index);\n                    }, variant: \"plain\" }, ListDefaultIcons.deleteIcon))));\n    };\n    const deleteIcon = (React.createElement(React.Fragment, null,\n        React.createElement(MinusCircleIcon, { className: \"pairs-list__side-btn pairs-list__delete-icon\" }),\n        React.createElement(\"span\", { className: \"sr-only\" }, \"Delete\")));\n    const ListActions = {\n        append: append,\n        remove: remove,\n        getValues: getValues,\n    };\n    const ListDefaultIcons = {\n        deleteIcon: deleteIcon,\n    };\n    const itemList = itemRenderer ? fields.map((item, index) => itemRenderer(register, item, index, ListActions, ListDefaultIcons)) : fields.map((item, index) => DefaultListItemRenderer(register, item, index, ListActions, ListDefaultIcons));\n    return (React.createElement(\"div\", null,\n        headerFragment ? headerFragment : DefaultListHeaderFragment,\n        itemList,\n        React.createElement(\"div\", { className: \"row col-xs-12\" },\n            React.createElement(Button, { className: \"pf-m-link--align-left\", \"data-test-id\": \"pairs-list__add-btn\", onClick: () => {\n                    append(defaultItem);\n                }, type: \"button\", variant: \"link\" },\n                React.createElement(PlusCircleIcon, { \"data-test-id\": \"pairs-list__add-icon\", className: \"co-icon-space-r\" }),\n                !!addButtonText ? addButtonText : 'Add'))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/list-view.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/list-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useFormContext, useFieldArray } from 'react-hook-form';\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nexport const ListView: React.FC<ListViewProps> = ({ name, defaultItem = { key: '', value: '' }, itemRenderer, headerFragment, addButtonText }) => {\n  const { control, register, getValues } = useFormContext();\n  const { fields, append, remove } = useFieldArray({ control, name: name });\n\n  const DefaultListHeaderFragment = (\n    <div className=\"row pairs-list__heading\">\n      <div className=\"col-xs-4 text-secondary text-uppercase\">KEY</div>\n      <div className=\"col-xs-4 text-secondary text-uppercase\">VALUE</div>\n      <div className=\"col-xs-1 co-empty__header\" />\n    </div>\n  );\n\n  const DefaultListItemRenderer = (register, item, index, ListActions, ListDefaultIcons) => {\n    return (\n      <div className=\"row\" key={item.id}>\n        <div className=\"col-xs-4 pairs-list__name-field\">\n          <input ref={register()} className=\"pf-c-form-control\" name={`${name}[${index}].key`} defaultValue={item.key}></input>\n        </div>\n        <div className=\"col-xs-4 pairs-list__value-field\">\n          <input ref={register()} className=\"pf-c-form-control\" name={`${name}[${index}].value`} defaultValue={item.value}></input>\n        </div>\n        <div className=\"col-xs-1 pairs-list__action\">\n          <Button\n            type=\"button\"\n            data-test-id=\"pairs-list__delete-btn\"\n            className=\"pairs-list__span-btns\"\n            onClick={() => {\n              ListActions.remove(index);\n            }}\n            variant=\"plain\"\n          >\n            {ListDefaultIcons.deleteIcon}\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const deleteIcon = (\n    <>\n      <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n      <span className=\"sr-only\">Delete</span>\n    </>\n  );\n\n  const ListActions = {\n    append: append,\n    remove: remove,\n    getValues: getValues,\n  };\n\n  const ListDefaultIcons = {\n    deleteIcon: deleteIcon,\n  };\n\n  const itemList = itemRenderer ? fields.map((item, index) => itemRenderer(register, item, index, ListActions, ListDefaultIcons)) : fields.map((item, index) => DefaultListItemRenderer(register, item, index, ListActions, ListDefaultIcons));\n\n  return (\n    <div>\n      {headerFragment ? headerFragment : DefaultListHeaderFragment}\n      {itemList}\n      <div className=\"row col-xs-12\">\n        <Button\n          className=\"pf-m-link--align-left\"\n          data-test-id=\"pairs-list__add-btn\"\n          onClick={() => {\n            append(defaultItem);\n          }}\n          type=\"button\"\n          variant=\"link\"\n        >\n          <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n          {!!addButtonText ? addButtonText : 'Add'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ntype ListViewProps = {\n  name: string;\n  defaultItem?: object;\n  itemRenderer?: Function;\n  headerFragment?: JSX.Element;\n  addButtonText?: string;\n};\n"]}]}