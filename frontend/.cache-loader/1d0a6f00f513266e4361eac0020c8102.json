{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/vms/vm-resource.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/vms/vm-resource.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ResourceSummary, NodeLink, ResourceLink } from '@console/internal/components/utils';\nimport { getName, getNamespace, getNodeName } from '@console/shared';\nimport { PodModel } from '@console/internal/models';\nimport { Selector } from '@console/internal/components/utils/selector';\nimport { VMTemplateLink } from '../vm-templates/vm-template-link';\nimport { getBasicID, prefixedID } from '../../utils';\nimport { vmDescriptionModal, vmFlavorModal } from '../modals';\nimport { VMCDRomModal } from '../modals/cdrom-vm-modal/vm-cdrom-modal';\nimport { BootOrderModal } from '../modals/boot-order-modal/boot-order-modal';\nimport dedicatedResourcesModal from '../modals/scheduling-modals/dedicated-resources-modal/connected-dedicated-resources-modal';\nimport nodeSelectorModal from '../modals/scheduling-modals/node-selector-modal/connected-node-selector-modal';\nimport tolerationsModal from '../modals/scheduling-modals/tolerations-modal/connected-tolerations-modal';\nimport affinityModal from '../modals/scheduling-modals/affinity-modal/connected-affinity-modal';\nimport { getRowsDataFromAffinity } from '../modals/scheduling-modals/affinity-modal/helpers';\nimport VMStatusModal from '../modals/vm-status-modal/vm-status-modal';\nimport { getDescription } from '../../selectors/selectors';\nimport { EditButton } from '../edit-button';\nimport { VMStatus } from '../vm-status/vm-status';\nimport { DiskSummary } from '../vm-disks/disk-summary';\nimport { BootOrderSummary } from '../boot-order';\nimport { getOperatingSystemName, getOperatingSystem, isVMRunningOrExpectedRunning, } from '../../selectors/vm';\nimport { getVmiIpAddresses } from '../../selectors/vmi/ip-address';\nimport { findVMIPod } from '../../selectors/pod/selectors';\nimport { isVMIPaused, getVMINodeName } from '../../selectors/vmi';\nimport { VirtualMachineInstanceModel, VirtualMachineModel } from '../../models';\nimport { asVMILikeWrapper } from '../../k8s/wrapper/utils/convert';\nimport { getVMTemplate } from '../../selectors/vm-template/selectors';\nimport { getFlavorText } from '../../selectors/vm/flavor-text';\nimport { NODE_SELECTOR_MODAL_TITLE, DEDICATED_RESOURCES_PINNED, DEDICATED_RESOURCES_NOT_PINNED, DEDICATED_RESOURCES_MODAL_TITLE, TOLERATIONS_MODAL_TITLE, AFFINITY_MODAL_TITLE, } from '../modals/scheduling-modals/shared/consts';\nimport './vm-resource.scss';\nexport const VMDetailsItem = ({ title, canEdit = false, editButtonId, onEditClick, idValue, isNotAvail = false, valueClassName, children, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"dt\", null,\n            title,\n            \" \",\n            React.createElement(EditButton, { id: editButtonId, canEdit: canEdit, onClick: onEditClick })),\n        React.createElement(\"dd\", { id: idValue, className: valueClassName }, isNotAvail ? React.createElement(\"span\", { className: \"text-secondary\" }, \"Not available\") : children)));\n};\nexport const VMResourceSummary = ({ vm, vmi, canUpdateVM, templates, kindObj, }) => {\n    const isVM = kindObj === VirtualMachineModel;\n    const vmiLike = isVM ? vm : vmi;\n    const template = getVMTemplate(vm, templates);\n    const id = getBasicID(vmiLike);\n    const description = getDescription(vmiLike);\n    const os = getOperatingSystemName(vmiLike) || getOperatingSystem(vmiLike);\n    return (React.createElement(ResourceSummary, { resource: vmiLike },\n        React.createElement(VMDetailsItem, { title: \"Description\", idValue: prefixedID(id, 'description'), valueClassName: \"kubevirt-vm-resource-summary__description\" },\n            !description && React.createElement(\"span\", { className: \"text-secondary\" }, \"Not available\"),\n            React.createElement(EditButton, { canEdit: canUpdateVM, onClick: () => vmDescriptionModal({ vmLikeEntity: vmiLike }) }, description)),\n        React.createElement(VMDetailsItem, { title: \"Operating System\", idValue: prefixedID(id, 'os'), isNotAvail: !os }, os),\n        isVM && (React.createElement(VMDetailsItem, { title: \"Template\", idValue: prefixedID(id, 'template'), isNotAvail: !template }, template && (React.createElement(VMTemplateLink, { name: getName(template), namespace: getNamespace(template) }))))));\n};\nexport const VMDetailsList = ({ vm, vmi, pods, vmStatusBundle, canUpdateVM, kindObj, }) => {\n    const [isBootOrderModalOpen, setBootOrderModalOpen] = React.useState(false);\n    const isVM = kindObj === VirtualMachineModel;\n    const vmiLike = isVM ? vm : vmi;\n    const vmiLikeWrapper = asVMILikeWrapper(vmiLike);\n    const canEdit = vmiLike &&\n        canUpdateVM &&\n        kindObj !== VirtualMachineInstanceModel &&\n        !isVMRunningOrExpectedRunning(vm);\n    const [isStatusModalOpen, setStatusModalOpen] = React.useState(false);\n    const launcherPod = findVMIPod(vmi, pods);\n    const id = getBasicID(vmiLike);\n    const cds = (vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getCDROMs()) || [];\n    const devices = (vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getLabeledDevices()) || [];\n    const nodeName = getVMINodeName(vmi) || getNodeName(launcherPod);\n    const ipAddrs = getVmiIpAddresses(vmi).join(', ');\n    const workloadProfile = vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getWorkloadProfile();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(VMDetailsItem, { title: \"Status\", canEdit: isVMIPaused(vmi), editButtonId: prefixedID(id, 'status-edit'), onEditClick: () => setStatusModalOpen(true), idValue: prefixedID(id, 'vm-statuses') },\n            React.createElement(VMStatusModal, { isOpen: isStatusModalOpen, setOpen: setStatusModalOpen, vmi: vmi }),\n            React.createElement(VMStatus, { vm: vm, vmi: vmi, vmStatusBundle: vmStatusBundle })),\n        React.createElement(VMDetailsItem, { title: \"Pod\", idValue: prefixedID(id, 'pod'), isNotAvail: !launcherPod }, launcherPod && (React.createElement(ResourceLink, { kind: PodModel.kind, name: getName(launcherPod), namespace: getNamespace(launcherPod) }))),\n        React.createElement(VMDetailsItem, { title: \"Boot Order\", canEdit: canEdit, editButtonId: prefixedID(id, 'boot-order-edit'), onEditClick: () => setBootOrderModalOpen(true), idValue: prefixedID(id, 'boot-order') },\n            React.createElement(BootOrderModal, { isOpen: isBootOrderModalOpen, setOpen: setBootOrderModalOpen, vmLikeEntity: vm }),\n            React.createElement(BootOrderSummary, { devices: devices })),\n        React.createElement(VMDetailsItem, { title: \"CD-ROMs\", canEdit: canEdit, editButtonId: prefixedID(id, 'cdrom-edit'), onEditClick: () => VMCDRomModal({ vmLikeEntity: vm, modalClassName: 'modal-lg' }), idValue: prefixedID(id, 'cdrom'), isNotAvail: cds.length === 0 },\n            React.createElement(DiskSummary, { disks: cds, vm: vm })),\n        React.createElement(VMDetailsItem, { title: \"IP Address\", idValue: prefixedID(id, 'ip-addresses'), isNotAvail: !launcherPod || !ipAddrs }, launcherPod && ipAddrs),\n        React.createElement(VMDetailsItem, { title: \"Node\", idValue: prefixedID(id, 'node'), isNotAvail: !launcherPod || !nodeName }, launcherPod && nodeName && React.createElement(NodeLink, { name: nodeName })),\n        React.createElement(VMDetailsItem, { title: \"Workload Profile\", idValue: prefixedID(id, 'workload-profile'), isNotAvail: !workloadProfile }, workloadProfile)));\n};\nexport const VMSchedulingList = ({ vm, vmi, canUpdateVM, kindObj, }) => {\n    var _a;\n    const isVM = kindObj === VirtualMachineModel;\n    const vmiLike = isVM ? vm : vmi;\n    const vmiLikeWrapper = asVMILikeWrapper(vmiLike);\n    const canEdit = vmiLike &&\n        canUpdateVM &&\n        kindObj !== VirtualMachineInstanceModel &&\n        !isVMRunningOrExpectedRunning(vm);\n    const id = getBasicID(vmiLike);\n    const flavorText = getFlavorText({\n        memory: vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getMemory(),\n        cpu: vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getCPU(),\n        flavor: vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getFlavor(),\n    });\n    const isCPUPinned = vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.isDedicatedCPUPlacement();\n    const nodeSelector = vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getNodeSelector();\n    const tolerationsWrapperCount = ((vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getTolerations()) || []).length;\n    const affinityWrapperCount = (_a = getRowsDataFromAffinity(vmiLikeWrapper === null || vmiLikeWrapper === void 0 ? void 0 : vmiLikeWrapper.getAffinity())) === null || _a === void 0 ? void 0 : _a.length;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"col-sm-6\" },\n            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                React.createElement(VMDetailsItem, { canEdit: canEdit, title: NODE_SELECTOR_MODAL_TITLE, idValue: prefixedID(id, 'node-selector'), editButtonId: prefixedID(id, 'node-selector-edit'), onEditClick: () => nodeSelectorModal({ vmLikeEntity: vm, blocking: true }) },\n                    React.createElement(Selector, { kind: \"Node\", selector: nodeSelector })),\n                React.createElement(VMDetailsItem, { canEdit: canEdit, title: TOLERATIONS_MODAL_TITLE, idValue: prefixedID(id, 'tolerations'), editButtonId: prefixedID(id, 'tolerations-edit'), onEditClick: () => tolerationsModal({\n                        vmLikeEntity: vm,\n                        blocking: true,\n                        modalClassName: 'modal-lg',\n                    }) }, tolerationsWrapperCount > 0 ? (`${tolerationsWrapperCount} Toleration rules`) : (React.createElement(\"p\", { className: \"text-muted\" }, \"No Toleration rules\"))),\n                React.createElement(VMDetailsItem, { canEdit: canEdit, title: AFFINITY_MODAL_TITLE, idValue: prefixedID(id, 'affinity'), editButtonId: prefixedID(id, 'affinity-edit'), onEditClick: () => affinityModal({ vmLikeEntity: vm, blocking: true, modalClassName: 'modal-lg' }) }, affinityWrapperCount > 0 ? (`${affinityWrapperCount} Affinity rules`) : (React.createElement(\"p\", { className: \"text-muted\" }, \"No Affinity rules\"))))),\n        React.createElement(\"div\", { className: \"col-sm-6\" },\n            React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                React.createElement(VMDetailsItem, { title: \"Flavor\", idValue: prefixedID(id, 'flavor'), canEdit: canEdit, onEditClick: () => vmFlavorModal({ vmLike: vm, blocking: true }), editButtonId: prefixedID(id, 'flavor-edit'), isNotAvail: !flavorText }, flavorText),\n                React.createElement(VMDetailsItem, { title: DEDICATED_RESOURCES_MODAL_TITLE, idValue: prefixedID(id, 'dedicated-resources'), canEdit: canEdit, onEditClick: () => dedicatedResourcesModal({ vmLikeEntity: vm, blocking: true }), editButtonId: prefixedID(id, 'dedicated-resources-edit') }, isCPUPinned ? DEDICATED_RESOURCES_PINNED : DEDICATED_RESOURCES_NOT_PINNED)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/vms/vm-resource.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/vms/vm-resource.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ResourceSummary, NodeLink, ResourceLink } from '@console/internal/components/utils';\nimport { K8sKind, PodKind, TemplateKind } from '@console/internal/module/k8s';\nimport { getName, getNamespace, getNodeName } from '@console/shared';\nimport { PodModel } from '@console/internal/models';\nimport { Selector } from '@console/internal/components/utils/selector';\nimport { VMKind, VMIKind } from '../../types';\nimport { VMTemplateLink } from '../vm-templates/vm-template-link';\nimport { getBasicID, prefixedID } from '../../utils';\nimport { vmDescriptionModal, vmFlavorModal } from '../modals';\nimport { VMCDRomModal } from '../modals/cdrom-vm-modal/vm-cdrom-modal';\nimport { BootOrderModal } from '../modals/boot-order-modal/boot-order-modal';\nimport dedicatedResourcesModal from '../modals/scheduling-modals/dedicated-resources-modal/connected-dedicated-resources-modal';\nimport nodeSelectorModal from '../modals/scheduling-modals/node-selector-modal/connected-node-selector-modal';\nimport tolerationsModal from '../modals/scheduling-modals/tolerations-modal/connected-tolerations-modal';\nimport affinityModal from '../modals/scheduling-modals/affinity-modal/connected-affinity-modal';\nimport { getRowsDataFromAffinity } from '../modals/scheduling-modals/affinity-modal/helpers';\nimport VMStatusModal from '../modals/vm-status-modal/vm-status-modal';\nimport { getDescription } from '../../selectors/selectors';\nimport { EditButton } from '../edit-button';\nimport { VMStatus } from '../vm-status/vm-status';\nimport { DiskSummary } from '../vm-disks/disk-summary';\nimport { BootOrderSummary } from '../boot-order';\nimport {\n  getOperatingSystemName,\n  getOperatingSystem,\n  isVMRunningOrExpectedRunning,\n} from '../../selectors/vm';\nimport { getVmiIpAddresses } from '../../selectors/vmi/ip-address';\nimport { findVMIPod } from '../../selectors/pod/selectors';\nimport { isVMIPaused, getVMINodeName } from '../../selectors/vmi';\nimport { VirtualMachineInstanceModel, VirtualMachineModel } from '../../models';\nimport { asVMILikeWrapper } from '../../k8s/wrapper/utils/convert';\nimport { getVMTemplate } from '../../selectors/vm-template/selectors';\nimport { getFlavorText } from '../../selectors/vm/flavor-text';\nimport {\n  NODE_SELECTOR_MODAL_TITLE,\n  DEDICATED_RESOURCES_PINNED,\n  DEDICATED_RESOURCES_NOT_PINNED,\n  DEDICATED_RESOURCES_MODAL_TITLE,\n  TOLERATIONS_MODAL_TITLE,\n  AFFINITY_MODAL_TITLE,\n} from '../modals/scheduling-modals/shared/consts';\nimport { VMStatusBundle } from '../../statuses/vm/types';\n\nimport './vm-resource.scss';\n\nexport const VMDetailsItem: React.FC<VMDetailsItemProps> = ({\n  title,\n  canEdit = false,\n  editButtonId,\n  onEditClick,\n  idValue,\n  isNotAvail = false,\n  valueClassName,\n  children,\n}) => {\n  return (\n    <>\n      <dt>\n        {title} <EditButton id={editButtonId} canEdit={canEdit} onClick={onEditClick} />\n      </dt>\n      <dd id={idValue} className={valueClassName}>\n        {isNotAvail ? <span className=\"text-secondary\">Not available</span> : children}\n      </dd>\n    </>\n  );\n};\n\nexport const VMResourceSummary: React.FC<VMResourceSummaryProps> = ({\n  vm,\n  vmi,\n  canUpdateVM,\n  templates,\n  kindObj,\n}) => {\n  const isVM = kindObj === VirtualMachineModel;\n  const vmiLike = isVM ? vm : vmi;\n\n  const template = getVMTemplate(vm, templates);\n  const id = getBasicID(vmiLike);\n  const description = getDescription(vmiLike);\n  const os = getOperatingSystemName(vmiLike) || getOperatingSystem(vmiLike);\n\n  return (\n    <ResourceSummary resource={vmiLike}>\n      <VMDetailsItem\n        title=\"Description\"\n        idValue={prefixedID(id, 'description')}\n        valueClassName=\"kubevirt-vm-resource-summary__description\"\n      >\n        {!description && <span className=\"text-secondary\">Not available</span>}\n        <EditButton\n          canEdit={canUpdateVM}\n          onClick={() => vmDescriptionModal({ vmLikeEntity: vmiLike })}\n        >\n          {description}\n        </EditButton>\n      </VMDetailsItem>\n\n      <VMDetailsItem title=\"Operating System\" idValue={prefixedID(id, 'os')} isNotAvail={!os}>\n        {os}\n      </VMDetailsItem>\n\n      {isVM && (\n        <VMDetailsItem title=\"Template\" idValue={prefixedID(id, 'template')} isNotAvail={!template}>\n          {template && (\n            <VMTemplateLink name={getName(template)} namespace={getNamespace(template)} />\n          )}\n        </VMDetailsItem>\n      )}\n    </ResourceSummary>\n  );\n};\n\nexport const VMDetailsList: React.FC<VMResourceListProps> = ({\n  vm,\n  vmi,\n  pods,\n  vmStatusBundle,\n  canUpdateVM,\n  kindObj,\n}) => {\n  const [isBootOrderModalOpen, setBootOrderModalOpen] = React.useState<boolean>(false);\n  const isVM = kindObj === VirtualMachineModel;\n  const vmiLike = isVM ? vm : vmi;\n  const vmiLikeWrapper = asVMILikeWrapper(vmiLike);\n\n  const canEdit =\n    vmiLike &&\n    canUpdateVM &&\n    kindObj !== VirtualMachineInstanceModel &&\n    !isVMRunningOrExpectedRunning(vm);\n\n  const [isStatusModalOpen, setStatusModalOpen] = React.useState<boolean>(false);\n\n  const launcherPod = findVMIPod(vmi, pods);\n  const id = getBasicID(vmiLike);\n  const cds = vmiLikeWrapper?.getCDROMs() || [];\n  const devices = vmiLikeWrapper?.getLabeledDevices() || [];\n  const nodeName = getVMINodeName(vmi) || getNodeName(launcherPod);\n  const ipAddrs = getVmiIpAddresses(vmi).join(', ');\n  const workloadProfile = vmiLikeWrapper?.getWorkloadProfile();\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <VMDetailsItem\n        title=\"Status\"\n        canEdit={isVMIPaused(vmi)}\n        editButtonId={prefixedID(id, 'status-edit')}\n        onEditClick={() => setStatusModalOpen(true)}\n        idValue={prefixedID(id, 'vm-statuses')}\n      >\n        <VMStatusModal isOpen={isStatusModalOpen} setOpen={setStatusModalOpen} vmi={vmi} />\n        <VMStatus vm={vm} vmi={vmi} vmStatusBundle={vmStatusBundle} />\n      </VMDetailsItem>\n\n      <VMDetailsItem title=\"Pod\" idValue={prefixedID(id, 'pod')} isNotAvail={!launcherPod}>\n        {launcherPod && (\n          <ResourceLink\n            kind={PodModel.kind}\n            name={getName(launcherPod)}\n            namespace={getNamespace(launcherPod)}\n          />\n        )}\n      </VMDetailsItem>\n\n      <VMDetailsItem\n        title=\"Boot Order\"\n        canEdit={canEdit}\n        editButtonId={prefixedID(id, 'boot-order-edit')}\n        onEditClick={() => setBootOrderModalOpen(true)}\n        idValue={prefixedID(id, 'boot-order')}\n      >\n        <BootOrderModal\n          isOpen={isBootOrderModalOpen}\n          setOpen={setBootOrderModalOpen}\n          vmLikeEntity={vm}\n        />\n        <BootOrderSummary devices={devices} />\n      </VMDetailsItem>\n\n      <VMDetailsItem\n        title=\"CD-ROMs\"\n        canEdit={canEdit}\n        editButtonId={prefixedID(id, 'cdrom-edit')}\n        onEditClick={() => VMCDRomModal({ vmLikeEntity: vm, modalClassName: 'modal-lg' })}\n        idValue={prefixedID(id, 'cdrom')}\n        isNotAvail={cds.length === 0}\n      >\n        <DiskSummary disks={cds} vm={vm} />\n      </VMDetailsItem>\n\n      <VMDetailsItem\n        title=\"IP Address\"\n        idValue={prefixedID(id, 'ip-addresses')}\n        isNotAvail={!launcherPod || !ipAddrs}\n      >\n        {launcherPod && ipAddrs}\n      </VMDetailsItem>\n\n      <VMDetailsItem\n        title=\"Node\"\n        idValue={prefixedID(id, 'node')}\n        isNotAvail={!launcherPod || !nodeName}\n      >\n        {launcherPod && nodeName && <NodeLink name={nodeName} />}\n      </VMDetailsItem>\n\n      <VMDetailsItem\n        title=\"Workload Profile\"\n        idValue={prefixedID(id, 'workload-profile')}\n        isNotAvail={!workloadProfile}\n      >\n        {workloadProfile}\n      </VMDetailsItem>\n    </dl>\n  );\n};\n\nexport const VMSchedulingList: React.FC<VMSchedulingListProps> = ({\n  vm,\n  vmi,\n  canUpdateVM,\n  kindObj,\n}) => {\n  const isVM = kindObj === VirtualMachineModel;\n  const vmiLike = isVM ? vm : vmi;\n  const vmiLikeWrapper = asVMILikeWrapper(vmiLike);\n  const canEdit =\n    vmiLike &&\n    canUpdateVM &&\n    kindObj !== VirtualMachineInstanceModel &&\n    !isVMRunningOrExpectedRunning(vm);\n\n  const id = getBasicID(vmiLike);\n  const flavorText = getFlavorText({\n    memory: vmiLikeWrapper?.getMemory(),\n    cpu: vmiLikeWrapper?.getCPU(),\n    flavor: vmiLikeWrapper?.getFlavor(),\n  });\n  const isCPUPinned = vmiLikeWrapper?.isDedicatedCPUPlacement();\n  const nodeSelector = vmiLikeWrapper?.getNodeSelector();\n  const tolerationsWrapperCount = (vmiLikeWrapper?.getTolerations() || []).length;\n  const affinityWrapperCount = getRowsDataFromAffinity(vmiLikeWrapper?.getAffinity())?.length;\n\n  return (\n    <>\n      <div className=\"col-sm-6\">\n        <dl className=\"co-m-pane__details\">\n          <VMDetailsItem\n            canEdit={canEdit}\n            title={NODE_SELECTOR_MODAL_TITLE}\n            idValue={prefixedID(id, 'node-selector')}\n            editButtonId={prefixedID(id, 'node-selector-edit')}\n            onEditClick={() => nodeSelectorModal({ vmLikeEntity: vm, blocking: true })}\n          >\n            <Selector kind=\"Node\" selector={nodeSelector} />\n          </VMDetailsItem>\n\n          <VMDetailsItem\n            canEdit={canEdit}\n            title={TOLERATIONS_MODAL_TITLE}\n            idValue={prefixedID(id, 'tolerations')}\n            editButtonId={prefixedID(id, 'tolerations-edit')}\n            onEditClick={() =>\n              tolerationsModal({\n                vmLikeEntity: vm,\n                blocking: true,\n                modalClassName: 'modal-lg',\n              })\n            }\n          >\n            {tolerationsWrapperCount > 0 ? (\n              `${tolerationsWrapperCount} Toleration rules`\n            ) : (\n              <p className=\"text-muted\">No Toleration rules</p>\n            )}\n          </VMDetailsItem>\n\n          <VMDetailsItem\n            canEdit={canEdit}\n            title={AFFINITY_MODAL_TITLE}\n            idValue={prefixedID(id, 'affinity')}\n            editButtonId={prefixedID(id, 'affinity-edit')}\n            onEditClick={() =>\n              affinityModal({ vmLikeEntity: vm, blocking: true, modalClassName: 'modal-lg' })\n            }\n          >\n            {affinityWrapperCount > 0 ? (\n              `${affinityWrapperCount} Affinity rules`\n            ) : (\n              <p className=\"text-muted\">No Affinity rules</p>\n            )}\n          </VMDetailsItem>\n        </dl>\n      </div>\n\n      <div className=\"col-sm-6\">\n        <dl className=\"co-m-pane__details\">\n          <VMDetailsItem\n            title=\"Flavor\"\n            idValue={prefixedID(id, 'flavor')}\n            canEdit={canEdit}\n            onEditClick={() => vmFlavorModal({ vmLike: vm, blocking: true })}\n            editButtonId={prefixedID(id, 'flavor-edit')}\n            isNotAvail={!flavorText}\n          >\n            {flavorText}\n          </VMDetailsItem>\n\n          <VMDetailsItem\n            title={DEDICATED_RESOURCES_MODAL_TITLE}\n            idValue={prefixedID(id, 'dedicated-resources')}\n            canEdit={canEdit}\n            onEditClick={() => dedicatedResourcesModal({ vmLikeEntity: vm, blocking: true })}\n            editButtonId={prefixedID(id, 'dedicated-resources-edit')}\n          >\n            {isCPUPinned ? DEDICATED_RESOURCES_PINNED : DEDICATED_RESOURCES_NOT_PINNED}\n          </VMDetailsItem>\n        </dl>\n      </div>\n    </>\n  );\n};\n\ntype VMDetailsItemProps = {\n  title: string;\n  canEdit?: boolean;\n  editButtonId?: string;\n  onEditClick?: () => void;\n  idValue?: string;\n  isNotAvail?: boolean;\n  valueClassName?: string;\n  children: React.ReactNode;\n};\n\ntype VMResourceSummaryProps = {\n  kindObj: K8sKind;\n  vm?: VMKind;\n  vmi?: VMIKind;\n  templates: TemplateKind[];\n  canUpdateVM: boolean;\n};\n\ntype VMResourceListProps = {\n  kindObj: K8sKind;\n  vm?: VMKind;\n  pods?: PodKind[];\n  vmi?: VMIKind;\n  canUpdateVM: boolean;\n  vmStatusBundle: VMStatusBundle;\n};\n\ntype VMSchedulingListProps = {\n  kindObj: K8sKind;\n  vm?: VMKind;\n  vmi?: VMIKind;\n  canUpdateVM: boolean;\n};\n"]}]}