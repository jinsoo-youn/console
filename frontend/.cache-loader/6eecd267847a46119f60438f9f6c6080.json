{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/const.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/const.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const NODE_SEPARATION_HORIZONTAL = 25;\nexport const NODE_SEPARATION_VERTICAL = 20;\nexport const DROP_SHADOW_SPACING = 5;\nexport const BUILDER_NODE_ADD_RADIUS = 9;\nexport const BUILDER_NODE_ERROR_RADIUS = 9;\nexport const BUILDER_NODE_ADD_PADDING = 4;\nexport const NODE_WIDTH = 120;\nexport const NODE_HEIGHT = 30;\nexport var NodeType;\n(function (NodeType) {\n    NodeType[\"TASK_NODE\"] = \"task\";\n    NodeType[\"SPACER_NODE\"] = \"spacer\";\n    NodeType[\"TASK_LIST_NODE\"] = \"task-list\";\n    NodeType[\"BUILDER_NODE\"] = \"builder\";\n    NodeType[\"INVALID_TASK_LIST_NODE\"] = \"invalid-task-list\";\n})(NodeType || (NodeType = {}));\nexport var DrawDesign;\n(function (DrawDesign) {\n    DrawDesign[\"INTEGRAL_SHAPE\"] = \"integral-shape\";\n    DrawDesign[\"STRAIGHT\"] = \"line\";\n})(DrawDesign || (DrawDesign = {}));\nexport var PipelineLayout;\n(function (PipelineLayout) {\n    PipelineLayout[\"DAGRE_BUILDER\"] = \"dagre-builder\";\n    PipelineLayout[\"DAGRE_VIEWER\"] = \"dagre-viewer\";\n})(PipelineLayout || (PipelineLayout = {}));\nexport var AddNodeDirection;\n(function (AddNodeDirection) {\n    /**\n     * Rules today:\n     *  - the `relatedTask` is pointing at ONLY us\n     *  - we inherit all that `relatedTask` is pointing at\n     */\n    AddNodeDirection[\"BEFORE\"] = \"in-run-after\";\n    /**\n     * Rules today:\n     *  - the `relatedTask` must be our ONLY runAfter\n     *  - we are added to all that is pointing at `relatedTask`\n     */\n    AddNodeDirection[\"AFTER\"] = \"has-run-after\";\n    /**\n     * Rules today:\n     *  - we inherit all that `relatedTask` is pointing at\n     *  - we are added to all that is pointing at `relatedTask`\n     */\n    AddNodeDirection[\"PARALLEL\"] = \"shared-parallel\";\n})(AddNodeDirection || (AddNodeDirection = {}));\nconst DAGRE_SHARED_PROPS = {\n    nodesep: NODE_SEPARATION_VERTICAL,\n    ranksep: NODE_SEPARATION_HORIZONTAL,\n    edgesep: 25,\n    ranker: 'longest-path',\n    rankdir: 'LR',\n    align: 'UL',\n    marginx: 20,\n    marginy: 20,\n};\nexport const DAGRE_VIEWER_PROPS = Object.assign({}, DAGRE_SHARED_PROPS);\nexport const DAGRE_BUILDER_PROPS = Object.assign(Object.assign({}, DAGRE_SHARED_PROPS), { ranksep: NODE_SEPARATION_HORIZONTAL + BUILDER_NODE_ADD_RADIUS * 2, nodesep: NODE_SEPARATION_VERTICAL + BUILDER_NODE_ADD_RADIUS, marginx: DAGRE_SHARED_PROPS.marginx + BUILDER_NODE_ADD_RADIUS * 2, marginy: DAGRE_SHARED_PROPS.marginy + BUILDER_NODE_ADD_RADIUS * 2 });\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/const.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-topology/const.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,0BAA0B,GAAG,EAAE,CAAC;AAC7C,MAAM,CAAC,MAAM,wBAAwB,GAAG,EAAE,CAAC;AAC3C,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,CAAC;AAC3C,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,CAAC;AAE1C,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,CAAC;AAC9B,MAAM,CAAC,MAAM,WAAW,GAAG,EAAE,CAAC;AAE9B,MAAM,CAAN,IAAY,QAMX;AAND,WAAY,QAAQ;IAClB,8BAAkB,CAAA;IAClB,kCAAsB,CAAA;IACtB,wCAA4B,CAAA;IAC5B,oCAAwB,CAAA;IACxB,wDAA4C,CAAA;AAC9C,CAAC,EANW,QAAQ,KAAR,QAAQ,QAMnB;AACD,MAAM,CAAN,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,+CAAiC,CAAA;IACjC,+BAAiB,CAAA;AACnB,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;AACD,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,+CAA6B,CAAA;AAC/B,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,MAAM,CAAN,IAAY,gBAqBX;AArBD,WAAY,gBAAgB;IAC1B;;;;OAIG;IACH,2CAAuB,CAAA;IAEvB;;;;OAIG;IACH,2CAAuB,CAAA;IAEvB;;;;OAIG;IACH,gDAA4B,CAAA;AAC9B,CAAC,EArBW,gBAAgB,KAAhB,gBAAgB,QAqB3B;AAED,MAAM,kBAAkB,GAAqB;IAC3C,OAAO,EAAE,wBAAwB;IACjC,OAAO,EAAE,0BAA0B;IACnC,OAAO,EAAE,EAAE;IACX,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,IAAI;IACX,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;CACZ,CAAC;AACF,MAAM,CAAC,MAAM,kBAAkB,qBAC1B,kBAAkB,CACtB,CAAC;AACF,MAAM,CAAC,MAAM,mBAAmB,mCAC3B,kBAAkB,KACrB,OAAO,EAAE,0BAA0B,GAAG,uBAAuB,GAAG,CAAC,EACjE,OAAO,EAAE,wBAAwB,GAAG,uBAAuB,EAC3D,OAAO,EAAE,kBAAkB,CAAC,OAAO,GAAG,uBAAuB,GAAG,CAAC,EACjE,OAAO,EAAE,kBAAkB,CAAC,OAAO,GAAG,uBAAuB,GAAG,CAAC,GAClE,CAAC","sourcesContent":["import * as dagre from 'dagre';\n\nexport const NODE_SEPARATION_HORIZONTAL = 25;\nexport const NODE_SEPARATION_VERTICAL = 20;\nexport const DROP_SHADOW_SPACING = 5;\nexport const BUILDER_NODE_ADD_RADIUS = 9;\nexport const BUILDER_NODE_ERROR_RADIUS = 9;\nexport const BUILDER_NODE_ADD_PADDING = 4;\n\nexport const NODE_WIDTH = 120;\nexport const NODE_HEIGHT = 30;\n\nexport enum NodeType {\n  TASK_NODE = 'task',\n  SPACER_NODE = 'spacer',\n  TASK_LIST_NODE = 'task-list',\n  BUILDER_NODE = 'builder',\n  INVALID_TASK_LIST_NODE = 'invalid-task-list',\n}\nexport enum DrawDesign {\n  INTEGRAL_SHAPE = 'integral-shape',\n  STRAIGHT = 'line',\n}\nexport enum PipelineLayout {\n  DAGRE_BUILDER = 'dagre-builder',\n  DAGRE_VIEWER = 'dagre-viewer',\n}\n\nexport enum AddNodeDirection {\n  /**\n   * Rules today:\n   *  - the `relatedTask` is pointing at ONLY us\n   *  - we inherit all that `relatedTask` is pointing at\n   */\n  BEFORE = 'in-run-after',\n\n  /**\n   * Rules today:\n   *  - the `relatedTask` must be our ONLY runAfter\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  AFTER = 'has-run-after',\n\n  /**\n   * Rules today:\n   *  - we inherit all that `relatedTask` is pointing at\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  PARALLEL = 'shared-parallel',\n}\n\nconst DAGRE_SHARED_PROPS: dagre.GraphLabel = {\n  nodesep: NODE_SEPARATION_VERTICAL,\n  ranksep: NODE_SEPARATION_HORIZONTAL,\n  edgesep: 25,\n  ranker: 'longest-path',\n  rankdir: 'LR',\n  align: 'UL',\n  marginx: 20,\n  marginy: 20,\n};\nexport const DAGRE_VIEWER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n};\nexport const DAGRE_BUILDER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + BUILDER_NODE_ADD_RADIUS * 2,\n  nodesep: NODE_SEPARATION_VERTICAL + BUILDER_NODE_ADD_RADIUS,\n  marginx: DAGRE_SHARED_PROPS.marginx + BUILDER_NODE_ADD_RADIUS * 2,\n  marginy: DAGRE_SHARED_PROPS.marginy + BUILDER_NODE_ADD_RADIUS * 2,\n};\n"]}]}