{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/module/hypercloud/k8s/kind-to-schema-path.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/hypercloud/k8s/kind-to-schema-path.ts","mtime":1617848124060},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const kindToSchemaPath = new Map([\n    ['CustomResourceDefinition', { directory: 'management', file: 'CustomResourceDefinition.json' }],\n    ['LimitRange', { directory: 'management', file: 'LimitRange.json' }],\n    ['Namespace', { directory: 'management', file: 'Namespace.json' }],\n    ['Node', { directory: 'management', file: 'Node.json' }],\n    ['ResourceQuota', { directory: 'management', file: 'ResourceQuota.json' }],\n    ['Role', { directory: 'management', file: 'Role.json' }],\n    ['ServiceAccount', { directory: 'management', file: 'ServiceAccount.json' }],\n    ['Ingress', { directory: 'network', file: 'Ingress.json' }],\n    ['NetworkPolicy', { directory: 'network', file: 'NetworkPolicy.json' }],\n    ['Service', { directory: 'network', file: 'Service.json' }],\n    ['PersistentVolume', { directory: 'storage', file: 'PersistentVolume.json' }],\n    ['PersistentVolumeClaim', { directory: 'storage', file: 'PersistentVolumeClaim.json' }],\n    ['StorageClass', { directory: 'storage', file: 'StorageClass.json' }],\n    ['ConfigMap', { directory: 'workload', file: 'ConfigMap.json' }],\n    ['CronJob', { directory: 'workload', file: 'CronJob.json' }],\n    ['DaemonSet', { directory: 'workload', file: 'DaemonSet.json' }],\n    ['Deployment', { directory: 'workload', file: 'Deployment.json' }],\n    ['HorizontalPodAutoscaler', { directory: 'workload', file: 'HorizontalPodAutoscaler.json' }],\n    ['Job', { directory: 'workload', file: 'Job.json' }],\n    ['Pod', { directory: 'workload', file: 'Pod.json' }],\n    ['PodSecurityPolicy', { directory: 'workload', file: 'PodSecurityPolicy.json' }],\n    ['ReplicaSet', { directory: 'workload', file: 'ReplicaSet.json' }],\n    ['StatefulSet', { directory: 'workload', file: 'StatefulSet.json' }],\n]);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/hypercloud/k8s/kind-to-schema-path.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/module/hypercloud/k8s/kind-to-schema-path.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC;IACtC,CAAC,0BAA0B,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,+BAA+B,EAAE,CAAC;IAChG,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;IACpE,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;IAClE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;IACxD,CAAC,eAAe,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC;IAC1E,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;IACxD,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC;IAC5E,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;IAC3D,CAAC,eAAe,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC;IACvE,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;IAC3D,CAAC,kBAAkB,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,uBAAuB,EAAE,CAAC;IAC7E,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,4BAA4B,EAAE,CAAC;IACvF,CAAC,cAAc,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;IACrE,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;IAChE,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;IAC5D,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;IAChE,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;IAClE,CAAC,yBAAyB,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,8BAA8B,EAAE,CAAC;IAC5F,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;IACpD,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;IACpD,CAAC,mBAAmB,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC;IAChF,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;IAClE,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;CACrE,CAAC,CAAC","sourcesContent":["export const kindToSchemaPath = new Map([\n  ['CustomResourceDefinition', { directory: 'management', file: 'CustomResourceDefinition.json' }],\n  ['LimitRange', { directory: 'management', file: 'LimitRange.json' }],\n  ['Namespace', { directory: 'management', file: 'Namespace.json' }],\n  ['Node', { directory: 'management', file: 'Node.json' }],\n  ['ResourceQuota', { directory: 'management', file: 'ResourceQuota.json' }],\n  ['Role', { directory: 'management', file: 'Role.json' }],\n  ['ServiceAccount', { directory: 'management', file: 'ServiceAccount.json' }],\n  ['Ingress', { directory: 'network', file: 'Ingress.json' }],\n  ['NetworkPolicy', { directory: 'network', file: 'NetworkPolicy.json' }],\n  ['Service', { directory: 'network', file: 'Service.json' }],\n  ['PersistentVolume', { directory: 'storage', file: 'PersistentVolume.json' }],\n  ['PersistentVolumeClaim', { directory: 'storage', file: 'PersistentVolumeClaim.json' }],\n  ['StorageClass', { directory: 'storage', file: 'StorageClass.json' }],\n  ['ConfigMap', { directory: 'workload', file: 'ConfigMap.json' }],\n  ['CronJob', { directory: 'workload', file: 'CronJob.json' }],\n  ['DaemonSet', { directory: 'workload', file: 'DaemonSet.json' }],\n  ['Deployment', { directory: 'workload', file: 'Deployment.json' }],\n  ['HorizontalPodAutoscaler', { directory: 'workload', file: 'HorizontalPodAutoscaler.json' }],\n  ['Job', { directory: 'workload', file: 'Job.json' }],\n  ['Pod', { directory: 'workload', file: 'Pod.json' }],\n  ['PodSecurityPolicy', { directory: 'workload', file: 'PodSecurityPolicy.json' }],\n  ['ReplicaSet', { directory: 'workload', file: 'ReplicaSet.json' }],\n  ['StatefulSet', { directory: 'workload', file: 'StatefulSet.json' }],\n]);\n"]}]}