{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/pipelineruns/create-pipelinerun.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/pipelineruns/create-pipelinerun.tsx","mtime":1617182414010},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable no-undef */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { k8sCreate, k8sList, k8sGet, k8sUpdate } from '../../../../module/k8s';\nimport { Section } from '../../utils/section';\nimport { ButtonBar, history, kindObj, SelectorInput } from '../../../utils';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabelPlural } from '../../../../models/hypercloud/resource-plural';\nimport { formatNamespacedRouteForResource } from '@console/shared/src/utils/namespace';\nimport store from '../../../../redux';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nvar CreateType;\n(function (CreateType) {\n    CreateType[\"generic\"] = \"generic\";\n    CreateType[\"form\"] = \"form\";\n})(CreateType || (CreateType = {}));\nconst pageExplanation = {\n    [CreateType.form]: 'Create Pipeline Run using Form Editor',\n};\nconst RefList = ({ list, type }) => {\n    const resources = list\n        .filter(cur => {\n        return cur.type === type;\n    })\n        .map(cur => {\n        return React.createElement(\"option\", { value: cur.name }, cur.name);\n    });\n    return resources;\n};\n// const Requestform = () =>\nclass PipelineRunFormComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        const existingPipelineRun = _.pick(props.obj, ['metadata', 'type']);\n        const pipelineRun = _.defaultsDeep({}, props.fixed, existingPipelineRun, {\n            apiVersion: 'tekton.dev/v1beta1',\n            kind: 'PipelineRun',\n            metadata: {\n                name: '',\n                namespace: '',\n                labels: {},\n            },\n            spec: {\n                serviceAccountName: '',\n                params: [],\n                pipelineRef: {\n                    name: '',\n                },\n                resources: [],\n            },\n        });\n        this.state = {\n            pipelineRunTypeAbstraction: this.props.pipelineRunTypeAbstraction,\n            pipelineRun: pipelineRun,\n            inProgress: false,\n            stringData: _.mapValues(_.get(props.obj, 'data'), window.atob),\n            type: 'form',\n            pipelineList: [],\n            paramList: [],\n            selectedPipeLine: '',\n            selectedPipeLineNs: '',\n            selectedParam: '',\n            resourceList: [],\n            resourceRefList: [],\n            selectedResourceRef: '',\n            namespace: getActiveNamespace(store.getState()),\n        };\n        this.getPipelineList = this.getPipelineList.bind(this);\n        this.getPipelineDetails = this.getPipelineDetails.bind(this);\n        this.onNameChanged = this.onNameChanged.bind(this);\n        this.onParamChanged = this.onParamChanged.bind(this);\n        this.onResourceChanged = this.onResourceChanged.bind(this);\n        this.onPipelineChange = this.onPipelineChange.bind(this);\n        this.getPipelineResourceList = this.getPipelineResourceList.bind(this);\n        this.onLabelChanged = this.onLabelChanged.bind(this);\n        this.onAccountChanged = this.onAccountChanged.bind(this);\n        this.save = this.save.bind(this);\n    }\n    componentDidMount() {\n        this.getPipelineList();\n    }\n    // refreshPipelineRun() {\n    //     let pipelineRun = { ...this.state.pipelineRun };\n    //     pipelineRun.spec.params = [];\n    //     pipelineRun.spec.resources = [];\n    //     this.setState({ pipelineRun });\n    // }\n    onNameChanged(event) {\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        pipelineRun.metadata.name = String(event.target.value);\n        this.setState({ pipelineRun });\n    }\n    onPipelineChange(event) {\n        // this.refreshPipelineRun();\n        this.setState({\n            selectedPipeLine: event.target.value,\n        }, () => {\n            this.getPipelineDetails();\n        });\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        pipelineRun.spec.pipelineRef.name = event.target.value;\n        this.setState({ pipelineRun });\n    }\n    onParamChanged(event) {\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        pipelineRun.spec.params.some((cur, idx) => {\n            if (cur.name === event.target.id) {\n                pipelineRun.spec.params.splice(idx, 1);\n            }\n            return cur.name === event.target.id;\n        });\n        pipelineRun.spec.params.push({\n            name: event.target.id,\n            value: String(event.target.value),\n        });\n        this.setState({ pipelineRun });\n    }\n    onResourceChanged(event) {\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        pipelineRun.spec.resources.some((cur, idx) => {\n            if (cur.name === event.target.id) {\n                pipelineRun.spec.resources.splice(idx, 1);\n            }\n            return cur.name === event.target.id;\n        });\n        pipelineRun.spec.resources.push({\n            name: event.target.id,\n            resourceRef: {\n                name: event.target.value,\n            },\n        });\n        this.setState({ pipelineRun });\n        console.log(this.state.pipelineRun);\n    }\n    onLabelChanged(event) {\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        //console.log(event);\n        pipelineRun.metadata.labels = {};\n        if (event.length !== 0) {\n            event.forEach(item => {\n                if (item.split('=')[1] === undefined) {\n                    document.getElementById('labelErrMsg').style.display = 'block';\n                    event.pop(item);\n                    return;\n                }\n                document.getElementById('labelErrMsg').style.display = 'none';\n                pipelineRun.metadata.labels[item.split('=')[0]] = item.split('=')[1];\n            });\n        }\n        this.setState({ pipelineRun });\n    }\n    onAccountChanged(event) {\n        let pipelineRun = Object.assign({}, this.state.pipelineRun);\n        pipelineRun.spec.serviceAccountName = String(event.target.value);\n        this.setState({ pipelineRun });\n    }\n    getPipelineList() {\n        const ko = kindObj('Pipeline');\n        k8sList(ko)\n            .then(reponse => reponse)\n            .then(data => {\n            let pipelineList = data\n                .filter(cur => {\n                return document.location.href.indexOf('/all-namespaces/') === -1 && cur.metadata.namespace === document.location.href.split('ns/')[1].split('/')[0];\n            })\n                .map(cur => {\n                return {\n                    name: cur.metadata.name,\n                    ns: cur.metadata.namespace,\n                };\n            });\n            let pipelineRun = Object.assign({}, this.state.pipelineRun);\n            if (pipelineList.length === 0) {\n                return;\n            }\n            pipelineRun.spec.pipelineRef.name = pipelineList[0].name;\n            this.setState({ pipelineRun });\n            this.setState({\n                pipelineList: pipelineList,\n                selectedPipeLine: pipelineList[0].name,\n                selectedPipeLineNs: pipelineList[0].ns,\n            }, this.getPipelineDetails);\n        }, err => {\n            this.setState({ error: err.message, inProgress: false });\n            this.setState({ pipelineList: [] });\n        });\n    }\n    getPipelineDetails() {\n        const ko = kindObj('Pipeline');\n        k8sGet(ko, this.state.selectedPipeLine, this.state.selectedPipeLineNs)\n            .then(reponse => reponse)\n            .then(details => {\n            //params, resource가 없는경우\n            let paramList = details.spec.params\n                ? details.spec.params.map(cur => {\n                    return {\n                        name: cur.name,\n                        type: cur.type,\n                        value: '',\n                    };\n                })\n                : [];\n            let resourceList = details.spec.resources\n                ? details.spec.resources.map(cur => {\n                    return {\n                        name: cur.name,\n                        type: cur.type,\n                    };\n                })\n                : [];\n            let pipelineRun = Object.assign({}, this.state.pipelineRun);\n            // let initParamList = details.spec.params.map(cur => {\n            //     return {\n            //         name: cur.name,\n            //         value: ''\n            //     }\n            // });\n            !pipelineRun.spec.params.length && pipelineRun.spec.params.push(...paramList);\n            this.setState({\n                pipelineRun: pipelineRun,\n                resourceList: resourceList,\n                paramList: paramList,\n            }, resourceList.forEach(cur => {\n                !pipelineRun.spec.resources.length && this.getPipelineResourceList(cur.name, cur.type);\n            }));\n            paramList.length ? this.setState({ selectedParam: paramList[0].name }) : null;\n        }, err => {\n            this.setState({ error: err.message, inProgress: false });\n            this.setState({ paramList: [] });\n        });\n    }\n    getPipelineResourceList(resourceName, resourceType) {\n        const ko = kindObj('PipelineResource');\n        k8sList(ko)\n            .then(reponse => reponse)\n            .then(data => {\n            if (data.length === 0) {\n                return;\n            }\n            let resourceRefList = data\n                .filter(cur => {\n                return document.location.href.indexOf('/all-namespaces/') === -1 && cur.metadata.namespace === document.location.href.split('ns/')[1].split('/')[0];\n            })\n                .map(cur => {\n                return {\n                    name: cur.metadata.name,\n                    type: cur.spec.type,\n                };\n            });\n            let pipelineRun = Object.assign({}, this.state.pipelineRun);\n            let initResourceList = {\n                name: resourceName,\n                resourceRef: {\n                    name: resourceRefList.filter(cur => {\n                        return cur.type === resourceType;\n                    })[0].name,\n                },\n            };\n            pipelineRun.spec.resources.length < resourceRefList.length && pipelineRun.spec.resources.push(initResourceList);\n            this.setState({ pipelineRun });\n            this.setState({\n                resourceRefList: resourceRefList,\n            });\n        }, err => {\n            this.setState({ error: err.message, inProgress: false });\n            this.setState({ resourceRefList: [] });\n        });\n    }\n    save(e) {\n        e.preventDefault();\n        const { kind, metadata } = this.state.pipelineRun;\n        this.setState({ inProgress: true });\n        const newPipelineRun = _.assign({}, this.state.pipelineRun);\n        const ko = kindObj(kind);\n        (this.props.isCreate ? k8sCreate(ko, newPipelineRun) : k8sUpdate(ko, newPipelineRun, metadata.namespace, newPipelineRun.metadata.name)).then(() => {\n            this.setState({ inProgress: false });\n            console.log(this.state);\n            history.push(formatNamespacedRouteForResource('pipelineruns', this.state.namespace));\n        }, err => this.setState({ error: err.message, inProgress: false }));\n    }\n    render() {\n        const { pipelineList, paramList, resourceList, resourceRefList } = this.state;\n        const { t } = this.props;\n        let options = pipelineList.map(cur => {\n            return React.createElement(\"option\", { value: cur.name }, cur.name);\n        });\n        let paramDivs = paramList.length\n            ? paramList.map(cur => {\n                return (React.createElement(\"ul\", null,\n                    React.createElement(Section, { label: cur.name, id: cur.name, description: cur.description },\n                        React.createElement(\"input\", { className: \"form-control\", type: \"text\", placeholder: t('CONTENT:VALUE'), id: cur.name, onChange: this.onParamChanged, required: true }))));\n            })\n            : false;\n        let resourceDivs = resourceList.length\n            ? resourceList.map(cur => {\n                return (React.createElement(\"ul\", null,\n                    React.createElement(Section, { label: cur.name, id: cur.name },\n                        React.createElement(\"select\", { className: \"form-control\", id: cur.name, onChange: this.onResourceChanged },\n                            React.createElement(RefList, { list: resourceRefList, type: cur.type })))));\n            })\n            : false;\n        return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, \"Create Pipeline Run\")),\n            React.createElement(\"form\", { className: \"co-m-pane__body-group co-create-secret-form\", onSubmit: this.save },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: ResourceLabelPlural(this.state.pipelineRun, t) })),\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, t('Description')),\n                React.createElement(\"fieldset\", { disabled: !this.props.isCreate },\n                    React.createElement(Section, { label: t('이름'), id: \"pipelinerun-name\", isRequired: true },\n                        React.createElement(\"div\", null,\n                            React.createElement(\"input\", { className: \"form-control\", type: \"text\", onChange: this.onNameChanged, value: this.state.pipelineRun.metadata.name, \"aria-describedby\": \"secret-name-help\", id: \"pipelinerun-name\", required: true }))),\n                    React.createElement(Section, { label: t('레이블'), id: \"label\", description: \"Enter\\uB97C \\uC785\\uB825\\uD558\\uC5EC \\uB808\\uC774\\uBE14\\uC744 \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\" },\n                        React.createElement(\"div\", { className: \"form-group\" },\n                            React.createElement(\"div\", null,\n                                React.createElement(SelectorInput, { labelClassName: \"co-text-namespace\", onChange: this.onLabelChanged, tags: [] })))),\n                    React.createElement(\"div\", { id: \"labelErrMsg\", style: { display: 'none', color: 'red' } },\n                        React.createElement(\"p\", null, t(\"레이블은 '키=값' 형식이어야 합니다.\"))),\n                    React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                    React.createElement(Section, { label: t('COMMON:MSG_LNB_MENU_146'), id: \"pipeline\", isRequired: true },\n                        React.createElement(\"select\", { onChange: this.onPipelineChange, className: \"form-control\", id: \"pipeline\" }, options)),\n                    paramDivs &&\n                        React.createElement(Section, { label: t('파이프라인 파라미터'), id: \"param\" }, paramDivs),\n                    resourceDivs &&\n                        React.createElement(Section, { label: t('파이프라인 리소스'), id: \"resource\" }, resourceDivs),\n                    React.createElement(\"div\", { className: \"co-form-section__separator\" }),\n                    React.createElement(Section, { label: t('서비스 어카운트 지정'), id: \"account\", isRequired: true },\n                        React.createElement(\"div\", { className: \"form-group\" },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"input\", { className: \"form-control\", type: \"text\", onChange: this.onAccountChanged, value: this.state.pipelineRun.spec.serviceAccountName, id: \"pipelinerun-account\", required: true })))),\n                    React.createElement(ButtonBar, { errorMessage: this.state.error, inProgress: this.state.inProgress },\n                        React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                            React.createElement(Button, { type: \"submit\", id: \"save-changes\", variant: \"primary\" }, t('COMMON:MSG_COMMON_BUTTON_COMMIT_1')),\n                            React.createElement(Button, { onClick: history.goBack, id: \"cancel\", variant: \"secondary\" }, t('COMMON:MSG_COMMON_BUTTON_COMMIT_2'))))))));\n    }\n}\nexport const CreatePipelineRun = ({ match: { params } }) => {\n    // const PipelineRunFormComponent = PipelineRunFormFactory(params.type);\n    const { t } = useTranslation();\n    return React.createElement(PipelineRunFormComponent, { t: t, fixed: { metadata: { namespace: params.ns } }, pipelineRunTypeAbstraction: params.type, explanation: pageExplanation[params.type], titleVerb: \"Create\", isCreate: true });\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/pipelineruns/create-pipelinerun.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/pipelineruns/create-pipelinerun.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { k8sCreate, k8sList, k8sGet, k8sUpdate, K8sResourceKind } from '../../../../module/k8s';\nimport { Section } from '../../utils/section';\nimport { ButtonBar, history, kindObj, SelectorInput } from '../../../utils';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabelPlural } from '../../../../models/hypercloud/resource-plural';\nimport { formatNamespacedRouteForResource } from '@console/shared/src/utils/namespace';\nimport store from '../../../../redux';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\n\nenum CreateType {\n  generic = 'generic',\n  form = 'form',\n}\nconst pageExplanation = {\n  [CreateType.form]: 'Create Pipeline Run using Form Editor',\n};\n\nconst RefList = ({ list, type }) => {\n  const resources = list\n    .filter(cur => {\n      return cur.type === type;\n    })\n    .map(cur => {\n      return <option value={cur.name}>{cur.name}</option>;\n    });\n  return resources;\n};\n\n// const Requestform = () =>\nclass PipelineRunFormComponent extends React.Component<PipelineRunProps_, PipelineRunState_> {\n  constructor(props) {\n    super(props);\n    const existingPipelineRun = _.pick(props.obj, ['metadata', 'type']);\n    const pipelineRun = _.defaultsDeep({}, props.fixed, existingPipelineRun, {\n      apiVersion: 'tekton.dev/v1beta1',\n      kind: 'PipelineRun',\n      metadata: {\n        name: '',\n        namespace: '',\n        labels: {},\n      },\n      spec: {\n        serviceAccountName: '',\n        params: [],\n        pipelineRef: {\n          name: '',\n        },\n        resources: [],\n      },\n    });\n\n    this.state = {\n      pipelineRunTypeAbstraction: this.props.pipelineRunTypeAbstraction,\n      pipelineRun: pipelineRun,\n      inProgress: false, // 뭔지 잘 모르겠음\n      stringData: _.mapValues(_.get(props.obj, 'data'), window.atob),\n      type: 'form',\n      pipelineList: [],\n      paramList: [],\n      selectedPipeLine: '',\n      selectedPipeLineNs: '',\n      selectedParam: '',\n      resourceList: [],\n      resourceRefList: [],\n      selectedResourceRef: '',\n      namespace: getActiveNamespace(store.getState()),\n    };\n    this.getPipelineList = this.getPipelineList.bind(this);\n    this.getPipelineDetails = this.getPipelineDetails.bind(this);\n    this.onNameChanged = this.onNameChanged.bind(this);\n    this.onParamChanged = this.onParamChanged.bind(this);\n    this.onResourceChanged = this.onResourceChanged.bind(this);\n    this.onPipelineChange = this.onPipelineChange.bind(this);\n    this.getPipelineResourceList = this.getPipelineResourceList.bind(this);\n    this.onLabelChanged = this.onLabelChanged.bind(this);\n    this.onAccountChanged = this.onAccountChanged.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPipelineList();\n  }\n\n  // refreshPipelineRun() {\n  //     let pipelineRun = { ...this.state.pipelineRun };\n  //     pipelineRun.spec.params = [];\n  //     pipelineRun.spec.resources = [];\n  //     this.setState({ pipelineRun });\n  // }\n\n  onNameChanged(event) {\n    let pipelineRun = { ...this.state.pipelineRun };\n    pipelineRun.metadata.name = String(event.target.value);\n    this.setState({ pipelineRun });\n  }\n\n  onPipelineChange(event) {\n    // this.refreshPipelineRun();\n\n    this.setState(\n      {\n        selectedPipeLine: event.target.value,\n      },\n      () => {\n        this.getPipelineDetails();\n      },\n    );\n    let pipelineRun = { ...this.state.pipelineRun };\n    pipelineRun.spec.pipelineRef.name = event.target.value;\n\n    this.setState({ pipelineRun });\n  }\n\n  onParamChanged(event) {\n    let pipelineRun = { ...this.state.pipelineRun };\n    pipelineRun.spec.params.some((cur, idx) => {\n      if (cur.name === event.target.id) {\n        pipelineRun.spec.params.splice(idx, 1);\n      }\n      return cur.name === event.target.id;\n    });\n\n    pipelineRun.spec.params.push({\n      name: event.target.id,\n      value: String(event.target.value),\n    });\n    this.setState({ pipelineRun });\n  }\n\n  onResourceChanged(event) {\n    let pipelineRun = { ...this.state.pipelineRun };\n\n    pipelineRun.spec.resources.some((cur, idx) => {\n      if (cur.name === event.target.id) {\n        pipelineRun.spec.resources.splice(idx, 1);\n      }\n      return cur.name === event.target.id;\n    });\n\n    pipelineRun.spec.resources.push({\n      name: event.target.id,\n      resourceRef: {\n        name: event.target.value,\n      },\n    });\n    this.setState({ pipelineRun });\n    console.log(this.state.pipelineRun);\n  }\n\n  onLabelChanged(event) {\n    let pipelineRun = { ...this.state.pipelineRun };\n    //console.log(event);\n    pipelineRun.metadata.labels = {};\n    if (event.length !== 0) {\n      event.forEach(item => {\n        if (item.split('=')[1] === undefined) {\n          document.getElementById('labelErrMsg').style.display = 'block';\n          event.pop(item);\n          return;\n        }\n        document.getElementById('labelErrMsg').style.display = 'none';\n        pipelineRun.metadata.labels[item.split('=')[0]] = item.split('=')[1];\n      });\n    }\n    this.setState({ pipelineRun });\n  }\n\n  onAccountChanged(event) {\n    let pipelineRun = { ...this.state.pipelineRun };\n    pipelineRun.spec.serviceAccountName = String(event.target.value);\n    this.setState({ pipelineRun });\n  }\n\n  getPipelineList() {\n    const ko = kindObj('Pipeline');\n\n    k8sList(ko)\n      .then(reponse => reponse)\n      .then(\n        data => {\n          let pipelineList = data\n            .filter(cur => {\n              return document.location.href.indexOf('/all-namespaces/') === -1 && cur.metadata.namespace === document.location.href.split('ns/')[1].split('/')[0];\n            })\n            .map(cur => {\n              return {\n                name: cur.metadata.name,\n                ns: cur.metadata.namespace,\n              };\n            });\n          let pipelineRun = { ...this.state.pipelineRun };\n          if (pipelineList.length === 0) {\n            return;\n          }\n          pipelineRun.spec.pipelineRef.name = pipelineList[0].name;\n          this.setState({ pipelineRun });\n\n          this.setState(\n            {\n              pipelineList: pipelineList,\n              selectedPipeLine: pipelineList[0].name,\n              selectedPipeLineNs: pipelineList[0].ns,\n            },\n            this.getPipelineDetails,\n          );\n        },\n        err => {\n          this.setState({ error: err.message, inProgress: false });\n          this.setState({ pipelineList: [] });\n        },\n      );\n  }\n\n  getPipelineDetails() {\n    const ko = kindObj('Pipeline');\n\n    k8sGet(ko, this.state.selectedPipeLine, this.state.selectedPipeLineNs)\n      .then(reponse => reponse)\n      .then(\n        details => {\n          //params, resource가 없는경우\n          let paramList = details.spec.params\n            ? details.spec.params.map(cur => {\n              return {\n                name: cur.name,\n                type: cur.type,\n                value: '',\n              };\n            })\n            : [];\n          let resourceList = details.spec.resources\n            ? details.spec.resources.map(cur => {\n              return {\n                name: cur.name,\n                type: cur.type,\n              };\n            })\n            : [];\n\n          let pipelineRun = { ...this.state.pipelineRun };\n          // let initParamList = details.spec.params.map(cur => {\n          //     return {\n          //         name: cur.name,\n          //         value: ''\n          //     }\n          // });\n          !pipelineRun.spec.params.length && pipelineRun.spec.params.push(...paramList);\n          this.setState(\n            {\n              pipelineRun: pipelineRun,\n              resourceList: resourceList,\n              paramList: paramList,\n            },\n            resourceList.forEach(cur => {\n              !pipelineRun.spec.resources.length && this.getPipelineResourceList(cur.name, cur.type);\n            }),\n          );\n          paramList.length ? this.setState({ selectedParam: paramList[0].name }) : null;\n        },\n        err => {\n          this.setState({ error: err.message, inProgress: false });\n          this.setState({ paramList: [] });\n        },\n      );\n  }\n\n  getPipelineResourceList(resourceName, resourceType) {\n    const ko = kindObj('PipelineResource');\n\n    k8sList(ko)\n      .then(reponse => reponse)\n      .then(\n        data => {\n          if (data.length === 0) {\n            return;\n          }\n          let resourceRefList = data\n            .filter(cur => {\n              return document.location.href.indexOf('/all-namespaces/') === -1 && cur.metadata.namespace === document.location.href.split('ns/')[1].split('/')[0];\n            })\n            .map(cur => {\n              return {\n                name: cur.metadata.name,\n                type: cur.spec.type,\n              };\n            });\n          let pipelineRun = { ...this.state.pipelineRun };\n          let initResourceList = {\n            name: resourceName,\n            resourceRef: {\n              name: resourceRefList.filter(cur => {\n                return cur.type === resourceType;\n              })[0].name,\n            },\n          };\n\n          pipelineRun.spec.resources.length < resourceRefList.length && pipelineRun.spec.resources.push(initResourceList);\n          this.setState({ pipelineRun });\n\n          this.setState({\n            resourceRefList: resourceRefList,\n          });\n        },\n        err => {\n          this.setState({ error: err.message, inProgress: false });\n          this.setState({ resourceRefList: [] });\n        },\n      );\n  }\n\n  save(e) {\n    e.preventDefault();\n    const { kind, metadata } = this.state.pipelineRun;\n    this.setState({ inProgress: true });\n    const newPipelineRun = _.assign({}, this.state.pipelineRun);\n    const ko = kindObj(kind);\n    (this.props.isCreate ? k8sCreate(ko, newPipelineRun) : k8sUpdate(ko, newPipelineRun, metadata.namespace, newPipelineRun.metadata.name)).then(\n      () => {\n        this.setState({ inProgress: false });\n        console.log(this.state);\n        history.push(formatNamespacedRouteForResource('pipelineruns', this.state.namespace));\n      },\n      err => this.setState({ error: err.message, inProgress: false }),\n    );\n  }\n\n  render() {\n    const { pipelineList, paramList, resourceList, resourceRefList } = this.state;\n    const { t } = this.props;\n    let options = pipelineList.map(cur => {\n      return <option value={cur.name}>{cur.name}</option>;\n    });\n\n    let paramDivs = paramList.length\n      ? paramList.map(cur => {\n        return (\n          <ul>\n            <Section label={cur.name} id={cur.name} description={cur.description}>\n              <input className=\"form-control\" type=\"text\" placeholder={t('CONTENT:VALUE')} id={cur.name} onChange={this.onParamChanged} required />\n            </Section>\n          </ul>\n        );\n      })\n      : false;\n\n    let resourceDivs = resourceList.length\n      ? resourceList.map(cur => {\n        return (\n          <ul>\n            <Section label={cur.name} id={cur.name}>\n              <select className=\"form-control\" id={cur.name} onChange={this.onResourceChanged}>\n                <RefList list={resourceRefList} type={cur.type} />\n              </select>\n            </Section>\n          </ul>\n        );\n      })\n      : false;\n\n    return (\n      <div className=\"co-m-pane__body\">\n        <Helmet>\n          <title>Create Pipeline Run</title>\n        </Helmet>\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={this.save}>\n          <h1 className=\"co-m-pane__heading\">{t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: ResourceLabelPlural(this.state.pipelineRun, t) })}</h1>\n          <p className=\"co-m-pane__explanation\">{t('Description')}</p>\n\n          <fieldset disabled={!this.props.isCreate}>\n            <Section label={t('이름')} id=\"pipelinerun-name\" isRequired>\n              <div>\n                <input className=\"form-control\" type=\"text\" onChange={this.onNameChanged} value={this.state.pipelineRun.metadata.name} aria-describedby=\"secret-name-help\" id=\"pipelinerun-name\" required />\n              </div>\n            </Section>\n\n            <Section label={t('레이블')} id=\"label\" description=\"Enter를 입력하여 레이블을 추가할 수 있습니다.\">\n              <div className=\"form-group\">\n                <div>\n                  <SelectorInput labelClassName=\"co-text-namespace\" onChange={this.onLabelChanged} tags={[]} />\n                </div>\n              </div>\n            </Section>\n            <div id=\"labelErrMsg\" style={{ display: 'none', color: 'red' }}>\n              <p>{t(\"레이블은 '키=값' 형식이어야 합니다.\")}</p>\n            </div>\n\n            <div className=\"co-form-section__separator\" />\n\n            <Section label={t('COMMON:MSG_LNB_MENU_146')} id=\"pipeline\" isRequired>\n              <select onChange={this.onPipelineChange} className=\"form-control\" id=\"pipeline\">\n                {options}\n              </select>\n            </Section>\n\n            {paramDivs &&\n              <Section label={t('파이프라인 파라미터')} id=\"param\">\n                {paramDivs}\n              </Section>}\n            {resourceDivs &&\n              <Section label={t('파이프라인 리소스')} id=\"resource\">\n                {resourceDivs}\n              </Section>}\n\n            <div className=\"co-form-section__separator\" />\n\n            <Section label={t('서비스 어카운트 지정')} id=\"account\" isRequired>\n              <div className=\"form-group\">\n                <div>\n                  <input className=\"form-control\" type=\"text\" onChange={this.onAccountChanged} value={this.state.pipelineRun.spec.serviceAccountName} id=\"pipelinerun-account\" required />\n                </div>\n              </div>\n            </Section>\n\n            <ButtonBar errorMessage={this.state.error} inProgress={this.state.inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button type=\"submit\" id=\"save-changes\" variant=\"primary\">\n                  {t('COMMON:MSG_COMMON_BUTTON_COMMIT_1')}\n                </Button>\n                <Button onClick={history.goBack} id=\"cancel\" variant=\"secondary\">\n                  {t('COMMON:MSG_COMMON_BUTTON_COMMIT_2')}\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport const CreatePipelineRun = ({ match: { params } }) => {\n  // const PipelineRunFormComponent = PipelineRunFormFactory(params.type);\n  const { t } = useTranslation();\n  return <PipelineRunFormComponent t={t} fixed={{ metadata: { namespace: params.ns } }} pipelineRunTypeAbstraction={params.type} explanation={pageExplanation[params.type]} titleVerb=\"Create\" isCreate={true} />;\n};\n\nexport type PipelineRunState_ = {\n  pipelineRunTypeAbstraction?: CreateType;\n  pipelineRun: K8sResourceKind;\n  inProgress: boolean; // 뭔지 잘 모르겠음\n  stringData: { [key: string]: string };\n  error?: any;\n  type: string;\n  pipelineList: Array<any>;\n  selectedPipeLine: string;\n  selectedPipeLineNs: string;\n  paramList: Array<any>;\n  selectedParam: string;\n  resourceList: Array<any>;\n  resourceRefList: Array<any>;\n  selectedResourceRef: string;\n  namespace: string;\n};\n\nexport type PipelineRunProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate: boolean;\n  titleVerb: string;\n  pipelineRunTypeAbstraction?: CreateType;\n  saveButtonText?: string;\n  explanation: string;\n  t: any;\n};\n"]}]}