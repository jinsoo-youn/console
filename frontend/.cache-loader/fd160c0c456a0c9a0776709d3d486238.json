{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dashboards-page/overview-dashboard/activity.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dashboards-page/overview-dashboard/activity.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport ActivityItem, { ActivityProgress, } from '@console/shared/src/components/dashboard/activity-card/ActivityItem';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TemplateModel } from '@console/internal/models';\nimport { VirtualMachineModel } from '../../../models';\nimport { diskImportKindMapping } from './utils';\nimport { VMTemplateLink } from '../../vm-templates/vm-template-link';\nexport const DiskImportActivity = ({ resource }) => {\n    var _a;\n    const progress = parseInt((_a = resource === null || resource === void 0 ? void 0 : resource.status) === null || _a === void 0 ? void 0 : _a.progress, 10);\n    const { kind, name, uid } = resource.metadata.ownerReferences[0];\n    const model = diskImportKindMapping[kind];\n    const ownerLink = model === TemplateModel ? (React.createElement(VMTemplateLink, { name: name, namespace: resource.metadata.namespace, uid: uid })) : (React.createElement(ResourceLink, { kind: referenceForModel(model), name: name, namespace: resource.metadata.namespace }));\n    const title = `Importing ${model === TemplateModel ? `${VirtualMachineModel.label} ${model.label}` : model.label} disk`;\n    return Number.isNaN(progress) ? (React.createElement(React.Fragment, null,\n        React.createElement(ActivityItem, null, title),\n        ownerLink)) : (React.createElement(ActivityProgress, { title: title, progress: progress }, ownerLink));\n};\nexport const V2VImportActivity = ({ resource }) => {\n    const vmName = _.get(resource.metadata.ownerReferences, '[0].name');\n    return (React.createElement(ActivityProgress, { title: \"Importing VM (v2v)\", progress: parseInt(_.get(resource.metadata.annotations, 'v2vConversionProgress', '0'), 10) }, vmName && (React.createElement(ResourceLink, { kind: referenceForModel(VirtualMachineModel), name: vmName, namespace: resource.metadata.namespace }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dashboards-page/overview-dashboard/activity.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dashboards-page/overview-dashboard/activity.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,YAAY,EAAE,EACnB,gBAAgB,GACjB,MAAM,qEAAqE,CAAC;AAC7E,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAEjE,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACzD,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAChD,OAAO,EAAE,cAAc,EAAE,MAAM,qCAAqC,CAAC;AAErE,MAAM,CAAC,MAAM,kBAAkB,GAA+B,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;;IAC7E,MAAM,QAAQ,GAAG,QAAQ,OAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,0CAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC1D,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACjE,MAAM,KAAK,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,SAAS,GACb,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC,CACxB,oBAAC,cAAc,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,GAAI,CACjF,CAAC,CAAC,CAAC,CACF,oBAAC,YAAY,IACX,IAAI,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAC9B,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,GACtC,CACH,CAAC;IACJ,MAAM,KAAK,GAAG,aACZ,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAClF,OAAO,CAAC;IACR,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9B;QACE,oBAAC,YAAY,QAAE,KAAK,CAAgB;QACnC,SAAS,CACT,CACJ,CAAC,CAAC,CAAC,CACF,oBAAC,gBAAgB,IAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,IAC/C,SAAS,CACO,CACpB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAA+B,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5E,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IACpE,OAAO,CACL,oBAAC,gBAAgB,IACf,KAAK,EAAC,oBAAoB,EAC1B,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,uBAAuB,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,IAEzF,MAAM,IAAI,CACT,oBAAC,YAAY,IACX,IAAI,EAAE,iBAAiB,CAAC,mBAAmB,CAAC,EAC5C,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,GACtC,CACH,CACgB,CACpB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport ActivityItem, {\n  ActivityProgress,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityItem';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { K8sActivityProps } from '@console/plugin-sdk';\nimport { TemplateModel } from '@console/internal/models';\nimport { VirtualMachineModel } from '../../../models';\nimport { diskImportKindMapping } from './utils';\nimport { VMTemplateLink } from '../../vm-templates/vm-template-link';\n\nexport const DiskImportActivity: React.FC<K8sActivityProps> = ({ resource }) => {\n  const progress = parseInt(resource?.status?.progress, 10);\n  const { kind, name, uid } = resource.metadata.ownerReferences[0];\n  const model = diskImportKindMapping[kind];\n  const ownerLink =\n    model === TemplateModel ? (\n      <VMTemplateLink name={name} namespace={resource.metadata.namespace} uid={uid} />\n    ) : (\n      <ResourceLink\n        kind={referenceForModel(model)}\n        name={name}\n        namespace={resource.metadata.namespace}\n      />\n    );\n  const title = `Importing ${\n    model === TemplateModel ? `${VirtualMachineModel.label} ${model.label}` : model.label\n  } disk`;\n  return Number.isNaN(progress) ? (\n    <>\n      <ActivityItem>{title}</ActivityItem>\n      {ownerLink}\n    </>\n  ) : (\n    <ActivityProgress title={title} progress={progress}>\n      {ownerLink}\n    </ActivityProgress>\n  );\n};\n\nexport const V2VImportActivity: React.FC<K8sActivityProps> = ({ resource }) => {\n  const vmName = _.get(resource.metadata.ownerReferences, '[0].name');\n  return (\n    <ActivityProgress\n      title=\"Importing VM (v2v)\"\n      progress={parseInt(_.get(resource.metadata.annotations, 'v2vConversionProgress', '0'), 10)}\n    >\n      {vmName && (\n        <ResourceLink\n          kind={referenceForModel(VirtualMachineModel)}\n          name={vmName}\n          namespace={resource.metadata.namespace}\n        />\n      )}\n    </ActivityProgress>\n  );\n};\n"]}]}