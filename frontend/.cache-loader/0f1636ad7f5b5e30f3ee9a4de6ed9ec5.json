{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/custom-resource-definition.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/custom-resource-definition.tsx","mtime":1615879241953},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable, SortByDirection, Table as PFTable, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { BanIcon } from '@patternfly/react-icons';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { AsyncComponent, DetailsItem, EmptyBox, Kebab, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from './utils';\nimport { apiVersionCompare, getLatestVersionForCRD, referenceForCRD } from '../module/k8s';\nimport { CustomResourceDefinitionModel } from '../models';\nimport { Conditions } from './conditions';\nimport { resourceListPages } from './resource-pages';\nimport { DefaultPage } from './default-resource';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nconst { common } = Kebab.factory;\nconst crdInstancesPath = (crd) => (_.get(crd, 'spec.scope') === 'Namespaced' ? `/k8s/all-namespaces/${referenceForCRD(crd)}` : `/k8s/cluster/${referenceForCRD(crd)}`);\nconst instances = (kind, obj) => ({\n    label: 'View Instances',\n    href: crdInstancesPath(obj),\n});\nconst menuActions = [instances, ...Kebab.getExtensionsActionsForKind(CustomResourceDefinitionModel), ...common];\nconst tableColumnClasses = [classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'col-xs-6'), classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\nconst CRDTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'spec.names.kind',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_52'),\n            sortField: 'spec.group',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_53'),\n            sortField: 'spec.version',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_54'),\n            sortField: 'spec.scope',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_55'),\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nCRDTableHeader.displayName = 'CRDTableHeader';\nconst isEstablished = (conditions) => {\n    const condition = _.find(conditions, c => c.type === 'Established');\n    return condition && condition.status === 'True';\n};\nconst namespaced = (crd) => crd.spec.scope === 'Namespaced';\nconst Established = ({ crd }) => {\n    return crd.status && isEstablished(crd.status.conditions) ? (React.createElement(\"span\", null,\n        React.createElement(GreenCheckCircleIcon, { alt: \"true\" }))) : (React.createElement(\"span\", null,\n        React.createElement(BanIcon, { alt: \"false\" })));\n};\nconst EmptyVersionsMsg = () => React.createElement(EmptyBox, { label: \"CRD Versions\" });\nconst CRDVersionTable = ({ versions }) => {\n    const [sortBy, setSortBy] = React.useState({});\n    const { t } = useTranslation();\n    const compare = (a, b) => {\n        var _a, _b;\n        const aVal = (_a = a === null || a === void 0 ? void 0 : a[sortBy.index]) !== null && _a !== void 0 ? _a : '';\n        const bVal = (_b = b === null || b === void 0 ? void 0 : b[sortBy.index]) !== null && _b !== void 0 ? _b : '';\n        return sortBy.index === 0 ? apiVersionCompare(aVal, bVal) : aVal.localeCompare(bVal);\n    };\n    const crdVersionTableHeaders = [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            transforms: [sortable],\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VERSIONS_TABLEHEADER_1'),\n            transforms: [sortable],\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VERSIONS_TABLEHEADER_2'),\n            transforms: [sortable],\n        },\n    ];\n    const versionRows = _.map(versions, (version) => [version.name, version.served.toString(), version.storage.toString()]);\n    sortBy.direction === SortByDirection.asc ? versionRows.sort(compare) : versionRows.sort(compare).reverse();\n    const onSort = (_event, index, direction) => {\n        setSortBy({ index, direction });\n    };\n    return versionRows.length > 0 ? (React.createElement(PFTable, { variant: TableVariant.compact, \"aria-label\": \"CRD Versions\", cells: crdVersionTableHeaders, rows: versionRows, onSort: onSort, sortBy: sortBy },\n        React.createElement(TableHeader, null),\n        React.createElement(TableBody, null))) : (React.createElement(EmptyVersionsMsg, null));\n};\nconst CRDTableRow = ({ obj: crd, index, key, style }) => {\n    return (React.createElement(TableRow, { id: crd.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(\"span\", { className: \"co-resource-item\" },\n                React.createElement(ResourceLink, { kind: \"CustomResourceDefinition\", name: crd.metadata.name, namespace: crd.metadata.namespace, displayName: _.get(crd, 'spec.names.kind') }))),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') }, crd.spec.group),\n        React.createElement(TableData, { className: tableColumnClasses[2] }, getLatestVersionForCRD(crd)),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, namespaced(crd) ? 'Yes' : 'No'),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Established, { crd: crd })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: \"CustomResourceDefinition\", resource: crd }))));\n};\nconst Details = ({ obj: crd }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Custom Resource Definition Details\" }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { showPodSelector: false, showNodeSelector: false, resource: crd })),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_91')),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Established, { crd: crd })),\n                            React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_92'), obj: crd, path: \"spec.group\" }),\n                            React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_93'), obj: crd, path: \"spec.version\" }),\n                            React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_94'), obj: crd, path: \"spec.scope\" })))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1') }),\n            React.createElement(Conditions, { conditions: crd.status.conditions })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_93') }),\n            React.createElement(CRDVersionTable, { versions: crd.spec.versions }))));\n};\nconst Instances = ({ obj, namespace }) => {\n    const crdKind = referenceForCRD(obj);\n    const componentLoader = resourceListPages.get(crdKind, () => Promise.resolve(DefaultPage));\n    return React.createElement(AsyncComponent, { loader: componentLoader, namespace: namespace ? namespace : undefined, kind: crdKind, showTitle: false, autoFocus: false });\n};\nexport const CustomResourceDefinitionsList = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Custom Resource Definitions\", Header: CRDTableHeader.bind(null, t), Row: CRDTableRow, defaultSortField: \"spec.names.kind\", virtualize: true }));\n};\nexport const CustomResourceDefinitionsPage = props => React.createElement(ListPage, Object.assign({}, props, { ListComponent: CustomResourceDefinitionsList, kind: \"CustomResourceDefinition\", canCreate: true }));\nexport const CustomResourceDefinitionsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: \"CustomResourceDefinition\", menuActions: menuActions, pages: [navFactory.details(Details), navFactory.editYaml(), { name: 'Instances', href: 'instances', component: Instances }] }));\nCustomResourceDefinitionsList.displayName = 'CustomResourceDefinitionsList';\nCustomResourceDefinitionsPage.displayName = 'CustomResourceDefinitionsPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/custom-resource-definition.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/custom-resource-definition.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,IAAI,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAE5H,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,WAAW,CAAC;AAC3F,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAe,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,SAAS,CAAC;AAC9J,OAAO,EAAE,iBAAiB,EAA4C,sBAAsB,EAAW,eAAe,EAAE,MAAM,eAAe,CAAC;AAC9I,OAAO,EAAE,6BAA6B,EAAE,MAAM,WAAW,CAAC;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AACrD,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAG/C,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC;AAEjC,MAAM,gBAAgB,GAAG,CAAC,GAAiC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,uBAAuB,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAErM,MAAM,SAAS,GAAG,CAAC,IAAa,EAAE,GAAiC,EAAE,EAAE,CAAC,CAAC;IACvE,KAAK,EAAE,gBAAgB;IACvB,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC;CAC5B,CAAC,CAAC;AAEH,MAAM,WAAW,GAAkB,CAAC,SAAS,EAAE,GAAG,KAAK,CAAC,2BAA2B,CAAC,6BAA6B,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;AAE/H,MAAM,kBAAkB,GAAG,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;AAEjW,MAAM,cAAc,GAAG,CAAC,CAAa,EAAE,EAAE;IACvC,OAAO;QACL;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,SAAS,EAAE,iBAAiB;YAC5B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,SAAS,EAAE,YAAY;YACvB,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,SAAS,EAAE,cAAc;YACzB,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,SAAS,EAAE,YAAY;YACvB,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC;YAC1C,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;QACD;YACE,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE;SAC5C;KACF,CAAC;AACJ,CAAC,CAAC;AACF,cAAc,CAAC,WAAW,GAAG,gBAAgB,CAAC;AAE9C,MAAM,aAAa,GAAG,CAAC,UAAiB,EAAE,EAAE;IAC1C,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;IACpE,OAAO,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,MAAM,CAAC;AAClD,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,GAAiC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,YAAY,CAAC;AAE1F,MAAM,WAAW,GAAoD,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IAC/E,OAAO,GAAG,CAAC,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAC1D;QACE,oBAAC,oBAAoB,IAAC,GAAG,EAAC,MAAM,GAAG,CAC9B,CACR,CAAC,CAAC,CAAC,CACF;QACE,oBAAC,OAAO,IAAC,GAAG,EAAC,OAAO,GAAG,CAClB,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAiB,GAAG,EAAE,CAAC,oBAAC,QAAQ,IAAC,KAAK,EAAC,cAAc,GAAG,CAAC;AAE/E,MAAM,eAAe,GAA8B,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAClE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAc,EAAE,CAAC,CAAC;IAC5D,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;QACvB,MAAM,IAAI,SAAG,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAG,MAAM,CAAC,KAAK,oCAAK,EAAE,CAAC;QACrC,MAAM,IAAI,SAAG,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAG,MAAM,CAAC,KAAK,oCAAK,EAAE,CAAC;QACrC,OAAO,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACvF,CAAC,CAAC;IACF,MAAM,sBAAsB,GAAG;QAC7B;YACE,KAAK,EAAE,CAAC,CAAC,+BAA+B,CAAC;YACzC,UAAU,EAAE,CAAC,QAAQ,CAAC;SACvB;QACD;YACE,KAAK,EAAE,CAAC,CAAC,sDAAsD,CAAC;YAChE,UAAU,EAAE,CAAC,QAAQ,CAAC;SACvB;QACD;YACE,KAAK,EAAE,CAAC,CAAC,sDAAsD,CAAC;YAChE,UAAU,EAAE,CAAC,QAAQ,CAAC;SACvB;KACF,CAAC;IAEF,MAAM,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAmB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAEpI,MAAM,CAAC,SAAS,KAAK,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IAE3G,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;QAC1C,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,OAAO,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9B,oBAAC,OAAO,IAAC,OAAO,EAAE,YAAY,CAAC,OAAO,gBAAa,cAAc,EAAC,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QAChJ,oBAAC,WAAW,OAAG;QACf,oBAAC,SAAS,OAAG,CACL,CACX,CAAC,CAAC,CAAC,CACF,oBAAC,gBAAgB,OAAG,CACrB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,WAAW,GAA8C,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;IACjG,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QACpE,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,8BAAM,SAAS,EAAC,kBAAkB;gBAChC,oBAAC,YAAY,IAAC,IAAI,EAAC,0BAA0B,EAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAiB,CAAC,GAAI,CACnJ,CACG;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,IAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAa;QACtG,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,IAAG,sBAAsB,CAAC,GAAG,CAAC,CAAa;QACtF,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,IAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAa;QACzF,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,WAAW,IAAC,GAAG,EAAE,GAAG,GAAI,CACf;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACzC,oBAAC,aAAa,IAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAC,0BAA0B,EAAC,QAAQ,EAAE,GAAG,GAAI,CAC5E,CACH,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,OAAO,GAAoD,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;IAChF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAC,oCAAoC,GAAG;YAC5D,6BAAK,SAAS,EAAC,uBAAuB;gBACpC,6BAAK,SAAS,EAAC,KAAK;oBAClB,6BAAK,SAAS,EAAC,UAAU;wBACvB,oBAAC,eAAe,IAAC,eAAe,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAI,CAC/E;oBACN,6BAAK,SAAS,EAAC,UAAU;wBACvB,4BAAI,SAAS,EAAC,oBAAoB;4BAChC,gCAAK,CAAC,CAAC,0CAA0C,CAAC,CAAM;4BACxD;gCACE,oBAAC,WAAW,IAAC,GAAG,EAAE,GAAG,GAAI,CACtB;4BACL,oBAAC,WAAW,IAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,YAAY,GAAG;4BACjG,oBAAC,WAAW,IAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,cAAc,GAAG;4BACnG,oBAAC,WAAW,IAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,YAAY,GAAG,CAC9F,CACD,CACF,CACF,CACF;QACN,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAE,CAAC,CAAC,4CAA4C,CAAC,GAAI;YACzE,oBAAC,UAAU,IAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,GAAI,CAC7C;QACN,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,cAAc,IAAC,IAAI,EAAE,CAAC,CAAC,0CAA0C,CAAC,GAAI;YACvE,oBAAC,eAAe,IAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAI,CAC5C,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,SAAS,GAA6B,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE;IACjE,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3F,OAAO,oBAAC,cAAc,IAAC,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,GAAI,CAAC;AACtJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAiD,KAAK,CAAC,EAAE;IACjG,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,OAAO,oBAAC,KAAK,oBAAK,KAAK,kBAAa,6BAA6B,EAAC,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,gBAAgB,EAAC,iBAAiB,EAAC,UAAU,UAAG,CAAC;AAC7K,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAiD,KAAK,CAAC,EAAE,CAAC,oBAAC,QAAQ,oBAAK,KAAK,IAAE,aAAa,EAAE,6BAA6B,EAAE,IAAI,EAAC,0BAA0B,EAAC,SAAS,EAAE,IAAI,IAAI,CAAC;AAC3N,MAAM,CAAC,MAAM,oCAAoC,GAAwD,KAAK,CAAC,EAAE,CAAC,oBAAC,WAAW,oBAAK,KAAK,IAAE,IAAI,EAAC,0BAA0B,EAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC;AAWpU,6BAA6B,CAAC,WAAW,GAAG,+BAA+B,CAAC;AAC5E,6BAA6B,CAAC,WAAW,GAAG,+BAA+B,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable, SortByDirection, Table as PFTable, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\n\nimport { BanIcon } from '@patternfly/react-icons';\n\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { AsyncComponent, DetailsItem, EmptyBox, Kebab, KebabAction, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from './utils';\nimport { apiVersionCompare, CRDVersion, CustomResourceDefinitionKind, getLatestVersionForCRD, K8sKind, referenceForCRD } from '../module/k8s';\nimport { CustomResourceDefinitionModel } from '../models';\nimport { Conditions } from './conditions';\nimport { resourceListPages } from './resource-pages';\nimport { DefaultPage } from './default-resource';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nconst { common } = Kebab.factory;\n\nconst crdInstancesPath = (crd: CustomResourceDefinitionKind) => (_.get(crd, 'spec.scope') === 'Namespaced' ? `/k8s/all-namespaces/${referenceForCRD(crd)}` : `/k8s/cluster/${referenceForCRD(crd)}`);\n\nconst instances = (kind: K8sKind, obj: CustomResourceDefinitionKind) => ({\n  label: 'View Instances',\n  href: crdInstancesPath(obj),\n});\n\nconst menuActions: KebabAction[] = [instances, ...Kebab.getExtensionsActionsForKind(CustomResourceDefinitionModel), ...common];\n\nconst tableColumnClasses = [classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'col-xs-6'), classNames('col-lg-3', 'col-md-4', 'col-sm-4', 'col-xs-6'), classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\n\nconst CRDTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'spec.names.kind',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_52'),\n      sortField: 'spec.group',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_53'),\n      sortField: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_54'),\n      sortField: 'spec.scope',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_55'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nCRDTableHeader.displayName = 'CRDTableHeader';\n\nconst isEstablished = (conditions: any[]) => {\n  const condition = _.find(conditions, c => c.type === 'Established');\n  return condition && condition.status === 'True';\n};\n\nconst namespaced = (crd: CustomResourceDefinitionKind) => crd.spec.scope === 'Namespaced';\n\nconst Established: React.FC<{ crd: CustomResourceDefinitionKind }> = ({ crd }) => {\n  return crd.status && isEstablished(crd.status.conditions) ? (\n    <span>\n      <GreenCheckCircleIcon alt=\"true\" />\n    </span>\n  ) : (\n    <span>\n      <BanIcon alt=\"false\" />\n    </span>\n  );\n};\n\nconst EmptyVersionsMsg: React.FC<{}> = () => <EmptyBox label=\"CRD Versions\" />;\n\nconst CRDVersionTable: React.FC<CRDVersionProps> = ({ versions }) => {\n  const [sortBy, setSortBy] = React.useState<PFSortState>({});\n  const { t } = useTranslation();\n\n  const compare = (a, b) => {\n    const aVal = a?.[sortBy.index] ?? '';\n    const bVal = b?.[sortBy.index] ?? '';\n    return sortBy.index === 0 ? apiVersionCompare(aVal, bVal) : aVal.localeCompare(bVal);\n  };\n  const crdVersionTableHeaders = [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      transforms: [sortable],\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VERSIONS_TABLEHEADER_1'),\n      transforms: [sortable],\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VERSIONS_TABLEHEADER_2'),\n      transforms: [sortable],\n    },\n  ];\n\n  const versionRows = _.map(versions, (version: CRDVersion) => [version.name, version.served.toString(), version.storage.toString()]);\n\n  sortBy.direction === SortByDirection.asc ? versionRows.sort(compare) : versionRows.sort(compare).reverse();\n\n  const onSort = (_event, index, direction) => {\n    setSortBy({ index, direction });\n  };\n\n  return versionRows.length > 0 ? (\n    <PFTable variant={TableVariant.compact} aria-label=\"CRD Versions\" cells={crdVersionTableHeaders} rows={versionRows} onSort={onSort} sortBy={sortBy}>\n      <TableHeader />\n      <TableBody />\n    </PFTable>\n  ) : (\n    <EmptyVersionsMsg />\n  );\n};\n\nconst CRDTableRow: RowFunction<CustomResourceDefinitionKind> = ({ obj: crd, index, key, style }) => {\n  return (\n    <TableRow id={crd.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <span className=\"co-resource-item\">\n          <ResourceLink kind=\"CustomResourceDefinition\" name={crd.metadata.name} namespace={crd.metadata.namespace} displayName={_.get(crd, 'spec.names.kind')} />\n        </span>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>{crd.spec.group}</TableData>\n      <TableData className={tableColumnClasses[2]}>{getLatestVersionForCRD(crd)}</TableData>\n      <TableData className={tableColumnClasses[3]}>{namespaced(crd) ? 'Yes' : 'No'}</TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Established crd={crd} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind=\"CustomResourceDefinition\" resource={crd} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst Details: React.FC<{ obj: CustomResourceDefinitionKind }> = ({ obj: crd }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Custom Resource Definition Details\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary showPodSelector={false} showNodeSelector={false} resource={crd} />\n            </div>\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_91')}</dt>\n                <dd>\n                  <Established crd={crd} />\n                </dd>\n                <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_92')} obj={crd} path=\"spec.group\" />\n                <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_93')} obj={crd} path=\"spec.version\" />\n                <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_94')} obj={crd} path=\"spec.scope\" />\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1')} />\n        <Conditions conditions={crd.status.conditions} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_93')} />\n        <CRDVersionTable versions={crd.spec.versions} />\n      </div>\n    </>\n  );\n};\n\nconst Instances: React.FC<InstancesProps> = ({ obj, namespace }) => {\n  const crdKind = referenceForCRD(obj);\n  const componentLoader = resourceListPages.get(crdKind, () => Promise.resolve(DefaultPage));\n  return <AsyncComponent loader={componentLoader} namespace={namespace ? namespace : undefined} kind={crdKind} showTitle={false} autoFocus={false} />;\n};\n\nexport const CustomResourceDefinitionsList: React.FC<CustomResourceDefinitionsListProps> = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Custom Resource Definitions\" Header={CRDTableHeader.bind(null, t)} Row={CRDTableRow} defaultSortField=\"spec.names.kind\" virtualize />;\n};\n\nexport const CustomResourceDefinitionsPage: React.FC<CustomResourceDefinitionsPageProps> = props => <ListPage {...props} ListComponent={CustomResourceDefinitionsList} kind=\"CustomResourceDefinition\" canCreate={true} />;\nexport const CustomResourceDefinitionsDetailsPage: React.FC<CustomResourceDefinitionsDetailsPageProps> = props => <DetailsPage {...props} kind=\"CustomResourceDefinition\" menuActions={menuActions} pages={[navFactory.details(Details), navFactory.editYaml(), { name: 'Instances', href: 'instances', component: Instances }]} />;\n\nexport type CustomResourceDefinitionsListProps = {};\n\nexport type CustomResourceDefinitionsPageProps = {};\n\ntype InstancesProps = {\n  obj: CustomResourceDefinitionKind;\n  namespace: string;\n};\n\nCustomResourceDefinitionsList.displayName = 'CustomResourceDefinitionsList';\nCustomResourceDefinitionsPage.displayName = 'CustomResourceDefinitionsPage';\n\ntype CustomResourceDefinitionsDetailsPageProps = {\n  match: any;\n};\n\nexport type CRDVersionProps = {\n  versions: CRDVersion[];\n};\n\ntype PFSortState = {\n  index?: number;\n  direction?: SortByDirection;\n};\n"]}]}