{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","mtime":1617182414000},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { AngleDoubleRightIcon, BanIcon, CheckCircleIcon, CircleIcon, ExclamationCircleIcon, PendingIcon, SyncAltIcon, } from '@patternfly/react-icons';\nimport { getRunStatusColor, runStatus } from '../../../../utils/pipeline-augment';\nexport const StatusIcon = (_a) => {\n    var { status } = _a, props = __rest(_a, [\"status\"]);\n    switch (status) {\n        case runStatus['In Progress']:\n        case runStatus.Running:\n            return React.createElement(SyncAltIcon, Object.assign({}, props, { className: \"fa-spin\" }));\n        case runStatus.Succeeded:\n            return React.createElement(CheckCircleIcon, Object.assign({}, props));\n        case runStatus.Failed:\n            return React.createElement(ExclamationCircleIcon, Object.assign({}, props));\n        case runStatus.Idle:\n        case runStatus.Pending:\n            return React.createElement(PendingIcon, Object.assign({}, props));\n        case runStatus.Cancelled:\n            return React.createElement(BanIcon, Object.assign({}, props));\n        case runStatus.Skipped:\n            return React.createElement(AngleDoubleRightIcon, Object.assign({}, props));\n        default:\n            return React.createElement(CircleIcon, Object.assign({}, props));\n    }\n};\nexport const ColoredStatusIcon = (_a) => {\n    var { status } = _a, others = __rest(_a, [\"status\"]);\n    return (React.createElement(\"div\", { style: {\n            color: status\n                ? getRunStatusColor(status).pftoken.value\n                : getRunStatusColor(runStatus.Cancelled).pftoken.value,\n        } },\n        React.createElement(StatusIcon, Object.assign({ status: status }, others))));\n};\nexport const ColoredStatusIconWorkFlow = (_a) => {\n    var { status } = _a, others = __rest(_a, [\"status\"]);\n    return (React.createElement(\"div\", { style: {\n            color: status\n                ? getRunStatusColor(status).pftoken.value\n                : getRunStatusColor(runStatus.Cancelled).pftoken.value\n        } },\n        React.createElement(StatusIcon, Object.assign({ status: status }, others))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,oBAAoB,EACpB,OAAO,EACP,eAAe,EACf,UAAU,EACV,qBAAqB,EACrB,WAAW,EACX,WAAW,GACZ,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAQlF,MAAM,CAAC,MAAM,UAAU,GAA8B,CAAC,EAAoB,EAAE,EAAE;QAAxB,EAAE,MAAM,OAAY,EAAV,8BAAQ;IACtE,QAAQ,MAAM,EAAE;QACd,KAAK,SAAS,CAAC,aAAa,CAAC,CAAC;QAC9B,KAAK,SAAS,CAAC,OAAO;YACpB,OAAO,oBAAC,WAAW,oBAAK,KAAK,IAAE,SAAS,EAAC,SAAS,IAAG,CAAC;QAExD,KAAK,SAAS,CAAC,SAAS;YACtB,OAAO,oBAAC,eAAe,oBAAK,KAAK,EAAI,CAAC;QAExC,KAAK,SAAS,CAAC,MAAM;YACnB,OAAO,oBAAC,qBAAqB,oBAAK,KAAK,EAAI,CAAC;QAE9C,KAAK,SAAS,CAAC,IAAI,CAAC;QACpB,KAAK,SAAS,CAAC,OAAO;YACpB,OAAO,oBAAC,WAAW,oBAAK,KAAK,EAAI,CAAC;QAEpC,KAAK,SAAS,CAAC,SAAS;YACtB,OAAO,oBAAC,OAAO,oBAAK,KAAK,EAAI,CAAC;QAEhC,KAAK,SAAS,CAAC,OAAO;YACpB,OAAO,oBAAC,oBAAoB,oBAAK,KAAK,EAAI,CAAC;QAE7C;YACE,OAAO,oBAAC,UAAU,oBAAK,KAAK,EAAI,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAA8B,CAAC,EAAqB,EAAE,EAAE;QAAzB,EAAE,MAAM,OAAa,EAAX,+BAAS;IAC9E,OAAO,CACL,6BACE,KAAK,EAAE;YACL,KAAK,EAAE,MAAM;gBACX,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK;gBACzC,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK;SACzD;QAED,oBAAC,UAAU,kBAAC,MAAM,EAAE,MAAM,IAAM,MAAM,EAAI,CACtC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAA8B,CAAC,EAGpE,EAAE,EAAE;QAHgE,EACnE,MAAM,OAEP,EADC,+BAAS;IAET,OAAO,CACL,6BACE,KAAK,EAAE;YACL,KAAK,EAAE,MAAM;gBACX,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK;gBACzC,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK;SACzD;QAED,oBAAC,UAAU,kBAAC,MAAM,EAAE,MAAM,IAAM,MAAM,EAAI,CACtC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  AngleDoubleRightIcon,\n  BanIcon,\n  CheckCircleIcon,\n  CircleIcon,\n  ExclamationCircleIcon,\n  PendingIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport { getRunStatusColor, runStatus } from '../../../../utils/pipeline-augment';\n\ninterface StatusIconProps {\n  status: string;\n  height?: number;\n  width?: number;\n}\n\nexport const StatusIcon: React.FC<StatusIconProps> = ({ status, ...props }) => {\n  switch (status) {\n    case runStatus['In Progress']:\n    case runStatus.Running:\n      return <SyncAltIcon {...props} className=\"fa-spin\" />;\n\n    case runStatus.Succeeded:\n      return <CheckCircleIcon {...props} />;\n\n    case runStatus.Failed:\n      return <ExclamationCircleIcon {...props} />;\n\n    case runStatus.Idle:\n    case runStatus.Pending:\n      return <PendingIcon {...props} />;\n\n    case runStatus.Cancelled:\n      return <BanIcon {...props} />;\n\n    case runStatus.Skipped:\n      return <AngleDoubleRightIcon {...props} />;\n\n    default:\n      return <CircleIcon {...props} />;\n  }\n};\n\nexport const ColoredStatusIcon: React.FC<StatusIconProps> = ({ status, ...others }) => {\n  return (\n    <div\n      style={{\n        color: status\n          ? getRunStatusColor(status).pftoken.value\n          : getRunStatusColor(runStatus.Cancelled).pftoken.value,\n      }}\n    >\n      <StatusIcon status={status} {...others} />\n    </div>\n  );\n};\n\nexport const ColoredStatusIconWorkFlow: React.FC<StatusIconProps> = ({\n  status,\n  ...others\n}) => {\n  return (\n    <div\n      style={{\n        color: status\n          ? getRunStatusColor(status).pftoken.value\n          : getRunStatusColor(runStatus.Cancelled).pftoken.value\n      }}\n    >\n      <StatusIcon status={status} {...others} />\n    </div>\n  );\n};\n"]}]}