{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/selector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/selector.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { selectorToString } from '../../module/k8s/selector';\nconst Requirement = ({ kind, requirements, namespace = '' }) => {\n    // Strip off any trailing '=' characters for valueless selectors\n    const requirementAsString = selectorToString(requirements)\n        .replace(/=,/g, ',')\n        .replace(/=$/g, '');\n    const requirementAsUrlEncodedString = encodeURIComponent(requirementAsString);\n    const to = namespace\n        ? `/search/ns/${namespace}?kind=${kind}&q=${requirementAsUrlEncodedString}`\n        : `/search/all-namespaces?kind=${kind}&q=${requirementAsUrlEncodedString}`;\n    return (React.createElement(\"div\", { className: \"co-m-requirement\" },\n        React.createElement(Link, { className: `co-m-requirement__link co-text-${kind.toLowerCase()}`, to: to },\n            React.createElement(SearchIcon, { className: \"co-m-requirement__icon co-icon-flex-child\" }),\n            React.createElement(\"span\", { className: \"co-m-requirement__label\" }, requirementAsString.replace(/,/g, ', ')))));\n};\nRequirement.displayName = 'Requirement';\nexport const Selector = ({ kind = 'Pod', selector = {}, namespace = undefined, }) => (React.createElement(\"div\", { className: \"co-m-selector\" }, _.isEmpty(selector) ? (React.createElement(\"p\", { className: \"text-muted\" }, \"No selector\")) : (React.createElement(Requirement, { kind: kind, requirements: selector, namespace: namespace }))));\nSelector.displayName = 'Selector';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/selector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/selector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AAGrD,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE7D,MAAM,WAAW,GAA+B,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE;IACzF,gEAAgE;IAChE,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,YAAY,CAAC;SACvD,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;SACnB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACtB,MAAM,6BAA6B,GAAG,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;IAE9E,MAAM,EAAE,GAAG,SAAS;QAClB,CAAC,CAAC,cAAc,SAAS,SAAS,IAAI,MAAM,6BAA6B,EAAE;QAC3E,CAAC,CAAC,+BAA+B,IAAI,MAAM,6BAA6B,EAAE,CAAC;IAE7E,OAAO,CACL,6BAAK,SAAS,EAAC,kBAAkB;QAC/B,oBAAC,IAAI,IAAC,SAAS,EAAE,kCAAkC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC7E,oBAAC,UAAU,IAAC,SAAS,EAAC,2CAA2C,GAAG;YACpE,8BAAM,SAAS,EAAC,yBAAyB,IAAE,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAQ,CACrF,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AACF,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;AAExC,MAAM,CAAC,MAAM,QAAQ,GAA4B,CAAC,EAChD,IAAI,GAAG,KAAK,EACZ,QAAQ,GAAG,EAAE,EACb,SAAS,GAAG,SAAS,GACtB,EAAE,EAAE,CAAC,CACJ,6BAAK,SAAS,EAAC,eAAe,IAC3B,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACrB,2BAAG,SAAS,EAAC,YAAY,kBAAgB,CAC1C,CAAC,CAAC,CAAC,CACF,oBAAC,WAAW,IAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,GAAI,CAC1E,CACG,CACP,CAAC;AACF,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { Selector as SelectorKind } from '../../module/k8s';\nimport { selectorToString } from '../../module/k8s/selector';\n\nconst Requirement: React.FC<RequirementProps> = ({ kind, requirements, namespace = '' }) => {\n  // Strip off any trailing '=' characters for valueless selectors\n  const requirementAsString = selectorToString(requirements)\n    .replace(/=,/g, ',')\n    .replace(/=$/g, '');\n  const requirementAsUrlEncodedString = encodeURIComponent(requirementAsString);\n\n  const to = namespace\n    ? `/search/ns/${namespace}?kind=${kind}&q=${requirementAsUrlEncodedString}`\n    : `/search/all-namespaces?kind=${kind}&q=${requirementAsUrlEncodedString}`;\n\n  return (\n    <div className=\"co-m-requirement\">\n      <Link className={`co-m-requirement__link co-text-${kind.toLowerCase()}`} to={to}>\n        <SearchIcon className=\"co-m-requirement__icon co-icon-flex-child\" />\n        <span className=\"co-m-requirement__label\">{requirementAsString.replace(/,/g, ', ')}</span>\n      </Link>\n    </div>\n  );\n};\nRequirement.displayName = 'Requirement';\n\nexport const Selector: React.FC<SelectorProps> = ({\n  kind = 'Pod',\n  selector = {},\n  namespace = undefined,\n}) => (\n  <div className=\"co-m-selector\">\n    {_.isEmpty(selector) ? (\n      <p className=\"text-muted\">No selector</p>\n    ) : (\n      <Requirement kind={kind} requirements={selector} namespace={namespace} />\n    )}\n  </div>\n);\nSelector.displayName = 'Selector';\n\ntype RequirementProps = {\n  kind: string;\n  requirements: SelectorKind;\n  namespace?: string;\n};\n\ntype SelectorProps = {\n  kind?: string;\n  selector: SelectorKind;\n  namespace?: string;\n};\n"]}]}