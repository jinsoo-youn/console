{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/models/pipelines.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/models/pipelines.ts","mtime":1615298458640},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens';\nimport { BadgeType } from '@console/shared/src/components/badges/badge-factory';\nconst color = tektonGroupColor.value;\nexport const PipelineModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1beta1',\n    label: 'Pipeline',\n    plural: 'pipelines',\n    abbr: 'PL',\n    namespaced: true,\n    kind: 'Pipeline',\n    id: 'pipeline',\n    labelPlural: 'Pipelines',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const PipelineRunModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1beta1',\n    label: 'Pipeline Run',\n    plural: 'pipelineruns',\n    abbr: 'PLR',\n    namespaced: true,\n    kind: 'PipelineRun',\n    id: 'pipelinerun',\n    labelPlural: 'Pipeline Runs',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const TaskModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1beta1',\n    label: 'Task',\n    plural: 'tasks',\n    abbr: 'T',\n    namespaced: true,\n    kind: 'Task',\n    id: 'task',\n    labelPlural: 'Tasks',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const TaskRunModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1beta1',\n    label: 'Task Run',\n    plural: 'taskruns',\n    abbr: 'TR',\n    namespaced: true,\n    kind: 'TaskRun',\n    id: 'taskrun',\n    labelPlural: 'Task Runs',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const PipelineResourceModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Pipeline Resource',\n    plural: 'pipelineresources',\n    abbr: 'PR',\n    namespaced: true,\n    kind: 'PipelineResource',\n    id: 'pipelineresource',\n    labelPlural: 'Pipeline Resources',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const ClusterTaskModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1beta1',\n    label: 'Cluster Task',\n    plural: 'clustertasks',\n    abbr: 'CT',\n    namespaced: false,\n    kind: 'ClusterTask',\n    id: 'clustertask',\n    labelPlural: 'Cluster Tasks',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const ConditionModel = {\n    apiGroup: 'tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Condition',\n    plural: 'conditions',\n    abbr: 'C',\n    namespaced: true,\n    kind: 'Condition',\n    id: 'condition',\n    labelPlural: 'Conditions',\n    crd: true,\n    badge: BadgeType.DEV,\n    color,\n};\nexport const TriggerBindingModel = {\n    apiGroup: 'triggers.tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Trigger Binding',\n    plural: 'triggerbindings',\n    abbr: 'TB',\n    namespaced: true,\n    kind: 'TriggerBinding',\n    id: 'triggerbinding',\n    labelPlural: 'Trigger Bindings',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const ClusterTriggerBindingModel = {\n    apiGroup: 'triggers.tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Cluster Trigger Binding',\n    plural: 'clustertriggerbindings',\n    abbr: 'CTB',\n    namespaced: false,\n    kind: 'ClusterTriggerBinding',\n    id: 'clustertriggerbinding',\n    labelPlural: 'Cluster Trigger Bindings',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const TriggerTemplateModel = {\n    apiGroup: 'triggers.tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Trigger Template',\n    plural: 'triggertemplates',\n    abbr: 'TT',\n    namespaced: true,\n    kind: 'TriggerTemplate',\n    id: 'triggertemplate',\n    labelPlural: 'Trigger Templates',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\nexport const EventListenerModel = {\n    apiGroup: 'triggers.tekton.dev',\n    apiVersion: 'v1alpha1',\n    label: 'Event Listener',\n    plural: 'eventlisteners',\n    abbr: 'EL',\n    namespaced: true,\n    kind: 'EventListener',\n    id: 'eventlistener',\n    labelPlural: 'Event Listeners',\n    crd: true,\n    badge: BadgeType.TECH,\n    color,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/models/pipelines.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/models/pipelines.ts"],"names":[],"mappings":"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","sourcesContent":["import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { BadgeType } from '@console/shared/src/components/badges/badge-factory';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline Run',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'Pipeline Runs',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task Run',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'Task Runs',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Pipeline Resource',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'Pipeline Resources',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Cluster Task',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'Cluster Tasks',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  badge: BadgeType.DEV,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Trigger Binding',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'Trigger Bindings',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Cluster Trigger Binding',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'Cluster Trigger Bindings',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Trigger Template',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'Trigger Templates',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Event Listener',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'Event Listeners',\n  crd: true,\n  badge: BadgeType.TECH,\n  color,\n};\n"]}]}