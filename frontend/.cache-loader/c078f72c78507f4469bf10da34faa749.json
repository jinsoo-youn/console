{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/network-attachment-definition-plugin/src/components/network-attachment-definitions/NetworkAttachmentDefinitionDetails.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/network-attachment-definition-plugin/src/components/network-attachment-definitions/NetworkAttachmentDefinitionDetails.tsx","mtime":1615298458680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ScrollToTopOnMount, SectionHeading, StatusBox } from '@console/internal/components/utils';\nimport { getName, getNamespace } from '@console/shared/src';\nimport { getConfigAsJSON, getDescription, getType } from '../../selectors';\nimport { networkTypes } from '../../constants';\nconst NET_ATTACH_DEF_DETAILS_HEADING = 'Network Attachment Definition Details';\nexport const getBasicID = (entity) => `${getNamespace(entity)}-${getName(entity)}`;\nexport const prefixedID = (idPrefix, id) => idPrefix && id ? `${idPrefix}-${id}` : null;\n// FIXME: Use DetailsItem from common console utils.\nexport const DetailsItem = ({ title, isNotAvail = false, idValue, valueClassName, children, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"dt\", null, title),\n        React.createElement(\"dd\", { id: idValue, className: valueClassName }, isNotAvail ? React.createElement(\"span\", { className: \"text-secondary\" }, \"Not available\") : children)));\n};\nexport const NetAttachDefinitionSummary = ({ netAttachDef, }) => {\n    const name = getName(netAttachDef);\n    const description = getDescription(netAttachDef);\n    const type = getType(getConfigAsJSON(netAttachDef));\n    const id = getBasicID(netAttachDef);\n    // FIXME: This should use ResourceSummary like all other details pages.\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DetailsItem, { title: \"Name\", idValue: prefixedID(id, 'name'), isNotAvail: !name }, name),\n        React.createElement(DetailsItem, { title: \"Description\", idValue: prefixedID(id, 'description'), isNotAvail: !description }, description),\n        React.createElement(DetailsItem, { title: \"Type\", idValue: prefixedID(id, 'type'), isNotAvail: !type }, _.get(networkTypes, [type], null) || type)));\n};\nexport const NetworkAttachmentDefinitionDetails = (props) => {\n    const { obj: netAttachDef } = props;\n    return (React.createElement(StatusBox, { data: netAttachDef, loaded: !!netAttachDef },\n        React.createElement(ScrollToTopOnMount, null),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: NET_ATTACH_DEF_DETAILS_HEADING }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(NetAttachDefinitionSummary, { netAttachDef: netAttachDef }))))));\n};\nexport default NetworkAttachmentDefinitionDetails;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/network-attachment-definition-plugin/src/components/network-attachment-definitions/NetworkAttachmentDefinitionDetails.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/network-attachment-definition-plugin/src/components/network-attachment-definitions/NetworkAttachmentDefinitionDetails.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ScrollToTopOnMount, SectionHeading, StatusBox } from '@console/internal/components/utils';\nimport { getName, getNamespace } from '@console/shared/src';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getConfigAsJSON, getDescription, getType } from '../../selectors';\nimport { networkTypes } from '../../constants';\nimport { NetworkAttachmentDefinitionKind } from '../../types';\n\nconst NET_ATTACH_DEF_DETAILS_HEADING = 'Network Attachment Definition Details';\n\nexport const getBasicID = <A extends K8sResourceKind = K8sResourceKind>(entity: A) =>\n  `${getNamespace(entity)}-${getName(entity)}`;\n\nexport const prefixedID = (idPrefix: string, id: string) =>\n  idPrefix && id ? `${idPrefix}-${id}` : null;\n\n// FIXME: Use DetailsItem from common console utils.\nexport const DetailsItem: React.FC<DetailsItemProps> = ({\n  title,\n  isNotAvail = false,\n  idValue,\n  valueClassName,\n  children,\n}) => {\n  return (\n    <>\n      <dt>{title}</dt>\n      <dd id={idValue} className={valueClassName}>\n        {isNotAvail ? <span className=\"text-secondary\">Not available</span> : children}\n      </dd>\n    </>\n  );\n};\n\nexport const NetAttachDefinitionSummary: React.FC<NetAttachDefinitionSummaryProps> = ({\n  netAttachDef,\n}) => {\n  const name = getName(netAttachDef);\n  const description = getDescription(netAttachDef);\n  const type = getType(getConfigAsJSON(netAttachDef));\n  const id = getBasicID(netAttachDef);\n\n  // FIXME: This should use ResourceSummary like all other details pages.\n  return (\n    <>\n      <DetailsItem title=\"Name\" idValue={prefixedID(id, 'name')} isNotAvail={!name}>\n        {name}\n      </DetailsItem>\n\n      <DetailsItem\n        title=\"Description\"\n        idValue={prefixedID(id, 'description')}\n        isNotAvail={!description}\n      >\n        {description}\n      </DetailsItem>\n\n      <DetailsItem title=\"Type\" idValue={prefixedID(id, 'type')} isNotAvail={!type}>\n        {_.get(networkTypes, [type], null) || type}\n      </DetailsItem>\n    </>\n  );\n};\n\nexport const NetworkAttachmentDefinitionDetails: React.FC<NetAttachDefDetailsProps> = (props) => {\n  const { obj: netAttachDef } = props;\n\n  return (\n    <StatusBox data={netAttachDef} loaded={!!netAttachDef}>\n      <ScrollToTopOnMount />\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={NET_ATTACH_DEF_DETAILS_HEADING} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <NetAttachDefinitionSummary netAttachDef={netAttachDef} />\n          </div>\n        </div>\n      </div>\n    </StatusBox>\n  );\n};\n\ntype NetAttachDefinitionSummaryProps = {\n  netAttachDef: NetworkAttachmentDefinitionKind;\n};\n\ntype NetAttachDefDetailsProps = {\n  obj: NetworkAttachmentDefinitionKind;\n};\n\ntype DetailsItemProps = {\n  title: string;\n  idValue?: string;\n  isNotAvail?: boolean;\n  valueClassName?: string;\n  children: React.ReactNode;\n};\n\nexport default NetworkAttachmentDefinitionDetails;\n"]}]}