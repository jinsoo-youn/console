{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/create-form.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/create-form.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { DevTool } from '@hookform/devtools';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { k8sCreate, referenceFor, modelFor } from '../../../module/k8s';\nimport { pluralToKind } from './';\nimport { ButtonBar, history, resourceObjPath } from '../../utils';\nimport { Section } from '../utils/section';\nexport const WithCommonForm = (SubForm, params, defaultValues, modal) => {\n    const FormComponent = props => {\n        var _a;\n        const methods = useForm({ defaultValues: defaultValues });\n        const kind = (_a = pluralToKind.get(params.plural)) === null || _a === void 0 ? void 0 : _a['kind'];\n        const title = `${props.titleVerb} ${(params === null || params === void 0 ? void 0 : params.type) === 'form' ? '' : params.type || 'Sample'} ${kind || ''}`;\n        const [inProgress] = React.useState(false); // onSubmit이나 나중에 Error관련 메서드에서 inProgress를 false로 변경해줘야함.\n        const model = kind && modelFor(kind);\n        const namespaced = model === null || model === void 0 ? void 0 : model.namespaced;\n        const plural = model === null || model === void 0 ? void 0 : model.plural;\n        const onClick = methods.handleSubmit(data => {\n            let inDo = _.defaultsDeep(props.fixed, data);\n            inDo = props.onSubmitCallback(inDo);\n            k8sCreate(model, inDo)\n                .then(() => {\n                history.push(resourceObjPath(inDo, referenceFor(model)));\n            })\n                .catch(e => {\n                console.error(e.message);\n            });\n        });\n        return (React.createElement(FormProvider, Object.assign({}, methods),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(Helmet, null,\n                    React.createElement(\"title\", null, title)),\n                React.createElement(\"form\", { className: \"co-m-pane__body-group co-m-pane__form\" },\n                    React.createElement(\"h1\", { className: \"co-m-pane__heading co-m-pane__heading--baseline\" },\n                        React.createElement(\"div\", { className: \"co-m-pane__name\" }, title),\n                        React.createElement(\"div\", { className: \"co-m-pane__heading-link\" },\n                            React.createElement(Link, { to: namespaced ? `/k8s/ns/${params.ns}/${plural}/~new` : `/k8s/cluster/${plural}/~new`, id: \"yaml-link\", replace: true }, \"Edit YAML\"))),\n                    React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, props.explanation),\n                    React.createElement(\"fieldset\", null,\n                        React.createElement(Section, { label: \"Name\", id: \"name\", isRequired: true },\n                            React.createElement(\"input\", { className: \"pf-c-form-control\", id: \"name\", name: \"metadata.name\", ref: methods.register }))),\n                    React.createElement(SubForm, { isCreate: props.isCreate }),\n                    React.createElement(ButtonBar, { inProgress: inProgress },\n                        React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                            React.createElement(Button, { type: \"button\", variant: \"primary\", id: \"save-changes\", onClick: onClick }, props.saveButtonText || 'Create'),\n                            React.createElement(Button, { type: \"button\", variant: \"secondary\", id: \"cancel\", onClick: history.goBack }, \"Cancel\")))),\n                React.createElement(DevTool, { control: methods.control }))));\n    };\n    return FormComponent;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/create-form.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/form/create-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { DevTool } from '@hookform/devtools';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { k8sCreate, referenceFor, K8sResourceKind, modelFor } from '../../../module/k8s';\nimport { pluralToKind } from './';\nimport { ButtonBar, history, resourceObjPath } from '../../utils';\nimport { Section } from '../utils/section';\n\nexport const WithCommonForm = (SubForm, params, defaultValues, modal?: boolean) => {\n  const FormComponent: React.FC<CommonFormProps_> = props => {\n    const methods = useForm({ defaultValues: defaultValues });\n\n    const kind = pluralToKind.get(params.plural)?.['kind'];\n    const title = `${props.titleVerb} ${params?.type === 'form' ? '' : params.type || 'Sample'} ${kind || ''}`;\n\n    const [inProgress] = React.useState(false); // onSubmit이나 나중에 Error관련 메서드에서 inProgress를 false로 변경해줘야함.\n    const model = kind && modelFor(kind);\n    const namespaced = model?.namespaced;\n    const plural = model?.plural;\n\n    const onClick = methods.handleSubmit(data => {\n      let inDo = _.defaultsDeep(props.fixed, data);\n      inDo = props.onSubmitCallback(inDo);\n      k8sCreate(model, inDo)\n        .then(() => {\n          history.push(resourceObjPath(inDo, referenceFor(model)));\n        })\n        .catch(e => {\n          console.error(e.message);\n        });\n    });\n    return (\n      <FormProvider {...methods}>\n        <div className=\"co-m-pane__body\">\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          <form className=\"co-m-pane__body-group co-m-pane__form\">\n            <h1 className=\"co-m-pane__heading co-m-pane__heading--baseline\">\n              <div className=\"co-m-pane__name\">{title}</div>\n              <div className=\"co-m-pane__heading-link\">\n                <Link to={namespaced ? `/k8s/ns/${params.ns}/${plural}/~new` : `/k8s/cluster/${plural}/~new`} id=\"yaml-link\" replace>\n                  Edit YAML\n                </Link>\n              </div>\n            </h1>\n            <p className=\"co-m-pane__explanation\">{props.explanation}</p>\n            <fieldset>\n              <Section label=\"Name\" id=\"name\" isRequired={true}>\n                <input className=\"pf-c-form-control\" id=\"name\" name=\"metadata.name\" ref={methods.register} />\n              </Section>\n            </fieldset>\n            <SubForm isCreate={props.isCreate} />\n            <ButtonBar inProgress={inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button type=\"button\" variant=\"primary\" id=\"save-changes\" onClick={onClick}>\n                  {props.saveButtonText || 'Create'}\n                </Button>\n                <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={history.goBack}>\n                  Cancel\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </form>\n          <DevTool control={methods.control} />\n        </div>\n      </FormProvider>\n    );\n  };\n  return FormComponent;\n};\n\ntype CommonFormProps_ = {\n  obj?: K8sResourceKind;\n  fixed: object;\n  isCreate: boolean;\n  titleVerb: string;\n  onSubmitCallback: Function;\n  saveButtonText?: string;\n  explanation?: string;\n};\n"]}]}