{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmPanel.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmPanel.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ResourceIcon, SimpleTabNav, ActionsMenu, resourcePathFromModel, } from '@console/internal/components/utils';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { observer } from '@console/topology';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { vmActions } from './components/kubevirtComponentFactory';\nimport { TopologyVmDetailsPanel } from './TopologyVmDetailsPanel';\nimport { TopologyVmResourcesPanel } from './TopologyVmResourcesPanel';\nconst stateToProps = ({ UI }) => ({\n    selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\nconst dispatchToProps = (dispatch) => ({\n    onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\nexport const ConnectedTopologyVmPanel = ({ vmNode, selectedDetailsTab, onClickTab, }) => {\n    const name = vmNode.getLabel();\n    const vmData = vmNode.getData();\n    const vmObj = vmData.resources.obj;\n    const { namespace } = vmObj.metadata;\n    const actions = vmActions(vmData);\n    return (React.createElement(\"div\", { className: \"overview__sidebar-pane\" },\n        React.createElement(\"div\", { className: \"overview__sidebar-pane-head resource-overview__heading\" },\n            React.createElement(\"h1\", { className: \"co-m-pane__heading\" },\n                React.createElement(\"div\", { className: \"co-m-pane__name co-resource-item\" },\n                    React.createElement(ResourceIcon, { className: \"co-m-resource-icon--lg\", kind: vmObj.kind }),\n                    name && (React.createElement(Link, { to: resourcePathFromModel(modelFor(vmObj.kind), name, namespace), className: \"co-resource-item__resource-name\" }, name))),\n                (actions === null || actions === void 0 ? void 0 : actions.length) && (React.createElement(\"div\", { className: \"co-actions\" },\n                    React.createElement(ActionsMenu, { actions: actions }))))),\n        React.createElement(SimpleTabNav, { selectedTab: selectedDetailsTab || 'Resources', onClickTab: onClickTab, tabs: [\n                { name: 'Details', component: TopologyVmDetailsPanel },\n                { name: 'Resources', component: TopologyVmResourcesPanel },\n            ], tabProps: { vmNode }, additionalClassNames: \"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\" })));\n};\nconst TopologyVmPanel = connect(stateToProps, dispatchToProps)(observer(ConnectedTopologyVmPanel));\nexport default TopologyVmPanel;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmPanel.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/topology/TopologyVmPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EACL,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,qBAAqB,GACtB,MAAM,oCAAoC,CAAC;AAC5C,OAAO,KAAK,SAAS,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,uCAAuC,CAAC;AAClE,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAWtE,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,EAAkB,EAAE,CAAC,CAAC;IAChD,kBAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;CACjE,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,CAAC,QAAQ,EAAqB,EAAE,CAAC,CAAC;IACxD,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;CACzE,CAAC,CAAC;AAQH,MAAM,CAAC,MAAM,wBAAwB,GAAmC,CAAC,EACvE,MAAM,EACN,kBAAkB,EAClB,UAAU,GACW,EAAE,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAChC,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IACnC,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;IACrC,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IAElC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;QACrC,6BAAK,SAAS,EAAC,wDAAwD;YACrE,4BAAI,SAAS,EAAC,oBAAoB;gBAChC,6BAAK,SAAS,EAAC,kCAAkC;oBAC/C,oBAAC,YAAY,IAAC,SAAS,EAAC,wBAAwB,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,GAAI;oBACpE,IAAI,IAAI,CACP,oBAAC,IAAI,IACH,EAAE,EAAE,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,EAChE,SAAS,EAAC,iCAAiC,IAE1C,IAAI,CACA,CACR,CACG;gBACL,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,CAClB,6BAAK,SAAS,EAAC,YAAY;oBACzB,oBAAC,WAAW,IAAC,OAAO,EAAE,OAAO,GAAI,CAC7B,CACP,CACE,CACD;QACN,oBAAC,YAAY,IACX,WAAW,EAAE,kBAAkB,IAAI,WAAW,EAC9C,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE;gBACJ,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sBAAsB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wBAAwB,EAAE;aAC3D,EACD,QAAQ,EAAE,EAAE,MAAM,EAAE,EACpB,oBAAoB,EAAC,8FAA8F,GACnH,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,OAAO,CAC7B,YAAY,EACZ,eAAe,CAChB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAEtC,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  ResourceIcon,\n  SimpleTabNav,\n  ActionsMenu,\n  resourcePathFromModel,\n} from '@console/internal/components/utils';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { observer } from '@console/topology';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { vmActions } from './components/kubevirtComponentFactory';\nimport { TopologyVmDetailsPanel } from './TopologyVmDetailsPanel';\nimport { TopologyVmResourcesPanel } from './TopologyVmResourcesPanel';\nimport { VMNode } from './types';\n\ntype PropsFromState = {\n  selectedDetailsTab?: any;\n};\n\ntype PropsFromDispatch = {\n  onClickTab?: (name: string) => void;\n};\n\nconst stateToProps = ({ UI }): PropsFromState => ({\n  selectedDetailsTab: UI.getIn(['overview', 'selectedDetailsTab']),\n});\n\nconst dispatchToProps = (dispatch): PropsFromDispatch => ({\n  onClickTab: (name) => dispatch(UIActions.selectOverviewDetailsTab(name)),\n});\n\ntype OwnProps = {\n  vmNode: VMNode;\n};\n\ntype TopologyVmPanelProps = PropsFromState & PropsFromDispatch & OwnProps;\n\nexport const ConnectedTopologyVmPanel: React.FC<TopologyVmPanelProps> = ({\n  vmNode,\n  selectedDetailsTab,\n  onClickTab,\n}: TopologyVmPanelProps) => {\n  const name = vmNode.getLabel();\n  const vmData = vmNode.getData();\n  const vmObj = vmData.resources.obj;\n  const { namespace } = vmObj.metadata;\n  const actions = vmActions(vmData);\n\n  return (\n    <div className=\"overview__sidebar-pane\">\n      <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            <ResourceIcon className=\"co-m-resource-icon--lg\" kind={vmObj.kind} />\n            {name && (\n              <Link\n                to={resourcePathFromModel(modelFor(vmObj.kind), name, namespace)}\n                className=\"co-resource-item__resource-name\"\n              >\n                {name}\n              </Link>\n            )}\n          </div>\n          {actions?.length && (\n            <div className=\"co-actions\">\n              <ActionsMenu actions={actions} />\n            </div>\n          )}\n        </h1>\n      </div>\n      <SimpleTabNav\n        selectedTab={selectedDetailsTab || 'Resources'}\n        onClickTab={onClickTab}\n        tabs={[\n          { name: 'Details', component: TopologyVmDetailsPanel },\n          { name: 'Resources', component: TopologyVmResourcesPanel },\n        ]}\n        tabProps={{ vmNode }}\n        additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\"\n      />\n    </div>\n  );\n};\n\nconst TopologyVmPanel = connect<PropsFromState, PropsFromDispatch, TopologyVmPanelProps>(\n  stateToProps,\n  dispatchToProps,\n)(observer(ConnectedTopologyVmPanel));\n\nexport default TopologyVmPanel;\n"]}]}