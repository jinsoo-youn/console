{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/routes/RouteRow.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/routes/RouteRow.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableRow, TableData } from '@console/internal/components/factory';\nimport { Kebab, ResourceLink, ResourceKebab, Timestamp, ExternalLink, } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { getConditionString } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './route-table';\nconst routeReference = referenceForModel(RouteModel);\nconst revisionReference = referenceForModel(RevisionModel);\nconst RouteRow = ({ obj, index, key, style }) => (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n    React.createElement(TableData, { className: tableColumnClasses[0] },\n        React.createElement(ResourceLink, { kind: routeReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.uid })),\n    React.createElement(TableData, { className: cx(tableColumnClasses[1], 'co-break-word') },\n        React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n    React.createElement(TableData, { className: tableColumnClasses[2] }, (obj.status && obj.status.url && (React.createElement(ExternalLink, { href: obj.status.url, text: obj.status.url }))) ||\n        '-'),\n    React.createElement(TableData, { className: tableColumnClasses[3] },\n        React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n    React.createElement(TableData, { className: tableColumnClasses[4] }, obj.status ? getConditionString(obj.status.conditions) : '-'),\n    React.createElement(TableData, { className: tableColumnClasses[5] }, obj.status && obj.status.traffic\n        ? obj.status.traffic.map((t, i) => (React.createElement(React.Fragment, { key: t.revisionName },\n            i > 0 ? ', ' : '',\n            `${t.percent}% → `,\n            React.createElement(ResourceLink, { namespace: obj.metadata.namespace, kind: revisionReference, name: t.revisionName, inline: true, hideIcon: true }))))\n        : '-'),\n    React.createElement(TableData, { className: tableColumnClasses[6] },\n        React.createElement(ResourceKebab, { actions: Kebab.factory.common, kind: routeReference, resource: obj }))));\nexport default RouteRow;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/routes/RouteRow.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/components/routes/RouteRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableRow, TableData, RowFunction } from '@console/internal/components/factory';\nimport {\n  Kebab,\n  ResourceLink,\n  ResourceKebab,\n  Timestamp,\n  ExternalLink,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { getConditionString } from '../../utils/condition-utils';\nimport { RouteKind } from '../../types';\nimport { tableColumnClasses } from './route-table';\n\nconst routeReference = referenceForModel(RouteModel);\nconst revisionReference = referenceForModel(RevisionModel);\n\nconst RouteRow: RowFunction<RouteKind> = ({ obj, index, key, style }) => (\n  <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n    <TableData className={tableColumnClasses[0]}>\n      <ResourceLink\n        kind={routeReference}\n        name={obj.metadata.name}\n        namespace={obj.metadata.namespace}\n        title={obj.metadata.uid}\n      />\n    </TableData>\n    <TableData className={cx(tableColumnClasses[1], 'co-break-word')}>\n      <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n    </TableData>\n    <TableData className={tableColumnClasses[2]}>\n      {(obj.status && obj.status.url && (\n        <ExternalLink href={obj.status.url} text={obj.status.url} />\n      )) ||\n        '-'}\n    </TableData>\n    <TableData className={tableColumnClasses[3]}>\n      <Timestamp timestamp={obj.metadata.creationTimestamp} />\n    </TableData>\n    <TableData className={tableColumnClasses[4]}>\n      {obj.status ? getConditionString(obj.status.conditions) : '-'}\n    </TableData>\n    <TableData className={tableColumnClasses[5]}>\n      {obj.status && obj.status.traffic\n        ? obj.status.traffic.map((t, i) => (\n            <React.Fragment key={t.revisionName}>\n              {i > 0 ? ', ' : ''}\n              {`${t.percent}% → `}\n              <ResourceLink\n                namespace={obj.metadata.namespace}\n                kind={revisionReference}\n                name={t.revisionName}\n                inline\n                hideIcon\n              />\n            </React.Fragment>\n          ))\n        : '-'}\n    </TableData>\n    <TableData className={tableColumnClasses[6]}>\n      <ResourceKebab actions={Kebab.factory.common} kind={routeReference} resource={obj} />\n    </TableData>\n  </TableRow>\n);\n\nexport default RouteRow;\n"]}]}