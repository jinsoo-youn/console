{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { requirePrometheus } from '@console/internal/components/graphs';\nimport { topWorkloadMetricsQueries } from '../queries';\nimport ConnectedMonitoringDashboardGraph from '../dashboard/MonitoringDashboardGraph';\nconst WorkloadGraphs = requirePrometheus(({ resource }) => {\n    var _a, _b, _c;\n    const namespace = (_a = resource === null || resource === void 0 ? void 0 : resource.metadata) === null || _a === void 0 ? void 0 : _a.namespace;\n    const workloadName = (_b = resource === null || resource === void 0 ? void 0 : resource.metadata) === null || _b === void 0 ? void 0 : _b.name;\n    const workloadType = (_c = resource === null || resource === void 0 ? void 0 : resource.kind) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    return (React.createElement(React.Fragment, null, _.map(topWorkloadMetricsQueries, (q) => (React.createElement(ConnectedMonitoringDashboardGraph, { key: q.title, title: q.title, namespace: namespace, graphType: q.chartType, query: q.query({ namespace, workloadName, workloadType }), humanize: q.humanize, byteDataType: q.byteDataType })))));\n});\nexport default WorkloadGraphs;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAE,yBAAyB,EAAE,MAAM,YAAY,CAAC;AACvD,OAAO,iCAAiC,MAAM,uCAAuC,CAAC;AAEtF,MAAM,cAAc,GAAG,iBAAiB,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;;IACxD,MAAM,SAAS,SAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,SAAS,CAAC;IAChD,MAAM,YAAY,SAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,IAAI,CAAC;IAC9C,MAAM,YAAY,SAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,0CAAE,WAAW,EAAE,CAAC;IAEnD,OAAO,CACL,0CACG,CAAC,CAAC,GAAG,CAAC,yBAAyB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CACvC,oBAAC,iCAAiC,IAChC,GAAG,EAAE,CAAC,CAAC,KAAK,EACZ,KAAK,EAAE,CAAC,CAAC,KAAK,EACd,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,CAAC,CAAC,SAAS,EACtB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,EACzD,QAAQ,EAAE,CAAC,CAAC,QAAQ,EACpB,YAAY,EAAE,CAAC,CAAC,YAAY,GAC5B,CACH,CAAC,CACD,CACJ,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,eAAe,cAAc,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { requirePrometheus } from '@console/internal/components/graphs';\nimport { topWorkloadMetricsQueries } from '../queries';\nimport ConnectedMonitoringDashboardGraph from '../dashboard/MonitoringDashboardGraph';\n\nconst WorkloadGraphs = requirePrometheus(({ resource }) => {\n  const namespace = resource?.metadata?.namespace;\n  const workloadName = resource?.metadata?.name;\n  const workloadType = resource?.kind?.toLowerCase();\n\n  return (\n    <>\n      {_.map(topWorkloadMetricsQueries, (q) => (\n        <ConnectedMonitoringDashboardGraph\n          key={q.title}\n          title={q.title}\n          namespace={namespace}\n          graphType={q.chartType}\n          query={q.query({ namespace, workloadName, workloadType })}\n          humanize={q.humanize}\n          byteDataType={q.byteDataType}\n        />\n      ))}\n    </>\n  );\n});\n\nexport default WorkloadGraphs;\n"]}]}