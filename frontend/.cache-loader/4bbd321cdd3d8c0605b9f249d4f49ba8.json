{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/global-config.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/global-config.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as plugins from '../../plugins';\nimport { featureReducerName, flagPending } from '../../reducers/features';\nimport { k8sList, referenceForModel, getResourceDescription } from '../../module/k8s';\nimport { EmptyBox, ExpandableAlert, Kebab, LoadingBox, resourcePathFromModel } from '../utils';\nimport { addIDPItems } from './oauth';\nimport { TextFilter } from '../factory';\nimport { fuzzyCaseInsensitive } from '../factory/table-filters';\nconst stateToProps = (state) => ({\n    configResources: state.k8s.getIn(['RESOURCES', 'configResources']),\n    flags: state[featureReducerName],\n});\nconst editYAMLMenuItem = (name, resourceLink) => ({\n    label: `Edit ${name} Resource`,\n    href: `${resourceLink}/yaml`,\n});\nconst viewAPIExplorerMenuItem = (name, apiExplorerLink) => ({\n    label: `Explore ${name} API`,\n    href: apiExplorerLink,\n});\nconst oauthMenuItems = _.map(addIDPItems, (label, id) => ({\n    label,\n    href: `/settings/idp/${id}`,\n}));\nconst ItemRow = ({ item }) => {\n    return (React.createElement(\"div\", { className: \"row co-resource-list__item\", \"data-test-action\": item.label },\n        React.createElement(\"div\", { className: \"col-xs-10 col-sm-4\" },\n            React.createElement(Link, { to: item.path, \"data-test-id\": item.id }, item.label)),\n        React.createElement(\"div\", { className: \"hidden-xs col-sm-7\" },\n            React.createElement(\"div\", { className: \"co-line-clamp\" }, item.description || '-')),\n        React.createElement(\"div\", { className: \"dropdown-kebab-pf\" },\n            React.createElement(Kebab, { options: item.menuItems }))));\n};\nclass GlobalConfigPage_ extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            errors: [],\n            items: [],\n            loading: true,\n            textFilter: '',\n        };\n    }\n    getGlobalConfigs() {\n        return plugins.registry.getGlobalConfigs();\n    }\n    componentDidMount() {\n        Promise.all(this.props.configResources.map((model) => {\n            return k8sList(model)\n                .catch(({ response: { status }, message = `Could not get resource ${model.kind}` }) => {\n                if (status !== 403) {\n                    this.setState(({ errors }) => ({ errors: [...errors, message] }));\n                }\n                return [];\n            })\n                .then((items) => items.map((i) => (Object.assign(Object.assign({}, i), { model }))));\n        })).then((responses) => {\n            const flattenedResponses = _.flatten(responses);\n            const winnowedResponses = flattenedResponses.map((item) => ({\n                model: item.model,\n                uid: item.metadata.uid,\n                name: item.metadata.name,\n                namespace: item.metadata.namespace,\n                kind: item.kind,\n            }));\n            const globalConfigs = this.getGlobalConfigs();\n            const usableConfigs = globalConfigs\n                .filter((item) => this.checkFlags(item))\n                .map((item) => item.properties);\n            const allItems = [...winnowedResponses, ...usableConfigs]\n                .map((item) => {\n                const apiExplorerLink = `/api-resource/cluster/${referenceForModel(item.model)}`;\n                const resourceLink = resourcePathFromModel(item.model, item.name, item.namespace);\n                return {\n                    label: item.kind,\n                    id: item.uid,\n                    description: getResourceDescription(item.model),\n                    path: resourceLink,\n                    menuItems: [\n                        editYAMLMenuItem(item.kind, resourceLink),\n                        viewAPIExplorerMenuItem(item.kind, apiExplorerLink),\n                        ...(item.kind === 'OAuth' ? oauthMenuItems : []),\n                    ],\n                };\n            })\n                .concat([\n                {\n                    label: 'Alertmanager',\n                    id: 'alertmanager',\n                    description: 'Configure grouping and routing of alerts',\n                    path: '/monitoring/alertmanagerconfig',\n                    menuItems: [\n                        {\n                            label: 'Create Receiver',\n                            href: '/monitoring/alertmanagerconfig/receivers/~new',\n                        },\n                        {\n                            label: `Edit Configuration YAML`,\n                            href: `/monitoring/alertmanageryaml`,\n                        },\n                    ],\n                },\n            ]);\n            const sortedItems = _.sortBy(_.flatten(allItems), 'label', 'asc');\n            this.setState({\n                items: sortedItems,\n                loading: false,\n            });\n        });\n    }\n    checkFlags(c) {\n        const { flags } = this.props;\n        const { required } = c.properties;\n        const requiredArray = required ? _.castArray(required) : [];\n        const requirementMissing = _.some(requiredArray, (flag) => flag && (flagPending(flags.get(flag)) || !flags.get(flag)));\n        return requirementMissing ? null : c.properties;\n    }\n    render() {\n        const { errors, items = [], loading, textFilter } = this.state;\n        const visibleItems = items.filter(({ label, description = '' }) => {\n            return (fuzzyCaseInsensitive(textFilter, label) ||\n                description.toLowerCase().indexOf(textFilter.toLowerCase()) !== -1);\n        });\n        return (React.createElement(React.Fragment, null,\n            !loading && (React.createElement(\"div\", { className: \"co-m-pane__filter-bar co-m-pane__filter-bar--with-help-text\" },\n                React.createElement(\"div\", { className: \"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--help-text\" },\n                    React.createElement(\"p\", { className: \"co-help-text\" }, \"Edit the following resources to manage the configuration of your cluster.\")),\n                React.createElement(\"div\", { className: \"co-m-pane__fiter-bar-group co-m-pane__filter-bar-group--filter\" },\n                    React.createElement(TextFilter, { value: textFilter, label: \"by name or description\", onChange: (val) => this.setState({ textFilter: val }) })))),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                !_.isEmpty(errors) && (React.createElement(ExpandableAlert, { variant: AlertVariant.danger, alerts: errors.map((error, i) => (React.createElement(\"div\", { key: i }, error))) })),\n                loading && React.createElement(LoadingBox, null),\n                !loading &&\n                    (_.isEmpty(visibleItems) ? (React.createElement(EmptyBox, { label: \"Configuration Resources\" })) : (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n                        React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                            React.createElement(\"div\", { className: \"col-xs-10 col-sm-4\" }, \"Configuration Resource\"),\n                            React.createElement(\"div\", { className: \"hidden-xs col-sm-7\" }, \"Description\"),\n                            React.createElement(\"div\", null)),\n                        React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.map(visibleItems, (item) => (React.createElement(ItemRow, { item: item, key: item.id }))))))))));\n    }\n}\nexport const GlobalConfigPage = connect(stateToProps)(GlobalConfigPage_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/global-config.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/cluster-settings/global-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as plugins from '../../plugins';\n\nimport { RootState } from '../../redux';\nimport { featureReducerName, flagPending, FeatureState } from '../../reducers/features';\nimport { K8sKind, k8sList, referenceForModel, getResourceDescription } from '../../module/k8s';\nimport { EmptyBox, ExpandableAlert, Kebab, LoadingBox, resourcePathFromModel } from '../utils';\nimport { addIDPItems } from './oauth';\nimport { TextFilter } from '../factory';\nimport { fuzzyCaseInsensitive } from '../factory/table-filters';\n\nconst stateToProps = (state: RootState) => ({\n  configResources: state.k8s.getIn(['RESOURCES', 'configResources']),\n  flags: state[featureReducerName],\n});\n\nconst editYAMLMenuItem = (name: string, resourceLink: string) => ({\n  label: `Edit ${name} Resource`,\n  href: `${resourceLink}/yaml`,\n});\n\nconst viewAPIExplorerMenuItem = (name: string, apiExplorerLink: string) => ({\n  label: `Explore ${name} API`,\n  href: apiExplorerLink,\n});\n\nconst oauthMenuItems = _.map(addIDPItems, (label: string, id: string) => ({\n  label,\n  href: `/settings/idp/${id}`,\n}));\n\nconst ItemRow = ({ item }) => {\n  return (\n    <div className=\"row co-resource-list__item\" data-test-action={item.label}>\n      <div className=\"col-xs-10 col-sm-4\">\n        <Link to={item.path} data-test-id={item.id}>\n          {item.label}\n        </Link>\n      </div>\n      <div className=\"hidden-xs col-sm-7\">\n        <div className=\"co-line-clamp\">{item.description || '-'}</div>\n      </div>\n      <div className=\"dropdown-kebab-pf\">\n        <Kebab options={item.menuItems} />\n      </div>\n    </div>\n  );\n};\n\nclass GlobalConfigPage_ extends React.Component<GlobalConfigPageProps, GlobalConfigPageState> {\n  readonly state: GlobalConfigPageState = {\n    errors: [],\n    items: [],\n    loading: true,\n    textFilter: '',\n  };\n\n  getGlobalConfigs(): plugins.GlobalConfig[] {\n    return plugins.registry.getGlobalConfigs();\n  }\n\n  componentDidMount() {\n    Promise.all(\n      this.props.configResources.map((model: K8sKind) => {\n        return k8sList(model)\n          .catch(({ response: { status }, message = `Could not get resource ${model.kind}` }) => {\n            if (status !== 403) {\n              this.setState(({ errors }) => ({ errors: [...errors, message] }));\n            }\n            return [];\n          })\n          .then((items) => items.map((i: K8sKind) => ({ ...i, model })));\n      }),\n    ).then((responses) => {\n      const flattenedResponses = _.flatten(responses);\n      const winnowedResponses = flattenedResponses.map((item) => ({\n        model: item.model,\n        uid: item.metadata.uid,\n        name: item.metadata.name,\n        namespace: item.metadata.namespace,\n        kind: item.kind,\n      }));\n\n      const globalConfigs = this.getGlobalConfigs();\n      const usableConfigs = globalConfigs\n        .filter((item) => this.checkFlags(item))\n        .map((item) => item.properties);\n\n      const allItems = [...winnowedResponses, ...usableConfigs]\n        .map((item) => {\n          const apiExplorerLink = `/api-resource/cluster/${referenceForModel(item.model)}`;\n          const resourceLink = resourcePathFromModel(item.model, item.name, item.namespace);\n          return {\n            label: item.kind,\n            id: item.uid,\n            description: getResourceDescription(item.model),\n            path: resourceLink,\n            menuItems: [\n              editYAMLMenuItem(item.kind, resourceLink),\n              viewAPIExplorerMenuItem(item.kind, apiExplorerLink),\n              ...(item.kind === 'OAuth' ? oauthMenuItems : []),\n            ],\n          };\n        })\n        .concat([\n          {\n            label: 'Alertmanager',\n            id: 'alertmanager',\n            description: 'Configure grouping and routing of alerts',\n            path: '/monitoring/alertmanagerconfig',\n            menuItems: [\n              {\n                label: 'Create Receiver',\n                href: '/monitoring/alertmanagerconfig/receivers/~new',\n              },\n              {\n                label: `Edit Configuration YAML`,\n                href: `/monitoring/alertmanageryaml`,\n              },\n            ],\n          },\n        ]);\n      const sortedItems = _.sortBy(_.flatten(allItems), 'label', 'asc');\n\n      this.setState({\n        items: sortedItems,\n        loading: false,\n      });\n    });\n  }\n\n  checkFlags(c: plugins.GlobalConfig): GlobalConfigObjectProps {\n    const { flags } = this.props;\n    const { required } = c.properties;\n\n    const requiredArray = required ? _.castArray(required) : [];\n    const requirementMissing = _.some(\n      requiredArray,\n      (flag) => flag && (flagPending(flags.get(flag)) || !flags.get(flag)),\n    );\n    return requirementMissing ? null : c.properties;\n  }\n\n  render() {\n    const { errors, items = [], loading, textFilter } = this.state;\n    const visibleItems = items.filter(({ label, description = '' }) => {\n      return (\n        fuzzyCaseInsensitive(textFilter, label) ||\n        description.toLowerCase().indexOf(textFilter.toLowerCase()) !== -1\n      );\n    });\n    return (\n      <>\n        {!loading && (\n          <div className=\"co-m-pane__filter-bar co-m-pane__filter-bar--with-help-text\">\n            <div className=\"co-m-pane__filter-bar-group co-m-pane__filter-bar-group--help-text\">\n              <p className=\"co-help-text\">\n                Edit the following resources to manage the configuration of your cluster.\n              </p>\n            </div>\n            <div className=\"co-m-pane__fiter-bar-group co-m-pane__filter-bar-group--filter\">\n              <TextFilter\n                value={textFilter}\n                label=\"by name or description\"\n                onChange={(val) => this.setState({ textFilter: val })}\n              />\n            </div>\n          </div>\n        )}\n        <div className=\"co-m-pane__body\">\n          {!_.isEmpty(errors) && (\n            <ExpandableAlert\n              variant={AlertVariant.danger}\n              alerts={errors.map((error, i) => (\n                <div key={i}>{error}</div>\n              ))}\n            />\n          )}\n          {loading && <LoadingBox />}\n          {!loading &&\n            (_.isEmpty(visibleItems) ? (\n              <EmptyBox label=\"Configuration Resources\" />\n            ) : (\n              <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n                <div className=\"row co-m-table-grid__head\">\n                  <div className=\"col-xs-10 col-sm-4\">Configuration Resource</div>\n                  <div className=\"hidden-xs col-sm-7\">Description</div>\n                  <div />\n                </div>\n                <div className=\"co-m-table-grid__body\">\n                  {_.map(visibleItems, (item) => (\n                    <ItemRow item={item} key={item.id} />\n                  ))}\n                </div>\n              </div>\n            ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport const GlobalConfigPage = connect(stateToProps)(GlobalConfigPage_);\n\ntype GlobalConfigPageProps = {\n  configResources: K8sKind[];\n  flags?: FeatureState;\n};\n\ntype GlobalConfigPageState = {\n  errors: string[];\n  items: any;\n  loading: boolean;\n  textFilter: string;\n};\n\ntype GlobalConfigObjectProps = {\n  kind: string;\n  model: K8sKind;\n  name: string;\n  namespace: string;\n  uid: string;\n};\n"]}]}