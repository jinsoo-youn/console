{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/pod.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/pod.tsx","mtime":1615701814910},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { Status } from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { useTranslation } from 'react-i18next';\nimport * as UIActions from '../actions/ui';\nimport { coFetchJSON } from '../co-fetch';\nimport { getRestartPolicyLabel, podPhase, podPhaseFilterReducer, podReadiness, podRestarts } from '../module/k8s/pods';\nimport { getContainerState, getContainerStatus } from '../module/k8s/container';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, NodeLink, OwnerReferences, ResourceIcon, ResourceKebab, ResourceLink, ResourceSummary, ScrollToTopOnMount, SectionHeading, Timestamp, formatBytesAsMiB, formatCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec, humanizeCpuCores, navFactory, pluralize, units } from './utils';\nimport { PodLogs } from './pod-logs';\nimport { Area, PROMETHEUS_BASE_PATH, PROMETHEUS_TENANCY_BASE_PATH, requirePrometheus } from './graphs';\nimport { VolumesTable } from './volumes-table';\nimport { PodModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n// Only request metrics if the device's screen width is larger than the\n// breakpoint where metrics are visible.\nconst showMetrics = PROMETHEUS_BASE_PATH && PROMETHEUS_TENANCY_BASE_PATH && window.screen.width >= 1200;\nconst fetchPodMetrics = (namespace) => {\n    const metrics = [\n        {\n            key: 'memory',\n            query: namespace ? `sum(container_memory_working_set_bytes{namespace='${namespace}',container=''}) BY (pod, namespace)` : \"sum(container_memory_working_set_bytes{container=''}) BY (pod, namespace)\",\n        },\n        {\n            key: 'cpu',\n            query: namespace ? `pod:container_cpu_usage:sum{namespace='${namespace}'}` : 'pod:container_cpu_usage:sum',\n        },\n    ];\n    const promises = metrics.map(({ key, query }) => {\n        const url = namespace ? `${PROMETHEUS_TENANCY_BASE_PATH}/api/v1/query?namespace=${namespace}&query=${query}` : `${PROMETHEUS_BASE_PATH}/api/v1/query?query=${query}`;\n        return coFetchJSON(url).then(({ data: { result } }) => {\n            return result.reduce((acc, data) => {\n                const value = Number(data.value[1]);\n                return _.set(acc, [key, data.metric.namespace, data.metric.pod], value);\n            }, {});\n        });\n    });\n    return Promise.all(promises).then((data) => _.assign({}, ...data));\n};\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(PodModel), ...Kebab.factory.common];\nconst tableColumnClasses = [\n    '',\n    '',\n    classNames('pf-m-hidden', 'pf-m-visible-on-sm'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'pf-u-w-10-on-lg', 'pf-u-w-8-on-xl'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-2xl', 'pf-u-w-8-on-2xl'),\n    classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n    classNames('pf-m-hidden', { 'pf-m-visible-on-xl pf-u-w-10-on-2xl': showMetrics }),\n    classNames('pf-m-hidden', { 'pf-m-visible-on-xl pf-u-w-10-on-2xl': showMetrics }),\n    classNames('pf-m-hidden', 'pf-m-visible-on-2xl pf-u-w-10-on-2xl'),\n    Kebab.columnClass,\n];\nconst kind = 'Pod';\nconst podRowStateToProps = ({ UI }) => ({\n    metrics: UI.getIn(['metrics', 'pod']),\n});\nconst PodTableRow = connect(podRowStateToProps)(({ obj: pod, index, rowKey, style, metrics, showNodes }) => {\n    const { name, namespace, creationTimestamp } = pod.metadata;\n    const { readyCount, totalContainers } = podReadiness(pod);\n    const phase = podPhase(pod);\n    const restarts = podRestarts(pod);\n    const bytes = _.get(metrics, ['memory', namespace, name]);\n    const cores = _.get(metrics, ['cpu', namespace, name]);\n    return (React.createElement(TableRow, { id: pod.metadata.uid, index: index, trKey: rowKey, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: name, namespace: namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: phase })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            readyCount,\n            \"/\",\n            totalContainers),\n        React.createElement(TableData, { className: tableColumnClasses[4] }, restarts),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, showNodes ? React.createElement(ResourceLink, { kind: \"Node\", name: pod.spec.nodeName, namespace: namespace }) : React.createElement(OwnerReferences, { resource: pod })),\n        React.createElement(TableData, { className: tableColumnClasses[6] }, bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'),\n        React.createElement(TableData, { className: tableColumnClasses[7] }, cores ? `${formatCores(cores)} cores` : '-'),\n        React.createElement(TableData, { className: tableColumnClasses[8] },\n            React.createElement(Timestamp, { timestamp: creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[9] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: pod, isDisabled: phase === 'Terminating' }))));\n});\nPodTableRow.displayName = 'PodTableRow';\nconst getHeader = showNodes => {\n    return (t) => {\n        return [\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n                sortField: 'metadata.name',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[0] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n                sortField: 'metadata.namespace',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[1] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n                sortFunc: 'podPhase',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[2] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_9'),\n                sortFunc: 'podReadiness',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[3] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_10'),\n                sortFunc: 'podRestarts',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[4] },\n            },\n            {\n                title: showNodes ? t('COMMON:MSG_MAIN_TABLEHEADER_63') : t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n                sortField: showNodes ? 'spec.nodeName' : 'metadata.ownerReferences[0].name',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[5] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_65'),\n                sortFunc: 'podMemory',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[6] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_64'),\n                sortFunc: 'podCPU',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[7] },\n            },\n            {\n                title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n                sortField: 'metadata.creationTimestamp',\n                transforms: [sortable],\n                props: { className: tableColumnClasses[8] },\n            },\n            {\n                title: '',\n                props: { className: tableColumnClasses[9] },\n            },\n        ];\n    };\n};\nexport const ContainerLink = ({ pod, name }) => (React.createElement(\"span\", { className: \"co-resource-item co-resource-item--inline\" },\n    React.createElement(ResourceIcon, { kind: \"Container\" }),\n    React.createElement(Link, { to: `/k8s/ns/${pod.metadata.namespace}/pods/${pod.metadata.name}/containers/${name}` }, name)));\nContainerLink.displayName = 'ContainerLink';\nexport const ContainerRow = ({ pod, container }) => {\n    const cstatus = getContainerStatus(pod, container.name);\n    const cstate = getContainerState(cstatus);\n    const startedAt = _.get(cstate, 'startedAt');\n    const finishedAt = _.get(cstate, 'finishedAt');\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" },\n            React.createElement(ContainerLink, { pod: pod, name: container.name })),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7 co-truncate co-nowrap co-select-to-copy\" }, container.image || '-'),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" },\n            React.createElement(Status, { status: cstate.label })),\n        React.createElement(\"div\", { className: \"col-lg-1 col-md-2 hidden-sm hidden-xs\" }, _.get(cstatus, 'restartCount', '0')),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-2 hidden-sm hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: startedAt })),\n        React.createElement(\"div\", { className: \"col-lg-2 hidden-md hidden-sm hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: finishedAt })),\n        React.createElement(\"div\", { className: \"col-lg-1 hidden-md hidden-sm hidden-xs\" }, _.get(cstate, 'exitCode', '-'))));\n};\nexport const PodContainerTable = ({ heading, containers, pod }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SectionHeading, { text: heading }),\n        React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n            React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_2')),\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_3')),\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_4')),\n                React.createElement(\"div\", { className: \"col-lg-1 col-md-2 hidden-sm hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_5')),\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-2 hidden-sm hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_6')),\n                React.createElement(\"div\", { className: \"col-lg-2 hidden-md hidden-sm hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_7')),\n                React.createElement(\"div\", { className: \"col-lg-1 hidden-md hidden-sm hidden-xs\" }, t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_8'))),\n            React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, containers.map((c, i) => (React.createElement(ContainerRow, { key: i, pod: pod, container: c })))))));\n};\nconst PodGraphs = requirePrometheus(({ pod }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: t('SINGLE:MSG_NAMESPACES_NAMESPACEDETAILS_TABDETAILS_RESOURCEUSAGE_3'), humanize: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, namespace: pod.metadata.namespace, query: `sum(container_memory_working_set_bytes{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}',container='',}) BY (pod, namespace)` })),\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: t('SINGLE:MSG_NAMESPACES_NAMESPACEDETAILS_TABDETAILS_RESOURCEUSAGE_2'), humanize: humanizeCpuCores, namespace: pod.metadata.namespace, query: `pod:container_cpu_usage:sum{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}'}` })),\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_81'), humanize: humanizeBinaryBytes, byteDataType: ByteDataTypes.BinaryBytes, namespace: pod.metadata.namespace, query: `pod:container_fs_usage_bytes:sum{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}'}` }))),\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_79'), humanize: humanizeDecimalBytesPerSec, namespace: pod.metadata.namespace, query: `sum(irate(container_network_receive_bytes_total{pod='${pod.metadata.name}', namespace='${pod.metadata.namespace}'}[5m])) by (pod, namespace)` })),\n            React.createElement(\"div\", { className: \"col-md-12 col-lg-4\" },\n                React.createElement(Area, { title: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_80'), humanize: humanizeDecimalBytesPerSec, namespace: pod.metadata.namespace, query: `sum(irate(container_network_transmit_bytes_total{pod='${pod.metadata.name}', namespace='${pod.metadata.namespace}'}[5m])) by (pod, namespace)` }))),\n        React.createElement(\"br\", null)));\n});\nexport const PodStatus = ({ pod }) => React.createElement(Status, { status: podPhase(pod) });\nexport const PodDetailsList = ({ pod }) => {\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_20')),\n        React.createElement(\"dd\", null,\n            React.createElement(PodStatus, { pod: pod })),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_21'), obj: pod, path: \"spec.restartPolicy\" }, getRestartPolicyLabel(pod)),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_22'), obj: pod, path: \"spec.activeDeadlineSeconds\" }, pod.spec.activeDeadlineSeconds ? pluralize(pod.spec.activeDeadlineSeconds, 'second') : 'Not Configured'),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_23'), obj: pod, path: \"status.podIP\" }),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_24'), obj: pod, path: \"spec.nodeName\", hideEmpty: true },\n            React.createElement(NodeLink, { name: pod.spec.nodeName }))));\n};\nexport const PodResourceSummary = ({ pod }) => React.createElement(ResourceSummary, { resource: pod, showNodeSelector: true, nodeSelector: \"spec.nodeSelector\", showTolerations: true });\nconst Details = ({ obj: pod }) => {\n    const { t } = useTranslation();\n    const limits = {\n        cpu: null,\n        memory: null,\n    };\n    limits.cpu = _.reduce(pod.spec.containers, (sum, container) => {\n        const value = units.dehumanize(_.get(container, 'resources.limits.cpu', 0), 'numeric').value;\n        return sum + value;\n    }, 0);\n    limits.memory = _.reduce(pod.spec.containers, (sum, container) => {\n        const value = units.dehumanize(_.get(container, 'resources.limits.memory', 0), 'binaryBytesWithoutB').value;\n        return sum + value;\n    }, 0);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ScrollToTopOnMount, null),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pod, t) }) }),\n            React.createElement(PodGraphs, { pod: pod }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(PodResourceSummary, { pod: pod })),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(PodDetailsList, { pod: pod })))),\n        pod.spec.initContainers && (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(PodContainerTable, { key: \"initContainerTable\", heading: \"Init Containers\", containers: pod.spec.initContainers, pod: pod }))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(PodContainerTable, { key: \"containerTable\", heading: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1'), containers: pod.spec.containers, pod: pod })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(VolumesTable, { resource: pod, heading: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1') })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1') }),\n            React.createElement(Conditions, { conditions: pod.status.conditions }))));\n};\nconst EnvironmentPage = (props) => React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then(c => c.EnvironmentPage) }, props));\nconst envPath = ['spec', 'containers'];\nconst PodEnvironmentComponent = props => React.createElement(EnvironmentPage, { obj: props.obj, rawEnvData: props.obj.spec, envPath: envPath, readOnly: true });\nexport const PodExecLoader = ({ obj, message }) => (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n    React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-xs-12\" },\n            React.createElement(\"div\", { className: \"panel-body\" },\n                React.createElement(AsyncComponent, { loader: () => import('./pod-exec').then(c => c.PodExec), obj: obj, message: message }))))));\nexport const PodsDetailsPage = props => {\n    return (React.createElement(DetailsPage, Object.assign({}, props, { getResourceStatus: podPhase, menuActions: menuActions, pages: [\n            navFactory.details(Details),\n            navFactory.editYaml(),\n            navFactory.envEditor(PodEnvironmentComponent),\n            navFactory.logs(PodLogs),\n            navFactory.events(ResourceEventStream),\n            {\n                href: 'terminal',\n                name: 'Terminal',\n                component: PodExecLoader,\n            },\n        ] })));\n};\nPodsDetailsPage.displayName = 'PodsDetailsPage';\nconst getRow = showNodes => {\n    return (rowArgs) => React.createElement(PodTableRow, { obj: rowArgs.obj, index: rowArgs.index, rowKey: rowArgs.key, style: rowArgs.style, showNodes: showNodes });\n};\nexport const PodList = props => {\n    var _a;\n    const showNodes = (_a = props === null || props === void 0 ? void 0 : props.customData) === null || _a === void 0 ? void 0 : _a.showNodes;\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Pods\", Header: getHeader(showNodes).bind(null, t), Row: getRow(showNodes), virtualize: true }));\n};\nPodList.displayName = 'PodList';\nconst dispatchToProps = (dispatch) => ({\n    setPodMetrics: metrics => dispatch(UIActions.setPodMetrics(metrics)),\n});\nexport const PodsPage = connect(null, dispatchToProps)((props) => {\n    const { t } = useTranslation();\n    const { canCreate = true, namespace, setPodMetrics, customData } = props, listProps = __rest(props, [\"canCreate\", \"namespace\", \"setPodMetrics\", \"customData\"]);\n    /* eslint-disable react-hooks/exhaustive-deps */\n    React.useEffect(() => {\n        if (showMetrics) {\n            const updateMetrics = () => fetchPodMetrics(namespace)\n                .then(setPodMetrics)\n                .catch(e => {\n                // Just log the error here. Showing a warning alert could be more annoying\n                // than helpful. It should be obvious there are no metrics in the list, and\n                // if monitoring is broken, it'll be really apparent since none of the\n                // graphs and dashboards will load in the UI.\n                // eslint-disable-next-line no-console\n                console.error('Unable to fetch pod metrics', e);\n            });\n            updateMetrics();\n            const id = setInterval(updateMetrics, 30 * 1000);\n            return () => clearInterval(id);\n        }\n    }, [namespace]);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    return (React.createElement(ListPage, Object.assign({}, listProps, { title: t('COMMON:MSG_LNB_MENU_23'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_23') }), canCreate: canCreate, kind: \"Pod\", ListComponent: PodList, rowFilters: [\n            {\n                filterGroupName: 'Status',\n                type: 'pod-status',\n                reducer: podPhaseFilterReducer,\n                items: [\n                    { id: 'Running', title: t('COMMON:MSG_COMMON_STATUS_1') },\n                    { id: 'Pending', title: t('COMMON:MSG_COMMON_STATUS_2') },\n                    { id: 'Terminating', title: t('COMMON:MSG_COMMON_STATUS_3') },\n                    { id: 'CrashLoopBackOff', title: t('COMMON:MSG_COMMON_STATUS_4') },\n                    // Use title \"Completed\" to match what appears in the status column for the pod.\n                    // The pod phase is \"Succeeded,\" but the container state is \"Completed.\"\n                    { id: 'Succeeded', title: t('COMMON:MSG_COMMON_STATUS_5') },\n                    { id: 'Failed', title: t('COMMON:MSG_COMMON_STATUS_12') },\n                    { id: 'Unknown', title: t('COMMON:MSG_COMMON_STATUS_6') },\n                ],\n            },\n        ], namespace: namespace, customData: customData })));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/pod.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/pod.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash-es';\nimport { Status } from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport * as UIActions from '../actions/ui';\nimport { coFetchJSON } from '../co-fetch';\nimport { ContainerSpec, K8sResourceKindReference, PodKind } from '../module/k8s';\nimport { getRestartPolicyLabel, podPhase, podPhaseFilterReducer, podReadiness, podRestarts } from '../module/k8s/pods';\nimport { getContainerState, getContainerStatus } from '../module/k8s/container';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunctionArgs } from './factory';\nimport { AsyncComponent, DetailsItem, Kebab, NodeLink, OwnerReferences, ResourceIcon, ResourceKebab, ResourceLink, ResourceSummary, ScrollToTopOnMount, SectionHeading, Timestamp, formatBytesAsMiB, formatCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec, humanizeCpuCores, navFactory, pluralize, units } from './utils';\nimport { PodLogs } from './pod-logs';\nimport { Area, PROMETHEUS_BASE_PATH, PROMETHEUS_TENANCY_BASE_PATH, requirePrometheus } from './graphs';\nimport { VolumesTable } from './volumes-table';\nimport { PodModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceLabel } from '../models/hypercloud/resource-plural';\n\n// Only request metrics if the device's screen width is larger than the\n// breakpoint where metrics are visible.\nconst showMetrics = PROMETHEUS_BASE_PATH && PROMETHEUS_TENANCY_BASE_PATH && window.screen.width >= 1200;\n\nconst fetchPodMetrics = (namespace: string): Promise<UIActions.PodMetrics> => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: namespace ? `sum(container_memory_working_set_bytes{namespace='${namespace}',container=''}) BY (pod, namespace)` : \"sum(container_memory_working_set_bytes{container=''}) BY (pod, namespace)\",\n    },\n    {\n      key: 'cpu',\n      query: namespace ? `pod:container_cpu_usage:sum{namespace='${namespace}'}` : 'pod:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(\n    ({ key, query }): Promise<UIActions.PodMetrics> => {\n      const url = namespace ? `${PROMETHEUS_TENANCY_BASE_PATH}/api/v1/query?namespace=${namespace}&query=${query}` : `${PROMETHEUS_BASE_PATH}/api/v1/query?query=${query}`;\n      return coFetchJSON(url).then(({ data: { result } }) => {\n        return result.reduce((acc, data) => {\n          const value = Number(data.value[1]);\n          return _.set(acc, [key, data.metric.namespace, data.metric.pod], value);\n        }, {});\n      });\n    },\n  );\n  return Promise.all(promises).then((data: any[]) => _.assign({}, ...data));\n};\n\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(PodModel), ...Kebab.factory.common];\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'pf-u-w-10-on-lg', 'pf-u-w-8-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl', 'pf-u-w-8-on-2xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', { 'pf-m-visible-on-xl pf-u-w-10-on-2xl': showMetrics }),\n  classNames('pf-m-hidden', { 'pf-m-visible-on-xl pf-u-w-10-on-2xl': showMetrics }),\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl pf-u-w-10-on-2xl'),\n  Kebab.columnClass,\n];\n\nconst kind = 'Pod';\n\nconst podRowStateToProps = ({ UI }) => ({\n  metrics: UI.getIn(['metrics', 'pod']),\n});\n\nconst PodTableRow = connect<PodTableRowPropsFromState, null, PodTableRowProps>(podRowStateToProps)(({ obj: pod, index, rowKey, style, metrics, showNodes }: PodTableRowProps & PodTableRowPropsFromState) => {\n  const { name, namespace, creationTimestamp } = pod.metadata;\n  const { readyCount, totalContainers } = podReadiness(pod);\n  const phase = podPhase(pod);\n  const restarts = podRestarts(pod);\n  const bytes: number = _.get(metrics, ['memory', namespace, name]);\n  const cores: number = _.get(metrics, ['cpu', namespace, name]);\n  return (\n    <TableRow id={pod.metadata.uid} index={index} trKey={rowKey} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {readyCount}/{totalContainers}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>{restarts}</TableData>\n      <TableData className={tableColumnClasses[5]}>{showNodes ? <ResourceLink kind=\"Node\" name={pod.spec.nodeName} namespace={namespace} /> : <OwnerReferences resource={pod} />}</TableData>\n      <TableData className={tableColumnClasses[6]}>{bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}</TableData>\n      <TableData className={tableColumnClasses[7]}>{cores ? `${formatCores(cores)} cores` : '-'}</TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <Timestamp timestamp={creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[9]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={pod} isDisabled={phase === 'Terminating'} />\n      </TableData>\n    </TableRow>\n  );\n});\nPodTableRow.displayName = 'PodTableRow';\n\nconst getHeader = showNodes => {\n  return (t?: TFunction) => {\n    return [\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n        sortFunc: 'podPhase',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_9'),\n        sortFunc: 'podReadiness',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_10'),\n        sortFunc: 'podRestarts',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n      },\n      {\n        title: showNodes ? t('COMMON:MSG_MAIN_TABLEHEADER_63') : t('COMMON:MSG_MAIN_TABLEHEADER_11'),\n        sortField: showNodes ? 'spec.nodeName' : 'metadata.ownerReferences[0].name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_65'),\n        sortFunc: 'podMemory',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[6] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_64'),\n        sortFunc: 'podCPU',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[7] },\n      },\n      {\n        title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[8] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[9] },\n      },\n    ];\n  };\n};\n\nexport const ContainerLink: React.FC<ContainerLinkProps> = ({ pod, name }) => (\n  <span className=\"co-resource-item co-resource-item--inline\">\n    <ResourceIcon kind=\"Container\" />\n    <Link to={`/k8s/ns/${pod.metadata.namespace}/pods/${pod.metadata.name}/containers/${name}`}>{name}</Link>\n  </span>\n);\nContainerLink.displayName = 'ContainerLink';\n\nexport const ContainerRow: React.FC<ContainerRowProps> = ({ pod, container }) => {\n  const cstatus = getContainerStatus(pod, container.name);\n  const cstate = getContainerState(cstatus);\n  const startedAt = _.get(cstate, 'startedAt');\n  const finishedAt = _.get(cstate, 'finishedAt');\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ContainerLink pod={pod} name={container.name} />\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7 co-truncate co-nowrap co-select-to-copy\">{container.image || '-'}</div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={cstate.label} />\n      </div>\n      <div className=\"col-lg-1 col-md-2 hidden-sm hidden-xs\">{_.get(cstatus, 'restartCount', '0')}</div>\n      <div className=\"col-lg-2 col-md-2 hidden-sm hidden-xs\">\n        <Timestamp timestamp={startedAt} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={finishedAt} />\n      </div>\n      <div className=\"col-lg-1 hidden-md hidden-sm hidden-xs\">{_.get(cstate, 'exitCode', '-')}</div>\n    </div>\n  );\n};\n\nexport const PodContainerTable: React.FC<PodContainerTableProps> = ({ heading, containers, pod }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_2')}</div>\n          <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_3')}</div>\n          <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_4')}</div>\n          <div className=\"col-lg-1 col-md-2 hidden-sm hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_5')}</div>\n          <div className=\"col-lg-2 col-md-2 hidden-sm hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_6')}</div>\n          <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_7')}</div>\n          <div className=\"col-lg-1 hidden-md hidden-sm hidden-xs\">{t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_8')}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {containers.map((c: any, i: number) => (\n            <ContainerRow key={i} pod={pod} container={c} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst PodGraphs = requirePrometheus(({ pod }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md-12 col-lg-4\">\n          <Area title={t('SINGLE:MSG_NAMESPACES_NAMESPACEDETAILS_TABDETAILS_RESOURCEUSAGE_3')} humanize={humanizeBinaryBytes} byteDataType={ByteDataTypes.BinaryBytes} namespace={pod.metadata.namespace} query={`sum(container_memory_working_set_bytes{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}',container='',}) BY (pod, namespace)`} />\n        </div>\n        <div className=\"col-md-12 col-lg-4\">\n          <Area title={t('SINGLE:MSG_NAMESPACES_NAMESPACEDETAILS_TABDETAILS_RESOURCEUSAGE_2')} humanize={humanizeCpuCores} namespace={pod.metadata.namespace} query={`pod:container_cpu_usage:sum{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}'}`} />\n        </div>\n        <div className=\"col-md-12 col-lg-4\">\n          <Area title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_81')} humanize={humanizeBinaryBytes} byteDataType={ByteDataTypes.BinaryBytes} namespace={pod.metadata.namespace} query={`pod:container_fs_usage_bytes:sum{pod='${pod.metadata.name}',namespace='${pod.metadata.namespace}'}`} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-12 col-lg-4\">\n          <Area title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_79')} humanize={humanizeDecimalBytesPerSec} namespace={pod.metadata.namespace} query={`sum(irate(container_network_receive_bytes_total{pod='${pod.metadata.name}', namespace='${pod.metadata.namespace}'}[5m])) by (pod, namespace)`} />\n        </div>\n        <div className=\"col-md-12 col-lg-4\">\n          <Area title={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_80')} humanize={humanizeDecimalBytesPerSec} namespace={pod.metadata.namespace} query={`sum(irate(container_network_transmit_bytes_total{pod='${pod.metadata.name}', namespace='${pod.metadata.namespace}'}[5m])) by (pod, namespace)`} />\n        </div>\n      </div>\n\n      <br />\n    </>\n  );\n});\n\nexport const PodStatus: React.FC<PodStatusProps> = ({ pod }) => <Status status={podPhase(pod)} />;\n\nexport const PodDetailsList: React.FC<PodDetailsListProps> = ({ pod }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_20')}</dt>\n      <dd>\n        <PodStatus pod={pod} />\n      </dd>\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_21')} obj={pod} path=\"spec.restartPolicy\">\n        {getRestartPolicyLabel(pod)}\n      </DetailsItem>\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_22')} obj={pod} path=\"spec.activeDeadlineSeconds\">\n        {pod.spec.activeDeadlineSeconds ? pluralize(pod.spec.activeDeadlineSeconds, 'second') : 'Not Configured'}\n      </DetailsItem>\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_23')} obj={pod} path=\"status.podIP\" />\n      <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_24')} obj={pod} path=\"spec.nodeName\" hideEmpty>\n        <NodeLink name={pod.spec.nodeName} />\n      </DetailsItem>\n    </dl>\n  );\n};\n\nexport const PodResourceSummary: React.FC<PodResourceSummaryProps> = ({ pod }) => <ResourceSummary resource={pod} showNodeSelector nodeSelector=\"spec.nodeSelector\" showTolerations />;\n\nconst Details: React.FC<PodDetailsProps> = ({ obj: pod }) => {\n  const { t } = useTranslation();\n  const limits = {\n    cpu: null,\n    memory: null,\n  };\n  limits.cpu = _.reduce(\n    pod.spec.containers,\n    (sum, container) => {\n      const value = units.dehumanize(_.get(container, 'resources.limits.cpu', 0), 'numeric').value;\n      return sum + value;\n    },\n    0,\n  );\n  limits.memory = _.reduce(\n    pod.spec.containers,\n    (sum, container) => {\n      const value = units.dehumanize(_.get(container, 'resources.limits.memory', 0), 'binaryBytesWithoutB').value;\n      return sum + value;\n    },\n    0,\n  );\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(pod, t) })} />\n        <PodGraphs pod={pod} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <PodResourceSummary pod={pod} />\n          </div>\n          <div className=\"col-sm-6\">\n            <PodDetailsList pod={pod} />\n          </div>\n        </div>\n      </div>\n      {pod.spec.initContainers && (\n        <div className=\"co-m-pane__body\">\n          <PodContainerTable key=\"initContainerTable\" heading=\"Init Containers\" containers={pod.spec.initContainers} pod={pod} />\n        </div>\n      )}\n      <div className=\"co-m-pane__body\">\n        <PodContainerTable key=\"containerTable\" heading={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} containers={pod.spec.containers} pod={pod} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={pod} heading={t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONDITIONS_1')} />\n        <Conditions conditions={pod.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props: any) => <AsyncComponent loader={() => import('./environment.jsx').then(c => c.EnvironmentPage)} {...props} />;\n\nconst envPath = ['spec', 'containers'];\nconst PodEnvironmentComponent = props => <EnvironmentPage obj={props.obj} rawEnvData={props.obj.spec} envPath={envPath} readOnly={true} />;\n\nexport const PodExecLoader: React.FC<PodExecLoaderProps> = ({ obj, message }) => (\n  <div className=\"co-m-pane__body\">\n    <div className=\"row\">\n      <div className=\"col-xs-12\">\n        <div className=\"panel-body\">\n          <AsyncComponent loader={() => import('./pod-exec').then(c => c.PodExec)} obj={obj} message={message} />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport const PodsDetailsPage: React.FC<PodDetailsPageProps> = props => {\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={podPhase}\n      menuActions={menuActions}\n      pages={[\n        navFactory.details(Details),\n        navFactory.editYaml(),\n        navFactory.envEditor(PodEnvironmentComponent),\n        navFactory.logs(PodLogs),\n        navFactory.events(ResourceEventStream),\n        {\n          href: 'terminal',\n          name: 'Terminal',\n          component: PodExecLoader,\n        },\n      ]}\n    />\n  );\n};\nPodsDetailsPage.displayName = 'PodsDetailsPage';\n\nconst getRow = showNodes => {\n  return (rowArgs: RowFunctionArgs<PodKind>) => <PodTableRow obj={rowArgs.obj} index={rowArgs.index} rowKey={rowArgs.key} style={rowArgs.style} showNodes={showNodes} />;\n};\n\nexport const PodList: React.FC<PodListProps> = props => {\n  const showNodes = props?.customData?.showNodes;\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Pods\" Header={getHeader(showNodes).bind(null, t)} Row={getRow(showNodes)} virtualize />;\n};\nPodList.displayName = 'PodList';\n\nconst dispatchToProps = (dispatch): PodPagePropsFromDispatch => ({\n  setPodMetrics: metrics => dispatch(UIActions.setPodMetrics(metrics)),\n});\n\nexport const PodsPage = connect<{}, PodPagePropsFromDispatch, PodPageProps>(\n  null,\n  dispatchToProps,\n)((props: PodPageProps & PodPagePropsFromDispatch) => {\n  const { t } = useTranslation();\n  const { canCreate = true, namespace, setPodMetrics, customData, ...listProps } = props;\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchPodMetrics(namespace)\n          .then(setPodMetrics)\n          .catch(e => {\n            // Just log the error here. Showing a warning alert could be more annoying\n            // than helpful. It should be obvious there are no metrics in the list, and\n            // if monitoring is broken, it'll be really apparent since none of the\n            // graphs and dashboards will load in the UI.\n            // eslint-disable-next-line no-console\n            console.error('Unable to fetch pod metrics', e);\n          });\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [namespace]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  return (\n    <ListPage\n      {...listProps}\n      title={t('COMMON:MSG_LNB_MENU_23')}\n      createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_23') })}\n      canCreate={canCreate}\n      kind=\"Pod\"\n      ListComponent={PodList}\n      rowFilters={[\n        {\n          filterGroupName: 'Status',\n          type: 'pod-status',\n          reducer: podPhaseFilterReducer,\n          items: [\n            { id: 'Running', title: t('COMMON:MSG_COMMON_STATUS_1') },\n            { id: 'Pending', title: t('COMMON:MSG_COMMON_STATUS_2') },\n            { id: 'Terminating', title: t('COMMON:MSG_COMMON_STATUS_3') },\n            { id: 'CrashLoopBackOff', title: t('COMMON:MSG_COMMON_STATUS_4') },\n            // Use title \"Completed\" to match what appears in the status column for the pod.\n            // The pod phase is \"Succeeded,\" but the container state is \"Completed.\"\n            { id: 'Succeeded', title: t('COMMON:MSG_COMMON_STATUS_5') },\n            { id: 'Failed', title: t('COMMON:MSG_COMMON_STATUS_12') },\n            { id: 'Unknown', title: t('COMMON:MSG_COMMON_STATUS_6') },\n          ],\n        },\n      ]}\n      namespace={namespace}\n      customData={customData}\n    />\n  );\n});\n\ntype ContainerLinkProps = {\n  pod: PodKind;\n  name: string;\n};\n\ntype ContainerRowProps = {\n  pod: PodKind;\n  container: ContainerSpec;\n};\n\ntype PodContainerTableProps = {\n  heading: string;\n  containers: ContainerSpec[];\n  pod: PodKind;\n};\n\ntype PodStatusProps = {\n  pod: PodKind;\n};\n\ntype PodResourceSummaryProps = {\n  pod: PodKind;\n};\n\ntype PodDetailsListProps = {\n  pod: PodKind;\n};\n\ntype PodExecLoaderProps = {\n  obj: PodKind;\n  message?: React.ReactElement;\n};\n\ntype PodDetailsProps = {\n  obj: PodKind;\n};\n\ntype PodTableRowProps = {\n  obj: PodKind;\n  index: number;\n  rowKey: string;\n  style: object;\n  showNodes?: boolean;\n};\n\ntype PodTableRowPropsFromState = {\n  metrics: UIActions.PodMetrics;\n};\n\ntype PodListProps = {\n  customData?: any;\n};\n\ntype PodPageProps = {\n  canCreate?: boolean;\n  fieldSelector?: any;\n  namespace?: string;\n  selector?: any;\n  showTitle?: boolean;\n  customData?: any;\n};\n\ntype PodPagePropsFromDispatch = {\n  setPodMetrics: (metrics) => void;\n};\n\ntype PodDetailsPageProps = {\n  kind: K8sResourceKindReference;\n  match: any;\n};\n"]}]}