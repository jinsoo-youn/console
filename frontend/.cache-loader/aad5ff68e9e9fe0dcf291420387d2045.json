{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/download-button.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/download-button.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { saveAs } from 'file-saver';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { coFetch } from '../../co-fetch';\nexport const DownloadButton = (props) => {\n    const [inFlight, setInFlight] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const download = () => {\n        setInFlight(true);\n        setError(false);\n        coFetch(props.url, {}, 30000)\n            .then((response) => response.blob())\n            .then((blob) => saveAs(blob, props.filename))\n            .then(() => setError(null), (e) => setError(e))\n            .then(() => setInFlight(false));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"primary\", style: { marginBottom: 10 }, isDisabled: inFlight, type: \"button\", onClick: () => download() },\n            React.createElement(DownloadIcon, null),\n            \" Download\",\n            inFlight && React.createElement(React.Fragment, null, \"ing...\")),\n        error && (React.createElement(Alert, { isInline: true, className: \"co-alert co-break-word\", variant: \"danger\", title: error.toString() }))));\n};\nDownloadButton.displayName = 'DownloadButton';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/download-button.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/download-button.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAEvD,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,MAAM,CAAC,MAAM,cAAc,GAAkC,CAAC,KAAK,EAAE,EAAE;IACrE,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAE/C,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEhB,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC;aAC1B,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;aAC5C,IAAI,CACH,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnB;aACA,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,MAAM,IACL,OAAO,EAAC,SAAS,EACjB,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,EAC3B,UAAU,EAAE,QAAQ,EACpB,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE;YAEzB,oBAAC,YAAY,OAAG;;YAAU,QAAQ,IAAI,mDAAW,CAC1C;QACR,KAAK,IAAI,CACR,oBAAC,KAAK,IACJ,QAAQ,QACR,SAAS,EAAC,wBAAwB,EAClC,OAAO,EAAC,QAAQ,EAChB,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,GACvB,CACH,CACA,CACJ,CAAC;AACJ,CAAC,CAAC;AAaF,cAAc,CAAC,WAAW,GAAG,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport { saveAs } from 'file-saver';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\n\nimport { coFetch } from '../../co-fetch';\n\nexport const DownloadButton: React.FC<DownloadButtonProps> = (props) => {\n  const [inFlight, setInFlight] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const download = () => {\n    setInFlight(true);\n    setError(false);\n\n    coFetch(props.url, {}, 30000)\n      .then((response) => response.blob())\n      .then((blob) => saveAs(blob, props.filename))\n      .then(\n        () => setError(null),\n        (e) => setError(e),\n      )\n      .then(() => setInFlight(false));\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        style={{ marginBottom: 10 }}\n        isDisabled={inFlight}\n        type=\"button\"\n        onClick={() => download()}\n      >\n        <DownloadIcon /> Download{inFlight && <>ing...</>}\n      </Button>\n      {error && (\n        <Alert\n          isInline\n          className=\"co-alert co-break-word\"\n          variant=\"danger\"\n          title={error.toString()}\n        />\n      )}\n    </>\n  );\n};\n\nexport type DownloadButtonProps = {\n  url: string;\n  filename?: string;\n  className?: string;\n};\n\nexport type DownloadButtonState = {\n  inFlight: boolean;\n  error: any;\n};\n\nDownloadButton.displayName = 'DownloadButton';\n"]}]}