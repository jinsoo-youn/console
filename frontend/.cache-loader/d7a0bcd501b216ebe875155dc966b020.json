{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/MultipleKeySelector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/MultipleKeySelector.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FieldArray, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport { PlusCircleIcon, MinusCircleIcon } from '@patternfly/react-icons';\nimport { DropdownField, InputField, getFieldId, useFormikValidationFix } from '@console/shared';\nimport { TextInputTypes, Button, FormGroup } from '@patternfly/react-core';\nimport './MultipleKeySelector.scss';\nconst MultipleKeySelector = ({ name, keys }) => {\n    const { values } = useFormikContext();\n    const items = _.get(values, name, [{ key: '', path: '' }]);\n    useFormikValidationFix(items);\n    return (React.createElement(FieldArray, { name: name, key: \"multiple-key-selector\", render: ({ push, remove }) => {\n            return (React.createElement(FormGroup, { fieldId: getFieldId(name, 'multiple-key-selector'), label: \"Items\", className: \"odc-multiple-key-selector\" },\n                items.length > 0 &&\n                    items.map((item, index) => {\n                        const fieldKey = `${name}.${index}.${item.key}`;\n                        return (React.createElement(\"div\", { className: \"form-group odc-multiple-key-selector__item\", key: fieldKey },\n                            React.createElement(DropdownField, { name: `${name}.${index}.key`, title: \"Select a key\", items: keys, fullWidth: true }),\n                            React.createElement(InputField, { name: `${name}.${index}.path`, type: TextInputTypes.text, placeholder: \"Enter a path\", isDisabled: !item.key }),\n                            React.createElement(\"div\", { className: cx('odc-multiple-key-selector__deleteButton', {\n                                    '--disabled': items.length <= 1,\n                                }) },\n                                React.createElement(MinusCircleIcon, { \"aria-hidden\": \"true\", onClick: () => remove(index) }))));\n                    }),\n                React.createElement(Button, { variant: \"link\", onClick: () => push({ key: '', path: '' }), icon: React.createElement(PlusCircleIcon, null), isInline: true }, \"Add items\")));\n        } }));\n};\nexport default MultipleKeySelector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/MultipleKeySelector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/common/MultipleKeySelector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACpE,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,MAAM,YAAY,CAAC;AAC5B,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAChG,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAC3E,OAAO,4BAA4B,CAAC;AAOpC,MAAM,mBAAmB,GAAuC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;IACjF,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IACpD,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3D,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC9B,OAAO,CACL,oBAAC,UAAU,IACT,IAAI,EAAE,IAAI,EACV,GAAG,EAAC,uBAAuB,EAC3B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE;YAC3B,OAAO,CACL,oBAAC,SAAS,IACR,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAClD,KAAK,EAAC,OAAO,EACb,SAAS,EAAC,2BAA2B;gBAEpC,KAAK,CAAC,MAAM,GAAG,CAAC;oBACf,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;wBACxB,MAAM,QAAQ,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;wBAChD,OAAO,CACL,6BAAK,SAAS,EAAC,4CAA4C,EAAC,GAAG,EAAE,QAAQ;4BACvE,oBAAC,aAAa,IACZ,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,MAAM,EAC5B,KAAK,EAAC,cAAc,EACpB,KAAK,EAAE,IAAI,EACX,SAAS,SACT;4BACF,oBAAC,UAAU,IACT,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,OAAO,EAC7B,IAAI,EAAE,cAAc,CAAC,IAAI,EACzB,WAAW,EAAC,cAAc,EAC1B,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG,GACrB;4BACF,6BACE,SAAS,EAAE,EAAE,CAAC,yCAAyC,EAAE;oCACvD,YAAY,EAAE,KAAK,CAAC,MAAM,IAAI,CAAC;iCAChC,CAAC;gCAEF,oBAAC,eAAe,mBAAa,MAAM,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAI,CAChE,CACF,CACP,CAAC;oBACJ,CAAC,CAAC;gBACJ,oBAAC,MAAM,IACL,OAAO,EAAC,MAAM,EACd,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAC1C,IAAI,EAAE,oBAAC,cAAc,OAAG,EACxB,QAAQ,sBAGD,CACC,CACb,CAAC;QACJ,CAAC,GACD,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["import * as React from 'react';\nimport { FieldArray, useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport { PlusCircleIcon, MinusCircleIcon } from '@patternfly/react-icons';\nimport { DropdownField, InputField, getFieldId, useFormikValidationFix } from '@console/shared';\nimport { TextInputTypes, Button, FormGroup } from '@patternfly/react-core';\nimport './MultipleKeySelector.scss';\n\ninterface MultipleKeySelectorProps {\n  name: string;\n  keys: { [key: string]: string };\n}\n\nconst MultipleKeySelector: React.FC<MultipleKeySelectorProps> = ({ name, keys }) => {\n  const { values } = useFormikContext<FormikValues>();\n  const items = _.get(values, name, [{ key: '', path: '' }]);\n  useFormikValidationFix(items);\n  return (\n    <FieldArray\n      name={name}\n      key=\"multiple-key-selector\"\n      render={({ push, remove }) => {\n        return (\n          <FormGroup\n            fieldId={getFieldId(name, 'multiple-key-selector')}\n            label=\"Items\"\n            className=\"odc-multiple-key-selector\"\n          >\n            {items.length > 0 &&\n              items.map((item, index) => {\n                const fieldKey = `${name}.${index}.${item.key}`;\n                return (\n                  <div className=\"form-group odc-multiple-key-selector__item\" key={fieldKey}>\n                    <DropdownField\n                      name={`${name}.${index}.key`}\n                      title=\"Select a key\"\n                      items={keys}\n                      fullWidth\n                    />\n                    <InputField\n                      name={`${name}.${index}.path`}\n                      type={TextInputTypes.text}\n                      placeholder=\"Enter a path\"\n                      isDisabled={!item.key}\n                    />\n                    <div\n                      className={cx('odc-multiple-key-selector__deleteButton', {\n                        '--disabled': items.length <= 1,\n                      })}\n                    >\n                      <MinusCircleIcon aria-hidden=\"true\" onClick={() => remove(index)} />\n                    </div>\n                  </div>\n                );\n              })}\n            <Button\n              variant=\"link\"\n              onClick={() => push({ key: '', path: '' })}\n              icon={<PlusCircleIcon />}\n              isInline\n            >\n              Add items\n            </Button>\n          </FormGroup>\n        );\n      }}\n    />\n  );\n};\n\nexport default MultipleKeySelector;\n"]}]}