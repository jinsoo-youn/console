{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourceItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourceItem.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nconst TopologyHelmReleaseResourceItem = ({ item, releaseNamespace }) => {\n    const { metadata: { name, namespace }, } = item;\n    const kind = referenceFor(item);\n    const model = modelFor(kind);\n    const resourceNamespace = model.namespaced ? namespace || releaseNamespace : null;\n    return (React.createElement(\"li\", { className: \"list-group-item container-fluid\" },\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"span\", { className: \"col-xs-12\" },\n                React.createElement(ResourceLink, { kind: kind, name: name, namespace: resourceNamespace })))));\n};\nexport default TopologyHelmReleaseResourceItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourceItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/TopologyHelmReleaseResourceItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAClE,OAAO,EAAmB,YAAY,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAOvF,MAAM,+BAA+B,GAAmD,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,EAAE,EAAE;IACrH,MAAM,EACJ,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAC9B,GAAG,IAAI,CAAC;IACT,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,MAAM,iBAAiB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;IAElF,OAAO,CACL,4BAAI,SAAS,EAAC,iCAAiC;QAC7C,6BAAK,SAAS,EAAC,KAAK;YAClB,8BAAM,SAAS,EAAC,WAAW;gBACzB,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,iBAAiB,GAAI,CACjE,CACH,CACH,CACN,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,+BAA+B,CAAC","sourcesContent":["import * as React from 'react';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, modelFor } from '@console/internal/module/k8s';\n\ntype TopologyHelmReleaseResourceItemProps = {\n  item: K8sResourceKind;\n  releaseNamespace: string;\n};\n\nconst TopologyHelmReleaseResourceItem: React.FC<TopologyHelmReleaseResourceItemProps> = ({ item, releaseNamespace }) => {\n  const {\n    metadata: { name, namespace },\n  } = item;\n  const kind = referenceFor(item);\n  const model = modelFor(kind);\n  const resourceNamespace = model.namespaced ? namespace || releaseNamespace : null;\n\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-12\">\n          <ResourceLink kind={kind} name={name} namespace={resourceNamespace} />\n        </span>\n      </div>\n    </li>\n  );\n};\n\nexport default TopologyHelmReleaseResourceItem;\n"]}]}