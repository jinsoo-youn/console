{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-deployment.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-deployment.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { getMachineAWSPlacement, getMachineRole } from '@console/shared';\nimport { MachineModel, MachineDeploymentModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\nimport { editCountAction, getDesiredReplicas, getReadyReplicas, MachineCounts, MachineTabPage, } from './machine-set';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Kebab, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector, navFactory, pluralize, resourcePath, } from './utils';\nimport { formatDuration } from './utils/datetime';\nconst { common } = Kebab.factory;\nconst menuActions = [\n    editCountAction,\n    ...Kebab.getExtensionsActionsForKind(MachineDeploymentModel),\n    ...common,\n];\nconst machineReference = referenceForModel(MachineModel);\nconst machineDeploymentReference = referenceForModel(MachineDeploymentModel);\nconst tableColumnClasses = [\n    classNames('col-sm-4', 'col-xs-6'),\n    classNames('col-sm-4', 'col-xs-6'),\n    classNames('col-sm-4', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst MachineDeploymentTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Machines',\n            sortField: 'status.replicas',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nMachineDeploymentTableHeader.displayName = 'MachineDeploymentTableHeader';\nconst MachineDeploymentTableRow = ({ obj, index, key, style, }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: machineDeploymentReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Link, { to: `${resourcePath(machineDeploymentReference, obj.metadata.name, obj.metadata.namespace)}/machines` },\n                getReadyReplicas(obj),\n                \" of \",\n                getDesiredReplicas(obj),\n                \" machines\")),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: machineDeploymentReference, resource: obj }))));\n};\nconst MachineDeploymentDetails = ({ obj }) => {\n    const machineRole = getMachineRole(obj);\n    const { availabilityZone, region } = getMachineAWSPlacement(obj);\n    const { minReadySeconds, progressDeadlineSeconds } = obj.spec;\n    const rollingUpdateStrategy = _.get(obj, 'spec.strategy.rollingUpdate');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Machine Deployment Details\" }),\n            React.createElement(MachineCounts, { resourceKind: MachineDeploymentModel, resource: obj }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(ResourceSummary, { resource: obj },\n                        React.createElement(\"dt\", null, \"Selector\"),\n                        React.createElement(\"dd\", null,\n                            React.createElement(Selector, { kind: machineReference, selector: _.get(obj, 'spec.selector'), namespace: obj.metadata.namespace })),\n                        machineRole && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Machine Role\"),\n                            React.createElement(\"dd\", null, machineRole))),\n                        region && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Region\"),\n                            React.createElement(\"dd\", null, region))),\n                        availabilityZone && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Availability Zone\"),\n                            React.createElement(\"dd\", null, availabilityZone))))),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                        React.createElement(\"dt\", null, \"Strategy\"),\n                        React.createElement(\"dd\", null, _.get(obj, 'spec.strategy.type') || '-'),\n                        rollingUpdateStrategy && (React.createElement(React.Fragment, null,\n                            React.createElement(\"dt\", null, \"Max Unavailable\"),\n                            React.createElement(\"dd\", null,\n                                rollingUpdateStrategy.maxUnavailable || 0,\n                                \" of\",\n                                ' ',\n                                pluralize(obj.spec.replicas, 'machine')),\n                            React.createElement(\"dt\", null, \"Max Surge\"),\n                            React.createElement(\"dd\", null,\n                                rollingUpdateStrategy.maxSurge || 1,\n                                \" greater than\",\n                                ' ',\n                                pluralize(obj.spec.replicas, 'machine')))),\n                        React.createElement(\"dt\", null, \"Min Ready Seconds\"),\n                        React.createElement(\"dd\", null, minReadySeconds ? pluralize(minReadySeconds, 'second') : 'Not Configured'),\n                        progressDeadlineSeconds && React.createElement(\"dt\", null, \"Progress Deadline\"),\n                        progressDeadlineSeconds && (React.createElement(\"dd\", null, /* Convert to ms for formatDuration */ formatDuration(progressDeadlineSeconds * 1000)))))))));\n};\nexport const MachineDeploymentList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Machine Deployments\", Header: MachineDeploymentTableHeader, Row: MachineDeploymentTableRow, virtualize: true })));\nexport const MachineDeploymentPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { ListComponent: MachineDeploymentList, kind: machineDeploymentReference, canCreate: true })));\nexport const MachineDeploymentDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { menuActions: menuActions, kind: machineDeploymentReference, pages: [\n        navFactory.details(MachineDeploymentDetails),\n        navFactory.editYaml(),\n        navFactory.machines(MachineTabPage),\n    ] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-deployment.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/machine-deployment.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { getMachineAWSPlacement, getMachineRole } from '@console/shared';\nimport { MachineModel, MachineDeploymentModel } from '../models';\nimport { MachineDeploymentKind, referenceForModel } from '../module/k8s';\nimport {\n  editCountAction,\n  getDesiredReplicas,\n  getReadyReplicas,\n  MachineCounts,\n  MachineTabPage,\n} from './machine-set';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport {\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  navFactory,\n  pluralize,\n  resourcePath,\n} from './utils';\nimport { formatDuration } from './utils/datetime';\n\nconst { common } = Kebab.factory;\nconst menuActions = [\n  editCountAction,\n  ...Kebab.getExtensionsActionsForKind(MachineDeploymentModel),\n  ...common,\n];\nconst machineReference = referenceForModel(MachineModel);\nconst machineDeploymentReference = referenceForModel(MachineDeploymentModel);\n\nconst tableColumnClasses = [\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'col-xs-6'),\n  classNames('col-sm-4', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst MachineDeploymentTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Machines',\n      sortField: 'status.replicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nMachineDeploymentTableHeader.displayName = 'MachineDeploymentTableHeader';\n\nconst MachineDeploymentTableRow: RowFunction<MachineDeploymentKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineDeploymentReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(\n            machineDeploymentReference,\n            obj.metadata.name,\n            obj.metadata.namespace,\n          )}/machines`}\n        >\n          {getReadyReplicas(obj)} of {getDesiredReplicas(obj)} machines\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={machineDeploymentReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst MachineDeploymentDetails: React.SFC<MachineDeploymentDetailsProps> = ({ obj }) => {\n  const machineRole = getMachineRole(obj);\n  const { availabilityZone, region } = getMachineAWSPlacement(obj);\n  const { minReadySeconds, progressDeadlineSeconds } = obj.spec;\n  const rollingUpdateStrategy = _.get(obj, 'spec.strategy.rollingUpdate');\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Machine Deployment Details\" />\n        <MachineCounts resourceKind={MachineDeploymentModel} resource={obj} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <dt>Selector</dt>\n              <dd>\n                <Selector\n                  kind={machineReference}\n                  selector={_.get(obj, 'spec.selector')}\n                  namespace={obj.metadata.namespace}\n                />\n              </dd>\n              {machineRole && (\n                <>\n                  <dt>Machine Role</dt>\n                  <dd>{machineRole}</dd>\n                </>\n              )}\n              {region && (\n                <>\n                  <dt>Region</dt>\n                  <dd>{region}</dd>\n                </>\n              )}\n              {availabilityZone && (\n                <>\n                  <dt>Availability Zone</dt>\n                  <dd>{availabilityZone}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Strategy</dt>\n              <dd>{_.get(obj, 'spec.strategy.type') || '-'}</dd>\n              {rollingUpdateStrategy && (\n                <>\n                  <dt>Max Unavailable</dt>\n                  <dd>\n                    {rollingUpdateStrategy.maxUnavailable || 0} of{' '}\n                    {pluralize(obj.spec.replicas, 'machine')}\n                  </dd>\n                  <dt>Max Surge</dt>\n                  <dd>\n                    {rollingUpdateStrategy.maxSurge || 1} greater than{' '}\n                    {pluralize(obj.spec.replicas, 'machine')}\n                  </dd>\n                </>\n              )}\n              <dt>Min Ready Seconds</dt>\n              <dd>{minReadySeconds ? pluralize(minReadySeconds, 'second') : 'Not Configured'}</dd>\n              {progressDeadlineSeconds && <dt>Progress Deadline</dt>}\n              {progressDeadlineSeconds && (\n                <dd>\n                  {/* Convert to ms for formatDuration */ formatDuration(\n                    progressDeadlineSeconds * 1000,\n                  )}\n                </dd>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const MachineDeploymentList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Machine Deployments\"\n    Header={MachineDeploymentTableHeader}\n    Row={MachineDeploymentTableRow}\n    virtualize\n  />\n);\n\nexport const MachineDeploymentPage: React.SFC<MachineDeploymentPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineDeploymentList}\n    kind={machineDeploymentReference}\n    canCreate\n  />\n);\n\nexport const MachineDeploymentDetailsPage: React.SFC<MachineDeploymentDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    kind={machineDeploymentReference}\n    pages={[\n      navFactory.details(MachineDeploymentDetails),\n      navFactory.editYaml(),\n      navFactory.machines(MachineTabPage),\n    ]}\n  />\n);\n\nexport type MachineDeploymentDetailsProps = {\n  obj: MachineDeploymentKind;\n};\n\nexport type MachineDeploymentPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\nexport type MachineDeploymentDetailsPageProps = {\n  match: any;\n};\n"]}]}