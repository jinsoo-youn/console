{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/ResourceDropdownField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/ResourceDropdownField.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useField, useFormikContext } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { Firehose } from '@console/internal/components/utils';\nimport ResourceDropdown from '../dropdown/ResourceDropdown';\nimport { getFieldId } from './field-utils';\nimport { useFormikValidationFix } from '../../hooks';\nconst ResourceDropdownField = (_a) => {\n    var { label, helpText, required, fullWidth, dataSelector, resources, onLoad, resourceFilter } = _a, props = __rest(_a, [\"label\", \"helpText\", \"required\", \"fullWidth\", \"dataSelector\", \"resources\", \"onLoad\", \"resourceFilter\"]);\n    const [field, { touched, error }] = useField(props.name);\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const fieldId = getFieldId(props.name, 'ns-dropdown');\n    const isValid = !(touched && error);\n    const errorMessage = !isValid ? error : '';\n    useFormikValidationFix(field.value);\n    return (React.createElement(FormGroup, { fieldId: fieldId, label: label, helperText: helpText, helperTextInvalid: errorMessage, isValid: isValid, isRequired: required },\n        React.createElement(Firehose, { resources: resources },\n            React.createElement(ResourceDropdown, Object.assign({}, props, { id: fieldId, dataSelector: dataSelector, selectedKey: field.value, dropDownClassName: cx({ 'dropdown--full-width': fullWidth }), onLoad: onLoad, resourceFilter: resourceFilter, onChange: (value, name) => {\n                    props.onChange && props.onChange(value, name);\n                    setFieldValue(props.name, value);\n                    setFieldTouched(props.name, true);\n                } })))));\n};\nexport default ResourceDropdownField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/ResourceDropdownField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/ResourceDropdownField.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,YAAY,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEnD,OAAO,EAAE,QAAQ,EAAoB,MAAM,oCAAoC,CAAC;AAChF,OAAO,gBAA2C,MAAM,8BAA8B,CAAC;AAEvF,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAkBrD,MAAM,qBAAqB,GAAyC,CAAC,EAUpE,EAAE,EAAE;QAVgE,EACnE,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,SAAS,EACT,MAAM,EACN,cAAc,OAEf,EADC,2HAAQ;IAER,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzD,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IAC5E,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAE3C,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEpC,OAAO,CACL,oBAAC,SAAS,IACR,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,QAAQ,EACpB,iBAAiB,EAAE,YAAY,EAC/B,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,QAAQ;QAEpB,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;YAC5B,oBAAC,gBAAgB,oBACX,KAAK,IACT,EAAE,EAAE,OAAO,EACX,YAAY,EAAE,YAAY,EAC1B,WAAW,EAAE,KAAK,CAAC,KAAK,EACxB,iBAAiB,EAAE,EAAE,CAAC,EAAE,sBAAsB,EAAE,SAAS,EAAE,CAAC,EAC5D,MAAM,EAAE,MAAM,EACd,cAAc,EAAE,cAAc,EAC9B,QAAQ,EAAE,CAAC,KAAa,EAAE,IAAI,EAAE,EAAE;oBAChC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBAC9C,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBACjC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACpC,CAAC,IACD,CACO,CACD,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport cx from 'classnames';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { FormGroup } from '@patternfly/react-core';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Firehose, FirehoseResource } from '@console/internal/components/utils';\nimport ResourceDropdown, { ResourceDropdownItems } from '../dropdown/ResourceDropdown';\nimport { DropdownFieldProps } from './field-types';\nimport { getFieldId } from './field-utils';\nimport { useFormikValidationFix } from '../../hooks';\n\nexport interface ResourceDropdownFieldProps extends DropdownFieldProps {\n  dataSelector: string[] | number[] | symbol[];\n  resources: FirehoseResource[];\n  showBadge?: boolean;\n  onLoad?: (items: ResourceDropdownItems) => void;\n  onChange?: (key: string, name?: string | object) => void;\n  resourceFilter?: (resource: K8sResourceKind) => boolean;\n  autoSelect?: boolean;\n  placeholder?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  appendItems?: ResourceDropdownItems;\n}\n\nconst ResourceDropdownField: React.FC<ResourceDropdownFieldProps> = ({\n  label,\n  helpText,\n  required,\n  fullWidth,\n  dataSelector,\n  resources,\n  onLoad,\n  resourceFilter,\n  ...props\n}) => {\n  const [field, { touched, error }] = useField(props.name);\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const fieldId = getFieldId(props.name, 'ns-dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(field.value);\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={label}\n      helperText={helpText}\n      helperTextInvalid={errorMessage}\n      isValid={isValid}\n      isRequired={required}\n    >\n      <Firehose resources={resources}>\n        <ResourceDropdown\n          {...props}\n          id={fieldId}\n          dataSelector={dataSelector}\n          selectedKey={field.value}\n          dropDownClassName={cx({ 'dropdown--full-width': fullWidth })}\n          onLoad={onLoad}\n          resourceFilter={resourceFilter}\n          onChange={(value: string, name) => {\n            props.onChange && props.onChange(value, name);\n            setFieldValue(props.name, value);\n            setFieldTouched(props.name, true);\n          }}\n        />\n      </Firehose>\n    </FormGroup>\n  );\n};\n\nexport default ResourceDropdownField;\n"]}]}