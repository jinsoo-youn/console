{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/pod/PodRingSet.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/pod/PodRingSet.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Split, SplitItem, Bullseye } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\nconst PodRingSet = ({ podData, resourceKind, obj, path }) => {\n    const { inProgressDeploymentData, completedDeploymentData } = getPodData(obj, podData.pods, podData.current, podData.previous, podData.isRollingOut);\n    const current = podData.current && podData.current.obj;\n    const previous = podData.previous && podData.previous.obj;\n    const progressRC = inProgressDeploymentData && current;\n    const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n    return (React.createElement(Split, { gutter: \"lg\" },\n        React.createElement(SplitItem, null,\n            React.createElement(PodRing, { key: inProgressDeploymentData ? 'deploy' : 'notDeploy', pods: completedDeploymentData, rc: completedRC, resourceKind: resourceKind, obj: obj, path: path, enableScaling: !podData.isRollingOut })),\n        inProgressDeploymentData && (React.createElement(React.Fragment, null,\n            React.createElement(SplitItem, null,\n                React.createElement(Bullseye, null,\n                    React.createElement(LongArrowAltRightIcon, { size: \"xl\", color: color200.value }))),\n            React.createElement(SplitItem, null,\n                React.createElement(PodRing, { pods: inProgressDeploymentData, rc: progressRC, resourceKind: resourceKind, obj: obj, path: path, enableScaling: false }))))));\n};\nexport default PodRingSet;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/pod/PodRingSet.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/pod/PodRingSet.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,gBAAgB,IAAI,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAExE,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AACzC,OAAO,OAAO,MAAM,WAAW,CAAC;AAUhC,MAAM,UAAU,GAA8B,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE;IACrF,MAAM,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,GAAG,UAAU,CACtE,GAAG,EACH,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,YAAY,CACrB,CAAC;IACF,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;IACvD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC1D,MAAM,UAAU,GAAG,wBAAwB,IAAI,OAAO,CAAC;IACvD,MAAM,WAAW,GAAG,CAAC,CAAC,wBAAwB,IAAI,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;IAC/F,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAC,IAAI;QAChB,oBAAC,SAAS;YACR,oBAAC,OAAO,IACN,GAAG,EAAE,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EACtD,IAAI,EAAE,uBAAuB,EAC7B,EAAE,EAAE,WAAW,EACf,YAAY,EAAE,YAAY,EAC1B,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,aAAa,EAAE,CAAC,OAAO,CAAC,YAAY,GACpC,CACQ;QACX,wBAAwB,IAAI,CAC3B;YACE,oBAAC,SAAS;gBACR,oBAAC,QAAQ;oBACP,oBAAC,qBAAqB,IAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,GAAI,CACjD,CACD;YACZ,oBAAC,SAAS;gBACR,oBAAC,OAAO,IACN,IAAI,EAAE,wBAAwB,EAC9B,EAAE,EAAE,UAAU,EACd,YAAY,EAAE,YAAY,EAC1B,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,aAAa,EAAE,KAAK,GACpB,CACQ,CACX,CACJ,CACK,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import * as React from 'react';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { Split, SplitItem, Bullseye } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens';\nimport { PodRCData } from '../../types';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  podData: PodRCData;\n  obj: K8sResourceKind;\n  resourceKind: K8sKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ podData, resourceKind, obj, path }) => {\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(\n    obj,\n    podData.pods,\n    podData.current,\n    podData.previous,\n    podData.isRollingOut,\n  );\n  const current = podData.current && podData.current.obj;\n  const previous = podData.previous && podData.previous.obj;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n  return (\n    <Split gutter=\"lg\">\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={completedRC}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <LongArrowAltRightIcon size=\"xl\" color={color200.value} />\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  );\n};\n\nexport default PodRingSet;\n"]}]}