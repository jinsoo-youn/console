{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-community-provider-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-community-provider-modal.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { RH_OPERATOR_SUPPORT_POLICY_LINK } from '@console/shared';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory/modal';\nimport { ExternalLink } from '@console/internal/components/utils';\nexport class OperatorHubCommunityProviderModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onIgnoreChange = (checked) => {\n            this.setState({ ignoreWarnings: checked });\n        };\n        this.submit = (event) => {\n            event.preventDefault();\n            this.props.showCommunityOperators(this.state.ignoreWarnings);\n            this.props.close();\n        };\n        this.state = {\n            ignoreWarnings: false,\n        };\n    }\n    render() {\n        const { ignoreWarnings } = this.state;\n        const submitButtonContent = React.createElement(React.Fragment, null, \"Continue\");\n        return (React.createElement(\"form\", { onSubmit: this.submit, className: \"modal-content co-modal-ignore-warning\" },\n            React.createElement(ModalTitle, null, \"Show Community Operator\"),\n            React.createElement(ModalBody, null,\n                React.createElement(\"div\", { className: \"co-modal-ignore-warning__content\" },\n                    React.createElement(\"div\", { className: \"co-modal-ignore-warning__icon\" },\n                        React.createElement(InfoCircleIcon, null)),\n                    React.createElement(\"div\", null,\n                        React.createElement(\"p\", null,\n                            \"Community Operators are operators which have not been vetted or verified by Red Hat. Community Operators should be used with caution because their stability is unknown. Red Hat provides no support for Community Operators.\",\n                            RH_OPERATOR_SUPPORT_POLICY_LINK && (React.createElement(\"span\", { className: \"co-modal-ignore-warning__link\" },\n                                React.createElement(ExternalLink, { href: RH_OPERATOR_SUPPORT_POLICY_LINK, text: \"Learn more about Red Hat\\u2019s third party software support policy\" })))),\n                        React.createElement(Checkbox, { className: \"co-modal-ignore-warning__checkbox\", onChange: this.onIgnoreChange, isChecked: ignoreWarnings, id: \"do-not-show-warning\", label: \"Do not show this warning again\" })))),\n            React.createElement(ModalSubmitFooter, { submitText: submitButtonContent, inProgress: false, errorMessage: \"\", cancel: this.props.close })));\n    }\n}\nexport const communityOperatorWarningModal = createModalLauncher(OperatorHubCommunityProviderModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-community-provider-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-community-provider-modal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,+BAA+B,EAAE,MAAM,iBAAiB,CAAC;AAClE,OAAO,EACL,mBAAmB,EACnB,UAAU,EACV,SAAS,EACT,iBAAiB,GAClB,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAElE,MAAM,OAAO,iCAAkC,SAAQ,KAAK,CAAC,SAG5D;IACC,YAAY,KAAK;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QAMf,mBAAc,GAAG,CAAC,OAAO,EAAE,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,KAAK,EAAE,EAAE;YACjB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC;QAbA,IAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,KAAK;SACtB,CAAC;IACJ,CAAC;IAYD,MAAM;QACJ,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,MAAM,mBAAmB,GAAG,qDAAa,CAAC;QAC1C,OAAO,CACL,8BAAM,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAC,uCAAuC;YAC5E,oBAAC,UAAU,kCAAqC;YAChD,oBAAC,SAAS;gBACR,6BAAK,SAAS,EAAC,kCAAkC;oBAC/C,6BAAK,SAAS,EAAC,+BAA+B;wBAC5C,oBAAC,cAAc,OAAG,CACd;oBACN;wBACE;;4BAIG,+BAA+B,IAAI,CAClC,8BAAM,SAAS,EAAC,+BAA+B;gCAC7C,oBAAC,YAAY,IACX,IAAI,EAAE,+BAA+B,EACrC,IAAI,EAAC,qEAAgE,GACrE,CACG,CACR,CACC;wBACJ,oBAAC,QAAQ,IACP,SAAS,EAAC,mCAAmC,EAC7C,QAAQ,EAAE,IAAI,CAAC,cAAc,EAC7B,SAAS,EAAE,cAAc,EACzB,EAAE,EAAC,qBAAqB,EACxB,KAAK,EAAC,gCAAgC,GACtC,CACE,CACF,CACI;YACZ,oBAAC,iBAAiB,IAChB,UAAU,EAAE,mBAAmB,EAC/B,UAAU,EAAE,KAAK,EACjB,YAAY,EAAC,EAAE,EACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GACxB,CACG,CACR,CAAC;IACJ,CAAC;CACF;AAWD,MAAM,CAAC,MAAM,6BAA6B,GAAG,mBAAmB,CAAC,iCAAiC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { RH_OPERATOR_SUPPORT_POLICY_LINK } from '@console/shared';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { ExternalLink } from '@console/internal/components/utils';\n\nexport class OperatorHubCommunityProviderModal extends React.Component<\n  OperatorHubCommunityProviderModalProps,\n  OperatorHubCommunityProviderModalState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ignoreWarnings: false,\n    };\n  }\n\n  onIgnoreChange = (checked) => {\n    this.setState({ ignoreWarnings: checked });\n  };\n\n  submit = (event) => {\n    event.preventDefault();\n    this.props.showCommunityOperators(this.state.ignoreWarnings);\n    this.props.close();\n  };\n\n  render() {\n    const { ignoreWarnings } = this.state;\n    const submitButtonContent = <>Continue</>;\n    return (\n      <form onSubmit={this.submit} className=\"modal-content co-modal-ignore-warning\">\n        <ModalTitle>Show Community Operator</ModalTitle>\n        <ModalBody>\n          <div className=\"co-modal-ignore-warning__content\">\n            <div className=\"co-modal-ignore-warning__icon\">\n              <InfoCircleIcon />\n            </div>\n            <div>\n              <p>\n                Community Operators are operators which have not been vetted or verified by Red Hat.\n                Community Operators should be used with caution because their stability is unknown.\n                Red Hat provides no support for Community Operators.\n                {RH_OPERATOR_SUPPORT_POLICY_LINK && (\n                  <span className=\"co-modal-ignore-warning__link\">\n                    <ExternalLink\n                      href={RH_OPERATOR_SUPPORT_POLICY_LINK}\n                      text=\"Learn more about Red Hatâ€™s third party software support policy\"\n                    />\n                  </span>\n                )}\n              </p>\n              <Checkbox\n                className=\"co-modal-ignore-warning__checkbox\"\n                onChange={this.onIgnoreChange}\n                isChecked={ignoreWarnings}\n                id=\"do-not-show-warning\"\n                label=\"Do not show this warning again\"\n              />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalSubmitFooter\n          submitText={submitButtonContent}\n          inProgress={false}\n          errorMessage=\"\"\n          cancel={this.props.close}\n        />\n      </form>\n    );\n  }\n}\n\nexport type OperatorHubCommunityProviderModalProps = {\n  showCommunityOperators: (ignoreWarnings: boolean) => void;\n  close: () => void;\n};\n\nexport type OperatorHubCommunityProviderModalState = {\n  ignoreWarnings: boolean;\n};\n\nexport const communityOperatorWarningModal = createModalLauncher(OperatorHubCommunityProviderModal);\n"]}]}