{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/EventsCard.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/EventsCard.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceLink, resourcePathFromModel, } from '@console/internal/components/utils';\nimport { EventModel, MachineModel, NodeModel } from '@console/internal/models';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport ActivityBody, { RecentEventsBody, Activity, } from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport ActivityItem from '@console/shared/src/components/dashboard/activity-card/ActivityItem';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { getName, getNamespace, getMachineNodeName } from '@console/shared';\nimport { BareMetalHostModel } from '../../../models';\nimport { isHostInProgressState, getBareMetalHostStatus } from '../../../status/host-status';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\nconst eventsResource = { isList: true, kind: EventModel.kind, prop: 'events' };\nconst matchesInvolvedObject = (kind, name, namespace, event) => name &&\n    _.isMatch(event.involvedObject, {\n        kind,\n        name,\n        namespace,\n    });\nconst hostEventsFilter = (host, machine, event) => matchesInvolvedObject(BareMetalHostModel.kind, getName(host), getNamespace(host), event) ||\n    matchesInvolvedObject(MachineModel.kind, getName(machine), getNamespace(machine), event) ||\n    matchesInvolvedObject(NodeModel.kind, getMachineNodeName(machine), null, event);\nconst getHostEventsFilter = (host, machine) => _.partial(hostEventsFilter, host, machine);\nconst EventsCard = ({ watchK8sResource, stopWatchK8sResource, resources, }) => {\n    const { obj, machine } = React.useContext(BareMetalHostDashboardContext);\n    React.useEffect(() => {\n        watchK8sResource(eventsResource);\n        return () => {\n            stopWatchK8sResource(eventsResource);\n        };\n    }, [watchK8sResource, stopWatchK8sResource]);\n    const filter = getHostEventsFilter(obj, machine);\n    const inProgress = isHostInProgressState(obj);\n    const hostStatus = getBareMetalHostStatus(obj);\n    return (React.createElement(DashboardCard, { gradient: true },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Activity\"),\n            React.createElement(DashboardCardLink, { to: `${resourcePathFromModel(BareMetalHostModel, getName(obj), getNamespace(obj))}/events` }, \"View events\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(ActivityBody, null,\n                React.createElement(\"div\", { className: \"co-activity-card__ongoing-title\" }, \"Ongoing\"),\n                React.createElement(\"div\", { className: \"co-activity-card__ongoing-body\" }, inProgress ? (React.createElement(Activity, { timestamp: null },\n                    React.createElement(ActivityItem, null,\n                        hostStatus.title,\n                        React.createElement(ResourceLink, { kind: BareMetalHostModel.kind, name: getName(obj), namespace: getNamespace(obj) })))) : (React.createElement(Activity, null,\n                    React.createElement(\"div\", { className: \"text-secondary\" }, \"There are no ongoing activities.\")))),\n                React.createElement(RecentEventsBody, { events: resources.events, filter: filter })))));\n};\nexport default withDashboardResources(EventsCard);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/EventsCard.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/dashboard/EventsCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n  FirehoseResource,\n  FirehoseResult,\n  ResourceLink,\n  resourcePathFromModel,\n} from '@console/internal/components/utils';\nimport { EventModel, MachineModel, NodeModel } from '@console/internal/models';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardLink from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardLink';\nimport ActivityBody, {\n  RecentEventsBody,\n  Activity,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport ActivityItem from '@console/shared/src/components/dashboard/activity-card/ActivityItem';\nimport { EventKind, K8sResourceKind, MachineKind } from '@console/internal/module/k8s';\nimport {\n  DashboardItemProps,\n  withDashboardResources,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { getName, getNamespace, getMachineNodeName } from '@console/shared';\nimport { BareMetalHostModel } from '../../../models';\nimport { BareMetalHostKind } from '../../../types';\nimport { isHostInProgressState, getBareMetalHostStatus } from '../../../status/host-status';\nimport { BareMetalHostDashboardContext } from './BareMetalHostDashboardContext';\n\nconst eventsResource: FirehoseResource = { isList: true, kind: EventModel.kind, prop: 'events' };\n\nconst matchesInvolvedObject = (\n  kind: string,\n  name: string,\n  namespace: string,\n  event: EventKind,\n): boolean =>\n  name &&\n  _.isMatch(event.involvedObject, {\n    kind,\n    name,\n    namespace,\n  });\n\nconst hostEventsFilter = (\n  host: BareMetalHostKind,\n  machine: MachineKind,\n  event: EventKind,\n): boolean =>\n  matchesInvolvedObject(BareMetalHostModel.kind, getName(host), getNamespace(host), event) ||\n  matchesInvolvedObject(MachineModel.kind, getName(machine), getNamespace(machine), event) ||\n  matchesInvolvedObject(NodeModel.kind, getMachineNodeName(machine), null, event);\n\nconst getHostEventsFilter = (\n  host: K8sResourceKind,\n  machine: MachineKind,\n): ((event: EventKind) => boolean) => _.partial(hostEventsFilter, host, machine);\n\nconst EventsCard: React.FC<EventsCardProps> = ({\n  watchK8sResource,\n  stopWatchK8sResource,\n  resources,\n}) => {\n  const { obj, machine } = React.useContext(BareMetalHostDashboardContext);\n  React.useEffect(() => {\n    watchK8sResource(eventsResource);\n    return () => {\n      stopWatchK8sResource(eventsResource);\n    };\n  }, [watchK8sResource, stopWatchK8sResource]);\n\n  const filter = getHostEventsFilter(obj, machine);\n\n  const inProgress = isHostInProgressState(obj);\n  const hostStatus = getBareMetalHostStatus(obj);\n\n  return (\n    <DashboardCard gradient>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Activity</DashboardCardTitle>\n        <DashboardCardLink\n          to={`${resourcePathFromModel(\n            BareMetalHostModel,\n            getName(obj),\n            getNamespace(obj),\n          )}/events`}\n        >\n          View events\n        </DashboardCardLink>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <ActivityBody>\n          <div className=\"co-activity-card__ongoing-title\">Ongoing</div>\n          <div className=\"co-activity-card__ongoing-body\">\n            {inProgress ? (\n              <Activity timestamp={null}>\n                <ActivityItem>\n                  {hostStatus.title}\n                  <ResourceLink\n                    kind={BareMetalHostModel.kind}\n                    name={getName(obj)}\n                    namespace={getNamespace(obj)}\n                  />\n                </ActivityItem>\n              </Activity>\n            ) : (\n              <Activity>\n                <div className=\"text-secondary\">There are no ongoing activities.</div>\n              </Activity>\n            )}\n          </div>\n          <RecentEventsBody\n            events={resources.events as FirehoseResult<EventKind[]>}\n            filter={filter}\n          />\n        </ActivityBody>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default withDashboardResources(EventsCard);\n\ntype EventsCardProps = DashboardItemProps & {\n  obj: BareMetalHostKind;\n};\n"]}]}