{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/crd/create-pinned-resource.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/crd/create-pinned-resource.tsx","mtime":1617606093180},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { modelFor, kindForReference, definitionFor, referenceForModel } from '@console/internal/module/k8s';\nimport { CustomResourceDefinitionModel, SecretModel, TemplateModel, ClusterTemplateModel } from '@console/internal/models';\n// import { Firehose } from '@console/internal/components/utils/firehose';\nimport { StatusBox, BreadCrumbs, resourcePathFromModel } from '@console/internal/components/utils';\nimport { SyncedEditor } from '@console/shared/src/components/synced-editor';\nimport { getActivePerspective } from '@console/internal/reducers/ui';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { connect } from 'react-redux';\nimport { exampleForModel } from '.';\nimport { Helmet } from 'react-helmet';\nimport { OperandForm } from '@console/operator-lifecycle-manager/src/components/operand/operand-form';\nimport { OperandYAML } from '@console/operator-lifecycle-manager/src/components/operand/operand-yaml';\nimport { FORM_HELP_TEXT, YAML_HELP_TEXT, DEFAULT_K8S_SCHEMA } from '@console/operator-lifecycle-manager/src/components/operand/const';\nimport { prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { pluralToKind } from '../form';\nimport { kindToSchemaPath } from '@console/internal/module/hypercloud/k8s/kind-to-schema-path';\nimport { getAccessToken } from '../../../hypercloud/auth';\nimport { getK8sAPIPath } from '@console/internal/module/k8s/resource.js';\n// import { safeDump } from 'js-yaml';\n// eslint-disable-next-line @typescript-eslint/camelcase\n// MEMO : YAML Editor만 제공돼야 되는 리소스 kind\nconst OnlyYamlEditorKinds = [SecretModel.kind, TemplateModel.kind, ClusterTemplateModel.kind];\nexport const CreateDefault = ({ customResourceDefinition, initialEditorType, loadError, match, model, activePerspective }) => {\n    if (!model) {\n        return null;\n    }\n    if (OnlyYamlEditorKinds.includes(model.kind)) {\n        const next = `${resourcePathFromModel(model, match.params.appName, match.params.ns)}`;\n        let definition;\n        if (customResourceDefinition) {\n            definition = customResourceDefinition.data;\n        }\n        const sample = React.useMemo(() => exampleForModel(definition, model), [definition, model]);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-create-operand__header\" },\n                React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" },\n                    React.createElement(BreadCrumbs, { breadcrumbs: [{ name: `Create ${model.label}`, path: window.location.pathname }] })),\n                React.createElement(\"h1\", { className: \"co-create-operand__header-text\" }, `Create ${model.label}`)),\n            React.createElement(SyncedEditor, { context: {\n                    formContext: {},\n                    yamlContext: { next, match },\n                }, initialData: sample, initialType: EditorType.YAML, FormEditor: null, YAMLEditor: OperandYAML, supplyEditorToggle: false })));\n    }\n    else {\n        const [loaded, setLoaded] = React.useState(false);\n        const [template, setTemplate] = React.useState({});\n        // const [yaml, setYaml] = React.useState('');\n        // React.useEffect(() => {\n        //   (async function getSchema() {\n        //     await k8sCreateSchema(model.kind).then(data => setTemplate(data));\n        //   })();\n        // }, []);\n        React.useEffect(() => {\n            var _a, _b;\n            console.log('model: ', model);\n            let type = pluralToKind.get(model.plural)['type'];\n            let url;\n            if (type === 'CustomResourceDefinition') {\n                url = getK8sAPIPath({ apiGroup: CustomResourceDefinitionModel.apiGroup, apiVersion: CustomResourceDefinitionModel.apiVersion });\n                url = `${document.location.origin}${url}/customresourcedefinitions/${model.plural}.${model.apiGroup}`;\n            }\n            else {\n                const directory = (_a = kindToSchemaPath.get(model.kind)) === null || _a === void 0 ? void 0 : _a['directory'];\n                const file = (_b = kindToSchemaPath.get(model.kind)) === null || _b === void 0 ? void 0 : _b['file'];\n                url = `${document.location.origin}/api/resource/${directory}/${file}`;\n            }\n            const xhrTest = new XMLHttpRequest();\n            xhrTest.open('GET', url);\n            xhrTest.setRequestHeader('Authorization', `Bearer ${getAccessToken()}`);\n            xhrTest.onreadystatechange = function () {\n                if (xhrTest.readyState == XMLHttpRequest.DONE && xhrTest.status == 200) {\n                    let template = xhrTest.response;\n                    template = JSON.parse(template);\n                    setTemplate(template);\n                    setLoaded(true);\n                }\n            };\n            xhrTest.send();\n        }, []);\n        const [helpText, setHelpText] = React.useState(FORM_HELP_TEXT);\n        const next = `${resourcePathFromModel(model, match.params.appName, match.params.ns)}`;\n        let definition;\n        if (customResourceDefinition) {\n            definition = customResourceDefinition.data;\n        }\n        const [schema, FormComponent] = React.useMemo(() => {\n            var _a, _b, _c, _d, _e, _f;\n            const baseSchema = customResourceDefinition ? (_c = (_b = (_a = definition === null || definition === void 0 ? void 0 : definition.spec) === null || _a === void 0 ? void 0 : _a.validation) === null || _b === void 0 ? void 0 : _b.openAPIV3Schema) !== null && _c !== void 0 ? _c : definitionFor(model) : (_f = (_e = (_d = template === null || template === void 0 ? void 0 : template.spec) === null || _d === void 0 ? void 0 : _d.validation) === null || _e === void 0 ? void 0 : _e.openAPIV3Schema) !== null && _f !== void 0 ? _f : template;\n            return [_.defaultsDeep({}, DEFAULT_K8S_SCHEMA, _.omit(baseSchema, 'properties.status')), OperandForm];\n        }, [template, definition, model]);\n        const sample = React.useMemo(() => exampleForModel(definition, model), [definition, model]);\n        const pruneFunc = React.useCallback(data => prune(data, sample), [sample]);\n        const onChangeEditorType = React.useCallback(newMethod => {\n            setHelpText(newMethod === EditorType.Form ? FORM_HELP_TEXT : YAML_HELP_TEXT);\n        }, []);\n        return (React.createElement(StatusBox, { loaded: loaded, loadError: loadError, data: customResourceDefinition || template }, loaded || !customResourceDefinition ? (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"co-create-operand__header\" },\n                React.createElement(\"div\", { className: \"co-create-operand__header-buttons\" },\n                    React.createElement(BreadCrumbs, { breadcrumbs: [{ name: `Create ${model.label}`, path: window.location.pathname }] })),\n                React.createElement(\"h1\", { className: \"co-create-operand__header-text\" }, `Create ${model.label}`),\n                React.createElement(\"p\", { className: \"help-block\" }, helpText)),\n            React.createElement(SyncedEditor, { context: {\n                    formContext: { match, model, next, schema },\n                    yamlContext: { next, match },\n                }, FormEditor: FormComponent, initialData: sample, initialType: initialEditorType, onChangeEditorType: onChangeEditorType, prune: pruneFunc, YAMLEditor: OperandYAML }))) : null));\n    }\n};\nconst stateToProps = (state, props) => {\n    let plural;\n    let model;\n    if (modelFor(pluralToKind.get(props.match.params.plural)['kind'])) {\n        model = modelFor(pluralToKind.get(props.match.params.plural)['kind']);\n        plural = referenceForModel(model);\n    }\n    return { model: state.k8s.getIn(['RESOURCES', 'models', plural]) || state.k8s.getIn(['RESOURCES', 'models', model.kind]), activePerspective: getActivePerspective(state) };\n};\nexport const CreateDefaultPage = connect(stateToProps)((props) => {\n    // const type = pluralToKind.get(props.match.params.plural)['type'];\n    // const resources =\n    //   type === 'CustomResourceDefinition' && props.model\n    //     ? [\n    //         {\n    //           kind: CustomResourceDefinitionModel.kind,\n    //           isList: false,\n    //           name: nameForModel(props.model),\n    //           prop: 'customResourceDefinition',\n    //           optional: true,\n    //         },\n    //       ]\n    //     : [];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Helmet, null,\n            React.createElement(\"title\", null, `Create ${kindForReference(props.match.params.plural)}`)),\n        React.createElement(CreateDefault, Object.assign({}, props, { model: props.model, match: props.match, initialEditorType: EditorType.Form }))));\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/crd/create-pinned-resource.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/crd/create-pinned-resource.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { JSONSchema6 } from 'json-schema';\nimport { K8sKind, modelFor, K8sResourceKind, K8sResourceKindReference, kindForReference, CustomResourceDefinitionKind, definitionFor, referenceForModel } from '@console/internal/module/k8s';\nimport { CustomResourceDefinitionModel, SecretModel, TemplateModel, ClusterTemplateModel } from '@console/internal/models';\n// import { Firehose } from '@console/internal/components/utils/firehose';\nimport { StatusBox, FirehoseResult, BreadCrumbs, resourcePathFromModel } from '@console/internal/components/utils';\nimport { RootState } from '@console/internal/redux';\nimport { SyncedEditor } from '@console/shared/src/components/synced-editor';\nimport { getActivePerspective } from '@console/internal/reducers/ui';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { connect } from 'react-redux';\nimport { exampleForModel } from '.';\nimport { Helmet } from 'react-helmet';\nimport { match as RouterMatch } from 'react-router';\nimport { OperandForm } from '@console/operator-lifecycle-manager/src/components/operand/operand-form';\nimport { OperandYAML } from '@console/operator-lifecycle-manager/src/components/operand/operand-yaml';\nimport { FORM_HELP_TEXT, YAML_HELP_TEXT, DEFAULT_K8S_SCHEMA } from '@console/operator-lifecycle-manager/src/components/operand/const';\nimport { prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { pluralToKind } from '../form';\nimport { kindToSchemaPath } from '@console/internal/module/hypercloud/k8s/kind-to-schema-path';\nimport { getAccessToken } from '../../../hypercloud/auth';\nimport { getK8sAPIPath } from '@console/internal/module/k8s/resource.js';\n// import { safeDump } from 'js-yaml';\n// eslint-disable-next-line @typescript-eslint/camelcase\n\n// MEMO : YAML Editor만 제공돼야 되는 리소스 kind\nconst OnlyYamlEditorKinds = [SecretModel.kind, TemplateModel.kind, ClusterTemplateModel.kind];\n\nexport const CreateDefault: React.FC<CreateDefaultProps> = ({ customResourceDefinition, initialEditorType, loadError, match, model, activePerspective }) => {\n  if (!model) {\n    return null;\n  }\n\n  if (OnlyYamlEditorKinds.includes(model.kind)) {\n    const next = `${resourcePathFromModel(model, match.params.appName, match.params.ns)}`;\n    let definition;\n\n    if (customResourceDefinition) {\n      definition = customResourceDefinition.data;\n    }\n\n    const sample = React.useMemo<K8sResourceKind>(() => exampleForModel(definition, model), [definition, model]);\n\n    return (\n      <>\n        <div className=\"co-create-operand__header\">\n          <div className=\"co-create-operand__header-buttons\">\n            <BreadCrumbs breadcrumbs={[{ name: `Create ${model.label}`, path: window.location.pathname }]} />\n          </div>\n          <h1 className=\"co-create-operand__header-text\">{`Create ${model.label}`}</h1>\n        </div>\n        <SyncedEditor\n          context={{\n            formContext: {},\n            yamlContext: { next, match },\n          }}\n          initialData={sample}\n          initialType={EditorType.YAML}\n          FormEditor={null}\n          YAMLEditor={OperandYAML}\n          supplyEditorToggle={false}\n        />\n      </>\n    );\n  } else {\n    const [loaded, setLoaded] = React.useState(false);\n    const [template, setTemplate] = React.useState({} as any);\n    // const [yaml, setYaml] = React.useState('');\n    // React.useEffect(() => {\n    //   (async function getSchema() {\n    //     await k8sCreateSchema(model.kind).then(data => setTemplate(data));\n    //   })();\n    // }, []);\n\n    React.useEffect(() => {\n      console.log('model: ', model);\n      let type = pluralToKind.get(model.plural)['type'];\n      let url;\n      if (type === 'CustomResourceDefinition') {\n        url = getK8sAPIPath({ apiGroup: CustomResourceDefinitionModel.apiGroup, apiVersion: CustomResourceDefinitionModel.apiVersion });\n        url = `${document.location.origin}${url}/customresourcedefinitions/${model.plural}.${model.apiGroup}`;\n      } else {\n        const directory = kindToSchemaPath.get(model.kind)?.['directory'];\n        const file = kindToSchemaPath.get(model.kind)?.['file'];\n        url = `${document.location.origin}/api/resource/${directory}/${file}`;\n      }\n      const xhrTest = new XMLHttpRequest();\n      xhrTest.open('GET', url);\n      xhrTest.setRequestHeader('Authorization', `Bearer ${getAccessToken()}`);\n      xhrTest.onreadystatechange = function() {\n        if (xhrTest.readyState == XMLHttpRequest.DONE && xhrTest.status == 200) {\n          let template = xhrTest.response;\n          template = JSON.parse(template);\n          setTemplate(template);\n          setLoaded(true);\n        }\n      };\n      xhrTest.send();\n    }, []);\n\n    const [helpText, setHelpText] = React.useState(FORM_HELP_TEXT);\n    const next = `${resourcePathFromModel(model, match.params.appName, match.params.ns)}`;\n    let definition;\n\n    if (customResourceDefinition) {\n      definition = customResourceDefinition.data;\n    }\n\n    const [schema, FormComponent] = React.useMemo(() => {\n      const baseSchema = customResourceDefinition ? definition?.spec?.validation?.openAPIV3Schema ?? (definitionFor(model) as JSONSchema6) : template?.spec?.validation?.openAPIV3Schema ?? template;\n      return [_.defaultsDeep({}, DEFAULT_K8S_SCHEMA, _.omit(baseSchema, 'properties.status')), OperandForm];\n    }, [template, definition, model]);\n\n    const sample = React.useMemo<K8sResourceKind>(() => exampleForModel(definition, model), [definition, model]);\n\n    const pruneFunc = React.useCallback(data => prune(data, sample), [sample]);\n\n    const onChangeEditorType = React.useCallback(newMethod => {\n      setHelpText(newMethod === EditorType.Form ? FORM_HELP_TEXT : YAML_HELP_TEXT);\n    }, []);\n\n    return (\n      <StatusBox loaded={loaded} loadError={loadError} data={customResourceDefinition || template}>\n        {loaded || !customResourceDefinition ? (\n          <>\n            <div className=\"co-create-operand__header\">\n              <div className=\"co-create-operand__header-buttons\">\n                <BreadCrumbs breadcrumbs={[{ name: `Create ${model.label}`, path: window.location.pathname }]} />\n              </div>\n              <h1 className=\"co-create-operand__header-text\">{`Create ${model.label}`}</h1>\n              <p className=\"help-block\">{helpText}</p>\n            </div>\n            <SyncedEditor\n              context={{\n                formContext: { match, model, next, schema },\n                yamlContext: { next, match },\n              }}\n              FormEditor={FormComponent}\n              initialData={sample}\n              initialType={initialEditorType}\n              onChangeEditorType={onChangeEditorType}\n              prune={pruneFunc}\n              YAMLEditor={OperandYAML}\n            />\n          </>\n        ) : null}\n      </StatusBox>\n    );\n  }\n};\n\nconst stateToProps = (state: RootState, props: Omit<CreateDefaultPageProps, 'model'>) => {\n  let plural;\n  let model;\n  if (modelFor(pluralToKind.get(props.match.params.plural)['kind'])) {\n    model = modelFor(pluralToKind.get(props.match.params.plural)['kind']);\n    plural = referenceForModel(model);\n  }\n  return { model: state.k8s.getIn(['RESOURCES', 'models', plural]) || (state.k8s.getIn(['RESOURCES', 'models', model.kind]) as K8sKind), activePerspective: getActivePerspective(state) };\n};\n\nexport const CreateDefaultPage = connect(stateToProps)((props: CreateDefaultPageProps) => {\n  // const type = pluralToKind.get(props.match.params.plural)['type'];\n  // const resources =\n  //   type === 'CustomResourceDefinition' && props.model\n  //     ? [\n  //         {\n  //           kind: CustomResourceDefinitionModel.kind,\n  //           isList: false,\n  //           name: nameForModel(props.model),\n  //           prop: 'customResourceDefinition',\n  //           optional: true,\n  //         },\n  //       ]\n  //     : [];\n  return (\n    <>\n      <Helmet>\n        <title>{`Create ${kindForReference(props.match.params.plural)}`}</title>\n      </Helmet>\n      {/* <Firehose resources={resources}> */}\n      {/* FIXME(alecmerdler): Hack because `Firehose` injects props without TypeScript knowing about it */}\n      <CreateDefault {...(props as any)} model={props.model} match={props.match} initialEditorType={EditorType.Form} />\n      {/* </Firehose> */}\n    </>\n  );\n});\n\nexport type CreateDefaultProps = {\n  activePerspective: string;\n  customResourceDefinition?: FirehoseResult<CustomResourceDefinitionKind>;\n  initialEditorType: EditorType;\n  loaded: boolean;\n  loadError?: any;\n  match: RouterMatch<{ appName: string; ns: string; plural: K8sResourceKindReference }>;\n  model: K8sKind;\n};\n\nexport type CreateDefaultPageProps = {\n  match: RouterMatch<{ appName: string; ns: string; plural: K8sResourceKindReference }>;\n  model: K8sKind;\n};\n"]}]}