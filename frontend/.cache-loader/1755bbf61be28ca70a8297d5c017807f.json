{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/dashboard/MonitoringDashboardGraph.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/dashboard/MonitoringDashboardGraph.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport { QueryBrowser } from '@console/internal/components/monitoring/query-browser';\nimport { PrometheusGraphLink } from '@console/internal/components/graphs/prometheus-graph';\nimport { queryBrowserPatchQuery } from '@console/internal/actions/ui';\nimport './MonitoringDashboardGraph.scss';\nexport var GraphTypes;\n(function (GraphTypes) {\n    GraphTypes[\"area\"] = \"Area\";\n    GraphTypes[\"line\"] = \"Line\";\n})(GraphTypes || (GraphTypes = {}));\nconst DEFAULT_TIME_SPAN = 30 * 60 * 1000;\nconst DEFAULT_SAMPLES = 30;\nexport const MonitoringDashboardGraph = ({ query, namespace, title, patchQuery, graphType = GraphTypes.area, timespan, pollInterval, }) => {\n    return (React.createElement(DashboardCard, { className: \"odc-monitoring-dashboard-graph\" },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, title)),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(PrometheusGraphLink, { query: query },\n                React.createElement(\"div\", { onMouseEnter: () => patchQuery({ query }) },\n                    React.createElement(QueryBrowser, { hideControls: true, defaultTimespan: DEFAULT_TIME_SPAN, defaultSamples: DEFAULT_SAMPLES, namespace: namespace, queries: [query], isStack: graphType === GraphTypes.area, timespan: timespan, pollInterval: pollInterval }))))));\n};\nconst mapDispatchToProps = (dispatch) => ({\n    patchQuery: (v) => dispatch(queryBrowserPatchQuery(0, v)),\n});\nexport default connect(null, mapDispatchToProps)(MonitoringDashboardGraph);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/dashboard/MonitoringDashboardGraph.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/dashboard/MonitoringDashboardGraph.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,aAAa,MAAM,uEAAuE,CAAC;AAClG,OAAO,mBAAmB,MAAM,6EAA6E,CAAC;AAC9G,OAAO,kBAAkB,MAAM,4EAA4E,CAAC;AAC5G,OAAO,iBAAiB,MAAM,2EAA2E,CAAC;AAC1G,OAAO,EAAE,YAAY,EAAY,MAAM,uDAAuD,CAAC;AAG/F,OAAO,EAAE,mBAAmB,EAAE,MAAM,sDAAsD,CAAC;AAC3F,OAAO,EAAE,sBAAsB,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,iCAAiC,CAAC;AAEzC,MAAM,CAAN,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,2BAAa,CAAA;IACb,2BAAa,CAAA;AACf,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;AAmBD,MAAM,iBAAiB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AACzC,MAAM,eAAe,GAAG,EAAE,CAAC;AAE3B,MAAM,CAAC,MAAM,wBAAwB,GAA4C,CAAC,EAChF,KAAK,EACL,SAAS,EACT,KAAK,EACL,UAAU,EACV,SAAS,GAAG,UAAU,CAAC,IAAI,EAC3B,QAAQ,EACR,YAAY,GACb,EAAE,EAAE;IACH,OAAO,CACL,oBAAC,aAAa,IAAC,SAAS,EAAC,gCAAgC;QACvD,oBAAC,mBAAmB;YAClB,oBAAC,kBAAkB,QAAE,KAAK,CAAsB,CAC5B;QACtB,oBAAC,iBAAiB;YAChB,oBAAC,mBAAmB,IAAC,KAAK,EAAE,KAAK;gBAC/B,6BAAK,YAAY,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC;oBAC5C,oBAAC,YAAY,IACX,YAAY,QACZ,eAAe,EAAE,iBAAiB,EAClC,cAAc,EAAE,eAAe,EAC/B,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,CAAC,KAAK,CAAC,EAChB,OAAO,EAAE,SAAS,KAAK,UAAU,CAAC,IAAI,EACtC,QAAQ,EAAE,QAAQ,EAClB,YAAY,EAAE,YAAY,GAC1B,CACE,CACc,CACJ,CACN,CACjB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,QAAQ,EAAiB,EAAE,CAAC,CAAC;IACvD,UAAU,EAAE,CAAC,CAAW,EAAE,EAAE,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACpE,CAAC,CAAC;AAEH,eAAe,OAAO,CACpB,IAAI,EACJ,kBAAkB,CACnB,CAAC,wBAAwB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport { QueryBrowser, QueryObj } from '@console/internal/components/monitoring/query-browser';\nimport { Humanize } from '@console/internal/components/utils';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport { PrometheusGraphLink } from '@console/internal/components/graphs/prometheus-graph';\nimport { queryBrowserPatchQuery } from '@console/internal/actions/ui';\nimport './MonitoringDashboardGraph.scss';\n\nexport enum GraphTypes {\n  area = 'Area',\n  line = 'Line',\n}\n\ntype DispatchProps = {\n  patchQuery: (patch: QueryObj) => void;\n};\n\ntype OwnProps = {\n  title: string;\n  query: string;\n  namespace: string;\n  graphType?: GraphTypes;\n  humanize: Humanize;\n  byteDataType: ByteDataTypes;\n  timespan?: number;\n  pollInterval?: number;\n};\n\ntype MonitoringDashboardGraphProps = OwnProps & DispatchProps;\n\nconst DEFAULT_TIME_SPAN = 30 * 60 * 1000;\nconst DEFAULT_SAMPLES = 30;\n\nexport const MonitoringDashboardGraph: React.FC<MonitoringDashboardGraphProps> = ({\n  query,\n  namespace,\n  title,\n  patchQuery,\n  graphType = GraphTypes.area,\n  timespan,\n  pollInterval,\n}) => {\n  return (\n    <DashboardCard className=\"odc-monitoring-dashboard-graph\">\n      <DashboardCardHeader>\n        <DashboardCardTitle>{title}</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <PrometheusGraphLink query={query}>\n          <div onMouseEnter={() => patchQuery({ query })}>\n            <QueryBrowser\n              hideControls\n              defaultTimespan={DEFAULT_TIME_SPAN}\n              defaultSamples={DEFAULT_SAMPLES}\n              namespace={namespace}\n              queries={[query]}\n              isStack={graphType === GraphTypes.area}\n              timespan={timespan}\n              pollInterval={pollInterval}\n            />\n          </div>\n        </PrometheusGraphLink>\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nconst mapDispatchToProps = (dispatch): DispatchProps => ({\n  patchQuery: (v: QueryObj) => dispatch(queryBrowserPatchQuery(0, v)),\n});\n\nexport default connect<{}, DispatchProps, OwnProps>(\n  null,\n  mapDispatchToProps,\n)(MonitoringDashboardGraph);\n"]}]}