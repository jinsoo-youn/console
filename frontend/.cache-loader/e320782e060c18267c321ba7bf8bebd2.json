{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/delete-vm-like-entity-modal/delete-vm-like-entity-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/delete-vm-like-entity-modal/delete-vm-like-entity-modal.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { history, withHandlePromise } from '@console/internal/components/utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src/components/status/icons';\nimport { getName, getNamespace } from '@console/shared/src/selectors/common';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter, } from '@console/internal/components/factory';\nimport { apiVersionForModel } from '@console/internal/module/k8s';\nimport { asVM, getVMLikeModel, getVolumes } from '../../../selectors/vm';\nimport { useOwnedVolumeReferencedResources } from '../../../hooks/use-owned-volume-referenced-resources';\nimport { isTemplate, isVM } from '../../../selectors/check-type';\nimport { useVirtualMachineImport } from '../../../hooks/use-virtual-machine-import';\nimport { useUpToDateVMLikeEntity } from '../../../hooks/use-vm-like-entity';\nimport { VirtualMachineImportModel } from '../../../models';\nimport { deleteVM } from '../../../k8s/requests/vm';\nimport { deleteVMTemplate } from '../../../k8s/requests/vmtemplate/actions';\nconst redirectFn = (vmLikeEntity) => {\n    // If we are currently on the deleted resource's page, redirect to the resource list page\n    const re = new RegExp(`/${getName(vmLikeEntity)}(/|$)`);\n    if (re.test(window.location.pathname)) {\n        history.push(`/k8s/ns/${getNamespace(vmLikeEntity)}/virtualization${isTemplate(vmLikeEntity) ? '/templates' : ''}`);\n    }\n};\nexport const DeleteVMLikeEntityModal = withHandlePromise((props) => {\n    const { inProgress, errorMessage, handlePromise, close, cancel } = props;\n    const vmLikeEntity = useUpToDateVMLikeEntity(props.vmLikeEntity);\n    const [deleteDisks, setDeleteDisks] = React.useState(true);\n    const [deleteVMImport, setDeleteVMImport] = React.useState(true);\n    const entityModel = getVMLikeModel(vmLikeEntity);\n    const namespace = getNamespace(vmLikeEntity);\n    const vmLikeReference = {\n        name: getName(vmLikeEntity),\n        kind: entityModel.kind,\n        apiVersion: apiVersionForModel(entityModel),\n    };\n    const [vmImport, vmImportLoaded] = useVirtualMachineImport(isVM(vmLikeEntity) ? vmLikeEntity : null);\n    const [ownedVolumeResources, isOwnedVolumeResourcesLoaded] = useOwnedVolumeReferencedResources(vmLikeReference, namespace, getVolumes(asVM(vmLikeEntity), null));\n    const isInProgress = inProgress || !vmImportLoaded || !isOwnedVolumeResourcesLoaded;\n    const numOfAllResources = _.sum([ownedVolumeResources.length, vmImport ? 1 : 0]);\n    const submit = (e) => {\n        e.preventDefault();\n        let promise;\n        if (isVM(vmLikeEntity)) {\n            promise = deleteVM(vmLikeEntity, {\n                vmImport,\n                deleteVMImport,\n                ownedVolumeResources,\n                deleteOwnedVolumeResources: deleteDisks,\n            });\n        }\n        else if (isTemplate(vmLikeEntity)) {\n            promise = deleteVMTemplate(vmLikeEntity, {\n                ownedVolumeResources,\n                deleteOwnedVolumeResources: deleteDisks,\n            });\n        }\n        return handlePromise(promise)\n            .then(close)\n            .then(() => redirectFn(vmLikeEntity));\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, className: \"modal-content\" },\n        React.createElement(ModalTitle, null,\n            React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r\" }),\n            \" Delete\",\n            ' ',\n            isTemplate(vmLikeEntity) ? 'Virtual Machine Template' : entityModel.label,\n            \"?\"),\n        React.createElement(ModalBody, null,\n            \"Are you sure you want to delete\",\n            ' ',\n            React.createElement(\"strong\", { className: \"co-break-word\" }, getName(vmLikeEntity)),\n            \" in namespace\",\n            ' ',\n            React.createElement(\"strong\", null, getNamespace(vmLikeEntity)),\n            \" ?\",\n            numOfAllResources > 0 && (React.createElement(\"p\", null, \"The following resources will be deleted along with this virtual machine. Unchecked items will not be deleted.\")),\n            ownedVolumeResources.length > 0 && (React.createElement(\"div\", { className: \"checkbox\" },\n                React.createElement(\"label\", { className: \"control-label\" },\n                    React.createElement(\"input\", { type: \"checkbox\", onChange: () => setDeleteDisks(!deleteDisks), checked: deleteDisks }),\n                    \"Delete Disks (\",\n                    ownedVolumeResources.length,\n                    \"x)\"))),\n            vmImport && (React.createElement(\"div\", { className: \"checkbox\" },\n                React.createElement(\"label\", { className: \"control-label\" },\n                    React.createElement(\"input\", { type: \"checkbox\", onChange: () => setDeleteVMImport(!deleteVMImport), checked: deleteVMImport }),\n                    \"Delete \",\n                    VirtualMachineImportModel.label,\n                    \" Resource\")))),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, submitDisabled: isInProgress, inProgress: isInProgress, submitText: \"Delete\", submitDanger: true, cancel: cancel })));\n});\nexport const deleteVMLikeEntityModal = createModalLauncher(DeleteVMLikeEntityModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/delete-vm-like-entity-modal/delete-vm-like-entity-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/delete-vm-like-entity-modal/delete-vm-like-entity-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { HandlePromiseProps, history, withHandlePromise } from '@console/internal/components/utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src/components/status/icons';\nimport { getName, getNamespace } from '@console/shared/src/selectors/common';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalComponentProps,\n} from '@console/internal/components/factory';\nimport { apiVersionForModel } from '@console/internal/module/k8s';\nimport { VMLikeEntityKind } from '../../../types/vmLike';\nimport { asVM, getVMLikeModel, getVolumes } from '../../../selectors/vm';\nimport { useOwnedVolumeReferencedResources } from '../../../hooks/use-owned-volume-referenced-resources';\nimport { isTemplate, isVM } from '../../../selectors/check-type';\nimport { useVirtualMachineImport } from '../../../hooks/use-virtual-machine-import';\nimport { useUpToDateVMLikeEntity } from '../../../hooks/use-vm-like-entity';\nimport { VirtualMachineImportModel } from '../../../models';\nimport { deleteVM } from '../../../k8s/requests/vm';\nimport { deleteVMTemplate } from '../../../k8s/requests/vmtemplate/actions';\n\nconst redirectFn = (vmLikeEntity: VMLikeEntityKind) => {\n  // If we are currently on the deleted resource's page, redirect to the resource list page\n  const re = new RegExp(`/${getName(vmLikeEntity)}(/|$)`);\n  if (re.test(window.location.pathname)) {\n    history.push(\n      `/k8s/ns/${getNamespace(vmLikeEntity)}/virtualization${\n        isTemplate(vmLikeEntity) ? '/templates' : ''\n      }`,\n    );\n  }\n};\n\nexport const DeleteVMLikeEntityModal = withHandlePromise((props: DeleteVMLikeEntityModalProps) => {\n  const { inProgress, errorMessage, handlePromise, close, cancel } = props;\n  const vmLikeEntity = useUpToDateVMLikeEntity(props.vmLikeEntity);\n  const [deleteDisks, setDeleteDisks] = React.useState<boolean>(true);\n  const [deleteVMImport, setDeleteVMImport] = React.useState<boolean>(true);\n\n  const entityModel = getVMLikeModel(vmLikeEntity);\n  const namespace = getNamespace(vmLikeEntity);\n\n  const vmLikeReference = {\n    name: getName(vmLikeEntity),\n    kind: entityModel.kind,\n    apiVersion: apiVersionForModel(entityModel),\n  } as any;\n\n  const [vmImport, vmImportLoaded] = useVirtualMachineImport(\n    isVM(vmLikeEntity) ? vmLikeEntity : null,\n  );\n  const [ownedVolumeResources, isOwnedVolumeResourcesLoaded] = useOwnedVolumeReferencedResources(\n    vmLikeReference,\n    namespace,\n    getVolumes(asVM(vmLikeEntity), null),\n  );\n  const isInProgress = inProgress || !vmImportLoaded || !isOwnedVolumeResourcesLoaded;\n  const numOfAllResources = _.sum([ownedVolumeResources.length, vmImport ? 1 : 0]);\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    let promise;\n\n    if (isVM(vmLikeEntity)) {\n      promise = deleteVM(vmLikeEntity, {\n        vmImport,\n        deleteVMImport,\n        ownedVolumeResources,\n        deleteOwnedVolumeResources: deleteDisks,\n      });\n    } else if (isTemplate(vmLikeEntity)) {\n      promise = deleteVMTemplate(vmLikeEntity, {\n        ownedVolumeResources,\n        deleteOwnedVolumeResources: deleteDisks,\n      });\n    }\n\n    return handlePromise(promise)\n      .then(close)\n      .then(() => redirectFn(vmLikeEntity));\n  };\n\n  return (\n    <form onSubmit={submit} className=\"modal-content\">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" /> Delete{' '}\n        {isTemplate(vmLikeEntity) ? 'Virtual Machine Template' : entityModel.label}?\n      </ModalTitle>\n      <ModalBody>\n        Are you sure you want to delete{' '}\n        <strong className=\"co-break-word\">{getName(vmLikeEntity)}</strong> in namespace{' '}\n        <strong>{getNamespace(vmLikeEntity)}</strong> ?\n        {numOfAllResources > 0 && (\n          <p>\n            The following resources will be deleted along with this virtual machine. Unchecked items\n            will not be deleted.\n          </p>\n        )}\n        {ownedVolumeResources.length > 0 && (\n          <div className=\"checkbox\">\n            <label className=\"control-label\">\n              <input\n                type=\"checkbox\"\n                onChange={() => setDeleteDisks(!deleteDisks)}\n                checked={deleteDisks}\n              />\n              Delete Disks ({ownedVolumeResources.length}x)\n            </label>\n          </div>\n        )}\n        {vmImport && (\n          <div className=\"checkbox\">\n            <label className=\"control-label\">\n              <input\n                type=\"checkbox\"\n                onChange={() => setDeleteVMImport(!deleteVMImport)}\n                checked={deleteVMImport}\n              />\n              Delete {VirtualMachineImportModel.label} Resource\n            </label>\n          </div>\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        submitDisabled={isInProgress}\n        inProgress={isInProgress}\n        submitText=\"Delete\"\n        submitDanger\n        cancel={cancel}\n      />\n    </form>\n  );\n});\n\nexport type DeleteVMLikeEntityModalProps = {\n  vmLikeEntity: VMLikeEntityKind;\n} & ModalComponentProps &\n  HandlePromiseProps;\n\nexport const deleteVMLikeEntityModal = createModalLauncher(DeleteVMLikeEntityModal);\n"]}]}