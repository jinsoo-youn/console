{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/owner-references.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/owner-references.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { referenceForOwnerRef } from '../../module/k8s';\nimport { ResourceLink } from './resource-link';\nexport const OwnerReferences = ({ resource }) => {\n    const owners = (_.get(resource.metadata, 'ownerReferences') || []).map((o) => (React.createElement(ResourceLink, { key: o.uid, kind: referenceForOwnerRef(o), name: o.name, namespace: resource.metadata.namespace })));\n    return owners.length ? React.createElement(React.Fragment, null, owners) : React.createElement(\"span\", { className: \"text-muted\" }, \"No owner\");\n};\nOwnerReferences.displayName = 'OwnerReferences';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/owner-references.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/owner-references.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAmC,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACzF,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,MAAM,CAAC,MAAM,eAAe,GAAmC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC9E,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,CAC5F,oBAAC,YAAY,IACX,GAAG,EAAE,CAAC,CAAC,GAAG,EACV,IAAI,EAAE,oBAAoB,CAAC,CAAC,CAAC,EAC7B,IAAI,EAAE,CAAC,CAAC,IAAI,EACZ,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS,GACtC,CACH,CAAC,CAAC;IACH,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,0CAAG,MAAM,CAAI,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAC,YAAY,eAAgB,CAAC;AACtF,CAAC,CAAC;AAMF,eAAe,CAAC,WAAW,GAAG,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { K8sResourceKind, OwnerReference, referenceForOwnerRef } from '../../module/k8s';\nimport { ResourceLink } from './resource-link';\n\nexport const OwnerReferences: React.FC<OwnerReferencesProps> = ({ resource }) => {\n  const owners = (_.get(resource.metadata, 'ownerReferences') || []).map((o: OwnerReference) => (\n    <ResourceLink\n      key={o.uid}\n      kind={referenceForOwnerRef(o)}\n      name={o.name}\n      namespace={resource.metadata.namespace}\n    />\n  ));\n  return owners.length ? <>{owners}</> : <span className=\"text-muted\">No owner</span>;\n};\n\ntype OwnerReferencesProps = {\n  resource: K8sResourceKind;\n};\n\nOwnerReferences.displayName = 'OwnerReferences';\n"]}]}