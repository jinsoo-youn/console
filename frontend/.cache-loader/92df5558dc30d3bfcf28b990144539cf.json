{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/router.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/router.ts","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport { createBrowserHistory, createMemoryHistory } from 'history';\nlet createHistory;\ntry {\n    if (process.env.NODE_ENV === 'test') {\n        // Running in node. Can't use browser history\n        createHistory = createMemoryHistory;\n    }\n    else {\n        createHistory = createBrowserHistory;\n    }\n}\ncatch (unused) {\n    createHistory = createBrowserHistory;\n}\nexport const history = createHistory({ basename: window.SERVER_FLAGS.basePath });\nconst removeBasePath = (url = '/') => _.startsWith(url, window.SERVER_FLAGS.basePath)\n    ? url.slice(window.SERVER_FLAGS.basePath.length - 1)\n    : url;\n// Monkey patch history to slice off the base path\nhistory.__replace__ = history.replace;\nhistory.replace = (url) => history.__replace__(removeBasePath(url));\nhistory.__push__ = history.push;\nhistory.push = (url) => history.__push__(removeBasePath(url));\nhistory.pushPath = (path) => history.__push__(path);\nexport const getQueryArgument = (arg) => new URLSearchParams(window.location.search).get(arg);\nexport const setQueryArgument = (k, v) => {\n    const params = new URLSearchParams(window.location.search);\n    params.set(k, v);\n    const url = new URL(window.location.href);\n    history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\nexport const setAllQueryArguments = (newParams) => {\n    const params = new URLSearchParams();\n    _.each(newParams, (v, k) => params.set(k, v));\n    const url = new URL(window.location.href);\n    history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\nexport const removeQueryArgument = (k) => {\n    const params = new URLSearchParams(window.location.search);\n    params.delete(k);\n    const url = new URL(window.location.href);\n    history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/router.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/router.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport { createBrowserHistory, createMemoryHistory, History } from 'history';\n\ntype AppHistory = History & { pushPath: History['push'] };\n\nlet createHistory;\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    // Running in node. Can't use browser history\n    createHistory = createMemoryHistory;\n  } else {\n    createHistory = createBrowserHistory;\n  }\n} catch (unused) {\n  createHistory = createBrowserHistory;\n}\n\nexport const history: AppHistory = createHistory({ basename: window.SERVER_FLAGS.basePath });\n\nconst removeBasePath = (url = '/') =>\n  _.startsWith(url, window.SERVER_FLAGS.basePath)\n    ? url.slice(window.SERVER_FLAGS.basePath.length - 1)\n    : url;\n\n// Monkey patch history to slice off the base path\n(history as any).__replace__ = history.replace;\nhistory.replace = (url) => (history as any).__replace__(removeBasePath(url));\n\n(history as any).__push__ = history.push;\nhistory.push = (url) => (history as any).__push__(removeBasePath(url));\n(history as any).pushPath = (path) => (history as any).__push__(path);\n\nexport const getQueryArgument = (arg: string) =>\n  new URLSearchParams(window.location.search).get(arg);\n\nexport const setQueryArgument = (k: string, v: string) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(k, v);\n  const url = new URL(window.location.href);\n  history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\n\nexport const setAllQueryArguments = (newParams: { [k: string]: string }) => {\n  const params = new URLSearchParams();\n  _.each(newParams, (v, k) => params.set(k, v));\n  const url = new URL(window.location.href);\n  history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\n\nexport const removeQueryArgument = (k: string) => {\n  const params = new URLSearchParams(window.location.search);\n  params.delete(k);\n  const url = new URL(window.location.href);\n  history.replace(`${url.pathname}?${params.toString()}${url.hash}`);\n};\n"]}]}