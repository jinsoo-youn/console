{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/application-panel/TopologyApplicationResources.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/application-panel/TopologyApplicationResources.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { getTopologyResourceObject } from '../topology-utils';\nimport ApplicationGroupResource from './ApplicationGroupResource';\nimport './TopologyApplicationResources.scss';\nconst TopologyApplicationResources = ({ resources, group, }) => {\n    const resourcesData = resources.reduce((acc, currVal) => {\n        const resource = getTopologyResourceObject(currVal);\n        acc[resource.kind] = [...(acc[resource.kind] ? acc[resource.kind] : []), resource];\n        return acc;\n    }, {});\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"ul\", { className: classNames('co-m-horizontal-nav__menu', 'co-m-horizontal-nav__menu--within-sidebar', 'co-m-horizontal-nav__menu--within-overview-sidebar', 'odc-application-resource-tab') },\n            React.createElement(\"li\", { className: \"co-m-horizontal-nav__menu-item\" },\n                React.createElement(\"button\", { type: \"button\" }, \"Resources\"))),\n        _.map(_.keys(resourcesData), (key) => (React.createElement(ApplicationGroupResource, { key: `${group}-${key}`, title: modelFor(key) ? modelFor(key).label : key, resourcesData: resourcesData[key], group: group })))));\n};\nexport default TopologyApplicationResources;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/application-panel/TopologyApplicationResources.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/application-panel/TopologyApplicationResources.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAExD,OAAO,EAAE,yBAAyB,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,OAAO,qCAAqC,CAAC;AAO7C,MAAM,4BAA4B,GAAgD,CAAC,EACjF,SAAS,EACT,KAAK,GACN,EAAE,EAAE;IACH,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QACtD,MAAM,QAAQ,GAAG,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACpD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QACnF,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL;QACE,4BACE,SAAS,EAAE,UAAU,CACnB,2BAA2B,EAC3B,2CAA2C,EAC3C,oDAAoD,EACpD,8BAA8B,CAC/B;YAED,4BAAI,SAAS,EAAC,gCAAgC;gBAC5C,gCAAQ,IAAI,EAAC,QAAQ,gBAAmB,CACrC,CACF;QACJ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CACrC,oBAAC,wBAAwB,IACvB,GAAG,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,EACtB,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAChD,aAAa,EAAE,aAAa,CAAC,GAAG,CAAC,EACjC,KAAK,EAAE,KAAK,GACZ,CACH,CAAC,CACD,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,4BAA4B,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { TopologyDataObject } from '../topology-types';\nimport { getTopologyResourceObject } from '../topology-utils';\nimport ApplicationGroupResource from './ApplicationGroupResource';\n\nimport './TopologyApplicationResources.scss';\n\nexport type TopologyApplicationResourcesProps = {\n  resources: TopologyDataObject[];\n  group: string;\n};\n\nconst TopologyApplicationResources: React.FC<TopologyApplicationResourcesProps> = ({\n  resources,\n  group,\n}) => {\n  const resourcesData = resources.reduce((acc, currVal) => {\n    const resource = getTopologyResourceObject(currVal);\n    acc[resource.kind] = [...(acc[resource.kind] ? acc[resource.kind] : []), resource];\n    return acc;\n  }, {});\n\n  return (\n    <>\n      <ul\n        className={classNames(\n          'co-m-horizontal-nav__menu',\n          'co-m-horizontal-nav__menu--within-sidebar',\n          'co-m-horizontal-nav__menu--within-overview-sidebar',\n          'odc-application-resource-tab',\n        )}\n      >\n        <li className=\"co-m-horizontal-nav__menu-item\">\n          <button type=\"button\">Resources</button>\n        </li>\n      </ul>\n      {_.map(_.keys(resourcesData), (key) => (\n        <ApplicationGroupResource\n          key={`${group}-${key}`}\n          title={modelFor(key) ? modelFor(key).label : key}\n          resourcesData={resourcesData[key]}\n          group={group}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default TopologyApplicationResources;\n"]}]}