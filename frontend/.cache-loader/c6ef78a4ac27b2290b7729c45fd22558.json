{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/radio.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/radio.tsx","mtime":1617758738850},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useFormContext } from 'react-hook-form';\nexport const RadioInput = props => {\n    const { register } = props.methods ? props.methods : useFormContext();\n    const inputProps = _.omit(props, ['title', 'subTitle', 'desc', 'children', 'inline']);\n    const inputElement = (React.createElement(React.Fragment, null,\n        React.createElement(\"label\", { className: classNames({ 'radio-inline': props.inline, 'co-disabled': props.disabled }) },\n            React.createElement(\"input\", Object.assign({ type: \"radio\", ref: register, value: props.item }, inputProps)),\n            props.title,\n            \" \",\n            props.subTitle && React.createElement(\"span\", { className: \"co-no-bold\" }, props.subTitle)),\n        props.desc && React.createElement(\"p\", { className: \"co-m-radio-desc text-muted\" }, props.desc),\n        props.children));\n    return props.inline ? inputElement : React.createElement(\"div\", { className: \"radio\" }, inputElement);\n};\nexport const RadioGroup = ({ inline = false, items, id = JSON.stringify(items), name, methods }) => {\n    const radios = items.map(({ desc, title, subTitle, value, disabled }) => React.createElement(RadioInput, { name: name, key: value, desc: desc, title: title, subTitle: subTitle, item: value, disabled: disabled, inline: inline, methods: methods }));\n    return React.createElement(\"div\", { className: classNames('co-radio-group', { 'co-radio-group--inline': inline }) }, radios);\n};\nRadioInput.displayName = 'RadioInput';\nRadioGroup.displayName = 'RadioGroup';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/radio.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/radio.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,MAAM,UAAU,GAA+B,KAAK,CAAC,EAAE;IAC5D,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;IACtE,MAAM,UAAU,GAAmC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;IACtH,MAAM,YAAY,GAAG,CACnB;QACE,+BAAO,SAAS,EAAE,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,CAAC,MAAM,EAAE,aAAa,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC3F,6CAAO,IAAI,EAAC,OAAO,EAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,IAAM,UAAU,EAAI;YACvE,KAAK,CAAC,KAAK;;YAAG,KAAK,CAAC,QAAQ,IAAI,8BAAM,SAAS,EAAC,YAAY,IAAE,KAAK,CAAC,QAAQ,CAAQ,CAC/E;QACP,KAAK,CAAC,IAAI,IAAI,2BAAG,SAAS,EAAC,4BAA4B,IAAE,KAAK,CAAC,IAAI,CAAK;QACxE,KAAK,CAAC,QAAQ,CACd,CACJ,CAAC;IAEF,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAC,OAAO,IAAE,YAAY,CAAO,CAAC;AACnF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAA+B,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;IAC7H,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,oBAAC,UAAU,IAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,GAAI,CAAC,CAAC;IAClO,OAAO,6BAAK,SAAS,EAAE,UAAU,CAAC,gBAAgB,EAAE,EAAE,wBAAwB,EAAE,MAAM,EAAE,CAAC,IAAG,MAAM,CAAO,CAAC;AAC5G,CAAC,CAAC;AAyBF,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC;AACtC,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useFormContext } from 'react-hook-form';\n\nexport const RadioInput: React.SFC<RadioInputProps> = props => {\n  const { register } = props.methods ? props.methods : useFormContext();\n  const inputProps: React.InputHTMLAttributes<any> = _.omit(props, ['title', 'subTitle', 'desc', 'children', 'inline']);\n  const inputElement = (\n    <>\n      <label className={classNames({ 'radio-inline': props.inline, 'co-disabled': props.disabled })}>\n        <input type=\"radio\" ref={register} value={props.item} {...inputProps} />\n        {props.title} {props.subTitle && <span className=\"co-no-bold\">{props.subTitle}</span>}\n      </label>\n      {props.desc && <p className=\"co-m-radio-desc text-muted\">{props.desc}</p>}\n      {props.children}\n    </>\n  );\n\n  return props.inline ? inputElement : <div className=\"radio\">{inputElement}</div>;\n};\n\nexport const RadioGroup: React.SFC<RadioGroupProps> = ({ inline = false, items, id = JSON.stringify(items), name, methods }) => {\n  const radios = items.map(({ desc, title, subTitle, value, disabled }) => <RadioInput name={name} key={value} desc={desc} title={title} subTitle={subTitle} item={value} disabled={disabled} inline={inline} methods={methods} />);\n  return <div className={classNames('co-radio-group', { 'co-radio-group--inline': inline })}>{radios}</div>;\n};\n\nexport type RadioInputProps = {\n  item: string;\n  desc?: string | JSX.Element;\n  subTitle?: string | JSX.Element;\n  disabled?: boolean;\n  methods?: any;\n  inline?: boolean;\n} & React.InputHTMLAttributes<any>;\n\nexport type RadioGroupProps = {\n  name: string;\n  items: ({\n    desc?: string | JSX.Element;\n    title: string | JSX.Element;\n    subTitle?: string | JSX.Element;\n    value: string;\n    disabled?: boolean;\n  } & React.InputHTMLAttributes<any>)[];\n  id?: string;\n  methods?: any;\n  inline?: boolean;\n};\n\nRadioInput.displayName = 'RadioInput';\nRadioGroup.displayName = 'RadioGroup';\n"]}]}