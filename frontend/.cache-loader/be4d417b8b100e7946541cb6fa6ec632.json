{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx","mtime":1616735742390},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport PipelineRunsList from '../../pipelineruns/list-page/PipelineRunList';\nimport { pipelineRunFilterReducer, pipelineRunStatusFilter, } from '../../../utils/pipeline-filter-reducer';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport { PipelineRunModel } from '../../../models';\nexport const runFilters = [\n    {\n        type: 'pipelinerun-status',\n        selected: [\n            ListFilterId.Succeeded,\n            ListFilterId.Running,\n            ListFilterId.Failed,\n            ListFilterId.Cancelled,\n        ],\n        reducer: pipelineRunFilterReducer,\n        items: [\n            { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n            { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n            { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n            { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n        ],\n        filter: pipelineRunStatusFilter,\n    },\n];\nconst PipelineRuns = ({ obj }) => (React.createElement(ListPage, { showTitle: false, canCreate: false, kind: referenceForModel(PipelineRunModel), namespace: obj.metadata.namespace, selector: {\n        'tekton.dev/pipeline': obj.metadata.name,\n    }, ListComponent: PipelineRunsList, rowFilters: runFilters }));\nexport default PipelineRuns;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAC;AAChE,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,gBAAgB,MAAM,8CAA8C,CAAC;AAC5E,OAAO,EACL,wBAAwB,EACxB,uBAAuB,GACxB,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAC/E,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB;QACE,IAAI,EAAE,oBAAoB;QAC1B,QAAQ,EAAE;YACR,YAAY,CAAC,SAAS;YACtB,YAAY,CAAC,OAAO;YACpB,YAAY,CAAC,MAAM;YACnB,YAAY,CAAC,SAAS;SACvB;QACD,OAAO,EAAE,wBAAwB;QACjC,KAAK,EAAE;YACL,EAAE,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;YAC/E,EAAE,EAAE,EAAE,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;YAC3E,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;YACzE,EAAE,EAAE,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;SAChF;QACD,MAAM,EAAE,uBAAuB;KAChC;CACF,CAAC;AAMF,MAAM,YAAY,GAAgC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAC7D,oBAAC,QAAQ,IACP,SAAS,EAAE,KAAK,EAChB,SAAS,EAAE,KAAK,EAChB,IAAI,EAAE,iBAAiB,CAAC,gBAAgB,CAAC,EACzC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,EACjC,QAAQ,EAAE;QACR,qBAAqB,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI;KACzC,EACD,aAAa,EAAE,gBAAgB,EAC/B,UAAU,EAAE,UAAU,GACtB,CACH,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport PipelineRunsList from '../../pipelineruns/list-page/PipelineRunList';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatusFilter,\n} from '../../../utils/pipeline-filter-reducer';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport { PipelineRunModel } from '../../../models';\n\nexport const runFilters = [\n  {\n    type: 'pipelinerun-status',\n    selected: [\n      ListFilterId.Succeeded,\n      ListFilterId.Running,\n      ListFilterId.Failed,\n      ListFilterId.Cancelled,\n    ],\n    reducer: pipelineRunFilterReducer,\n    items: [\n      { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n      { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n      { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n      { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n    ],\n    filter: pipelineRunStatusFilter,\n  },\n];\n\ninterface PipelineRunsProps {\n  obj: any;\n}\n\nconst PipelineRuns: React.FC<PipelineRunsProps> = ({ obj }) => (\n  <ListPage\n    showTitle={false}\n    canCreate={false}\n    kind={referenceForModel(PipelineRunModel)}\n    namespace={obj.metadata.namespace}\n    selector={{\n      'tekton.dev/pipeline': obj.metadata.name,\n    }}\n    ListComponent={PipelineRunsList}\n    rowFilters={runFilters}\n  />\n);\n\nexport default PipelineRuns;\n"]}]}