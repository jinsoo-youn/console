{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/k8s/requests/bare-metal-host.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/k8s/requests/bare-metal-host.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { k8sPatch, k8sCreate, k8sKill, } from '@console/internal/module/k8s';\nimport { MachineModel, MachineSetModel, SecretModel } from '@console/internal/models';\nimport { PatchBuilder } from '@console/shared/src/k8s';\nimport { getAnnotations } from '@console/shared/src';\nimport { BareMetalHostModel } from '../../models';\nimport { DELETE_MACHINE_ANNOTATION } from '../../constants/machine';\nimport { getReplicas } from '../../selectors/machine-set';\nimport { buildBareMetalHostObject, buildBareMetalHostSecret, getSecretName, } from '../objects/bare-metal-host';\nexport const powerOffHost = (host) => k8sPatch(BareMetalHostModel, host, [{ op: 'replace', path: '/spec/online', value: false }]);\nexport const powerOnHost = (host) => k8sPatch(BareMetalHostModel, host, [{ op: 'replace', path: '/spec/online', value: true }]);\nexport const restartHost = (host) => k8sPatch(BareMetalHostModel, host, [\n    {\n        op: 'replace',\n        path: '/metadata/annotations',\n        value: Object.assign(Object.assign({}, host.metadata.annotations), { 'reboot.metal3.io': 'UI' }),\n    },\n]);\nexport const deprovision = (machine, machineSet) => __awaiter(void 0, void 0, void 0, function* () {\n    yield k8sPatch(MachineModel, machine, [\n        new PatchBuilder('/metadata/annotations')\n            .setObjectUpdate(DELETE_MACHINE_ANNOTATION, 'true', getAnnotations(machine))\n            .build(),\n    ]);\n    if (machineSet) {\n        const replicas = getReplicas(machineSet);\n        if (replicas > 0) {\n            try {\n                yield k8sPatch(MachineSetModel, machineSet, [\n                    new PatchBuilder('/spec/replicas').replace(replicas - 1).build(),\n                ]);\n            }\n            catch (ignored) {\n                yield k8sPatch(MachineModel, machine, [\n                    new PatchBuilder('/metadata/annotations')\n                        .setObjectUpdate(DELETE_MACHINE_ANNOTATION, 'false', getAnnotations(machine))\n                        .build(),\n                ]);\n            }\n        }\n    }\n    else {\n        yield k8sKill(MachineModel, machine);\n    }\n});\nexport const createBareMetalHost = ({ name, BMCAddress, bootMACAddress, disableCertificateVerification, description, namespace, password, username, online, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const secret = buildBareMetalHostSecret(name, namespace, username, password);\n    const bareMetalHost = buildBareMetalHostObject(name, namespace, BMCAddress, bootMACAddress, disableCertificateVerification, online, description);\n    yield k8sCreate(SecretModel, secret);\n    yield k8sCreate(BareMetalHostModel, bareMetalHost);\n});\nexport const updateBareMetalHost = (host, secret, { name, BMCAddress, bootMACAddress, disableCertificateVerification, description, namespace, password, username, }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (secret) {\n        const patches = new PatchBuilder('/data').buildAddObjectKeysPatches({ username: btoa(username), password: btoa(password) }, secret.data);\n        if (patches.length > 0) {\n            yield k8sPatch(SecretModel, secret, patches);\n        }\n    }\n    else {\n        yield k8sCreate(SecretModel, buildBareMetalHostSecret(name, namespace, username, password));\n    }\n    const patches = [\n        ...new PatchBuilder('/spec').buildAddObjectKeysPatches({ description, bootMACAddress }, host.spec),\n        ...new PatchBuilder('/spec/bmc').buildAddObjectKeysPatches({ address: BMCAddress, credentialsName: getSecretName(name), disableCertificateVerification }, host.spec.bmc),\n    ];\n    if (patches.length > 0) {\n        yield k8sPatch(BareMetalHostModel, host, patches);\n    }\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/k8s/requests/bare-metal-host.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/k8s/requests/bare-metal-host.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  k8sPatch,\n  k8sCreate,\n  K8sResourceKind,\n  MachineKind,\n  MachineSetKind,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { MachineModel, MachineSetModel, SecretModel } from '@console/internal/models';\nimport { PatchBuilder } from '@console/shared/src/k8s';\nimport { getAnnotations } from '@console/shared/src';\nimport { BareMetalHostModel } from '../../models';\nimport { BareMetalHostKind } from '../../types';\nimport { DELETE_MACHINE_ANNOTATION } from '../../constants/machine';\nimport { getReplicas } from '../../selectors/machine-set';\nimport {\n  buildBareMetalHostObject,\n  buildBareMetalHostSecret,\n  getSecretName,\n} from '../objects/bare-metal-host';\n\nexport const powerOffHost = (host: BareMetalHostKind) =>\n  k8sPatch(BareMetalHostModel, host, [{ op: 'replace', path: '/spec/online', value: false }]);\n\nexport const powerOnHost = (host: BareMetalHostKind) =>\n  k8sPatch(BareMetalHostModel, host, [{ op: 'replace', path: '/spec/online', value: true }]);\n\nexport const restartHost = (host: BareMetalHostKind) =>\n  k8sPatch(BareMetalHostModel, host, [\n    {\n      op: 'replace',\n      path: '/metadata/annotations',\n      value: {\n        ...host.metadata.annotations,\n        'reboot.metal3.io': 'UI', // value is irrelevant\n      },\n    },\n  ]);\n\nexport const deprovision = async (machine: MachineKind, machineSet?: MachineSetKind) => {\n  await k8sPatch(MachineModel, machine, [\n    new PatchBuilder('/metadata/annotations')\n      .setObjectUpdate(DELETE_MACHINE_ANNOTATION, 'true', getAnnotations(machine))\n      .build(),\n  ]);\n\n  if (machineSet) {\n    const replicas = getReplicas(machineSet);\n\n    if (replicas > 0) {\n      try {\n        await k8sPatch(MachineSetModel, machineSet, [\n          new PatchBuilder('/spec/replicas').replace(replicas - 1).build(),\n        ]);\n      } catch (ignored) {\n        await k8sPatch(MachineModel, machine, [\n          new PatchBuilder('/metadata/annotations')\n            .setObjectUpdate(DELETE_MACHINE_ANNOTATION, 'false', getAnnotations(machine))\n            .build(),\n        ]);\n      }\n    }\n  } else {\n    await k8sKill(MachineModel, machine);\n  }\n};\n\nexport type BareMetalHostOpts = {\n  name: string;\n  BMCAddress: string;\n  disableCertificateVerification: boolean;\n  username: string;\n  password: string;\n  bootMACAddress: string;\n  description: string;\n  namespace: string;\n};\n\nexport const createBareMetalHost = async ({\n  name,\n  BMCAddress,\n  bootMACAddress,\n  disableCertificateVerification,\n  description,\n  namespace,\n  password,\n  username,\n  online,\n}: BareMetalHostOpts & { online: boolean }) => {\n  const secret = buildBareMetalHostSecret(name, namespace, username, password);\n  const bareMetalHost = buildBareMetalHostObject(\n    name,\n    namespace,\n    BMCAddress,\n    bootMACAddress,\n    disableCertificateVerification,\n    online,\n    description,\n  );\n  await k8sCreate(SecretModel, secret);\n  await k8sCreate(BareMetalHostModel, bareMetalHost);\n};\n\nexport const updateBareMetalHost = async (\n  host: BareMetalHostKind,\n  secret: K8sResourceKind,\n  {\n    name,\n    BMCAddress,\n    bootMACAddress,\n    disableCertificateVerification,\n    description,\n    namespace,\n    password,\n    username,\n  }: BareMetalHostOpts,\n) => {\n  if (secret) {\n    const patches = new PatchBuilder('/data').buildAddObjectKeysPatches(\n      { username: btoa(username), password: btoa(password) },\n      secret.data,\n    );\n\n    if (patches.length > 0) {\n      await k8sPatch(SecretModel, secret, patches);\n    }\n  } else {\n    await k8sCreate(SecretModel, buildBareMetalHostSecret(name, namespace, username, password));\n  }\n  const patches = [\n    ...new PatchBuilder('/spec').buildAddObjectKeysPatches(\n      { description, bootMACAddress },\n      host.spec,\n    ),\n    ...new PatchBuilder('/spec/bmc').buildAddObjectKeysPatches(\n      { address: BMCAddress, credentialsName: getSecretName(name), disableCertificateVerification },\n      host.spec.bmc,\n    ),\n  ];\n\n  if (patches.length > 0) {\n    await k8sPatch(BareMetalHostModel, host, patches);\n  }\n};\n"]}]}