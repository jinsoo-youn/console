{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-signer-key.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-signer-key.tsx","mtime":1615701814900},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Base64 } from 'js-base64';\nimport { saveAs } from 'file-saver';\nimport { EyeIcon, EyeSlashIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { EmptyBox, SectionHeading } from '../utils';\nimport { useTranslation } from 'react-i18next';\nexport const MaskedData = () => (React.createElement(React.Fragment, null,\n    React.createElement(\"span\", { className: \"sr-only\" }, \"Value hidden\"),\n    React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u2022\\u2022\\u2022\\u2022\\u2022\")));\nconst downloadBinary = (key, value) => {\n    const rawBinary = window.atob(value);\n    const rawBinaryLength = rawBinary.length;\n    const array = new Uint8Array(new ArrayBuffer(rawBinaryLength));\n    for (let i = 0; i < rawBinaryLength; i++) {\n        array[i] = rawBinary.charCodeAt(i);\n    }\n    const blob = new Blob([array], { type: 'data:application/octet-stream;' });\n    saveAs(blob, key);\n};\nexport const ConfigMapBinaryData = ({ data }) => {\n    const dl = [];\n    Object.keys(data || {})\n        .sort()\n        .forEach(k => {\n        const value = data[k];\n        dl.push(React.createElement(\"dt\", { key: `${k}-k` }, k));\n        dl.push(React.createElement(\"dd\", { key: `${k}-v` },\n            React.createElement(Button, { className: \"pf-m-link--align-left\", type: \"button\", onClick: () => downloadBinary(k, value), variant: \"link\" }, \"Save File\")));\n    });\n    return dl.length ? React.createElement(\"dl\", null, dl) : React.createElement(EmptyBox, { label: \"Binary Data\" });\n};\nConfigMapBinaryData.displayName = 'ConfigMapBinaryData';\nexport const ConfigMapData = ({ data, label }) => {\n    const dl = [];\n    Object.keys(data || {})\n        .sort()\n        .forEach(k => {\n        const value = data[k];\n        dl.push(React.createElement(\"dt\", { key: `${k}-k` }, k));\n        dl.push(React.createElement(\"dd\", { key: `${k}-v` },\n            React.createElement(CopyToClipboard, { value: value })));\n    });\n    return dl.length ? React.createElement(\"dl\", null, dl) : React.createElement(EmptyBox, { label: label });\n};\nConfigMapData.displayName = 'ConfigMapData';\nexport const SecretValue = ({ isTable, value, reveal, encoded = true }) => {\n    if (!value) {\n        return React.createElement(\"span\", { className: \"text-muted\" }, \"No value\");\n    }\n    const decodedValue = encoded ? Base64.decode(value) : value;\n    // const decodedValue = value;\n    const visibleValue = reveal ? decodedValue : React.createElement(MaskedData, null);\n    return React.createElement(CopyToClipboard, { value: decodedValue, visibleValue: visibleValue, isTable: isTable });\n};\nSecretValue.displayName = 'SecretValue';\nexport const SecretData = ({ data, title, isTable }) => {\n    const [reveal, setReveal] = React.useState(false);\n    const { t } = useTranslation();\n    const dl = [];\n    Object.keys(data || {})\n        .sort()\n        .forEach(k => {\n        dl.push(React.createElement(\"dt\", { key: `${k}-k` }, `Root ${k.toUpperCase()}`));\n        dl.push(React.createElement(\"dd\", { key: `${k}-v` }, k === 'id' ? React.createElement(SecretValue, { encoded: false, value: data[k], reveal: true, isTable: isTable }) : React.createElement(SecretValue, { value: data[k], reveal: reveal, isTable: isTable })));\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SectionHeading, { text: title }, dl.length ? (React.createElement(Button, { type: \"button\", onClick: () => setReveal(!reveal), variant: \"link\", className: \"pf-m-link--align-right\" }, reveal ? (React.createElement(React.Fragment, null,\n            React.createElement(EyeSlashIcon, { className: \"co-icon-space-r\" }),\n            `${t('COMMON:MSG_DETAILS_TABSIGNERKEY_3')}`)) : (React.createElement(React.Fragment, null,\n            React.createElement(EyeIcon, { className: \"co-icon-space-r\" }),\n            `${t('COMMON:MSG_DETAILS_TABSIGNERKEY_2')}`)))) : null),\n        dl.length ? React.createElement(\"dl\", { className: \"secret-data\" }, dl) : React.createElement(EmptyBox, { label: \"Data\" })));\n};\nSecretData.displayName = 'SecretData';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-signer-key.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-signer-key.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Base64 } from 'js-base64';\nimport { saveAs } from 'file-saver';\nimport { EyeIcon, EyeSlashIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { EmptyBox, SectionHeading } from '../utils';\nimport { useTranslation } from 'react-i18next';\n\nexport const MaskedData: React.FC<{}> = () => (\n  <>\n    <span className=\"sr-only\">Value hidden</span>\n    <span aria-hidden=\"true\">&bull;&bull;&bull;&bull;&bull;</span>\n  </>\n);\n\nconst downloadBinary = (key, value) => {\n  const rawBinary = window.atob(value);\n  const rawBinaryLength = rawBinary.length;\n  const array = new Uint8Array(new ArrayBuffer(rawBinaryLength));\n  for (let i = 0; i < rawBinaryLength; i++) {\n    array[i] = rawBinary.charCodeAt(i);\n  }\n  const blob = new Blob([array], { type: 'data:application/octet-stream;' });\n  saveAs(blob, key);\n};\n\nexport const ConfigMapBinaryData: React.FC<DownloadValueProps> = ({ data }) => {\n  const dl = [];\n  Object.keys(data || {})\n    .sort()\n    .forEach(k => {\n      const value = data[k];\n      dl.push(<dt key={`${k}-k`}>{k}</dt>);\n      dl.push(\n        <dd key={`${k}-v`}>\n          <Button className=\"pf-m-link--align-left\" type=\"button\" onClick={() => downloadBinary(k, value)} variant=\"link\">\n            Save File\n          </Button>\n        </dd>,\n      );\n    });\n  return dl.length ? <dl>{dl}</dl> : <EmptyBox label=\"Binary Data\" />;\n};\nConfigMapBinaryData.displayName = 'ConfigMapBinaryData';\n\nexport const ConfigMapData: React.FC<ConfigMapDataProps> = ({ data, label }) => {\n  const dl = [];\n  Object.keys(data || {})\n    .sort()\n    .forEach(k => {\n      const value = data[k];\n      dl.push(<dt key={`${k}-k`}>{k}</dt>);\n      dl.push(\n        <dd key={`${k}-v`}>\n          <CopyToClipboard value={value} />\n        </dd>,\n      );\n    });\n  return dl.length ? <dl>{dl}</dl> : <EmptyBox label={label} />;\n};\nConfigMapData.displayName = 'ConfigMapData';\n\nexport const SecretValue: React.FC<SecretValueProps> = ({ isTable, value, reveal, encoded = true }) => {\n  if (!value) {\n    return <span className=\"text-muted\">No value</span>;\n  }\n\n  const decodedValue = encoded ? Base64.decode(value) : value;\n  // const decodedValue = value;\n  const visibleValue = reveal ? decodedValue : <MaskedData />;\n  return <CopyToClipboard value={decodedValue} visibleValue={visibleValue} isTable={isTable} />;\n};\nSecretValue.displayName = 'SecretValue';\n\nexport const SecretData: React.FC<SecretDataProps> = ({ data, title, isTable }) => {\n  const [reveal, setReveal] = React.useState(false);\n  const { t } = useTranslation();\n\n  const dl = [];\n  Object.keys(data || {})\n    .sort()\n    .forEach(k => {\n      dl.push(<dt key={`${k}-k`}>{`Root ${k.toUpperCase()}`}</dt>);\n      dl.push(<dd key={`${k}-v`}>{k === 'id' ? <SecretValue encoded={false} value={data[k]} reveal={true} isTable={isTable} /> : <SecretValue value={data[k]} reveal={reveal} isTable={isTable} />}</dd>);\n    });\n\n  return (\n    <>\n      <SectionHeading text={title}>\n        {dl.length ? (\n          <Button type=\"button\" onClick={() => setReveal(!reveal)} variant=\"link\" className=\"pf-m-link--align-right\">\n            {reveal ? (\n              <>\n                <EyeSlashIcon className=\"co-icon-space-r\" />\n                {`${t('COMMON:MSG_DETAILS_TABSIGNERKEY_3')}`}\n              </>\n            ) : (\n              <>\n                <EyeIcon className=\"co-icon-space-r\" />\n                {`${t('COMMON:MSG_DETAILS_TABSIGNERKEY_2')}`}\n              </>\n            )}\n          </Button>\n        ) : null}\n      </SectionHeading>\n      {dl.length ? <dl className=\"secret-data\">{dl}</dl> : <EmptyBox label=\"Data\" />}\n    </>\n  );\n};\nSecretData.displayName = 'SecretData';\n\ntype KeyValueData = {\n  [key: string]: string;\n};\n\ntype ConfigMapDataProps = {\n  data: KeyValueData;\n  label: string;\n};\n\ntype DownloadValueProps = {\n  data: KeyValueData;\n};\n\ntype SecretValueProps = {\n  value: string;\n  encoded?: boolean;\n  reveal: boolean;\n  isTable?: boolean;\n};\n\ntype SecretDataProps = {\n  data: KeyValueData;\n  title?: string;\n  isTable?: boolean;\n};\n"]}]}