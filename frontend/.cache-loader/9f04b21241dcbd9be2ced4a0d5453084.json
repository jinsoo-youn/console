{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/status.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/status.jsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { coFetchJSON } from '../../co-fetch';\nimport { PROMETHEUS_BASE_PATH, PROMETHEUS_TENANCY_BASE_PATH } from '.';\nexport const errorStatus = (err) => {\n    if (_.get(err.response, 'ok') === false) {\n        return {\n            short: '?',\n            status: '',\n            long: err.message,\n        };\n    }\n    // Generic network error handling.\n    return {\n        short: 'ERROR',\n        long: err.message,\n        status: 'ERROR',\n    };\n};\nconst fetchQuery = (q, long, namespace) => {\n    const nsParam = namespace ? `&namespace=${encodeURIComponent(namespace)}` : '';\n    const basePath = namespace ? PROMETHEUS_TENANCY_BASE_PATH : PROMETHEUS_BASE_PATH;\n    return coFetchJSON(`${basePath}/api/v1/query?query=${encodeURIComponent(q)}${nsParam}`)\n        .then((res) => {\n        const short = parseInt(_.get(res, 'data.result[0].value[1]'), 10) || 0;\n        return {\n            short,\n            long,\n            status: short === 0 ? 'OK' : 'WARN',\n        };\n    })\n        .catch(errorStatus);\n};\n/** @augments {React.Component<{fetch?: () => Promise<any>, query?: string, title: string, href?: string, rel?: string, target?: string}}>} */\nexport class Status extends React.Component {\n    constructor(props) {\n        super(props);\n        this.interval = null;\n        this.state = {\n            status: '...',\n        };\n        this.clock = 0;\n    }\n    fetch(props = this.props) {\n        const clock = this.clock;\n        const promise = props.query\n            ? fetchQuery(props.query, props.name, props.namespace)\n            : props.fetch();\n        const ignorePromise = (cb) => (...args) => {\n            if (clock !== this.clock) {\n                return;\n            }\n            cb(...args);\n        };\n        promise\n            .then(ignorePromise(({ short, long, status }) => this.setState({ short, long, status })))\n            .catch(ignorePromise(() => this.setState({ short: 'BAD', long: 'Error', status: 'ERROR' })))\n            .then(ignorePromise(() => (this.interval = setTimeout(() => {\n            if (this.isMounted_) {\n                this.fetch();\n            }\n        }, 30000))));\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (_.isEqual(nextProps, this.props)) {\n            return;\n        }\n        this.clock += 1;\n        // Don't show stale data if we changed the query.\n        this.setState({\n            status: '...',\n            short: undefined,\n            long: undefined,\n        });\n        this.fetch(nextProps);\n    }\n    UNSAFE_componentWillMount() {\n        clearInterval(this.interval);\n        this.fetch();\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    render() {\n        const title = this.props.title;\n        const { short, long, status } = this.state;\n        const shortStatusClassName = classnames('graph-status__short', {\n            'graph-status__short--ok': status === 'OK',\n            'graph-status__short--warn': status === 'WARN',\n            'graph-status__short--error': status === 'ERROR',\n        });\n        const statusElem = (React.createElement(\"div\", { className: \"graph-wrapper graph-wrapper--title-center graph-wrapper--status\" },\n            title && React.createElement(\"h5\", { className: \"graph-title\" }, title),\n            React.createElement(\"div\", { className: \"graph-status\" },\n                React.createElement(\"h1\", { className: shortStatusClassName }, short),\n                React.createElement(\"div\", { className: \"graph-status--long\" }, long))));\n        const linkProps = _.pick(this.props, ['rel', 'target', 'to']);\n        if (_.isEmpty(linkProps)) {\n            return statusElem;\n        }\n        return (React.createElement(Link, Object.assign({}, linkProps, { className: \"graph-status__link\" }), statusElem));\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/status.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/graphs/status.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { coFetchJSON } from '../../co-fetch';\nimport { PROMETHEUS_BASE_PATH, PROMETHEUS_TENANCY_BASE_PATH } from '.';\n\nexport const errorStatus = (err) => {\n  if (_.get(err.response, 'ok') === false) {\n    return {\n      short: '?',\n      status: '', // Gray\n      long: err.message,\n    };\n  }\n  // Generic network error handling.\n  return {\n    short: 'ERROR',\n    long: err.message,\n    status: 'ERROR',\n  };\n};\n\nconst fetchQuery = (q, long, namespace) => {\n  const nsParam = namespace ? `&namespace=${encodeURIComponent(namespace)}` : '';\n  const basePath = namespace ? PROMETHEUS_TENANCY_BASE_PATH : PROMETHEUS_BASE_PATH;\n  return coFetchJSON(`${basePath}/api/v1/query?query=${encodeURIComponent(q)}${nsParam}`)\n    .then((res) => {\n      const short = parseInt(_.get(res, 'data.result[0].value[1]'), 10) || 0;\n      return {\n        short,\n        long,\n        status: short === 0 ? 'OK' : 'WARN',\n      };\n    })\n    .catch(errorStatus);\n};\n\n/** @augments {React.Component<{fetch?: () => Promise<any>, query?: string, title: string, href?: string, rel?: string, target?: string}}>} */\nexport class Status extends React.Component {\n  constructor(props) {\n    super(props);\n    this.interval = null;\n    this.state = {\n      status: '...',\n    };\n    this.clock = 0;\n  }\n\n  fetch(props = this.props) {\n    const clock = this.clock;\n    const promise = props.query\n      ? fetchQuery(props.query, props.name, props.namespace)\n      : props.fetch();\n\n    const ignorePromise = (cb) => (...args) => {\n      if (clock !== this.clock) {\n        return;\n      }\n      cb(...args);\n    };\n    promise\n      .then(ignorePromise(({ short, long, status }) => this.setState({ short, long, status })))\n      .catch(ignorePromise(() => this.setState({ short: 'BAD', long: 'Error', status: 'ERROR' })))\n      .then(\n        ignorePromise(\n          () =>\n            (this.interval = setTimeout(() => {\n              if (this.isMounted_) {\n                this.fetch();\n              }\n            }, 30000)),\n        ),\n      );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (_.isEqual(nextProps, this.props)) {\n      return;\n    }\n    this.clock += 1;\n    // Don't show stale data if we changed the query.\n    this.setState({\n      status: '...',\n      short: undefined,\n      long: undefined,\n    });\n    this.fetch(nextProps);\n  }\n\n  UNSAFE_componentWillMount() {\n    clearInterval(this.interval);\n    this.fetch();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const title = this.props.title;\n    const { short, long, status } = this.state;\n    const shortStatusClassName = classnames('graph-status__short', {\n      'graph-status__short--ok': status === 'OK',\n      'graph-status__short--warn': status === 'WARN',\n      'graph-status__short--error': status === 'ERROR',\n    });\n\n    const statusElem = (\n      <div className=\"graph-wrapper graph-wrapper--title-center graph-wrapper--status\">\n        {title && <h5 className=\"graph-title\">{title}</h5>}\n        <div className=\"graph-status\">\n          <h1 className={shortStatusClassName}>{short}</h1>\n          <div className=\"graph-status--long\">{long}</div>\n        </div>\n      </div>\n    );\n    const linkProps = _.pick(this.props, ['rel', 'target', 'to']);\n    if (_.isEmpty(linkProps)) {\n      return statusElem;\n    }\n    return (\n      <Link {...linkProps} className=\"graph-status__link\">\n        {statusElem}\n      </Link>\n    );\n  }\n}\n"]}]}