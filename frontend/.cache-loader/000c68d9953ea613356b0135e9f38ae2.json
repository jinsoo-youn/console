{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/DefaultCreateConnector.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/DefaultCreateConnector.tsx","mtime":1615298458710},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\nimport ConnectorArrow from './ConnectorArrow';\nimport './DefaultCreateConnector.scss';\nconst cursorSize = 20;\nconst DefaultCreateConnector = ({ startPoint, endPoint, hints, tipContents, className, }) => {\n    const classes = classNames('topology-default-create-connector', className);\n    return (React.createElement(\"g\", { className: classes },\n        React.createElement(\"line\", { className: \"topology-default-create-connector__line\", x1: startPoint.x, y1: startPoint.y, x2: endPoint.x, y2: endPoint.y }),\n        hints && hints[hints.length - 1] === 'create' ? (React.createElement(\"g\", { transform: `translate(${endPoint.x - cursorSize / 2},${endPoint.y - cursorSize / 2})`, className: \"topology-default-create-connector__create\" },\n            React.createElement(\"circle\", { className: \"topology-default-create-connector__create__bg\", cx: cursorSize / 2, cy: cursorSize / 2, r: cursorSize / 2 }),\n            tipContents ? (React.createElement(Tooltip, { content: tipContents, trigger: \"manual\", isVisible: true, tippyProps: { duration: 0, delay: 0 } },\n                React.createElement(AddCircleOIcon, { className: \"topology-default-create-connector__create__cursor\", style: { fontSize: cursorSize } }))) : (React.createElement(AddCircleOIcon, { className: \"topology-default-create-connector__create__cursor\", style: { fontSize: cursorSize } })))) : (React.createElement(ConnectorArrow, { startPoint: startPoint, endPoint: endPoint }))));\n};\nexport default DefaultCreateConnector;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/DefaultCreateConnector.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/DefaultCreateConnector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEjD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,OAAO,+BAA+B,CAAC;AAEvC,MAAM,UAAU,GAAG,EAAE,CAAC;AAWtB,MAAM,sBAAsB,GAA0C,CAAC,EACrE,UAAU,EACV,QAAQ,EACR,KAAK,EACL,WAAW,EACX,SAAS,GACV,EAAE,EAAE;IACH,MAAM,OAAO,GAAG,UAAU,CAAC,mCAAmC,EAAE,SAAS,CAAC,CAAC;IAC3E,OAAO,CACL,2BAAG,SAAS,EAAE,OAAO;QACnB,8BACE,SAAS,EAAC,yCAAyC,EACnD,EAAE,EAAE,UAAU,CAAC,CAAC,EAChB,EAAE,EAAE,UAAU,CAAC,CAAC,EAChB,EAAE,EAAE,QAAQ,CAAC,CAAC,EACd,EAAE,EAAE,QAAQ,CAAC,CAAC,GACd;QACD,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAC/C,2BACE,SAAS,EAAE,aAAa,QAAQ,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,EACrF,SAAS,EAAC,2CAA2C;YAErD,gCACE,SAAS,EAAC,+CAA+C,EACzD,EAAE,EAAE,UAAU,GAAG,CAAC,EAClB,EAAE,EAAE,UAAU,GAAG,CAAC,EAClB,CAAC,EAAE,UAAU,GAAG,CAAC,GACjB;YACD,WAAW,CAAC,CAAC,CAAC,CACb,oBAAC,OAAO,IACN,OAAO,EAAE,WAAW,EACpB,OAAO,EAAC,QAAQ,EAChB,SAAS,QACT,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;gBAErC,oBAAC,cAAc,IACb,SAAS,EAAC,mDAAmD,EAC7D,KAAK,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,GAC/B,CACM,CACX,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,IACb,SAAS,EAAC,mDAAmD,EAC7D,KAAK,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,GAC/B,CACH,CACC,CACL,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,IAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAC/D,CACC,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\nimport Point from '../geom/Point';\nimport ConnectorArrow from './ConnectorArrow';\n\nimport './DefaultCreateConnector.scss';\n\nconst cursorSize = 20;\n\ntype DefaultCreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  className?: string;\n  tipContents?: React.ReactNode;\n};\n\nconst DefaultCreateConnector: React.FC<DefaultCreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  hints,\n  tipContents,\n  className,\n}) => {\n  const classes = classNames('topology-default-create-connector', className);\n  return (\n    <g className={classes}>\n      <line\n        className=\"topology-default-create-connector__line\"\n        x1={startPoint.x}\n        y1={startPoint.y}\n        x2={endPoint.x}\n        y2={endPoint.y}\n      />\n      {hints && hints[hints.length - 1] === 'create' ? (\n        <g\n          transform={`translate(${endPoint.x - cursorSize / 2},${endPoint.y - cursorSize / 2})`}\n          className=\"topology-default-create-connector__create\"\n        >\n          <circle\n            className=\"topology-default-create-connector__create__bg\"\n            cx={cursorSize / 2}\n            cy={cursorSize / 2}\n            r={cursorSize / 2}\n          />\n          {tipContents ? (\n            <Tooltip\n              content={tipContents}\n              trigger=\"manual\"\n              isVisible\n              tippyProps={{ duration: 0, delay: 0 }}\n            >\n              <AddCircleOIcon\n                className=\"topology-default-create-connector__create__cursor\"\n                style={{ fontSize: cursorSize }}\n              />\n            </Tooltip>\n          ) : (\n            <AddCircleOIcon\n              className=\"topology-default-create-connector__create__cursor\"\n              style={{ fontSize: cursorSize }}\n            />\n          )}\n        </g>\n      ) : (\n        <ConnectorArrow startPoint={startPoint} endPoint={endPoint} />\n      )}\n    </g>\n  );\n};\n\nexport default DefaultCreateConnector;\n"]}]}