{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceNode.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceNode.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { observer, useAnchor, RectAnchor, useCombineRefs, useHover, useDragNode, createSvgIdUrl, } from '@console/topology';\nimport { useSearchFilter } from '../../filters/useSearchFilter';\nimport { nodeDragSourceSpec } from '../../components/componentUtils';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './const';\nimport { NodeShadows, NODE_SHADOW_FILTER_ID, NODE_SHADOW_FILTER_ID_HOVER, } from '../../components/NodeShadows';\nimport { GroupNode } from '../../components/groups/GroupNode';\nconst OperatorBackedServiceNode = ({ element, editAccess, selected, onSelect, onContextMenu, contextMenuOpen, dndDropRef, }) => {\n    useAnchor(React.useCallback((node) => new RectAnchor(node, 1.5), []));\n    const [hover, hoverRef] = useHover();\n    const [{ dragging }, dragNodeRef] = useDragNode(nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, true, editAccess), {\n        element,\n    });\n    const refs = useCombineRefs(hoverRef, dragNodeRef, dndDropRef);\n    const [filtered] = useSearchFilter(element.getLabel());\n    const kind = 'Operator';\n    const { width, height } = element.getDimensions();\n    return (React.createElement(\"g\", { ref: refs, onClick: onSelect, onContextMenu: editAccess ? onContextMenu : null, className: classNames('odc-operator-backed-service', {\n            'is-dragging': dragging,\n            'is-selected': selected,\n            'is-filtered': filtered,\n        }) },\n        React.createElement(NodeShadows, null),\n        React.createElement(\"rect\", { className: \"odc-operator-backed-service__bg\", filter: createSvgIdUrl(hover || contextMenuOpen || dragging\n                ? NODE_SHADOW_FILTER_ID_HOVER\n                : NODE_SHADOW_FILTER_ID), x: 0, y: 0, width: width, height: height, rx: \"5\", ry: \"5\" }),\n        React.createElement(GroupNode, { kind: kind, element: element, groupResources: element.getData().groupResources, typeIconClass: element.getData().data.builderImage })));\n};\nexport default observer(OperatorBackedServiceNode);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceNode.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/operators/components/OperatorBackedServiceNode.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EACL,QAAQ,EAKR,SAAS,EACT,UAAU,EACV,cAAc,EACd,QAAQ,EACR,WAAW,EACX,cAAc,GACf,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAE,4BAA4B,EAAE,MAAM,SAAS,CAAC;AACvD,OAAO,EACL,WAAW,EACX,qBAAqB,EACrB,2BAA2B,GAC5B,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAS9D,MAAM,yBAAyB,GAA6C,CAAC,EAC3E,OAAO,EACP,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,eAAe,EACf,UAAU,GACX,EAAE,EAAE;IACH,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5E,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAE,CAAC;IACrC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,GAAG,WAAW,CAC7C,kBAAkB,CAAC,4BAA4B,EAAE,IAAI,EAAE,UAAU,CAAC,EAClE;QACE,OAAO;KACR,CACF,CAAC;IACF,MAAM,IAAI,GAAG,cAAc,CAAiB,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IAC/E,MAAM,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,MAAM,IAAI,GAAG,UAAU,CAAC;IACxB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;IAElD,OAAO,CACL,2BACE,GAAG,EAAE,IAAI,EACT,OAAO,EAAE,QAAQ,EACjB,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAChD,SAAS,EAAE,UAAU,CAAC,6BAA6B,EAAE;YACnD,aAAa,EAAE,QAAQ;YACvB,aAAa,EAAE,QAAQ;YACvB,aAAa,EAAE,QAAQ;SACxB,CAAC;QAEF,oBAAC,WAAW,OAAG;QACf,8BACE,SAAS,EAAC,iCAAiC,EAC3C,MAAM,EAAE,cAAc,CACpB,KAAK,IAAI,eAAe,IAAI,QAAQ;gBAClC,CAAC,CAAC,2BAA2B;gBAC7B,CAAC,CAAC,qBAAqB,CAC1B,EACD,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,EAAE,EAAC,GAAG,EACN,EAAE,EAAC,GAAG,GACN;QACF,oBAAC,SAAS,IACR,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,cAAc,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,cAAc,EAChD,aAAa,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,GAClD,CACA,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,yBAAyB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {\n  observer,\n  Node,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithContextMenuProps,\n  useAnchor,\n  RectAnchor,\n  useCombineRefs,\n  useHover,\n  useDragNode,\n  createSvgIdUrl,\n} from '@console/topology';\nimport { useSearchFilter } from '../../filters/useSearchFilter';\nimport { nodeDragSourceSpec } from '../../components/componentUtils';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './const';\nimport {\n  NodeShadows,\n  NODE_SHADOW_FILTER_ID,\n  NODE_SHADOW_FILTER_ID_HOVER,\n} from '../../components/NodeShadows';\nimport { GroupNode } from '../../components/groups/GroupNode';\n\nexport type OperatorBackedServiceNodeProps = {\n  element: Node;\n  editAccess: boolean;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDndDropProps;\n\nconst OperatorBackedServiceNode: React.FC<OperatorBackedServiceNodeProps> = ({\n  element,\n  editAccess,\n  selected,\n  onSelect,\n  onContextMenu,\n  contextMenuOpen,\n  dndDropRef,\n}) => {\n  useAnchor(React.useCallback((node: Node) => new RectAnchor(node, 1.5), []));\n  const [hover, hoverRef] = useHover();\n  const [{ dragging }, dragNodeRef] = useDragNode(\n    nodeDragSourceSpec(TYPE_OPERATOR_BACKED_SERVICE, true, editAccess),\n    {\n      element,\n    },\n  );\n  const refs = useCombineRefs<SVGRectElement>(hoverRef, dragNodeRef, dndDropRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const kind = 'Operator';\n  const { width, height } = element.getDimensions();\n\n  return (\n    <g\n      ref={refs}\n      onClick={onSelect}\n      onContextMenu={editAccess ? onContextMenu : null}\n      className={classNames('odc-operator-backed-service', {\n        'is-dragging': dragging,\n        'is-selected': selected,\n        'is-filtered': filtered,\n      })}\n    >\n      <NodeShadows />\n      <rect\n        className=\"odc-operator-backed-service__bg\"\n        filter={createSvgIdUrl(\n          hover || contextMenuOpen || dragging\n            ? NODE_SHADOW_FILTER_ID_HOVER\n            : NODE_SHADOW_FILTER_ID,\n        )}\n        x={0}\n        y={0}\n        width={width}\n        height={height}\n        rx=\"5\"\n        ry=\"5\"\n      />\n      <GroupNode\n        kind={kind}\n        element={element}\n        groupResources={element.getData().groupResources}\n        typeIconClass={element.getData().data.builderImage}\n      />\n    </g>\n  );\n};\n\nexport default observer(OperatorBackedServiceNode);\n"]}]}