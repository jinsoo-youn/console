{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/moveNodeToGroup.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/moveNodeToGroup.tsx","mtime":1617154808370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from '../topology-utils';\nexport const moveNodeToGroup = (node, targetGroup) => {\n    const sourceGroup = node.getParent() !== node.getGraph() ? node.getParent() : undefined;\n    if (sourceGroup === targetGroup) {\n        return Promise.reject();\n    }\n    if (sourceGroup) {\n        const title = targetGroup ? 'Move Component Node' : 'Remove Component Node from Application';\n        const message = (React.createElement(React.Fragment, null,\n            \"Are you sure you want to \",\n            targetGroup ? 'move' : 'remove',\n            \" \",\n            React.createElement(\"strong\", null, node.getLabel()),\n            \" from \",\n            sourceGroup.getLabel(),\n            targetGroup ? ` to ${targetGroup.getLabel()}` : '',\n            \"?\"));\n        const btnText = targetGroup ? 'Move' : 'Remove';\n        return new Promise((resolve, reject) => {\n            confirmModal({\n                title,\n                message,\n                btnText,\n                close: () => {\n                    reject();\n                },\n                cancel: () => {\n                    reject();\n                },\n                executeFn: () => {\n                    return updateTopologyResourceApplication(node.getData(), targetGroup ? targetGroup.getLabel() : null)\n                        .then(resolve)\n                        .catch(err => {\n                        const error = err.message;\n                        errorModal({ error });\n                        reject(err);\n                    });\n                },\n            });\n        });\n    }\n    return updateTopologyResourceApplication(node.getData(), targetGroup.getLabel()).catch(err => {\n        const error = err.message;\n        errorModal({ error });\n    });\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/moveNodeToGroup.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/components/moveNodeToGroup.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AAE/E,OAAO,EAAE,iCAAiC,EAAE,MAAM,mBAAmB,CAAC;AAEtE,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAU,EAAE,WAAiB,EAAiB,EAAE;IAC9E,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAE,IAAI,CAAC,SAAS,EAAW,CAAC,CAAC,CAAC,SAAS,CAAC;IAClG,IAAI,WAAW,KAAK,WAAW,EAAE;QAC/B,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;KACzB;IAED,IAAI,WAAW,EAAE;QACf,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,wCAAwC,CAAC;QAC7F,MAAM,OAAO,GAAG,CACd;;YAC4B,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ;;YAAE,oCAAS,IAAI,CAAC,QAAQ,EAAE,CAAU;;YAAO,WAAW,CAAC,QAAQ,EAAE;YACzH,WAAW,CAAC,CAAC,CAAC,OAAO,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;gBAClD,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;QAEhD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,YAAY,CAAC;gBACX,KAAK;gBACL,OAAO;gBACP,OAAO;gBACP,KAAK,EAAE,GAAG,EAAE;oBACV,MAAM,EAAE,CAAC;gBACX,CAAC;gBACD,MAAM,EAAE,GAAG,EAAE;oBACX,MAAM,EAAE,CAAC;gBACX,CAAC;gBACD,SAAS,EAAE,GAAG,EAAE;oBACd,OAAO,iCAAiC,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;yBAClG,IAAI,CAAC,OAAO,CAAC;yBACb,KAAK,CAAC,GAAG,CAAC,EAAE;wBACX,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC1B,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;wBACtB,MAAM,CAAC,GAAG,CAAC,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,iCAAiC,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QAC3F,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC1B,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { Node } from '@console/topology';\nimport { updateTopologyResourceApplication } from '../topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    const title = targetGroup ? 'Move Component Node' : 'Remove Component Node from Application';\n    const message = (\n      <>\n        Are you sure you want to {targetGroup ? 'move' : 'remove'} <strong>{node.getLabel()}</strong> from {sourceGroup.getLabel()}\n        {targetGroup ? ` to ${targetGroup.getLabel()}` : ''}?\n      </>\n    );\n    const btnText = targetGroup ? 'Move' : 'Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        title,\n        message,\n        btnText,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(node.getData(), targetGroup ? targetGroup.getLabel() : null)\n            .then(resolve)\n            .catch(err => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node.getData(), targetGroup.getLabel()).catch(err => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n"]}]}