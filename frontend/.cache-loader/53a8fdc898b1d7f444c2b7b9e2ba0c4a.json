{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/secrets/create-secret.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/secrets/create-secret.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { k8sCreate, k8sUpdate, referenceFor } from '../../module/k8s';\nimport { ButtonBar, Firehose, history, StatusBox, LoadingBox, Dropdown, resourceObjPath, } from '../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../factory/modal';\nimport { AsyncComponent } from '../utils/async';\nimport { SecretModel } from '../../models';\nimport { WebHookSecretKey } from '../secret';\nexport var SecretTypeAbstraction;\n(function (SecretTypeAbstraction) {\n    SecretTypeAbstraction[\"generic\"] = \"generic\";\n    SecretTypeAbstraction[\"source\"] = \"source\";\n    SecretTypeAbstraction[\"image\"] = \"image\";\n    SecretTypeAbstraction[\"webhook\"] = \"webhook\";\n})(SecretTypeAbstraction || (SecretTypeAbstraction = {}));\nconst secretDisplayType = (abstraction) => {\n    switch (abstraction) {\n        case 'generic':\n            return 'Key/Value';\n        case 'image':\n            return 'Image Pull';\n        default:\n            return _.upperFirst(abstraction);\n    }\n};\nconst AUTHS_KEY = 'auths';\nexport var SecretType;\n(function (SecretType) {\n    SecretType[\"basicAuth\"] = \"kubernetes.io/basic-auth\";\n    SecretType[\"dockercfg\"] = \"kubernetes.io/dockercfg\";\n    SecretType[\"dockerconfigjson\"] = \"kubernetes.io/dockerconfigjson\";\n    SecretType[\"opaque\"] = \"Opaque\";\n    SecretType[\"serviceAccountToken\"] = \"kubernetes.io/service-account-token\";\n    SecretType[\"sshAuth\"] = \"kubernetes.io/ssh-auth\";\n    SecretType[\"tls\"] = \"kubernetes.io/tls\";\n})(SecretType || (SecretType = {}));\nconst secretFormExplanation = {\n    [SecretTypeAbstraction.generic]: 'Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n    [SecretTypeAbstraction.source]: 'Source secrets let you authenticate against a Git server.',\n    [SecretTypeAbstraction.image]: 'Image pull secrets let you authenticate against a private image registry.',\n    [SecretTypeAbstraction.webhook]: 'Webhook secrets let you authenticate a webhook trigger.',\n};\nconst toDefaultSecretType = (typeAbstraction) => {\n    switch (typeAbstraction) {\n        case SecretTypeAbstraction.source:\n            return SecretType.basicAuth;\n        case SecretTypeAbstraction.image:\n            return SecretType.dockerconfigjson;\n        default:\n            return SecretType.opaque;\n    }\n};\nconst toTypeAbstraction = (obj) => {\n    const { data, type } = obj;\n    switch (type) {\n        case SecretType.basicAuth:\n        case SecretType.sshAuth:\n            return SecretTypeAbstraction.source;\n        case SecretType.dockerconfigjson:\n        case SecretType.dockercfg:\n            return SecretTypeAbstraction.image;\n        default:\n            if (data[WebHookSecretKey] && _.size(data) === 1) {\n                return SecretTypeAbstraction.webhook;\n            }\n            return SecretTypeAbstraction.generic;\n    }\n};\nconst generateSecret = () => {\n    // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    return s4() + s4() + s4() + s4();\n};\n// withSecretForm returns SubForm which is a Higher Order Component for all the types of secret forms.\nexport const withSecretForm = (SubForm, modal) => class SecretFormComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderBody = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"fieldset\", { disabled: !this.props.isCreate },\n                    React.createElement(\"div\", { className: \"form-group\" },\n                        React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: \"secret-name\" }, \"Secret Name\"),\n                        React.createElement(\"div\", null,\n                            React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", onChange: this.onNameChanged, value: this.state.secret.metadata.name, \"aria-describedby\": \"secret-name-help\", id: \"secret-name\", required: true }),\n                            React.createElement(\"p\", { className: \"help-block\", id: \"secret-name-help\" }, \"Unique name of the new secret.\")))),\n                React.createElement(SubForm, { onChange: this.onDataChanged, onError: this.onError, onFormDisable: this.onFormDisable, stringData: this.state.stringData, secretType: this.state.secret.type, isCreate: this.props.isCreate })));\n        };\n        const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n        const defaultSecretType = toDefaultSecretType(this.props.secretTypeAbstraction);\n        const secret = _.defaultsDeep({}, props.fixed, existingSecret, {\n            apiVersion: 'v1',\n            data: {},\n            kind: 'Secret',\n            metadata: {\n                name: '',\n            },\n            type: defaultSecretType,\n        });\n        this.state = {\n            secretTypeAbstraction: this.props.secretTypeAbstraction,\n            secret,\n            inProgress: false,\n            type: defaultSecretType,\n            stringData: _.mapValues(_.get(props.obj, 'data'), (value) => {\n                return value ? Base64.decode(value) : '';\n            }),\n            disableForm: false,\n        };\n        this.onDataChanged = this.onDataChanged.bind(this);\n        this.onNameChanged = this.onNameChanged.bind(this);\n        this.onError = this.onError.bind(this);\n        this.onFormDisable = this.onFormDisable.bind(this);\n        this.save = this.save.bind(this);\n    }\n    onDataChanged(secretsData) {\n        this.setState({\n            stringData: Object.assign({}, secretsData.stringData),\n            type: secretsData.type,\n        });\n    }\n    onError(err) {\n        this.setState({\n            error: err,\n            inProgress: false,\n        });\n    }\n    onNameChanged(event) {\n        const name = event.target.value;\n        this.setState((state) => {\n            const secret = _.cloneDeep(state.secret);\n            secret.metadata.name = name;\n            return { secret };\n        });\n    }\n    onFormDisable(disable) {\n        this.setState({\n            disableForm: disable,\n        });\n    }\n    save(e) {\n        e.preventDefault();\n        const { metadata } = this.state.secret;\n        this.setState({ inProgress: true });\n        const newSecret = _.assign({}, this.state.secret, { stringData: this.state.stringData }, { type: this.state.type });\n        (this.props.isCreate\n            ? k8sCreate(SecretModel, newSecret)\n            : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)).then((secret) => {\n            this.setState({ inProgress: false });\n            if (this.props.onSave) {\n                this.props.onSave(secret.metadata.name);\n            }\n            if (!modal) {\n                history.push(resourceObjPath(secret, referenceFor(secret)));\n            }\n        }, (err) => this.setState({ error: err.message, inProgress: false }));\n    }\n    render() {\n        const { secretTypeAbstraction } = this.state;\n        const { onCancel = history.goBack } = this.props;\n        const title = `${this.props.titleVerb} ${secretDisplayType(secretTypeAbstraction)} Secret`;\n        return modal ? (React.createElement(\"form\", { className: \"co-create-secret-form modal-content\", onSubmit: this.save },\n            React.createElement(ModalTitle, null, title),\n            React.createElement(ModalBody, null, this.renderBody()),\n            React.createElement(ModalSubmitFooter, { errorMessage: this.state.error || '', inProgress: this.state.inProgress, submitText: \"Create\", cancel: this.props.onCancel }))) : (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, title)),\n            React.createElement(\"form\", { className: \"co-m-pane__body-group co-create-secret-form co-m-pane__form\", onSubmit: this.save },\n                React.createElement(\"h1\", { className: \"co-m-pane__heading\" }, title),\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, this.props.explanation),\n                this.renderBody(),\n                React.createElement(ButtonBar, { errorMessage: this.state.error, inProgress: this.state.inProgress },\n                    React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                        React.createElement(Button, { type: \"submit\", isDisabled: this.state.disableForm, variant: \"primary\", id: \"save-changes\" }, this.props.saveButtonText || 'Create'),\n                        React.createElement(Button, { type: \"button\", variant: \"secondary\", id: \"cancel\", onClick: onCancel }, \"Cancel\"))))));\n    }\n};\nconst getImageSecretKey = (secretType) => {\n    switch (secretType) {\n        case SecretType.dockercfg:\n            return '.dockercfg';\n        case SecretType.dockerconfigjson:\n            return '.dockerconfigjson';\n        default:\n            return secretType;\n    }\n};\nconst getImageSecretType = (secretKey) => {\n    switch (secretKey) {\n        case '.dockercfg':\n            return SecretType.dockercfg;\n        case '.dockerconfigjson':\n            return SecretType.dockerconfigjson;\n        default:\n            return SecretType.opaque;\n    }\n};\nexport class ImageSecretForm extends React.Component {\n    constructor(props) {\n        super(props);\n        const data = this.props.isCreate ? { '.dockerconfigjson': '{}' } : this.props.stringData;\n        let parsedData;\n        try {\n            parsedData = _.mapValues(data, JSON.parse);\n        }\n        catch (err) {\n            this.props.onError(`Error parsing secret's data: ${err.message}`);\n            parsedData = { '.dockerconfigjson': {} };\n        }\n        this.state = {\n            type: this.props.secretType,\n            dataKey: getImageSecretKey(this.props.secretType),\n            stringData: parsedData,\n            authType: 'credentials',\n        };\n        this.onDataChanged = this.onDataChanged.bind(this);\n        this.changeFormType = this.changeFormType.bind(this);\n        this.onFormDisable = this.onFormDisable.bind(this);\n    }\n    onDataChanged(secretData) {\n        const dataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n        this.setState({\n            stringData: { [dataKey]: secretData },\n        }, () => this.props.onChange({\n            stringData: _.mapValues(this.state.stringData, JSON.stringify),\n            type: getImageSecretType(dataKey),\n        }));\n    }\n    changeFormType(authType) {\n        this.setState({\n            authType,\n        });\n    }\n    onFormDisable(disable) {\n        this.props.onFormDisable(disable);\n    }\n    render() {\n        const authTypes = {\n            credentials: 'Image Registry Credentials',\n            'config-file': 'Upload Configuration File',\n        };\n        const data = _.get(this.state.stringData, this.state.dataKey);\n        return (React.createElement(React.Fragment, null,\n            this.props.isCreate && (React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label\", htmlFor: \"secret-type\" }, \"Authentication Type\"),\n                React.createElement(\"div\", { className: \"co-create-secret__dropdown\" },\n                    React.createElement(Dropdown, { items: authTypes, dropDownClassName: \"dropdown--full-width\", id: \"dropdown-selectbox\", selectedKey: this.state.authType, onChange: this.changeFormType })))),\n            this.state.authType === 'credentials' ? (React.createElement(CreateConfigSubform, { onChange: this.onDataChanged, stringData: data })) : (React.createElement(UploadConfigSubform, { onChange: this.onDataChanged, stringData: data, onDisable: this.onFormDisable }))));\n    }\n}\nclass ConfigEntryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.propagateChange = () => {\n            const { onChange, id } = this.props;\n            onChange(this.state, id);\n        };\n        this.onAddressChanged = (event) => {\n            this.setState({ address: event.currentTarget.value }, this.propagateChange);\n        };\n        this.onUsernameChanged = (event) => {\n            const username = event.currentTarget.value;\n            this.setState((state) => ({\n                username,\n                auth: Base64.encode(`${username}:${state.password}`),\n            }), this.propagateChange);\n        };\n        this.onPasswordChanged = (event) => {\n            const password = event.currentTarget.value;\n            this.setState((state) => ({\n                password,\n                auth: Base64.encode(`${state.username}:${password}`),\n            }), this.propagateChange);\n        };\n        this.onEmailChanged = (event) => {\n            this.setState({ email: event.currentTarget.value }, this.propagateChange);\n        };\n        this.state = {\n            address: _.get(this.props.entry, 'address'),\n            username: _.get(this.props.entry, 'username'),\n            password: _.get(this.props.entry, 'password'),\n            email: _.get(this.props.entry, 'email'),\n            auth: _.get(this.props.entry, 'auth'),\n            uid: _.get(this.props, 'uid'),\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"co-m-pane__body-group\", \"data-test-id\": \"create-image-secret-form\" },\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `${this.props.id}-address` }, \"Registry Server Address\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: `${this.props.id}-address`, type: \"text\", name: \"address\", onChange: this.onAddressChanged, value: this.state.address, required: true }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `${this.props.id}-username` }, \"Username\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: `${this.props.id}-username`, type: \"text\", name: \"username\", onChange: this.onUsernameChanged, value: this.state.username, required: true }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `${this.props.id}-password` }, \"Password\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: `${this.props.id}-password`, type: \"password\", name: \"password\", onChange: this.onPasswordChanged, value: this.state.password, required: true }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label\", htmlFor: `${this.props.id}-email` }, \"Email\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: `${this.props.id}-email`, type: \"text\", name: \"email\", onChange: this.onEmailChanged, value: this.state.email })))));\n    }\n}\nexport class CreateConfigSubform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n            isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n            secretEntriesArray: this.imageSecretObjectToArray(this.props.stringData[AUTHS_KEY] || this.props.stringData),\n            hasDuplicate: false,\n        };\n        this.onDataChanged = this.onDataChanged.bind(this);\n    }\n    newImageSecretEntry() {\n        return {\n            entry: {\n                address: '',\n                username: '',\n                password: '',\n                email: '',\n                auth: '',\n            },\n            uid: _.uniqueId(),\n        };\n    }\n    imageSecretObjectToArray(imageSecretObject) {\n        const imageSecretArray = [];\n        if (_.isEmpty(imageSecretObject)) {\n            return _.concat(imageSecretArray, this.newImageSecretEntry());\n        }\n        _.each(imageSecretObject, (v, k) => {\n            // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n            const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n            const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n            imageSecretArray.push({\n                entry: {\n                    address: k,\n                    username: _.get(v, 'username', parsedAuth[0]),\n                    password: _.get(v, 'password', parsedAuth[1]),\n                    email: _.get(v, 'email', ''),\n                    auth: _.get(v, 'auth', ''),\n                },\n                uid: _.get(v, 'uid', _.uniqueId()),\n            });\n        });\n        return imageSecretArray;\n    }\n    imageSecretArrayToObject(imageSecretArray) {\n        const imageSecretsObject = {};\n        _.each(imageSecretArray, (value) => {\n            imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n                'username',\n                'password',\n                'auth',\n                'email',\n            ]);\n        });\n        return imageSecretsObject;\n    }\n    propagateEntryChange(secretEntriesArray) {\n        const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n        this.props.onChange(this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject);\n    }\n    onDataChanged(updatedEntry, entryIndex) {\n        this.setState((state) => {\n            const secretEntriesArray = [...state.secretEntriesArray];\n            const updatedEntryData = {\n                uid: secretEntriesArray[entryIndex].uid,\n                entry: updatedEntry,\n            };\n            secretEntriesArray[entryIndex] = updatedEntryData;\n            return {\n                secretEntriesArray,\n            };\n        }, () => this.propagateEntryChange(this.state.secretEntriesArray));\n    }\n    removeEntry(entryIndex) {\n        this.setState((state) => {\n            const secretEntriesArray = [...state.secretEntriesArray];\n            secretEntriesArray.splice(entryIndex, 1);\n            return { secretEntriesArray };\n        }, () => this.propagateEntryChange(this.state.secretEntriesArray));\n    }\n    addEntry() {\n        this.setState({\n            secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n        }, () => {\n            this.propagateEntryChange(this.state.secretEntriesArray);\n        });\n    }\n    render() {\n        const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n            return (React.createElement(\"div\", { className: \"co-add-remove-form__entry\", key: entryData.uid },\n                _.size(this.state.secretEntriesArray) > 1 && (React.createElement(\"div\", { className: \"co-add-remove-form__link--remove-entry\" },\n                    React.createElement(Button, { onClick: () => this.removeEntry(index), type: \"button\", variant: \"link\" },\n                        React.createElement(MinusCircleIcon, { className: \"co-icon-space-r\" }),\n                        \"Remove Credentials\"))),\n                React.createElement(ConfigEntryForm, { id: index, entry: entryData.entry, onChange: this.onDataChanged })));\n        });\n        return (React.createElement(React.Fragment, null,\n            secretEntriesList,\n            React.createElement(Button, { className: \"co-create-secret-form__link--add-entry pf-m-link--align-left\", onClick: () => this.addEntry(), type: \"button\", variant: \"link\" },\n                React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                \"Add Credentials\")));\n    }\n}\nclass UploadConfigSubform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n            parseError: false,\n        };\n        this.changeData = this.changeData.bind(this);\n        this.onFileChange = this.onFileChange.bind(this);\n    }\n    changeData(event) {\n        this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n    }\n    onFileChange(fileData) {\n        this.updateState(_.attempt(JSON.parse, fileData), fileData);\n    }\n    updateState(parsedData, stringData) {\n        this.setState({\n            configFile: stringData,\n            parseError: _.isError(parsedData),\n        }, () => {\n            this.props.onChange(parsedData);\n            this.props.onDisable(this.state.parseError);\n        });\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(DroppableFileInput, { onChange: this.onFileChange, inputFileData: this.state.configFile, id: \"docker-config\", label: \"Configuration File\", inputFieldHelpText: \"Upload a .dockercfg or .docker/config.json file.\", textareaFieldHelpText: \"File with credentials and other configuration for connecting to a secured image registry.\", isRequired: true }),\n            this.state.parseError && (React.createElement(\"div\", { className: \"co-create-secret-warning\" }, \"Configuration file should be in JSON format.\"))));\n    }\n}\nclass WebHookSecretForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n        };\n        this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n        this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n    }\n    changeWebHookSecretkey(event) {\n        this.setState({\n            stringData: { WebHookSecretKey: event.target.value },\n        }, () => this.props.onChange(this.state));\n    }\n    generateWebHookSecret() {\n        this.setState({\n            stringData: { WebHookSecretKey: generateSecret() },\n        }, () => this.props.onChange(this.state));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"form-group\" },\n            React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: \"webhook-secret-key\" }, \"Webhook Secret Key\"),\n            React.createElement(\"div\", { className: \"pf-c-input-group\" },\n                React.createElement(\"input\", { className: \"pf-c-form-control\", id: \"webhook-secret-key\", type: \"text\", name: \"webhookSecretKey\", onChange: this.changeWebHookSecretkey, value: this.state.stringData.WebHookSecretKey, \"aria-describedby\": \"webhook-secret-help\", required: true }),\n                React.createElement(\"button\", { type: \"button\", onClick: this.generateWebHookSecret, className: \"pf-c-button pf-m-tertiary\" }, \"Generate\")),\n            React.createElement(\"p\", { className: \"help-block\", id: \"webhook-secret-help\" },\n                \"Value of the secret will be supplied when invoking the webhook.\",\n                ' ')));\n    }\n}\nexport class SourceSecretForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: this.props.secretType,\n            stringData: this.props.stringData || {},\n            authType: SecretType.basicAuth,\n        };\n        this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n        this.onDataChanged = this.onDataChanged.bind(this);\n    }\n    changeAuthenticationType(type) {\n        this.setState({\n            type,\n        }, () => this.props.onChange(this.state));\n    }\n    onDataChanged(secretsData) {\n        this.setState({\n            stringData: Object.assign({}, secretsData),\n        }, () => this.props.onChange(this.state));\n    }\n    render() {\n        const authTypes = {\n            [SecretType.basicAuth]: 'Basic Authentication',\n            [SecretType.sshAuth]: 'SSH Key',\n        };\n        return (React.createElement(React.Fragment, null,\n            this.props.isCreate ? (React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label\", htmlFor: \"secret-type\" }, \"Authentication Type\"),\n                React.createElement(\"div\", { className: \"co-create-secret__dropdown\" },\n                    React.createElement(Dropdown, { items: authTypes, dropDownClassName: \"dropdown--full-width\", id: \"dropdown-selectbox\", selectedKey: this.state.authType, onChange: this.changeAuthenticationType })))) : null,\n            this.state.type === SecretType.basicAuth ? (React.createElement(BasicAuthSubform, { onChange: this.onDataChanged, stringData: this.state.stringData })) : (React.createElement(SSHAuthSubform, { onChange: this.onDataChanged, stringData: this.state.stringData }))));\n    }\n}\nexport class BasicAuthSubform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.stringData.username || '',\n            password: this.props.stringData.password || '',\n        };\n        this.changeData = this.changeData.bind(this);\n    }\n    changeData(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        }, () => this.props.onChange(this.state));\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label\", htmlFor: \"username\" }, \"Username\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: \"username\", \"aria-describedby\": \"username-help\", type: \"text\", name: \"username\", onChange: this.changeData, value: this.state.username }),\n                    React.createElement(\"p\", { className: \"help-block\", id: \"username-help\" }, \"Optional username for Git authentication.\"))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: \"password\" }, \"Password or Token\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: \"password\", \"aria-describedby\": \"password-help\", type: \"password\", name: \"password\", onChange: this.changeData, value: this.state.password, required: true }),\n                    React.createElement(\"p\", { className: \"help-block\", id: \"password-help\" }, \"Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.\")))));\n    }\n}\nconst DroppableFileInput = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('../utils/file-input').then((c) => c.DroppableFileInput) }, props)));\nexport class SSHAuthSubform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'ssh-privatekey': this.props.stringData['ssh-privatekey'] || '',\n        };\n        this.changeData = this.changeData.bind(this);\n        this.onFileChange = this.onFileChange.bind(this);\n    }\n    changeData(event) {\n        this.setState({\n            'ssh-privatekey': event.target.value,\n        }, () => this.props.onChange(this.state));\n    }\n    onFileChange(fileData) {\n        this.setState({\n            'ssh-privatekey': fileData,\n        }, () => this.props.onChange(this.state));\n    }\n    render() {\n        return (React.createElement(DroppableFileInput, { onChange: this.onFileChange, inputFileData: this.state['ssh-privatekey'], id: \"ssh-privatekey\", label: \"SSH Private Key\", inputFieldHelpText: \"Drag and drop file with your private SSH key here or browse to upload it.\", textareaFieldHelpText: \"Private SSH key file for Git authentication.\", isRequired: true }));\n    }\n}\nclass GenericSecretForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n        };\n        this.onDataChanged = this.onDataChanged.bind(this);\n    }\n    newGenericSecretEntry() {\n        return {\n            entry: {\n                key: '',\n                value: '',\n            },\n            uid: _.uniqueId(),\n        };\n    }\n    genericSecretObjectToArray(genericSecretObject) {\n        if (_.isEmpty(genericSecretObject)) {\n            return [this.newGenericSecretEntry()];\n        }\n        return _.map(genericSecretObject, (value, key) => ({\n            uid: _.uniqueId(),\n            entry: {\n                key,\n                value,\n            },\n        }));\n    }\n    genericSecretArrayToObject(genericSecretArray) {\n        return _.reduce(genericSecretArray, (acc, k) => _.assign(acc, { [k.entry.key]: k.entry.value }), {});\n    }\n    onDataChanged(updatedEntry, entryID) {\n        const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n        const updatedEntryData = {\n            uid: updatedSecretEntriesArray[entryID].uid,\n            entry: updatedEntry,\n        };\n        updatedSecretEntriesArray[entryID] = updatedEntryData;\n        this.setState({\n            secretEntriesArray: updatedSecretEntriesArray,\n        }, () => this.props.onChange({\n            stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n            type: SecretType.opaque,\n        }));\n    }\n    removeEntry(entryID) {\n        const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n        updatedSecretEntriesArray.splice(entryID, 1);\n        this.setState({\n            secretEntriesArray: updatedSecretEntriesArray,\n        }, () => this.props.onChange({\n            stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n            type: SecretType.opaque,\n        }));\n    }\n    addEntry() {\n        this.setState({\n            secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n        }, () => this.props.onChange({\n            stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n            type: SecretType.opaque,\n        }));\n    }\n    render() {\n        const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n            return (React.createElement(\"div\", { className: \"co-add-remove-form__entry\", key: entryData.uid },\n                _.size(this.state.secretEntriesArray) > 1 && (React.createElement(\"div\", { className: \"co-add-remove-form__link--remove-entry\" },\n                    React.createElement(Button, { type: \"button\", onClick: () => this.removeEntry(index), variant: \"link\" },\n                        React.createElement(MinusCircleIcon, { className: \"co-icon-space-r\" }),\n                        \"Remove Key/Value\"))),\n                React.createElement(KeyValueEntryForm, { id: index, entry: entryData.entry, onChange: this.onDataChanged })));\n        });\n        return (React.createElement(React.Fragment, null,\n            secretEntriesList,\n            React.createElement(Button, { className: \"co-create-secret-form__link--add-entry pf-m-link--align-left\", onClick: () => this.addEntry(), type: \"button\", variant: \"link\" },\n                React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n                \"Add Key/Value\")));\n    }\n}\nclass KeyValueEntryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            key: props.entry.key,\n            value: props.entry.value,\n        };\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onKeyChange = this.onKeyChange.bind(this);\n    }\n    onValueChange(fileData) {\n        this.setState({\n            value: fileData,\n        }, () => this.props.onChange(this.state, this.props.id));\n    }\n    onKeyChange(event) {\n        this.setState({\n            key: event.target.value,\n        }, () => this.props.onChange(this.state, this.props.id));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"co-create-generic-secret__form\" },\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: `${this.props.id}-key` }, \"Key\"),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: `${this.props.id}-key`, type: \"text\", name: \"key\", onChange: this.onKeyChange, value: this.state.key, required: true }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"div\", null,\n                    React.createElement(DroppableFileInput, { onChange: this.onValueChange, inputFileData: this.state.value, id: `${this.props.id}-value`, label: \"Value\", inputFieldHelpText: \"Drag and drop file with your value here or browse to upload it.\" })))));\n    }\n}\nconst secretFormFactory = (secretType) => {\n    switch (secretType) {\n        case SecretTypeAbstraction.source:\n            return withSecretForm(SourceSecretForm);\n        case SecretTypeAbstraction.image:\n            return withSecretForm(ImageSecretForm);\n        case SecretTypeAbstraction.webhook:\n            return withSecretForm(WebHookSecretForm);\n        default:\n            return withSecretForm(GenericSecretForm);\n    }\n};\nclass SecretLoadingWrapper extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            formComponent: null,\n            secretTypeAbstraction: SecretTypeAbstraction.generic,\n        };\n    }\n    componentDidUpdate() {\n        // Set the proper secret form component, once the secret is received by Firehose.\n        // 'formComponent' needs to be set only once, to avoid losing form state,\n        // caused by component mounting/unmounting.\n        if (!this.state.formComponent && !_.isEmpty(this.props.obj.data)) {\n            const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n            this.setState({\n                formComponent: secretFormFactory(secretTypeAbstraction),\n                secretTypeAbstraction,\n            });\n        }\n    }\n    render() {\n        const { obj, fixedKeys } = this.props;\n        const { secretTypeAbstraction } = this.state;\n        if (!this.state.formComponent) {\n            return React.createElement(LoadingBox, null);\n        }\n        const SecretFormComponent = this.state.formComponent;\n        const fixed = _.reduce(fixedKeys, (acc, k) => (Object.assign(Object.assign({}, acc), { k: _.get(obj.data, k) })), {});\n        return (React.createElement(StatusBox, Object.assign({}, obj),\n            React.createElement(SecretFormComponent, Object.assign({}, this.props, { secretTypeAbstraction: secretTypeAbstraction, obj: obj.data, fixed: fixed, explanation: secretFormExplanation[secretTypeAbstraction] }))));\n    }\n}\nexport class CreateSecret extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            formComponent: secretFormFactory(this.props.match.params.type),\n            secretTypeAbstraction: this.props.match.params.type,\n        };\n    }\n    render() {\n        const { secretTypeAbstraction, formComponent } = this.state;\n        const { params } = this.props.match;\n        const SecretFormComponent = formComponent;\n        return (React.createElement(SecretFormComponent, { fixed: { metadata: { namespace: params.ns } }, secretTypeAbstraction: secretTypeAbstraction, explanation: secretFormExplanation[params.type], titleVerb: \"Create\", isCreate: true }));\n    }\n}\nexport const EditSecret = ({ match: { params }, kind }) => (React.createElement(Firehose, { resources: [{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }] },\n    React.createElement(SecretLoadingWrapper, { fixedKeys: ['kind', 'metadata'], titleVerb: \"Edit\", saveButtonText: \"Save\" })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/secrets/create-secret.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/secrets/create-secret.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../module/k8s';\nimport {\n  ButtonBar,\n  Firehose,\n  history,\n  StatusBox,\n  LoadingBox,\n  Dropdown,\n  resourceObjPath,\n} from '../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../factory/modal';\nimport { AsyncComponent } from '../utils/async';\nimport { SecretModel } from '../../models';\nimport { WebHookSecretKey } from '../secret';\n\nexport enum SecretTypeAbstraction {\n  generic = 'generic',\n  source = 'source',\n  image = 'image',\n  webhook = 'webhook',\n}\n\nconst secretDisplayType = (abstraction: SecretTypeAbstraction) => {\n  switch (abstraction) {\n    case 'generic':\n      return 'Key/Value';\n    case 'image':\n      return 'Image Pull';\n    default:\n      return _.upperFirst(abstraction);\n  }\n};\n\nconst AUTHS_KEY = 'auths';\n\nexport enum SecretType {\n  basicAuth = 'kubernetes.io/basic-auth',\n  dockercfg = 'kubernetes.io/dockercfg',\n  dockerconfigjson = 'kubernetes.io/dockerconfigjson',\n  opaque = 'Opaque',\n  serviceAccountToken = 'kubernetes.io/service-account-token',\n  sshAuth = 'kubernetes.io/ssh-auth',\n  tls = 'kubernetes.io/tls',\n}\n\nexport type BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\nconst secretFormExplanation = {\n  [SecretTypeAbstraction.generic]:\n    'Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n  [SecretTypeAbstraction.source]: 'Source secrets let you authenticate against a Git server.',\n  [SecretTypeAbstraction.image]:\n    'Image pull secrets let you authenticate against a private image registry.',\n  [SecretTypeAbstraction.webhook]: 'Webhook secrets let you authenticate a webhook trigger.',\n};\n\nconst toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nconst toTypeAbstraction = (obj): SecretTypeAbstraction => {\n  const { data, type } = obj;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nconst generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\n// withSecretForm returns SubForm which is a Higher Order Component for all the types of secret forms.\nexport const withSecretForm = (SubForm, modal?: boolean) =>\n  class SecretFormComponent extends React.Component<BaseEditSecretProps_, BaseEditSecretState_> {\n    constructor(props) {\n      super(props);\n      const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n      const defaultSecretType = toDefaultSecretType(this.props.secretTypeAbstraction);\n      const secret = _.defaultsDeep({}, props.fixed, existingSecret, {\n        apiVersion: 'v1',\n        data: {},\n        kind: 'Secret',\n        metadata: {\n          name: '',\n        },\n        type: defaultSecretType,\n      });\n\n      this.state = {\n        secretTypeAbstraction: this.props.secretTypeAbstraction,\n        secret,\n        inProgress: false,\n        type: defaultSecretType,\n        stringData: _.mapValues(_.get(props.obj, 'data'), (value) => {\n          return value ? Base64.decode(value) : '';\n        }),\n        disableForm: false,\n      };\n      this.onDataChanged = this.onDataChanged.bind(this);\n      this.onNameChanged = this.onNameChanged.bind(this);\n      this.onError = this.onError.bind(this);\n      this.onFormDisable = this.onFormDisable.bind(this);\n      this.save = this.save.bind(this);\n    }\n    onDataChanged(secretsData) {\n      this.setState({\n        stringData: { ...secretsData.stringData },\n        type: secretsData.type,\n      });\n    }\n    onError(err) {\n      this.setState({\n        error: err,\n        inProgress: false,\n      });\n    }\n    onNameChanged(event) {\n      const name = event.target.value;\n      this.setState((state: BaseEditSecretState_) => {\n        const secret = _.cloneDeep(state.secret);\n        secret.metadata.name = name;\n        return { secret };\n      });\n    }\n    onFormDisable(disable) {\n      this.setState({\n        disableForm: disable,\n      });\n    }\n    save(e) {\n      e.preventDefault();\n      const { metadata } = this.state.secret;\n      this.setState({ inProgress: true });\n      const newSecret = _.assign(\n        {},\n        this.state.secret,\n        { stringData: this.state.stringData },\n        { type: this.state.type },\n      );\n      (this.props.isCreate\n        ? k8sCreate(SecretModel, newSecret)\n        : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n      ).then(\n        (secret) => {\n          this.setState({ inProgress: false });\n          if (this.props.onSave) {\n            this.props.onSave(secret.metadata.name);\n          }\n          if (!modal) {\n            history.push(resourceObjPath(secret, referenceFor(secret)));\n          }\n        },\n        (err) => this.setState({ error: err.message, inProgress: false }),\n      );\n    }\n\n    renderBody = () => {\n      return (\n        <>\n          <fieldset disabled={!this.props.isCreate}>\n            <div className=\"form-group\">\n              <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n                Secret Name\n              </label>\n              <div>\n                <input\n                  className=\"pf-c-form-control\"\n                  type=\"text\"\n                  onChange={this.onNameChanged}\n                  value={this.state.secret.metadata.name}\n                  aria-describedby=\"secret-name-help\"\n                  id=\"secret-name\"\n                  required\n                />\n                <p className=\"help-block\" id=\"secret-name-help\">\n                  Unique name of the new secret.\n                </p>\n              </div>\n            </div>\n          </fieldset>\n          <SubForm\n            onChange={this.onDataChanged}\n            onError={this.onError}\n            onFormDisable={this.onFormDisable}\n            stringData={this.state.stringData}\n            secretType={this.state.secret.type}\n            isCreate={this.props.isCreate}\n          />\n        </>\n      );\n    };\n\n    render() {\n      const { secretTypeAbstraction } = this.state;\n      const { onCancel = history.goBack } = this.props;\n      const title = `${this.props.titleVerb} ${secretDisplayType(secretTypeAbstraction)} Secret`;\n      return modal ? (\n        <form className=\"co-create-secret-form modal-content\" onSubmit={this.save}>\n          <ModalTitle>{title}</ModalTitle>\n          <ModalBody>{this.renderBody()}</ModalBody>\n          <ModalSubmitFooter\n            errorMessage={this.state.error || ''}\n            inProgress={this.state.inProgress}\n            submitText=\"Create\"\n            cancel={this.props.onCancel}\n          />\n        </form>\n      ) : (\n        <div className=\"co-m-pane__body\">\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          <form\n            className=\"co-m-pane__body-group co-create-secret-form co-m-pane__form\"\n            onSubmit={this.save}\n          >\n            <h1 className=\"co-m-pane__heading\">{title}</h1>\n            <p className=\"co-m-pane__explanation\">{this.props.explanation}</p>\n            {this.renderBody()}\n            <ButtonBar errorMessage={this.state.error} inProgress={this.state.inProgress}>\n              <ActionGroup className=\"pf-c-form\">\n                <Button\n                  type=\"submit\"\n                  isDisabled={this.state.disableForm}\n                  variant=\"primary\"\n                  id=\"save-changes\"\n                >\n                  {this.props.saveButtonText || 'Create'}\n                </Button>\n                <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel}>\n                  Cancel\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </form>\n        </div>\n      );\n    }\n  };\n\nconst getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nconst getImageSecretType = (secretKey: string): SecretType => {\n  switch (secretKey) {\n    case '.dockercfg':\n      return SecretType.dockercfg;\n    case '.dockerconfigjson':\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport class ImageSecretForm extends React.Component<ImageSecretFormProps, ImageSecretFormState> {\n  constructor(props) {\n    super(props);\n    const data = this.props.isCreate ? { '.dockerconfigjson': '{}' } : this.props.stringData;\n    let parsedData;\n    try {\n      parsedData = _.mapValues(data, JSON.parse);\n    } catch (err) {\n      this.props.onError(`Error parsing secret's data: ${err.message}`);\n      parsedData = { '.dockerconfigjson': {} };\n    }\n    this.state = {\n      type: this.props.secretType,\n      dataKey: getImageSecretKey(this.props.secretType),\n      stringData: parsedData,\n      authType: 'credentials',\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n    this.changeFormType = this.changeFormType.bind(this);\n    this.onFormDisable = this.onFormDisable.bind(this);\n  }\n  onDataChanged(secretData) {\n    const dataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n    this.setState(\n      {\n        stringData: { [dataKey]: secretData },\n      },\n      () =>\n        this.props.onChange({\n          stringData: _.mapValues(this.state.stringData, JSON.stringify),\n          type: getImageSecretType(dataKey),\n        }),\n    );\n  }\n  changeFormType(authType) {\n    this.setState({\n      authType,\n    });\n  }\n  onFormDisable(disable) {\n    this.props.onFormDisable(disable);\n  }\n  render() {\n    const authTypes = {\n      credentials: 'Image Registry Credentials',\n      'config-file': 'Upload Configuration File',\n    };\n    const data = _.get(this.state.stringData, this.state.dataKey);\n    return (\n      <>\n        {this.props.isCreate && (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              Authentication Type\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeFormType}\n              />\n            </div>\n          </div>\n        )}\n        {this.state.authType === 'credentials' ? (\n          <CreateConfigSubform onChange={this.onDataChanged} stringData={data} />\n        ) : (\n          <UploadConfigSubform\n            onChange={this.onDataChanged}\n            stringData={data}\n            onDisable={this.onFormDisable}\n          />\n        )}\n      </>\n    );\n  }\n}\n\ntype ConfigEntryFormState = {\n  address: string;\n  username: string;\n  password: string;\n  email: string;\n  auth: string;\n  uid: string;\n};\n\ntype ConfigEntryFormProps = {\n  id: number;\n  entry: Object;\n  onChange: Function;\n};\n\nclass ConfigEntryForm extends React.Component<ConfigEntryFormProps, ConfigEntryFormState> {\n  constructor(props: ConfigEntryFormProps) {\n    super(props);\n    this.state = {\n      address: _.get(this.props.entry, 'address'),\n      username: _.get(this.props.entry, 'username'),\n      password: _.get(this.props.entry, 'password'),\n      email: _.get(this.props.entry, 'email'),\n      auth: _.get(this.props.entry, 'auth'),\n      uid: _.get(this.props, 'uid'),\n    };\n  }\n\n  propagateChange = () => {\n    const { onChange, id } = this.props;\n    onChange(this.state, id);\n  };\n\n  onAddressChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ address: event.currentTarget.value }, this.propagateChange);\n  };\n\n  onUsernameChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    const username = event.currentTarget.value;\n    this.setState(\n      (state: ConfigEntryFormState) => ({\n        username,\n        auth: Base64.encode(`${username}:${state.password}`),\n      }),\n      this.propagateChange,\n    );\n  };\n\n  onPasswordChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    const password = event.currentTarget.value;\n    this.setState(\n      (state: ConfigEntryFormState) => ({\n        password,\n        auth: Base64.encode(`${state.username}:${password}`),\n      }),\n      this.propagateChange,\n    );\n  };\n\n  onEmailChanged: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ email: event.currentTarget.value }, this.propagateChange);\n  };\n\n  render() {\n    return (\n      <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-address`}>\n            Registry Server Address\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id={`${this.props.id}-address`}\n              type=\"text\"\n              name=\"address\"\n              onChange={this.onAddressChanged}\n              value={this.state.address}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-username`}>\n            Username\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id={`${this.props.id}-username`}\n              type=\"text\"\n              name=\"username\"\n              onChange={this.onUsernameChanged}\n              value={this.state.username}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-password`}>\n            Password\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id={`${this.props.id}-password`}\n              type=\"password\"\n              name=\"password\"\n              onChange={this.onPasswordChanged}\n              value={this.state.password}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor={`${this.props.id}-email`}>\n            Email\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id={`${this.props.id}-email`}\n              type=\"text\"\n              name=\"email\"\n              onChange={this.onEmailChanged}\n              value={this.state.email}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\nexport class CreateConfigSubform extends React.Component<\n  CreateConfigSubformProps,\n  CreateConfigSubformState\n> {\n  constructor(props: CreateConfigSubformProps) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button onClick={() => this.removeEntry(index)} type=\"button\" variant=\"link\">\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                Remove Credentials\n              </Button>\n            </div>\n          )}\n          <ConfigEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          Add Credentials\n        </Button>\n      </>\n    );\n  }\n}\n\nclass UploadConfigSubform extends React.Component<\n  UploadConfigSubformProps,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label=\"Configuration File\"\n          inputFieldHelpText=\"Upload a .dockercfg or .docker/config.json file.\"\n          textareaFieldHelpText=\"File with credentials and other configuration for connecting to a secured image registry.\"\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            Configuration file should be in JSON format.\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nclass WebHookSecretForm extends React.Component<WebHookSecretFormProps, WebHookSecretFormState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          Webhook Secret Key\n        </label>\n        <div className=\"pf-c-input-group\">\n          <input\n            className=\"pf-c-form-control\"\n            id=\"webhook-secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-c-button pf-m-tertiary\"\n          >\n            Generate\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          Value of the secret will be supplied when invoking the webhook.{' '}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport class SourceSecretForm extends React.Component<\n  SourceSecretFormProps,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const authTypes = {\n      [SecretType.basicAuth]: 'Basic Authentication',\n      [SecretType.sshAuth]: 'SSH Key',\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              Authentication Type\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport class BasicAuthSubform extends React.Component<\n  BasicAuthSubformProps,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            Username\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id=\"username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              Optional username for Git authentication.\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            Password or Token\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id=\"password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              Password or token for Git authentication. Required if a ca.crt or .gitconfig file is\n              not specified.\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n\nexport class SSHAuthSubform extends React.Component<SSHAuthSubformProps, SSHAuthSubformState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'ssh-privatekey': this.props.stringData['ssh-privatekey'] || '',\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        'ssh-privatekey': event.target.value,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onFileChange(fileData) {\n    this.setState(\n      {\n        'ssh-privatekey': fileData,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    return (\n      <DroppableFileInput\n        onChange={this.onFileChange}\n        inputFileData={this.state['ssh-privatekey']}\n        id=\"ssh-privatekey\"\n        label=\"SSH Private Key\"\n        inputFieldHelpText=\"Drag and drop file with your private SSH key here or browse to upload it.\"\n        textareaFieldHelpText=\"Private SSH key file for Git authentication.\"\n        isRequired={true}\n      />\n    );\n  }\n}\n\ntype KeyValueEntryFormState = {\n  key: string;\n  value: string;\n};\n\ntype KeyValueEntryFormProps = {\n  entry: KeyValueEntryFormState;\n  id: number;\n  onChange: Function;\n};\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n  secretType: SecretType;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n\nclass GenericSecretForm extends React.Component<GenericSecretFormProps, GenericSecretFormState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => ({\n      uid: _.uniqueId(),\n      entry: {\n        key,\n        value,\n      },\n    }));\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) => _.assign(acc, { [k.entry.key]: k.entry.value }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n          type: SecretType.opaque,\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n          type: SecretType.opaque,\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          stringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n          type: SecretType.opaque,\n        }),\n    );\n  }\n  render() {\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button type=\"button\" onClick={() => this.removeEntry(index)} variant=\"link\">\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                Remove Key/Value\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          Add Key/Value\n        </Button>\n      </>\n    );\n  }\n}\n\nclass KeyValueEntryForm extends React.Component<KeyValueEntryFormProps, KeyValueEntryFormState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData) {\n    this.setState(\n      {\n        value: fileData,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            Key\n          </label>\n          <div>\n            <input\n              className=\"pf-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label=\"Value\"\n              inputFieldHelpText=\"Drag and drop file with your value here or browse to upload it.\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst secretFormFactory = (secretType: SecretTypeAbstraction) => {\n  switch (secretType) {\n    case SecretTypeAbstraction.source:\n      return withSecretForm(SourceSecretForm);\n    case SecretTypeAbstraction.image:\n      return withSecretForm(ImageSecretForm);\n    case SecretTypeAbstraction.webhook:\n      return withSecretForm(WebHookSecretForm);\n    default:\n      return withSecretForm(GenericSecretForm);\n  }\n};\n\nclass SecretLoadingWrapper extends React.Component<\n  SecretLoadingWrapperProps,\n  SecretLoadingWrapperState\n> {\n  readonly state: SecretLoadingWrapperState = {\n    formComponent: null,\n    secretTypeAbstraction: SecretTypeAbstraction.generic,\n  };\n  componentDidUpdate() {\n    // Set the proper secret form component, once the secret is received by Firehose.\n    // 'formComponent' needs to be set only once, to avoid losing form state,\n    // caused by component mounting/unmounting.\n    if (!this.state.formComponent && !_.isEmpty(this.props.obj.data)) {\n      const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n      this.setState({\n        formComponent: secretFormFactory(secretTypeAbstraction),\n        secretTypeAbstraction,\n      });\n    }\n  }\n  render() {\n    const { obj, fixedKeys } = this.props;\n    const { secretTypeAbstraction } = this.state;\n    if (!this.state.formComponent) {\n      return <LoadingBox />;\n    }\n    const SecretFormComponent = this.state.formComponent;\n    const fixed = _.reduce(fixedKeys, (acc, k) => ({ ...acc, k: _.get(obj.data, k) }), {});\n    return (\n      <StatusBox {...obj}>\n        <SecretFormComponent\n          {...this.props}\n          secretTypeAbstraction={secretTypeAbstraction}\n          obj={obj.data}\n          fixed={fixed}\n          explanation={secretFormExplanation[secretTypeAbstraction]}\n        />\n      </StatusBox>\n    );\n  }\n}\n\nexport class CreateSecret extends React.Component<CreateSecretProps, CreateSecretState> {\n  readonly state: CreateSecretState = {\n    formComponent: secretFormFactory(this.props.match.params.type),\n    secretTypeAbstraction: this.props.match.params.type,\n  };\n  render() {\n    const { secretTypeAbstraction, formComponent } = this.state;\n    const { params } = this.props.match;\n    const SecretFormComponent = formComponent;\n    return (\n      <SecretFormComponent\n        fixed={{ metadata: { namespace: params.ns } }}\n        secretTypeAbstraction={secretTypeAbstraction}\n        explanation={secretFormExplanation[params.type]}\n        titleVerb=\"Create\"\n        isCreate={true}\n      />\n    );\n  }\n}\n\ntype CreateSecretProps = {\n  match: {\n    params: {\n      type: SecretTypeAbstraction;\n      ns: string;\n    };\n  };\n};\n\ntype CreateSecretState = {\n  formComponent: React.ReactType;\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n\nexport const EditSecret = ({ match: { params }, kind }) => (\n  <Firehose\n    resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n  >\n    <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} titleVerb=\"Edit\" saveButtonText=\"Save\" />\n  </Firehose>\n);\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  titleVerb: string;\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  formComponent: React.ReactType;\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n\ntype BaseEditSecretState_ = {\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  secret: K8sResourceKind;\n  inProgress: boolean;\n  type: SecretType;\n  stringData: {\n    [key: string]: string;\n  };\n  error?: any;\n  disableForm: boolean;\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate: boolean;\n  titleVerb: string;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  explanation?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n};\n\ntype ImageSecretFormState = {\n  type: SecretType;\n  stringData: {\n    [key: string]: any;\n  };\n  authType: string;\n  dataKey: string;\n};\n\ntype ImageSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  stringData: {\n    [key: string]: string;\n  };\n  secretType: SecretType;\n  isCreate: boolean;\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n\ntype SSHAuthSubformState = {\n  'ssh-privatekey': string;\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n};\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: {\n    [key: string]: string;\n  };\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: string;\n  };\n  secretType: SecretType;\n  isCreate: boolean;\n};\n\ntype WebHookSecretFormState = {\n  stringData: {\n    [key: string]: string;\n  };\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  stringData: {\n    WebHookSecretKey: string;\n  };\n};\n"]}]}