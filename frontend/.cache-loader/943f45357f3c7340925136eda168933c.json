{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/grafana.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/grafana.jsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport * as PropTypes from 'prop-types';\nimport { history, LoadingBox } from './../utils';\nimport { namespaceProptype } from '../../propTypes';\nimport { resourceListPages } from './../resource-pages';\nimport { connectToModel } from '../../kinds';\nimport { connectToFlags } from '../../reducers/features';\nimport { FLAGS } from '@console/shared/src/constants';\nimport { referenceForModel } from '../../module/k8s';\nimport { AsyncComponent } from './../utils/async';\nimport { DefaultPage } from './../default-resource';\nconst ResourceList = connectToModel(({ kindObj, kindsInFlight, namespace, selector, fake }) => {\n    if (kindsInFlight) {\n        return React.createElement(LoadingBox, null);\n    }\n    const componentLoader = resourceListPages.get(referenceForModel(kindObj), () => Promise.resolve(DefaultPage));\n    const ns = kindObj.namespaced ? namespace : undefined;\n    return React.createElement(AsyncComponent, { loader: componentLoader, namespace: ns, selector: selector, kind: kindObj.crd ? referenceForModel(kindObj) : kindObj.kind, showTitle: false, autoFocus: false, fake: fake });\n});\nconst updateUrlParams = (k, v) => {\n    const url = new URL(window.location);\n    const sp = new URLSearchParams(window.location.search);\n    sp.set(k, v);\n    history.push(`${url.pathname}?${sp.toString()}${url.hash}`);\n};\nconst updateKind = kind => updateUrlParams('kind', encodeURIComponent(kind));\nconst updateTags = tags => updateUrlParams('q', tags.map(encodeURIComponent).join(','));\nclass GrafanaPage_ extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.setRef = ref => (this.ref = ref);\n        this.onSelectorChange = k => {\n            updateKind(k);\n            this.ref && this.ref.focus();\n        };\n    }\n    render() {\n        var _a;\n        const { flags, location, namespace } = this.props;\n        let kind, q;\n        // if (flagPending(flags.OPENSHIFT) || flagPending(flags.PROJECTS_AVAILABLE)) {\n        //   return null;\n        // }\n        if (location.search) {\n            const sp = new URLSearchParams(window.location.search);\n            kind = sp.get('kind');\n            q = sp.get('q');\n        }\n        // Ensure that the \"kind\" route parameter is a valid resource kind ID\n        kind = kind ? decodeURIComponent(kind) : 'Service';\n        let ns = localStorage.getItem('bridge/last-namespace-name') === '#ALL_NS#' ? 'all-namespaces' : (_a = localStorage.getItem('bridge/last-namespace-name')) !== null && _a !== void 0 ? _a : 'all-namespaces';\n        // const showGettingStarted = flags.OPENSHIFT && !flags.PROJECTS_AVAILABLE;\n        let url = `${document.location.origin}/api/grafana/d/k8s-namespace/?var-namespace=${ns}`;\n        // let url = `${document.location.origin}/api/grafana`;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(Helmet, null,\n                    React.createElement(\"title\", null, \"GRAFANA\")),\n                React.createElement(\"iframe\", { style: { width: '100%', height: '100vh', border: 0 }, src: url, target: \"_blank\" }))));\n    }\n}\nexport const GrafanaPage = connectToFlags(FLAGS.OPENSHIFT, FLAGS.PROJECTS_AVAILABLE)(GrafanaPage_);\nGrafanaPage.propTypes = {\n    namespace: namespaceProptype,\n    location: PropTypes.object.isRequired,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/grafana.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/grafana.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as classNames from 'classnames';\r\n\r\nimport { history, SelectorInput, LoadingBox } from './../utils';\r\nimport { namespaceProptype } from '../../propTypes';\r\nimport { split, selectorFromString } from '../../module/k8s/selector';\r\nimport { requirementFromString } from '../../module/k8s/selector-requirement';\r\nimport { resourceListPages } from './../resource-pages';\r\nimport { ResourceListDropdown } from './../resource-dropdown';\r\nimport { connectToModel } from '../../kinds';\r\nimport { connectToFlags, flagPending } from '../../reducers/features';\r\nimport { FLAGS } from '@console/shared/src/constants';\r\nimport { referenceForModel, kindForReference } from '../../module/k8s';\r\nimport { AsyncComponent } from './../utils/async';\r\nimport { DefaultPage } from './../default-resource';\r\n\r\nconst ResourceList = connectToModel(({ kindObj, kindsInFlight, namespace, selector, fake }) => {\r\n  if (kindsInFlight) {\r\n    return <LoadingBox />;\r\n  }\r\n\r\n  const componentLoader = resourceListPages.get(referenceForModel(kindObj), () => Promise.resolve(DefaultPage));\r\n  const ns = kindObj.namespaced ? namespace : undefined;\r\n\r\n  return <AsyncComponent loader={componentLoader} namespace={ns} selector={selector} kind={kindObj.crd ? referenceForModel(kindObj) : kindObj.kind} showTitle={false} autoFocus={false} fake={fake} />;\r\n});\r\n\r\nconst updateUrlParams = (k, v) => {\r\n  const url = new URL(window.location);\r\n  const sp = new URLSearchParams(window.location.search);\r\n  sp.set(k, v);\r\n  history.push(`${url.pathname}?${sp.toString()}${url.hash}`);\r\n};\r\n\r\nconst updateKind = kind => updateUrlParams('kind', encodeURIComponent(kind));\r\nconst updateTags = tags => updateUrlParams('q', tags.map(encodeURIComponent).join(','));\r\n\r\nclass GrafanaPage_ extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setRef = ref => (this.ref = ref);\r\n    this.onSelectorChange = k => {\r\n      updateKind(k);\r\n      this.ref && this.ref.focus();\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { flags, location, namespace } = this.props;\r\n    let kind, q;\r\n\r\n    // if (flagPending(flags.OPENSHIFT) || flagPending(flags.PROJECTS_AVAILABLE)) {\r\n    //   return null;\r\n    // }\r\n\r\n    if (location.search) {\r\n      const sp = new URLSearchParams(window.location.search);\r\n      kind = sp.get('kind');\r\n      q = sp.get('q');\r\n    }\r\n\r\n    // Ensure that the \"kind\" route parameter is a valid resource kind ID\r\n    kind = kind ? decodeURIComponent(kind) : 'Service';\r\n    let ns = localStorage.getItem('bridge/last-namespace-name') === '#ALL_NS#' ? 'all-namespaces' : localStorage.getItem('bridge/last-namespace-name') ?? 'all-namespaces';\r\n    // const showGettingStarted = flags.OPENSHIFT && !flags.PROJECTS_AVAILABLE;\r\n    let url = `${document.location.origin}/api/grafana/d/k8s-namespace/?var-namespace=${ns}`;\r\n    // let url = `${document.location.origin}/api/grafana`;\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Helmet>\r\n            <title>GRAFANA</title>\r\n          </Helmet>\r\n          {/* <NavTitle title=\"GRAFANA\"></NavTitle> */}\r\n          <iframe style={{ width: '100%', height: '100vh', border: 0 }} src={url} target=\"_blank\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport const GrafanaPage = connectToFlags(FLAGS.OPENSHIFT, FLAGS.PROJECTS_AVAILABLE)(GrafanaPage_);\r\n\r\nGrafanaPage.propTypes = {\r\n  namespace: namespaceProptype,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n"]}]}