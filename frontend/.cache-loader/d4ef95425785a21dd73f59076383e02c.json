{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/details-page.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/details-page.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { Translation } from 'react-i18next';\nimport { DetailsItem } from './details-item';\nimport { Kebab } from './kebab';\nimport { LabelList } from './label-list';\nimport { OwnerReferences } from './owner-references';\nimport { ResourceLink } from './resource-link';\nimport { Selector } from './selector';\nimport { Timestamp } from './timestamp';\nimport { useAccessReview } from './rbac';\nimport { modelFor, referenceFor } from '../../module/k8s';\nexport const pluralize = (i, singular, plural = `${singular}s`, includeCount = true) => {\n    const pluralized = `${i === 1 ? singular : plural}`;\n    return includeCount ? `${i || 0} ${pluralized}` : pluralized;\n};\nexport const detailsPage = (Component) => function DetailsPage(props) {\n    return React.createElement(Component, Object.assign({}, props));\n};\nconst getTolerationsPath = (obj) => {\n    // FIXME: Is this correct for all types (jobs, cron jobs)? It would be better for the embedding page to pass in the path.\n    return obj.kind === 'Pod' ? 'spec.tolerations' : 'spec.template.spec.tolerations';\n};\nexport const ResourceSummary = ({ children, resource, customPathName, showName = true, showOwner = true, showID = false, showPodSelector = false, showNodeSelector = false, showAnnotations = true, showTolerations = false, podSelector = 'spec.selector', nodeSelector = 'spec.template.spec.nodeSelector' }) => {\n    const { metadata, type } = resource;\n    const reference = referenceFor(resource);\n    const model = modelFor(reference);\n    const tolerationsPath = getTolerationsPath(resource);\n    const tolerations = _.get(resource, tolerationsPath);\n    const canUpdate = useAccessReview({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'patch',\n        name: metadata.name,\n        namespace: metadata.namespace,\n    });\n    return (React.createElement(Translation, null, t => (React.createElement(\"dl\", { \"data-test-id\": \"resource-summary\", className: \"co-m-pane__details\" },\n        showName && React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_5'), obj: resource, path: customPathName || 'metadata.name' }),\n        showID && React.createElement(DetailsItem, { label: \"ID\", obj: resource, path: 'metadata.uid' }),\n        metadata.namespace && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_6'), obj: resource, path: \"metadata.namespace\" },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: metadata.namespace, title: metadata.uid, namespace: null }))),\n        type ? React.createElement(\"dt\", null, \"Type\") : null,\n        type ? React.createElement(\"dd\", null, type) : null,\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_8'), obj: resource, path: \"metadata.labels\" },\n            React.createElement(LabelList, { kind: reference, labels: metadata.labels })),\n        showPodSelector && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_9'), obj: resource, path: podSelector },\n            React.createElement(Selector, { selector: _.get(resource, podSelector), namespace: _.get(resource, 'metadata.namespace') }))),\n        showNodeSelector && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_10'), obj: resource, path: nodeSelector },\n            React.createElement(Selector, { kind: \"Node\", selector: _.get(resource, nodeSelector) }))),\n        showTolerations && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_11'), obj: resource, path: tolerationsPath }, canUpdate ? (React.createElement(Button, { type: \"button\", isInline: true, onClick: Kebab.factory.ModifyTolerations(model, resource).callback, variant: \"link\" },\n            pluralize(_.size(tolerations), 'Toleration'),\n            React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" }))) : (pluralize(_.size(tolerations), 'Toleration')))),\n        showAnnotations && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_12'), obj: resource, path: \"metadata.annotations\" }, canUpdate ? (React.createElement(Button, { \"data-test-id\": \"edit-annotations\", type: \"button\", isInline: true, onClick: Kebab.factory.ModifyAnnotations(model, resource).callback, variant: \"link\" },\n            pluralize(_.size(metadata.annotations), 'Annotation'),\n            React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" }))) : (pluralize(_.size(metadata.annotations), 'Annotation')))),\n        children,\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_43'), obj: resource, path: \"metadata.creationTimestamp\" },\n            React.createElement(Timestamp, { timestamp: metadata.creationTimestamp })),\n        showOwner && (React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_44'), obj: resource, path: \"metadata.ownerReferences\" },\n            React.createElement(OwnerReferences, { resource: resource })))))));\n};\nexport const ResourcePodCount = ({ resource }) => (React.createElement(Translation, null, t => (React.createElement(\"dl\", null,\n    React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38'), obj: resource, path: \"status.replicas\", defaultValue: \"0\" }),\n    React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39'), obj: resource, path: \"spec.replicas\", defaultValue: \"0\" })))));\nResourceSummary.displayName = 'ResourceSummary';\nResourcePodCount.displayName = 'ResourcePodCount';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/details-page.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/utils/details-page.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport { Translation } from 'react-i18next';\nimport { DetailsItem } from './details-item';\nimport { Kebab } from './kebab';\nimport { LabelList } from './label-list';\nimport { OwnerReferences } from './owner-references';\nimport { ResourceLink } from './resource-link';\nimport { Selector } from './selector';\nimport { Timestamp } from './timestamp';\nimport { useAccessReview } from './rbac';\nimport { K8sResourceKind, modelFor, referenceFor, Toleration } from '../../module/k8s';\n\nexport const pluralize = (i: number, singular: string, plural: string = `${singular}s`, includeCount: boolean = true) => {\n  const pluralized = `${i === 1 ? singular : plural}`;\n  return includeCount ? `${i || 0} ${pluralized}` : pluralized;\n};\n\nexport const detailsPage = <T extends {}>(Component: React.ComponentType<T>) =>\n  function DetailsPage(props: T) {\n    return <Component {...props} />;\n  };\n\nconst getTolerationsPath = (obj: K8sResourceKind): string => {\n  // FIXME: Is this correct for all types (jobs, cron jobs)? It would be better for the embedding page to pass in the path.\n  return obj.kind === 'Pod' ? 'spec.tolerations' : 'spec.template.spec.tolerations';\n};\n\nexport const ResourceSummary: React.SFC<ResourceSummaryProps> = ({ children, resource, customPathName, showName = true, showOwner = true, showID = false, showPodSelector = false, showNodeSelector = false, showAnnotations = true, showTolerations = false, podSelector = 'spec.selector', nodeSelector = 'spec.template.spec.nodeSelector' }) => {\n  const { metadata, type } = resource;\n  const reference = referenceFor(resource);\n  const model = modelFor(reference);\n  const tolerationsPath = getTolerationsPath(resource);\n  const tolerations: Toleration[] = _.get(resource, tolerationsPath);\n  const canUpdate = useAccessReview({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'patch',\n    name: metadata.name,\n    namespace: metadata.namespace,\n  });\n\n  return (\n    <Translation>\n      {t => (\n        <dl data-test-id=\"resource-summary\" className=\"co-m-pane__details\">\n          {showName && <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_5')} obj={resource} path={customPathName || 'metadata.name'} />}\n          {showID && <DetailsItem label=\"ID\" obj={resource} path={'metadata.uid'} />}\n          {metadata.namespace && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_6')} obj={resource} path=\"metadata.namespace\">\n              <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.uid} namespace={null} />\n            </DetailsItem>\n          )}\n          {type ? <dt>Type</dt> : null}\n          {type ? <dd>{type}</dd> : null}\n          <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_8')} obj={resource} path=\"metadata.labels\">\n            <LabelList kind={reference} labels={metadata.labels} />\n          </DetailsItem>\n          {showPodSelector && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_9')} obj={resource} path={podSelector}>\n              <Selector selector={_.get(resource, podSelector)} namespace={_.get(resource, 'metadata.namespace')} />\n            </DetailsItem>\n          )}\n          {showNodeSelector && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_10')} obj={resource} path={nodeSelector}>\n              <Selector kind=\"Node\" selector={_.get(resource, nodeSelector)} />\n            </DetailsItem>\n          )}\n          {showTolerations && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_11')} obj={resource} path={tolerationsPath}>\n              {canUpdate ? (\n                <Button type=\"button\" isInline onClick={Kebab.factory.ModifyTolerations(model, resource).callback} variant=\"link\">\n                  {pluralize(_.size(tolerations), 'Toleration')}\n                  <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n                </Button>\n              ) : (\n                pluralize(_.size(tolerations), 'Toleration')\n              )}\n            </DetailsItem>\n          )}\n          {showAnnotations && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_12')} obj={resource} path=\"metadata.annotations\">\n              {canUpdate ? (\n                <Button data-test-id=\"edit-annotations\" type=\"button\" isInline onClick={Kebab.factory.ModifyAnnotations(model, resource).callback} variant=\"link\">\n                  {pluralize(_.size(metadata.annotations), 'Annotation')}\n                  <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n                </Button>\n              ) : (\n                pluralize(_.size(metadata.annotations), 'Annotation')\n              )}\n            </DetailsItem>\n          )}\n          {children}\n          <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_43')} obj={resource} path=\"metadata.creationTimestamp\">\n            <Timestamp timestamp={metadata.creationTimestamp} />\n          </DetailsItem>\n          {showOwner && (\n            <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_44')} obj={resource} path=\"metadata.ownerReferences\">\n              <OwnerReferences resource={resource} />\n            </DetailsItem>\n          )}\n        </dl>\n      )}\n    </Translation>\n  );\n};\n\nexport const ResourcePodCount: React.SFC<ResourcePodCountProps> = ({ resource }) => (\n  <Translation>\n    {t => (\n      <dl>\n        <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38')} obj={resource} path=\"status.replicas\" defaultValue=\"0\" />\n        <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39')} obj={resource} path=\"spec.replicas\" defaultValue=\"0\" />\n      </dl>\n    )}\n  </Translation>\n);\n\nexport type ResourceSummaryProps = {\n  resource: K8sResourceKind;\n  showName?: boolean;\n  showID?: boolean;\n  showPodSelector?: boolean;\n  showNodeSelector?: boolean;\n  showAnnotations?: boolean;\n  showTolerations?: boolean;\n  showOwner?: boolean;\n  podSelector?: string;\n  nodeSelector?: string;\n  children?: React.ReactNode;\n  customPathName?: string;\n};\n\nexport type ResourcePodCountProps = {\n  resource: K8sResourceKind;\n};\n\nResourceSummary.displayName = 'ResourceSummary';\nResourcePodCount.displayName = 'ResourcePodCount';\n"]}]}