{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostNICs.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostNICs.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { OutlinedCheckSquareIcon, OutlinedSquareIcon } from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Table, TableRow, TableData } from '@console/internal/components/factory';\nimport { getHostNICs } from '../../selectors';\nconst NICsTableHeader = () => [\n    { title: 'Name', sortField: 'name', transforms: [sortable] },\n    { title: 'Model', sortField: 'model', transforms: [sortable] },\n    { title: 'PXE', sortField: 'pxe', transforms: [sortable] },\n    { title: 'IP', sortField: 'ip', transforms: [sortable] },\n    { title: 'Speed', sortField: 'speedGbps', transforms: [sortable] },\n    { title: 'MAC Address', sortField: 'mac', transforms: [sortable] },\n    { title: 'VLAN ID', sortField: 'vlanId', transforms: [sortable] },\n];\nconst NICsTableRow = ({ obj: nic, index, key, style }) => {\n    const { ip, mac, model, name, pxe, speedGbps, vlanId } = nic;\n    return (React.createElement(TableRow, { id: ip, index: index, trKey: key, style: style },\n        React.createElement(TableData, null, name),\n        React.createElement(TableData, null, model),\n        React.createElement(TableData, null, pxe ? React.createElement(OutlinedCheckSquareIcon, null) : React.createElement(OutlinedSquareIcon, null)),\n        React.createElement(TableData, null, ip),\n        React.createElement(TableData, null,\n            speedGbps,\n            \" Gbps\"),\n        React.createElement(TableData, null, mac),\n        React.createElement(TableData, null, vlanId)));\n};\nconst BareMetalHostNICs = ({ obj: host, loadError }) => {\n    const nics = getHostNICs(host);\n    return (React.createElement(\"div\", { className: \"co-m-list\" },\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(Table, { data: nics, \"aria-label\": \"Bare Metal Host NICs\", Header: NICsTableHeader, Row: NICsTableRow, loaded: !!host, loadError: loadError }))));\n};\nexport default BareMetalHostNICs;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostNICs.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/BareMetalHostNICs.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AACtF,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,sCAAsC,CAAC;AAC/F,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC;IAC5B,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IAC5D,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IAC9D,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IAC1D,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IACxD,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IAClE,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;IAClE,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAE;CAClE,CAAC;AAEF,MAAM,YAAY,GAAkC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;IACtF,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;IAC7D,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QACtD,oBAAC,SAAS,QAAE,IAAI,CAAa;QAC7B,oBAAC,SAAS,QAAE,KAAK,CAAa;QAC9B,oBAAC,SAAS,QAAE,GAAG,CAAC,CAAC,CAAC,oBAAC,uBAAuB,OAAG,CAAC,CAAC,CAAC,oBAAC,kBAAkB,OAAG,CAAa;QACnF,oBAAC,SAAS,QAAE,EAAE,CAAa;QAC3B,oBAAC,SAAS;YAAE,SAAS;oBAAkB;QACvC,oBAAC,SAAS,QAAE,GAAG,CAAa;QAC5B,oBAAC,SAAS,QAAE,MAAM,CAAa,CACtB,CACZ,CAAC;AACJ,CAAC,CAAC;AAOF,MAAM,iBAAiB,GAAqC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACvF,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/B,OAAO,CACL,6BAAK,SAAS,EAAC,WAAW;QACxB,6BAAK,SAAS,EAAC,iBAAiB;YAC9B,oBAAC,KAAK,IACJ,IAAI,EAAE,IAAI,gBACC,sBAAsB,EACjC,MAAM,EAAE,eAAe,EACvB,GAAG,EAAE,YAAY,EACjB,MAAM,EAAE,CAAC,CAAC,IAAI,EACd,SAAS,EAAE,SAAS,GACpB,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport { OutlinedCheckSquareIcon, OutlinedSquareIcon } from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Table, TableRow, TableData, RowFunction } from '@console/internal/components/factory';\nimport { getHostNICs } from '../../selectors';\nimport { BareMetalHostNIC, BareMetalHostKind } from '../../types';\n\nconst NICsTableHeader = () => [\n  { title: 'Name', sortField: 'name', transforms: [sortable] },\n  { title: 'Model', sortField: 'model', transforms: [sortable] },\n  { title: 'PXE', sortField: 'pxe', transforms: [sortable] },\n  { title: 'IP', sortField: 'ip', transforms: [sortable] },\n  { title: 'Speed', sortField: 'speedGbps', transforms: [sortable] },\n  { title: 'MAC Address', sortField: 'mac', transforms: [sortable] },\n  { title: 'VLAN ID', sortField: 'vlanId', transforms: [sortable] },\n];\n\nconst NICsTableRow: RowFunction<BareMetalHostNIC> = ({ obj: nic, index, key, style }) => {\n  const { ip, mac, model, name, pxe, speedGbps, vlanId } = nic;\n  return (\n    <TableRow id={ip} index={index} trKey={key} style={style}>\n      <TableData>{name}</TableData>\n      <TableData>{model}</TableData>\n      <TableData>{pxe ? <OutlinedCheckSquareIcon /> : <OutlinedSquareIcon />}</TableData>\n      <TableData>{ip}</TableData>\n      <TableData>{speedGbps} Gbps</TableData>\n      <TableData>{mac}</TableData>\n      <TableData>{vlanId}</TableData>\n    </TableRow>\n  );\n};\n\ntype BareMetalHostNICsProps = {\n  obj: BareMetalHostKind;\n  loadError?: any;\n};\n\nconst BareMetalHostNICs: React.FC<BareMetalHostNICsProps> = ({ obj: host, loadError }) => {\n  const nics = getHostNICs(host);\n  return (\n    <div className=\"co-m-list\">\n      <div className=\"co-m-pane__body\">\n        <Table\n          data={nics}\n          aria-label=\"Bare Metal Host NICs\"\n          Header={NICsTableHeader}\n          Row={NICsTableRow}\n          loaded={!!host}\n          loadError={loadError}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BareMetalHostNICs;\n"]}]}