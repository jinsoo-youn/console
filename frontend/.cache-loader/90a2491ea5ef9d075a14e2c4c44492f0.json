{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/operand-form.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/operand-form.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { history, useScrollToTopOnMount } from '@console/internal/components/utils';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { ClusterServiceVersionLogo } from '../index';\nimport { DynamicForm } from '@console/shared/src/components/dynamic-form';\nimport { getUISchema } from './utils';\nexport const OperandForm = ({ csv, formData, match, model, next, onChange, providedAPI, prune, schema }) => {\n    const [errors, setErrors] = React.useState([]);\n    // const [formData, setFormData] = React.useState(initialData);\n    const processFormData = (_a) => {\n        var _b, _c;\n        var { metadata } = _a, rest = __rest(_a, [\"metadata\"]);\n        const data = Object.assign({ metadata: Object.assign(Object.assign({}, metadata), (((_b = match === null || match === void 0 ? void 0 : match.params) === null || _b === void 0 ? void 0 : _b.ns) && model.namespaced && { namespace: match.params.ns })) }, rest);\n        return (_c = prune === null || prune === void 0 ? void 0 : prune(data)) !== null && _c !== void 0 ? _c : data;\n    };\n    const handleSubmit = ({ formData: submitFormData }) => {\n        k8sCreate(model, processFormData(submitFormData))\n            .then(() => {\n            if (next) {\n                next += `/${submitFormData.metadata.name}`;\n                history.push(next);\n            }\n        })\n            .catch(e => setErrors([e.message]));\n    };\n    const uiSchema = React.useMemo(() => getUISchema(schema, providedAPI), [schema, providedAPI]);\n    useScrollToTopOnMount();\n    return (React.createElement(\"div\", { className: \"co-m-pane__body\" },\n        React.createElement(\"div\", { className: \"row\" },\n            React.createElement(\"div\", { className: \"col-md-0 col-md-push-12 col-lg-1 col-lg-push-11\" }, csv && providedAPI && (React.createElement(\"div\", { style: { marginBottom: '30px' } },\n                React.createElement(ClusterServiceVersionLogo, { displayName: providedAPI.displayName, icon: _.get(csv, 'spec.icon[0]'), provider: _.get(csv, 'spec.provider') }),\n                providedAPI.description))),\n            React.createElement(\"div\", { className: \"col-md-12 col-md-pull-0 col-lg-11 col-lg-pull-1\" },\n                React.createElement(DynamicForm, { noValidate: true, errors: errors, formContext: { namespace: match.params.ns }, uiSchema: uiSchema, formData: formData, onChange: onChange, onError: setErrors, onSubmit: handleSubmit, schema: schema })))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/operand-form.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operand/operand-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { JSONSchema6 } from 'json-schema';\nimport { k8sCreate, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { history, useScrollToTopOnMount } from '@console/internal/components/utils';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { ClusterServiceVersionKind, CRDDescription, APIServiceDefinition } from '../../types';\nimport { ClusterServiceVersionLogo } from '../index';\nimport { DynamicForm } from '@console/shared/src/components/dynamic-form';\nimport { getUISchema } from './utils';\n\nexport const OperandForm: React.FC<OperandFormProps> = ({ csv, formData, match, model, next, onChange, providedAPI, prune, schema }) => {\n  const [errors, setErrors] = React.useState<string[]>([]);\n  // const [formData, setFormData] = React.useState(initialData);\n\n  const processFormData = ({ metadata, ...rest }) => {\n    const data = {\n      metadata: {\n        ...metadata,\n        ...(match?.params?.ns && model.namespaced && { namespace: match.params.ns }),\n      },\n      ...rest,\n    };\n    return prune?.(data) ?? data;\n  };\n\n  const handleSubmit = ({ formData: submitFormData }) => {\n    k8sCreate(model, processFormData(submitFormData))\n      .then(() => {\n        if (next) {\n          next += `/${submitFormData.metadata.name}`;\n          history.push(next);\n        }\n      })\n      .catch(e => setErrors([e.message]));\n  };\n\n  const uiSchema = React.useMemo(() => getUISchema(schema, providedAPI), [schema, providedAPI]);\n\n  useScrollToTopOnMount();\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <div className=\"row\">\n        <div className=\"col-md-0 col-md-push-12 col-lg-1 col-lg-push-11\">\n          {csv && providedAPI && (\n            <div style={{ marginBottom: '30px' }}>\n              <ClusterServiceVersionLogo displayName={providedAPI.displayName} icon={_.get(csv, 'spec.icon[0]')} provider={_.get(csv, 'spec.provider')} />\n              {providedAPI.description}\n            </div>\n          )}\n        </div>\n        <div className=\"col-md-12 col-md-pull-0 col-lg-11 col-lg-pull-1\">\n          <DynamicForm noValidate errors={errors} formContext={{ namespace: match.params.ns }} uiSchema={uiSchema} formData={formData} onChange={onChange} onError={setErrors} onSubmit={handleSubmit} schema={schema} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype ProvidedAPI = CRDDescription | APIServiceDefinition;\n\nexport type OperandFormProps = {\n  formData?: K8sResourceKind;\n  onChange?: (formData?: any) => void;\n  match: { params: { ns: string } };\n  next?: string;\n  csv: ClusterServiceVersionKind;\n  model: K8sKind;\n  providedAPI: ProvidedAPI;\n  prune?: (data: any) => any;\n  schema: JSONSchema6;\n};\n"]}]}