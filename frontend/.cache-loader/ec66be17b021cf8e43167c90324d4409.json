{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/data-consumption-card/data-consumption-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/data-consumption-card/data-consumption-card.tsx","mtime":1615298458680},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartThemeColor, ChartTooltip, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { BY_IOPS, CHART_LABELS, PROVIDERS, BY_EGRESS } from '../../constants';\nimport { DataConsumersValue, DataConsumersSortByValue, getDataConsumptionChartData, getQueries, numberInWords, } from './data-consumption-card-utils';\nimport { DataConsumptionDropdown } from './data-consumption-card-dropdown';\nimport './data-consumption-card.scss';\nconst DataConsumptionCard = ({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, }) => {\n    const [metricType, setMetricType] = React.useState(PROVIDERS);\n    const [sortByKpi, setsortByKpi] = React.useState(BY_IOPS);\n    React.useEffect(() => {\n        const { queries, keys } = getQueries(metricType, sortByKpi);\n        keys.forEach((key) => watchPrometheus(queries[key]));\n        return () => keys.forEach((key) => stopWatchPrometheusQuery(queries[key]));\n    }, [watchPrometheus, stopWatchPrometheusQuery, metricType, sortByKpi]);\n    const { queries, keys } = getQueries(metricType, sortByKpi);\n    const result = {};\n    const error = keys.some((key) => prometheusResults.getIn([queries[key], 'loadError']));\n    keys.forEach((key) => {\n        result[key] = prometheusResults.getIn([queries[key], 'data']); // building an object having 'key'from the queries object and 'value' as the Prometheus response\n    });\n    let padding;\n    let suffixLabel = '';\n    let maxVal;\n    let maxUnit;\n    let body;\n    const isLoading = _.values(result).includes(undefined);\n    const metric = metricType === PROVIDERS ? 'type' : 'account';\n    const curentDropdown = DataConsumersValue[metricType] + DataConsumersSortByValue[sortByKpi];\n    const { chartData, legendData, max } = getDataConsumptionChartData(result, metric, curentDropdown);\n    // chartData = [[],[],[],[],[],[]] or []\n    if (!chartData.some(_.isEmpty)) {\n        padding =\n            chartData[0].length === 2 || (sortByKpi === BY_EGRESS && chartData.length === 2) ? 125 : 25; // Adjusts spacing between each BarGroup\n        maxVal = max.value;\n        maxUnit = max.unit;\n        suffixLabel = maxUnit;\n        if (sortByKpi === BY_IOPS) {\n            suffixLabel = numberInWords[maxUnit];\n        }\n        // if suffixLabel is a non-empty string, show it in expected form\n        if (suffixLabel)\n            suffixLabel = `(in ${suffixLabel})`;\n    }\n    if (isLoading) {\n        body = (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"skeleton-text nb-data-consumption-card__chart-skeleton\" }),\n            React.createElement(GraphEmpty, { height: 200, loading: true }),\n            React.createElement(\"div\", { className: \"skeleton-text nb-data-consumption-card__chart-legend-skeleton\" })));\n    }\n    else if (!error && !chartData.some(_.isEmpty)) {\n        body = (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"nb-data-consumption-card__chart-label text-secondary\" },\n                CHART_LABELS[sortByKpi],\n                \" \",\n                suffixLabel),\n            React.createElement(Chart, { containerComponent: React.createElement(ChartVoronoiContainer, { labelComponent: React.createElement(ChartTooltip, { style: { fontSize: 8, paddingBottom: 0 } }), labels: ({ datum }) => `${datum.y} ${maxUnit}`, voronoiDimension: \"x\" }), minDomain: { y: 0 }, maxDomain: { y: maxVal + Math.round(maxVal * 0.25) }, domainPadding: { x: [padding, padding] }, legendComponent: React.createElement(ChartLegend, { themeColor: ChartThemeColor.purple, data: legendData, orientation: \"horizontal\", symbolSpacer: 5, gutter: 2, height: 30, padding: { top: 50, bottom: 0 }, style: { labels: { fontSize: 8 } } }), legendPosition: \"bottom-left\", padding: {\n                    bottom: 50,\n                    left: 30,\n                    right: 20,\n                    top: 30,\n                }, themeColor: ChartThemeColor.purple },\n                React.createElement(ChartAxis, { style: { tickLabels: { fontSize: 8, padding: 2 } } }),\n                React.createElement(ChartAxis, { dependentAxis: true, showGrid: true, tickCount: 10, style: {\n                        tickLabels: { fontSize: 8, padding: 0 },\n                    } }),\n                React.createElement(ChartGroup, { offset: sortByKpi === BY_EGRESS ? 0 : 11 }, chartData.map((data, i) => (React.createElement(ChartBar, { key: `chartbar-${i}`, data: data }) // eslint-disable-line react/no-array-index-key\n                ))))));\n    }\n    else {\n        body = React.createElement(GraphEmpty, null);\n    }\n    return (React.createElement(DashboardCard, null,\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Data Consumption\"),\n            React.createElement(DataConsumptionDropdown, { type: metricType, setType: setMetricType, kpi: sortByKpi, setKpi: setsortByKpi })),\n        React.createElement(DashboardCardBody, { className: \"co-dashboard-card__body--top-margin\" }, body)));\n};\nexport default withDashboardResources(DataConsumptionCard);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/data-consumption-card/data-consumption-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/noobaa-storage-plugin/src/components/data-consumption-card/data-consumption-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartLegend,\n  ChartThemeColor,\n  ChartTooltip,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport {\n  DashboardItemProps,\n  withDashboardResources,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { BY_IOPS, CHART_LABELS, PROVIDERS, BY_EGRESS } from '../../constants';\nimport {\n  DataConsumersValue,\n  DataConsumersSortByValue,\n  getDataConsumptionChartData,\n  getQueries,\n  numberInWords,\n} from './data-consumption-card-utils';\nimport { DataConsumptionDropdown } from './data-consumption-card-dropdown';\nimport './data-consumption-card.scss';\n\nconst DataConsumptionCard: React.FC<DashboardItemProps> = ({\n  watchPrometheus,\n  stopWatchPrometheusQuery,\n  prometheusResults,\n}) => {\n  const [metricType, setMetricType] = React.useState(PROVIDERS);\n  const [sortByKpi, setsortByKpi] = React.useState(BY_IOPS);\n\n  React.useEffect(() => {\n    const { queries, keys } = getQueries(metricType, sortByKpi);\n    keys.forEach((key) => watchPrometheus(queries[key]));\n    return () => keys.forEach((key) => stopWatchPrometheusQuery(queries[key]));\n  }, [watchPrometheus, stopWatchPrometheusQuery, metricType, sortByKpi]);\n\n  const { queries, keys } = getQueries(metricType, sortByKpi);\n  const result: { [key: string]: PrometheusResponse } = {};\n  const error = keys.some((key) => prometheusResults.getIn([queries[key], 'loadError']));\n  keys.forEach((key) => {\n    result[key] = prometheusResults.getIn([queries[key], 'data']); // building an object having 'key'from the queries object and 'value' as the Prometheus response\n  });\n\n  let padding: number;\n  let suffixLabel = '';\n  let maxVal: number;\n  let maxUnit: string;\n  let body: React.ReactNode;\n\n  const isLoading = _.values(result).includes(undefined);\n\n  const metric = metricType === PROVIDERS ? 'type' : 'account';\n  const curentDropdown = DataConsumersValue[metricType] + DataConsumersSortByValue[sortByKpi];\n  const { chartData, legendData, max } = getDataConsumptionChartData(\n    result,\n    metric,\n    curentDropdown,\n  );\n\n  // chartData = [[],[],[],[],[],[]] or []\n  if (!chartData.some(_.isEmpty)) {\n    padding =\n      chartData[0].length === 2 || (sortByKpi === BY_EGRESS && chartData.length === 2) ? 125 : 25; // Adjusts spacing between each BarGroup\n    maxVal = max.value;\n    maxUnit = max.unit;\n    suffixLabel = maxUnit;\n    if (sortByKpi === BY_IOPS) {\n      suffixLabel = numberInWords[maxUnit];\n    }\n    // if suffixLabel is a non-empty string, show it in expected form\n    if (suffixLabel) suffixLabel = `(in ${suffixLabel})`;\n  }\n\n  if (isLoading) {\n    body = (\n      <>\n        <div className=\"skeleton-text nb-data-consumption-card__chart-skeleton\" />\n        <GraphEmpty height={200} loading />\n        <div className=\"skeleton-text nb-data-consumption-card__chart-legend-skeleton\" />\n      </>\n    );\n  } else if (!error && !chartData.some(_.isEmpty)) {\n    body = (\n      <>\n        <div className=\"nb-data-consumption-card__chart-label text-secondary\">\n          {CHART_LABELS[sortByKpi]} {suffixLabel}\n        </div>\n        <Chart\n          containerComponent={\n            <ChartVoronoiContainer\n              labelComponent={<ChartTooltip style={{ fontSize: 8, paddingBottom: 0 }} />}\n              labels={({ datum }) => `${datum.y} ${maxUnit}`}\n              voronoiDimension=\"x\"\n            />\n          }\n          minDomain={{ y: 0 }}\n          maxDomain={{ y: maxVal + Math.round(maxVal * 0.25) }}\n          domainPadding={{ x: [padding, padding] }}\n          legendComponent={\n            <ChartLegend\n              themeColor={ChartThemeColor.purple}\n              data={legendData}\n              orientation=\"horizontal\"\n              symbolSpacer={5}\n              gutter={2}\n              height={30}\n              padding={{ top: 50, bottom: 0 }}\n              style={{ labels: { fontSize: 8 } }}\n            />\n          }\n          legendPosition=\"bottom-left\"\n          padding={{\n            bottom: 50,\n            left: 30,\n            right: 20,\n            top: 30,\n          }}\n          themeColor={ChartThemeColor.purple}\n        >\n          <ChartAxis style={{ tickLabels: { fontSize: 8, padding: 2 } }} />\n          <ChartAxis\n            dependentAxis\n            showGrid\n            tickCount={10}\n            style={{\n              tickLabels: { fontSize: 8, padding: 0 },\n            }}\n          />\n          <ChartGroup offset={sortByKpi === BY_EGRESS ? 0 : 11}>\n            {chartData.map((data, i) => (\n              <ChartBar key={`chartbar-${i}`} data={data} /> // eslint-disable-line react/no-array-index-key\n            ))}\n          </ChartGroup>\n        </Chart>\n      </>\n    );\n  } else {\n    body = <GraphEmpty />;\n  }\n\n  return (\n    <DashboardCard>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Data Consumption</DashboardCardTitle>\n        <DataConsumptionDropdown\n          type={metricType}\n          setType={setMetricType}\n          kpi={sortByKpi}\n          setKpi={setsortByKpi}\n        />\n      </DashboardCardHeader>\n      <DashboardCardBody className=\"co-dashboard-card__body--top-margin\">{body}</DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default withDashboardResources(DataConsumptionCard);\n"]}]}