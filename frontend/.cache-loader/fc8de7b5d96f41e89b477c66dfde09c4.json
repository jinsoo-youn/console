{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/common/util/k8s-mixin.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/common/util/k8s-mixin.ts","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { apiVersionForModel } from '@console/internal/module/k8s/k8s';\nimport { ensurePath } from '../../utils/utils';\nimport { omitEmpty } from '../../../../utils/common';\nexport const initK8sObject = (base, model, { name, generateName, namespace, labels, annotations } = {}) => {\n    if (base && model) {\n        base.kind = model.kind;\n        base.apiVersion = apiVersionForModel(model);\n        ensurePath(base, 'metadata');\n        const { metadata } = base;\n        if (name) {\n            metadata.name = name;\n            metadata.generateName = undefined;\n        }\n        else if (generateName) {\n            metadata.name = undefined;\n            metadata.generateName = generateName;\n        }\n        metadata.namespace = namespace || metadata.namespace;\n        metadata.labels = labels || metadata.labels;\n        metadata.annotations = annotations || metadata.annotations;\n        omitEmpty(metadata, true);\n    }\n};\nexport const clearMetadata = (base) => {\n    if (base === null || base === void 0 ? void 0 : base.metadata) {\n        delete base.metadata;\n    }\n};\nexport const clearRuntimeMetadata = (base) => {\n    if (base) {\n        delete base.status;\n    }\n    if (base === null || base === void 0 ? void 0 : base.metadata) {\n        const { metadata } = base;\n        delete metadata.selfLink;\n        delete metadata.resourceVersion;\n        delete metadata.uid;\n        delete metadata.creationTimestamp;\n        delete metadata.deletionTimestamp;\n        delete metadata.generation;\n    }\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/common/util/k8s-mixin.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/common/util/k8s-mixin.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAUrD,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,IAAuB,EACvB,KAAc,EACd,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,KAAmB,EAAE,EACzE,EAAE;IACF,IAAI,IAAI,IAAI,KAAK,EAAE;QACjB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAE5C,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC7B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC1B,IAAI,IAAI,EAAE;YACR,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,QAAQ,CAAC,YAAY,GAAG,SAAS,CAAC;SACnC;aAAM,IAAI,YAAY,EAAE;YACvB,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;YAC1B,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC;SACtC;QACD,QAAQ,CAAC,SAAS,GAAG,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAC;QACrD,QAAQ,CAAC,MAAM,GAAG,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC;QAC5C,QAAQ,CAAC,WAAW,GAAG,WAAW,IAAI,QAAQ,CAAC,WAAW,CAAC;QAC3D,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3B;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAuB,EAAE,EAAE;IACvD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,EAAE;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,IAAuB,EAAE,EAAE;IAC9D,IAAI,IAAI,EAAE;QACR,OAAQ,IAAY,CAAC,MAAM,CAAC;KAC7B;IACD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,EAAE;QAClB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC1B,OAAO,QAAQ,CAAC,QAAQ,CAAC;QACzB,OAAO,QAAQ,CAAC,eAAe,CAAC;QAChC,OAAO,QAAQ,CAAC,GAAG,CAAC;QACpB,OAAO,QAAQ,CAAC,iBAAiB,CAAC;QAClC,OAAO,QAAQ,CAAC,iBAAiB,CAAC;QAClC,OAAO,QAAQ,CAAC,UAAU,CAAC;KAC5B;AACH,CAAC,CAAC","sourcesContent":["import { K8sKind, K8sResourceCommon } from '@console/internal/module/k8s/types';\nimport { apiVersionForModel } from '@console/internal/module/k8s/k8s';\nimport { ensurePath } from '../../utils/utils';\nimport { omitEmpty } from '../../../../utils/common';\n\nexport type K8sInitAddon = {\n  name?: string;\n  generateName?: string;\n  namespace?: string;\n  labels?: { [k: string]: string };\n  annotations?: { [k: string]: string };\n};\n\nexport const initK8sObject = (\n  base: K8sResourceCommon,\n  model: K8sKind,\n  { name, generateName, namespace, labels, annotations }: K8sInitAddon = {},\n) => {\n  if (base && model) {\n    base.kind = model.kind;\n    base.apiVersion = apiVersionForModel(model);\n\n    ensurePath(base, 'metadata');\n    const { metadata } = base;\n    if (name) {\n      metadata.name = name;\n      metadata.generateName = undefined;\n    } else if (generateName) {\n      metadata.name = undefined;\n      metadata.generateName = generateName;\n    }\n    metadata.namespace = namespace || metadata.namespace;\n    metadata.labels = labels || metadata.labels;\n    metadata.annotations = annotations || metadata.annotations;\n    omitEmpty(metadata, true);\n  }\n};\n\nexport const clearMetadata = (base: K8sResourceCommon) => {\n  if (base?.metadata) {\n    delete base.metadata;\n  }\n};\n\nexport const clearRuntimeMetadata = (base: K8sResourceCommon) => {\n  if (base) {\n    delete (base as any).status;\n  }\n  if (base?.metadata) {\n    const { metadata } = base;\n    delete metadata.selfLink;\n    delete metadata.resourceVersion;\n    delete metadata.uid;\n    delete metadata.creationTimestamp;\n    delete metadata.deletionTimestamp;\n    delete metadata.generation;\n  }\n};\n"]}]}