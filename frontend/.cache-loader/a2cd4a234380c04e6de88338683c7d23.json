{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/contextMenu/PopupKebabMenu.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/contextMenu/PopupKebabMenu.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { DropdownMenu } from '@patternfly/react-core';\nimport { history, KebabItem } from '@console/internal/components/utils';\nimport './PopupKebabMenu.scss';\nconst MENU_PADDING = 20;\nexport class PopupKebabMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            menuTop: 0,\n            menuLeft: 0,\n        };\n        this.updateMenuPosition = () => {\n            const { container, eventX, eventY } = this.props;\n            let menuTop = eventY;\n            let menuLeft = eventX;\n            if (container) {\n                const menu = this.menu.firstElementChild;\n                if (menu) {\n                    const elementRect = container.getBoundingClientRect();\n                    const menuRect = menu.getBoundingClientRect();\n                    if (eventY + menuRect.height + menuRect.top >\n                        elementRect.top + elementRect.height - MENU_PADDING) {\n                        menuTop = Math.max(elementRect.top + elementRect.height - menuRect.height - menuRect.top - MENU_PADDING, 0);\n                    }\n                    if (eventX + menuRect.width + menuRect.left >\n                        elementRect.left + elementRect.width - MENU_PADDING) {\n                        menuLeft = Math.max(elementRect.left + elementRect.width - menuRect.width - menuRect.left - MENU_PADDING, 0);\n                    }\n                }\n            }\n            if (menuTop !== this.state.menuTop || menuLeft !== this.state.menuLeft) {\n                this.setState({ menuTop, menuLeft });\n            }\n        };\n        this.handleClose = () => {\n            const { onClose } = this.props;\n            onClose && onClose();\n        };\n        this.handleMenuMouseDown = (e) => {\n            e.stopPropagation();\n        };\n        this.handleBlur = (e) => {\n            if (!this.menu.contains(e.target)) {\n                let focusTarget;\n                const menuItems = this.menu.querySelectorAll('button');\n                if (_.first(menuItems) === e.relatedTarget) {\n                    focusTarget = _.last(menuItems);\n                }\n                else if (_.last(menuItems) === e.relatedTarget) {\n                    focusTarget = _.first(menuItems);\n                }\n                else {\n                    focusTarget = e.relatedTarget;\n                }\n                focusTarget.focus();\n            }\n        };\n        this.onKebabOptionClick = (event, option) => {\n            event.stopPropagation();\n            if (option.callback) {\n                option.callback();\n            }\n            if (option.href) {\n                history.push(option.href);\n            }\n            this.handleClose();\n        };\n        this.setMenu = (ref) => {\n            this.menu = ref;\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('focus', this.handleBlur, true);\n        this.updateMenuPosition();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.eventX !== prevProps.eventX ||\n            this.props.eventY !== prevProps.eventY ||\n            !_.isEqual(this.props.kebabOptions, prevProps.kebabOptions)) {\n            this.updateMenuPosition();\n        }\n    }\n    componentWillUnmount() {\n        document.removeEventListener('focus', this.handleBlur, true);\n    }\n    render() {\n        const { className, kebabOptions } = this.props;\n        const { menuTop, menuLeft } = this.state;\n        const visibleOptions = _.reject(kebabOptions, (o) => _.get(o, 'hidden', false));\n        const classes = classNames('ocs-popup-kebab-menu', className);\n        return (React.createElement(\"div\", { className: \"pf-c-page ocs-popup-kebab-menu__container\" },\n            React.createElement(\"input\", { className: \"ocs-popup-kebab-menu__faux-input\" }),\n            React.createElement(\"div\", { className: classes },\n                React.createElement(\"div\", { className: \"ocs-popup-kebab-menu__backdrop\", role: \"presentation\", onMouseDown: this.handleClose },\n                    React.createElement(\"div\", { className: \"pf-c-dropdown pf-m-expanded\", style: { top: menuTop, left: menuLeft }, ref: this.setMenu, role: \"presentation\", onMouseDown: this.handleMenuMouseDown },\n                        React.createElement(DropdownMenu, { className: \"pf-c-dropdown__menu\" }, _.map(visibleOptions, (o, i) => (React.createElement(\"li\", { key: i },\n                            React.createElement(KebabItem, { option: o, onClick: this.onKebabOptionClick, autoFocus: i === 0, onEscape: this.handleClose }))))))))));\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/contextMenu/PopupKebabMenu.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/contextMenu/PopupKebabMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { DropdownMenu } from '@patternfly/react-core';\nimport { history, KebabItem, KebabOption } from '@console/internal/components/utils';\nimport './PopupKebabMenu.scss';\n\nexport interface PopupKebabMenuProps {\n  kebabOptions: KebabOption[];\n  className?: string;\n  onClose?(): void;\n  eventX: number;\n  eventY: number;\n  container?: Element;\n}\ninterface PopopKebabMenuState {\n  menuTop: number;\n  menuLeft: number;\n}\n\nconst MENU_PADDING = 20;\n\nexport class PopupKebabMenu extends React.Component<PopupKebabMenuProps, PopopKebabMenuState> {\n  state = {\n    menuTop: 0,\n    menuLeft: 0,\n  };\n\n  private menu: Element;\n\n  componentDidMount() {\n    document.addEventListener('focus', this.handleBlur, true);\n    this.updateMenuPosition();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.eventX !== prevProps.eventX ||\n      this.props.eventY !== prevProps.eventY ||\n      !_.isEqual(this.props.kebabOptions, prevProps.kebabOptions)\n    ) {\n      this.updateMenuPosition();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('focus', this.handleBlur, true);\n  }\n\n  updateMenuPosition = () => {\n    const { container, eventX, eventY } = this.props;\n    let menuTop = eventY;\n    let menuLeft = eventX;\n\n    if (container) {\n      const menu: Element = this.menu.firstElementChild;\n      if (menu) {\n        const elementRect = container.getBoundingClientRect();\n        const menuRect = menu.getBoundingClientRect();\n\n        if (\n          eventY + menuRect.height + menuRect.top >\n          elementRect.top + elementRect.height - MENU_PADDING\n        ) {\n          menuTop = Math.max(\n            elementRect.top + elementRect.height - menuRect.height - menuRect.top - MENU_PADDING,\n            0,\n          );\n        }\n        if (\n          eventX + menuRect.width + menuRect.left >\n          elementRect.left + elementRect.width - MENU_PADDING\n        ) {\n          menuLeft = Math.max(\n            elementRect.left + elementRect.width - menuRect.width - menuRect.left - MENU_PADDING,\n            0,\n          );\n        }\n      }\n    }\n\n    if (menuTop !== this.state.menuTop || menuLeft !== this.state.menuLeft) {\n      this.setState({ menuTop, menuLeft });\n    }\n  };\n\n  handleClose = () => {\n    const { onClose } = this.props;\n\n    onClose && onClose();\n  };\n\n  handleMenuMouseDown = (e) => {\n    e.stopPropagation();\n  };\n\n  handleBlur = (e) => {\n    if (!this.menu.contains(e.target)) {\n      let focusTarget;\n\n      const menuItems = this.menu.querySelectorAll('button');\n      if (_.first(menuItems) === e.relatedTarget) {\n        focusTarget = _.last(menuItems);\n      } else if (_.last(menuItems) === e.relatedTarget) {\n        focusTarget = _.first(menuItems);\n      } else {\n        focusTarget = e.relatedTarget;\n      }\n\n      focusTarget.focus();\n    }\n  };\n\n  onKebabOptionClick = (event, option: KebabOption) => {\n    event.stopPropagation();\n\n    if (option.callback) {\n      option.callback();\n    }\n\n    if (option.href) {\n      history.push(option.href);\n    }\n\n    this.handleClose();\n  };\n\n  setMenu = (ref) => {\n    this.menu = ref;\n  };\n\n  render() {\n    const { className, kebabOptions } = this.props;\n    const { menuTop, menuLeft } = this.state;\n    const visibleOptions = _.reject(kebabOptions, (o) => _.get(o, 'hidden', false));\n    const classes = classNames('ocs-popup-kebab-menu', className);\n\n    return (\n      <div className=\"pf-c-page ocs-popup-kebab-menu__container\">\n        <input className=\"ocs-popup-kebab-menu__faux-input\" />\n        <div className={classes}>\n          <div\n            className=\"ocs-popup-kebab-menu__backdrop\"\n            role=\"presentation\"\n            onMouseDown={this.handleClose}\n          >\n            <div\n              className=\"pf-c-dropdown pf-m-expanded\"\n              style={{ top: menuTop, left: menuLeft }}\n              ref={this.setMenu}\n              role=\"presentation\"\n              onMouseDown={this.handleMenuMouseDown}\n            >\n              <DropdownMenu className=\"pf-c-dropdown__menu\">\n                {_.map(visibleOptions, (o, i) => (\n                  <li key={i}>\n                    <KebabItem\n                      option={o}\n                      onClick={this.onKebabOptionClick}\n                      autoFocus={i === 0}\n                      onEscape={this.handleClose}\n                    />\n                  </li>\n                ))}\n              </DropdownMenu>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}]}