{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-config.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-config.tsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { referenceFor } from '../module/k8s';\nimport { startBuild } from '../module/k8s/builds';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { errorModal } from './modals';\nimport { BuildHooks, BuildStrategy, history, Kebab, LabelList, navFactory, ResourceKebab, ResourceLink, resourceObjPath, ResourceSummary, SectionHeading, Timestamp, WebhookTriggers, } from './utils';\nimport { BuildsPage, BuildEnvironmentComponent, BuildStrategyType, PipelineBuildStrategyAlert, } from './build';\nimport { ResourceEventStream } from './events';\nimport { BuildConfigModel } from '../models';\nconst BuildConfigsReference = 'BuildConfig';\nconst startBuildAction = (kind, buildConfig) => ({\n    label: 'Start Build',\n    callback: () => startBuild(buildConfig)\n        .then((build) => {\n        history.push(resourceObjPath(build, referenceFor(build)));\n    })\n        .catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n    }),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        subresource: 'instantiate',\n        name: buildConfig.metadata.name,\n        namespace: buildConfig.metadata.namespace,\n        verb: 'create',\n    },\n});\nconst menuActions = [\n    startBuildAction,\n    ...Kebab.getExtensionsActionsForKind(BuildConfigModel),\n    ...Kebab.factory.common,\n];\nexport const BuildConfigsDetails = ({ obj: buildConfig }) => {\n    const hasPipeline = buildConfig.spec.strategy.type === BuildStrategyType.JenkinsPipeline;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            hasPipeline && React.createElement(PipelineBuildStrategyAlert, { obj: buildConfig }),\n            React.createElement(SectionHeading, { text: \"Build Config Details\" }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(ResourceSummary, { resource: buildConfig })),\n                React.createElement(\"div\", { className: \"col-sm-6\" },\n                    React.createElement(BuildStrategy, { resource: buildConfig })))),\n        React.createElement(WebhookTriggers, { resource: buildConfig }),\n        React.createElement(BuildHooks, { resource: buildConfig })));\n};\nconst BuildsTabPage = ({ obj: buildConfig }) => (React.createElement(BuildsPage, { namespace: buildConfig.metadata.namespace, showTitle: false, selector: { 'openshift.io/build-config.name': buildConfig.metadata.name } }));\nconst pages = [\n    navFactory.details(BuildConfigsDetails),\n    navFactory.editYaml(),\n    navFactory.builds(BuildsTabPage),\n    navFactory.envEditor(BuildEnvironmentComponent),\n    navFactory.events(ResourceEventStream),\n];\nexport const BuildConfigsDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: BuildConfigsReference, menuActions: menuActions, pages: pages })));\nBuildConfigsDetailsPage.displayName = 'BuildConfigsDetailsPage';\nconst tableColumnClasses = [\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'col-xs-6'),\n    classNames('col-sm-3', 'hidden-xs'),\n    classNames('col-sm-3', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst BuildConfigsTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Labels',\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Created',\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[4] },\n        },\n    ];\n};\nBuildConfigsTableHeader.displayName = 'BuildConfigsTableHeader';\nconst BuildConfigsTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: BuildConfigsReference, name: obj.metadata.name, namespace: obj.metadata.namespace, title: obj.metadata.name })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(LabelList, { kind: BuildConfigsReference, labels: obj.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(Timestamp, { timestamp: obj.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: BuildConfigsReference, resource: obj }))));\n};\nconst buildStrategy = (buildConfig) => buildConfig.spec.strategy.type;\nconst allStrategies = [\n    BuildStrategyType.Docker,\n    BuildStrategyType.JenkinsPipeline,\n    BuildStrategyType.Source,\n    BuildStrategyType.Custom,\n];\nconst filters = [\n    {\n        filterGroupName: 'Build Strategy',\n        type: 'build-strategy',\n        reducer: buildStrategy,\n        items: _.map(allStrategies, (strategy) => ({\n            id: strategy,\n            title: strategy,\n        })),\n    },\n];\nexport const BuildConfigsList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Build Configs\", Header: BuildConfigsTableHeader, Row: BuildConfigsTableRow, virtualize: true })));\nBuildConfigsList.displayName = 'BuildConfigsList';\nexport const BuildConfigsPage = (props) => (React.createElement(ListPage, Object.assign({}, props, { title: \"Build Configs\", kind: BuildConfigsReference, ListComponent: BuildConfigsList, canCreate: true, filterLabel: props.filterLabel, rowFilters: filters })));\nBuildConfigsPage.displayName = 'BuildConfigsListPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-config.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/build-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { K8sResourceKind, K8sResourceKindReference, referenceFor } from '../module/k8s';\nimport { startBuild } from '../module/k8s/builds';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { errorModal } from './modals';\nimport {\n  BuildHooks,\n  BuildStrategy,\n  history,\n  Kebab,\n  KebabAction,\n  LabelList,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  resourceObjPath,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  WebhookTriggers,\n} from './utils';\nimport {\n  BuildsPage,\n  BuildEnvironmentComponent,\n  BuildStrategyType,\n  PipelineBuildStrategyAlert,\n} from './build';\nimport { ResourceEventStream } from './events';\nimport { BuildConfigModel } from '../models';\n\nconst BuildConfigsReference: K8sResourceKindReference = 'BuildConfig';\n\nconst startBuildAction: KebabAction = (kind, buildConfig) => ({\n  label: 'Start Build',\n  callback: () =>\n    startBuild(buildConfig)\n      .then((build) => {\n        history.push(resourceObjPath(build, referenceFor(build)));\n      })\n      .catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: buildConfig.metadata.name,\n    namespace: buildConfig.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst menuActions = [\n  startBuildAction,\n  ...Kebab.getExtensionsActionsForKind(BuildConfigModel),\n  ...Kebab.factory.common,\n];\n\nexport const BuildConfigsDetails: React.SFC<BuildConfigsDetailsProps> = ({ obj: buildConfig }) => {\n  const hasPipeline = buildConfig.spec.strategy.type === BuildStrategyType.JenkinsPipeline;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        {hasPipeline && <PipelineBuildStrategyAlert obj={buildConfig} />}\n        <SectionHeading text=\"Build Config Details\" />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={buildConfig} />\n          </div>\n          <div className=\"col-sm-6\">\n            <BuildStrategy resource={buildConfig} />\n          </div>\n        </div>\n      </div>\n      <WebhookTriggers resource={buildConfig} />\n      <BuildHooks resource={buildConfig} />\n    </>\n  );\n};\n\nconst BuildsTabPage = ({ obj: buildConfig }) => (\n  <BuildsPage\n    namespace={buildConfig.metadata.namespace}\n    showTitle={false}\n    selector={{ 'openshift.io/build-config.name': buildConfig.metadata.name }}\n  />\n);\n\nconst pages = [\n  navFactory.details(BuildConfigsDetails),\n  navFactory.editYaml(),\n  navFactory.builds(BuildsTabPage),\n  navFactory.envEditor(BuildEnvironmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const BuildConfigsDetailsPage: React.SFC<BuildConfigsDetailsPageProps> = (props) => (\n  <DetailsPage {...props} kind={BuildConfigsReference} menuActions={menuActions} pages={pages} />\n);\nBuildConfigsDetailsPage.displayName = 'BuildConfigsDetailsPage';\n\nconst tableColumnClasses = [\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'col-xs-6'),\n  classNames('col-sm-3', 'hidden-xs'),\n  classNames('col-sm-3', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst BuildConfigsTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Labels',\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Created',\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nBuildConfigsTableHeader.displayName = 'BuildConfigsTableHeader';\n\nconst BuildConfigsTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={BuildConfigsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          title={obj.metadata.name}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={BuildConfigsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={BuildConfigsReference} resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nconst buildStrategy = (buildConfig: K8sResourceKind): BuildStrategyType =>\n  buildConfig.spec.strategy.type;\n\nconst allStrategies = [\n  BuildStrategyType.Docker,\n  BuildStrategyType.JenkinsPipeline,\n  BuildStrategyType.Source,\n  BuildStrategyType.Custom,\n];\nconst filters = [\n  {\n    filterGroupName: 'Build Strategy',\n    type: 'build-strategy',\n    reducer: buildStrategy,\n    items: _.map(allStrategies, (strategy) => ({\n      id: strategy,\n      title: strategy,\n    })),\n  },\n];\n\nexport const BuildConfigsList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Build Configs\"\n    Header={BuildConfigsTableHeader}\n    Row={BuildConfigsTableRow}\n    virtualize\n  />\n);\n\nBuildConfigsList.displayName = 'BuildConfigsList';\n\nexport const BuildConfigsPage: React.SFC<BuildConfigsPageProps> = (props) => (\n  <ListPage\n    {...props}\n    title=\"Build Configs\"\n    kind={BuildConfigsReference}\n    ListComponent={BuildConfigsList}\n    canCreate={true}\n    filterLabel={props.filterLabel}\n    rowFilters={filters}\n  />\n);\nBuildConfigsPage.displayName = 'BuildConfigsListPage';\n\nexport type BuildConfigsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type BuildConfigsPageProps = {\n  filterLabel?: string;\n  mock?: boolean;\n};\n\nexport type BuildConfigsDetailsPageProps = {\n  match: any;\n};\n"]}]}