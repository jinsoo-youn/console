{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/app.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/app.jsx","mtime":1615298458720},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Route, Router, Switch } from 'react-router-dom';\n// AbortController is not supported in some older browser versions\nimport 'abort-controller/polyfill';\nimport store from '../redux';\nimport { detectFeatures } from '../actions/features';\nimport AppContents from './app-contents';\nimport { getBrandingDetails, Masthead } from './masthead';\nimport { ConsoleNotifier } from './console-notifier';\nimport { ConnectedNotificationDrawer } from './notification-drawer';\nimport { Navigation } from './nav';\nimport { history } from './utils';\nimport * as UIActions from '../actions/ui';\nimport { fetchSwagger, getCachedResources } from '../module/k8s';\nimport { fetchEventSourcesCrd } from '../../packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport { receivedResources, watchAPIServices } from '../actions/k8s';\n// cloud shell imports must come later than features\nimport CloudShell from '@console/app/src/components/cloud-shell/CloudShell';\nimport CloudShellTab from '@console/app/src/components/cloud-shell/CloudShellTab';\nimport '../vendor.scss';\nimport '../style.scss';\nimport './hypercloud/utils/langs/i18n';\n//PF4 Imports\nimport { Page } from '@patternfly/react-core';\n// import Keycloak from 'keycloak-js';\nimport keycloak from '../hypercloud/keycloak';\nimport { setAccessToken, setId, resetLoginState } from '../hypercloud/auth';\nconst breakpointMD = 768;\nconst NOTIFICATION_DRAWER_BREAKPOINT = 1800;\n// Edge lacks URLSearchParams\nimport 'url-search-params-polyfill';\nclass App extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this._onNavToggle = this._onNavToggle.bind(this);\n        this._onNavSelect = this._onNavSelect.bind(this);\n        this._onNotificationDrawerToggle = this._onNotificationDrawerToggle.bind(this);\n        this._isDesktop = this._isDesktop.bind(this);\n        this._onResize = this._onResize.bind(this);\n        this.previousDesktopState = this._isDesktop();\n        this.previousDrawerInlineState = this._isLargeLayout();\n        this.state = {\n            isNavOpen: this._isDesktop(),\n            isDrawerInline: this._isLargeLayout(),\n        };\n    }\n    UNSAFE_componentWillMount() {\n        window.addEventListener('resize', this._onResize);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this._onResize);\n    }\n    componentDidUpdate(prevProps) {\n        const props = this.props;\n        // Prevent infinite loop in case React Router decides to destroy & recreate the component (changing key)\n        const oldLocation = _.omit(prevProps.location, ['key']);\n        const newLocation = _.omit(props.location, ['key']);\n        if (_.isEqual(newLocation, oldLocation) && _.isEqual(props.match, prevProps.match)) {\n            return;\n        }\n        // two way data binding :-/\n        const { pathname } = props.location;\n        store.dispatch(UIActions.setCurrentLocation(pathname));\n    }\n    _isLargeLayout() {\n        return window.innerWidth >= NOTIFICATION_DRAWER_BREAKPOINT;\n    }\n    _isDesktop() {\n        return window.innerWidth >= breakpointMD;\n    }\n    _onNavToggle() {\n        // Some components, like svg charts, need to reflow when nav is toggled.\n        // Fire event after a short delay to allow nav animation to complete.\n        setTimeout(() => {\n            window.dispatchEvent(new Event('sidebar_toggle'));\n        }, 100);\n        this.setState(prevState => {\n            return {\n                isNavOpen: !prevState.isNavOpen,\n            };\n        });\n    }\n    _onNotificationDrawerToggle() {\n        if (this._isLargeLayout()) {\n            // Fire event after the drawer animation speed delay.\n            setTimeout(() => {\n                window.dispatchEvent(new Event('sidebar_toggle'));\n            }, 250);\n        }\n    }\n    _onNavSelect() {\n        //close nav on mobile nav selects\n        if (!this._isDesktop()) {\n            this.setState({ isNavOpen: false });\n        }\n    }\n    _onResize() {\n        const isDesktop = this._isDesktop();\n        const isDrawerInline = this._isLargeLayout();\n        if (this.previousDesktopState !== isDesktop) {\n            this.setState({ isNavOpen: isDesktop });\n            this.previousDesktopState = isDesktop;\n        }\n        if (this.previousDrawerInlineState !== isDrawerInline) {\n            this.setState({ isDrawerInline });\n            this.previousDrawerInlineState = isDrawerInline;\n        }\n    }\n    render() {\n        const { isNavOpen, isDrawerInline } = this.state;\n        const { productName } = getBrandingDetails();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Helmet, { titleTemplate: `%s Â· ${productName}`, defaultTitle: productName }),\n            React.createElement(ConsoleNotifier, { location: \"BannerTop\" }),\n            React.createElement(Page, { header: React.createElement(Masthead, { keycloak: keycloak, onNavToggle: this._onNavToggle }), sidebar: React.createElement(Navigation, { isNavOpen: isNavOpen, onNavSelect: this._onNavSelect, onPerspectiveSelected: this._onNavSelect, onClusterSelected: this._onNavSelect }) },\n                React.createElement(ConnectedNotificationDrawer, { isDesktop: isDrawerInline, onDrawerChange: this._onNotificationDrawerToggle },\n                    React.createElement(AppContents, null))),\n            React.createElement(CloudShell, null),\n            React.createElement(ConsoleNotifier, { location: \"BannerBottom\" })));\n    }\n}\n// export const keycloak = new Keycloak({\n//   realm: window.SERVER_FLAGS.KeycloakRealm,\n//   url: window.SERVER_FLAGS.KeycloakAuthURL,\n//   clientId: window.SERVER_FLAGS.KeycloakClientId,\n// });\n// keycloak.logout = keycloak.logout.bind(keycloak, { redirectUri: document.location.origin });\nkeycloak\n    .init({\n    onLoad: 'check-sso',\n    checkLoginIframe: false,\n})\n    .then(authorization => {\n    if (!authorization) {\n        keycloak.login();\n        return;\n    }\n    render(React.createElement(Provider, { store: store },\n        React.createElement(Router, { history: history, basename: window.SERVER_FLAGS.basePath },\n            React.createElement(Switch, null,\n                React.createElement(Route, { path: \"/terminal\", component: CloudShellTab }),\n                React.createElement(Route, { path: \"/\", component: App })))), document.getElementById('app'));\n})\n    .catch(function () {\n    render(React.createElement(\"div\", null, \"Failed to initialize Keycloak\"), document.getElementById('app'));\n});\nkeycloak.onReady = function () {\n    console.log('[keycloak] onReady');\n};\nkeycloak.onAuthSuccess = function () {\n    console.log('[keycloak] onAuthSuccess');\n    setAccessToken(keycloak.idToken);\n    setId(keycloak.idTokenParsed.preferred_username);\n    const startDiscovery = () => store.dispatch(watchAPIServices());\n    // Load cached API resources from localStorage to speed up page load.\n    getCachedResources()\n        .then(resources => {\n        if (resources) {\n            store.dispatch(receivedResources(resources));\n        }\n        // Still perform discovery to refresh the cache.\n        startDiscovery();\n    })\n        .catch(startDiscovery);\n    store.dispatch(detectFeatures());\n    // Global timer to ensure all <Timestamp> components update in sync\n    setInterval(() => store.dispatch(UIActions.updateTimestamps(Date.now())), 10000);\n    fetchEventSourcesCrd();\n    // Fetch swagger on load if it's stale.\n    fetchSwagger();\n    // Used by GUI tests to check for unhandled exceptions\n    window.windowError = false;\n    window.onerror = window.onunhandledrejection = e => {\n        // eslint-disable-next-line no-console\n        console.error('Uncaught error', e);\n        window.windowError = e || true;\n    };\n    if ('serviceWorker' in navigator) {\n        if (window.SERVER_FLAGS.loadTestFactor > 1) {\n            // eslint-disable-next-line import/no-unresolved\n            import('file-loader?name=load-test.sw.js!../load-test.sw.js')\n                .then(() => navigator.serviceWorker.register('/load-test.sw.js'))\n                .then(() => new Promise(r => (navigator.serviceWorker.controller ? r() : navigator.serviceWorker.addEventListener('controllerchange', () => r()))))\n                .then(() => navigator.serviceWorker.controller.postMessage({\n                topic: 'setFactor',\n                value: window.SERVER_FLAGS.loadTestFactor,\n            }));\n        }\n        else {\n            navigator.serviceWorker\n                .getRegistrations()\n                .then(registrations => registrations.forEach(reg => reg.unregister()))\n                // eslint-disable-next-line no-console\n                .catch(e => console.warn('Error unregistering service workers', e));\n        }\n    }\n};\nkeycloak.onAuthError = function () {\n    console.log('[keycloak] onAuthError');\n};\nkeycloak.onAuthRefreshSuccess = function () {\n    console.log('[keycloak] onAuthRefreshSuccess');\n};\nkeycloak.onAuthRefreshError = function () {\n    console.log('[keycloak] onAuthRefreshError');\n};\nkeycloak.onAuthLogout = function () {\n    console.log('[keycloak] onAuthLogout');\n    keycloak.logout();\n    resetLoginState();\n};\nkeycloak.onTokenExpired = function () {\n    console.log('[keycloak] onTokenExpired ');\n    keycloak.logout();\n    resetLoginState();\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/app.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/app.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Route, Router, Switch } from 'react-router-dom';\n// AbortController is not supported in some older browser versions\nimport 'abort-controller/polyfill';\nimport store from '../redux';\nimport { detectFeatures } from '../actions/features';\nimport AppContents from './app-contents';\nimport { getBrandingDetails, Masthead } from './masthead';\nimport { ConsoleNotifier } from './console-notifier';\nimport { ConnectedNotificationDrawer } from './notification-drawer';\nimport { Navigation } from './nav';\nimport { history, LoadingBox } from './utils';\nimport * as UIActions from '../actions/ui';\nimport { fetchSwagger, getCachedResources } from '../module/k8s';\nimport { fetchEventSourcesCrd } from '../../packages/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport { receivedResources, watchAPIServices } from '../actions/k8s';\n// cloud shell imports must come later than features\nimport CloudShell from '@console/app/src/components/cloud-shell/CloudShell';\nimport CloudShellTab from '@console/app/src/components/cloud-shell/CloudShellTab';\nimport '../vendor.scss';\nimport '../style.scss';\nimport './hypercloud/utils/langs/i18n';\n//PF4 Imports\nimport { Page } from '@patternfly/react-core';\n// import Keycloak from 'keycloak-js';\nimport keycloak from '../hypercloud/keycloak';\nimport { setAccessToken, setId, resetLoginState } from '../hypercloud/auth';\nconst breakpointMD = 768;\nconst NOTIFICATION_DRAWER_BREAKPOINT = 1800;\n\n// Edge lacks URLSearchParams\nimport 'url-search-params-polyfill';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this._onNavToggle = this._onNavToggle.bind(this);\n    this._onNavSelect = this._onNavSelect.bind(this);\n    this._onNotificationDrawerToggle = this._onNotificationDrawerToggle.bind(this);\n    this._isDesktop = this._isDesktop.bind(this);\n    this._onResize = this._onResize.bind(this);\n    this.previousDesktopState = this._isDesktop();\n    this.previousDrawerInlineState = this._isLargeLayout();\n\n    this.state = {\n      isNavOpen: this._isDesktop(),\n      isDrawerInline: this._isLargeLayout(),\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    window.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._onResize);\n  }\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    // Prevent infinite loop in case React Router decides to destroy & recreate the component (changing key)\n    const oldLocation = _.omit(prevProps.location, ['key']);\n    const newLocation = _.omit(props.location, ['key']);\n    if (_.isEqual(newLocation, oldLocation) && _.isEqual(props.match, prevProps.match)) {\n      return;\n    }\n    // two way data binding :-/\n    const { pathname } = props.location;\n    store.dispatch(UIActions.setCurrentLocation(pathname));\n  }\n\n  _isLargeLayout() {\n    return window.innerWidth >= NOTIFICATION_DRAWER_BREAKPOINT;\n  }\n\n  _isDesktop() {\n    return window.innerWidth >= breakpointMD;\n  }\n\n  _onNavToggle() {\n    // Some components, like svg charts, need to reflow when nav is toggled.\n    // Fire event after a short delay to allow nav animation to complete.\n    setTimeout(() => {\n      window.dispatchEvent(new Event('sidebar_toggle'));\n    }, 100);\n\n    this.setState(prevState => {\n      return {\n        isNavOpen: !prevState.isNavOpen,\n      };\n    });\n  }\n\n  _onNotificationDrawerToggle() {\n    if (this._isLargeLayout()) {\n      // Fire event after the drawer animation speed delay.\n      setTimeout(() => {\n        window.dispatchEvent(new Event('sidebar_toggle'));\n      }, 250);\n    }\n  }\n\n  _onNavSelect() {\n    //close nav on mobile nav selects\n    if (!this._isDesktop()) {\n      this.setState({ isNavOpen: false });\n    }\n  }\n\n  _onResize() {\n    const isDesktop = this._isDesktop();\n    const isDrawerInline = this._isLargeLayout();\n    if (this.previousDesktopState !== isDesktop) {\n      this.setState({ isNavOpen: isDesktop });\n      this.previousDesktopState = isDesktop;\n    }\n    if (this.previousDrawerInlineState !== isDrawerInline) {\n      this.setState({ isDrawerInline });\n      this.previousDrawerInlineState = isDrawerInline;\n    }\n  }\n\n  render() {\n    const { isNavOpen, isDrawerInline } = this.state;\n    const { productName } = getBrandingDetails();\n\n    return (\n      <>\n        <Helmet titleTemplate={`%s Â· ${productName}`} defaultTitle={productName} />\n        <ConsoleNotifier location=\"BannerTop\" />\n        <Page header={<Masthead keycloak={keycloak} onNavToggle={this._onNavToggle} />} sidebar={<Navigation isNavOpen={isNavOpen} onNavSelect={this._onNavSelect} onPerspectiveSelected={this._onNavSelect} onClusterSelected={this._onNavSelect} />}>\n          <ConnectedNotificationDrawer isDesktop={isDrawerInline} onDrawerChange={this._onNotificationDrawerToggle}>\n            <AppContents />\n          </ConnectedNotificationDrawer>\n        </Page>\n        <CloudShell />\n        <ConsoleNotifier location=\"BannerBottom\" />\n      </>\n    );\n  }\n}\n\n// export const keycloak = new Keycloak({\n//   realm: window.SERVER_FLAGS.KeycloakRealm,\n//   url: window.SERVER_FLAGS.KeycloakAuthURL,\n//   clientId: window.SERVER_FLAGS.KeycloakClientId,\n// });\n\n// keycloak.logout = keycloak.logout.bind(keycloak, { redirectUri: document.location.origin });\n\nkeycloak\n  .init({\n    onLoad: 'check-sso',\n    checkLoginIframe: false,\n  })\n  .then(authorization => {\n    if (!authorization) {\n      keycloak.login();\n      return;\n    }\n\n    render(\n      <Provider store={store}>\n        <Router history={history} basename={window.SERVER_FLAGS.basePath}>\n          <Switch>\n            <Route path=\"/terminal\" component={CloudShellTab} />\n            <Route path=\"/\" component={App} />\n          </Switch>\n        </Router>\n      </Provider>,\n      document.getElementById('app'),\n    );\n  })\n  .catch(function() {\n    render(<div>Failed to initialize Keycloak</div>, document.getElementById('app'));\n  });\n\nkeycloak.onReady = function() {\n  console.log('[keycloak] onReady');\n};\nkeycloak.onAuthSuccess = function() {\n  console.log('[keycloak] onAuthSuccess');\n  \n  setAccessToken(keycloak.idToken);\n  setId(keycloak.idTokenParsed.preferred_username);\n\n  const startDiscovery = () => store.dispatch(watchAPIServices());\n\n  // Load cached API resources from localStorage to speed up page load.\n  getCachedResources()\n    .then(resources => {\n      if (resources) {\n        store.dispatch(receivedResources(resources));\n      }\n      // Still perform discovery to refresh the cache.\n      startDiscovery();\n    })\n    .catch(startDiscovery);\n\n  store.dispatch(detectFeatures());\n\n  // Global timer to ensure all <Timestamp> components update in sync\n  setInterval(() => store.dispatch(UIActions.updateTimestamps(Date.now())), 10000);\n\n  fetchEventSourcesCrd(); \n  \n  // Fetch swagger on load if it's stale.\n  fetchSwagger();\n\n  // Used by GUI tests to check for unhandled exceptions\n  window.windowError = false;\n  window.onerror = window.onunhandledrejection = e => {\n    // eslint-disable-next-line no-console\n    console.error('Uncaught error', e);\n    window.windowError = e || true;\n  };\n\n  if ('serviceWorker' in navigator) {\n    if (window.SERVER_FLAGS.loadTestFactor > 1) {\n      // eslint-disable-next-line import/no-unresolved\n      import('file-loader?name=load-test.sw.js!../load-test.sw.js')\n        .then(() => navigator.serviceWorker.register('/load-test.sw.js'))\n        .then(() => new Promise(r => (navigator.serviceWorker.controller ? r() : navigator.serviceWorker.addEventListener('controllerchange', () => r()))))\n        .then(() =>\n          navigator.serviceWorker.controller.postMessage({\n            topic: 'setFactor',\n            value: window.SERVER_FLAGS.loadTestFactor,\n          }),\n        );\n    } else {\n      navigator.serviceWorker\n        .getRegistrations()\n        .then(registrations => registrations.forEach(reg => reg.unregister()))\n        // eslint-disable-next-line no-console\n        .catch(e => console.warn('Error unregistering service workers', e));\n    }\n  }\n};\nkeycloak.onAuthError = function() {\n  console.log('[keycloak] onAuthError');\n};\nkeycloak.onAuthRefreshSuccess = function() {\n  console.log('[keycloak] onAuthRefreshSuccess');\n};\nkeycloak.onAuthRefreshError = function() {\n  console.log('[keycloak] onAuthRefreshError');\n};\nkeycloak.onAuthLogout = function() {\n  console.log('[keycloak] onAuthLogout');\n  keycloak.logout();\n  resetLoginState();\n};\nkeycloak.onTokenExpired = function() {\n  console.log('[keycloak] onTokenExpired ');\n  keycloak.logout();\n  resetLoginState();\n};\n"]}]}