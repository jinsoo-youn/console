{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-select-placeholder-option.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-select-placeholder-option.tsx","mtime":1616735742420},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { FormSelectOption } from '@patternfly/react-core';\nexport const asFormSelectValue = (value) => value || '';\n// renders only when props change (shallow compare)\nexport const FormSelectPlaceholderOption = ({ placeholder, isDisabled, }) => {\n    return (placeholder && (React.createElement(FormSelectOption, { isDisabled: isDisabled, key: \"defaultValue\", value: \"\", label: placeholder })));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-select-placeholder-option.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/form/form-select-placeholder-option.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAE1D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;AAExD,mDAAmD;AACnD,MAAM,CAAC,MAAM,2BAA2B,GAA+C,CAAC,EACtF,WAAW,EACX,UAAU,GACX,EAAE,EAAE;IACH,OAAO,CACL,WAAW,IAAI,CACb,oBAAC,gBAAgB,IAAC,UAAU,EAAE,UAAU,EAAE,GAAG,EAAC,cAAc,EAAC,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,WAAW,GAAI,CAC7F,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FormSelectOption } from '@patternfly/react-core';\n\nexport const asFormSelectValue = (value) => value || '';\n\n// renders only when props change (shallow compare)\nexport const FormSelectPlaceholderOption: React.FC<FormSelectPlaceholderOptionProps> = ({\n  placeholder,\n  isDisabled,\n}) => {\n  return (\n    placeholder && (\n      <FormSelectOption isDisabled={isDisabled} key=\"defaultValue\" value=\"\" label={placeholder} />\n    )\n  );\n};\n\ntype FormSelectPlaceholderOptionProps = {\n  placeholder?: string;\n  isDisabled?: boolean;\n};\n"]}]}