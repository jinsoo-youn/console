{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/utils.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { createBasicLookup } from '@console/shared/src/utils/utils';\nimport { getName } from '@console/shared/src/selectors/common';\nimport { InventoryStatusGroup } from '@console/shared/src/components/dashboard/inventory-card/status-group';\nimport { getNodeMaintenanceNodeName } from '../../../selectors';\nimport { bareMetalNodeStatus } from '../../../status/baremetal-node-status';\nimport { NODE_STATUS_TITLES } from '../../../constants';\nconst BMN_STATUS_GROUP_MAPPER = {\n    [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n    [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n    'node-maintenance': Object.keys(NODE_STATUS_TITLES),\n};\nexport const getBMNStatusGroups = (nodes, { maintenances }) => {\n    const groups = {\n        [InventoryStatusGroup.NOT_MAPPED]: {\n            statusIDs: ['ready'],\n            count: 0,\n            filterType: 'bare-metal-node-status',\n        },\n        [InventoryStatusGroup.PROGRESS]: {\n            statusIDs: ['notReady'],\n            count: 0,\n            filterType: 'bare-metal-node-status',\n        },\n        'node-maintenance': {\n            statusIDs: ['maintenance'],\n            count: 0,\n            filterType: 'bare-metal-node-status',\n        },\n    };\n    const maintenancesByNodeName = createBasicLookup(maintenances, getNodeMaintenanceNodeName);\n    nodes.forEach((node) => {\n        const nodeName = getName(node);\n        const nodeMaintenance = maintenancesByNodeName[nodeName];\n        const { status } = bareMetalNodeStatus({ node, nodeMaintenance });\n        const group = Object.keys(BMN_STATUS_GROUP_MAPPER).find((key) => BMN_STATUS_GROUP_MAPPER[key].includes(status)) || InventoryStatusGroup.NOT_MAPPED;\n        groups[group].count++;\n    });\n    return groups;\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-nodes/dashboard/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAC;AACpE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAE/D,OAAO,EAAE,oBAAoB,EAAE,MAAM,sEAAsE,CAAC;AAC5G,OAAO,EAAE,0BAA0B,EAAE,MAAM,oBAAoB,CAAC;AAChE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uCAAuC,CAAC;AAC5E,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAExD,MAAM,uBAAuB,GAAG;IAC9B,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;IAC9C,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC;IAC5C,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;CACpD,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAsB,CAAC,KAAiB,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE;IAC3F,MAAM,MAAM,GAAG;QACb,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE;YACjC,SAAS,EAAE,CAAC,OAAO,CAAC;YACpB,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,wBAAwB;SACrC;QACD,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;YAC/B,SAAS,EAAE,CAAC,UAAU,CAAC;YACvB,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,wBAAwB;SACrC;QACD,kBAAkB,EAAE;YAClB,SAAS,EAAE,CAAC,aAAa,CAAC;YAC1B,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,wBAAwB;SACrC;KACF,CAAC;IACF,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,YAAY,EAAE,0BAA0B,CAAC,CAAC;IAC3F,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACrB,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,eAAe,GAAG,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACzD,MAAM,EAAE,MAAM,EAAE,GAAG,mBAAmB,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC;QAClE,MAAM,KAAK,GACT,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAChD,uBAAuB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAC9C,IAAI,oBAAoB,CAAC,UAAU,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { StatusGroupMapper } from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport { createBasicLookup } from '@console/shared/src/utils/utils';\nimport { getName } from '@console/shared/src/selectors/common';\nimport { NodeKind } from '@console/internal/module/k8s';\nimport { InventoryStatusGroup } from '@console/shared/src/components/dashboard/inventory-card/status-group';\nimport { getNodeMaintenanceNodeName } from '../../../selectors';\nimport { bareMetalNodeStatus } from '../../../status/baremetal-node-status';\nimport { NODE_STATUS_TITLES } from '../../../constants';\n\nconst BMN_STATUS_GROUP_MAPPER = {\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  'node-maintenance': Object.keys(NODE_STATUS_TITLES),\n};\n\nexport const getBMNStatusGroups: StatusGroupMapper = (nodes: NodeKind[], { maintenances }) => {\n  const groups = {\n    [InventoryStatusGroup.NOT_MAPPED]: {\n      statusIDs: ['ready'],\n      count: 0,\n      filterType: 'bare-metal-node-status',\n    },\n    [InventoryStatusGroup.PROGRESS]: {\n      statusIDs: ['notReady'],\n      count: 0,\n      filterType: 'bare-metal-node-status',\n    },\n    'node-maintenance': {\n      statusIDs: ['maintenance'],\n      count: 0,\n      filterType: 'bare-metal-node-status',\n    },\n  };\n  const maintenancesByNodeName = createBasicLookup(maintenances, getNodeMaintenanceNodeName);\n  nodes.forEach((node) => {\n    const nodeName = getName(node);\n    const nodeMaintenance = maintenancesByNodeName[nodeName];\n    const { status } = bareMetalNodeStatus({ node, nodeMaintenance });\n    const group =\n      Object.keys(BMN_STATUS_GROUP_MAPPER).find((key) =>\n        BMN_STATUS_GROUP_MAPPER[key].includes(status),\n      ) || InventoryStatusGroup.NOT_MAPPED;\n    groups[group].count++;\n  });\n  return groups;\n};\n"]}]}