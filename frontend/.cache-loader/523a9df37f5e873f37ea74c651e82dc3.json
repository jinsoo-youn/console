{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { RadioGroupField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport { imageRegistryType } from '../../../utils/imagestream-utils';\nimport ImageStream from './ImageStream';\nimport ImageSearch from './ImageSearch';\nconst ImageSearchSection = () => {\n    const { values, setFieldValue, initialValues } = useFormikContext();\n    const [registry, setRegistry] = React.useState(values.registry);\n    React.useEffect(() => {\n        if (values.registry !== registry) {\n            setRegistry(values.registry);\n            setFieldValue('searchTerm', initialValues.searchTerm);\n            setFieldValue('isi', initialValues.isi);\n            setFieldValue('imageStream', initialValues.imageStream);\n        }\n    }, [\n        initialValues.imageStream,\n        initialValues.isi,\n        initialValues.searchTerm,\n        registry,\n        setFieldValue,\n        values,\n    ]);\n    return (React.createElement(FormSection, { title: \"Image\", subTitle: \"Deploy an existing image from an image stream or image registry.\" },\n        React.createElement(RadioGroupField, { name: \"registry\", options: [\n                {\n                    label: imageRegistryType.External.label,\n                    value: imageRegistryType.External.value,\n                    isDisabled: values.formType === 'edit' && values.registry === 'internal',\n                    activeChildren: React.createElement(ImageSearch, null),\n                },\n                {\n                    label: imageRegistryType.Internal.label,\n                    value: imageRegistryType.Internal.value,\n                    isDisabled: values.formType === 'edit' && values.registry === 'external',\n                    activeChildren: React.createElement(ImageStream, null),\n                },\n            ] })));\n};\nexport default ImageSearchSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AACrE,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,kBAAkB,GAAa,GAAG,EAAE;IACxC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAgB,CAAC;IAClF,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAChE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,MAAM,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAChC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7B,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;YACtD,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC;YACxC,aAAa,CAAC,aAAa,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;SACzD;IACH,CAAC,EAAE;QACD,aAAa,CAAC,WAAW;QACzB,aAAa,CAAC,GAAG;QACjB,aAAa,CAAC,UAAU;QACxB,QAAQ;QACR,aAAa;QACb,MAAM;KACP,CAAC,CAAC;IAEH,OAAO,CACL,oBAAC,WAAW,IACV,KAAK,EAAC,OAAO,EACb,QAAQ,EAAC,kEAAkE;QAE3E,oBAAC,eAAe,IACd,IAAI,EAAC,UAAU,EACf,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,iBAAiB,CAAC,QAAQ,CAAC,KAAK;oBACvC,KAAK,EAAE,iBAAiB,CAAC,QAAQ,CAAC,KAAK;oBACvC,UAAU,EAAE,MAAM,CAAC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU;oBACxE,cAAc,EAAE,oBAAC,WAAW,OAAG;iBAChC;gBACD;oBACE,KAAK,EAAE,iBAAiB,CAAC,QAAQ,CAAC,KAAK;oBACvC,KAAK,EAAE,iBAAiB,CAAC,QAAQ,CAAC,KAAK;oBACvC,UAAU,EAAE,MAAM,CAAC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU;oBACxE,cAAc,EAAE,oBAAC,WAAW,OAAG;iBAChC;aACF,GACD,CACU,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { RadioGroupField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport { imageRegistryType } from '../../../utils/imagestream-utils';\nimport ImageStream from './ImageStream';\nimport ImageSearch from './ImageSearch';\n\nconst ImageSearchSection: React.FC = () => {\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const [registry, setRegistry] = React.useState(values.registry);\n  React.useEffect(() => {\n    if (values.registry !== registry) {\n      setRegistry(values.registry);\n      setFieldValue('searchTerm', initialValues.searchTerm);\n      setFieldValue('isi', initialValues.isi);\n      setFieldValue('imageStream', initialValues.imageStream);\n    }\n  }, [\n    initialValues.imageStream,\n    initialValues.isi,\n    initialValues.searchTerm,\n    registry,\n    setFieldValue,\n    values,\n  ]);\n\n  return (\n    <FormSection\n      title=\"Image\"\n      subTitle=\"Deploy an existing image from an image stream or image registry.\"\n    >\n      <RadioGroupField\n        name=\"registry\"\n        options={[\n          {\n            label: imageRegistryType.External.label,\n            value: imageRegistryType.External.value,\n            isDisabled: values.formType === 'edit' && values.registry === 'internal',\n            activeChildren: <ImageSearch />,\n          },\n          {\n            label: imageRegistryType.Internal.label,\n            value: imageRegistryType.Internal.value,\n            isDisabled: values.formType === 'edit' && values.registry === 'external',\n            activeChildren: <ImageStream />,\n          },\n        ]}\n      />\n    </FormSection>\n  );\n};\n\nexport default ImageSearchSection;\n"]}]}