{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/status-card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/status-card.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport AlertItem from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '@console/internal/components/monitoring';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { DATA_RESILIENCY_QUERY, StorageDashboardQuery } from '../../../../constants/queries';\nimport { cephClusterResource } from '../../../../constants/resources';\nimport { filterCephAlerts } from '../../../../selectors';\nimport { getCephHealthState, getDataResiliencyState } from './utils';\nconst resiliencyProgressQuery = DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS];\nexport const CephAlerts = withDashboardResources(({ watchAlerts, stopWatchAlerts, notificationAlerts }) => {\n    React.useEffect(() => {\n        watchAlerts();\n        return () => {\n            stopWatchAlerts();\n        };\n    }, [watchAlerts, stopWatchAlerts]);\n    const { data, loaded, loadError } = notificationAlerts || {};\n    const alerts = filterCephAlerts(data);\n    return (React.createElement(AlertsBody, { error: !_.isEmpty(loadError) }, loaded &&\n        alerts.length > 0 &&\n        alerts.map((alert) => React.createElement(AlertItem, { key: alertURL(alert, alert.rule.id), alert: alert }))));\n});\nexport const StatusCard = ({ watchPrometheus, stopWatchPrometheusQuery, prometheusResults, }) => {\n    const [data, loaded, loadError] = useK8sWatchResource(cephClusterResource);\n    React.useEffect(() => {\n        watchPrometheus(resiliencyProgressQuery);\n        return () => {\n            stopWatchPrometheusQuery(resiliencyProgressQuery);\n        };\n    }, [watchPrometheus, stopWatchPrometheusQuery]);\n    const resiliencyProgress = prometheusResults.getIn([\n        resiliencyProgressQuery,\n        'data',\n    ]);\n    const resiliencyProgressError = prometheusResults.getIn([resiliencyProgressQuery, 'loadError']);\n    const cephHealthState = getCephHealthState({ ceph: { data, loaded, loadError } });\n    const dataResiliencyState = getDataResiliencyState([\n        { response: resiliencyProgress, error: resiliencyProgressError },\n    ]);\n    return (React.createElement(DashboardCard, { gradient: true },\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Status\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(HealthBody, null,\n                React.createElement(Gallery, { className: \"co-overview-status__health\", gutter: \"md\" },\n                    React.createElement(GalleryItem, null,\n                        React.createElement(HealthItem, { title: \"OCS Cluster\", state: cephHealthState.state, details: cephHealthState.message })),\n                    React.createElement(GalleryItem, null,\n                        React.createElement(HealthItem, { title: \"Data Resiliency\", state: dataResiliencyState.state, details: dataResiliencyState.message })))),\n            React.createElement(CephAlerts, null))));\n};\nexport default withDashboardResources(StatusCard);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/status-card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/status-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Gallery, GalleryItem } from '@patternfly/react-core';\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport AlertItem from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '@console/internal/components/monitoring';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { DATA_RESILIENCY_QUERY, StorageDashboardQuery } from '../../../../constants/queries';\nimport { cephClusterResource } from '../../../../constants/resources';\nimport { filterCephAlerts } from '../../../../selectors';\nimport { getCephHealthState, getDataResiliencyState } from './utils';\n\nconst resiliencyProgressQuery = DATA_RESILIENCY_QUERY[StorageDashboardQuery.RESILIENCY_PROGRESS];\n\nexport const CephAlerts = withDashboardResources(\n  ({ watchAlerts, stopWatchAlerts, notificationAlerts }) => {\n    React.useEffect(() => {\n      watchAlerts();\n      return () => {\n        stopWatchAlerts();\n      };\n    }, [watchAlerts, stopWatchAlerts]);\n\n    const { data, loaded, loadError } = notificationAlerts || {};\n    const alerts = filterCephAlerts(data);\n\n    return (\n      <AlertsBody error={!_.isEmpty(loadError)}>\n        {loaded &&\n          alerts.length > 0 &&\n          alerts.map((alert) => <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />)}\n      </AlertsBody>\n    );\n  },\n);\n\nexport const StatusCard: React.FC<DashboardItemProps> = ({\n  watchPrometheus,\n  stopWatchPrometheusQuery,\n  prometheusResults,\n}) => {\n  const [data, loaded, loadError] = useK8sWatchResource<K8sResourceKind[]>(cephClusterResource);\n\n  React.useEffect(() => {\n    watchPrometheus(resiliencyProgressQuery);\n    return () => {\n      stopWatchPrometheusQuery(resiliencyProgressQuery);\n    };\n  }, [watchPrometheus, stopWatchPrometheusQuery]);\n\n  const resiliencyProgress = prometheusResults.getIn([\n    resiliencyProgressQuery,\n    'data',\n  ]) as PrometheusResponse;\n  const resiliencyProgressError = prometheusResults.getIn([resiliencyProgressQuery, 'loadError']);\n\n  const cephHealthState = getCephHealthState({ ceph: { data, loaded, loadError } });\n  const dataResiliencyState = getDataResiliencyState([\n    { response: resiliencyProgress, error: resiliencyProgressError },\n  ]);\n\n  return (\n    <DashboardCard gradient>\n      <DashboardCardHeader>\n        <DashboardCardTitle>Status</DashboardCardTitle>\n      </DashboardCardHeader>\n      <DashboardCardBody>\n        <HealthBody>\n          <Gallery className=\"co-overview-status__health\" gutter=\"md\">\n            <GalleryItem>\n              <HealthItem\n                title=\"OCS Cluster\"\n                state={cephHealthState.state}\n                details={cephHealthState.message}\n              />\n            </GalleryItem>\n            <GalleryItem>\n              <HealthItem\n                title=\"Data Resiliency\"\n                state={dataResiliencyState.state}\n                details={dataResiliencyState.message}\n              />\n            </GalleryItem>\n          </Gallery>\n        </HealthBody>\n        <CephAlerts />\n      </DashboardCardBody>\n    </DashboardCard>\n  );\n};\n\nexport default withDashboardResources(StatusCard);\n"]}]}