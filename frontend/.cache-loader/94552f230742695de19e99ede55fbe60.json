{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseElement.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseElement.ts","mtime":1615298458710},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { observable, computed } from 'mobx';\nimport * as _ from 'lodash';\nimport { isGraph, isNode, ADD_CHILD_EVENT, REMOVE_CHILD_EVENT, ELEMENT_VISIBILITY_CHANGE_EVENT, } from '../types';\nimport Stateful from '../utils/Stateful';\nexport default class BaseElement extends Stateful {\n    constructor() {\n        super(...arguments);\n        this.id = '';\n        this.type = '';\n        this.visible = true;\n        this.children = [];\n        this.style = {};\n    }\n    get ordering() {\n        if (!this.parent) {\n            return [];\n        }\n        const idx = this.parent.getChildren().indexOf(this);\n        const result = [...this.parent.getOrderKey(), idx];\n        return result;\n    }\n    getLabel() {\n        return this.label || '';\n    }\n    setLabel(label) {\n        this.label = label;\n    }\n    getOrderKey() {\n        return this.ordering;\n    }\n    getController() {\n        if (!this.controller) {\n            throw new Error(`GraphElement with ID '${this.getId()}' has no controller.`);\n        }\n        return this.controller;\n    }\n    setController(controller) {\n        this.controller = controller;\n    }\n    getGraph() {\n        // TODO fix project eslint rules\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let p = this;\n        while (!isGraph(p)) {\n            p = p.getParent();\n        }\n        return p;\n    }\n    getParent() {\n        if (!this.parent) {\n            throw new Error(`GraphElement with ID '${this.getId()}' has no parent.`);\n        }\n        return this.parent;\n    }\n    setParent(parent) {\n        if (this.parent !== parent) {\n            if (this.parent) {\n                this.remove();\n            }\n            this.parent = parent;\n        }\n    }\n    hasParent() {\n        return this.parent !== undefined;\n    }\n    getId() {\n        return this.id;\n    }\n    setId(id) {\n        this.id = id;\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = type;\n    }\n    setVisible(visible) {\n        if (this.visible !== visible) {\n            this.visible = visible;\n            if (this.controller) {\n                this.controller.fireEvent(ELEMENT_VISIBILITY_CHANGE_EVENT, { visible, target: this });\n            }\n        }\n    }\n    isVisible() {\n        return (this.visible &&\n            (!this.parent ||\n                (this.parent.isVisible() && (!isNode(this.parent) || !this.parent.isCollapsed()))));\n    }\n    getData() {\n        return this.data;\n    }\n    setData(data) {\n        this.data = data;\n    }\n    getStyle() {\n        return this.style;\n    }\n    getChildren() {\n        return this.children;\n    }\n    insertChild(child, index) {\n        if (this.children.length === 0 ||\n            index >= this.children.length ||\n            this.children[index] !== child) {\n            const idx = this.children.indexOf(child);\n            if (idx !== -1) {\n                this.children.splice(idx, 1);\n                this.children.splice(index, 0, child);\n            }\n            else {\n                // remove from old parent\n                child.remove();\n                child.setParent(this);\n                this.children.splice(index, 0, child);\n                if (this.controller) {\n                    this.controller.fireEvent(ADD_CHILD_EVENT, { target: this, child });\n                }\n            }\n        }\n    }\n    appendChild(child) {\n        if (this.children.length === 0 || this.children[this.children.length - 1] !== child) {\n            const idx = this.children.indexOf(child);\n            if (idx !== -1) {\n                this.children.splice(idx, 1);\n                this.children.push(child);\n            }\n            else {\n                // remove from old parent\n                child.remove();\n                child.setParent(this);\n                this.children.push(child);\n                if (this.controller) {\n                    this.controller.fireEvent(ADD_CHILD_EVENT, { target: this, child });\n                }\n            }\n        }\n    }\n    removeChild(child) {\n        if (this.children) {\n            const idx = this.children.indexOf(child);\n            if (idx !== -1) {\n                this.children.splice(idx, 1);\n                child.setParent(undefined);\n                if (this.controller) {\n                    this.controller.fireEvent(REMOVE_CHILD_EVENT, { target: this, child });\n                }\n            }\n        }\n    }\n    remove() {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n    }\n    setModel(model) {\n        if ('type' in model) {\n            this.setType(model.type);\n        }\n        if ('visible' in model) {\n            this.setVisible(!!model.visible);\n        }\n        if (Array.isArray(model.children)) {\n            const controller = this.getController();\n            const childElements = model.children.map((id) => {\n                const element = controller.getElementById(id);\n                if (!element) {\n                    throw new Error(`No element found with ID '${id}'.`);\n                }\n                return element;\n            });\n            // remove children\n            _.difference(this.children, childElements).forEach((child) => this.removeChild(child));\n            // add children\n            const toAdd = _.difference(childElements, this.children);\n            toAdd.reverse().forEach((child) => this.insertChild(child, 0));\n        }\n        if ('data' in model) {\n            this.data = model.data;\n        }\n        if ('label' in model) {\n            this.label = model.label;\n        }\n        if ('style' in model) {\n            _.merge(this.style, model.style);\n        }\n    }\n    raise() {\n        const { parent } = this;\n        if (parent) {\n            parent.appendChild(this);\n            parent.raise();\n        }\n    }\n    translateToAbsolute(t) {\n        this.translateToParent(t);\n        const { parent } = this;\n        if (parent) {\n            parent.translateToAbsolute(t);\n        }\n    }\n    translateFromAbsolute(t) {\n        const { parent } = this;\n        if (parent) {\n            parent.translateFromAbsolute(t);\n        }\n        this.translateFromParent(t);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    translateToParent(t) {\n        // nothing to do\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    translateFromParent(t) {\n        // nothing to do\n    }\n    destroy() {\n        // nothing to do\n    }\n}\n__decorate([\n    observable\n], BaseElement.prototype, \"type\", void 0);\n__decorate([\n    observable.ref\n], BaseElement.prototype, \"data\", void 0);\n__decorate([\n    observable.ref\n], BaseElement.prototype, \"parent\", void 0);\n__decorate([\n    observable\n], BaseElement.prototype, \"visible\", void 0);\n__decorate([\n    observable.shallow\n], BaseElement.prototype, \"children\", void 0);\n__decorate([\n    observable.ref\n], BaseElement.prototype, \"controller\", void 0);\n__decorate([\n    observable\n], BaseElement.prototype, \"label\", void 0);\n__decorate([\n    observable\n], BaseElement.prototype, \"style\", void 0);\n__decorate([\n    computed({ equals: _.isEqual })\n], BaseElement.prototype, \"ordering\", null);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseElement.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/elements/BaseElement.ts"],"names":[],"mappings":"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","sourcesContent":["import { observable, computed } from 'mobx';\nimport * as _ from 'lodash';\nimport {\n  ElementModel,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  Controller,\n  ModelKind,\n  ADD_CHILD_EVENT,\n  REMOVE_CHILD_EVENT,\n  ELEMENT_VISIBILITY_CHANGE_EVENT,\n} from '../types';\nimport Stateful from '../utils/Stateful';\nimport { Translatable } from '../geom/types';\n\nexport default abstract class BaseElement<E extends ElementModel = ElementModel, D = any>\n  extends Stateful\n  implements GraphElement<E, D> {\n  private id: string = '';\n\n  @observable\n  private type: string = '';\n\n  @observable.ref\n  private data?: D;\n\n  @observable.ref\n  private parent?: GraphElement;\n\n  @observable\n  private visible: boolean = true;\n\n  @observable.shallow\n  private children: GraphElement[] = [];\n\n  @observable.ref\n  private controller?: Controller;\n\n  @observable\n  private label?: string;\n\n  @observable\n  private style: any = {};\n\n  abstract getKind(): ModelKind;\n\n  @computed({ equals: _.isEqual })\n  private get ordering(): number[] {\n    if (!this.parent) {\n      return [];\n    }\n    const idx = this.parent.getChildren().indexOf(this);\n    const result = [...this.parent.getOrderKey(), idx];\n    return result;\n  }\n\n  getLabel(): string {\n    return this.label || '';\n  }\n\n  setLabel(label: string): void {\n    this.label = label;\n  }\n\n  getOrderKey(): number[] {\n    return this.ordering;\n  }\n\n  getController(): Controller {\n    if (!this.controller) {\n      throw new Error(`GraphElement with ID '${this.getId()}' has no controller.`);\n    }\n    return this.controller;\n  }\n\n  setController(controller: Controller): void {\n    this.controller = controller;\n  }\n\n  getGraph(): Graph {\n    // TODO fix project eslint rules\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let p: GraphElement = this;\n    while (!isGraph(p)) {\n      p = p.getParent();\n    }\n    return p;\n  }\n\n  getParent(): GraphElement {\n    if (!this.parent) {\n      throw new Error(`GraphElement with ID '${this.getId()}' has no parent.`);\n    }\n    return this.parent;\n  }\n\n  setParent(parent: GraphElement): void {\n    if (this.parent !== parent) {\n      if (this.parent) {\n        this.remove();\n      }\n      this.parent = parent;\n    }\n  }\n\n  hasParent(): boolean {\n    return this.parent !== undefined;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  setId(id: string): void {\n    this.id = id;\n  }\n\n  getType(): string {\n    return this.type;\n  }\n\n  setType(type: string): void {\n    this.type = type;\n  }\n\n  setVisible(visible: boolean): void {\n    if (this.visible !== visible) {\n      this.visible = visible;\n      if (this.controller) {\n        this.controller.fireEvent(ELEMENT_VISIBILITY_CHANGE_EVENT, { visible, target: this });\n      }\n    }\n  }\n\n  isVisible(): boolean {\n    return (\n      this.visible &&\n      (!this.parent ||\n        (this.parent.isVisible() && (!isNode(this.parent) || !this.parent.isCollapsed())))\n    );\n  }\n\n  getData(): D | undefined {\n    return this.data;\n  }\n\n  setData(data: D | undefined): void {\n    this.data = data;\n  }\n\n  getStyle<T extends {}>(): T {\n    return this.style;\n  }\n\n  getChildren(): GraphElement[] {\n    return this.children;\n  }\n\n  insertChild(child: GraphElement, index: number) {\n    if (\n      this.children.length === 0 ||\n      index >= this.children.length ||\n      this.children[index] !== child\n    ) {\n      const idx = this.children.indexOf(child);\n      if (idx !== -1) {\n        this.children.splice(idx, 1);\n        this.children.splice(index, 0, child);\n      } else {\n        // remove from old parent\n        child.remove();\n        child.setParent(this);\n        this.children.splice(index, 0, child);\n\n        if (this.controller) {\n          this.controller.fireEvent(ADD_CHILD_EVENT, { target: this, child });\n        }\n      }\n    }\n  }\n\n  appendChild(child: GraphElement) {\n    if (this.children.length === 0 || this.children[this.children.length - 1] !== child) {\n      const idx = this.children.indexOf(child);\n      if (idx !== -1) {\n        this.children.splice(idx, 1);\n        this.children.push(child);\n      } else {\n        // remove from old parent\n        child.remove();\n        child.setParent(this);\n        this.children.push(child);\n\n        if (this.controller) {\n          this.controller.fireEvent(ADD_CHILD_EVENT, { target: this, child });\n        }\n      }\n    }\n  }\n\n  removeChild(child: GraphElement) {\n    if (this.children) {\n      const idx = this.children.indexOf(child);\n      if (idx !== -1) {\n        this.children.splice(idx, 1);\n        child.setParent(undefined);\n\n        if (this.controller) {\n          this.controller.fireEvent(REMOVE_CHILD_EVENT, { target: this, child });\n        }\n      }\n    }\n  }\n\n  remove(): void {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n  }\n\n  setModel(model: E): void {\n    if ('type' in model) {\n      this.setType(model.type);\n    }\n    if ('visible' in model) {\n      this.setVisible(!!model.visible);\n    }\n    if (Array.isArray(model.children)) {\n      const controller = this.getController();\n\n      const childElements = model.children.map((id) => {\n        const element = controller.getElementById(id);\n        if (!element) {\n          throw new Error(`No element found with ID '${id}'.`);\n        }\n        return element;\n      });\n\n      // remove children\n      _.difference(this.children, childElements).forEach((child) => this.removeChild(child));\n\n      // add children\n      const toAdd = _.difference(childElements, this.children);\n      toAdd.reverse().forEach((child) => this.insertChild(child, 0));\n    }\n    if ('data' in model) {\n      this.data = model.data;\n    }\n    if ('label' in model) {\n      this.label = model.label;\n    }\n    if ('style' in model) {\n      _.merge(this.style, model.style);\n    }\n  }\n\n  raise(): void {\n    const { parent } = this;\n    if (parent) {\n      parent.appendChild(this);\n      parent.raise();\n    }\n  }\n\n  translateToAbsolute(t: Translatable): void {\n    this.translateToParent(t);\n    const { parent } = this;\n    if (parent) {\n      parent.translateToAbsolute(t);\n    }\n  }\n\n  translateFromAbsolute(t: Translatable): void {\n    const { parent } = this;\n    if (parent) {\n      parent.translateFromAbsolute(t);\n    }\n    this.translateFromParent(t);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  translateToParent(t: Translatable): void {\n    // nothing to do\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  translateFromParent(t: Translatable): void {\n    // nothing to do\n  }\n\n  destroy(): void {\n    // nothing to do\n  }\n}\n"]}]}