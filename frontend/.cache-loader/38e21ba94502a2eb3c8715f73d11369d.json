{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { withDashboardResources, } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getName, getNamespace } from '../../..';\nimport { DashboardCardPopupLink } from '../dashboard-card/DashboardCardLink';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\nimport { LIMIT_STATE } from './UtilizationItem';\nimport './top-consumer-popover.scss';\nconst ConsumerPopover = React.memo(({ current, title, humanize, consumers, namespace, position, description, children }) => {\n    const [isOpen, setOpen] = React.useState(false);\n    return (React.createElement(DashboardCardPopupLink, { popupTitle: `${title} breakdown`, linkTitle: current, onHide: React.useCallback(() => setOpen(false), []), onShow: React.useCallback(() => setOpen(true), []), position: position },\n        React.createElement(PopoverBody, { humanize: humanize, consumers: consumers, namespace: namespace, isOpen: isOpen, description: description }, children)));\n});\nexport default ConsumerPopover;\nconst getLimitIcon = (state) => {\n    switch (state) {\n        case LIMIT_STATE.ERROR:\n            return React.createElement(RedExclamationCircleIcon, null);\n        case LIMIT_STATE.WARN:\n            return React.createElement(YellowExclamationTriangleIcon, null);\n        default:\n            return null;\n    }\n};\nconst getResourceToWatch = (model, namespace, fieldSelector) => ({\n    isList: true,\n    kind: model.crd ? referenceForModel(model) : model.kind,\n    fieldSelector,\n    namespace,\n});\nexport const LimitsBody = ({ limitState, requestedState, total, limit, current, available, requested, }) => ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n    (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (React.createElement(\"ul\", { className: \"co-utilization-card-popover__consumer-list\" },\n    React.createElement(Status, { value: total }, \"Total capacity\"),\n    React.createElement(Status, { value: limit, icon: getLimitIcon(limitState) }, \"Total limit\"),\n    React.createElement(Status, { value: current }, \"Current utilization\"),\n    React.createElement(Status, { value: available }, \"Current available capacity\"),\n    React.createElement(Status, { value: requested, icon: getLimitIcon(requestedState) }, \"Total requested\")));\nexport const PopoverBody = withDashboardResources(React.memo(({ humanize, consumers, namespace, watchPrometheus, stopWatchPrometheusQuery, prometheusResults, isOpen, description, children, }) => {\n    const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n    // const canAccessMonitoring = useSelector<RootState, boolean>(\n    //   (state) =>\n    //     !!state[featureReducerName].get(FLAGS.CAN_GET_NS) &&\n    //     !!window.SERVER_FLAGS.prometheusBaseURL,\n    // );\n    const { query, model, metric, fieldSelector } = currentConsumer;\n    const k8sResource = React.useMemo(() => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null), [fieldSelector, isOpen, model, namespace]);\n    const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource(k8sResource);\n    React.useEffect(() => {\n        if (!isOpen) {\n            return () => { };\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n            stopWatchPrometheusQuery(query);\n        };\n    }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n    const top5Data = [];\n    const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n    const bodyData = getInstantVectorStats(data, metric);\n    if (consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n            const consumerExists = consumerData.some((consumer) => getName(consumer) === d.metric[metric] &&\n                (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true));\n            if (consumerExists) {\n                top5Data.push(Object.assign(Object.assign({}, d), { y: humanize(d.y).string }));\n            }\n            if (top5Data.length === 5) {\n                break;\n            }\n        }\n    }\n    const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n    }, [currentConsumer.query]);\n    const dropdownItems = React.useMemo(() => consumers.reduce((items, curr) => {\n        items[referenceForModel(curr.model)] = `By ${curr.model.label}`;\n        return items;\n    }, {}), [consumers]);\n    const onDropdownChange = React.useCallback((key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)), [consumers]);\n    const monitoringURL = `/monitoring/query-browser?${monitoringParams.toString()}`;\n    let body;\n    if (error || consumersLoadError) {\n        body = React.createElement(\"div\", { className: \"text-secondary\" }, \"Not available\");\n    }\n    else if (!consumerLoaded || !data) {\n        body = (React.createElement(\"ul\", { className: \"co-utilization-card-popover__consumer-list\" },\n            React.createElement(\"li\", { className: \"skeleton-consumer\" }),\n            React.createElement(\"li\", { className: \"skeleton-consumer\" }),\n            React.createElement(\"li\", { className: \"skeleton-consumer\" }),\n            React.createElement(\"li\", { className: \"skeleton-consumer\" }),\n            React.createElement(\"li\", { className: \"skeleton-consumer\" })));\n    }\n    else {\n        body = (React.createElement(React.Fragment, null,\n            React.createElement(\"ul\", { className: \"co-utilization-card-popover__consumer-list\", \"aria-label\": `Top consumer by ${model.label}` }, top5Data &&\n                top5Data.map((item) => {\n                    const title = String(item.x);\n                    return (React.createElement(ListItem, { key: title, value: item.y },\n                        React.createElement(Link, { className: \"co-utilization-card-popover__consumer-name\", to: resourcePathFromModel(model, title, item.metric.namespace) }, title)));\n                })),\n            React.createElement(Link, { to: monitoringURL }, \"View more\")));\n    }\n    return (React.createElement(\"div\", { className: \"co-utilization-card-popover__body\" },\n        description && (React.createElement(\"div\", { className: \"co-utilization-card-popover__description\" }, description)),\n        children,\n        React.createElement(\"div\", { className: \"co-utilization-card-popover__title\" }, consumers.length === 1\n            ? `Top ${currentConsumer.model.label.toLowerCase()} consumers`\n            : 'Top consumers'),\n        consumers.length > 1 && (React.createElement(Dropdown, { className: \"co-utilization-card-popover__dropdown\", id: \"consumer-select\", name: \"selectConsumerType\", \"aria-label\": \"Select consumer type\", items: dropdownItems, onChange: onDropdownChange, selectedKey: referenceForModel(model) })),\n        body));\n}));\nconst ListItem = ({ children, value }) => (React.createElement(\"li\", { className: \"co-utilization-card-popover__consumer-item\" },\n    children,\n    React.createElement(\"div\", { className: \"co-utilization-card-popover__consumer-value\" }, value)));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { Humanize, resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport { PopoverPosition } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { getName, getNamespace } from '../../..';\nimport { DashboardCardPopupLink } from '../dashboard-card/DashboardCardLink';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\nimport { LIMIT_STATE } from './UtilizationItem';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({ current, title, humanize, consumers, namespace, position, description, children }) => {\n    const [isOpen, setOpen] = React.useState(false);\n    return (\n      <DashboardCardPopupLink\n        popupTitle={`${title} breakdown`}\n        linkTitle={current}\n        onHide={React.useCallback(() => setOpen(false), [])}\n        onShow={React.useCallback(() => setOpen(true), [])}\n        position={position}\n      >\n        <PopoverBody\n          humanize={humanize}\n          consumers={consumers}\n          namespace={namespace}\n          isOpen={isOpen}\n          description={description}\n        >\n          {children}\n        </PopoverBody>\n      </DashboardCardPopupLink>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) =>\n  ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n    (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n    <ul className=\"co-utilization-card-popover__consumer-list\">\n      <Status value={total}>Total capacity</Status>\n      <Status value={limit} icon={getLimitIcon(limitState)}>\n        Total limit\n      </Status>\n      <Status value={current}>Current utilization</Status>\n      <Status value={available}>Current available capacity</Status>\n      <Status value={requested} icon={getLimitIcon(requestedState)}>\n        Total requested\n      </Status>\n    </ul>\n  );\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      // const canAccessMonitoring = useSelector<RootState, boolean>(\n      //   (state) =>\n      //     !!state[featureReducerName].get(FLAGS.CAN_GET_NS) &&\n      //     !!window.SERVER_FLAGS.prometheusBaseURL,\n      // );\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = `By ${curr.model.label}`;\n            return items;\n          }, {}),\n        [consumers],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL = `/monitoring/query-browser?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">Not available</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={`Top consumer by ${model.label}`}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>View more</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? `Top ${currentConsumer.model.label.toLowerCase()} consumers`\n              : 'Top consumers'}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label=\"Select consumer type\"\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: React.ReactText;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n"]}]}