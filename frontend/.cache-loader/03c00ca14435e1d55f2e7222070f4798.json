{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/HelmReleaseDetailsPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/HelmReleaseDetailsPage.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Firehose, history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { SecretModel } from '@console/internal/models';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport HelmReleaseDetails from './details/HelmReleaseDetails';\nconst handleNamespaceChange = (newNamespace) => {\n    if (newNamespace === ALL_NAMESPACES_KEY) {\n        history.push('/helm-releases/all-namespaces');\n    }\n    else {\n        history.push('/helm-releases/ns/:ns');\n    }\n};\nconst HelmReleaseDetailsPage = ({ match }) => {\n    const namespace = match.params.ns;\n    const helmReleaseName = match.params.name;\n    return (React.createElement(NamespacedPage, { variant: NamespacedPageVariants.light, hideApplications: true, onNamespaceChange: handleNamespaceChange },\n        React.createElement(Firehose, { resources: [\n                {\n                    namespace,\n                    kind: SecretModel.kind,\n                    prop: SecretModel.id,\n                    isList: true,\n                    selector: { name: `${helmReleaseName}` },\n                },\n            ] },\n            React.createElement(HelmReleaseDetails, { match: match }))));\n};\nexport default HelmReleaseDetailsPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/HelmReleaseDetailsPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/HelmReleaseDetailsPage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,cAAc,EAAE,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAC3E,OAAO,kBAAkB,MAAM,8BAA8B,CAAC;AAS9D,MAAM,qBAAqB,GAAG,CAAC,YAAoB,EAAQ,EAAE;IAC3D,IAAI,YAAY,KAAK,kBAAkB,EAAE;QACvC,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;KAC/C;SAAM;QACL,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KACvC;AACH,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAA0C,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAClF,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IAClC,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1C,OAAO,CACL,oBAAC,cAAc,IACb,OAAO,EAAE,sBAAsB,CAAC,KAAK,EACrC,gBAAgB,QAChB,iBAAiB,EAAE,qBAAqB;QAExC,oBAAC,QAAQ,IACP,SAAS,EAAE;gBACT;oBACE,SAAS;oBACT,IAAI,EAAE,WAAW,CAAC,IAAI;oBACtB,IAAI,EAAE,WAAW,CAAC,EAAE;oBACpB,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,eAAe,EAAE,EAAE;iBACzC;aACF;YAED,oBAAC,kBAAkB,IAAC,KAAK,EAAE,KAAK,GAAI,CAC3B,CACI,CAClB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import * as React from 'react';\nimport { match as RMatch } from 'react-router';\nimport { Firehose, history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { SecretModel } from '@console/internal/models';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport HelmReleaseDetails from './details/HelmReleaseDetails';\n\ninterface HelmReleaseDetailsPageProps {\n  match: RMatch<{\n    ns?: string;\n    name?: string;\n  }>;\n}\n\nconst handleNamespaceChange = (newNamespace: string): void => {\n  if (newNamespace === ALL_NAMESPACES_KEY) {\n    history.push('/helm-releases/all-namespaces');\n  } else {\n    history.push('/helm-releases/ns/:ns');\n  }\n};\n\nconst HelmReleaseDetailsPage: React.FC<HelmReleaseDetailsPageProps> = ({ match }) => {\n  const namespace = match.params.ns;\n  const helmReleaseName = match.params.name;\n  return (\n    <NamespacedPage\n      variant={NamespacedPageVariants.light}\n      hideApplications\n      onNamespaceChange={handleNamespaceChange}\n    >\n      <Firehose\n        resources={[\n          {\n            namespace,\n            kind: SecretModel.kind,\n            prop: SecretModel.id,\n            isList: true,\n            selector: { name: `${helmReleaseName}` },\n          },\n        ]}\n      >\n        <HelmReleaseDetails match={match} />\n      </Firehose>\n    </NamespacedPage>\n  );\n};\n\nexport default HelmReleaseDetailsPage;\n"]}]}