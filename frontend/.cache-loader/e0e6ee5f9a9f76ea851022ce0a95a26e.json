{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment-config.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment-config.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Status, PodRingController } from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { k8sCreate } from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table } from './factory';\nimport { AsyncComponent, ContainerTable, DetailsItem, Kebab, LoadingInline, ResourceSummary, SectionHeading, WorkloadPausedAlert, getExtensionsKebabActionsForKind, navFactory, pluralize, togglePaused, } from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nconst DeploymentConfigsReference = 'DeploymentConfig';\nconst rollout = (dc) => {\n    const req = {\n        kind: 'DeploymentRequest',\n        apiVersion: 'apps.openshift.io/v1',\n        name: dc.metadata.name,\n        latest: true,\n        force: true,\n    };\n    const opts = {\n        name: dc.metadata.name,\n        ns: dc.metadata.namespace,\n        path: 'instantiate',\n    };\n    return k8sCreate(DeploymentConfigModel, req, opts);\n};\nconst RolloutAction = (kind, obj) => ({\n    label: 'Start Rollout',\n    callback: () => rollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n    }),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        subresource: 'instantiate',\n        name: obj.metadata.name,\n        namespace: obj.metadata.namespace,\n        verb: 'create',\n    },\n});\nconst PauseAction = (kind, obj) => ({\n    label: obj.spec.paused ? 'Resume Rollouts' : 'Pause Rollouts',\n    callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace: obj.metadata.namespace,\n        verb: 'patch',\n    },\n});\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\nexport const menuActions = [\n    RolloutAction,\n    PauseAction,\n    ModifyCount,\n    AddHealthChecks,\n    AddStorage,\n    ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n    EditHealthChecks,\n    ...common,\n];\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n    const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n    const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n    const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n    const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: \"Latest Version\", obj: dc, path: \"status.latestVersion\" }),\n        React.createElement(DetailsItem, { label: \"Message\", obj: dc, path: \"status.details.message\", hideEmpty: true }),\n        React.createElement(DetailsItem, { label: \"Update Strategy\", obj: dc, path: \"spec.strategy.type\" }),\n        dc.spec.strategy.type === 'RollingUpdate' && (React.createElement(React.Fragment, null,\n            React.createElement(DetailsItem, { label: \"Timeout\", obj: dc, path: \"spec.strategy.rollingParams.timeoutSeconds\", hideEmpty: true }, pluralize(timeout, 'second')),\n            React.createElement(DetailsItem, { label: \"Update Period\", obj: dc, path: \"spec.strategy.rollingParams.updatePeriodSeconds\", hideEmpty: true }, pluralize(updatePeriod, 'second')),\n            React.createElement(DetailsItem, { label: \"Interval\", obj: dc, path: \"spec.strategy.rollingParams.intervalSeconds\", hideEmpty: true }, pluralize(interval, 'second')),\n            React.createElement(DetailsItem, { label: \"Max Unavailable\", obj: dc, path: \"spec.strategy.rollingParams.maxUnavailable\" },\n                dc.spec.strategy.rollingUpdate.maxUnavailable || 1,\n                \" of\",\n                ' ',\n                pluralize(dc.spec.replicas, 'pod')),\n            React.createElement(DetailsItem, { label: \"Max Surge\", obj: dc, path: \"spec.strategy.rollingParams.maxSurge\" },\n                dc.spec.strategy.rollingUpdate.maxSurge || 1,\n                \" greater than\",\n                ' ',\n                pluralize(dc.spec.replicas, 'pod')))),\n        React.createElement(DetailsItem, { label: \"Min Ready Seconds\", obj: dc, path: \"spec.minReadySeconds\" }, dc.spec.minReadySeconds ? pluralize(dc.spec.minReadySeconds, 'second') : 'Not Configured'),\n        React.createElement(DetailsItem, { label: \"Triggers\", obj: dc, path: \"spec.triggers\", hideEmpty: true }, triggers)));\n};\nexport const DeploymentConfigsDetails = ({ obj: dc }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Deployment Config Details\" }),\n            dc.spec.paused && React.createElement(WorkloadPausedAlert, { obj: dc, model: DeploymentConfigModel }),\n            React.createElement(PodRingController, { namespace: dc.metadata.namespace, kind: dc.kind, render: (d) => {\n                    return d.loaded ? (React.createElement(PodRingSet, { key: dc.metadata.uid, podData: d.data[dc.metadata.uid], obj: dc, resourceKind: DeploymentConfigModel, path: \"/spec/replicas\" })) : (React.createElement(LoadingInline, null));\n                } }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { resource: dc, showPodSelector: true, showNodeSelector: true, showTolerations: true },\n                            React.createElement(\"dt\", null, \"Status\"),\n                            React.createElement(\"dd\", null, dc.status.availableReplicas === dc.status.updatedReplicas &&\n                                dc.spec.replicas === dc.status.availableReplicas ? (React.createElement(Status, { status: \"Up to date\" })) : (React.createElement(Status, { status: \"Updating\" }))))),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(DeploymentConfigDetailsList, { dc: dc }))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Containers\" }),\n            React.createElement(ContainerTable, { containers: dc.spec.template.spec.containers })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(VolumesTable, { resource: dc, heading: \"Volumes\" })),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: dc.status.conditions }))));\n};\nconst EnvironmentPage = (props) => (React.createElement(AsyncComponent, Object.assign({ loader: () => import('./environment.jsx').then((c) => c.EnvironmentPage) }, props)));\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (React.createElement(EnvironmentPage, { obj: props.obj, rawEnvData: props.obj.spec.template.spec, envPath: envPath, readOnly: false }));\nconst ReplicationControllersTab = ({ obj }) => {\n    const { metadata: { namespace, name }, } = obj;\n    // Hide the create button to avoid confusion when showing replication controllers for an object.\n    return (React.createElement(ReplicationControllersPage, { showTitle: false, namespace: namespace, selector: {\n            'openshift.io/deployment-config.name': name,\n        }, canCreate: false }));\n};\nconst pages = [\n    navFactory.details(DeploymentConfigsDetails),\n    navFactory.editYaml(),\n    {\n        href: 'replicationcontrollers',\n        name: 'Replication Controllers',\n        component: ReplicationControllersTab,\n    },\n    navFactory.pods(),\n    navFactory.envEditor(environmentComponent),\n    navFactory.events(ResourceEventStream),\n];\nexport const DeploymentConfigsDetailsPage = (props) => {\n    return (React.createElement(DetailsPage, Object.assign({}, props, { kind: DeploymentConfigsReference, menuActions: menuActions, pages: pages })));\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\nconst kind = 'DeploymentConfig';\nconst DeploymentConfigTableRow = ({ obj, index, key, style }) => {\n    return (React.createElement(WorkloadTableRow, { obj: obj, index: index, rowKey: key, style: style, menuActions: menuActions, kind: kind }));\n};\nconst DeploymentConfigTableHeader = (t) => {\n    return WorkloadTableHeader(t);\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\nexport const DeploymentConfigsList = (props) => {\n    const { t } = useTranslation();\n    return (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Deployment Configs\", Header: DeploymentConfigTableHeader.bind(null, t), Row: DeploymentConfigTableRow, virtualize: true })));\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\nexport const DeploymentConfigsPage = (props) => (React.createElement(ListPage, Object.assign({ kind: DeploymentConfigsReference, ListComponent: DeploymentConfigsList, canCreate: true }, props)));\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment-config.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/deployment-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { Status, PodRingController } from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { k8sCreate, K8sKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { DetailsPage, ListPage, Table, RowFunction } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  LoadingInline,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  pluralize,\n  togglePaused,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\n\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  label: 'Start Rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  label: obj.spec.paused ? 'Resume Rollouts' : 'Pause Rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  ModifyCount,\n  AddHealthChecks,\n  AddStorage,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label=\"Latest Version\" obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label=\"Message\" obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label=\"Update Strategy\" obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label=\"Timeout\"\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {pluralize(timeout, 'second')}\n          </DetailsItem>\n          <DetailsItem\n            label=\"Update Period\"\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {pluralize(updatePeriod, 'second')}\n          </DetailsItem>\n          <DetailsItem\n            label=\"Interval\"\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {pluralize(interval, 'second')}\n          </DetailsItem>\n          <DetailsItem\n            label=\"Max Unavailable\"\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {dc.spec.strategy.rollingUpdate.maxUnavailable || 1} of{' '}\n            {pluralize(dc.spec.replicas, 'pod')}\n          </DetailsItem>\n          <DetailsItem label=\"Max Surge\" obj={dc} path=\"spec.strategy.rollingParams.maxSurge\">\n            {dc.spec.strategy.rollingUpdate.maxSurge || 1} greater than{' '}\n            {pluralize(dc.spec.replicas, 'pod')}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label=\"Min Ready Seconds\" obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds ? pluralize(dc.spec.minReadySeconds, 'second') : 'Not Configured'}\n      </DetailsItem>\n      <DetailsItem label=\"Triggers\" obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n    </dl>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Deployment Config Details\" />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingController\n          namespace={dc.metadata.namespace}\n          kind={dc.kind}\n          render={(d) => {\n            return d.loaded ? (\n              <PodRingSet\n                key={dc.metadata.uid}\n                podData={d.data[dc.metadata.uid]}\n                obj={dc}\n                resourceKind={DeploymentConfigModel}\n                path=\"/spec/replicas\"\n              />\n            ) : (\n              <LoadingInline />\n            );\n          }}\n        />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>Status</dt>\n                <dd>\n                  {dc.status.availableReplicas === dc.status.updatedReplicas &&\n                  dc.spec.replicas === dc.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Containers\" />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading=\"Volumes\" />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    name: 'Replication Controllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const DeploymentConfigsDetailsPage: React.FC<DeploymentConfigsDetailsPageProps> = (\n  props,\n) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      menuActions={menuActions}\n      pages={pages}\n    />\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: RowFunction<K8sResourceKind> = ({ obj, index, key, style }) => {\n  return (\n    <WorkloadTableRow\n      obj={obj}\n      index={index}\n      rowKey={key}\n      style={style}\n      menuActions={menuActions}\n      kind={kind}\n    />\n  );\n};\n\nconst DeploymentConfigTableHeader = (t?: TFunction) => {\n  return WorkloadTableHeader(t);\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n  <Table\n    {...props}\n    aria-label=\"Deployment Configs\"\n    Header={DeploymentConfigTableHeader.bind(null, t)}\n    Row={DeploymentConfigTableRow}\n    virtualize\n  />\n)};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => (\n  <ListPage\n    kind={DeploymentConfigsReference}\n    ListComponent={DeploymentConfigsList}\n    canCreate={true}\n    {...props}\n  />\n);\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n\ntype DeploymentConfigsDetailsPageProps = {\n  match: any;\n};\n"]}]}