{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/PipelineRunItem.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/PipelineRunItem.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { resourcePath } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineRunModel } from '../../../models';\nconst PipelineRunItem = ({ pipelineRun }) => {\n    const { metadata: { name, namespace, creationTimestamp }, status, } = pipelineRun;\n    const path = resourcePath(referenceForModel(PipelineRunModel), name, namespace);\n    const lastUpdated = status\n        ? status.completionTime || status.startTime || creationTimestamp\n        : creationTimestamp;\n    return (React.createElement(\"li\", { className: \"list-group-item\" },\n        React.createElement(Grid, { gutter: \"md\" },\n            React.createElement(GridItem, { span: 6 },\n                React.createElement(Link, { to: `${path}` }, name),\n                lastUpdated && React.createElement(\"span\", { className: \"text-muted\" },\n                    \"\\u00A0(\",\n                    fromNow(lastUpdated),\n                    \")\")),\n            React.createElement(GridItem, { span: 3 },\n                React.createElement(Status, { status: pipelineRunStatus(pipelineRun) || 'Pending' })),\n            React.createElement(GridItem, { span: 3, className: \"text-right\" },\n                React.createElement(Link, { to: `${path}/logs` }, \"View logs\")))));\n};\nexport default PipelineRunItem;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/PipelineRunItem.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/pipeline-overview/PipelineRunItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAClE,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,6CAA6C,CAAC;AACtE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAOnD,MAAM,eAAe,GAAmC,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;IAC1E,MAAM,EACJ,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAChD,MAAM,GACP,GAAG,WAAW,CAAC;IAChB,MAAM,IAAI,GAAG,YAAY,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IAChF,MAAM,WAAW,GAAG,MAAM;QACxB,CAAC,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,SAAS,IAAI,iBAAiB;QAChE,CAAC,CAAC,iBAAiB,CAAC;IACtB,OAAO,CACL,4BAAI,SAAS,EAAC,iBAAiB;QAC7B,oBAAC,IAAI,IAAC,MAAM,EAAC,IAAI;YACf,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;gBACf,oBAAC,IAAI,IAAC,EAAE,EAAE,GAAG,IAAI,EAAE,IAAG,IAAI,CAAQ;gBACjC,WAAW,IAAI,8BAAM,SAAS,EAAC,YAAY;;oBAAS,OAAO,CAAC,WAAW,CAAC;wBAAS,CACzE;YACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;gBACf,oBAAC,MAAM,IAAC,MAAM,EAAE,iBAAiB,CAAC,WAAW,CAAC,IAAI,SAAS,GAAI,CACtD;YACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC,EAAE,SAAS,EAAC,YAAY;gBACvC,oBAAC,IAAI,IAAC,EAAE,EAAE,GAAG,IAAI,OAAO,gBAAkB,CACjC,CACN,CACJ,CACN,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { resourcePath } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRun } from '../../../utils/pipeline-augment';\n\ntype PipelineRunItemProps = {\n  pipelineRun: PipelineRun;\n};\n\nconst PipelineRunItem: React.FC<PipelineRunItemProps> = ({ pipelineRun }) => {\n  const {\n    metadata: { name, namespace, creationTimestamp },\n    status,\n  } = pipelineRun;\n  const path = resourcePath(referenceForModel(PipelineRunModel), name, namespace);\n  const lastUpdated = status\n    ? status.completionTime || status.startTime || creationTimestamp\n    : creationTimestamp;\n  return (\n    <li className=\"list-group-item\">\n      <Grid gutter=\"md\">\n        <GridItem span={6}>\n          <Link to={`${path}`}>{name}</Link>\n          {lastUpdated && <span className=\"text-muted\">&nbsp;({fromNow(lastUpdated)})</span>}\n        </GridItem>\n        <GridItem span={3}>\n          <Status status={pipelineRunStatus(pipelineRun) || 'Pending'} />\n        </GridItem>\n        <GridItem span={3} className=\"text-right\">\n          <Link to={`${path}/logs`}>View logs</Link>\n        </GridItem>\n      </Grid>\n    </li>\n  );\n};\n\nexport default PipelineRunItem;\n"]}]}