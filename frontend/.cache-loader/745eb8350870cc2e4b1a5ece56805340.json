{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/pods.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/pods.tsx","mtime":1615298458700},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport { \n/* eslint-disable camelcase */\nchart_color_blue_100 as blue100, chart_color_blue_200 as blue200, chart_color_blue_300 as blue300, } from '@patternfly/react-tokens';\nimport { useRefWidth } from '@console/internal/components/utils';\nimport { calculateRadius } from '@console/shared/';\nconst colorScale = [blue300.value, blue200.value, blue100.value];\nexport const PodStatusChart = ({ statuses, statusDescriptor }) => {\n    const [ref, width] = useRefWidth();\n    const data = _.map(statuses, (podList, status) => {\n        const x = status;\n        const y = podList.length;\n        return {\n            label: `${y} ${x}`,\n            x,\n            y,\n        };\n    });\n    const total = data.reduce((sum, dataPoint) => sum + dataPoint.y, 0);\n    const { podStatusInnerRadius, podStatusOuterRadius } = calculateRadius(130); // default value of size is 130\n    return (React.createElement(\"div\", { ref: ref, className: \"graph-wrapper--gauge\" },\n        React.createElement(ChartDonut, { colorScale: colorScale, data: data, height: width, title: total.toString(), width: width, innerRadius: podStatusInnerRadius, radius: podStatusOuterRadius }),\n        React.createElement(\"div\", { className: \"graph-donut-subtitle\", \"data-test-id\": \"chart-donut-subtitle\" }, statusDescriptor.path)));\n};\nPodStatusChart.displayName = 'PodStatusChart';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/pods.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/status/pods.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtD,OAAO;AACL,8BAA8B;AAC9B,oBAAoB,IAAI,OAAO,EAC/B,oBAAoB,IAAI,OAAO,EAC/B,oBAAoB,IAAI,OAAO,GAEhC,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,MAAM,UAAU,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAEjE,MAAM,CAAC,MAAM,cAAc,GAAmC,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,EAAE,EAAE;IAC/F,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,WAAW,EAAE,CAAC;IACnC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC/C,MAAM,CAAC,GAAG,MAAM,CAAC;QACjB,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;QACzB,OAAO;YACL,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAClB,CAAC;YACD,CAAC;SACF,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpE,MAAM,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,+BAA+B;IAE5G,OAAO,CACL,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAC,sBAAsB;QAC7C,oBAAC,UAAU,IACT,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,KAAK,EACb,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,EACvB,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,oBAAoB,EACjC,MAAM,EAAE,oBAAoB,GAC5B;QAEF,6BAAK,SAAS,EAAC,sBAAsB,kBAAc,sBAAsB,IACtE,gBAAgB,CAAC,IAAI,CAClB,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAOF,cAAc,CAAC,WAAW,GAAG,gBAAgB,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  /* eslint-disable camelcase */\n  chart_color_blue_100 as blue100,\n  chart_color_blue_200 as blue200,\n  chart_color_blue_300 as blue300,\n  /* eslint-enable camelcase */\n} from '@patternfly/react-tokens';\nimport { useRefWidth } from '@console/internal/components/utils';\nimport { Descriptor } from '../types';\nimport { calculateRadius } from '@console/shared/';\n\nconst colorScale = [blue300.value, blue200.value, blue100.value];\n\nexport const PodStatusChart: React.SFC<PodStatusChartProps> = ({ statuses, statusDescriptor }) => {\n  const [ref, width] = useRefWidth();\n  const data = _.map(statuses, (podList, status) => {\n    const x = status;\n    const y = podList.length;\n    return {\n      label: `${y} ${x}`,\n      x,\n      y,\n    };\n  });\n  const total = data.reduce((sum, dataPoint) => sum + dataPoint.y, 0);\n  const { podStatusInnerRadius, podStatusOuterRadius } = calculateRadius(130); // default value of size is 130\n\n  return (\n    <div ref={ref} className=\"graph-wrapper--gauge\">\n      <ChartDonut\n        colorScale={colorScale}\n        data={data}\n        height={width}\n        title={total.toString()}\n        width={width}\n        innerRadius={podStatusInnerRadius}\n        radius={podStatusOuterRadius}\n      />\n      {/* Use instead of `subTitle` on <ChartDonut> so long paths do not clip  */}\n      <div className=\"graph-donut-subtitle\" data-test-id=\"chart-donut-subtitle\">\n        {statusDescriptor.path}\n      </div>\n    </div>\n  );\n};\n\nexport type PodStatusChartProps = {\n  statusDescriptor: Descriptor;\n  statuses: { [key: string]: string[] };\n};\n\nPodStatusChart.displayName = 'PodStatusChart';\n"]}]}