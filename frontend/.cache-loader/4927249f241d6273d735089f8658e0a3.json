{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/AddBareMetalHost.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/AddBareMetalHost.tsx","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as Yup from 'yup';\nimport * as _ from 'lodash';\nimport { Formik } from 'formik';\nimport { history, resourcePathFromModel } from '@console/internal/components/utils';\nimport { nameValidationSchema } from '@console/dev-console/src/components/import/validation-schema';\nimport { getName } from '@console/shared/src';\nimport { createBareMetalHost, updateBareMetalHost } from '../../../k8s/requests/bare-metal-host';\nimport { BareMetalHostModel } from '../../../models';\nimport { getHostBMCAddress, getHostBootMACAddress, getHostDisableCertificateVerification, getHostDescription, isHostOnline, } from '../../../selectors';\nimport { getSecretPassword, getSecretUsername } from '../../../selectors/secret';\nimport { getLoadedData } from '../../../utils';\nimport { usePrevious } from '../../../hooks';\nimport AddBareMetalHostForm from './AddBareMetalHostForm';\nimport { MAC_REGEX, BMC_ADDRESS_REGEX } from './utils';\nconst getInitialValues = (host, secret) => ({\n    name: getName(host) || '',\n    BMCAddress: getHostBMCAddress(host) || '',\n    username: getSecretUsername(secret) || '',\n    password: getSecretPassword(secret) || '',\n    disableCertificateVerification: getHostDisableCertificateVerification(host) || false,\n    bootMACAddress: getHostBootMACAddress(host) || '',\n    online: isHostOnline(host) || true,\n    description: getHostDescription(host) || '',\n});\nconst AddBareMetalHost = ({ namespace, isEditing, hosts, host: resultHost, secret: resultSecret, }) => {\n    const [reload, setReload] = React.useState(false);\n    const hostNames = _.flatMap(getLoadedData(hosts, []), (host) => getName(host));\n    const initialHost = getLoadedData(resultHost);\n    const initialSecret = getLoadedData(resultSecret);\n    const prevInitialHost = usePrevious(initialHost);\n    const prevInitialSecret = usePrevious(initialSecret);\n    const initialValues = getInitialValues(initialHost, initialSecret);\n    const prevInitialValues = getInitialValues(prevInitialHost, prevInitialSecret);\n    React.useEffect(() => {\n        if (reload) {\n            setReload(false);\n        }\n    }, [reload, setReload]);\n    const showUpdated = isEditing &&\n        prevInitialHost &&\n        prevInitialSecret &&\n        !_.isEqual(prevInitialValues, initialValues);\n    const addHostValidationSchema = Yup.object().shape({\n        name: Yup.mixed()\n            .test('unique-name', 'Name \"${value}\" is already taken.', // eslint-disable-line no-template-curly-in-string\n        (value) => !hostNames.includes(value))\n            .concat(nameValidationSchema),\n        BMCAddress: Yup.string()\n            .matches(BMC_ADDRESS_REGEX, 'Value provided is not a valid BMC address')\n            .required('Required.'),\n        username: Yup.string().required('Required.'),\n        password: Yup.string().required('Required.'),\n        bootMACAddress: Yup.string()\n            .matches(MAC_REGEX, 'Value provided is not a valid MAC Address.')\n            .required('Required.'),\n    });\n    const handleSubmit = (values, actions) => {\n        const opts = Object.assign(Object.assign({}, values), { namespace });\n        const promise = isEditing\n            ? updateBareMetalHost(initialHost, initialSecret, opts)\n            : createBareMetalHost(opts);\n        promise\n            .then(() => {\n            actions.setSubmitting(false);\n            history.push(resourcePathFromModel(BareMetalHostModel, values.name, namespace));\n        })\n            .catch((error) => {\n            actions.setSubmitting(false);\n            actions.setStatus({ submitError: error.message });\n        });\n    };\n    return (React.createElement(Formik, { initialValues: initialValues, enableReinitialize: isEditing && (reload || !prevInitialHost || !prevInitialSecret), onSubmit: handleSubmit, onReset: () => setReload(true), validationSchema: addHostValidationSchema }, (props) => (React.createElement(AddBareMetalHostForm, Object.assign({}, props, { isEditing: isEditing, showUpdated: showUpdated })))));\n};\nexport default AddBareMetalHost;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/AddBareMetalHost.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/baremetal-hosts/add-baremetal-host/AddBareMetalHost.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Yup from 'yup';\nimport * as _ from 'lodash';\nimport { Formik } from 'formik';\nimport { history, resourcePathFromModel, FirehoseResult } from '@console/internal/components/utils';\nimport { nameValidationSchema } from '@console/dev-console/src/components/import/validation-schema';\nimport { getName } from '@console/shared/src';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createBareMetalHost, updateBareMetalHost } from '../../../k8s/requests/bare-metal-host';\nimport { BareMetalHostModel } from '../../../models';\nimport { BareMetalHostKind } from '../../../types';\nimport {\n  getHostBMCAddress,\n  getHostBootMACAddress,\n  getHostDisableCertificateVerification,\n  getHostDescription,\n  isHostOnline,\n} from '../../../selectors';\nimport { getSecretPassword, getSecretUsername } from '../../../selectors/secret';\nimport { getLoadedData } from '../../../utils';\nimport { usePrevious } from '../../../hooks';\nimport AddBareMetalHostForm from './AddBareMetalHostForm';\nimport { AddBareMetalHostFormValues } from './types';\nimport { MAC_REGEX, BMC_ADDRESS_REGEX } from './utils';\n\nconst getInitialValues = (\n  host: BareMetalHostKind,\n  secret: K8sResourceKind,\n): AddBareMetalHostFormValues => ({\n  name: getName(host) || '',\n  BMCAddress: getHostBMCAddress(host) || '',\n  username: getSecretUsername(secret) || '',\n  password: getSecretPassword(secret) || '',\n  disableCertificateVerification: getHostDisableCertificateVerification(host) || false,\n  bootMACAddress: getHostBootMACAddress(host) || '',\n  online: isHostOnline(host) || true,\n  description: getHostDescription(host) || '',\n});\n\ntype AddBareMetalHostProps = {\n  namespace: string;\n  isEditing: boolean;\n  loaded?: boolean;\n  hosts?: FirehoseResult<BareMetalHostKind[]>;\n  host?: FirehoseResult<BareMetalHostKind>;\n  secret?: FirehoseResult<K8sResourceKind>;\n};\n\nconst AddBareMetalHost: React.FC<AddBareMetalHostProps> = ({\n  namespace,\n  isEditing,\n  hosts,\n  host: resultHost,\n  secret: resultSecret,\n}) => {\n  const [reload, setReload] = React.useState<boolean>(false);\n  const hostNames = _.flatMap(getLoadedData(hosts, []), (host) => getName(host));\n  const initialHost = getLoadedData(resultHost);\n  const initialSecret = getLoadedData(resultSecret);\n  const prevInitialHost = usePrevious(initialHost);\n  const prevInitialSecret = usePrevious(initialSecret);\n\n  const initialValues = getInitialValues(initialHost, initialSecret);\n  const prevInitialValues = getInitialValues(prevInitialHost, prevInitialSecret);\n\n  React.useEffect(() => {\n    if (reload) {\n      setReload(false);\n    }\n  }, [reload, setReload]);\n\n  const showUpdated =\n    isEditing &&\n    prevInitialHost &&\n    prevInitialSecret &&\n    !_.isEqual(prevInitialValues, initialValues);\n\n  const addHostValidationSchema = Yup.object().shape({\n    name: Yup.mixed()\n      .test(\n        'unique-name',\n        'Name \"${value}\" is already taken.', // eslint-disable-line no-template-curly-in-string\n        (value) => !hostNames.includes(value),\n      )\n      .concat(nameValidationSchema),\n    BMCAddress: Yup.string()\n      .matches(BMC_ADDRESS_REGEX, 'Value provided is not a valid BMC address')\n      .required('Required.'),\n    username: Yup.string().required('Required.'),\n    password: Yup.string().required('Required.'),\n    bootMACAddress: Yup.string()\n      .matches(MAC_REGEX, 'Value provided is not a valid MAC Address.')\n      .required('Required.'),\n  });\n\n  const handleSubmit = (values, actions) => {\n    const opts = { ...values, namespace };\n    const promise = isEditing\n      ? updateBareMetalHost(initialHost, initialSecret, opts)\n      : createBareMetalHost(opts);\n\n    promise\n      .then(() => {\n        actions.setSubmitting(false);\n        history.push(resourcePathFromModel(BareMetalHostModel, values.name, namespace));\n      })\n      .catch((error) => {\n        actions.setSubmitting(false);\n        actions.setStatus({ submitError: error.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={isEditing && (reload || !prevInitialHost || !prevInitialSecret)}\n      onSubmit={handleSubmit}\n      onReset={() => setReload(true)}\n      validationSchema={addHostValidationSchema}\n    >\n      {(props) => (\n        <AddBareMetalHostForm {...props} isEditing={isEditing} showUpdated={showUpdated} />\n      )}\n    </Formik>\n  );\n};\n\nexport default AddBareMetalHost;\n"]}]}