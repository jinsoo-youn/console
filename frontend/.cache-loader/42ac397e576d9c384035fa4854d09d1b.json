{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/status/PipelineTaskStatus.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/status/PipelineTaskStatus.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Firehose } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineBars } from './PipelineBars';\nexport const PipelineTaskStatus = ({ pipelinerun, pipeline, }) => {\n    var _a, _b, _c;\n    return !pipeline && ((_b = (_a = pipelinerun.spec) === null || _a === void 0 ? void 0 : _a.pipelineRef) === null || _b === void 0 ? void 0 : _b.name) && ((_c = pipelinerun.metadata) === null || _c === void 0 ? void 0 : _c.namespace) ? (React.createElement(Firehose, { resources: [\n            {\n                name: pipelinerun.spec.pipelineRef.name,\n                namespace: pipelinerun.metadata.namespace,\n                kind: referenceForModel(PipelineModel),\n                isList: false,\n                prop: 'pipeline',\n            },\n        ] },\n        React.createElement(PipelineBars, { pipelinerun: pipelinerun }))) : (React.createElement(PipelineBars, { pipelinerun: pipelinerun, pipeline: { data: pipeline } }));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/status/PipelineTaskStatus.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/status/PipelineTaskStatus.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAEjE,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAO9C,MAAM,CAAC,MAAM,kBAAkB,GAAsC,CAAC,EACpE,WAAW,EACX,QAAQ,GACT,EAAE,EAAE;;IACH,OAAO,CAAC,QAAQ,iBAAI,WAAW,CAAC,IAAI,0CAAE,WAAW,0CAAE,IAAI,CAAA,WAAI,WAAW,CAAC,QAAQ,0CAAE,SAAS,CAAA,CAAC,CAAC,CAAC,CAC3F,oBAAC,QAAQ,IACP,SAAS,EAAE;YACT;gBACE,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI;gBACvC,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS;gBACzC,IAAI,EAAE,iBAAiB,CAAC,aAAa,CAAC;gBACtC,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,UAAU;aACjB;SACF;QAED,oBAAC,YAAY,IAAC,WAAW,EAAE,WAAW,GAAI,CACjC,CACZ,CAAC,CAAC,CAAC,CACF,oBAAC,YAAY,IAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAI,CACzE,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Firehose } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRun, Pipeline } from '../../../utils/pipeline-augment';\nimport { PipelineModel } from '../../../models';\nimport { PipelineBars } from './PipelineBars';\n\nexport interface PipelineTaskStatusProps {\n  pipelinerun: PipelineRun;\n  pipeline?: Pipeline;\n}\n\nexport const PipelineTaskStatus: React.FC<PipelineTaskStatusProps> = ({\n  pipelinerun,\n  pipeline,\n}) => {\n  return !pipeline && pipelinerun.spec?.pipelineRef?.name && pipelinerun.metadata?.namespace ? (\n    <Firehose\n      resources={[\n        {\n          name: pipelinerun.spec.pipelineRef.name,\n          namespace: pipelinerun.metadata.namespace,\n          kind: referenceForModel(PipelineModel),\n          isList: false,\n          prop: 'pipeline',\n        },\n      ]}\n    >\n      <PipelineBars pipelinerun={pipelinerun} />\n    </Firehose>\n  ) : (\n    <PipelineBars pipelinerun={pipelinerun} pipeline={{ data: pipeline }} />\n  );\n};\n"]}]}