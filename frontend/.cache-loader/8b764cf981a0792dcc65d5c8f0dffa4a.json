{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/SwitchField.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/SwitchField.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport ToggleableFieldBase from './ToggleableFieldBase';\nconst SwitchField = (baseProps) => (React.createElement(ToggleableFieldBase, Object.assign({}, baseProps), (_a) => {\n    var { isValid } = _a, props = __rest(_a, [\"isValid\"]);\n    return React.createElement(Switch, Object.assign({}, props));\n}));\nexport default SwitchField;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/SwitchField.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/formik-fields/SwitchField.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAEhD,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAExD,MAAM,WAAW,GAAiC,CAAC,SAAS,EAAE,EAAE,CAAC,CAC/D,oBAAC,mBAAmB,oBAAK,SAAS,GAC/B,CAAC,EAAqB,EAAE,EAAE;QAAzB,EAAE,OAAO,OAAY,EAAV,+BAAQ;IAAO,OAAA,oBAAC,MAAM,oBAAK,KAAK,EAAI,CAAA;CAAA,CAC7B,CACvB,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import * as React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport { CheckboxFieldProps } from './field-types';\nimport ToggleableFieldBase from './ToggleableFieldBase';\n\nconst SwitchField: React.FC<CheckboxFieldProps> = (baseProps) => (\n  <ToggleableFieldBase {...baseProps}>\n    {({ isValid, ...props }) => <Switch {...props} />}\n  </ToggleableFieldBase>\n);\n\nexport default SwitchField;\n"]}]}