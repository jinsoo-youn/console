{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/converged-credentials/credentials.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/converged-credentials/credentials.tsx","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Base64 } from 'js-base64';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { SecretModel, ConfigMapModel } from '@console/internal/models';\nimport { createModalLauncher } from '@console/internal/components/factory';\nimport { CEPH_STORAGE_NAMESPACE } from '../../constants';\nconst createJSONFile = (data) => `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(data))}`;\nconst ExportCredentials = (props) => {\n    const ref = React.useRef();\n    const [payload, setPayload] = React.useState('');\n    React.useEffect(() => {\n        Promise.all([\n            k8sGet(SecretModel, 'rook-ceph-mon', CEPH_STORAGE_NAMESPACE),\n            k8sGet(ConfigMapModel, 'rook-ceph-mon-endpoints', CEPH_STORAGE_NAMESPACE),\n        ])\n            .then((data) => {\n            var _a, _b, _c, _d, _e, _f, _g;\n            const fsid = Base64.decode((_b = (_a = data === null || data === void 0 ? void 0 : data[0]) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.fsid);\n            const adminSecret = Base64.decode((_d = (_c = data === null || data === void 0 ? void 0 : data[0]) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d['admin-secret']);\n            const monIP = (_g = (_f = (_e = data === null || data === void 0 ? void 0 : data[1]) === null || _e === void 0 ? void 0 : _e.data) === null || _f === void 0 ? void 0 : _f.data.split(',')) === null || _g === void 0 ? void 0 : _g[0];\n            setPayload(createJSONFile({\n                admin: adminSecret,\n                monData: monIP,\n                // Todo(bipuladh): Change this when OCS supports multiple NS's\n                clusterName: CEPH_STORAGE_NAMESPACE,\n                fsid,\n            }));\n            ref.current.click();\n            props.close();\n        })\n            .catch((err) => {\n            // eslint-disable-next-line no-console\n            console.error('Error exporting credentials', err);\n            props.close();\n        });\n        // No need to run the effect multiple times\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (React.createElement(\"a\", { id: \"downloadAnchorElem\", href: payload, download: \"credentials.json\", ref: ref, target: \"_blank\", rel: \"noopener noreferrer\" }, \"Download\"));\n};\nexport default createModalLauncher(ExportCredentials);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/converged-credentials/credentials.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/converged-credentials/credentials.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,8BAA8B,CAAC;AACtD,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,mBAAmB,EAAuB,MAAM,sCAAsC,CAAC;AAChG,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAEzD,MAAM,cAAc,GAAG,CAAC,IAAiB,EAAE,EAAE,CAC3C,gCAAgC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;AAE7E,MAAM,iBAAiB,GAAkC,CAAC,KAAK,EAAE,EAAE;IACjE,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,EAAqB,CAAC;IAC9C,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC;YACV,MAAM,CAAC,WAAW,EAAE,eAAe,EAAE,sBAAsB,CAAC;YAC5D,MAAM,CAAC,cAAc,EAAE,yBAAyB,EAAE,sBAAsB,CAAC;SAC1E,CAAC;aACC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;;YACb,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,aAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,2CAAG,IAAI,0CAAE,IAAI,CAAC,CAAC;YAClD,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,aAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,2CAAG,IAAI,0CAAG,cAAc,EAAE,CAAC;YACrE,MAAM,KAAK,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,2CAAG,IAAI,0CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,2CAAI,CAAC,CAAC,CAAC;YACpD,UAAU,CACR,cAAc,CAAC;gBACb,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,KAAK;gBACd,8DAA8D;gBAC9D,WAAW,EAAE,sBAAsB;gBACnC,IAAI;aACL,CAAC,CACH,CAAC;YACF,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QACL,2CAA2C;QAC3C,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,OAAO,CACL,2BACE,EAAE,EAAC,oBAAoB,EACvB,IAAI,EAAE,OAAO,EACb,QAAQ,EAAC,kBAAkB,EAC3B,GAAG,EAAE,GAAG,EACR,MAAM,EAAC,QAAQ,EACf,GAAG,EAAC,qBAAqB,eAGvB,CACL,CAAC;AACJ,CAAC,CAAC;AASF,eAAe,mBAAmB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Base64 } from 'js-base64';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { SecretModel, ConfigMapModel } from '@console/internal/models';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport { CEPH_STORAGE_NAMESPACE } from '../../constants';\n\nconst createJSONFile = (data: Credentials) =>\n  `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(data))}`;\n\nconst ExportCredentials: React.FC<ModalComponentProps> = (props) => {\n  const ref = React.useRef<HTMLAnchorElement>();\n  const [payload, setPayload] = React.useState('');\n  React.useEffect(() => {\n    Promise.all([\n      k8sGet(SecretModel, 'rook-ceph-mon', CEPH_STORAGE_NAMESPACE),\n      k8sGet(ConfigMapModel, 'rook-ceph-mon-endpoints', CEPH_STORAGE_NAMESPACE),\n    ])\n      .then((data) => {\n        const fsid = Base64.decode(data?.[0]?.data?.fsid);\n        const adminSecret = Base64.decode(data?.[0]?.data?.['admin-secret']);\n        const monIP = data?.[1]?.data?.data.split(',')?.[0];\n        setPayload(\n          createJSONFile({\n            admin: adminSecret,\n            monData: monIP,\n            // Todo(bipuladh): Change this when OCS supports multiple NS's\n            clusterName: CEPH_STORAGE_NAMESPACE,\n            fsid,\n          }),\n        );\n        ref.current.click();\n        props.close();\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('Error exporting credentials', err);\n        props.close();\n      });\n    // No need to run the effect multiple times\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <a\n      id=\"downloadAnchorElem\"\n      href={payload}\n      download=\"credentials.json\"\n      ref={ref}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Download\n    </a>\n  );\n};\n\ntype Credentials = {\n  admin: string;\n  monData: string;\n  clusterName: string;\n  fsid: string;\n};\n\nexport default createModalLauncher(ExportCredentials);\n"]}]}