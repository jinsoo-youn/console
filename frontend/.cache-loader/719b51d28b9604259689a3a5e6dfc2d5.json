{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/layers/LayersProvider.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/layers/LayersProvider.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { DEFAULT_LAYER } from '../../const';\nimport LayersContext from './LayersContext';\nexport default class LayersProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.contextValue = (id) => {\n            if (this.state[id]) {\n                return this.state[id];\n            }\n            throw new Error(`Unknown layer '${id}'`);\n        };\n        this.setDomLayers = (node, id) => {\n            if (node && this.state[id] !== node) {\n                this.setState((state) => (Object.assign(Object.assign({}, state), { [id]: node })));\n            }\n        };\n        this.getLayerNode = (id) => {\n            const node = this.state[id];\n            if (node) {\n                return node;\n            }\n            throw new Error(`Unknown layer '${id}'`);\n        };\n        this.state = {};\n    }\n    render() {\n        const { layers, children } = this.props;\n        if (layers && !layers.includes(DEFAULT_LAYER)) {\n            throw new Error('Missing default layer.');\n        }\n        const layerIds = layers || [DEFAULT_LAYER];\n        return (React.createElement(LayersContext.Provider, { value: this.contextValue }, layerIds.map((id) => (React.createElement(\"g\", { key: id, \"data-layer-id\": id, ref: (r) => this.setDomLayers(r, id) }, id === DEFAULT_LAYER && this.state[id] ? children : undefined)))));\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/layers/LayersProvider.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/components/layers/LayersProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAS5C,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,KAAK,CAAC,SAAqC;IACrF,YAAY,KAA0B;QACpC,KAAK,CAAC,KAAK,CAAC,CAAC;QAIP,iBAAY,GAAG,CAAC,EAAU,EAAW,EAAE;YAC7C,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;gBAClB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACvB;YACD,MAAM,IAAI,KAAK,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEM,iBAAY,GAAG,CAAC,IAAwB,EAAE,EAAU,EAAE,EAAE;YAC9D,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,CAAC,EAAE,CAAC,EAAE,IAAI,IAAG,CAAC,CAAC;aACtD;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,EAAU,EAAW,EAAE;YACrC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC;aACb;YACD,MAAM,IAAI,KAAK,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC;QAtBA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAuBD,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YAC7C,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;QACD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,OAAO,CACL,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,IAAI,CAAC,YAAY,IAC7C,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CACpB,2BAAG,GAAG,EAAE,EAAE,mBAAiB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,IAChE,EAAE,KAAK,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAC5D,CACL,CAAC,CACqB,CAC1B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import * as React from 'react';\nimport { DEFAULT_LAYER } from '../../const';\nimport LayersContext from './LayersContext';\n\ntype LayersProviderProps = {\n  layers?: string[];\n  children?: React.ReactNode;\n};\n\ntype State = { [id: string]: Element };\n\nexport default class LayersProvider extends React.Component<LayersProviderProps, State> {\n  constructor(props: LayersProviderProps) {\n    super(props);\n    this.state = {};\n  }\n\n  private contextValue = (id: string): Element => {\n    if (this.state[id]) {\n      return this.state[id];\n    }\n    throw new Error(`Unknown layer '${id}'`);\n  };\n\n  private setDomLayers = (node: SVGGElement | null, id: string) => {\n    if (node && this.state[id] !== node) {\n      this.setState((state) => ({ ...state, [id]: node }));\n    }\n  };\n\n  getLayerNode = (id: string): Element => {\n    const node = this.state[id];\n    if (node) {\n      return node;\n    }\n    throw new Error(`Unknown layer '${id}'`);\n  };\n\n  render() {\n    const { layers, children } = this.props;\n    if (layers && !layers.includes(DEFAULT_LAYER)) {\n      throw new Error('Missing default layer.');\n    }\n    const layerIds = layers || [DEFAULT_LAYER];\n    return (\n      <LayersContext.Provider value={this.contextValue}>\n        {layerIds.map((id) => (\n          <g key={id} data-layer-id={id} ref={(r) => this.setDomLayers(r, id)}>\n            {id === DEFAULT_LAYER && this.state[id] ? children : undefined}\n          </g>\n        ))}\n      </LayersContext.Provider>\n    );\n  }\n}\n"]}]}