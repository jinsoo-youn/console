{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/index.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/index.ts","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export var ProviderType;\n(function (ProviderType) {\n    ProviderType[\"RedHat\"] = \"Red Hat\";\n    ProviderType[\"Certified\"] = \"Certified\";\n    ProviderType[\"Community\"] = \"Community\";\n    ProviderType[\"Custom\"] = \"Custom\";\n    ProviderType[\"Marketplace\"] = \"Marketplace\";\n})(ProviderType || (ProviderType = {}));\nexport var InstalledState;\n(function (InstalledState) {\n    InstalledState[\"Installed\"] = \"Installed\";\n    InstalledState[\"NotInstalled\"] = \"Not Installed\";\n})(InstalledState || (InstalledState = {}));\nexport var CapabilityLevel;\n(function (CapabilityLevel) {\n    CapabilityLevel[\"BasicInstall\"] = \"Basic Install\";\n    CapabilityLevel[\"SeamlessUpgrades\"] = \"Seamless Upgrades\";\n    CapabilityLevel[\"FullLifecycle\"] = \"Full Lifecycle\";\n    CapabilityLevel[\"DeepInsights\"] = \"Deep Insights\";\n})(CapabilityLevel || (CapabilityLevel = {}));\nexport var InfraFeatures;\n(function (InfraFeatures) {\n    InfraFeatures[\"Disconnected\"] = \"Disconnected\";\n    InfraFeatures[\"Proxy\"] = \"Proxy\";\n    InfraFeatures[\"FipsMode\"] = \"FIPS Mode\";\n})(InfraFeatures || (InfraFeatures = {}));\nexport var OperatorHubCSVAnnotationKey;\n(function (OperatorHubCSVAnnotationKey) {\n    OperatorHubCSVAnnotationKey[\"certifiedLevel\"] = \"certifiedLevel\";\n    OperatorHubCSVAnnotationKey[\"healthIndex\"] = \"healthIndex\";\n    OperatorHubCSVAnnotationKey[\"repository\"] = \"repository\";\n    OperatorHubCSVAnnotationKey[\"containerImage\"] = \"containerImage\";\n    OperatorHubCSVAnnotationKey[\"createdAt\"] = \"createdAt\";\n    OperatorHubCSVAnnotationKey[\"support\"] = \"support\";\n    OperatorHubCSVAnnotationKey[\"description\"] = \"description\";\n    OperatorHubCSVAnnotationKey[\"categories\"] = \"categories\";\n    OperatorHubCSVAnnotationKey[\"capabilities\"] = \"capabilities\";\n    OperatorHubCSVAnnotationKey[\"actionText\"] = \"marketplace.openshift.io/action-text\";\n    OperatorHubCSVAnnotationKey[\"remoteWorkflow\"] = \"marketplace.openshift.io/remote-workflow\";\n    OperatorHubCSVAnnotationKey[\"supportWorkflow\"] = \"marketplace.openshift.io/support-workflow\";\n    OperatorHubCSVAnnotationKey[\"infrastructureFeatures\"] = \"operators.openshift.io/infrastructure-features\";\n    OperatorHubCSVAnnotationKey[\"validSubscription\"] = \"operators.openshift.io/valid-subscription\";\n    OperatorHubCSVAnnotationKey[\"tags\"] = \"tags\";\n})(OperatorHubCSVAnnotationKey || (OperatorHubCSVAnnotationKey = {}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/index.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/operator-hub/index.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,YAMX;AAND,WAAY,YAAY;IACtB,kCAAkB,CAAA;IAClB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,iCAAiB,CAAA;IACjB,2CAA2B,CAAA;AAC7B,CAAC,EANW,YAAY,KAAZ,YAAY,QAMvB;AAED,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,yCAAuB,CAAA;IACvB,gDAA8B,CAAA;AAChC,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,MAAM,CAAN,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,iDAA8B,CAAA;IAC9B,yDAAsC,CAAA;IACtC,mDAAgC,CAAA;IAChC,iDAA8B,CAAA;AAChC,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;AAED,MAAM,CAAN,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,8CAA6B,CAAA;IAC7B,gCAAe,CAAA;IACf,uCAAsB,CAAA;AACxB,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;AAuBD,MAAM,CAAN,IAAY,2BAgBX;AAhBD,WAAY,2BAA2B;IACrC,gEAAiC,CAAA;IACjC,0DAA2B,CAAA;IAC3B,wDAAyB,CAAA;IACzB,gEAAiC,CAAA;IACjC,sDAAuB,CAAA;IACvB,kDAAmB,CAAA;IACnB,0DAA2B,CAAA;IAC3B,wDAAyB,CAAA;IACzB,4DAA6B,CAAA;IAC7B,kFAAmD,CAAA;IACnD,0FAA2D,CAAA;IAC3D,4FAA6D,CAAA;IAC7D,wGAAyE,CAAA;IACzE,8FAA+D,CAAA;IAC/D,4CAAa,CAAA;AACf,CAAC,EAhBW,2BAA2B,KAA3B,2BAA2B,QAgBtC","sourcesContent":["import { K8sResourceKind, ObjectMetadata } from '@console/internal/module/k8s';\nimport { PackageManifestKind, SubscriptionKind } from '../../types';\n\nexport enum ProviderType {\n  RedHat = 'Red Hat',\n  Certified = 'Certified',\n  Community = 'Community',\n  Custom = 'Custom',\n  Marketplace = 'Marketplace',\n}\n\nexport enum InstalledState {\n  Installed = 'Installed',\n  NotInstalled = 'Not Installed',\n}\n\nexport enum CapabilityLevel {\n  BasicInstall = 'Basic Install',\n  SeamlessUpgrades = 'Seamless Upgrades',\n  FullLifecycle = 'Full Lifecycle',\n  DeepInsights = 'Deep Insights',\n}\n\nexport enum InfraFeatures {\n  Disconnected = 'Disconnected',\n  Proxy = 'Proxy',\n  FipsMode = 'FIPS Mode',\n}\n\nexport type OperatorHubItem = {\n  obj: PackageManifestKind;\n  name: string;\n  kind: string;\n  uid: string;\n  installed: boolean;\n  installState?: InstalledState;\n  subscription?: SubscriptionKind;\n  provider: ProviderType;\n  longDescription: string;\n  description: string;\n  createdAt?: string;\n  tags: string[];\n  categories: string[];\n  catalogSource: string;\n  catalogSourceNamespace: string;\n  [key: string]: any;\n  validSubscription: string[];\n  infraFeatures: InfraFeatures[];\n};\n\nexport enum OperatorHubCSVAnnotationKey {\n  certifiedLevel = 'certifiedLevel',\n  healthIndex = 'healthIndex',\n  repository = 'repository',\n  containerImage = 'containerImage',\n  createdAt = 'createdAt',\n  support = 'support',\n  description = 'description',\n  categories = 'categories',\n  capabilities = 'capabilities',\n  actionText = 'marketplace.openshift.io/action-text',\n  remoteWorkflow = 'marketplace.openshift.io/remote-workflow',\n  supportWorkflow = 'marketplace.openshift.io/support-workflow',\n  infrastructureFeatures = 'operators.openshift.io/infrastructure-features',\n  validSubscription = 'operators.openshift.io/valid-subscription',\n  tags = 'tags',\n}\n\nexport type OperatorHubCSVAnnotations = {\n  [OperatorHubCSVAnnotationKey.certifiedLevel]?: string;\n  [OperatorHubCSVAnnotationKey.healthIndex]?: string;\n  [OperatorHubCSVAnnotationKey.repository]?: string;\n  [OperatorHubCSVAnnotationKey.containerImage]?: string;\n  [OperatorHubCSVAnnotationKey.createdAt]?: string;\n  [OperatorHubCSVAnnotationKey.support]?: string;\n  [OperatorHubCSVAnnotationKey.description]?: string;\n  [OperatorHubCSVAnnotationKey.categories]?: string;\n  [OperatorHubCSVAnnotationKey.capabilities]?: CapabilityLevel;\n  [OperatorHubCSVAnnotationKey.actionText]?: string;\n  [OperatorHubCSVAnnotationKey.remoteWorkflow]?: string;\n  [OperatorHubCSVAnnotationKey.supportWorkflow]?: string;\n  [OperatorHubCSVAnnotationKey.infrastructureFeatures]?: string;\n  [OperatorHubCSVAnnotationKey.validSubscription]?: string;\n  [OperatorHubCSVAnnotationKey.tags]?: string[];\n} & ObjectMetadata['annotations'];\n\ntype OperatorHubSpec = {\n  sources?: {\n    name: string;\n    disabled: boolean;\n  }[];\n  disableAllDefaultSources?: boolean;\n};\n\ntype OperatorHubStatus = {\n  sources: {\n    disabled: boolean;\n    name: string;\n    status: string;\n  }[];\n};\n\nexport type OperatorHubKind = K8sResourceKind & {\n  spec: OperatorHubSpec;\n  status: OperatorHubStatus;\n};\n"]}]}