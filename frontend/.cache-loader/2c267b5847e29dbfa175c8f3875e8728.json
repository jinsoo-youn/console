{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/utils/useSize.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/utils/useSize.ts","mtime":1615298458710},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nconst EMPTY = [];\nexport const useSize = (dependencies = EMPTY) => {\n    const [size, setSize] = React.useState();\n    const sizeRef = React.useRef();\n    sizeRef.current = size;\n    const callbackRef = React.useCallback((node) => {\n        if (node != null) {\n            const bb = node.getBBox();\n            if (!sizeRef.current ||\n                sizeRef.current.width !== bb.width ||\n                sizeRef.current.height !== bb.height) {\n                setSize({ width: bb.width, height: bb.height });\n            }\n        }\n        // dynamic dependencies\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies);\n    return [size, callbackRef];\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/utils/useSize.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/utils/useSize.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAO/B,MAAM,KAAK,GAAU,EAAE,CAAC;AAExB,MAAM,CAAC,MAAM,OAAO,GAAG,CACrB,eAAsB,KAAK,EAC6B,EAAE;IAC1D,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAQ,CAAC;IAC/C,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAoB,CAAC;IACjD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IAEvB,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,IAAwB,EAAQ,EAAE;QACvE,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC1B,IACE,CAAC,OAAO,CAAC,OAAO;gBAChB,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE,CAAC,KAAK;gBAClC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EACpC;gBACA,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;aACjD;SACF;QACD,uBAAuB;QACvB,uDAAuD;IACzD,CAAC,EAAE,YAAY,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\ntype Size = {\n  width: number;\n  height: number;\n};\n\nconst EMPTY: any[] = [];\n\nexport const useSize = (\n  dependencies: any[] = EMPTY,\n): [Size | undefined, (node: SVGGraphicsElement) => void] => {\n  const [size, setSize] = React.useState<Size>();\n  const sizeRef = React.useRef<Size | undefined>();\n  sizeRef.current = size;\n\n  const callbackRef = React.useCallback((node: SVGGraphicsElement): void => {\n    if (node != null) {\n      const bb = node.getBBox();\n      if (\n        !sizeRef.current ||\n        sizeRef.current.width !== bb.width ||\n        sizeRef.current.height !== bb.height\n      ) {\n        setSize({ width: bb.width, height: bb.height });\n      }\n    }\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n  return [size, callbackRef];\n};\n"]}]}