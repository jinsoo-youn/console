{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","mtime":1617957501080},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ModalBody, ModalSubmitFooter, ModalTitle, createModalLauncher, } from '../../factory/modal';\nimport { withHandlePromise } from '../../utils';\nimport { Section } from '../utils/section';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { TextInput } from '@patternfly/react-core';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId, getUserGroup } from '../../../hypercloud/auth';\nimport { useTranslation } from 'react-i18next';\nconst radioItems = (t) => [\n    {\n        title: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_RADIOBUTTON_1'),\n        value: 'user'\n    },\n    {\n        title: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_RADIOBUTTON_2'),\n        value: 'group'\n    },\n];\nconst roleItems = (t) => [\n    {\n        title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_1'),\n        value: 'admin',\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_2'),\n        value: 'developer',\n    },\n    {\n        title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_3'),\n        value: 'guest'\n    },\n];\nexport const InviteMemberModal = withHandlePromise((props) => {\n    const [type, setType] = React.useState('user');\n    const [role, setRole] = React.useState('admin');\n    const [errorMsg, setError] = React.useState('');\n    const [selectedMember, selectMember] = React.useState('');\n    const [inProgress, setProgress] = React.useState(false);\n    React.useEffect(() => {\n        clearSelection();\n    }, [type]);\n    const clearSelection = () => {\n        selectMember('');\n    };\n    const submit = (e) => {\n        e.preventDefault();\n        // Append to an existing array, but handle the special case when the array is null.\n        setProgress(true);\n        coFetchJSON(`/api/multi-hypercloud/namespaces/${props.namespace}/clustermanagers/${props.clusterName}/member_invitation/${type}/${selectedMember}?userId=${getId()}${getUserGroup()}&remoteRole=${role}`, 'POST')\n            .then((res) => {\n            setProgress(false);\n            props.close();\n        })\n            .catch((err) => {\n            clearSelection();\n            setProgress(false);\n            setError(err);\n        });\n    };\n    const { t } = useTranslation();\n    return (React.createElement(\"form\", { onSubmit: submit, name: 'form', className: 'modal-content ' },\n        React.createElement(ModalTitle, null, t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_TITLE_1')),\n        React.createElement(ModalBody, { unsetOverflow: true },\n            React.createElement(Section, { id: 'user' },\n                React.createElement(\"div\", { className: 'hc-invite-modal__input-members' },\n                    React.createElement(RadioGroup, { id: 'type', currentValue: type, items: radioItems.bind(null, t)(), onChange: ({ currentTarget }) => { setType(currentTarget.value); clearSelection(); }, inline: true }),\n                    React.createElement(\"div\", { className: 'hc-invite-modal__members' },\n                        React.createElement(TextInput, { type: \"text\", name: \"selected-member\", value: selectedMember, onChange: selectMember })),\n                    React.createElement(\"div\", null, type === 'user' ? t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_SUBMESSAGE_1').split('\\n').map(line => {\n                        return (React.createElement(\"span\", null,\n                            line,\n                            React.createElement(\"br\", null)));\n                    }) : t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_SUBMESSAGE_2').split('\\n').map(line => {\n                        return (React.createElement(\"span\", null,\n                            line,\n                            React.createElement(\"br\", null)));\n                    })))),\n            React.createElement(Section, { label: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_LABEL_1'), id: 'role', isRequired: true },\n                React.createElement(RadioGroup, { id: 'role', currentValue: role, items: roleItems.bind(null, t)(), onChange: ({ currentTarget }) => setRole(currentTarget.value) }))),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMsg, inProgress: inProgress, submitText: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_BUTTON_3'), cancelText: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_BUTTON_2'), cancel: props.cancel })));\n});\nexport const inviteMemberModal = createModalLauncher(InviteMemberModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '../../factory/modal';\nimport { HandlePromiseProps, withHandlePromise } from '../../utils';\nimport { Section } from '../utils/section';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { TextInput } from '@patternfly/react-core';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId, getUserGroup } from '../../../hypercloud/auth';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nconst radioItems = (t?: TFunction) => [\n  {\n    title: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_RADIOBUTTON_1'),\n    value: 'user'\n  },\n  {\n    title: t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_RADIOBUTTON_2'),\n    value: 'group'\n  },\n];\n\nconst roleItems = (t?: TFunction) => [\n  {\n    title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_1'),\n    value: 'admin',\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_2'),\n    value: 'developer',\n  },\n  {\n    title: t('COMMON:MSG_DETAILS_TABACCESSPERMISSIONS_RADIOBUTTON_3'),\n    value: 'guest'\n  },\n];\n\nexport const InviteMemberModal = withHandlePromise((props: InviteMemberModalProps) => {\n  const [type, setType] = React.useState('user');\n  const [role, setRole] = React.useState('admin');\n  const [errorMsg, setError] = React.useState('');\n  const [selectedMember, selectMember] = React.useState('');\n  const [inProgress, setProgress] = React.useState(false);\n\n  React.useEffect(() => {\n    clearSelection();\n  }, [type]);\n\n  const clearSelection = () => {\n    selectMember('');\n  };\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    // Append to an existing array, but handle the special case when the array is null.\n    setProgress(true);\n    coFetchJSON(`/api/multi-hypercloud/namespaces/${props.namespace}/clustermanagers/${props.clusterName}/member_invitation/${type}/${selectedMember}?userId=${getId()}${getUserGroup()}&remoteRole=${role}`, 'POST')\n      .then((res) => {\n        setProgress(false);\n        props.close();\n      })\n      .catch((err) => {\n        clearSelection();\n        setProgress(false);\n        setError(err);\n      });\n  };\n\n  const { t } = useTranslation();\n  return (\n    <form onSubmit={submit} name='form' className='modal-content '>\n      <ModalTitle>{t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_TITLE_1')}</ModalTitle>\n      <ModalBody unsetOverflow={true}>\n        <Section id='user'>\n          <div className='hc-invite-modal__input-members'>\n            <RadioGroup\n              id='type'\n              currentValue={type}\n              items={radioItems.bind(null, t)()}\n              onChange={({ currentTarget }) => { setType(currentTarget.value); clearSelection() }}\n              inline\n            />\n            <div className='hc-invite-modal__members'>\n              <TextInput\n                type=\"text\"\n                name=\"selected-member\"\n                value={selectedMember}\n                onChange={selectMember}\n              />\n            </div>\n            <div>\n              {type === 'user' ? t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_SUBMESSAGE_1').split('\\n').map(line => {\n                return (<span>{line}<br /></span>)\n              }) : t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_SUBMESSAGE_2').split('\\n').map(line => {\n                return (<span>{line}<br /></span>)\n              })}\n            </div>\n          </div>\n        </Section>\n        <Section label={t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_LABEL_1')} id='role' isRequired={true}>\n          <RadioGroup\n            id='role'\n            currentValue={role}\n            items={roleItems.bind(null, t)()}\n            onChange={({ currentTarget }) => setRole(currentTarget.value)}\n          />\n        </Section>\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMsg}\n        inProgress={inProgress}\n        submitText={t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_BUTTON_3')}\n        cancelText={t('MULTI:MSG_MULTI_CLUSTERS_INVITEPEOPLEPOPUP_BUTTON_2')}\n        cancel={props.cancel}\n      />\n    </form>\n  );\n});\n\nexport const inviteMemberModal = createModalLauncher(InviteMemberModal);\n\nexport type InviteMemberModalProps = {\n  clusterName: string;\n  namespace: string;\n  type: string;\n  existMembers: string[];\n  existGroups: string[];\n} & ModalComponentProps &\n  HandlePromiseProps;\n"]}]}