{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { ModalBody, ModalSubmitFooter, ModalTitle, createModalLauncher, } from '../../factory/modal';\nimport { withHandlePromise, Dropdown } from '../../utils';\nimport { Section } from '../utils/section';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId } from '../../../hypercloud/auth';\nconst radioItems = (disabled) => [\n    {\n        title: 'User',\n        value: 'User',\n        disabled\n    },\n    {\n        title: 'User Group',\n        value: 'Group',\n        disabled\n    },\n];\nconst dropdownItems = {\n    admin: 'Admin',\n    developer: 'Developer',\n    guest: 'Guest',\n};\nexport const InviteMemberModal = withHandlePromise((props) => {\n    var _a, _b, _c;\n    const [member, setMember] = React.useState((_a = props.member) !== null && _a !== void 0 ? _a : '');\n    const [type, setType] = React.useState((_b = props.type) !== null && _b !== void 0 ? _b : 'User');\n    const [role, setRole] = React.useState((_c = props.role) !== null && _c !== void 0 ? _c : 'guest');\n    const [errorMsg, setError] = React.useState('');\n    const isUpdate = props.requestType === 'update';\n    const onChangeText = (e) => {\n        setMember(e.target.value);\n    };\n    const submit = (e) => {\n        e.preventDefault();\n        // Append to an existing array, but handle the special case when the array is null.\n        coFetchJSON(`/api/multi-hypercloud/cluster/member?userId=${getId()}&cluster=${props.clusterName}&target${type}=${member}&remoteRole=${role}`, isUpdate ? 'PUT' : 'POST')\n            .then((res) => {\n            props.close();\n        })\n            .catch((err) => {\n            setError(`Fail to ${isUpdate ? 'update' : 'invite'} member. ` + err);\n        });\n    };\n    return (React.createElement(\"form\", { onSubmit: submit, name: \"form\", className: \"modal-content \" },\n        React.createElement(ModalTitle, null,\n            isUpdate ? 'Update' : 'Invite',\n            \" Member\"),\n        React.createElement(ModalBody, { unsetOverflow: true },\n            React.createElement(Section, { label: \"User / UserGroup\", id: \"user\", isRequired: true },\n                React.createElement(\"div\", { className: \"hc-invite-modal__input-members\" },\n                    React.createElement(RadioGroup, { id: \"type\", currentValue: type, items: radioItems(isUpdate), onChange: ({ currentTarget }) => setType(currentTarget.value), inline: true }),\n                    React.createElement(\"input\", { className: \"pf-c-form-control\", id: \"user\", name: \"members\", placeholder: \"Insert User / User Group Name\", value: member, onChange: onChangeText, required: true, disabled: isUpdate }))),\n            React.createElement(Section, { label: \"Role\", id: \"role\", isRequired: true },\n                React.createElement(Dropdown, { className: \"btn-group\", id: \"role\", name: \"role\", items: dropdownItems, selectedKey: role, onChange: (selection) => setRole(selection) }))),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMsg, inProgress: props.inProgress, submitText: isUpdate ? \"Update\" : \"Invite\", cancel: props.cancel })));\n});\nexport const inviteMemberModal = createModalLauncher(InviteMemberModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/modals/invite-member-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '../../factory/modal';\nimport { HandlePromiseProps, withHandlePromise, Dropdown } from '../../utils';\nimport { Section } from '../utils/section';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { coFetchJSON } from '../../../co-fetch';\nimport { getId } from '../../../hypercloud/auth';\n\nconst radioItems = (disabled:boolean) => [\n  {\n    title: 'User',\n    value: 'User',\n    disabled\n  },\n  {\n    title: 'User Group',\n    value: 'Group',\n    disabled\n  },\n];\n\nconst dropdownItems = {\n  admin: 'Admin',\n  developer: 'Developer',\n  guest: 'Guest',\n};\n\nexport const InviteMemberModal = withHandlePromise((props: InviteMemberModalProps) => {\n  const [member, setMember] = React.useState(props.member ?? '');\n  const [type, setType] = React.useState(props.type ?? 'User');\n  const [role, setRole] = React.useState(props.role ?? 'guest');\n  const [errorMsg, setError] = React.useState('')\n\n  const isUpdate = props.requestType === 'update';\n\n  const onChangeText = (e: any) => {\n    setMember(e.target.value);\n  }\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    // Append to an existing array, but handle the special case when the array is null.\n    coFetchJSON(`/api/multi-hypercloud/cluster/member?userId=${getId()}&cluster=${props.clusterName}&target${type}=${member}&remoteRole=${role}`, isUpdate ? 'PUT' : 'POST')\n      .then((res) => {\n        props.close();\n      })\n      .catch((err) => {\n        setError(`Fail to ${isUpdate?'update':'invite'} member. ` + err);\n      })\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>{isUpdate? 'Update' : 'Invite'} Member</ModalTitle>\n      <ModalBody unsetOverflow={true}>\n        <Section label=\"User / UserGroup\" id=\"user\" isRequired={true}>\n          <div className=\"hc-invite-modal__input-members\">\n            <RadioGroup\n              id=\"type\"\n              currentValue={type}\n              items={radioItems(isUpdate)}\n              onChange={({ currentTarget }) => setType(currentTarget.value)}\n              inline\n            />\n            <input className=\"pf-c-form-control\" id=\"user\" name=\"members\" placeholder=\"Insert User / User Group Name\" value={member} onChange={onChangeText} required disabled={isUpdate} />\n          </div>\n        </Section>\n        <Section label=\"Role\" id=\"role\" isRequired={true}>\n          <Dropdown className=\"btn-group\" id=\"role\" name=\"role\" items={dropdownItems} selectedKey={role} onChange={(selection:string)=>setRole(selection)} />\n        </Section>\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMsg}\n        inProgress={props.inProgress}\n        submitText={isUpdate ? \"Update\" : \"Invite\"}\n        cancel={props.cancel}\n      />\n    </form>\n  );\n});\n\nexport const inviteMemberModal = createModalLauncher(InviteMemberModal);\n\nexport type InviteMemberModalProps = {\n  clusterName: string;\n  type: string;\n  member: string;\n  role: string;\n  requestType: string;\n} & ModalComponentProps &\n  HandlePromiseProps;\n"]}]}