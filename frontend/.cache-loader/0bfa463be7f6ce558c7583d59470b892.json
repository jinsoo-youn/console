{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/details-card/card.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/details-card/card.tsx","mtime":1616735742360},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { SubscriptionModel } from '@console/operator-lifecycle-manager';\nimport { withDashboardResources } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { getName, getInfrastructurePlatform } from '@console/shared';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DetailItem from '@console/shared/src/components/dashboard/details-card/DetailItem';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { InfrastructureModel } from '@console/internal/models';\nimport { getOCSVersion } from '../../../selectors';\nimport { OCSServiceModel } from '../../../models';\nconst k8sResources = [\n    {\n        kind: referenceForModel(OCSServiceModel),\n        namespaced: true,\n        isList: true,\n        namespace: 'openshift-storage',\n        prop: 'ocs',\n    },\n    {\n        kind: referenceForModel(SubscriptionModel),\n        namespaced: false,\n        isList: true,\n        prop: 'subscription',\n    },\n];\nconst DetailsCard = React.memo(withDashboardResources((props) => {\n    const { watchK8sResource, stopWatchK8sResource, resources } = props;\n    React.useEffect(() => {\n        k8sResources.forEach((r) => watchK8sResource(r));\n        return () => {\n            k8sResources.forEach((r) => stopWatchK8sResource(r));\n        };\n    }, [watchK8sResource, stopWatchK8sResource]);\n    const { ocs, subscription } = resources;\n    const ocsLoaded = (ocs === null || ocs === void 0 ? void 0 : ocs.loaded) || false;\n    const ocsError = ocs === null || ocs === void 0 ? void 0 : ocs.loadError;\n    const ocsData = ocs === null || ocs === void 0 ? void 0 : ocs.data;\n    const ocsName = getName(ocsData === null || ocsData === void 0 ? void 0 : ocsData[0]);\n    const subscriptionLoaded = subscription === null || subscription === void 0 ? void 0 : subscription.loaded;\n    const subscriptionError = subscription === null || subscription === void 0 ? void 0 : subscription.loadError;\n    const subscriptionVersion = getOCSVersion(subscription);\n    const [infrastructure, infrastructureLoaded, infrastructureError] = useK8sGet(InfrastructureModel, 'cluster');\n    const infrastructurePlatform = getInfrastructurePlatform(infrastructure);\n    return (React.createElement(DashboardCard, null,\n        React.createElement(DashboardCardHeader, null,\n            React.createElement(DashboardCardTitle, null, \"Details\")),\n        React.createElement(DashboardCardBody, null,\n            React.createElement(DetailItem, { title: \"Service Name\" }, \"OpenShift Container Storage (OCS)\"),\n            React.createElement(DetailItem, { title: \"Cluster Name\", error: !!ocsError, isLoading: !ocsLoaded }, ocsName),\n            React.createElement(DetailItem, { title: \"Provider\", error: !!infrastructureError || (infrastructure && !infrastructurePlatform), isLoading: !infrastructureLoaded }, infrastructurePlatform),\n            React.createElement(DetailItem, { title: \"Mode\" }, \"External\"),\n            React.createElement(DetailItem, { title: \"Version\", isLoading: !subscriptionLoaded, error: !!subscriptionError }, subscriptionVersion))));\n}));\nexport default DetailsCard;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/details-card/card.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/independent-dashboard-page/details-card/card.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { SubscriptionModel } from '@console/operator-lifecycle-manager';\nimport { withDashboardResources } from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '@console/internal/components/utils';\nimport { getName, getInfrastructurePlatform } from '@console/shared';\nimport DashboardCard from '@console/shared/src/components/dashboard/dashboard-card/DashboardCard';\nimport DashboardCardTitle from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardTitle';\nimport DetailItem from '@console/shared/src/components/dashboard/details-card/DetailItem';\nimport DashboardCardBody from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardBody';\nimport DashboardCardHeader from '@console/shared/src/components/dashboard/dashboard-card/DashboardCardHeader';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { InfrastructureModel } from '@console/internal/models';\nimport { getOCSVersion } from '../../../selectors';\nimport { OCSServiceModel } from '../../../models';\n\nconst k8sResources: FirehoseResource[] = [\n  {\n    kind: referenceForModel(OCSServiceModel),\n    namespaced: true,\n    isList: true,\n    namespace: 'openshift-storage',\n    prop: 'ocs',\n  },\n  {\n    kind: referenceForModel(SubscriptionModel),\n    namespaced: false,\n    isList: true,\n    prop: 'subscription',\n  },\n];\n\nconst DetailsCard = React.memo(\n  withDashboardResources((props) => {\n    const { watchK8sResource, stopWatchK8sResource, resources } = props;\n\n    React.useEffect(() => {\n      k8sResources.forEach((r) => watchK8sResource(r));\n      return () => {\n        k8sResources.forEach((r) => stopWatchK8sResource(r));\n      };\n    }, [watchK8sResource, stopWatchK8sResource]);\n\n    const { ocs, subscription } = resources;\n    const ocsLoaded = ocs?.loaded || false;\n    const ocsError = ocs?.loadError;\n    const ocsData = ocs?.data;\n    const ocsName = getName(ocsData?.[0]);\n\n    const subscriptionLoaded = subscription?.loaded;\n    const subscriptionError = subscription?.loadError;\n    const subscriptionVersion = getOCSVersion(subscription as FirehoseResult);\n\n    const [infrastructure, infrastructureLoaded, infrastructureError] = useK8sGet<K8sResourceKind>(\n      InfrastructureModel,\n      'cluster',\n    );\n    const infrastructurePlatform = getInfrastructurePlatform(infrastructure);\n    return (\n      <DashboardCard>\n        <DashboardCardHeader>\n          <DashboardCardTitle>Details</DashboardCardTitle>\n        </DashboardCardHeader>\n        <DashboardCardBody>\n          <DetailItem title=\"Service Name\">OpenShift Container Storage (OCS)</DetailItem>\n          <DetailItem title=\"Cluster Name\" error={!!ocsError} isLoading={!ocsLoaded}>\n            {ocsName}\n          </DetailItem>\n          <DetailItem\n            title=\"Provider\"\n            error={!!infrastructureError || (infrastructure && !infrastructurePlatform)}\n            isLoading={!infrastructureLoaded}\n          >\n            {infrastructurePlatform}\n          </DetailItem>\n          <DetailItem title=\"Mode\">External</DetailItem>\n          <DetailItem title=\"Version\" isLoading={!subscriptionLoaded} error={!!subscriptionError}>\n            {subscriptionVersion}\n          </DetailItem>\n        </DashboardCardBody>\n      </DashboardCard>\n    );\n  }),\n);\n\nexport default DetailsCard;\n"]}]}