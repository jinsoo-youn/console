{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/remove-volume-modal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/remove-volume-modal.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory';\nimport { getVolumeType, k8sPatch, } from '../../module/k8s/';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nexport const RemoveVolumeModal = (props) => {\n    const [inProgress, setInProgress] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState('');\n    const getRemoveVolumePatch = (resource, rowVolumeData) => {\n        const containers = _.get(resource, 'spec.template.spec.containers', []);\n        const patches = [];\n        let allowRemoveVolume = true;\n        containers.forEach((container, i) => {\n            const mounts = _.get(container, 'volumeMounts', []);\n            mounts.forEach((mount, j) => {\n                if (mount.name !== rowVolumeData.name) {\n                    return;\n                }\n                if (mount.mountPath === rowVolumeData.mountPath &&\n                    container.name === rowVolumeData.container) {\n                    patches.push({\n                        op: 'remove',\n                        path: `/spec/template/spec/containers/${i}/volumeMounts/${j}`,\n                    });\n                }\n                else {\n                    allowRemoveVolume = false;\n                }\n            });\n        });\n        // if the mountCount is greater than zero, then the volume is still being used at a different mount point or in a different container\n        // Either way, we cannot give the cmd to remove it\n        if (allowRemoveVolume) {\n            const volumes = _.get(resource, 'spec.template.spec.volumes', []);\n            const volumeIndex = volumes.findIndex((v) => v.name === rowVolumeData.name);\n            if (volumeIndex > -1) {\n                patches.push({ op: 'remove', path: `/spec/template/spec/volumes/${volumeIndex}` });\n            }\n        }\n        return patches;\n    };\n    const submit = (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n        setInProgress(true);\n        const { kind, resource, volume } = props;\n        k8sPatch(kind, resource, getRemoveVolumePatch(resource, volume))\n            .then(() => {\n            setInProgress(false);\n            props.close();\n        })\n            .catch(({ message: errMessage }) => {\n            setErrorMessage(errMessage);\n            setInProgress(false);\n        });\n    };\n    const { kind, resource, volume } = props;\n    const type = _.get(getVolumeType(volume.volumeDetail), 'id', '');\n    return (React.createElement(\"form\", { onSubmit: submit, className: \"modal-content\" },\n        React.createElement(ModalTitle, null,\n            React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r\" }),\n            \" Remove Volume?\"),\n        React.createElement(ModalBody, { className: \"modal-body\" },\n            React.createElement(\"div\", null,\n                \"Are you sure you want to remove volume\",\n                ' ',\n                React.createElement(\"strong\", { className: \"co-break-word\" }, volume.name),\n                React.createElement(\"span\", null,\n                    ' ',\n                    \"from \",\n                    React.createElement(\"strong\", null, kind.label),\n                    \": \",\n                    React.createElement(\"strong\", null, resource.metadata.name),\n                    \"?\")),\n            type && (React.createElement(\"div\", null,\n                React.createElement(\"label\", { className: \"control-label\" },\n                    \"Note: This will not remove the underlying \",\n                    type,\n                    \".\")))),\n        React.createElement(ModalSubmitFooter, { errorMessage: errorMessage, inProgress: inProgress, submitDanger: true, submitText: \"Remove Volume\", cancel: props.cancel })));\n};\nexport const removeVolumeModal = createModalLauncher(RemoveVolumeModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/remove-volume-modal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/modals/remove-volume-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory';\nimport {\n  ContainerSpec,\n  getVolumeType,\n  K8sKind,\n  k8sPatch,\n  K8sResourceKind,\n  Volume,\n  VolumeMount,\n} from '../../module/k8s/';\nimport { RowVolumeData } from '../volumes-table';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nexport const RemoveVolumeModal: React.FC<RemoveVolumeModalProps> = (props) => {\n  const [inProgress, setInProgress] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const getRemoveVolumePatch = (resource: K8sResourceKind, rowVolumeData: RowVolumeData) => {\n    const containers: ContainerSpec[] = _.get(resource, 'spec.template.spec.containers', []);\n    const patches = [];\n    let allowRemoveVolume = true;\n    containers.forEach((container: ContainerSpec, i: number) => {\n      const mounts: VolumeMount[] = _.get(container, 'volumeMounts', []);\n      mounts.forEach((mount: VolumeMount, j: number) => {\n        if (mount.name !== rowVolumeData.name) {\n          return;\n        }\n        if (\n          mount.mountPath === rowVolumeData.mountPath &&\n          container.name === rowVolumeData.container\n        ) {\n          patches.push({\n            op: 'remove',\n            path: `/spec/template/spec/containers/${i}/volumeMounts/${j}`,\n          });\n        } else {\n          allowRemoveVolume = false;\n        }\n      });\n    });\n\n    // if the mountCount is greater than zero, then the volume is still being used at a different mount point or in a different container\n    // Either way, we cannot give the cmd to remove it\n    if (allowRemoveVolume) {\n      const volumes: Volume[] = _.get(resource, 'spec.template.spec.volumes', []);\n      const volumeIndex = volumes.findIndex((v: Volume) => v.name === rowVolumeData.name);\n      if (volumeIndex > -1) {\n        patches.push({ op: 'remove', path: `/spec/template/spec/volumes/${volumeIndex}` });\n      }\n    }\n    return patches;\n  };\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    setErrorMessage('');\n    setInProgress(true);\n    const { kind, resource, volume } = props;\n    k8sPatch(kind, resource, getRemoveVolumePatch(resource, volume))\n      .then(() => {\n        setInProgress(false);\n        props.close();\n      })\n      .catch(({ message: errMessage }) => {\n        setErrorMessage(errMessage);\n        setInProgress(false);\n      });\n  };\n\n  const { kind, resource, volume } = props;\n  const type: string = _.get(getVolumeType(volume.volumeDetail), 'id', '');\n  return (\n    <form onSubmit={submit} className=\"modal-content\">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" /> Remove Volume?\n      </ModalTitle>\n      <ModalBody className=\"modal-body\">\n        <div>\n          Are you sure you want to remove volume{' '}\n          <strong className=\"co-break-word\">{volume.name}</strong>\n          <span>\n            {' '}\n            from <strong>{kind.label}</strong>: <strong>{resource.metadata.name}</strong>?\n          </span>\n        </div>\n        {type && (\n          <div>\n            <label className=\"control-label\">\n              Note: This will not remove the underlying {type}.\n            </label>\n          </div>\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n        submitText=\"Remove Volume\"\n        cancel={props.cancel}\n      />\n    </form>\n  );\n};\n\nexport const removeVolumeModal = createModalLauncher(RemoveVolumeModal);\n\nexport type RemoveVolumeModalProps = {\n  cancel?: () => void;\n  close?: () => void;\n  volume: RowVolumeData;\n  kind: K8sKind;\n  resource: K8sResourceKind;\n};\n"]}]}