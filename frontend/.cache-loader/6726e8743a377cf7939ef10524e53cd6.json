{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/routing-labels-editor.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/routing-labels-editor.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { MinusCircleIcon, PlusCircleIcon, InfoCircleIcon } from '@patternfly/react-icons';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { ExternalLink, SectionHeading } from '../../utils';\nconst DEFAULT_RECEIVER_LABEL = 'All (default receiver)';\nconst labelNamePattern = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\nexport const getRouteLabelFieldErrors = (labels) => {\n    const routeLabelFieldErrors = {};\n    labels.forEach((label, i) => {\n        if (label.name && !label.name.match(labelNamePattern)) {\n            routeLabelFieldErrors[`${i}_name`] = true;\n        }\n    });\n    return routeLabelFieldErrors;\n};\nconst hasDuplicateNames = (labels) => {\n    const names = _.map(labels, (label) => label.name);\n    return names.length !== _.uniq(names).length;\n};\nexport const RoutingLabelEditor = ({ formValues, dispatchFormChange, isDefaultReceiver }) => {\n    const setRouteLabel = (path, v) => {\n        const labels = _.clone(formValues.routeLabels);\n        _.set(labels, path.split(', '), v);\n        dispatchFormChange({\n            type: 'setFormValues',\n            payload: {\n                routeLabels: labels,\n                routeLabelFieldErrors: getRouteLabelFieldErrors(labels),\n                routeLabelDuplicateNamesError: hasDuplicateNames(labels),\n            },\n        });\n    };\n    const onRoutingLabelChange = (path) => {\n        return (e) => setRouteLabel(path, e.target.value);\n    };\n    const onRoutingLabelRegexChange = (e, i) => {\n        setRouteLabel(`${i}, isRegex`, e.target.checked);\n    };\n    const addRoutingLabel = () => {\n        setRouteLabel(`${formValues.routeLabels.length}`, {\n            name: '',\n            value: '',\n            isRegex: false,\n        });\n    };\n    const removeRoutingLabel = (i) => {\n        const labels = _.clone(formValues.routeLabels);\n        labels.splice(i, 1);\n        dispatchFormChange({\n            type: 'setFormValues',\n            payload: {\n                routeLabels: labels,\n                routeLabelDuplicateNamesError: hasDuplicateNames(labels),\n            },\n        });\n    };\n    const InvalidLabelName = () => (React.createElement(\"span\", { \"data-test-id\": \"invalid-label-name-error\" },\n        \"Invalid name.\",\n        React.createElement(Tooltip, { content: React.createElement(\"p\", null, \"Label name must not begin with a digit and contain only alphanumeric characters or '_'.\") },\n            React.createElement(InfoCircleIcon, { className: \"co-icon-space-l\" }))));\n    return (React.createElement(\"div\", { \"data-test-id\": \"receiver-routing-labels-editor\", className: \"form-group\" },\n        React.createElement(SectionHeading, { text: \"Routing Labels\", required: !isDefaultReceiver }),\n        React.createElement(\"p\", { className: \"co-help-text\" },\n            \"Firing alerts with labels that match all of these selectors will be sent to this receiver. Label values can be matched exactly or with a \\u00A0\",\n            React.createElement(ExternalLink, { href: \"https://github.com/google/re2/wiki/Syntax\", text: \"regular expression\" }),\n            \".\"),\n        React.createElement(\"div\", { className: \"row monitoring-grid-head text-secondary text-uppercase\" },\n            React.createElement(\"div\", { className: \"col-xs-5\" }, \"Name\"),\n            React.createElement(\"div\", { className: \"col-xs-6\" }, \"Value\")),\n        isDefaultReceiver && (React.createElement(\"div\", { className: \"row form-group\", key: \"default\" },\n            React.createElement(\"div\", { className: \"col-xs-10\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-xs-6 pairs-list__name-field\" },\n                        React.createElement(\"div\", { className: \"form-group\" },\n                            React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", \"data-test-id\": \"label-name-default\", value: DEFAULT_RECEIVER_LABEL, disabled: true, required: true }))),\n                    React.createElement(\"div\", { className: \"col-xs-6 pairs-list__value-field\" },\n                        React.createElement(\"div\", { className: \"form-group\" },\n                            React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", \"data-test-id\": \"label-value-default\", value: DEFAULT_RECEIVER_LABEL, disabled: true, required: true }))))))),\n        _.map(formValues.routeLabels, (routeLabel, i) => {\n            var _a;\n            const hasLabelNameError = (_a = formValues === null || formValues === void 0 ? void 0 : formValues.routeLabelFieldErrors) === null || _a === void 0 ? void 0 : _a[`${i}_name`];\n            return (React.createElement(\"div\", { className: \"row form-group\", key: i },\n                React.createElement(\"div\", { className: \"col-xs-10\" },\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-6 pairs-list__name-field\" },\n                            React.createElement(\"div\", { className: classNames('form-group', {\n                                    'has-error': hasLabelNameError,\n                                }) },\n                                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", \"data-test-id\": `label-name-${i}`, onChange: onRoutingLabelChange(`${i}, name`), placeholder: \"Name\", value: routeLabel.name, required: true }),\n                                React.createElement(\"span\", { className: \"help-block\" }, hasLabelNameError && React.createElement(InvalidLabelName, null)))),\n                        React.createElement(\"div\", { className: \"col-xs-6 pairs-list__value-field\" },\n                            React.createElement(\"div\", { className: \"form-group\" },\n                                React.createElement(\"input\", { type: \"text\", className: \"pf-c-form-control\", \"data-test-id\": `label-value-${i}`, onChange: onRoutingLabelChange(`${i}, value`), placeholder: \"Value\", value: routeLabel.value, required: true })))),\n                    React.createElement(\"div\", { className: \"row\" },\n                        React.createElement(\"div\", { className: \"col-xs-12 col-sm-12\" },\n                            React.createElement(\"div\", { className: \"form-group\" },\n                                React.createElement(\"div\", { className: \"checkbox\" },\n                                    React.createElement(\"label\", { className: \"control-label\" },\n                                        React.createElement(\"input\", { type: \"checkbox\", onChange: (e) => onRoutingLabelRegexChange(e, i), checked: routeLabel.isRegex }),\n                                        \"Regular Expression\")))))),\n                React.createElement(\"div\", { className: \"col-xs-2 pairs-list__action\" },\n                    React.createElement(Button, { type: \"button\", onClick: () => removeRoutingLabel(i), \"aria-label\": \"Remove Route Label\", isDisabled: !isDefaultReceiver && formValues.routeLabels.length <= 1, variant: \"plain\", \"data-test-id\": \"remove-routing-label\" },\n                        React.createElement(MinusCircleIcon, null)))));\n        }),\n        React.createElement(\"div\", { className: classNames('form-group', {\n                'has-error': formValues.routeLabelDuplicateNamesError,\n            }, 'co-routing-label-editor__error-message') },\n            React.createElement(\"span\", { className: \"help-block\" }, formValues.routeLabelDuplicateNamesError ? (React.createElement(\"span\", { \"data-test-id\": \"duplicate-label-name-error\" }, \"Routing label names must be unique.\")) : (''))),\n        !isDefaultReceiver && (React.createElement(Button, { className: \"pf-m-link--align-left\", onClick: addRoutingLabel, type: \"button\", variant: \"link\", \"data-test-id\": \"add-routing-label\" },\n            React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Add Label\"))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/routing-labels-editor.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/monitoring/receiver-forms/routing-labels-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { MinusCircleIcon, PlusCircleIcon, InfoCircleIcon } from '@patternfly/react-icons';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nimport { ExternalLink, SectionHeading } from '../../utils';\nimport { RouteEditorLabel } from './alert-manager-receiver-forms';\n\nconst DEFAULT_RECEIVER_LABEL = 'All (default receiver)';\nconst labelNamePattern = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexport const getRouteLabelFieldErrors = (labels: RouteEditorLabel[]) => {\n  const routeLabelFieldErrors = {};\n  labels.forEach((label, i) => {\n    if (label.name && !label.name.match(labelNamePattern)) {\n      routeLabelFieldErrors[`${i}_name`] = true;\n    }\n  });\n  return routeLabelFieldErrors;\n};\n\nconst hasDuplicateNames = (labels: RouteEditorLabel[]): boolean => {\n  const names = _.map(labels, (label) => label.name);\n  return names.length !== _.uniq(names).length;\n};\n\nexport const RoutingLabelEditor = ({ formValues, dispatchFormChange, isDefaultReceiver }) => {\n  const setRouteLabel = (path: string, v: any): void => {\n    const labels = _.clone(formValues.routeLabels);\n    _.set(labels, path.split(', '), v);\n    dispatchFormChange({\n      type: 'setFormValues',\n      payload: {\n        routeLabels: labels,\n        routeLabelFieldErrors: getRouteLabelFieldErrors(labels),\n        routeLabelDuplicateNamesError: hasDuplicateNames(labels),\n      },\n    });\n  };\n\n  const onRoutingLabelChange = (path: string): ((e) => void) => {\n    return (e) => setRouteLabel(path, e.target.value);\n  };\n\n  const onRoutingLabelRegexChange = (e, i: number): void => {\n    setRouteLabel(`${i}, isRegex`, e.target.checked);\n  };\n\n  const addRoutingLabel = (): void => {\n    setRouteLabel(`${formValues.routeLabels.length}`, {\n      name: '',\n      value: '',\n      isRegex: false,\n    });\n  };\n\n  const removeRoutingLabel = (i: number): void => {\n    const labels = _.clone(formValues.routeLabels);\n    labels.splice(i, 1);\n    dispatchFormChange({\n      type: 'setFormValues',\n      payload: {\n        routeLabels: labels,\n        routeLabelDuplicateNamesError: hasDuplicateNames(labels),\n      },\n    });\n  };\n\n  const InvalidLabelName = () => (\n    <span data-test-id=\"invalid-label-name-error\">\n      Invalid name.\n      <Tooltip\n        content={\n          <p>\n            Label name must not begin with a digit and contain only alphanumeric characters or '_'.\n          </p>\n        }\n      >\n        <InfoCircleIcon className=\"co-icon-space-l\" />\n      </Tooltip>\n    </span>\n  );\n\n  return (\n    <div data-test-id=\"receiver-routing-labels-editor\" className=\"form-group\">\n      <SectionHeading text=\"Routing Labels\" required={!isDefaultReceiver} />\n      <p className=\"co-help-text\">\n        Firing alerts with labels that match all of these selectors will be sent to this receiver.\n        Label values can be matched exactly or with a &nbsp;\n        <ExternalLink href=\"https://github.com/google/re2/wiki/Syntax\" text=\"regular expression\" />.\n      </p>\n      <div className=\"row monitoring-grid-head text-secondary text-uppercase\">\n        <div className=\"col-xs-5\">Name</div>\n        <div className=\"col-xs-6\">Value</div>\n      </div>\n      {isDefaultReceiver && (\n        <div className=\"row form-group\" key=\"default\">\n          <div className=\"col-xs-10\">\n            <div className=\"row\">\n              <div className=\"col-xs-6 pairs-list__name-field\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"pf-c-form-control\"\n                    data-test-id=\"label-name-default\"\n                    value={DEFAULT_RECEIVER_LABEL}\n                    disabled\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"col-xs-6 pairs-list__value-field\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"pf-c-form-control\"\n                    data-test-id=\"label-value-default\"\n                    value={DEFAULT_RECEIVER_LABEL}\n                    disabled\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {_.map(formValues.routeLabels, (routeLabel, i: number) => {\n        const hasLabelNameError = formValues?.routeLabelFieldErrors?.[`${i}_name`];\n        return (\n          <div className=\"row form-group\" key={i}>\n            <div className=\"col-xs-10\">\n              <div className=\"row\">\n                <div className=\"col-xs-6 pairs-list__name-field\">\n                  <div\n                    className={classNames('form-group', {\n                      'has-error': hasLabelNameError,\n                    })}\n                  >\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control\"\n                      data-test-id={`label-name-${i}`}\n                      onChange={onRoutingLabelChange(`${i}, name`)}\n                      placeholder=\"Name\"\n                      value={routeLabel.name}\n                      required\n                    />\n                    <span className=\"help-block\">{hasLabelNameError && <InvalidLabelName />}</span>\n                  </div>\n                </div>\n                <div className=\"col-xs-6 pairs-list__value-field\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"pf-c-form-control\"\n                      data-test-id={`label-value-${i}`}\n                      onChange={onRoutingLabelChange(`${i}, value`)}\n                      placeholder=\"Value\"\n                      value={routeLabel.value}\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12\">\n                  <div className=\"form-group\">\n                    <div className=\"checkbox\">\n                      <label className=\"control-label\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={(e) => onRoutingLabelRegexChange(e, i)}\n                          checked={routeLabel.isRegex}\n                        />\n                        Regular Expression\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xs-2 pairs-list__action\">\n              <Button\n                type=\"button\"\n                onClick={() => removeRoutingLabel(i)}\n                aria-label=\"Remove Route Label\"\n                isDisabled={!isDefaultReceiver && formValues.routeLabels.length <= 1}\n                variant=\"plain\"\n                data-test-id=\"remove-routing-label\"\n              >\n                <MinusCircleIcon />\n              </Button>\n            </div>\n          </div>\n        );\n      })}\n      <div\n        className={classNames(\n          'form-group',\n          {\n            'has-error': formValues.routeLabelDuplicateNamesError,\n          },\n          'co-routing-label-editor__error-message',\n        )}\n      >\n        <span className=\"help-block\">\n          {formValues.routeLabelDuplicateNamesError ? (\n            <span data-test-id=\"duplicate-label-name-error\">\n              Routing label names must be unique.\n            </span>\n          ) : (\n            ''\n          )}\n        </span>\n      </div>\n      {!isDefaultReceiver && (\n        <Button\n          className=\"pf-m-link--align-left\"\n          onClick={addRoutingLabel}\n          type=\"button\"\n          variant=\"link\"\n          data-test-id=\"add-routing-label\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          Add Label\n        </Button>\n      )}\n    </div>\n  );\n};\n"]}]}