{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/template-instance.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/template-instance.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Status } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from './factory';\nimport { Conditions } from './conditions';\nimport { getTemplateInstanceStatus, referenceFor } from '../module/k8s';\nimport { EmptyBox, Kebab, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, } from './utils';\nconst menuActions = Kebab.factory.common;\nconst tableColumnClasses = [\n    classNames('col-sm-5', 'col-xs-6'),\n    classNames('col-sm-5', 'col-xs-6'),\n    classNames('col-sm-2', 'hidden-xs'),\n    Kebab.columnClass,\n];\nconst TemplateInstanceTableHeader = () => {\n    return [\n        {\n            title: 'Name',\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: 'Namespace',\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: 'Status',\n            sortFunc: 'getTemplateInstanceStatus',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[3] },\n        },\n    ];\n};\nTemplateInstanceTableHeader.displayName = 'TemplateInstanceTableHeader';\nconst TemplateInstanceTableRow = ({ obj, index, key, style, }) => {\n    return (React.createElement(TableRow, { id: obj.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: classNames(tableColumnClasses[0], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"TemplateInstance\", name: obj.metadata.name, namespace: obj.metadata.namespace })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: getTemplateInstanceStatus(obj) })),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: \"TemplateInstance\", resource: obj }))));\n};\nexport const TemplateInstanceList = (props) => (React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Template Instances\", Header: TemplateInstanceTableHeader, Row: TemplateInstanceTableRow, virtualize: true })));\nconst allStatuses = ['Ready', 'Not Ready', 'Failed'];\nconst filters = [\n    {\n        filterGroupName: 'Status',\n        type: 'template-instance-status',\n        reducer: getTemplateInstanceStatus,\n        items: _.map(allStatuses, (status) => ({\n            id: status,\n            title: status,\n        })),\n    },\n];\nexport const TemplateInstancePage = (props) => (React.createElement(ListPage, Object.assign({}, props, { title: \"Template Instances\", kind: \"TemplateInstance\", ListComponent: TemplateInstanceList, canCreate: false, rowFilters: filters })));\nconst TemplateInstanceDetails = ({ obj }) => {\n    const status = getTemplateInstanceStatus(obj);\n    const secretName = _.get(obj, 'spec.secret.name');\n    const requester = _.get(obj, 'spec.requester.username');\n    const objects = _.get(obj, 'status.objects', []);\n    const conditions = _.get(obj, 'status.conditions', []);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Template Instance Details\" }),\n            React.createElement(\"div\", { className: \"co-m-pane__body-group\" },\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceSummary, { resource: obj })),\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n                            React.createElement(\"dt\", null, \"Status\"),\n                            React.createElement(\"dd\", null,\n                                React.createElement(Status, { status: status })),\n                            secretName && (React.createElement(React.Fragment, null,\n                                React.createElement(\"dt\", null, \"Parameters\"),\n                                React.createElement(\"dd\", null,\n                                    React.createElement(ResourceLink, { kind: \"Secret\", name: secretName, namespace: obj.metadata.namespace })))),\n                            React.createElement(\"dt\", null, \"Requester\"),\n                            React.createElement(\"dd\", null, requester || '-')))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Objects\" }),\n            React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n                React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                    React.createElement(\"div\", { className: \"col-sm-6\" }, \"Name\"),\n                    React.createElement(\"div\", { className: \"col-sm-6\" }, \"Namespace\")),\n                React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, _.isEmpty(objects) ? (React.createElement(EmptyBox, { label: \"Objects\" })) : (_.map(objects, ({ ref }, i) => (React.createElement(\"div\", { className: \"row co-resource-list__item\", key: i },\n                    React.createElement(\"div\", { className: \"col-sm-6\" },\n                        React.createElement(ResourceLink, { kind: referenceFor(ref), name: ref.name, namespace: ref.namespace })),\n                    React.createElement(\"div\", { className: \"col-sm-6\" }, ref.namespace ? React.createElement(ResourceLink, { kind: \"Namespace\", name: ref.namespace }) : '-')))))))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: \"Conditions\" }),\n            React.createElement(Conditions, { conditions: conditions }))));\n};\nexport const TemplateInstanceDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { kind: \"TemplateInstance\", menuActions: menuActions, pages: [navFactory.details(TemplateInstanceDetails), navFactory.editYaml()] })));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/template-instance.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/template-instance.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { Status } from '@console/shared';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from './factory';\nimport { Conditions } from './conditions';\nimport { getTemplateInstanceStatus, referenceFor, TemplateInstanceKind } from '../module/k8s';\nimport {\n  EmptyBox,\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n} from './utils';\n\nconst menuActions = Kebab.factory.common;\n\nconst tableColumnClasses = [\n  classNames('col-sm-5', 'col-xs-6'),\n  classNames('col-sm-5', 'col-xs-6'),\n  classNames('col-sm-2', 'hidden-xs'),\n  Kebab.columnClass,\n];\n\nconst TemplateInstanceTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Status',\n      sortFunc: 'getTemplateInstanceStatus',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n};\nTemplateInstanceTableHeader.displayName = 'TemplateInstanceTableHeader';\n\nconst TemplateInstanceTableRow: RowFunction<TemplateInstanceKind> = ({\n  obj,\n  index,\n  key,\n  style,\n}) => {\n  return (\n    <TableRow id={obj.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink\n          kind=\"TemplateInstance\"\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={getTemplateInstanceStatus(obj)} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind=\"TemplateInstance\" resource={obj} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const TemplateInstanceList: React.SFC = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Template Instances\"\n    Header={TemplateInstanceTableHeader}\n    Row={TemplateInstanceTableRow}\n    virtualize\n  />\n);\n\nconst allStatuses = ['Ready', 'Not Ready', 'Failed'];\n\nconst filters = [\n  {\n    filterGroupName: 'Status',\n    type: 'template-instance-status',\n    reducer: getTemplateInstanceStatus,\n    items: _.map(allStatuses, (status) => ({\n      id: status,\n      title: status,\n    })),\n  },\n];\n\nexport const TemplateInstancePage: React.SFC<TemplateInstancePageProps> = (props) => (\n  <ListPage\n    {...props}\n    title=\"Template Instances\"\n    kind=\"TemplateInstance\"\n    ListComponent={TemplateInstanceList}\n    canCreate={false}\n    rowFilters={filters}\n  />\n);\n\nconst TemplateInstanceDetails: React.SFC<TemplateInstanceDetailsProps> = ({ obj }) => {\n  const status = getTemplateInstanceStatus(obj);\n  const secretName = _.get(obj, 'spec.secret.name');\n  const requester = _.get(obj, 'spec.requester.username');\n  const objects = _.get(obj, 'status.objects', []);\n  const conditions = _.get(obj, 'status.conditions', []);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Template Instance Details\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={obj} />\n            </div>\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>Status</dt>\n                <dd>\n                  <Status status={status} />\n                </dd>\n                {secretName && (\n                  <>\n                    <dt>Parameters</dt>\n                    <dd>\n                      <ResourceLink\n                        kind=\"Secret\"\n                        name={secretName}\n                        namespace={obj.metadata.namespace}\n                      />\n                    </dd>\n                  </>\n                )}\n                <dt>Requester</dt>\n                <dd>{requester || '-'}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Objects\" />\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-6\">Name</div>\n            <div className=\"col-sm-6\">Namespace</div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {_.isEmpty(objects) ? (\n              <EmptyBox label=\"Objects\" />\n            ) : (\n              _.map(objects, ({ ref }, i) => (\n                <div className=\"row co-resource-list__item\" key={i}>\n                  <div className=\"col-sm-6\">\n                    <ResourceLink\n                      kind={referenceFor(ref)}\n                      name={ref.name}\n                      namespace={ref.namespace}\n                    />\n                  </div>\n                  <div className=\"col-sm-6\">\n                    {ref.namespace ? <ResourceLink kind=\"Namespace\" name={ref.namespace} /> : '-'}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text=\"Conditions\" />\n        <Conditions conditions={conditions} />\n      </div>\n    </>\n  );\n};\n\nexport const TemplateInstanceDetailsPage: React.SFC<TemplateInstanceDetailsPageProps> = (props) => (\n  <DetailsPage\n    {...props}\n    kind=\"TemplateInstance\"\n    menuActions={menuActions}\n    pages={[navFactory.details(TemplateInstanceDetails), navFactory.editYaml()]}\n  />\n);\n\ntype TemplateInstancePageProps = {\n  autoFocus?: boolean;\n  showTitle?: boolean;\n};\n\ntype TemplateInstanceDetailsProps = {\n  obj: TemplateInstanceKind;\n};\n\ntype TemplateInstanceDetailsPageProps = {\n  match: any;\n};\n"]}]}