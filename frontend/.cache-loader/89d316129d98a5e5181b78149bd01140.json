{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/dashboards-page/ControlPlaneStatus.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/dashboards-page/ControlPlaneStatus.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { HealthState, healthStateMapping } from '@console/shared/src/components/dashboard/status-card/states';\nimport { getControlPlaneComponentHealth } from './status';\nimport Status, { StatusPopupSection } from '@console/shared/src/components/dashboard/status-card/StatusPopup';\nimport { useTranslation } from 'react-i18next';\nconst ControlPlanePopup = ({ responses }) => {\n    const { t } = useTranslation();\n    const titles = [t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APISERVERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_CONTROLLER_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_SCHEDULERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APIREQUEST_1')];\n    return (React.createElement(React.Fragment, null,\n        t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_DESCRIPTION_1'),\n        React.createElement(StatusPopupSection, { firstColumn: t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_COMPONENTS_1'), secondColumn: t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_RESPONCERATE_1') }, responses.map(({ response, error }, index) => {\n            var _a;\n            const health = getControlPlaneComponentHealth(response, error);\n            const icon = health.state === HealthState.LOADING ? React.createElement(\"div\", { className: \"skeleton-health\" }) : healthStateMapping[health.state].icon;\n            const value = health.message || ((_a = healthStateMapping[health.state]) === null || _a === void 0 ? void 0 : _a.message);\n            return (React.createElement(Status, { key: titles[index], value: value, icon: icon }, titles[index]));\n        }))));\n};\nexport default ControlPlanePopup;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/dashboards-page/ControlPlaneStatus.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/dashboards-page/ControlPlaneStatus.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,6DAA6D,CAAC;AAC9G,OAAO,EAAE,8BAA8B,EAAE,MAAM,UAAU,CAAC;AAC1D,OAAO,MAAM,EAAE,EAAE,kBAAkB,EAAE,MAAM,kEAAkE,CAAC;AAE9G,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,iBAAiB,GAAyC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;IAChF,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/B,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,2DAA2D,CAAC,EAAE,CAAC,CAAC,2DAA2D,CAAC,EAAE,CAAC,CAAC,2DAA2D,CAAC,EAAE,CAAC,CAAC,2DAA2D,CAAC,CAAC,CAAC;IAChR,OAAO,CACL;QACG,CAAC,CAAC,4DAA4D,CAAC;QAChE,oBAAC,kBAAkB,IAAC,WAAW,EAAE,CAAC,CAAC,2DAA2D,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,6DAA6D,CAAC,IAC5K,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE;;YAC5C,MAAM,MAAM,GAAG,8BAA8B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC/D,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YAChI,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,WAAI,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,0CAAE,OAAO,CAAA,CAAC;YAC1E,OAAO,CACL,oBAAC,MAAM,IAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,IACjD,MAAM,CAAC,KAAK,CAAC,CACP,CACV,CAAC;QACJ,CAAC,CAAC,CACiB,CACpB,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport { HealthState, healthStateMapping } from '@console/shared/src/components/dashboard/status-card/states';\nimport { getControlPlaneComponentHealth } from './status';\nimport Status, { StatusPopupSection } from '@console/shared/src/components/dashboard/status-card/StatusPopup';\nimport { PrometheusHealthPopupProps } from '@console/plugin-sdk';\nimport { useTranslation } from 'react-i18next';\n\nconst ControlPlanePopup: React.FC<PrometheusHealthPopupProps> = ({ responses }) => {\n  const { t } = useTranslation();\n  const titles = [t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APISERVERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_CONTROLLER_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_SCHEDULERS_1'), t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_APIREQUEST_1')];\n  return (\n    <>\n      {t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_DESCRIPTION_1')}\n      <StatusPopupSection firstColumn={t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_COMPONENTS_1')} secondColumn={t('SINGLE:MSG_OVERVIEW_MAIN_POPOVERCONTROLPLANE_RESPONCERATE_1')}>\n        {responses.map(({ response, error }, index) => {\n          const health = getControlPlaneComponentHealth(response, error);\n          const icon = health.state === HealthState.LOADING ? <div className=\"skeleton-health\" /> : healthStateMapping[health.state].icon;\n          const value = health.message || healthStateMapping[health.state]?.message;\n          return (\n            <Status key={titles[index]} value={value} icon={icon}>\n              {titles[index]}\n            </Status>\n          );\n        })}\n      </StatusPopupSection>\n    </>\n  );\n};\n\nexport default ControlPlanePopup;\n"]}]}