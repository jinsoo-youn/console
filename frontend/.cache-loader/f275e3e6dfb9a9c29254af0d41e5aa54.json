{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/history/HelmReleaseHistoryRow.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/history/HelmReleaseHistoryRow.tsx","mtime":1615298458610},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Status } from '@console/shared';\nimport { TableRow, TableData } from '@console/internal/components/factory';\nimport { Timestamp, Kebab } from '@console/internal/components/utils';\nimport { confirmModal } from '@console/internal/components/modals';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { tableColumnClasses } from './HelmReleaseHistoryHeader';\nconst confirmModalRollbackHelmRelease = (releaseName, namespace, revision) => {\n    const message = (React.createElement(React.Fragment, null,\n        \"Are you sure you want to rollback \",\n        React.createElement(\"strong\", null, releaseName),\n        \" to\",\n        ' ',\n        React.createElement(\"strong\", null,\n            \"Revision \",\n            revision),\n        \"?\"));\n    const payload = {\n        namespace,\n        name: releaseName,\n        version: revision,\n    };\n    const executeFn = () => coFetchJSON.patch('/api/helm/release', payload);\n    return {\n        label: `Rollback to Revision ${revision}`,\n        callback: () => {\n            confirmModal({\n                title: 'Rollback',\n                btnText: 'Rollback',\n                message,\n                executeFn,\n            });\n        },\n    };\n};\nconst HelmReleaseHistoryRow = ({ obj, index, key, style }) => {\n    const menuActions = [confirmModalRollbackHelmRelease(obj.name, obj.namespace, obj.version)];\n    return (React.createElement(TableRow, { id: obj.revision, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses.revision }, obj.version),\n        React.createElement(TableData, { className: tableColumnClasses.updated },\n            React.createElement(Timestamp, { timestamp: obj.info.last_deployed })),\n        React.createElement(TableData, { className: tableColumnClasses.status },\n            React.createElement(Status, { status: _.capitalize(obj.info.status) })),\n        React.createElement(TableData, { className: tableColumnClasses.chartName }, obj.chart.metadata.name),\n        React.createElement(TableData, { className: tableColumnClasses.chartVersion }, obj.chart.metadata.version),\n        React.createElement(TableData, { className: tableColumnClasses.appVersion }, obj.chart.metadata.appVersion),\n        React.createElement(TableData, { className: tableColumnClasses.description }, obj.info.description),\n        React.createElement(TableData, { className: tableColumnClasses.kebab },\n            React.createElement(Kebab, { options: menuActions }))));\n};\nexport default HelmReleaseHistoryRow;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/history/HelmReleaseHistoryRow.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/helm/details/history/HelmReleaseHistoryRow.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAe,MAAM,sCAAsC,CAAC;AACxF,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,oCAAoC,CAAC;AACtE,OAAO,EAAE,YAAY,EAAE,MAAM,qCAAqC,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAEhE,MAAM,+BAA+B,GAAG,CACtC,WAAmB,EACnB,SAAiB,EACjB,QAAgB,EAChB,EAAE;IACF,MAAM,OAAO,GAAG,CACd;;QACoC,oCAAS,WAAW,CAAU;;QAAI,GAAG;QACvE;;YAAkB,QAAQ,CAAU;YACnC,CACJ,CAAC;IAEF,MAAM,OAAO,GAAG;QACd,SAAS;QACT,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,QAAQ;KAClB,CAAC;IAEF,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;IAExE,OAAO;QACL,KAAK,EAAE,wBAAwB,QAAQ,EAAE;QACzC,QAAQ,EAAE,GAAG,EAAE;YACb,YAAY,CAAC;gBACX,KAAK,EAAE,UAAU;gBACjB,OAAO,EAAE,UAAU;gBACnB,OAAO;gBACP,SAAS;aACV,CAAC,CAAC;QACL,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAgB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;IACxE,MAAM,WAAW,GAAG,CAAC,+BAA+B,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5F,OAAO,CACL,oBAAC,QAAQ,IAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;QAChE,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,IAAG,GAAG,CAAC,OAAO,CAAa;QAC5E,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,OAAO;YAC9C,oBAAC,SAAS,IAAC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,GAAI,CACtC;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,MAAM;YAC7C,oBAAC,MAAM,IAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAI,CACvC;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,SAAS,IAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAa;QACzF,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,YAAY,IAClD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CACjB;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,UAAU,IAChD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CACpB;QACZ,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,WAAW,IAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAa;QACxF,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,KAAK;YAC5C,oBAAC,KAAK,IAAC,OAAO,EAAE,WAAW,GAAI,CACrB,CACH,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Status } from '@console/shared';\nimport { TableRow, TableData, RowFunction } from '@console/internal/components/factory';\nimport { Timestamp, Kebab } from '@console/internal/components/utils';\nimport { confirmModal } from '@console/internal/components/modals';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { tableColumnClasses } from './HelmReleaseHistoryHeader';\n\nconst confirmModalRollbackHelmRelease = (\n  releaseName: string,\n  namespace: string,\n  revision: number,\n) => {\n  const message = (\n    <>\n      Are you sure you want to rollback <strong>{releaseName}</strong> to{' '}\n      <strong>Revision {revision}</strong>?\n    </>\n  );\n\n  const payload = {\n    namespace,\n    name: releaseName,\n    version: revision,\n  };\n\n  const executeFn = () => coFetchJSON.patch('/api/helm/release', payload);\n\n  return {\n    label: `Rollback to Revision ${revision}`,\n    callback: () => {\n      confirmModal({\n        title: 'Rollback',\n        btnText: 'Rollback',\n        message,\n        executeFn,\n      });\n    },\n  };\n};\n\nconst HelmReleaseHistoryRow: RowFunction = ({ obj, index, key, style }) => {\n  const menuActions = [confirmModalRollbackHelmRelease(obj.name, obj.namespace, obj.version)];\n  return (\n    <TableRow id={obj.revision} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses.revision}>{obj.version}</TableData>\n      <TableData className={tableColumnClasses.updated}>\n        <Timestamp timestamp={obj.info.last_deployed} />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <Status status={_.capitalize(obj.info.status)} />\n      </TableData>\n      <TableData className={tableColumnClasses.chartName}>{obj.chart.metadata.name}</TableData>\n      <TableData className={tableColumnClasses.chartVersion}>\n        {obj.chart.metadata.version}\n      </TableData>\n      <TableData className={tableColumnClasses.appVersion}>\n        {obj.chart.metadata.appVersion}\n      </TableData>\n      <TableData className={tableColumnClasses.description}>{obj.info.description}</TableData>\n      <TableData className={tableColumnClasses.kebab}>\n        <Kebab options={menuActions} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport default HelmReleaseHistoryRow;\n"]}]}