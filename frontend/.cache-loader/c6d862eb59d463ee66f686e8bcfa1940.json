{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShell.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShell.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { connectToFlags } from '@console/internal/reducers/features';\nimport { isCloudShellExpanded } from '../../redux/reducers/cloud-shell-reducer';\nimport { toggleCloudShellExpanded } from '../../redux/actions/cloud-shell-actions';\nimport cloudShellConfirmationModal from './cloudShellConfirmationModal';\nimport CloudShellDrawer from './CloudShellDrawer';\nimport CloudShellTerminal from './CloudShellTerminal';\nimport { FLAG_DEVWORKSPACE } from '../../consts';\nconst CloudShell = ({ flags, open, onClose }) => {\n    if (!flags[FLAG_DEVWORKSPACE]) {\n        return null;\n    }\n    const toggleWithModal = () => cloudShellConfirmationModal(onClose);\n    return open ? (React.createElement(CloudShellDrawer, { onClose: toggleWithModal },\n        React.createElement(CloudShellTerminal, { onCancel: onClose }))) : null;\n};\nconst stateToProps = (state) => ({\n    open: isCloudShellExpanded(state),\n});\nconst dispatchToProps = (dispatch) => ({\n    onClose: () => dispatch(toggleCloudShellExpanded()),\n});\nexport default connect(stateToProps, dispatchToProps)(connectToFlags(FLAG_DEVWORKSPACE)(CloudShell));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShell.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/cloud-shell/CloudShell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAkB,cAAc,EAAE,MAAM,qCAAqC,CAAC;AACrF,OAAO,EAAE,oBAAoB,EAAE,MAAM,0CAA0C,CAAC;AAChF,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,2BAA2B,MAAM,+BAA+B,CAAC;AACxE,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAYjD,MAAM,UAAU,GAA8B,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;IACzE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;QAC7B,OAAO,IAAI,CAAC;KACb;IACD,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;IACnE,OAAO,IAAI,CAAC,CAAC,CAAC,CACZ,oBAAC,gBAAgB,IAAC,OAAO,EAAE,eAAe;QACxC,oBAAC,kBAAkB,IAAC,QAAQ,EAAE,OAAO,GAAI,CACxB,CACpB,CAAC,CAAC,CAAC,IAAI,CAAC;AACX,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,KAAgB,EAAc,EAAE,CAAC,CAAC;IACtD,IAAI,EAAE,oBAAoB,CAAC,KAAK,CAAC;CAClC,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,CAAC,QAAkB,EAAiB,EAAE,CAAC,CAAC;IAC9D,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,wBAAwB,EAAE,CAAC;CACpD,CAAC,CAAC;AAEH,eAAe,OAAO,CACpB,YAAY,EACZ,eAAe,CAChB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\nimport { WithFlagsProps, connectToFlags } from '@console/internal/reducers/features';\nimport { isCloudShellExpanded } from '../../redux/reducers/cloud-shell-reducer';\nimport { toggleCloudShellExpanded } from '../../redux/actions/cloud-shell-actions';\nimport cloudShellConfirmationModal from './cloudShellConfirmationModal';\nimport CloudShellDrawer from './CloudShellDrawer';\nimport CloudShellTerminal from './CloudShellTerminal';\nimport { FLAG_DEVWORKSPACE } from '../../consts';\n\ntype StateProps = {\n  open: boolean;\n};\n\ntype DispatchProps = {\n  onClose: () => void;\n};\n\ntype CloudShellProps = WithFlagsProps & StateProps & DispatchProps;\n\nconst CloudShell: React.FC<CloudShellProps> = ({ flags, open, onClose }) => {\n  if (!flags[FLAG_DEVWORKSPACE]) {\n    return null;\n  }\n  const toggleWithModal = () => cloudShellConfirmationModal(onClose);\n  return open ? (\n    <CloudShellDrawer onClose={toggleWithModal}>\n      <CloudShellTerminal onCancel={onClose} />\n    </CloudShellDrawer>\n  ) : null;\n};\n\nconst stateToProps = (state: RootState): StateProps => ({\n  open: isCloudShellExpanded(state),\n});\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onClose: () => dispatch(toggleCloudShellExpanded()),\n});\n\nexport default connect<StateProps, DispatchProps>(\n  stateToProps,\n  dispatchToProps,\n)(connectToFlags(FLAG_DEVWORKSPACE)(CloudShell));\n"]}]}