{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/app/AppSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/app/AppSection.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { useField } from 'formik';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, TextAreaField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport ApplicationSelector from './ApplicationSelector';\nconst AppSection = ({ project, noProjectsAvailable, extraMargin }) => {\n    const [initialApplication] = useField('application.initial');\n    const [formType] = useField('formType');\n    return (React.createElement(FormSection, { title: \"General\", extraMargin: extraMargin },\n        noProjectsAvailable && (React.createElement(React.Fragment, null,\n            React.createElement(InputField, { type: TextInputTypes.text, \"data-test-id\": \"application-form-project-name\", name: \"project.name\", label: \"Project Name\", helpText: \"A unique name for the project.\", required: true }),\n            React.createElement(InputField, { type: TextInputTypes.text, \"data-test-id\": \"application-form-project-display-name\", name: \"project.displayName\", label: \"Project Display Name\" }),\n            React.createElement(TextAreaField, { \"data-test-id\": \"application-form-project-description\", name: \"project.description\", label: \"Project Description\" }))),\n        !initialApplication.value && (React.createElement(ApplicationSelector, { namespace: project.name, noProjectsAvailable: noProjectsAvailable })),\n        React.createElement(InputField, { type: TextInputTypes.text, \"data-test-id\": \"application-form-app-name\", name: \"name\", label: \"Name\", helpText: \"A unique name given to the component that will be used to name associated resources.\", isDisabled: formType.value && formType.value === 'edit', required: !(formType.value && formType.value === 'edit') })));\n};\nexport default AppSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/app/AppSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/app/AppSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAE5D,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAQxD,MAAM,UAAU,GAA8B,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,EAAE,EAAE;IAC9F,MAAM,CAAC,kBAAkB,CAAC,GAAG,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAC7D,MAAM,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;IACxC,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAC,SAAS,EAAC,WAAW,EAAE,WAAW;QAClD,mBAAmB,IAAI,CACtB;YACE,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,kBACZ,+BAA+B,EAC5C,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,cAAc,EACpB,QAAQ,EAAC,gCAAgC,EACzC,QAAQ,SACR;YACF,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,kBACZ,uCAAuC,EACpD,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAC,sBAAsB,GAC5B;YACF,oBAAC,aAAa,oBACC,sCAAsC,EACnD,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAC,qBAAqB,GAC3B,CACD,CACJ;QACA,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAC5B,oBAAC,mBAAmB,IAAC,SAAS,EAAE,OAAO,CAAC,IAAI,EAAE,mBAAmB,EAAE,mBAAmB,GAAI,CAC3F;QACD,oBAAC,UAAU,IACT,IAAI,EAAE,cAAc,CAAC,IAAI,kBACZ,2BAA2B,EACxC,IAAI,EAAC,MAAM,EACX,KAAK,EAAC,MAAM,EACZ,QAAQ,EAAC,sFAAsF,EAC/F,UAAU,EAAE,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,KAAK,MAAM,EACvD,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,KAAK,MAAM,CAAC,GACxD,CACU,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import * as React from 'react';\nimport { useField } from 'formik';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { InputField, TextAreaField } from '@console/shared';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport ApplicationSelector from './ApplicationSelector';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({ project, noProjectsAvailable, extraMargin }) => {\n  const [initialApplication] = useField('application.initial');\n  const [formType] = useField('formType');\n  return (\n    <FormSection title=\"General\" extraMargin={extraMargin}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name=\"project.name\"\n            label=\"Project Name\"\n            helpText=\"A unique name for the project.\"\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name=\"project.displayName\"\n            label=\"Project Display Name\"\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name=\"project.description\"\n            label=\"Project Description\"\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector namespace={project.name} noProjectsAvailable={noProjectsAvailable} />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name=\"name\"\n        label=\"Name\"\n        helpText=\"A unique name given to the component that will be used to name associated resources.\"\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n"]}]}