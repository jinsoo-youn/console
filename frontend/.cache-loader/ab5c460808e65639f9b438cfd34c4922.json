{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/tags-label.jsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/tags-label.jsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as classNames from 'classnames';\nimport TagsInput from 'react-tagsinput';\nimport { useFormContext, Controller } from 'react-hook-form';\nexport const TagsLabel = ({ name, placeholder = '' }) => {\n    const { control, setValue, getValues, watch } = useFormContext();\n    const [inputValue, setInputValue] = useState('');\n    const [isInputValid, setIsInputValid] = useState(true);\n    const [isEmpty, setIsEmpty] = useState(watch(name) === undefined);\n    // An array of key codes that add a tag, default is [9, 13] (Tab and Enter).\n    const addKeys = [13];\n    // An array of key codes that remove a tag, default is [8] (Backspace).\n    const removeKeys = inputValue.length ? [] : [8];\n    const isTagValid = inputValue => {\n        // 지금은 한글이 있는지만 validation\n        const hasKorean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(inputValue);\n        return !hasKorean;\n    };\n    const handleInputChange = e => {\n        const inputValue = e.target.value;\n        // If the user deletes an existing inputValue, set isInputValid back to true\n        if (inputValue === '') {\n            setInputValue(inputValue);\n            setIsInputValid(true);\n            return;\n        }\n        setInputValue(inputValue);\n        setIsInputValid(isTagValid(inputValue));\n    };\n    const handleChange = (tags, changed) => {\n        const newTag = changed[0];\n        if (!isTagValid(newTag)) {\n            setIsInputValid(false);\n            return;\n        }\n        setValue(name, tags);\n        setIsEmpty(_.isEmpty(tags));\n        setInputValue('');\n        setIsInputValid(true);\n    };\n    const renderTag = ({ tag, key, onRemove, getTagDisplayValue }) => {\n        return (React.createElement(\"span\", { className: classNames('tag-item', 'co-m-label', 'co-text-pod'), key: key },\n            React.createElement(\"span\", { className: \"tag-item__content\" }, getTagDisplayValue(tag)),\n            \"\\u00A0\",\n            React.createElement(\"a\", { className: \"remove-button\", onClick: () => onRemove(key) }, \"\\u00D7\")));\n    };\n    const inputProps = {\n        className: classNames('input', { 'invalid-tag': !isInputValid }),\n        spellCheck: 'false',\n        value: inputValue,\n        placeholder: isEmpty ? placeholder : '',\n        id: 'tags-input',\n        onChange: handleInputChange,\n    };\n    return (React.createElement(Controller, { control: control, name: name, render: ({ value }) => (React.createElement(\"div\", { className: \"co-search-input pf-c-form-control\" },\n            React.createElement(\"tags-input\", null,\n                React.createElement(TagsInput, { onChange: handleChange, value: value ? value : [], className: \"tags\", renderTag: renderTag, inputProps: inputProps, addKeys: addKeys, removeKeys: removeKeys, addOnBlur: true })))) }));\n};\nTagsLabel.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/tags-label.jsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/utils/tags-label.jsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as classNames from 'classnames';\nimport TagsInput from 'react-tagsinput';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nexport const TagsLabel = ({ name, placeholder = '' }) => {\n  const { control, setValue, getValues, watch } = useFormContext();\n  const [inputValue, setInputValue] = useState('');\n  const [isInputValid, setIsInputValid] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(watch(name) === undefined);\n\n  // An array of key codes that add a tag, default is [9, 13] (Tab and Enter).\n  const addKeys = [13];\n  // An array of key codes that remove a tag, default is [8] (Backspace).\n  const removeKeys = inputValue.length ? [] : [8];\n\n  const isTagValid = inputValue => {\n    // 지금은 한글이 있는지만 validation\n    const hasKorean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(inputValue);\n    return !hasKorean;\n  };\n\n  const handleInputChange = e => {\n    const inputValue = e.target.value;\n\n    // If the user deletes an existing inputValue, set isInputValid back to true\n    if (inputValue === '') {\n      setInputValue(inputValue);\n      setIsInputValid(true);\n      return;\n    }\n    setInputValue(inputValue);\n    setIsInputValid(isTagValid(inputValue));\n  };\n\n  const handleChange = (tags, changed) => {\n    const newTag = changed[0];\n\n    if (!isTagValid(newTag)) {\n      setIsInputValid(false);\n      return;\n    }\n    setValue(name, tags);\n    setIsEmpty(_.isEmpty(tags));\n    setInputValue('');\n    setIsInputValid(true);\n  };\n\n  const renderTag = ({ tag, key, onRemove, getTagDisplayValue }) => {\n    return (\n      <span className={classNames('tag-item', 'co-m-label', 'co-text-pod')} key={key}>\n        <span className=\"tag-item__content\">{getTagDisplayValue(tag)}</span>\n        &nbsp;\n        <a className=\"remove-button\" onClick={() => onRemove(key)}>\n          ×\n        </a>\n      </span>\n    );\n  };\n\n  const inputProps = {\n    className: classNames('input', { 'invalid-tag': !isInputValid }),\n    spellCheck: 'false',\n    value: inputValue,\n    placeholder: isEmpty ? placeholder : '',\n    id: 'tags-input',\n    onChange: handleInputChange,\n  };\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      render={({ value }) => (\n        <div className=\"co-search-input pf-c-form-control\">\n          <tags-input>\n            <TagsInput onChange={handleChange} value={value ? value : []} className=\"tags\" renderTag={renderTag} inputProps={inputProps} addKeys={addKeys} removeKeys={removeKeys} addOnBlur></TagsInput>\n          </tags-input>\n        </div>\n      )}\n    ></Controller>\n  );\n};\n\nTagsLabel.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n};\n"]}]}