{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-catalog/create-binding.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-catalog/create-binding.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { LoadingBox } from '../utils/status-box';\nimport { ServiceInstanceModel, ServiceBindingModel, ClusterServicePlanModel } from '../../models';\nimport { k8sCreate, referenceForModel } from '../../module/k8s';\nimport { ButtonBar } from '../utils/button-bar';\nimport { createParametersSecret, getBindingCreateSchema, getBindingParametersForm, getUISchema, ServiceCatalogParametersForm, } from './schema-form';\nimport { Firehose, history, PageHeading, resourcePathFromModel } from '../utils';\nconst PARAMETERS_SECRET_KEY = 'parameters';\nconst BindingParametersForm = (_a) => {\n    var { plan } = _a, rest = __rest(_a, [\"plan\"]);\n    if (!plan.loaded) {\n        return React.createElement(LoadingBox, null);\n    }\n    const schema = getBindingCreateSchema(plan.data);\n    const parametersForm = getBindingParametersForm(plan.data);\n    const uiSchema = getUISchema(parametersForm);\n    return React.createElement(ServiceCatalogParametersForm, Object.assign({ schema: schema, uiSchema: uiSchema }, rest));\n};\nconst BindingParameters = (props) => {\n    const planName = _.get(props.instance, 'spec.clusterServicePlanRef.name');\n    if (!planName) {\n        return null;\n    }\n    const resources = [\n        { kind: referenceForModel(ClusterServicePlanModel), name: planName, prop: 'plan' },\n    ];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(BindingParametersForm, Object.assign({}, props))));\n};\nclass CreateBindingForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onNameChange = (event) => {\n            this.setState({ name: event.currentTarget.value });\n        };\n        this.createBinding = (secretName) => {\n            const parametersFrom = secretName\n                ? [{ secretKeyRef: { name: secretName, key: PARAMETERS_SECRET_KEY } }]\n                : [];\n            const serviceBinding = {\n                apiVersion: 'servicecatalog.k8s.io/v1beta1',\n                kind: 'ServiceBinding',\n                metadata: {\n                    name: this.state.name,\n                    namespace: _.get(this.props.obj, 'data.metadata.namespace'),\n                },\n                spec: {\n                    instanceRef: {\n                        name: _.get(this.props.obj, 'data.metadata.name'),\n                    },\n                    parametersFrom,\n                },\n            };\n            return k8sCreate(ServiceBindingModel, serviceBinding);\n        };\n        this.onFormChange = ({ formData }) => this.setState({ formData });\n        this.save = ({ formData }) => {\n            const { name: bindingName } = this.state;\n            if (!bindingName) {\n                this.setState({ error: 'Please complete all fields.' });\n                return;\n            }\n            this.setState({ inProgress: true });\n            const secretName = _.isEmpty(formData) ? null : `${bindingName}-bind-parameters`;\n            this.createBinding(secretName)\n                .then((binding) => secretName\n                ? createParametersSecret(secretName, PARAMETERS_SECRET_KEY, formData, binding)\n                : null)\n                .then(() => {\n                this.setState({ inProgress: false });\n                const instance = this.props.obj.data;\n                history.push(resourcePathFromModel(ServiceBindingModel, bindingName, instance.metadata.namespace));\n            }, (err) => this.setState({ error: err.message, inProgress: false }));\n        };\n        this.state = {\n            name: props.match.params.name,\n            formData: {},\n            inProgress: false,\n        };\n    }\n    render() {\n        const { obj, match } = this.props;\n        const { name, formData, inProgress, error } = this.state;\n        const serviceInstance = _.get(obj, 'data');\n        const title = 'Create Service Binding';\n        if (!obj.loaded) {\n            return React.createElement(LoadingBox, null);\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Helmet, null,\n                React.createElement(\"title\", null, title)),\n            React.createElement(PageHeading, { title: title, obj: obj, breadcrumbsFor: () => [\n                    {\n                        name: serviceInstance.metadata.name,\n                        path: resourcePathFromModel(ServiceInstanceModel, serviceInstance.metadata.name, serviceInstance.metadata.namespace),\n                    },\n                    { name: `${title}`, path: `${match.url}` },\n                ] }),\n            React.createElement(\"div\", { className: \"co-m-pane__body\" },\n                React.createElement(\"p\", { className: \"co-m-pane__explanation\" }, \"Service bindings create a secret containing the necessary information for an application to use a service.\"),\n                React.createElement(\"div\", { className: \"row\" },\n                    React.createElement(\"div\", { className: \"col-md-5\" },\n                        React.createElement(\"p\", null,\n                            \"Create a binding for \",\n                            React.createElement(\"strong\", null, serviceInstance.metadata.name),\n                            \" in\",\n                            ' ',\n                            React.createElement(\"strong\", null, serviceInstance.metadata.namespace),\n                            \".\"),\n                        React.createElement(\"form\", { className: \"co-create-service-binding co-m-pane__form\" },\n                            React.createElement(\"div\", { className: \"form-group co-create-service-binding__name\" },\n                                React.createElement(\"label\", { className: \"control-label co-required\", htmlFor: \"name\" }, \"Service Binding Name\"),\n                                React.createElement(\"input\", { className: \"pf-c-form-control\", type: \"text\", onChange: this.onNameChange, value: name, id: \"name\", required: true }))),\n                        React.createElement(BindingParameters, { instance: serviceInstance, onSubmit: this.save, formData: formData, onChange: this.onFormChange },\n                            React.createElement(ButtonBar, { errorMessage: error, inProgress: inProgress },\n                                React.createElement(ActionGroup, { className: \"pf-c-form\" },\n                                    React.createElement(Button, { type: \"submit\", variant: \"primary\" }, \"Create\"),\n                                    React.createElement(Button, { type: \"button\", id: \"cancel\", onClick: history.goBack, variant: \"secondary\" }, \"Cancel\")))))))));\n    }\n}\nexport const CreateBindingPage = (props) => {\n    const resources = [\n        {\n            kind: referenceForModel(ServiceInstanceModel),\n            name: props.match.params.name,\n            namespace: props.match.params.ns,\n            isList: false,\n            prop: 'obj',\n        },\n    ];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(CreateBindingForm, Object.assign({}, props))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-catalog/create-binding.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/service-catalog/create-binding.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Helmet } from 'react-helmet';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { IChangeEvent, ISubmitEvent } from 'react-jsonschema-form';\nimport { JSONSchema6 } from 'json-schema';\n\nimport { LoadingBox } from '../utils/status-box';\nimport { ServiceInstanceModel, ServiceBindingModel, ClusterServicePlanModel } from '../../models';\nimport { k8sCreate, K8sResourceKind, referenceForModel } from '../../module/k8s';\nimport { ButtonBar } from '../utils/button-bar';\nimport {\n  createParametersSecret,\n  getBindingCreateSchema,\n  getBindingParametersForm,\n  getUISchema,\n  ServiceCatalogParametersForm,\n} from './schema-form';\nimport { Firehose, history, PageHeading, resourcePathFromModel } from '../utils';\n\nconst PARAMETERS_SECRET_KEY = 'parameters';\n\nconst BindingParametersForm: React.SFC<BindingParametersFormProps> = ({ plan, ...rest }) => {\n  if (!plan.loaded) {\n    return <LoadingBox />;\n  }\n\n  const schema: JSONSchema6 = getBindingCreateSchema(plan.data);\n  const parametersForm = getBindingParametersForm(plan.data);\n  const uiSchema = getUISchema(parametersForm);\n  return <ServiceCatalogParametersForm schema={schema} uiSchema={uiSchema} {...rest} />;\n};\n\nconst BindingParameters: React.SFC<BindingParametersProps> = (props) => {\n  const planName = _.get(props.instance, 'spec.clusterServicePlanRef.name');\n  if (!planName) {\n    return null;\n  }\n\n  const resources = [\n    { kind: referenceForModel(ClusterServicePlanModel), name: planName, prop: 'plan' },\n  ];\n  return (\n    <Firehose resources={resources}>\n      <BindingParametersForm {...(props as any)} />\n    </Firehose>\n  );\n};\n\nclass CreateBindingForm extends React.Component<CreateBindingProps, CreateBindingState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: props.match.params.name,\n      formData: {},\n      inProgress: false,\n    };\n  }\n\n  onNameChange: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  createBinding = (secretName: string): Promise<K8sResourceKind> => {\n    const parametersFrom = secretName\n      ? [{ secretKeyRef: { name: secretName, key: PARAMETERS_SECRET_KEY } }]\n      : [];\n    const serviceBinding = {\n      apiVersion: 'servicecatalog.k8s.io/v1beta1',\n      kind: 'ServiceBinding',\n      metadata: {\n        name: this.state.name,\n        namespace: _.get(this.props.obj, 'data.metadata.namespace'),\n      },\n      spec: {\n        instanceRef: {\n          name: _.get(this.props.obj, 'data.metadata.name'),\n        },\n        parametersFrom,\n      },\n    };\n\n    return k8sCreate(ServiceBindingModel, serviceBinding);\n  };\n\n  onFormChange = ({ formData }: IChangeEvent) => this.setState({ formData });\n\n  save = ({ formData }: ISubmitEvent<any>) => {\n    const { name: bindingName } = this.state;\n    if (!bindingName) {\n      this.setState({ error: 'Please complete all fields.' });\n      return;\n    }\n    this.setState({ inProgress: true });\n    const secretName = _.isEmpty(formData) ? null : `${bindingName}-bind-parameters`;\n    this.createBinding(secretName)\n      .then((binding) =>\n        secretName\n          ? createParametersSecret(secretName, PARAMETERS_SECRET_KEY, formData, binding)\n          : null,\n      )\n      .then(\n        () => {\n          this.setState({ inProgress: false });\n          const instance = this.props.obj.data;\n          history.push(\n            resourcePathFromModel(ServiceBindingModel, bindingName, instance.metadata.namespace),\n          );\n        },\n        (err) => this.setState({ error: err.message, inProgress: false }),\n      );\n  };\n\n  render() {\n    const { obj, match } = this.props;\n    const { name, formData, inProgress, error } = this.state;\n    const serviceInstance = _.get(obj, 'data');\n    const title = 'Create Service Binding';\n\n    if (!obj.loaded) {\n      return <LoadingBox />;\n    }\n\n    return (\n      <>\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <PageHeading\n          title={title}\n          obj={obj}\n          breadcrumbsFor={() => [\n            {\n              name: serviceInstance.metadata.name,\n              path: resourcePathFromModel(\n                ServiceInstanceModel,\n                serviceInstance.metadata.name,\n                serviceInstance.metadata.namespace,\n              ),\n            },\n            { name: `${title}`, path: `${match.url}` },\n          ]}\n        />\n        <div className=\"co-m-pane__body\">\n          <p className=\"co-m-pane__explanation\">\n            Service bindings create a secret containing the necessary information for an application\n            to use a service.\n          </p>\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <p>\n                Create a binding for <strong>{serviceInstance.metadata.name}</strong> in{' '}\n                <strong>{serviceInstance.metadata.namespace}</strong>.\n              </p>\n              <form className=\"co-create-service-binding co-m-pane__form\">\n                <div className=\"form-group co-create-service-binding__name\">\n                  <label className=\"control-label co-required\" htmlFor=\"name\">\n                    Service Binding Name\n                  </label>\n                  <input\n                    className=\"pf-c-form-control\"\n                    type=\"text\"\n                    onChange={this.onNameChange}\n                    value={name}\n                    id=\"name\"\n                    required\n                  />\n                </div>\n              </form>\n              <BindingParameters\n                instance={serviceInstance}\n                onSubmit={this.save}\n                formData={formData}\n                onChange={this.onFormChange}\n              >\n                <ButtonBar errorMessage={error} inProgress={inProgress}>\n                  <ActionGroup className=\"pf-c-form\">\n                    <Button type=\"submit\" variant=\"primary\">\n                      Create\n                    </Button>\n                    <Button type=\"button\" id=\"cancel\" onClick={history.goBack} variant=\"secondary\">\n                      Cancel\n                    </Button>\n                  </ActionGroup>\n                </ButtonBar>\n              </BindingParameters>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const CreateBindingPage: React.SFC<CreateBindingPageProps> = (props) => {\n  const resources = [\n    {\n      kind: referenceForModel(ServiceInstanceModel),\n      name: props.match.params.name,\n      namespace: props.match.params.ns,\n      isList: false,\n      prop: 'obj',\n    },\n  ];\n  return (\n    <Firehose resources={resources}>\n      <CreateBindingForm {...(props as any)} />\n    </Firehose>\n  );\n};\n\nexport type BindingParametersFormProps = {\n  plan: any;\n  formData: any;\n  onChange: (e: IChangeEvent) => void;\n  onSubmit: (e: ISubmitEvent<any>) => void;\n};\n\nexport type BindingParametersProps = {\n  instance: any;\n  formData: any;\n  onChange: (e: IChangeEvent) => void;\n  onSubmit: (e: ISubmitEvent<any>) => void;\n};\n\nexport type CreateBindingProps = {\n  obj: any;\n  match: any;\n};\n\nexport type CreateBindingState = {\n  name: string;\n  formData: any;\n  inProgress: boolean;\n  error?: any;\n};\n\nexport type CreateBindingPageProps = {\n  match: any;\n};\n"]}]}