{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-item-icon.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-item-icon.tsx","mtime":1616735742460},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport * as threeScaleImg from '../../imgs/logos/3scale.svg';\nimport * as aerogearImg from '../../imgs/logos/aerogear.svg';\nimport * as amqImg from '../../imgs/logos/amq.svg';\nimport * as angularjsImg from '../../imgs/logos/angularjs.svg';\nimport * as ansibleImg from '../../imgs/logos/ansible.svg';\nimport * as apacheImg from '../../imgs/logos/apache.svg';\nimport * as beakerImg from '../../imgs/logos/beaker.svg';\nimport * as camelImg from '../../imgs/logos/camel.svg';\nimport * as capedwarfImg from '../../imgs/logos/capedwarf.svg';\nimport * as catalogImg from '../../imgs/logos/catalog-icon.svg';\nimport * as cassandraImg from '../../imgs/logos/cassandra.svg';\nimport * as clojureImg from '../../imgs/logos/clojure.svg';\nimport * as codeigniterImg from '../../imgs/logos/codeigniter.svg';\nimport * as cordovaImg from '../../imgs/logos/cordova.png';\nimport * as datagridImg from '../../imgs/logos/datagrid.svg';\nimport * as datavirtImg from '../../imgs/logos/datavirt.svg';\nimport * as debianImg from '../../imgs/logos/debian.svg';\nimport * as decisionserverImg from '../../imgs/logos/decisionserver.svg';\nimport * as djangoImg from '../../imgs/logos/django.svg';\nimport * as dotnetImg from '../../imgs/logos/dotnet.svg';\nimport * as drupalImg from '../../imgs/logos/drupal.svg';\nimport * as eapImg from '../../imgs/logos/eap.svg';\nimport * as elasticImg from '../../imgs/logos/elastic.svg';\nimport * as erlangImg from '../../imgs/logos/erlang.svg';\nimport * as fedoraImg from '../../imgs/logos/fedora.svg';\nimport * as freebsdImg from '../../imgs/logos/freebsd.svg';\nimport * as gitImg from '../../imgs/logos/git.svg';\nimport * as githubImg from '../../imgs/logos/github.svg';\nimport * as gitlabImg from '../../imgs/logos/gitlab.svg';\nimport * as glassfishImg from '../../imgs/logos/glassfish.svg';\nimport * as goLangImg from '../../imgs/logos/golang.svg';\nimport * as grailsImg from '../../imgs/logos/grails.svg';\nimport * as hadoopImg from '../../imgs/logos/hadoop.svg';\nimport * as haproxyImg from '../../imgs/logos/haproxy.svg';\nimport * as helmImg from '../../imgs/logos/helm.svg';\nimport * as infinispanImg from '../../imgs/logos/infinispan.svg';\nimport * as jbossImg from '../../imgs/logos/jboss.svg';\nimport * as jenkinsImg from '../../imgs/logos/jenkins.svg';\nimport * as jettyImg from '../../imgs/logos/jetty.svg';\nimport * as joomlaImg from '../../imgs/logos/joomla.svg';\nimport * as jrubyImg from '../../imgs/logos/jruby.svg';\nimport * as jsImg from '../../imgs/logos/js.svg';\nimport * as knativeImg from '../../imgs/logos/knative.svg';\nimport * as kubevirtImg from '../../imgs/logos/kubevirt.svg';\nimport * as laravelImg from '../../imgs/logos/laravel.svg';\nimport * as loadBalancerImg from '../../imgs/logos/load-balancer.svg';\nimport * as mariadbImg from '../../imgs/logos/mariadb.svg';\nimport * as mediawikiImg from '../../imgs/logos/mediawiki.svg';\nimport * as memcachedImg from '../../imgs/logos/memcached.svg';\nimport * as mongodbImg from '../../imgs/logos/mongodb.svg';\nimport * as mssqlImg from '../../imgs/logos/mssql.svg';\nimport * as mysqlDatabaseImg from '../../imgs/logos/mysql-database.svg';\nimport * as nginxImg from '../../imgs/logos/nginx.svg';\nimport * as nodejsImg from '../../imgs/logos/nodejs.svg';\nimport * as openjdkImg from '../../imgs/logos/openjdk.svg';\nimport * as redhatImg from '../../imgs/logos/redhat.svg';\nimport * as openlibertyImg from '../../imgs/logos/openliberty.svg';\nimport * as openshiftImg from '../../imgs/logos/openshift.svg';\nimport * as openstackImg from '../../imgs/logos/openstack.svg';\nimport * as otherLinuxImg from '../../imgs/logos/other-linux.svg';\nimport * as otherUnknownImg from '../../imgs/logos/other-unknown.svg';\nimport * as perlImg from '../../imgs/logos/perl.svg';\nimport * as phalconImg from '../../imgs/logos/phalcon.svg';\nimport * as phpImg from '../../imgs/logos/php.svg';\nimport * as playImg from '../../imgs/logos/play.svg';\nimport * as postgresqlImg from '../../imgs/logos/postgresql.svg';\nimport * as processserverImg from '../../imgs/logos/processserver.svg';\nimport * as pythonImg from '../../imgs/logos/python.svg';\nimport * as quarkusImg from '../../imgs/logos/quarkus.svg';\nimport * as rabbitmqImg from '../../imgs/logos/rabbitmq.svg';\nimport * as railsImg from '../../imgs/logos/rails.svg';\nimport * as redisImg from '../../imgs/logos/redis.svg';\nimport * as rhIntegrationImg from '../../imgs/logos/rh-integration.svg';\nimport * as rhSpringBoot from '../../imgs/logos/rh-spring-boot.svg';\nimport * as rhTomcatImg from '../../imgs/logos/rh-tomcat.svg';\nimport * as rubyImg from '../../imgs/logos/ruby.svg';\nimport * as scalaImg from '../../imgs/logos/scala.svg';\nimport * as shadowmanImg from '../../imgs/logos/shadowman.svg';\nimport * as springImg from '../../imgs/logos/spring.svg';\nimport * as springBootImg from '../../imgs/logos/spring-boot.svg';\nimport * as ssoImg from '../../imgs/logos/sso.svg';\nimport * as stackoverflowImg from '../../imgs/logos/stackoverflow.svg';\nimport * as suseImg from '../../imgs/logos/suse.svg';\nimport * as symfonyImg from '../../imgs/logos/symfony.svg';\nimport * as tomcatImg from '../../imgs/logos/tomcat.svg';\nimport * as ubuntuImg from '../../imgs/logos/ubuntu.svg';\nimport * as vertxImg from '../../imgs/logos/vertx.svg';\nimport * as wildflyImg from '../../imgs/logos/wildfly.svg';\nimport * as windowsImg from '../../imgs/logos/windows.svg';\nimport * as wordpressImg from '../../imgs/logos/wordpress.svg';\nimport * as xamarinImg from '../../imgs/logos/xamarin.svg';\nimport * as zendImg from '../../imgs/logos/zend.svg';\nconst logos = new Map()\n    .set('icon-3scale', threeScaleImg)\n    .set('icon-aerogear', aerogearImg)\n    .set('icon-amq', amqImg)\n    .set('icon-angularjs', angularjsImg)\n    .set('icon-ansible', ansibleImg)\n    .set('icon-apache', apacheImg)\n    .set('icon-beaker', beakerImg)\n    .set('icon-camel', camelImg)\n    .set('icon-capedwarf', capedwarfImg)\n    .set('icon-catalog', catalogImg)\n    .set('icon-cassandra', cassandraImg)\n    .set('icon-clojure', clojureImg)\n    .set('icon-codeigniter', codeigniterImg)\n    .set('icon-cordova', cordovaImg)\n    .set('icon-datagrid', datagridImg)\n    .set('icon-datavirt', datavirtImg)\n    .set('icon-debian', debianImg)\n    .set('icon-decisionserver', decisionserverImg)\n    .set('icon-django', djangoImg)\n    .set('icon-dotnet', dotnetImg)\n    .set('icon-drupal', drupalImg)\n    .set('icon-eap', eapImg)\n    .set('icon-elastic', elasticImg)\n    .set('icon-erlang', erlangImg)\n    .set('icon-fedora', fedoraImg)\n    .set('icon-freebsd', freebsdImg)\n    .set('icon-git', gitImg)\n    .set('icon-github', githubImg)\n    .set('icon-gitlab', gitlabImg)\n    .set('icon-glassfish', glassfishImg)\n    .set('icon-go-gopher', goLangImg)\n    .set('icon-golang', goLangImg)\n    .set('icon-grails', grailsImg)\n    .set('icon-hadoop', hadoopImg)\n    .set('icon-haproxy', haproxyImg)\n    .set('icon-helm', helmImg)\n    .set('icon-infinispan', infinispanImg)\n    .set('icon-jboss', jbossImg)\n    .set('icon-jenkins', jenkinsImg)\n    .set('icon-jetty', jettyImg)\n    .set('icon-joomla', joomlaImg)\n    .set('icon-jruby', jrubyImg)\n    .set('icon-js', jsImg)\n    .set('icon-knative', knativeImg)\n    .set('icon-kubevirt', kubevirtImg)\n    .set('icon-laravel', laravelImg)\n    .set('icon-load-balancer', loadBalancerImg)\n    .set('icon-mariadb', mariadbImg)\n    .set('icon-mediawiki', mediawikiImg)\n    .set('icon-memcached', memcachedImg)\n    .set('icon-mongodb', mongodbImg)\n    .set('icon-mssql', mssqlImg)\n    .set('icon-mysql-database', mysqlDatabaseImg)\n    .set('icon-nginx', nginxImg)\n    .set('icon-nodejs', nodejsImg)\n    .set('icon-openjdk', openjdkImg)\n    .set('icon-openliberty', openlibertyImg)\n    .set('icon-openshift', openshiftImg)\n    .set('icon-openstack', openstackImg)\n    .set('icon-other-linux', otherLinuxImg)\n    .set('icon-other-unknown', otherUnknownImg)\n    .set('icon-perl', perlImg)\n    .set('icon-phalcon', phalconImg)\n    .set('icon-php', phpImg)\n    .set('icon-play', playImg)\n    .set('icon-postgresql', postgresqlImg)\n    .set('icon-processserver', processserverImg)\n    .set('icon-python', pythonImg)\n    .set('icon-quarkus', quarkusImg)\n    .set('icon-rabbitmq', rabbitmqImg)\n    .set('icon-rails', railsImg)\n    .set('icon-redis', redisImg)\n    .set('icon-rh-integration', rhIntegrationImg)\n    .set('icon-rh-spring-boot', rhSpringBoot)\n    .set('icon-java', openjdkImg)\n    // Use the upstream icon.\n    .set('icon-redhat', redhatImg)\n    .set('icon-rh-openjdk', openjdkImg)\n    .set('icon-rh-tomcat', rhTomcatImg)\n    .set('icon-ruby', rubyImg)\n    .set('icon-scala', scalaImg)\n    .set('icon-shadowman', shadowmanImg)\n    .set('icon-spring', springImg)\n    .set('icon-spring-boot', springBootImg)\n    .set('icon-sso', ssoImg)\n    .set('icon-stackoverflow', stackoverflowImg)\n    .set('icon-suse', suseImg)\n    .set('icon-symfony', symfonyImg)\n    .set('icon-tomcat', tomcatImg)\n    .set('icon-ubuntu', ubuntuImg)\n    .set('icon-vertx', vertxImg)\n    .set('icon-wildfly', wildflyImg)\n    .set('icon-windows', windowsImg)\n    .set('icon-wordpress', wordpressImg)\n    .set('icon-xamarin', xamarinImg)\n    .set('icon-zend', zendImg);\nexport const normalizeIconClass = (iconClass) => {\n    return _.startsWith(iconClass, 'icon-') ? `font-icon ${iconClass}` : iconClass;\n};\nexport const getImageForIconClass = (iconClass) => {\n    return logos.get(iconClass);\n};\nexport const getServiceClassIcon = (serviceClass) => {\n    return _.get(serviceClass, ['spec', 'externalMetadata', 'console.openshift.io/iconClass'], logos.get('icon-catalog'));\n};\nexport const getServiceClassImage = (serviceClass) => {\n    const iconClass = getServiceClassIcon(serviceClass);\n    const iconClassImg = getImageForIconClass(iconClass);\n    return _.get(serviceClass, ['spec', 'externalMetadata', 'imageUrl']) || iconClassImg;\n};\nexport const getImageStreamIcon = (tag) => {\n    return _.get(tag, 'annotations.iconClass');\n};\nexport const getTemplateIcon = (template) => {\n    return _.get(template, 'metadata.annotations.iconClass');\n};\nexport const ClusterServiceClassIcon = ({ serviceClass, iconSize, }) => {\n    const iconClass = getServiceClassIcon(serviceClass);\n    const imageUrl = getServiceClassImage(serviceClass);\n    return (React.createElement(\"span\", { className: \"co-catalog-item-icon\" }, imageUrl ? (React.createElement(\"img\", { className: classNames('co-catalog-item-icon__img', iconSize && `co-catalog-item-icon__img--${iconSize}`), src: imageUrl })) : (React.createElement(\"span\", { className: classNames('co-catalog-item-icon__icon', iconSize && `co-catalog-item-icon__icon--${iconSize}`, normalizeIconClass(iconClass)) }))));\n};\nClusterServiceClassIcon.displayName = 'ClusterServiceClassIcon';\nexport const ImageStreamIcon = ({ tag, iconSize }) => {\n    const iconClass = getImageStreamIcon(tag);\n    const iconClassImg = getImageForIconClass(iconClass);\n    return (React.createElement(\"span\", { className: \"co-catalog-item-icon\" }, iconClassImg ? (React.createElement(\"img\", { className: classNames('co-catalog-item-icon__img', iconSize && `co-catalog-item-icon__img--${iconSize}`), src: iconClassImg })) : (React.createElement(\"span\", { className: classNames('co-catalog-item-icon__icon', iconSize && `co-catalog-item-icon__icon--${iconSize}`, normalizeIconClass(iconClass)) }))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-item-icon.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/catalog/catalog-item-icon.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AAGzC,OAAO,KAAK,aAAa,MAAM,6BAA6B,CAAC;AAC7D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,mCAAmC,CAAC;AAChE,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,cAAc,MAAM,kCAAkC,CAAC;AACnE,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,iBAAiB,MAAM,qCAAqC,CAAC;AACzE,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AACrD,OAAO,KAAK,aAAa,MAAM,iCAAiC,CAAC;AACjE,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,KAAK,MAAM,yBAAyB,CAAC;AACjD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,eAAe,MAAM,oCAAoC,CAAC;AACtE,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,cAAc,MAAM,kCAAkC,CAAC;AACnE,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,aAAa,MAAM,kCAAkC,CAAC;AAClE,OAAO,KAAK,eAAe,MAAM,oCAAoC,CAAC;AACtE,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AACrD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AACrD,OAAO,KAAK,aAAa,MAAM,iCAAiC,CAAC;AACjE,OAAO,KAAK,gBAAgB,MAAM,oCAAoC,CAAC;AACvE,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,KAAK,YAAY,MAAM,qCAAqC,CAAC;AACpE,OAAO,KAAK,WAAW,MAAM,gCAAgC,CAAC;AAC9D,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AACrD,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,aAAa,MAAM,kCAAkC,CAAC;AAClE,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,gBAAgB,MAAM,oCAAoC,CAAC;AACvE,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AACrD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AACzD,OAAO,KAAK,QAAQ,MAAM,4BAA4B,CAAC;AACvD,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,YAAY,MAAM,gCAAgC,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,8BAA8B,CAAC;AAC3D,OAAO,KAAK,OAAO,MAAM,2BAA2B,CAAC;AAErD,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE;KACpB,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC;KACjC,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC;KACjC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;KACvB,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC;KACvC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC;KACjC,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC;KACjC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,qBAAqB,EAAE,iBAAiB,CAAC;KAC7C,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;KACvB,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;KACvB,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,gBAAgB,EAAE,SAAS,CAAC;KAChC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;KACzB,GAAG,CAAC,iBAAiB,EAAE,aAAa,CAAC;KACrC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;KACrB,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC;KACjC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,oBAAoB,EAAE,eAAe,CAAC;KAC1C,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,CAAC;KAC5C,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC;KACvC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC;KACtC,GAAG,CAAC,oBAAoB,EAAE,eAAe,CAAC;KAC1C,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;KACzB,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;KACvB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;KACzB,GAAG,CAAC,iBAAiB,EAAE,aAAa,CAAC;KACrC,GAAG,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;KAC3C,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,eAAe,EAAE,WAAW,CAAC;KACjC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,CAAC;KAC5C,GAAG,CAAC,qBAAqB,EAAE,YAAY,CAAC;KACxC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC;IAC7B,yBAAyB;KACxB,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,iBAAiB,EAAE,UAAU,CAAC;KAClC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;KAClC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;KACzB,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC;KACtC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;KACvB,GAAG,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;KAC3C,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;KACzB,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;KAC7B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;KAC3B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;KACnC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;KAC/B,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AAE7B,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,SAAiB,EAAU,EAAE;IAC9D,OAAO,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AACjF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,SAAiB,EAAU,EAAE;IAChE,OAAO,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,YAA6B,EAAU,EAAE;IAC3E,OAAO,CAAC,CAAC,GAAG,CACV,YAAY,EACZ,CAAC,MAAM,EAAE,kBAAkB,EAAE,gCAAgC,CAAC,EAC9D,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAC1B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,YAA6B,EAAU,EAAE;IAC5E,MAAM,SAAS,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACpD,MAAM,YAAY,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACrD,OAAO,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC,IAAI,YAAY,CAAC;AACvF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,GAAW,EAAU,EAAE;IACxD,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,QAA8C,EAAU,EAAE;IACxF,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;AAC3D,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAA2C,CAAC,EAC9E,YAAY,EACZ,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,SAAS,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,oBAAoB,CAAC,YAAY,CAAC,CAAC;IACpD,OAAO,CACL,8BAAM,SAAS,EAAC,sBAAsB,IACnC,QAAQ,CAAC,CAAC,CAAC,CACV,6BACE,SAAS,EAAE,UAAU,CACnB,2BAA2B,EAC3B,QAAQ,IAAI,8BAA8B,QAAQ,EAAE,CACrD,EACD,GAAG,EAAE,QAAQ,GACb,CACH,CAAC,CAAC,CAAC,CACF,8BACE,SAAS,EAAE,UAAU,CACnB,4BAA4B,EAC5B,QAAQ,IAAI,+BAA+B,QAAQ,EAAE,EACrD,kBAAkB,CAAC,SAAS,CAAC,CAC9B,GACD,CACH,CACI,CACR,CAAC;AACJ,CAAC,CAAC;AACF,uBAAuB,CAAC,WAAW,GAAG,yBAAyB,CAAC;AAOhE,MAAM,CAAC,MAAM,eAAe,GAAmC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;IACnF,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAC1C,MAAM,YAAY,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACrD,OAAO,CACL,8BAAM,SAAS,EAAC,sBAAsB,IACnC,YAAY,CAAC,CAAC,CAAC,CACd,6BACE,SAAS,EAAE,UAAU,CACnB,2BAA2B,EAC3B,QAAQ,IAAI,8BAA8B,QAAQ,EAAE,CACrD,EACD,GAAG,EAAE,YAAY,GACjB,CACH,CAAC,CAAC,CAAC,CACF,8BACE,SAAS,EAAE,UAAU,CACnB,4BAA4B,EAC5B,QAAQ,IAAI,+BAA+B,QAAQ,EAAE,EACrD,kBAAkB,CAAC,SAAS,CAAC,CAC9B,GACD,CACH,CACI,CACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\n\nimport { K8sResourceKind, TemplateKind, PartialObjectMetadata } from '../../module/k8s';\nimport * as threeScaleImg from '../../imgs/logos/3scale.svg';\nimport * as aerogearImg from '../../imgs/logos/aerogear.svg';\nimport * as amqImg from '../../imgs/logos/amq.svg';\nimport * as angularjsImg from '../../imgs/logos/angularjs.svg';\nimport * as ansibleImg from '../../imgs/logos/ansible.svg';\nimport * as apacheImg from '../../imgs/logos/apache.svg';\nimport * as beakerImg from '../../imgs/logos/beaker.svg';\nimport * as camelImg from '../../imgs/logos/camel.svg';\nimport * as capedwarfImg from '../../imgs/logos/capedwarf.svg';\nimport * as catalogImg from '../../imgs/logos/catalog-icon.svg';\nimport * as cassandraImg from '../../imgs/logos/cassandra.svg';\nimport * as clojureImg from '../../imgs/logos/clojure.svg';\nimport * as codeigniterImg from '../../imgs/logos/codeigniter.svg';\nimport * as cordovaImg from '../../imgs/logos/cordova.png';\nimport * as datagridImg from '../../imgs/logos/datagrid.svg';\nimport * as datavirtImg from '../../imgs/logos/datavirt.svg';\nimport * as debianImg from '../../imgs/logos/debian.svg';\nimport * as decisionserverImg from '../../imgs/logos/decisionserver.svg';\nimport * as djangoImg from '../../imgs/logos/django.svg';\nimport * as dotnetImg from '../../imgs/logos/dotnet.svg';\nimport * as drupalImg from '../../imgs/logos/drupal.svg';\nimport * as eapImg from '../../imgs/logos/eap.svg';\nimport * as elasticImg from '../../imgs/logos/elastic.svg';\nimport * as erlangImg from '../../imgs/logos/erlang.svg';\nimport * as fedoraImg from '../../imgs/logos/fedora.svg';\nimport * as freebsdImg from '../../imgs/logos/freebsd.svg';\nimport * as gitImg from '../../imgs/logos/git.svg';\nimport * as githubImg from '../../imgs/logos/github.svg';\nimport * as gitlabImg from '../../imgs/logos/gitlab.svg';\nimport * as glassfishImg from '../../imgs/logos/glassfish.svg';\nimport * as goLangImg from '../../imgs/logos/golang.svg';\nimport * as grailsImg from '../../imgs/logos/grails.svg';\nimport * as hadoopImg from '../../imgs/logos/hadoop.svg';\nimport * as haproxyImg from '../../imgs/logos/haproxy.svg';\nimport * as helmImg from '../../imgs/logos/helm.svg';\nimport * as infinispanImg from '../../imgs/logos/infinispan.svg';\nimport * as jbossImg from '../../imgs/logos/jboss.svg';\nimport * as jenkinsImg from '../../imgs/logos/jenkins.svg';\nimport * as jettyImg from '../../imgs/logos/jetty.svg';\nimport * as joomlaImg from '../../imgs/logos/joomla.svg';\nimport * as jrubyImg from '../../imgs/logos/jruby.svg';\nimport * as jsImg from '../../imgs/logos/js.svg';\nimport * as knativeImg from '../../imgs/logos/knative.svg';\nimport * as kubevirtImg from '../../imgs/logos/kubevirt.svg';\nimport * as laravelImg from '../../imgs/logos/laravel.svg';\nimport * as loadBalancerImg from '../../imgs/logos/load-balancer.svg';\nimport * as mariadbImg from '../../imgs/logos/mariadb.svg';\nimport * as mediawikiImg from '../../imgs/logos/mediawiki.svg';\nimport * as memcachedImg from '../../imgs/logos/memcached.svg';\nimport * as mongodbImg from '../../imgs/logos/mongodb.svg';\nimport * as mssqlImg from '../../imgs/logos/mssql.svg';\nimport * as mysqlDatabaseImg from '../../imgs/logos/mysql-database.svg';\nimport * as nginxImg from '../../imgs/logos/nginx.svg';\nimport * as nodejsImg from '../../imgs/logos/nodejs.svg';\nimport * as openjdkImg from '../../imgs/logos/openjdk.svg';\nimport * as redhatImg from '../../imgs/logos/redhat.svg';\nimport * as openlibertyImg from '../../imgs/logos/openliberty.svg';\nimport * as openshiftImg from '../../imgs/logos/openshift.svg';\nimport * as openstackImg from '../../imgs/logos/openstack.svg';\nimport * as otherLinuxImg from '../../imgs/logos/other-linux.svg';\nimport * as otherUnknownImg from '../../imgs/logos/other-unknown.svg';\nimport * as perlImg from '../../imgs/logos/perl.svg';\nimport * as phalconImg from '../../imgs/logos/phalcon.svg';\nimport * as phpImg from '../../imgs/logos/php.svg';\nimport * as playImg from '../../imgs/logos/play.svg';\nimport * as postgresqlImg from '../../imgs/logos/postgresql.svg';\nimport * as processserverImg from '../../imgs/logos/processserver.svg';\nimport * as pythonImg from '../../imgs/logos/python.svg';\nimport * as quarkusImg from '../../imgs/logos/quarkus.svg';\nimport * as rabbitmqImg from '../../imgs/logos/rabbitmq.svg';\nimport * as railsImg from '../../imgs/logos/rails.svg';\nimport * as redisImg from '../../imgs/logos/redis.svg';\nimport * as rhIntegrationImg from '../../imgs/logos/rh-integration.svg';\nimport * as rhSpringBoot from '../../imgs/logos/rh-spring-boot.svg';\nimport * as rhTomcatImg from '../../imgs/logos/rh-tomcat.svg';\nimport * as rubyImg from '../../imgs/logos/ruby.svg';\nimport * as scalaImg from '../../imgs/logos/scala.svg';\nimport * as shadowmanImg from '../../imgs/logos/shadowman.svg';\nimport * as springImg from '../../imgs/logos/spring.svg';\nimport * as springBootImg from '../../imgs/logos/spring-boot.svg';\nimport * as ssoImg from '../../imgs/logos/sso.svg';\nimport * as stackoverflowImg from '../../imgs/logos/stackoverflow.svg';\nimport * as suseImg from '../../imgs/logos/suse.svg';\nimport * as symfonyImg from '../../imgs/logos/symfony.svg';\nimport * as tomcatImg from '../../imgs/logos/tomcat.svg';\nimport * as ubuntuImg from '../../imgs/logos/ubuntu.svg';\nimport * as vertxImg from '../../imgs/logos/vertx.svg';\nimport * as wildflyImg from '../../imgs/logos/wildfly.svg';\nimport * as windowsImg from '../../imgs/logos/windows.svg';\nimport * as wordpressImg from '../../imgs/logos/wordpress.svg';\nimport * as xamarinImg from '../../imgs/logos/xamarin.svg';\nimport * as zendImg from '../../imgs/logos/zend.svg';\n\nconst logos = new Map()\n  .set('icon-3scale', threeScaleImg)\n  .set('icon-aerogear', aerogearImg)\n  .set('icon-amq', amqImg)\n  .set('icon-angularjs', angularjsImg)\n  .set('icon-ansible', ansibleImg)\n  .set('icon-apache', apacheImg)\n  .set('icon-beaker', beakerImg)\n  .set('icon-camel', camelImg)\n  .set('icon-capedwarf', capedwarfImg)\n  .set('icon-catalog', catalogImg)\n  .set('icon-cassandra', cassandraImg)\n  .set('icon-clojure', clojureImg)\n  .set('icon-codeigniter', codeigniterImg)\n  .set('icon-cordova', cordovaImg)\n  .set('icon-datagrid', datagridImg)\n  .set('icon-datavirt', datavirtImg)\n  .set('icon-debian', debianImg)\n  .set('icon-decisionserver', decisionserverImg)\n  .set('icon-django', djangoImg)\n  .set('icon-dotnet', dotnetImg)\n  .set('icon-drupal', drupalImg)\n  .set('icon-eap', eapImg)\n  .set('icon-elastic', elasticImg)\n  .set('icon-erlang', erlangImg)\n  .set('icon-fedora', fedoraImg)\n  .set('icon-freebsd', freebsdImg)\n  .set('icon-git', gitImg)\n  .set('icon-github', githubImg)\n  .set('icon-gitlab', gitlabImg)\n  .set('icon-glassfish', glassfishImg)\n  .set('icon-go-gopher', goLangImg)\n  .set('icon-golang', goLangImg)\n  .set('icon-grails', grailsImg)\n  .set('icon-hadoop', hadoopImg)\n  .set('icon-haproxy', haproxyImg)\n  .set('icon-helm', helmImg)\n  .set('icon-infinispan', infinispanImg)\n  .set('icon-jboss', jbossImg)\n  .set('icon-jenkins', jenkinsImg)\n  .set('icon-jetty', jettyImg)\n  .set('icon-joomla', joomlaImg)\n  .set('icon-jruby', jrubyImg)\n  .set('icon-js', jsImg)\n  .set('icon-knative', knativeImg)\n  .set('icon-kubevirt', kubevirtImg)\n  .set('icon-laravel', laravelImg)\n  .set('icon-load-balancer', loadBalancerImg)\n  .set('icon-mariadb', mariadbImg)\n  .set('icon-mediawiki', mediawikiImg)\n  .set('icon-memcached', memcachedImg)\n  .set('icon-mongodb', mongodbImg)\n  .set('icon-mssql', mssqlImg)\n  .set('icon-mysql-database', mysqlDatabaseImg)\n  .set('icon-nginx', nginxImg)\n  .set('icon-nodejs', nodejsImg)\n  .set('icon-openjdk', openjdkImg)\n  .set('icon-openliberty', openlibertyImg)\n  .set('icon-openshift', openshiftImg)\n  .set('icon-openstack', openstackImg)\n  .set('icon-other-linux', otherLinuxImg)\n  .set('icon-other-unknown', otherUnknownImg)\n  .set('icon-perl', perlImg)\n  .set('icon-phalcon', phalconImg)\n  .set('icon-php', phpImg)\n  .set('icon-play', playImg)\n  .set('icon-postgresql', postgresqlImg)\n  .set('icon-processserver', processserverImg)\n  .set('icon-python', pythonImg)\n  .set('icon-quarkus', quarkusImg)\n  .set('icon-rabbitmq', rabbitmqImg)\n  .set('icon-rails', railsImg)\n  .set('icon-redis', redisImg)\n  .set('icon-rh-integration', rhIntegrationImg)\n  .set('icon-rh-spring-boot', rhSpringBoot)\n  .set('icon-java', openjdkImg)\n  // Use the upstream icon.\n  .set('icon-redhat', redhatImg)\n  .set('icon-rh-openjdk', openjdkImg)\n  .set('icon-rh-tomcat', rhTomcatImg)\n  .set('icon-ruby', rubyImg)\n  .set('icon-scala', scalaImg)\n  .set('icon-shadowman', shadowmanImg)\n  .set('icon-spring', springImg)\n  .set('icon-spring-boot', springBootImg)\n  .set('icon-sso', ssoImg)\n  .set('icon-stackoverflow', stackoverflowImg)\n  .set('icon-suse', suseImg)\n  .set('icon-symfony', symfonyImg)\n  .set('icon-tomcat', tomcatImg)\n  .set('icon-ubuntu', ubuntuImg)\n  .set('icon-vertx', vertxImg)\n  .set('icon-wildfly', wildflyImg)\n  .set('icon-windows', windowsImg)\n  .set('icon-wordpress', wordpressImg)\n  .set('icon-xamarin', xamarinImg)\n  .set('icon-zend', zendImg);\n\nexport const normalizeIconClass = (iconClass: string): string => {\n  return _.startsWith(iconClass, 'icon-') ? `font-icon ${iconClass}` : iconClass;\n};\n\nexport const getImageForIconClass = (iconClass: string): string => {\n  return logos.get(iconClass);\n};\n\nexport const getServiceClassIcon = (serviceClass: K8sResourceKind): string => {\n  return _.get(\n    serviceClass,\n    ['spec', 'externalMetadata', 'console.openshift.io/iconClass'],\n    logos.get('icon-catalog'),\n  );\n};\n\nexport const getServiceClassImage = (serviceClass: K8sResourceKind): string => {\n  const iconClass = getServiceClassIcon(serviceClass);\n  const iconClassImg = getImageForIconClass(iconClass);\n  return _.get(serviceClass, ['spec', 'externalMetadata', 'imageUrl']) || iconClassImg;\n};\n\nexport const getImageStreamIcon = (tag: string): string => {\n  return _.get(tag, 'annotations.iconClass');\n};\n\nexport const getTemplateIcon = (template: TemplateKind | PartialObjectMetadata): string => {\n  return _.get(template, 'metadata.annotations.iconClass');\n};\n\nexport const ClusterServiceClassIcon: React.FC<ClusterServiceClassIconProps> = ({\n  serviceClass,\n  iconSize,\n}) => {\n  const iconClass = getServiceClassIcon(serviceClass);\n  const imageUrl = getServiceClassImage(serviceClass);\n  return (\n    <span className=\"co-catalog-item-icon\">\n      {imageUrl ? (\n        <img\n          className={classNames(\n            'co-catalog-item-icon__img',\n            iconSize && `co-catalog-item-icon__img--${iconSize}`,\n          )}\n          src={imageUrl}\n        />\n      ) : (\n        <span\n          className={classNames(\n            'co-catalog-item-icon__icon',\n            iconSize && `co-catalog-item-icon__icon--${iconSize}`,\n            normalizeIconClass(iconClass),\n          )}\n        />\n      )}\n    </span>\n  );\n};\nClusterServiceClassIcon.displayName = 'ClusterServiceClassIcon';\n\nexport type ClusterServiceClassIconProps = {\n  serviceClass: K8sResourceKind;\n  iconSize?: string;\n};\n\nexport const ImageStreamIcon: React.FC<ImageStreamIconProps> = ({ tag, iconSize }) => {\n  const iconClass = getImageStreamIcon(tag);\n  const iconClassImg = getImageForIconClass(iconClass);\n  return (\n    <span className=\"co-catalog-item-icon\">\n      {iconClassImg ? (\n        <img\n          className={classNames(\n            'co-catalog-item-icon__img',\n            iconSize && `co-catalog-item-icon__img--${iconSize}`,\n          )}\n          src={iconClassImg}\n        />\n      ) : (\n        <span\n          className={classNames(\n            'co-catalog-item-icon__icon',\n            iconSize && `co-catalog-item-icon__icon--${iconSize}`,\n            normalizeIconClass(iconClass),\n          )}\n        />\n      )}\n    </span>\n  );\n};\n\nexport type ImageStreamIconProps = {\n  tag: any;\n  iconSize?: string;\n};\n"]}]}