{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsPage.tsx","mtime":1616735742370},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { navFactory } from '@console/internal/components/utils';\nimport { PodsPage } from '@console/internal/components/pod';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { nodeStatus } from '../../status/node';\nimport NodeDetails from './NodeDetails';\nimport NodeTerminal from './NodeTerminal';\nimport { menuActions } from './menu-actions';\nimport NodeDashboard from './node-dashboard/NodeDashboard';\nconst { editYaml, events, pods } = navFactory;\nconst pages = [\n    {\n        href: '',\n        name: 'Overview',\n        component: NodeDashboard,\n    },\n    {\n        href: 'details',\n        name: 'Details',\n        component: NodeDetails,\n    },\n    editYaml(),\n    pods(({ obj }) => (React.createElement(PodsPage, { showTitle: false, fieldSelector: `spec.nodeName=${obj.metadata.name}` }))),\n    events(ResourceEventStream),\n    {\n        href: 'terminal',\n        name: 'Terminal',\n        component: NodeTerminal,\n    },\n];\nconst NodeDetailsPage = (props) => (React.createElement(DetailsPage, Object.assign({}, props, { getResourceStatus: nodeStatus, menuActions: menuActions, pages: pages })));\nexport default NodeDetailsPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-app/src/components/nodes/NodeDetailsPage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,sCAAsC,CAAC;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,aAAa,MAAM,gCAAgC,CAAC;AAE3D,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC;AAE9C,MAAM,KAAK,GAAG;IACZ;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,aAAa;KACzB;IACD;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,WAAW;KACvB;IACD,QAAQ,EAAE;IACV,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAChB,oBAAC,QAAQ,IAAC,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,iBAAiB,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAI,CACpF,CAAC;IACF,MAAM,CAAC,mBAAmB,CAAC;IAC3B;QACE,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,YAAY;KACxB;CACF,CAAC;AACF,MAAM,eAAe,GAAuD,CAAC,KAAK,EAAE,EAAE,CAAC,CACrF,oBAAC,WAAW,oBAAK,KAAK,IAAE,iBAAiB,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,IAAI,CAClG,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { navFactory } from '@console/internal/components/utils';\nimport { PodsPage } from '@console/internal/components/pod';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { nodeStatus } from '../../status/node';\nimport NodeDetails from './NodeDetails';\nimport NodeTerminal from './NodeTerminal';\nimport { menuActions } from './menu-actions';\nimport NodeDashboard from './node-dashboard/NodeDashboard';\n\nconst { editYaml, events, pods } = navFactory;\n\nconst pages = [\n  {\n    href: '',\n    name: 'Overview',\n    component: NodeDashboard,\n  },\n  {\n    href: 'details',\n    name: 'Details',\n    component: NodeDetails,\n  },\n  editYaml(),\n  pods(({ obj }) => (\n    <PodsPage showTitle={false} fieldSelector={`spec.nodeName=${obj.metadata.name}`} />\n  )),\n  events(ResourceEventStream),\n  {\n    href: 'terminal',\n    name: 'Terminal',\n    component: NodeTerminal,\n  },\n];\nconst NodeDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => (\n  <DetailsPage {...props} getResourceStatus={nodeStatus} menuActions={menuActions} pages={pages} />\n);\n\nexport default NodeDetailsPage;\n"]}]}