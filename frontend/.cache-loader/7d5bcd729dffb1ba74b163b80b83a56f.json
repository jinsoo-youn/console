{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/HelmRelease.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/HelmRelease.tsx","mtime":1616735742400},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { observer, } from '@console/topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../topology-utils';\nimport HelmReleaseNode from './HelmReleaseNode';\nimport HelmReleaseGroup from './HelmReleaseGroup';\nimport './HelmRelease.scss';\nconst HelmRelease = (props) => {\n    const secretObj = getTopologyResourceObject(props.element.getData());\n    const resourceModel = secretObj ? modelFor(referenceFor(secretObj)) : null;\n    const editAccess = useAccessReview({\n        group: resourceModel === null || resourceModel === void 0 ? void 0 : resourceModel.apiGroup,\n        verb: 'patch',\n        resource: resourceModel === null || resourceModel === void 0 ? void 0 : resourceModel.plural,\n        name: secretObj === null || secretObj === void 0 ? void 0 : secretObj.metadata.name,\n        namespace: secretObj === null || secretObj === void 0 ? void 0 : secretObj.metadata.namespace,\n    });\n    if (props.element.isCollapsed()) {\n        return React.createElement(HelmReleaseNode, Object.assign({ editAccess: editAccess }, props));\n    }\n    return React.createElement(HelmReleaseGroup, Object.assign({ editAccess: editAccess }, props));\n};\nexport default observer(HelmRelease);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/HelmRelease.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/topology/helm/components/HelmRelease.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAEL,QAAQ,GAIT,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AACjE,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAChD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAElD,OAAO,oBAAoB,CAAC;AAQ5B,MAAM,WAAW,GAA+B,CAAC,KAAK,EAAE,EAAE;IACxD,MAAM,SAAS,GAAG,yBAAyB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IACrE,MAAM,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3E,MAAM,UAAU,GAAG,eAAe,CAAC;QACjC,KAAK,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ;QAC9B,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM;QAC/B,IAAI,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAC,IAAI;QAC9B,SAAS,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAC,SAAS;KACzC,CAAC,CAAC;IACH,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;QAC/B,OAAO,oBAAC,eAAe,kBAAC,UAAU,EAAE,UAAU,IAAM,KAAK,EAAI,CAAC;KAC/D;IAED,OAAO,oBAAC,gBAAgB,kBAAC,UAAU,EAAE,UAAU,IAAM,KAAK,EAAI,CAAC;AACjE,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithContextMenuProps,\n} from '@console/topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../topology-utils';\nimport HelmReleaseNode from './HelmReleaseNode';\nimport HelmReleaseGroup from './HelmReleaseGroup';\n\nimport './HelmRelease.scss';\n\nexport type HelmReleaseProps = {\n  element: Node;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDndDropProps;\n\nconst HelmRelease: React.FC<HelmReleaseProps> = (props) => {\n  const secretObj = getTopologyResourceObject(props.element.getData());\n  const resourceModel = secretObj ? modelFor(referenceFor(secretObj)) : null;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: secretObj?.metadata.name,\n    namespace: secretObj?.metadata.namespace,\n  });\n  if (props.element.isCollapsed()) {\n    return <HelmReleaseNode editAccess={editAccess} {...props} />;\n  }\n\n  return <HelmReleaseGroup editAccess={editAccess} {...props} />;\n};\n\nexport default observer(HelmRelease);\n"]}]}