{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgResourceIcon.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgResourceIcon.tsx","mtime":1615298458630},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport { useSize } from '@console/topology';\nimport { modelFor, kindToAbbr } from '@console/internal/module/k8s';\nimport './SvgResourceIcon.scss';\nfunction getKindStringAndAbbreviation(kind) {\n    const kindObj = modelFor(kind);\n    const kindStr = get(kindObj, 'kind', kind);\n    const kindColor = get(kindObj, 'color', undefined);\n    const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n    return { kindStr, kindAbbr, kindColor };\n}\nconst ForwardSvgResourceIcon = ({ kind, x, y, leftJustified }, iconRef) => {\n    const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(kind);\n    const [textSize, textRef] = useSize([]);\n    let rect = null;\n    let paddingX = 0;\n    let paddingY = 0;\n    let width = 0;\n    let height = 0;\n    if (textSize) {\n        ({ height, width } = textSize);\n        paddingX = height / 2;\n        paddingY = height / 14;\n        height += paddingY * 2;\n        rect = (React.createElement(\"rect\", { fill: kindColor, ref: iconRef, x: x - (leftJustified ? 0 : paddingX + width / 2), width: textSize.width + paddingX * 2, y: y - (leftJustified ? 0 : paddingY + textSize.height / 2), height: height, rx: height / 2, ry: height / 2 }));\n    }\n    return (React.createElement(\"g\", { className: cx('odc-resource-icon', {\n            [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n        }) },\n        rect,\n        React.createElement(\"title\", null, kindStr),\n        React.createElement(\"text\", { ref: textRef, x: x + (leftJustified ? paddingX + width / 2 : 0), y: y + (leftJustified ? (paddingY + height) / 2 : 0), textAnchor: \"middle\", dy: \"0.35em\" }, kindAbbr)));\n};\nconst SvgResourceIcon = React.forwardRef(ForwardSvgResourceIcon);\nexport { SvgResourceIcon, getKindStringAndAbbreviation };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgResourceIcon.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/svg/SvgResourceIcon.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport { useSize } from '@console/topology';\nimport { modelFor, kindToAbbr } from '@console/internal/module/k8s';\nimport './SvgResourceIcon.scss';\n\ninterface ResourceIconProps {\n  x: number;\n  y: number;\n  kind: string;\n  leftJustified?: boolean;\n}\n\nfunction getKindStringAndAbbreviation(kind: string) {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n}\n\nconst ForwardSvgResourceIcon: React.FC<ResourceIconProps> = (\n  { kind, x, y, leftJustified },\n  iconRef,\n) => {\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(kind);\n  const [textSize, textRef] = useSize([]);\n\n  let rect = null;\n  let paddingX = 0;\n  let paddingY = 0;\n  let width = 0;\n  let height = 0;\n\n  if (textSize) {\n    ({ height, width } = textSize);\n    paddingX = height / 2;\n    paddingY = height / 14;\n    height += paddingY * 2;\n    rect = (\n      <rect\n        fill={kindColor}\n        ref={iconRef}\n        x={x - (leftJustified ? 0 : paddingX + width / 2)}\n        width={textSize.width + paddingX * 2}\n        y={y - (leftJustified ? 0 : paddingY + textSize.height / 2)}\n        height={height}\n        rx={height / 2}\n        ry={height / 2}\n      />\n    );\n  }\n\n  return (\n    <g\n      className={cx('odc-resource-icon', {\n        [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n      })}\n    >\n      {rect}\n      <title>{kindStr}</title>\n      <text\n        ref={textRef}\n        x={x + (leftJustified ? paddingX + width / 2 : 0)}\n        y={y + (leftJustified ? (paddingY + height) / 2 : 0)}\n        textAnchor=\"middle\"\n        dy=\"0.35em\"\n      >\n        {kindAbbr}\n      </text>\n    </g>\n  );\n};\n\nconst SvgResourceIcon = React.forwardRef(ForwardSvgResourceIcon);\nexport { SvgResourceIcon, getKindStringAndAbbreviation };\n"]}]}