{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/tolerations-modal/toleration-row.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/tolerations-modal/toleration-row.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { GridItem, TextInput, Button, FormSelect, FormSelectOption } from '@patternfly/react-core';\nimport { TOLERATIONS_EFFECTS } from '../shared/consts';\nexport const TolerationRow = ({ label, onChange, onDelete }) => {\n    const { id, key, value, effect } = label;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(GridItem, { span: 4 },\n            React.createElement(TextInput, { id: `toleration-${id}-key-input`, className: \"kv-label__key\", placeholder: \"taint key\", isRequired: true, type: \"text\", value: key, onChange: (newKey) => onChange(Object.assign(Object.assign({}, label), { key: newKey })), \"aria-label\": \"selector key\" })),\n        React.createElement(GridItem, { span: 4 },\n            React.createElement(TextInput, { id: `toleration-${id}-value-input`, className: \"kv-label__value\", placeholder: \"taint value\", isRequired: true, type: \"text\", value: value, onChange: (newValue) => onChange(Object.assign(Object.assign({}, label), { value: newValue })), \"aria-label\": \"selector value\" })),\n        React.createElement(GridItem, { span: 3 },\n            React.createElement(FormSelect, { id: `toleration-${id}-effect-select`, className: \"kv-label__effect\", isRequired: true, value: effect, onChange: (v) => onChange(Object.assign(Object.assign({}, label), { effect: v })), \"aria-label\": \"selector effect\" }, TOLERATIONS_EFFECTS.map((effectOption) => (React.createElement(FormSelectOption, { key: effectOption, value: effectOption, label: effectOption }))))),\n        React.createElement(GridItem, { span: 1 },\n            React.createElement(Button, { id: `toleration-${id}-delete-btn`, onClick: () => onDelete(id), variant: \"plain\" },\n                React.createElement(MinusCircleIcon, null)))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/tolerations-modal/toleration-row.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/scheduling-modals/tolerations-modal/toleration-row.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AACnG,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAGvD,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAsB,EAAE,EAAE;IACjF,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;IACzC,OAAO,CACL;QACE,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,SAAS,IACR,EAAE,EAAE,cAAc,EAAE,YAAY,EAChC,SAAS,EAAC,eAAe,EACzB,WAAW,EAAC,WAAW,EACvB,UAAU,QACV,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,GAAG,EACV,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,iCAAM,KAAK,KAAE,GAAG,EAAE,MAAM,IAAG,gBAC9C,cAAc,GACzB,CACO;QACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,SAAS,IACR,EAAE,EAAE,cAAc,EAAE,cAAc,EAClC,SAAS,EAAC,iBAAiB,EAC3B,WAAW,EAAC,aAAa,EACzB,UAAU,QACV,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,iCAAM,KAAK,KAAE,KAAK,EAAE,QAAQ,IAAG,gBACpD,gBAAgB,GAC3B,CACO;QACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,UAAU,IACT,EAAE,EAAE,cAAc,EAAE,gBAAgB,EACpC,SAAS,EAAC,kBAAkB,EAC5B,UAAU,QACV,KAAK,EAAE,MAAM,EACb,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,iCAAM,KAAK,KAAE,MAAM,EAAE,CAAgB,IAAG,gBACtD,iBAAiB,IAE3B,mBAAmB,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CACzC,oBAAC,gBAAgB,IAAC,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,GAAI,CAClF,CAAC,CACS,CACJ;QACX,oBAAC,QAAQ,IAAC,IAAI,EAAE,CAAC;YACf,oBAAC,MAAM,IAAC,EAAE,EAAE,cAAc,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,EAAC,OAAO;gBACrF,oBAAC,eAAe,OAAG,CACZ,CACA,CACV,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { TaintEffect } from '@console/internal/module/k8s';\nimport { MinusCircleIcon } from '@patternfly/react-icons';\nimport { GridItem, TextInput, Button, FormSelect, FormSelectOption } from '@patternfly/react-core';\nimport { TOLERATIONS_EFFECTS } from '../shared/consts';\nimport { TolerationLabel } from './types';\n\nexport const TolerationRow = ({ label, onChange, onDelete }: TolerationRowProps) => {\n  const { id, key, value, effect } = label;\n  return (\n    <>\n      <GridItem span={4}>\n        <TextInput\n          id={`toleration-${id}-key-input`}\n          className=\"kv-label__key\"\n          placeholder=\"taint key\"\n          isRequired\n          type=\"text\"\n          value={key}\n          onChange={(newKey) => onChange({ ...label, key: newKey })}\n          aria-label=\"selector key\"\n        />\n      </GridItem>\n      <GridItem span={4}>\n        <TextInput\n          id={`toleration-${id}-value-input`}\n          className=\"kv-label__value\"\n          placeholder=\"taint value\"\n          isRequired\n          type=\"text\"\n          value={value}\n          onChange={(newValue) => onChange({ ...label, value: newValue })}\n          aria-label=\"selector value\"\n        />\n      </GridItem>\n      <GridItem span={3}>\n        <FormSelect\n          id={`toleration-${id}-effect-select`}\n          className=\"kv-label__effect\"\n          isRequired\n          value={effect}\n          onChange={(v) => onChange({ ...label, effect: v as TaintEffect })}\n          aria-label=\"selector effect\"\n        >\n          {TOLERATIONS_EFFECTS.map((effectOption) => (\n            <FormSelectOption key={effectOption} value={effectOption} label={effectOption} />\n          ))}\n        </FormSelect>\n      </GridItem>\n      <GridItem span={1}>\n        <Button id={`toleration-${id}-delete-btn`} onClick={() => onDelete(id)} variant=\"plain\">\n          <MinusCircleIcon />\n        </Button>\n      </GridItem>\n    </>\n  );\n};\n\ntype TolerationRowProps = {\n  label: TolerationLabel;\n  onChange: (label: TolerationLabel) => void;\n  onDelete: (id: any) => void;\n};\n"]}]}