{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/maintenance/UnderMaintenancePopoverContent.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/maintenance/UnderMaintenancePopoverContent.tsx","mtime":1615298458670},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { Button } from '@patternfly/react-core';\nimport { getNodeMaintenanceReason, getNodeMaintenanceCreationTimestamp } from '../../selectors';\nimport stopNodeMaintenanceModal from '../modals/StopNodeMaintenanceModal';\nconst UnderMaintenancePopoverContent = ({ nodeMaintenance, }) => {\n    const reason = getNodeMaintenanceReason(nodeMaintenance);\n    const creationTimestamp = getNodeMaintenanceCreationTimestamp(nodeMaintenance);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"p\", null, \"Node is under maintenance. The cluster will automatically rebuild node's data 30 minutes after entering maintenance.\"),\n        React.createElement(\"dl\", null,\n            React.createElement(\"dt\", null, \"Maintenance reason:\"),\n            React.createElement(\"dd\", null, reason),\n            React.createElement(\"dt\", null, \"Requested:\"),\n            React.createElement(\"dd\", null,\n                React.createElement(Timestamp, { timestamp: creationTimestamp }))),\n        React.createElement(\"br\", null),\n        React.createElement(Button, { variant: \"link\", onClick: () => stopNodeMaintenanceModal(nodeMaintenance), isInline: true }, \"Stop maintenance\")));\n};\nexport default UnderMaintenancePopoverContent;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/maintenance/UnderMaintenancePopoverContent.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/components/maintenance/UnderMaintenancePopoverContent.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,wBAAwB,EAAE,mCAAmC,EAAE,MAAM,iBAAiB,CAAC;AAChG,OAAO,wBAAwB,MAAM,oCAAoC,CAAC;AAM1E,MAAM,8BAA8B,GAAkD,CAAC,EACrF,eAAe,GAChB,EAAE,EAAE;IACH,MAAM,MAAM,GAAG,wBAAwB,CAAC,eAAe,CAAC,CAAC;IACzD,MAAM,iBAAiB,GAAG,mCAAmC,CAAC,eAAe,CAAC,CAAC;IAE/E,OAAO,CACL;QACE,sJAGI;QACJ;YACE,sDAA4B;YAC5B,gCAAK,MAAM,CAAM;YACjB,6CAAmB;YACnB;gBACE,oBAAC,SAAS,IAAC,SAAS,EAAE,iBAAiB,GAAI,CACxC,CACF;QACL,+BAAM;QACN,oBAAC,MAAM,IAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAE,QAAQ,6BAEhF,CACR,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,8BAA8B,CAAC","sourcesContent":["import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { Button } from '@patternfly/react-core';\nimport { getNodeMaintenanceReason, getNodeMaintenanceCreationTimestamp } from '../../selectors';\nimport stopNodeMaintenanceModal from '../modals/StopNodeMaintenanceModal';\n\ntype UnderMaintenancePopoverContentProps = {\n  nodeMaintenance: K8sResourceKind;\n};\n\nconst UnderMaintenancePopoverContent: React.FC<UnderMaintenancePopoverContentProps> = ({\n  nodeMaintenance,\n}) => {\n  const reason = getNodeMaintenanceReason(nodeMaintenance);\n  const creationTimestamp = getNodeMaintenanceCreationTimestamp(nodeMaintenance);\n\n  return (\n    <>\n      <p>\n        Node is under maintenance. The cluster will automatically rebuild node&apos;s data 30\n        minutes after entering maintenance.\n      </p>\n      <dl>\n        <dt>Maintenance reason:</dt>\n        <dd>{reason}</dd>\n        <dt>Requested:</dt>\n        <dd>\n          <Timestamp timestamp={creationTimestamp} />\n        </dd>\n      </dl>\n      <br />\n      <Button variant=\"link\" onClick={() => stopNodeMaintenanceModal(nodeMaintenance)} isInline>\n        Stop maintenance\n      </Button>\n    </>\n  );\n};\n\nexport default UnderMaintenancePopoverContent;\n"]}]}