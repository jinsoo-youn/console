{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/volumes-table.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/volumes-table.tsx","mtime":1615298458750},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { asAccessReview, EmptyBox, Kebab, ResourceIcon, SectionHeading, VolumeType } from './utils';\nimport { Table } from './factory';\nimport { sortable } from '@patternfly/react-table';\nimport { removeVolumeModal } from './modals';\nimport { connectToModel } from '../kinds';\nimport { useTranslation } from 'react-i18next';\nconst removeVolume = (kind, obj, volume) => {\n    const { t } = useTranslation();\n    return {\n        label: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_8'),\n        callback: () => removeVolumeModal({\n            kind,\n            resource: obj,\n            volume,\n        }),\n        accessReview: asAccessReview(kind, obj, 'patch'),\n    };\n};\nconst menuActions = [removeVolume];\nconst getPodTemplate = (resource) => {\n    return resource.kind === 'Pod' ? resource : resource.spec.template;\n};\nconst anyContainerWithVolumeMounts = (containers) => {\n    return !!_.findKey(containers, 'volumeMounts');\n};\nconst getRowVolumeData = (resource) => {\n    const pod = getPodTemplate(resource);\n    if (_.isEmpty(pod.spec.volumes) && !anyContainerWithVolumeMounts(pod.spec.containers)) {\n        return [];\n    }\n    const data = [];\n    const volumes = (pod.spec.volumes || []).reduce((p, v) => {\n        p[v.name] = v;\n        return p;\n    }, {});\n    _.forEach(pod.spec.containers, (c) => {\n        _.forEach(c.volumeMounts, (v) => {\n            data.push({\n                name: v.name,\n                readOnly: !!v.readOnly,\n                volumeDetail: volumes[v.name],\n                container: c.name,\n                mountPath: v.mountPath,\n                subPath: v.subPath,\n                resource,\n            });\n        });\n    });\n    return data;\n};\nconst ContainerLink = ({ name, pod }) => (React.createElement(\"span\", { className: \"co-resource-item co-resource-item--inline\" },\n    React.createElement(ResourceIcon, { kind: \"Container\" }),\n    React.createElement(Link, { to: `/k8s/ns/${pod.metadata.namespace}/pods/${pod.metadata.name}/containers/${name}` }, name)));\nContainerLink.displayName = 'ContainerLink';\nconst volumeRowColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-5'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-7'), classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\nconst VolumesTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_2'),\n            sortField: 'name',\n            transforms: [sortable],\n            props: { className: volumeRowColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_3'),\n            sortField: 'mountPath',\n            transforms: [sortable],\n            props: { className: volumeRowColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_4'),\n            sortField: 'subPath',\n            transforms: [sortable],\n            props: { className: volumeRowColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_5'),\n            props: { className: volumeRowColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_6'),\n            sortField: 'readOnly',\n            transforms: [sortable],\n            props: { className: volumeRowColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_7'),\n            sortField: 'container',\n            transforms: [sortable],\n            props: { className: volumeRowColumnClasses[5] },\n        },\n        {\n            title: '',\n            props: { className: volumeRowColumnClasses[6] },\n        },\n    ];\n};\nVolumesTableHeader.displayName = 'VolumesTableHeader';\nconst VolumesTableRows = ({ componentProps: { data } }) => {\n    return _.map(data, (volume) => {\n        const { container, mountPath, name, readOnly, resource, subPath, volumeDetail } = volume;\n        const pod = getPodTemplate(resource);\n        return [\n            {\n                title: name,\n                props: {\n                    className: volumeRowColumnClasses[0],\n                    'data-test-volume-name-for': name,\n                },\n            },\n            {\n                title: mountPath,\n                props: {\n                    classname: volumeRowColumnClasses[1],\n                    'data-test-mount-path-for': name,\n                },\n            },\n            {\n                title: subPath || React.createElement(\"span\", { className: \"text-muted\" }, \"No subpath\"),\n                props: {\n                    classname: volumeRowColumnClasses[2],\n                },\n            },\n            {\n                title: React.createElement(VolumeType, { volume: volumeDetail, namespace: resource.metadata.namespace }),\n                props: {\n                    classname: volumeRowColumnClasses[3],\n                },\n            },\n            {\n                title: readOnly ? 'Read-only' : 'Read/Write',\n                props: {\n                    classname: volumeRowColumnClasses[4],\n                },\n            },\n            {\n                title: _.get(pod, 'kind') === 'Pod' ? React.createElement(ContainerLink, { name: container, pod: pod }) : container,\n                props: {\n                    classname: volumeRowColumnClasses[5],\n                },\n            },\n            {\n                title: React.createElement(VolumeKebab, { actions: menuActions, kind: resource.kind, resource: resource, rowVolumeData: volume }),\n                props: {\n                    classname: volumeRowColumnClasses[6],\n                },\n            },\n        ];\n    });\n};\nexport const VolumesTable = props => {\n    const { t } = useTranslation();\n    const { resource } = props, tableProps = __rest(props, [\"resource\"]);\n    const data = getRowVolumeData(resource);\n    const pod = getPodTemplate(resource);\n    return (React.createElement(React.Fragment, null,\n        props.heading && React.createElement(SectionHeading, { text: props.heading }),\n        _.isEmpty(pod.spec.volumes) && !anyContainerWithVolumeMounts(pod.spec.containers) ? React.createElement(EmptyBox, { label: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1') }) : React.createElement(Table, Object.assign({}, tableProps, { \"aria-label\": \"Volumes\", loaded: true, label: props.heading, data: data, Header: VolumesTableHeader.bind(null, t), Rows: VolumesTableRows, virtualize: false }))));\n};\nVolumesTable.displayName = 'VolumesTable';\nconst VolumeKebab = connectToModel((props) => {\n    const { actions, kindObj, resource, isDisabled, rowVolumeData } = props;\n    if (!kindObj || kindObj.kind === 'Pod') {\n        return null;\n    }\n    const options = actions.map(b => b(kindObj, resource, rowVolumeData));\n    return React.createElement(Kebab, { options: options, isDisabled: isDisabled !== undefined ? isDisabled : _.get(resource.metadata, 'deletionTimestamp') });\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/volumes-table.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/volumes-table.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\n\nimport { ContainerSpec, K8sKind, K8sResourceKind, K8sResourceKindReference, PodKind, PodTemplate, Volume, VolumeMount } from '../module/k8s';\nimport { asAccessReview, EmptyBox, Kebab, KebabOption, ResourceIcon, SectionHeading, VolumeType } from './utils';\nimport { Table } from './factory';\nimport { sortable } from '@patternfly/react-table';\nimport { removeVolumeModal } from './modals';\nimport { connectToModel } from '../kinds';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nconst removeVolume = (kind: K8sKind, obj: K8sResourceKind, volume: RowVolumeData): KebabOption => {\n  const { t } = useTranslation();\n  return {\n    label: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_8'),\n    callback: () =>\n      removeVolumeModal({\n        kind,\n        resource: obj,\n        volume,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  };\n};\n\nconst menuActions = [removeVolume];\n\nconst getPodTemplate = (resource: K8sResourceKind): PodTemplate => {\n  return resource.kind === 'Pod' ? (resource as PodKind) : resource.spec.template;\n};\n\nconst anyContainerWithVolumeMounts = (containers: ContainerSpec[]) => {\n  return !!_.findKey(containers, 'volumeMounts');\n};\n\nconst getRowVolumeData = (resource: K8sResourceKind): RowVolumeData[] => {\n  const pod: PodTemplate = getPodTemplate(resource);\n  if (_.isEmpty(pod.spec.volumes) && !anyContainerWithVolumeMounts(pod.spec.containers)) {\n    return [];\n  }\n\n  const data: RowVolumeData[] = [];\n  const volumes = (pod.spec.volumes || []).reduce((p, v: Volume) => {\n    p[v.name] = v;\n    return p;\n  }, {});\n\n  _.forEach(pod.spec.containers, (c: ContainerSpec) => {\n    _.forEach(c.volumeMounts, (v: VolumeMount) => {\n      data.push({\n        name: v.name,\n        readOnly: !!v.readOnly,\n        volumeDetail: volumes[v.name],\n        container: c.name,\n        mountPath: v.mountPath,\n        subPath: v.subPath,\n        resource,\n      });\n    });\n  });\n  return data;\n};\n\nconst ContainerLink: React.FC<ContainerLinkProps> = ({ name, pod }) => (\n  <span className=\"co-resource-item co-resource-item--inline\">\n    <ResourceIcon kind=\"Container\" />\n    <Link to={`/k8s/ns/${pod.metadata.namespace}/pods/${pod.metadata.name}/containers/${name}`}>{name}</Link>\n  </span>\n);\nContainerLink.displayName = 'ContainerLink';\n\nconst volumeRowColumnClasses = [classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-5'), classNames('col-lg-2', 'col-md-3', 'col-sm-4', 'col-xs-7'), classNames('col-lg-2', 'col-md-2', 'col-sm-4', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'col-md-2', 'hidden-sm', 'hidden-xs'), classNames('col-lg-2', 'hidden-md', 'hidden-sm', 'hidden-xs'), Kebab.columnClass];\n\nconst VolumesTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_2'),\n      sortField: 'name',\n      transforms: [sortable],\n      props: { className: volumeRowColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_3'),\n      sortField: 'mountPath',\n      transforms: [sortable],\n      props: { className: volumeRowColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_4'),\n      sortField: 'subPath',\n      transforms: [sortable],\n      props: { className: volumeRowColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_5'),\n      props: { className: volumeRowColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_6'),\n      sortField: 'readOnly',\n      transforms: [sortable],\n      props: { className: volumeRowColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_7'),\n      sortField: 'container',\n      transforms: [sortable],\n      props: { className: volumeRowColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: volumeRowColumnClasses[6] },\n    },\n  ];\n};\nVolumesTableHeader.displayName = 'VolumesTableHeader';\n\nconst VolumesTableRows = ({ componentProps: { data } }) => {\n  return _.map(data, (volume: RowVolumeData) => {\n    const { container, mountPath, name, readOnly, resource, subPath, volumeDetail } = volume;\n    const pod = getPodTemplate(resource);\n    return [\n      {\n        title: name,\n        props: {\n          className: volumeRowColumnClasses[0],\n          'data-test-volume-name-for': name,\n        },\n      },\n      {\n        title: mountPath,\n        props: {\n          classname: volumeRowColumnClasses[1],\n          'data-test-mount-path-for': name,\n        },\n      },\n      {\n        title: subPath || <span className=\"text-muted\">No subpath</span>,\n        props: {\n          classname: volumeRowColumnClasses[2],\n        },\n      },\n      {\n        title: <VolumeType volume={volumeDetail} namespace={resource.metadata.namespace} />,\n        props: {\n          classname: volumeRowColumnClasses[3],\n        },\n      },\n      {\n        title: readOnly ? 'Read-only' : 'Read/Write',\n        props: {\n          classname: volumeRowColumnClasses[4],\n        },\n      },\n      {\n        title: _.get(pod, 'kind') === 'Pod' ? <ContainerLink name={container} pod={pod as PodKind} /> : container,\n        props: {\n          classname: volumeRowColumnClasses[5],\n        },\n      },\n      {\n        title: <VolumeKebab actions={menuActions} kind={resource.kind} resource={resource} rowVolumeData={volume} />,\n        props: {\n          classname: volumeRowColumnClasses[6],\n        },\n      },\n    ];\n  });\n};\n\nexport const VolumesTable = props => {\n  const { t } = useTranslation();\n  const { resource, ...tableProps } = props;\n  const data: RowVolumeData[] = getRowVolumeData(resource);\n  const pod: PodTemplate = getPodTemplate(resource);\n  return (\n    <>\n      {props.heading && <SectionHeading text={props.heading} />}\n      {_.isEmpty(pod.spec.volumes) && !anyContainerWithVolumeMounts(pod.spec.containers) ? <EmptyBox label={t('COMMON:MSG_DETAILS_TABDETAILS_VOLUMES_TABLEHEADER_1')} /> : <Table {...tableProps} aria-label=\"Volumes\" loaded={true} label={props.heading} data={data} Header={VolumesTableHeader.bind(null, t)} Rows={VolumesTableRows} virtualize={false} />}\n    </>\n  );\n};\n\nVolumesTable.displayName = 'VolumesTable';\n\nconst VolumeKebab = connectToModel((props: VolumeKebabProps) => {\n  const { actions, kindObj, resource, isDisabled, rowVolumeData } = props;\n  if (!kindObj || kindObj.kind === 'Pod') {\n    return null;\n  }\n  const options = actions.map(b => b(kindObj, resource, rowVolumeData));\n  return <Kebab options={options} isDisabled={isDisabled !== undefined ? isDisabled : _.get(resource.metadata, 'deletionTimestamp')} />;\n});\n\ntype VolumeKebabAction = (kind: K8sKind, obj: K8sResourceKind, rowVolumeData: RowVolumeData) => KebabOption;\ntype VolumeKebabProps = {\n  kindObj: K8sKind;\n  actions: VolumeKebabAction[];\n  kind: K8sResourceKindReference;\n  resource: K8sResourceKind;\n  isDisabled?: boolean;\n  rowVolumeData: RowVolumeData;\n};\n\nexport type RowVolumeData = {\n  name: string;\n  readOnly: boolean;\n  volumeDetail: Volume;\n  container: string;\n  mountPath: string;\n  subPath?: string;\n  resource: K8sResourceKind;\n};\n\ntype ContainerLinkProps = {\n  pod: PodKind;\n  name: string;\n};\n"]}]}