{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/template.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/template.ts","mtime":1615298458760},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nexport const getTemplateInstanceStatus = (instance) => {\n    const conditions = _.get(instance, 'status.conditions');\n    const failed = _.some(conditions, { type: 'InstantiateFailure', status: 'True' });\n    if (failed) {\n        return 'Failed';\n    }\n    const ready = _.some(conditions, { type: 'Ready', status: 'True' });\n    return ready ? 'Ready' : 'Not Ready';\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/template.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/module/k8s/template.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAI/B,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,QAA8B,EAAE,EAAE;IAC1E,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IACxD,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAClF,IAAI,MAAM,EAAE;QACV,OAAO,QAAQ,CAAC;KACjB;IACD,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACpE,OAAO,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC;AACvC,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash-es';\n\nimport { TemplateInstanceKind } from '../../module/k8s';\n\nexport const getTemplateInstanceStatus = (instance: TemplateInstanceKind) => {\n  const conditions = _.get(instance, 'status.conditions');\n  const failed = _.some(conditions, { type: 'InstantiateFailure', status: 'True' });\n  if (failed) {\n    return 'Failed';\n  }\n  const ready = _.some(conditions, { type: 'Ready', status: 'True' });\n  return ready ? 'Ready' : 'Not Ready';\n};\n"]}]}