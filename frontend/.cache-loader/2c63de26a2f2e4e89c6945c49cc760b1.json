{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/queries.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/queries.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nimport { GraphTypes } from './dashboard/MonitoringDashboardGraph';\nimport { humanizeBinaryBytes, humanizeCpuCores, humanizeDecimalBytesPerSec, } from '@console/internal/components/utils';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nexport const metricsQuery = {\n    PODS_BY_CPU: 'CPU Usage',\n    PODS_BY_MEMORY: 'Memory Usage',\n    PODS_BY_FILESYSTEM: 'Filesystem Usage',\n    PODS_BY_NETWORK_IN: 'Receive Bandwidth',\n    PODS_BY_NETWORK_OUT: 'Transmit Bandwidth',\n    RATE_OF_RECEIVED_PACKETS: 'Rate of Received Packets',\n    RATE_OF_TRANSMITTED_PACKETS: 'Rate of Transmitted Packets',\n    RATE_OF_RECEIVED_PACKETS_DROPPED: 'Rate of Received Packets Dropped',\n    RATE_OF_TRANSMITTED_PACKETS_DROPPED: 'Rate of Transmitted Packets Dropped',\n};\nexport const monitoringDashboardQueries = [\n    {\n        query: _.template(`sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"\", namespace='<%= namespace %>'}) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'CPU Usage',\n        humanize: humanizeCpuCores,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(container_memory_working_set_bytes{cluster=\"\", container!=\"\", namespace='<%= namespace %>'}) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Memory Usage',\n        humanize: humanizeBinaryBytes,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Receive Bandwidth',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_transmit_bytes_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Transmit Bandwidth',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_receive_packets_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Rate of Received Packets',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_transmit_packets_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Rate of Transmitted Packets',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_receive_packets_dropped_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Rate of Received Packets Dropped',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n    {\n        query: _.template(`sum(irate(container_network_transmit_packets_dropped_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`),\n        chartType: GraphTypes.area,\n        title: 'Rate of Transmitted Packets Dropped',\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.BinaryBytes,\n    },\n];\nexport const topWorkloadMetricsQueries = [\n    {\n        title: 'CPU Usage',\n        chartType: GraphTypes.area,\n        humanize: humanizeCpuCores,\n        byteDataType: ByteDataTypes.BinaryBytes,\n        query: _.template(`sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster='', namespace='<%= namespace %>'}\n          * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster='',\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Memory Usage',\n        chartType: GraphTypes.area,\n        humanize: humanizeBinaryBytes,\n        byteDataType: ByteDataTypes.BinaryBytes,\n        query: _.template(`sum(container_memory_working_set_bytes{cluster='', namespace='<%= namespace %>', container!=\"\"}\n          * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster='',\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Receive Bandwidth',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])\n          * on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\",\n          namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n];\nexport const workloadMetricsQueries = [\n    {\n        title: 'Transmit Bandwidth',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])\n         * on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\",\n         namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Rate of Received Packets',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_receive_packets_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Rate of Transmitted Packets',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_transmit_packets_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Rate of Received Packets Dropped',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_receive_packets_dropped_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Rate of Transmitted Packets Dropped',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`sum(irate(container_network_transmit_packets_dropped_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)\n      group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)\n      `),\n    },\n    {\n        title: 'Average Container Bandwidth by Pod: Received',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`avg(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n    {\n        title: 'Average Container Bandwidth by Pod: Transmitted',\n        chartType: GraphTypes.area,\n        humanize: humanizeDecimalBytesPerSec,\n        byteDataType: ByteDataTypes.DecimalBytes,\n        query: _.template(`avg(irate(container_network_transmit_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`),\n    },\n];\nconst getMetricsQuery = (title) => {\n    const queryObject = _.find(monitoringDashboardQueries, (q) => q.title === title);\n    return queryObject.query;\n};\nconst topMetricsQueries = {\n    PODS_BY_CPU: getMetricsQuery('CPU Usage'),\n    PODS_BY_MEMORY: getMetricsQuery('Memory Usage'),\n    PODS_BY_FILESYSTEM: _.template(`topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= namespace %>'}) BY (pod, namespace)))`),\n    PODS_BY_NETWORK_IN: getMetricsQuery('Receive Bandwidth'),\n    PODS_BY_NETWORK_OUT: getMetricsQuery('Transmit Bandwidth'),\n    RATE_OF_RECEIVED_PACKETS: getMetricsQuery('Rate of Received Packets'),\n    RATE_OF_TRANSMITTED_PACKETS: getMetricsQuery('Rate of Transmitted Packets'),\n    RATE_OF_RECEIVED_PACKETS_DROPPED: getMetricsQuery('Rate of Received Packets Dropped'),\n    RATE_OF_TRANSMITTED_PACKETS_DROPPED: getMetricsQuery('Rate of Transmitted Packets Dropped'),\n};\nexport const getTopMetricsQueries = (namespace) => ({\n    [metricsQuery.PODS_BY_CPU]: topMetricsQueries.PODS_BY_CPU({ namespace }),\n    [metricsQuery.PODS_BY_MEMORY]: topMetricsQueries.PODS_BY_MEMORY({ namespace }),\n    [metricsQuery.PODS_BY_FILESYSTEM]: topMetricsQueries.PODS_BY_FILESYSTEM({\n        namespace,\n    }),\n    [metricsQuery.PODS_BY_NETWORK_IN]: topMetricsQueries.PODS_BY_NETWORK_IN({\n        namespace,\n    }),\n    [metricsQuery.PODS_BY_NETWORK_OUT]: topMetricsQueries.PODS_BY_NETWORK_OUT({\n        namespace,\n    }),\n    [metricsQuery.RATE_OF_RECEIVED_PACKETS]: topMetricsQueries.RATE_OF_RECEIVED_PACKETS({\n        namespace,\n    }),\n    [metricsQuery.RATE_OF_TRANSMITTED_PACKETS]: topMetricsQueries.RATE_OF_TRANSMITTED_PACKETS({\n        namespace,\n    }),\n    [metricsQuery.RATE_OF_RECEIVED_PACKETS_DROPPED]: topMetricsQueries.RATE_OF_RECEIVED_PACKETS_DROPPED({\n        namespace,\n    }),\n    [metricsQuery.RATE_OF_TRANSMITTED_PACKETS_DROPPED]: topMetricsQueries.RATE_OF_TRANSMITTED_PACKETS_DROPPED({\n        namespace,\n    }),\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/queries.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/monitoring/queries.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { GraphTypes } from './dashboard/MonitoringDashboardGraph';\nimport {\n  Humanize,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n} from '@console/internal/components/utils';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nexport interface MonitoringQuery {\n  query: _.TemplateExecutor;\n  chartType: GraphTypes;\n  title: string;\n  humanize: Humanize;\n  byteDataType: ByteDataTypes;\n}\n\nexport const metricsQuery = {\n  PODS_BY_CPU: 'CPU Usage',\n  PODS_BY_MEMORY: 'Memory Usage',\n  PODS_BY_FILESYSTEM: 'Filesystem Usage',\n  PODS_BY_NETWORK_IN: 'Receive Bandwidth',\n  PODS_BY_NETWORK_OUT: 'Transmit Bandwidth',\n  RATE_OF_RECEIVED_PACKETS: 'Rate of Received Packets',\n  RATE_OF_TRANSMITTED_PACKETS: 'Rate of Transmitted Packets',\n  RATE_OF_RECEIVED_PACKETS_DROPPED: 'Rate of Received Packets Dropped',\n  RATE_OF_TRANSMITTED_PACKETS_DROPPED: 'Rate of Transmitted Packets Dropped',\n};\n\nexport const monitoringDashboardQueries: MonitoringQuery[] = [\n  {\n    query: _.template(\n      `sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster=\"\", namespace='<%= namespace %>'}) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'CPU Usage',\n    humanize: humanizeCpuCores,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(container_memory_working_set_bytes{cluster=\"\", container!=\"\", namespace='<%= namespace %>'}) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Memory Usage',\n    humanize: humanizeBinaryBytes,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Receive Bandwidth',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_bytes_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Transmit Bandwidth',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_packets_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Rate of Received Packets',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Rate of Transmitted Packets',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_packets_dropped_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Rate of Received Packets Dropped',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_dropped_total{cluster=\"\", namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: 'Rate of Transmitted Packets Dropped',\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n  },\n];\n\nexport const topWorkloadMetricsQueries: MonitoringQuery[] = [\n  {\n    title: 'CPU Usage',\n    chartType: GraphTypes.area,\n    humanize: humanizeCpuCores,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    query: _.template(\n      `sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster='', namespace='<%= namespace %>'}\n          * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster='',\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Memory Usage',\n    chartType: GraphTypes.area,\n    humanize: humanizeBinaryBytes,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    query: _.template(\n      `sum(container_memory_working_set_bytes{cluster='', namespace='<%= namespace %>', container!=\"\"}\n          * on(namespace,pod) group_left(workload, workload_type) mixin_pod_workload{cluster='',\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Receive Bandwidth',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])\n          * on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\",\n          namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n];\n\nexport const workloadMetricsQueries: MonitoringQuery[] = [\n  {\n    title: 'Transmit Bandwidth',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])\n         * on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\",\n         namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Rate of Received Packets',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_packets_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Rate of Transmitted Packets',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Rate of Received Packets Dropped',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_packets_dropped_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Rate of Transmitted Packets Dropped',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_dropped_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)\n      group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)\n      `,\n    ),\n  },\n  {\n    title: 'Average Container Bandwidth by Pod: Received',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `avg(irate(container_network_receive_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: 'Average Container Bandwidth by Pod: Transmitted',\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `avg(irate(container_network_transmit_bytes_total{cluster=\"\", namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) mixin_pod_workload{cluster=\"\", namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n];\n\nconst getMetricsQuery = (title: string): _.TemplateExecutor => {\n  const queryObject = _.find(monitoringDashboardQueries, (q) => q.title === title);\n  return queryObject.query;\n};\n\nconst topMetricsQueries = {\n  PODS_BY_CPU: getMetricsQuery('CPU Usage'),\n  PODS_BY_MEMORY: getMetricsQuery('Memory Usage'),\n  PODS_BY_FILESYSTEM: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= namespace %>'}) BY (pod, namespace)))`,\n  ),\n  PODS_BY_NETWORK_IN: getMetricsQuery('Receive Bandwidth'),\n  PODS_BY_NETWORK_OUT: getMetricsQuery('Transmit Bandwidth'),\n  RATE_OF_RECEIVED_PACKETS: getMetricsQuery('Rate of Received Packets'),\n  RATE_OF_TRANSMITTED_PACKETS: getMetricsQuery('Rate of Transmitted Packets'),\n  RATE_OF_RECEIVED_PACKETS_DROPPED: getMetricsQuery('Rate of Received Packets Dropped'),\n  RATE_OF_TRANSMITTED_PACKETS_DROPPED: getMetricsQuery('Rate of Transmitted Packets Dropped'),\n};\n\nexport const getTopMetricsQueries = (namespace: string) => ({\n  [metricsQuery.PODS_BY_CPU]: topMetricsQueries.PODS_BY_CPU({ namespace }),\n  [metricsQuery.PODS_BY_MEMORY]: topMetricsQueries.PODS_BY_MEMORY({ namespace }),\n  [metricsQuery.PODS_BY_FILESYSTEM]: topMetricsQueries.PODS_BY_FILESYSTEM({\n    namespace,\n  }),\n  [metricsQuery.PODS_BY_NETWORK_IN]: topMetricsQueries.PODS_BY_NETWORK_IN({\n    namespace,\n  }),\n  [metricsQuery.PODS_BY_NETWORK_OUT]: topMetricsQueries.PODS_BY_NETWORK_OUT({\n    namespace,\n  }),\n  [metricsQuery.RATE_OF_RECEIVED_PACKETS]: topMetricsQueries.RATE_OF_RECEIVED_PACKETS({\n    namespace,\n  }),\n  [metricsQuery.RATE_OF_TRANSMITTED_PACKETS]: topMetricsQueries.RATE_OF_TRANSMITTED_PACKETS({\n    namespace,\n  }),\n  [metricsQuery.RATE_OF_RECEIVED_PACKETS_DROPPED]: topMetricsQueries.RATE_OF_RECEIVED_PACKETS_DROPPED(\n    {\n      namespace,\n    },\n  ),\n  [metricsQuery.RATE_OF_TRANSMITTED_PACKETS_DROPPED]: topMetricsQueries.RATE_OF_TRANSMITTED_PACKETS_DROPPED(\n    {\n      namespace,\n    },\n  ),\n});\n"]}]}