{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/plugins.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/plugins.ts","mtime":1616735742510},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["/* eslint-disable no-undef */\nimport { PluginStore } from '@console/plugin-sdk';\n// TODO(vojtech): legacy, remove along with `registry` export\nexport * from '@console/plugin-sdk';\n// The '@console/active-plugins' module is generated during a webpack build,\n// so we use dynamic require() instead of the usual static import statement.\nexport const activePlugins = process.env.NODE_ENV !== 'test'\n    ? require('@console/active-plugins').default\n    : [];\nif (process.env.NODE_ENV !== 'test') {\n    // eslint-disable-next-line no-console\n    console.info(`Active plugins: [${activePlugins.map((p) => p.name).join(', ')}]`);\n}\nexport const pluginStore = new PluginStore(activePlugins);\nexport const registry = pluginStore.registry;\nif (process.env.NODE_ENV !== 'production') {\n    // Expose Console plugin store for debugging\n    window.pluginStore = pluginStore;\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/plugins.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/plugins.ts"],"names":[],"mappings":"AAAA,6BAA6B;AAE7B,OAAO,EAAgB,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAEhE,6DAA6D;AAC7D,cAAc,qBAAqB,CAAC;AAEpC,4EAA4E;AAC5E,4EAA4E;AAC5E,MAAM,CAAC,MAAM,aAAa,GACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM;IAC7B,CAAC,CAAE,OAAO,CAAC,yBAAyB,CAAC,CAAC,OAA0B;IAChE,CAAC,CAAC,EAAE,CAAC;AAET,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;IACnC,sCAAsC;IACtC,OAAO,CAAC,IAAI,CAAC,oBAAoB,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAClF;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;AAE7C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,4CAA4C;IAC5C,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;CAClC","sourcesContent":["/* eslint-disable no-undef */\n\nimport { ActivePlugin, PluginStore } from '@console/plugin-sdk';\n\n// TODO(vojtech): legacy, remove along with `registry` export\nexport * from '@console/plugin-sdk';\n\n// The '@console/active-plugins' module is generated during a webpack build,\n// so we use dynamic require() instead of the usual static import statement.\nexport const activePlugins =\n  process.env.NODE_ENV !== 'test'\n    ? (require('@console/active-plugins').default as ActivePlugin[])\n    : [];\n\nif (process.env.NODE_ENV !== 'test') {\n  // eslint-disable-next-line no-console\n  console.info(`Active plugins: [${activePlugins.map((p) => p.name).join(', ')}]`);\n}\n\nexport const pluginStore = new PluginStore(activePlugins);\nexport const registry = pluginStore.registry;\n\nif (process.env.NODE_ENV !== 'production') {\n  // Expose Console plugin store for debugging\n  window.pluginStore = pluginStore;\n}\n"]}]}