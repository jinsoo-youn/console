{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/node-maintenance.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/node-maintenance.ts","mtime":1616735742440},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport const getNodeMaintenanceNodeName = (nodeMaintenance) => _.get(nodeMaintenance, 'spec.nodeName');\nexport const getNodeMaintenanceReason = (nodeMaintenance) => _.get(nodeMaintenance, 'spec.reason');\nexport const getNodeMaintenancePhase = (nodeMaintenance) => _.get(nodeMaintenance, 'status.phase');\nexport const getNodeMaintenanceLastError = (nodeMaintenance) => _.get(nodeMaintenance, 'status.lastError');\nexport const getNodeMaintenancePendingPods = (nodeMaintenance) => _.get(nodeMaintenance, 'status.pendingPods', []);\nexport const getNodeMaintenanceProgressPercent = (nodeMaintenance) => {\n    if (!nodeMaintenance.status)\n        return 0;\n    const pendingPods = _.get(nodeMaintenance, 'status.pendingPods', []);\n    const evictionPods = _.get(nodeMaintenance, 'status.evictionPods', 0);\n    if (evictionPods === 0)\n        return 100;\n    return (Math.max(evictionPods - pendingPods.length, 0) / evictionPods) * 100;\n};\n// TODO(jtomasek): Move this into console-shared/src/selectors/common.ts\nexport const getNodeMaintenanceCreationTimestamp = (value) => _.get(value, 'metadata.creationTimestamp');\nexport const findNodeMaintenance = (nodeMaintenances, nodeName) => (nodeMaintenances || []).find((nodeMaintenance) => getNodeMaintenanceNodeName(nodeMaintenance) === nodeName);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/node-maintenance.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/metal3-plugin/src/selectors/node-maintenance.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAG5B,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,eAAgC,EAAU,EAAE,CACrF,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;AAC1C,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,eAAgC,EAAU,EAAE,CACnF,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACxC,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,eAAgC,EAAU,EAAE,CAClF,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,eAAgC,EAAU,EAAE,CACtF,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;AAC7C,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,eAAgC,EAAY,EAAE,CAC1F,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;AACnD,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,eAAgC,EAAU,EAAE;IAC5F,IAAI,CAAC,eAAe,CAAC,MAAM;QAAE,OAAO,CAAC,CAAC;IACtC,MAAM,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC;IACrE,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC;IACtE,IAAI,YAAY,KAAK,CAAC;QAAE,OAAO,GAAG,CAAC;IACnC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC;AAC/E,CAAC,CAAC;AACF,wEAAwE;AACxE,MAAM,CAAC,MAAM,mCAAmC,GAAG,CACjD,KAAQ,EACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,4BAA4B,CAAqD,CAAC;AAEpG,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,gBAAmC,EAAE,QAAgB,EAAE,EAAE,CAC3F,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC,IAAI,CAC3B,CAAC,eAAe,EAAE,EAAE,CAAC,0BAA0B,CAAC,eAAe,CAAC,KAAK,QAAQ,CAC9E,CAAC","sourcesContent":["import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport const getNodeMaintenanceNodeName = (nodeMaintenance: K8sResourceKind): string =>\n  _.get(nodeMaintenance, 'spec.nodeName');\nexport const getNodeMaintenanceReason = (nodeMaintenance: K8sResourceKind): string =>\n  _.get(nodeMaintenance, 'spec.reason');\nexport const getNodeMaintenancePhase = (nodeMaintenance: K8sResourceKind): string =>\n  _.get(nodeMaintenance, 'status.phase');\nexport const getNodeMaintenanceLastError = (nodeMaintenance: K8sResourceKind): string =>\n  _.get(nodeMaintenance, 'status.lastError');\nexport const getNodeMaintenancePendingPods = (nodeMaintenance: K8sResourceKind): string[] =>\n  _.get(nodeMaintenance, 'status.pendingPods', []);\nexport const getNodeMaintenanceProgressPercent = (nodeMaintenance: K8sResourceKind): number => {\n  if (!nodeMaintenance.status) return 0;\n  const pendingPods = _.get(nodeMaintenance, 'status.pendingPods', []);\n  const evictionPods = _.get(nodeMaintenance, 'status.evictionPods', 0);\n  if (evictionPods === 0) return 100;\n  return (Math.max(evictionPods - pendingPods.length, 0) / evictionPods) * 100;\n};\n// TODO(jtomasek): Move this into console-shared/src/selectors/common.ts\nexport const getNodeMaintenanceCreationTimestamp = <A extends K8sResourceKind = K8sResourceKind>(\n  value: A,\n) => _.get(value, 'metadata.creationTimestamp') as K8sResourceKind['metadata']['creationTimestamp'];\n\nexport const findNodeMaintenance = (nodeMaintenances: K8sResourceKind[], nodeName: string) =>\n  (nodeMaintenances || []).find(\n    (nodeMaintenance) => getNodeMaintenanceNodeName(nodeMaintenance) === nodeName,\n  );\n"]}]}