{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-daemonset.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-daemonset.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, LabelList, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading } from '../utils';\nimport { Status } from '@console/shared';\nimport { FederatedDaemonSetModel } from '../../models';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(FederatedDaemonSetModel), ...Kebab.factory.common];\nconst kind = FederatedDaemonSetModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst FederatedDaemonSetTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'daemonsetPhase',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: 'Annotations',\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nFederatedDaemonSetTableHeader.displayName = 'FederatedDaemonSetTableHeader';\nconst FederatedDaemonSetTableRow = ({ obj: daemonset, index, key, style }) => {\n    const { t } = useTranslation();\n    return (React.createElement(TableRow, { id: daemonset.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: daemonset.metadata.name, namespace: daemonset.metadata.namespace, title: daemonset.metadata.uid })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: daemonset.status.phase })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(LabelList, { kind: kind, labels: daemonset.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, t('MSG_DETAILS_TABDETAILS_DETAILS_100', { 0: _.size(daemonset.metadata.annotations) })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Timestamp, { timestamp: daemonset.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: daemonset }))));\n};\nexport const ClusterRow = ({ daemonset }) => {\n    return (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" },\n            React.createElement(ResourceIcon, { kind: kind }),\n            daemonset.metadata.name),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" },\n            React.createElement(ResourceLink, { kind: \"Cluster\", name: daemonset.spec.placement.clusters[0].name })),\n        React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" },\n            React.createElement(Status, { status: daemonset.status.phase })),\n        React.createElement(\"div\", { className: \"col-lg-2 hidden-md hidden-sm hidden-xs\" },\n            React.createElement(Timestamp, { timestamp: daemonset.metadata.creationTimestamp }))));\n};\nexport const DaemonSetDistributionTable = ({ heading, daemonset }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SectionHeading, { text: heading }),\n        React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n            React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-4 col-xs-5\" }, t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_1')),\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-3 col-sm-5 col-xs-7\" }, t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_2')),\n                React.createElement(\"div\", { className: \"col-lg-2 col-md-2 col-sm-3 hidden-xs\" }, \"Result\"),\n                React.createElement(\"div\", { className: \"col-lg-1 col-md-2 hidden-sm hidden-xs\" }, t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_3'))),\n            React.createElement(\"div\", { className: \"co-m-table-grid__body\" },\n                React.createElement(ClusterRow, { daemonset: daemonset })))));\n};\nconst FederatedDaemonSetDetails = ({ obj: daemonset }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: `${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_30') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}` }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: daemonset })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(DaemonSetDistributionTable, { key: \"distributionTable\", heading: \"Distribution\", daemonset: daemonset }))));\n};\nconst { details, editYaml } = navFactory;\nexport const FederatedDaemonSets = props => React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Federated Daemon Sets\", Header: FederatedDaemonSetTableHeader, Row: FederatedDaemonSetTableRow, virtualize: true }));\nexport const FederatedDaemonSetsPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: FederatedDaemonSets, kind: kind }, props));\nexport const FederatedDaemonSetsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(FederatedDaemonSetDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-daemonset.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-daemonset.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, LabelList, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceIcon, ResourceSummary, SectionHeading } from '../utils';\nimport { Status } from '@console/shared';\nimport { FederatedDaemonSetModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(FederatedDaemonSetModel), ...Kebab.factory.common];\n\nconst kind = FederatedDaemonSetModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedDaemonSetTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'daemonsetPhase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Annotations',\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nFederatedDaemonSetTableHeader.displayName = 'FederatedDaemonSetTableHeader';\n\nconst FederatedDaemonSetTableRow: RowFunction<K8sResourceKind> = ({ obj: daemonset, index, key, style }) => {\n  const { t } = useTranslation();\n  return (\n    <TableRow id={daemonset.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={daemonset.metadata.name} namespace={daemonset.metadata.namespace} title={daemonset.metadata.uid} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={daemonset.status.phase} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {t('MSG_DETAILS_TABDETAILS_DETAILS_100', { 0: _.size(daemonset.metadata.annotations) })}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={daemonset.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={daemonset} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ClusterRow: React.FC<ClusterRowProps> = ({ daemonset }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">\n        <ResourceIcon kind={kind} />\n        {daemonset.metadata.name}\n      </div>\n      <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">\n        <ResourceLink kind=\"Cluster\" name={daemonset.spec.placement.clusters[0].name} />\n      </div>\n      <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">\n        <Status status={daemonset.status.phase} />\n      </div>\n      <div className=\"col-lg-2 hidden-md hidden-sm hidden-xs\">\n        <Timestamp timestamp={daemonset.metadata.creationTimestamp} />\n      </div>\n    </div>\n  );\n};\n\nexport const DaemonSetDistributionTable: React.FC<DaemonSetDistributionTableProps> = ({\n  heading,\n  daemonset\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={heading} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-xs-5\">{t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_1')}</div>\n          <div className=\"col-lg-2 col-md-3 col-sm-5 col-xs-7\">{t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_2')}</div>\n          <div className=\"col-lg-2 col-md-2 col-sm-3 hidden-xs\">Result</div>\n          <div className=\"col-lg-1 col-md-2 hidden-sm hidden-xs\">{t('COMMON:MSG_DETAILS_TABOVERVIEW_TABLEHEADER_3')}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {/*containers.map((c: any, i: number) => (\n          <ClusterRow key={i} daemonset={daemonset} container={c} />\n        ))*/}\n          <ClusterRow daemonset={daemonset} />\n        </div>\n      </div>\n    </>\n  );}\n\nconst FederatedDaemonSetDetails: React.FC<FederatedDaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  return (\n  <>\n    <div className=\"co-m-pane__body\">\n        <SectionHeading text={`${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_30') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={daemonset} />\n        </div>\n      </div>\n    </div>\n    <div className=\"co-m-pane__body\">\n      <DaemonSetDistributionTable\n        key=\"distributionTable\"\n        heading=\"Distribution\"\n        daemonset={daemonset} />\n    </div>\n  </>\n);}\n\nconst { details, editYaml } = navFactory;\nexport const FederatedDaemonSets: React.FC = props => <Table {...props} aria-label=\"Federated Daemon Sets\" Header={FederatedDaemonSetTableHeader} Row={FederatedDaemonSetTableRow} virtualize />;\n\nexport const FederatedDaemonSetsPage: React.FC<FederatedDaemonSetsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedDaemonSets} kind={kind} {...props} />;\n\nexport const FederatedDaemonSetsDetailsPage: React.FC<FederatedDaemonSetsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedDaemonSetDetails)), editYaml()]} />;\n\ntype ClusterRowProps = {\n  daemonset: K8sResourceKind;\n}\n\ntype DaemonSetDistributionTableProps = {\n  daemonset: K8sResourceKind;\n  heading: string;\n};\n\ntype FederatedDaemonSetDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedDaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedDaemonSetsDetailsPageProps = {\n  match: any;\n};\n"]}]}