{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/layouts/ColaLayout.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/layouts/ColaLayout.ts","mtime":1615298458710},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as webcola from 'webcola';\nimport * as d3 from 'd3';\nimport { action } from 'mobx';\nimport { getGroupPadding } from '../utils/element-utils';\nimport { BaseLayout, LayoutGroup, LayoutLink, LayoutNode } from './BaseLayout';\nclass ColaNode extends LayoutNode {\n    constructor(node, distance, index = -1) {\n        super(node, distance, index);\n        // fixed is used by Cola during node additions: 1 for fixed\n        this.fixed = 0;\n        // TODO: Investigate why the issue with rectangular nodes causing the layout to become vertical\n        //       this setting will be a problem if nodes can change size dynamically\n        // Cola layout has issues with non-square nodes\n        const maxDimension = Math.max(this.nodeWidth, this.nodeHeight);\n        this.nodeWidth = maxDimension;\n        this.nodeHeight = maxDimension;\n    }\n}\nclass ColaGroup extends LayoutGroup {\n}\nclass ColaLink extends LayoutLink {\n    constructor(edge, source, target) {\n        super(edge, source, target);\n    }\n}\nconst COLA_LAYOUT_DEFAULTS = {\n    maxTicks: 300,\n    initialUnconstrainedIterations: 200,\n    initialUserConstraintIterations: 50,\n    initialAllConstraintsIterations: 150,\n    gridSnapIterations: 50,\n};\nclass ColaLayout extends BaseLayout {\n    constructor(graph, options) {\n        super(graph, options);\n        this.tickCount = 0;\n        this.destroyed = false;\n        this.getLinkDistance = (link) => {\n            let distance = this.options.linkDistance + link.source.radius + link.target.radius;\n            if (link.source.element.getParent() !== link.target.element.getParent()) {\n                distance += getGroupPadding(link.source.element.getParent());\n                distance += getGroupPadding(link.target.element.getParent());\n            }\n            return distance;\n        };\n        this.colaOptions = Object.assign(Object.assign({}, COLA_LAYOUT_DEFAULTS), options);\n        this.initializeLayout();\n    }\n    initializeLayout() {\n        this.d3Cola = webcola.d3adaptor(d3);\n        this.d3Cola.handleDisconnected(true);\n        this.d3Cola.avoidOverlaps(true);\n        this.d3Cola.linkDistance(this.getLinkDistance);\n        this.d3Cola.on('tick', () => {\n            this.tickCount++;\n            if (this.tickCount === 1 || this.tickCount % this.options.simulationSpeed === 0) {\n                action(() => this.nodes.forEach((d) => d.update()))();\n            }\n            if (this.colaOptions.maxTicks >= 0 && this.tickCount > this.colaOptions.maxTicks) {\n                this.d3Cola.stop();\n            }\n        });\n        this.d3Cola.on('end', () => {\n            this.tickCount = 0;\n            action(() => {\n                if (this.destroyed) {\n                    return;\n                }\n                this.nodes.forEach((d) => {\n                    d.update();\n                    d.fixed = 0;\n                });\n                if (this.options.layoutOnDrag) {\n                    this.forceSimulation.useForceSimulation(this.nodes, this.edges, this.getFixedNodeDistance);\n                }\n            })();\n        });\n    }\n    destroy() {\n        super.destroy();\n        this.destroyed = true;\n        this.d3Cola.stop();\n    }\n    initDrag() {\n        // Set the alpha to 0 to halt any ticks that may be occurring\n        this.d3Cola.alpha(0);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getConstraints(nodes, groups, edges) {\n        return [];\n    }\n    createLayoutNode(node, nodeDistance, index) {\n        return new ColaNode(node, nodeDistance, index);\n    }\n    createLayoutLink(edge, source, target) {\n        return new ColaLink(edge, source, target);\n    }\n    createLayoutGroup(node, padding, index) {\n        return new ColaGroup(node, padding, index);\n    }\n    setupLayout(graph, nodes, edges, groups) {\n        const { width, height } = graph.getBounds();\n        this.d3Cola.size([width, height]);\n        // Get any custom constraints\n        this.d3Cola.constraints(this.getConstraints(nodes, groups, edges));\n        this.d3Cola.nodes(nodes);\n        this.d3Cola.links(edges);\n        this.d3Cola.groups(groups);\n    }\n    updateExistingNodes(existingNodes) {\n        existingNodes.forEach((n) => {\n            n.fixed = 1;\n        });\n    }\n    startLayout(graph, initialRun, addingNodes) {\n        // start the layout\n        this.d3Cola.alpha(0.2);\n        this.tickCount = 0;\n        this.d3Cola.start(addingNodes ? 0 : this.colaOptions.initialUnconstrainedIterations, addingNodes ? 0 : this.colaOptions.initialUserConstraintIterations, addingNodes ? 0 : this.colaOptions.initialAllConstraintsIterations, addingNodes ? 0 : this.colaOptions.gridSnapIterations, true, !addingNodes);\n    }\n}\nexport { ColaLayout, ColaNode, ColaGroup, ColaLink };\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/layouts/ColaLayout.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/topology/src/layouts/ColaLayout.ts"],"names":[],"mappings":"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","sourcesContent":["import * as webcola from 'webcola';\nimport * as d3 from 'd3';\nimport { action } from 'mobx';\nimport { Edge, Graph, Layout, Node } from '../types';\nimport { getGroupPadding } from '../utils/element-utils';\nimport { BaseLayout, LayoutGroup, LayoutLink, LayoutNode, LayoutOptions } from './BaseLayout';\n\nclass ColaNode extends LayoutNode implements webcola.Node {\n  // fixed is used by Cola during node additions: 1 for fixed\n  public fixed: number = 0;\n\n  constructor(node: Node, distance: number, index: number = -1) {\n    super(node, distance, index);\n\n    // TODO: Investigate why the issue with rectangular nodes causing the layout to become vertical\n    //       this setting will be a problem if nodes can change size dynamically\n    // Cola layout has issues with non-square nodes\n    const maxDimension = Math.max(this.nodeWidth, this.nodeHeight);\n    this.nodeWidth = maxDimension;\n    this.nodeHeight = maxDimension;\n  }\n}\n\nclass ColaGroup extends LayoutGroup implements webcola.Group {}\n\nclass ColaLink extends LayoutLink implements webcola.Link<ColaNode | number> {\n  constructor(edge: Edge, source: LayoutNode | number, target: LayoutNode | number) {\n    super(edge, source as LayoutNode, target as LayoutNode);\n  }\n}\n\ntype ColaLayoutOptions = {\n  maxTicks: number;\n  initialUnconstrainedIterations: number;\n  initialUserConstraintIterations: number;\n  initialAllConstraintsIterations: number;\n  gridSnapIterations: number;\n};\n\nconst COLA_LAYOUT_DEFAULTS: ColaLayoutOptions = {\n  maxTicks: 300,\n  initialUnconstrainedIterations: 200,\n  initialUserConstraintIterations: 50,\n  initialAllConstraintsIterations: 150,\n  gridSnapIterations: 50,\n};\n\nclass ColaLayout extends BaseLayout implements Layout {\n  private d3Cola: any;\n\n  private colaOptions: ColaLayoutOptions;\n\n  private tickCount = 0;\n\n  private destroyed = false;\n\n  constructor(graph: Graph, options?: Partial<ColaLayoutOptions & LayoutOptions>) {\n    super(graph, options);\n    this.colaOptions = {\n      ...COLA_LAYOUT_DEFAULTS,\n      ...options,\n    };\n    this.initializeLayout();\n  }\n\n  protected getLinkDistance = (link: ColaLink): number => {\n    let distance = this.options.linkDistance + link.source.radius + link.target.radius;\n    if (link.source.element.getParent() !== link.target.element.getParent()) {\n      distance += getGroupPadding(link.source.element.getParent());\n      distance += getGroupPadding(link.target.element.getParent());\n    }\n\n    return distance;\n  };\n\n  protected initializeLayout(): void {\n    this.d3Cola = webcola.d3adaptor(d3);\n    this.d3Cola.handleDisconnected(true);\n    this.d3Cola.avoidOverlaps(true);\n    this.d3Cola.linkDistance(this.getLinkDistance);\n    this.d3Cola.on('tick', () => {\n      this.tickCount++;\n      if (this.tickCount === 1 || this.tickCount % this.options.simulationSpeed === 0) {\n        action(() => this.nodes.forEach((d) => d.update()))();\n      }\n      if (this.colaOptions.maxTicks >= 0 && this.tickCount > this.colaOptions.maxTicks) {\n        this.d3Cola.stop();\n      }\n    });\n    this.d3Cola.on('end', () => {\n      this.tickCount = 0;\n      action(() => {\n        if (this.destroyed) {\n          return;\n        }\n        this.nodes.forEach((d) => {\n          d.update();\n          (d as ColaNode).fixed = 0;\n        });\n        if (this.options.layoutOnDrag) {\n          this.forceSimulation.useForceSimulation(\n            this.nodes,\n            this.edges,\n            this.getFixedNodeDistance,\n          );\n        }\n      })();\n    });\n  }\n\n  destroy(): void {\n    super.destroy();\n\n    this.destroyed = true;\n    this.d3Cola.stop();\n  }\n\n  initDrag() {\n    // Set the alpha to 0 to halt any ticks that may be occurring\n    this.d3Cola.alpha(0);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return [];\n  }\n\n  protected createLayoutNode(node: Node, nodeDistance: number, index: number) {\n    return new ColaNode(node, nodeDistance, index);\n  }\n\n  protected createLayoutLink(edge: Edge, source: LayoutNode, target: LayoutNode): LayoutLink {\n    return new ColaLink(edge, source, target);\n  }\n\n  protected createLayoutGroup(node: Node, padding: number, index: number) {\n    return new ColaGroup(node, padding, index);\n  }\n\n  protected setupLayout(\n    graph: Graph,\n    nodes: LayoutNode[],\n    edges: LayoutLink[],\n    groups: LayoutGroup[],\n  ): void {\n    const { width, height } = graph.getBounds();\n    this.d3Cola.size([width, height]);\n\n    // Get any custom constraints\n    this.d3Cola.constraints(this.getConstraints(nodes as ColaNode[], groups as ColaGroup[], edges));\n\n    this.d3Cola.nodes(nodes);\n    this.d3Cola.links(edges);\n    this.d3Cola.groups(groups);\n  }\n\n  protected updateExistingNodes(existingNodes: LayoutNode[]) {\n    existingNodes.forEach((n) => {\n      (n as ColaNode).fixed = 1;\n    });\n  }\n\n  protected startLayout(graph: Graph, initialRun: boolean, addingNodes: boolean): void {\n    // start the layout\n    this.d3Cola.alpha(0.2);\n    this.tickCount = 0;\n    this.d3Cola.start(\n      addingNodes ? 0 : this.colaOptions.initialUnconstrainedIterations,\n      addingNodes ? 0 : this.colaOptions.initialUserConstraintIterations,\n      addingNodes ? 0 : this.colaOptions.initialAllConstraintsIterations,\n      addingNodes ? 0 : this.colaOptions.gridSnapIterations,\n      true,\n      !addingNodes,\n    );\n  }\n}\n\nexport { ColaLayout, ColaNode, ColaGroup, ColaLink, ColaLayoutOptions };\n"]}]}