{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/dashboard-card/DashboardCardLink.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/dashboard-card/DashboardCardLink.tsx","mtime":1615298458600},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nexport const DashboardCardButtonLink = React.memo((_a) => {\n    var { children, className } = _a, rest = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(Button, Object.assign({ variant: \"link\", isInline: true, className: classNames('co-dashboard-card__button-link', className) }, rest), children));\n});\nconst DashboardCardLink = React.memo(({ children, to, className }) => (React.createElement(Link, { to: to, className: \"co-dashboard-card__link\" },\n    React.createElement(DashboardCardButtonLink, { className: className }, children))));\nexport const DashboardCardPopupLink = React.memo(({ linkTitle, popupTitle, children, className, onShow, onHide, position = PopoverPosition.right, }) => {\n    if (React.Children.count(children) === 0) {\n        return null;\n    }\n    return (React.createElement(Popover, { position: position, headerContent: popupTitle, bodyContent: children, enableFlip: true, onShow: onShow, onHide: onHide, maxWidth: \"21rem\" },\n        React.createElement(DashboardCardButtonLink, { className: className }, linkTitle)));\n});\nexport default DashboardCardLink;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/dashboard-card/DashboardCardLink.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/components/dashboard/dashboard-card/DashboardCardLink.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAE,MAAM,EAAe,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAEvF,MAAM,CAAC,MAAM,uBAAuB,GAA2C,KAAK,CAAC,IAAI,CACvF,CAAC,EAAgC,EAAE,EAAE;QAApC,EAAE,QAAQ,EAAE,SAAS,OAAW,EAAT,4CAAO;IAAO,OAAA,CACpC,oBAAC,MAAM,kBACL,OAAO,EAAC,MAAM,EACd,QAAQ,QACR,SAAS,EAAE,UAAU,CAAC,gCAAgC,EAAE,SAAS,CAAC,IAC9D,IAAI,GAEP,QAAQ,CACF,CACV,CAAA;CAAA,CACF,CAAC;AAEF,MAAM,iBAAiB,GAAqC,KAAK,CAAC,IAAI,CACpE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAC/B,oBAAC,IAAI,IAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,yBAAyB;IAC/C,oBAAC,uBAAuB,IAAC,SAAS,EAAE,SAAS,IAAG,QAAQ,CAA2B,CAC9E,CACR,CACF,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAA0C,KAAK,CAAC,IAAI,CACrF,CAAC,EACC,SAAS,EACT,UAAU,EACV,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,EACN,QAAQ,GAAG,eAAe,CAAC,KAAK,GACjC,EAAE,EAAE;IACH,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,oBAAC,OAAO,IACN,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,UAAU,EACzB,WAAW,EAAE,QAAQ,EACrB,UAAU,QACV,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,QAAQ,EAAC,OAAO;QAEhB,oBAAC,uBAAuB,IAAC,SAAS,EAAE,SAAS,IAAG,SAAS,CAA2B,CAC5E,CACX,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Button, ButtonProps, Popover, PopoverPosition } from '@patternfly/react-core';\n\nexport const DashboardCardButtonLink: React.FC<DashboardCardButtonLinkProps> = React.memo(\n  ({ children, className, ...rest }) => (\n    <Button\n      variant=\"link\"\n      isInline\n      className={classNames('co-dashboard-card__button-link', className)}\n      {...rest}\n    >\n      {children}\n    </Button>\n  ),\n);\n\nconst DashboardCardLink: React.FC<DashboardCardLinkProps> = React.memo(\n  ({ children, to, className }) => (\n    <Link to={to} className=\"co-dashboard-card__link\">\n      <DashboardCardButtonLink className={className}>{children}</DashboardCardButtonLink>\n    </Link>\n  ),\n);\n\nexport const DashboardCardPopupLink: React.FC<DashboardCardPopupLinkProps> = React.memo(\n  ({\n    linkTitle,\n    popupTitle,\n    children,\n    className,\n    onShow,\n    onHide,\n    position = PopoverPosition.right,\n  }) => {\n    if (React.Children.count(children) === 0) {\n      return null;\n    }\n\n    return (\n      <Popover\n        position={position}\n        headerContent={popupTitle}\n        bodyContent={children}\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <DashboardCardButtonLink className={className}>{linkTitle}</DashboardCardButtonLink>\n      </Popover>\n    );\n  },\n);\n\nexport default DashboardCardLink;\n\ntype DashboardCardButtonLinkProps = ButtonProps & {\n  children: React.ReactNode;\n  className?: string;\n};\n\ntype DashboardCardPopupLinkProps = {\n  children?: React.ReactNode;\n  popupTitle: string;\n  linkTitle: React.ReactNode;\n  className?: string;\n  onShow?: () => void;\n  onHide?: () => void;\n  position?: PopoverPosition;\n};\n\ntype DashboardCardLinkProps = DashboardCardButtonLinkProps & {\n  to: string;\n};\n"]}]}