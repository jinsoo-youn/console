{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/progressive-list/ProgressiveList.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/progressive-list/ProgressiveList.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport ProgressiveListFooter from './ProgressiveListFooter';\nimport ProgressiveListItem from './ProgressiveListItem';\nconst ProgressiveList = ({ visibleItems, children, onVisibleItemChange, text, }) => {\n    const items = [];\n    const validChildren = React.Children.toArray(children).filter((child) => {\n        const { name } = child.props;\n        const validChild = child.type === ProgressiveListItem;\n        const isNameInVisibleItems = visibleItems.includes(name);\n        if (validChild && !isNameInVisibleItems)\n            items.push(name);\n        return validChild;\n    });\n    return (React.createElement(React.Fragment, null,\n        visibleItems.map((item) => (React.createElement(React.Fragment, { key: item }, validChildren.find(({ props }) => item === props.name)))),\n        React.createElement(ProgressiveListFooter, { text: text, items: items, onShowItem: onVisibleItemChange })));\n};\nexport default ProgressiveList;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/progressive-list/ProgressiveList.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/progressive-list/ProgressiveList.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAQxD,MAAM,eAAe,GAAmC,CAAC,EACvD,YAAY,EACZ,QAAQ,EACR,mBAAmB,EACnB,IAAI,GACL,EAAE,EAAE;IACH,MAAM,KAAK,GAAa,EAAE,CAAC;IAC3B,MAAM,aAAa,GAAsB,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAC9E,CAAC,KAAyB,EAAE,EAAE;QAC5B,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;QAC7B,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,KAAK,mBAAmB,CAAC;QACtD,MAAM,oBAAoB,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,UAAU,IAAI,CAAC,oBAAoB;YAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,OAAO,UAAU,CAAC;IACpB,CAAC,CACF,CAAC;IACF,OAAO,CACL;QACG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,CAClC,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,IAAI,IACtB,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAsB,EAAE,EAAE,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAC5D,CAClB,CAAC;QACF,oBAAC,qBAAqB,IAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,mBAAmB,GAAI,CACnF,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport ProgressiveListFooter from './ProgressiveListFooter';\nimport ProgressiveListItem from './ProgressiveListItem';\n\nexport interface ProgressiveListProps {\n  visibleItems: string[];\n  onVisibleItemChange: (item: string) => void;\n  text: string;\n}\n\nconst ProgressiveList: React.FC<ProgressiveListProps> = ({\n  visibleItems,\n  children,\n  onVisibleItemChange,\n  text,\n}) => {\n  const items: string[] = [];\n  const validChildren: React.ReactNode[] = React.Children.toArray(children).filter(\n    (child: React.ReactElement) => {\n      const { name } = child.props;\n      const validChild = child.type === ProgressiveListItem;\n      const isNameInVisibleItems = visibleItems.includes(name);\n      if (validChild && !isNameInVisibleItems) items.push(name);\n      return validChild;\n    },\n  );\n  return (\n    <>\n      {visibleItems.map((item: string) => (\n        <React.Fragment key={item}>\n          {validChildren.find(({ props }: React.ReactElement) => item === props.name)}\n        </React.Fragment>\n      ))}\n      <ProgressiveListFooter text={text} items={items} onShowItem={onVisibleItemChange} />\n    </>\n  );\n};\n\nexport default ProgressiveList;\n"]}]}