{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm/vmi-wrapper.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm/vmi-wrapper.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { K8sResourceWrapper } from '../common/k8s-resource-wrapper';\nimport { getVMIDisks, getVMINetworks, getVMIVolumes, getVMIInterfaces, getVMINodeSelector, getVMITolerations, getVMIAffinity, } from '../../../selectors/vmi';\nimport { transformDevices } from '../../../selectors/vm';\nimport { findKeySuffixValue } from '../../../selectors/utils';\nimport { TEMPLATE_FLAVOR_LABEL, TEMPLATE_OS_LABEL, TEMPLATE_WORKLOAD_LABEL, } from '../../../constants/vm';\nimport { VirtualMachineInstanceModel } from '../../../models';\nexport class VMIWrapper extends K8sResourceWrapper {\n    constructor(vmi, copy = false) {\n        super(VirtualMachineInstanceModel, vmi, copy);\n        this.getOperatingSystem = () => findKeySuffixValue(this.getLabels(), TEMPLATE_OS_LABEL);\n        this.getWorkloadProfile = () => findKeySuffixValue(this.getLabels(), TEMPLATE_WORKLOAD_LABEL);\n        this.getFlavor = () => findKeySuffixValue(this.getLabels(), TEMPLATE_FLAVOR_LABEL);\n        this.getMemory = () => { var _a, _b, _c, _d, _e; return (_e = (_d = (_c = (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.spec) === null || _b === void 0 ? void 0 : _b.domain) === null || _c === void 0 ? void 0 : _c.resources) === null || _d === void 0 ? void 0 : _d.requests) === null || _e === void 0 ? void 0 : _e.memory; };\n        this.getCPU = () => { var _a, _b, _c; return (_c = (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.spec) === null || _b === void 0 ? void 0 : _b.domain) === null || _c === void 0 ? void 0 : _c.cpu; };\n        this.getNetworkInterfaces = (defaultValue = []) => getVMIInterfaces(this.data, defaultValue);\n        this.getDisks = (defaultValue = []) => getVMIDisks(this.data, defaultValue);\n        this.getCDROMs = () => this.getDisks().filter((device) => !!device.cdrom);\n        this.getNetworks = (defaultValue = []) => getVMINetworks(this.data, defaultValue);\n        this.getVolumes = (defaultValue = []) => getVMIVolumes(this.data, defaultValue);\n        this.getLabeledDevices = () => transformDevices(this.getDisks(), this.getNetworkInterfaces());\n        this.isDedicatedCPUPlacement = () => { var _a, _b, _c; return ((_c = (_b = (_a = this.data.spec) === null || _a === void 0 ? void 0 : _a.domain) === null || _b === void 0 ? void 0 : _b.cpu) === null || _c === void 0 ? void 0 : _c.dedicatedCpuPlacement) || false; };\n        this.getNodeSelector = () => getVMINodeSelector(this.data);\n        this.getTolerations = () => getVMITolerations(this.data);\n        this.getAffinity = () => getVMIAffinity(this.data);\n    }\n}\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm/vmi-wrapper.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/wrapper/vm/vmi-wrapper.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EACL,WAAW,EACX,cAAc,EACd,aAAa,EACb,gBAAgB,EAChB,kBAAkB,EAClB,iBAAiB,EACjB,cAAc,GACf,MAAM,wBAAwB,CAAC;AAEhC,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EACL,qBAAqB,EACrB,iBAAiB,EACjB,uBAAuB,GACxB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,2BAA2B,EAAE,MAAM,iBAAiB,CAAC;AAE9D,MAAM,OAAO,UAAW,SAAQ,kBAAuC;IACrE,YAAY,GAAgC,EAAE,IAAI,GAAG,KAAK;QACxD,KAAK,CAAC,2BAA2B,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAGhD,uBAAkB,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,iBAAiB,CAAC,CAAC;QACnF,uBAAkB,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,uBAAuB,CAAC,CAAC;QACzF,cAAS,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,qBAAqB,CAAC,CAAC;QAE9E,cAAS,GAAG,GAAG,EAAE,gEAAC,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,MAAM,0CAAE,SAAS,0CAAE,QAAQ,0CAAE,MAAM,GAAA,CAAC;QACvE,WAAM,GAAG,GAAW,EAAE,4CAAC,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,MAAM,0CAAE,GAAG,GAAA,CAAC;QAEpD,yBAAoB,GAAG,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAExF,aAAQ,GAAG,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACvE,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAErE,gBAAW,GAAG,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAE7E,eAAU,GAAG,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAE3E,sBAAiB,GAAG,GAAG,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAEzF,4BAAuB,GAAG,GAAG,EAAE,mBAAC,OAAA,mBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,0CAAE,MAAM,0CAAE,GAAG,0CAAE,qBAAqB,KAAI,KAAK,CAAA,EAAA,CAAC;QAE5F,oBAAe,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtD,mBAAc,GAAG,GAAG,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpD,gBAAW,GAAG,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IA1B9C,CAAC;CA2BF","sourcesContent":["/* eslint-disable lines-between-class-members */\nimport { CPURaw, VMIKind } from '../../../types/vm';\nimport { K8sResourceWrapper } from '../common/k8s-resource-wrapper';\nimport {\n  getVMIDisks,\n  getVMINetworks,\n  getVMIVolumes,\n  getVMIInterfaces,\n  getVMINodeSelector,\n  getVMITolerations,\n  getVMIAffinity,\n} from '../../../selectors/vmi';\nimport { VMILikeMethods } from './types';\nimport { transformDevices } from '../../../selectors/vm';\nimport { findKeySuffixValue } from '../../../selectors/utils';\nimport {\n  TEMPLATE_FLAVOR_LABEL,\n  TEMPLATE_OS_LABEL,\n  TEMPLATE_WORKLOAD_LABEL,\n} from '../../../constants/vm';\nimport { VirtualMachineInstanceModel } from '../../../models';\n\nexport class VMIWrapper extends K8sResourceWrapper<VMIKind, VMIWrapper> implements VMILikeMethods {\n  constructor(vmi?: VMIKind | VMIWrapper | any, copy = false) {\n    super(VirtualMachineInstanceModel, vmi, copy);\n  }\n\n  getOperatingSystem = () => findKeySuffixValue(this.getLabels(), TEMPLATE_OS_LABEL);\n  getWorkloadProfile = () => findKeySuffixValue(this.getLabels(), TEMPLATE_WORKLOAD_LABEL);\n  getFlavor = () => findKeySuffixValue(this.getLabels(), TEMPLATE_FLAVOR_LABEL);\n\n  getMemory = () => this.data?.spec?.domain?.resources?.requests?.memory;\n  getCPU = (): CPURaw => this.data?.spec?.domain?.cpu;\n\n  getNetworkInterfaces = (defaultValue = []) => getVMIInterfaces(this.data, defaultValue);\n\n  getDisks = (defaultValue = []) => getVMIDisks(this.data, defaultValue);\n  getCDROMs = () => this.getDisks().filter((device) => !!device.cdrom);\n\n  getNetworks = (defaultValue = []) => getVMINetworks(this.data, defaultValue);\n\n  getVolumes = (defaultValue = []) => getVMIVolumes(this.data, defaultValue);\n\n  getLabeledDevices = () => transformDevices(this.getDisks(), this.getNetworkInterfaces());\n\n  isDedicatedCPUPlacement = () => this.data.spec?.domain?.cpu?.dedicatedCpuPlacement || false;\n\n  getNodeSelector = () => getVMINodeSelector(this.data);\n\n  getTolerations = () => getVMITolerations(this.data);\n\n  getAffinity = () => getVMIAffinity(this.data);\n}\n"]}]}