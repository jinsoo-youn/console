{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/PipelineRunsPage.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/PipelineRunsPage.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { getBadgeFromType } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport ProjectListPage from '../projects/ProjectListPage';\nimport PipelineRunsResourceList from './PipelineRunsResourceList';\nconst PipelineRunsPage = (props) => {\n    const { match: { params: { ns: namespace }, }, } = props;\n    return namespace ? (React.createElement(\"div\", null,\n        React.createElement(PipelineRunsResourceList, Object.assign({}, props, { namespace: namespace })))) : (React.createElement(ProjectListPage, { title: PipelineRunModel.labelPlural, badge: getBadgeFromType(PipelineRunModel.badge) },\n        \"Select a project to view the list of \",\n        PipelineRunModel.labelPlural));\n};\nexport default PipelineRunsPage;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/PipelineRunsPage.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelineruns/PipelineRunsPage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAChD,OAAO,eAAe,MAAM,6BAA6B,CAAC;AAC1D,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAIlE,MAAM,gBAAgB,GAAoC,CAAC,KAAK,EAAE,EAAE;IAClE,MAAM,EACJ,KAAK,EAAE,EACL,MAAM,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,GAC1B,GACF,GAAG,KAAK,CAAC;IACV,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB;QACE,oBAAC,wBAAwB,oBAAK,KAAK,IAAE,SAAS,EAAE,SAAS,IAAI,CACzD,CACP,CAAC,CAAC,CAAC,CACF,oBAAC,eAAe,IACd,KAAK,EAAE,gBAAgB,CAAC,WAAW,EACnC,KAAK,EAAE,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC;;QAET,gBAAgB,CAAC,WAAW,CAClD,CACnB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { getBadgeFromType } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport ProjectListPage from '../projects/ProjectListPage';\nimport PipelineRunsResourceList from './PipelineRunsResourceList';\n\ntype PipelineRunsPageProps = RouteComponentProps<{ ns: string }>;\n\nconst PipelineRunsPage: React.FC<PipelineRunsPageProps> = (props) => {\n  const {\n    match: {\n      params: { ns: namespace },\n    },\n  } = props;\n  return namespace ? (\n    <div>\n      <PipelineRunsResourceList {...props} namespace={namespace} />\n    </div>\n  ) : (\n    <ProjectListPage\n      title={PipelineRunModel.labelPlural}\n      badge={getBadgeFromType(PipelineRunModel.badge)}\n    >\n      Select a project to view the list of {PipelineRunModel.labelPlural}\n    </ProjectListPage>\n  );\n};\n\nexport default PipelineRunsPage;\n"]}]}