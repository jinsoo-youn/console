{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport { useFormikContext } from 'formik';\nimport { Resources } from '../import-types';\nconst DeploymentConfigSection = ({ namespace, resource, }) => {\n    const { values: { resources }, } = useFormikContext();\n    const deploymentConfigObj = resource || {\n        kind: 'DeploymentConfig',\n        metadata: {\n            namespace,\n        },\n    };\n    const envs = _.get(deploymentConfigObj, 'spec.template.spec.containers[0].env', []);\n    return (React.createElement(FormSection, { title: \"Deployment\", fullWidth: true },\n        React.createElement(CheckboxField, { name: \"deployment.triggers.image\", label: \"Auto deploy when new image is available\" }),\n        resources === Resources.OpenShift && (React.createElement(CheckboxField, { name: \"deployment.triggers.config\", label: \"Auto deploy when deployment configuration changes\" })),\n        React.createElement(EnvironmentField, { name: \"deployment.env\", label: \"Environment Variables (Runtime only)\", envs: envs, obj: deploymentConfigObj, envPath: ['spec', 'template', 'spec', 'containers'] })));\n};\nexport default DeploymentConfigSection;\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAElE,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAgB,MAAM,QAAQ,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAO5C,MAAM,uBAAuB,GAA2C,CAAC,EACvE,SAAS,EACT,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,EACJ,MAAM,EAAE,EAAE,SAAS,EAAE,GACtB,GAAG,gBAAgB,EAAgB,CAAC;IACrC,MAAM,mBAAmB,GAAG,QAAQ,IAAI;QACtC,IAAI,EAAE,kBAAkB;QACxB,QAAQ,EAAE;YACR,SAAS;SACV;KACF,CAAC;IACF,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,sCAAsC,EAAE,EAAE,CAAC,CAAC;IACpF,OAAO,CACL,oBAAC,WAAW,IAAC,KAAK,EAAC,YAAY,EAAC,SAAS;QACvC,oBAAC,aAAa,IACZ,IAAI,EAAC,2BAA2B,EAChC,KAAK,EAAC,yCAAyC,GAC/C;QACD,SAAS,KAAK,SAAS,CAAC,SAAS,IAAI,CACpC,oBAAC,aAAa,IACZ,IAAI,EAAC,4BAA4B,EACjC,KAAK,EAAC,mDAAmD,GACzD,CACH;QACD,oBAAC,gBAAgB,IACf,IAAI,EAAC,gBAAgB,EACrB,KAAK,EAAC,sCAAsC,EAC5C,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,mBAAmB,EACxB,OAAO,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,CAAC,GACnD,CACU,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,uBAAuB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport FormSection from '../section/FormSection';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { Resources } from '../import-types';\n\nexport interface DeploymentConfigSectionProps {\n  namespace: string;\n  resource?: K8sResourceKind;\n}\n\nconst DeploymentConfigSection: React.FC<DeploymentConfigSectionProps> = ({\n  namespace,\n  resource,\n}) => {\n  const {\n    values: { resources },\n  } = useFormikContext<FormikValues>();\n  const deploymentConfigObj = resource || {\n    kind: 'DeploymentConfig',\n    metadata: {\n      namespace,\n    },\n  };\n  const envs = _.get(deploymentConfigObj, 'spec.template.spec.containers[0].env', []);\n  return (\n    <FormSection title=\"Deployment\" fullWidth>\n      <CheckboxField\n        name=\"deployment.triggers.image\"\n        label=\"Auto deploy when new image is available\"\n      />\n      {resources === Resources.OpenShift && (\n        <CheckboxField\n          name=\"deployment.triggers.config\"\n          label=\"Auto deploy when deployment configuration changes\"\n        />\n      )}\n      <EnvironmentField\n        name=\"deployment.env\"\n        label=\"Environment Variables (Runtime only)\"\n        envs={envs}\n        obj={deploymentConfigObj}\n        envPath={['spec', 'template', 'spec', 'containers']}\n      />\n    </FormSection>\n  );\n};\n\nexport default DeploymentConfigSection;\n"]}]}