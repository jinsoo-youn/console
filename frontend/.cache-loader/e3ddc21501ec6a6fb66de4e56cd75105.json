{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/constants/ocs-install.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/constants/ocs-install.ts","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const minSelectedNode = 3;\nexport const ocsTaint = {\n    key: 'node.ocs.openshift.io/storage',\n    value: 'true',\n    effect: 'NoSchedule',\n};\nObject.freeze(ocsTaint);\nexport const storageClassTooltip = 'The Storage Class will be used to request storage from the underlying infrastructure to create the backing persistent volumes that will be used to provide the OpenShift Container Storage (OCS) service.';\nexport const labelTooltip = 'The backing storage requested will be higher as it will factor in the requested capacity, replica factor, and fault tolerant costs associated with the requested capacity.';\nexport const ocsRequestData = {\n    apiVersion: 'ocs.openshift.io/v1',\n    kind: 'StorageCluster',\n    metadata: {\n        name: 'ocs-storagecluster',\n        namespace: 'openshift-storage',\n    },\n    spec: {\n        manageNodes: false,\n        storageDeviceSets: [\n            {\n                name: 'ocs-deviceset',\n                count: 1,\n                replica: 3,\n                resources: {},\n                placement: {},\n                portable: true,\n                dataPVCTemplate: {\n                    spec: {\n                        storageClassName: '',\n                        accessModes: ['ReadWriteOnce'],\n                        volumeMode: 'Block',\n                        resources: {\n                            requests: {\n                                storage: '',\n                            },\n                        },\n                    },\n                },\n            },\n        ],\n    },\n};\nexport const infraProvisionerMap = {\n    aws: 'kubernetes.io/aws-ebs',\n    vsphere: 'kubernetes.io/vsphere-volume',\n};\nexport var defaultRequestSize;\n(function (defaultRequestSize) {\n    defaultRequestSize[\"BAREMETAL\"] = \"1\";\n    defaultRequestSize[\"NON_BAREMETAL\"] = \"2Ti\";\n})(defaultRequestSize || (defaultRequestSize = {}));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/constants/ocs-install.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/constants/ocs-install.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,MAAM,QAAQ,GAAU;IAC7B,GAAG,EAAE,+BAA+B;IACpC,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,YAAY;CACrB,CAAC;AACF,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAExB,MAAM,CAAC,MAAM,mBAAmB,GAC9B,2MAA2M,CAAC;AAC9M,MAAM,CAAC,MAAM,YAAY,GACvB,4KAA4K,CAAC;AAE/K,MAAM,CAAC,MAAM,cAAc,GAAoB;IAC7C,UAAU,EAAE,qBAAqB;IACjC,IAAI,EAAE,gBAAgB;IACtB,QAAQ,EAAE;QACR,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,mBAAmB;KAC/B;IACD,IAAI,EAAE;QACJ,WAAW,EAAE,KAAK;QAClB,iBAAiB,EAAE;YACjB;gBACE,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,CAAC;gBACV,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,eAAe,EAAE;oBACf,IAAI,EAAE;wBACJ,gBAAgB,EAAE,EAAE;wBACpB,WAAW,EAAE,CAAC,eAAe,CAAC;wBAC9B,UAAU,EAAE,OAAO;wBACnB,SAAS,EAAE;4BACT,QAAQ,EAAE;gCACR,OAAO,EAAE,EAAE;6BACZ;yBACF;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,GAAG,EAAE,uBAAuB;IAC5B,OAAO,EAAE,8BAA8B;CACxC,CAAC;AAEF,MAAM,CAAN,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,qCAAe,CAAA;IACf,2CAAqB,CAAA;AACvB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,QAG7B","sourcesContent":["import { K8sResourceKind, Taint } from '@console/internal/module/k8s';\n\nexport const minSelectedNode = 3;\nexport const ocsTaint: Taint = {\n  key: 'node.ocs.openshift.io/storage',\n  value: 'true',\n  effect: 'NoSchedule',\n};\nObject.freeze(ocsTaint);\n\nexport const storageClassTooltip =\n  'The Storage Class will be used to request storage from the underlying infrastructure to create the backing persistent volumes that will be used to provide the OpenShift Container Storage (OCS) service.';\nexport const labelTooltip =\n  'The backing storage requested will be higher as it will factor in the requested capacity, replica factor, and fault tolerant costs associated with the requested capacity.';\n\nexport const ocsRequestData: K8sResourceKind = {\n  apiVersion: 'ocs.openshift.io/v1',\n  kind: 'StorageCluster',\n  metadata: {\n    name: 'ocs-storagecluster',\n    namespace: 'openshift-storage',\n  },\n  spec: {\n    manageNodes: false,\n    storageDeviceSets: [\n      {\n        name: 'ocs-deviceset',\n        count: 1,\n        replica: 3,\n        resources: {},\n        placement: {},\n        portable: true,\n        dataPVCTemplate: {\n          spec: {\n            storageClassName: '',\n            accessModes: ['ReadWriteOnce'],\n            volumeMode: 'Block',\n            resources: {\n              requests: {\n                storage: '',\n              },\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n\nexport const infraProvisionerMap = {\n  aws: 'kubernetes.io/aws-ebs',\n  vsphere: 'kubernetes.io/vsphere-volume',\n};\n\nexport enum defaultRequestSize {\n  BAREMETAL = '1',\n  NON_BAREMETAL = '2Ti',\n}\n"]}]}