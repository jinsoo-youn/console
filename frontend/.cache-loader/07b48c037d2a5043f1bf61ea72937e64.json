{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-summary.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-summary.tsx","mtime":1615298458650},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { deviceLabel, deviceKey } from '../constants';\nimport { BootOrderEmptySummary } from './boot-order-empty-summary';\n// NOTE(yaacov): using <ol> because '@patternfly/react-core' <List> currently miss isOrder parameter.\nexport const BootOrderSummary = ({ devices }) => {\n    const sources = _.sortBy(devices.filter((device) => device.value.bootOrder), 'value.bootOrder');\n    return (React.createElement(React.Fragment, null, sources.length === 0 ? (React.createElement(BootOrderEmptySummary, { devices: devices })) : (React.createElement(\"ol\", null, sources.map((source) => (React.createElement(\"li\", { key: deviceKey(source) }, deviceLabel(source))))))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-summary.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/boot-order/summary/boot-order-summary.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACtD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AAEnE,qGAAqG;AACrG,MAAM,CAAC,MAAM,gBAAgB,GAAoC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC/E,MAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CACtB,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAClD,iBAAiB,CAClB,CAAC;IAEF,OAAO,CACL,0CACG,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CACtB,oBAAC,qBAAqB,IAAC,OAAO,EAAE,OAAO,GAAI,CAC5C,CAAC,CAAC,CAAC,CACF,gCACG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACvB,4BAAI,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,IAAG,WAAW,CAAC,MAAM,CAAC,CAAM,CACvD,CAAC,CACC,CACN,CACA,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { BootableDeviceType } from '../../../types';\nimport { deviceLabel, deviceKey } from '../constants';\nimport { BootOrderEmptySummary } from './boot-order-empty-summary';\n\n// NOTE(yaacov): using <ol> because '@patternfly/react-core' <List> currently miss isOrder parameter.\nexport const BootOrderSummary: React.FC<BootOrderSummaryProps> = ({ devices }) => {\n  const sources = _.sortBy(\n    devices.filter((device) => device.value.bootOrder),\n    'value.bootOrder',\n  );\n\n  return (\n    <>\n      {sources.length === 0 ? (\n        <BootOrderEmptySummary devices={devices} />\n      ) : (\n        <ol>\n          {sources.map((source) => (\n            <li key={deviceKey(source)}>{deviceLabel(source)}</li>\n          ))}\n        </ol>\n      )}\n    </>\n  );\n};\n\nexport type BootOrderSummaryProps = {\n  devices: BootableDeviceType[];\n};\n"]}]}