{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/console-notifier.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/console-notifier.tsx","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { FLAGS } from '@console/shared';\nimport { connectToFlags } from '../reducers/features';\nimport { Firehose } from './utils';\nimport { referenceForModel } from '../module/k8s';\nimport { ConsoleNotificationModel } from '../models/index';\nconst ConsoleNotifier_ = ({ obj, location }) => {\n    if (_.isEmpty(obj)) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null, _.map(_.get(obj, 'data'), (notification) => notification.spec.location === location ||\n        notification.spec.location === 'BannerTopBottom' ? (React.createElement(\"div\", { key: notification.metadata.uid, className: \"co-global-notification\", style: {\n            backgroundColor: notification.spec.backgroundColor,\n            color: notification.spec.color,\n        }, \"data-test\": `${notification.metadata.name}-${notification.spec.location}` },\n        React.createElement(\"div\", { className: \"co-global-notification__content\" },\n            React.createElement(\"p\", { className: \"co-global-notification__text\" },\n                notification.spec.text,\n                ' ',\n                _.get(notification.spec, ['link', 'href']) && (React.createElement(\"a\", { href: notification.spec.link.href, target: \"_blank\", rel: \"noopener noreferrer\", className: \"co-external-link\", style: { color: notification.spec.color } }, notification.spec.link.text || 'More info')))))) : null)));\n};\nConsoleNotifier_.displayName = 'ConsoleNotifier_';\nexport const ConsoleNotifier = connectToFlags(FLAGS.CONSOLE_NOTIFICATION)((_a) => {\n    var { flags } = _a, props = __rest(_a, [\"flags\"]);\n    const resources = flags[FLAGS.CONSOLE_NOTIFICATION]\n        ? [\n            {\n                kind: referenceForModel(ConsoleNotificationModel),\n                isList: true,\n                prop: 'obj',\n            },\n        ]\n        : [];\n    return (React.createElement(Firehose, { resources: resources },\n        React.createElement(ConsoleNotifier_, Object.assign({}, props))));\n});\nConsoleNotifier.displayName = 'ConsoleNotifier';\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/console-notifier.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/console-notifier.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAkB,MAAM,SAAS,CAAC;AACnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE3D,MAAM,gBAAgB,GAAmC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC7E,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,0CACG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,CAC1C,YAAY,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ;QACvC,YAAY,CAAC,IAAI,CAAC,QAAQ,KAAK,iBAAiB,CAAC,CAAC,CAAC,CACjD,6BACE,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC,GAAG,EAC9B,SAAS,EAAC,wBAAwB,EAClC,KAAK,EAAE;YACL,eAAe,EAAE,YAAY,CAAC,IAAI,CAAC,eAAe;YAClD,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK;SAC/B,eACU,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;QAExE,6BAAK,SAAS,EAAC,iCAAiC;YAC9C,2BAAG,SAAS,EAAC,8BAA8B;gBACxC,YAAY,CAAC,IAAI,CAAC,IAAI;gBAAE,GAAG;gBAC3B,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAC7C,2BACE,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EACjC,MAAM,EAAC,QAAQ,EACf,GAAG,EAAC,qBAAqB,EACzB,SAAS,EAAC,kBAAkB,EAC5B,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAExC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,WAAW,CACzC,CACL,CACC,CACA,CACF,CACP,CAAC,CAAC,CAAC,IAAI,CACT,CACA,CACJ,CAAC;AACJ,CAAC,CAAC;AACF,gBAAgB,CAAC,WAAW,GAAG,kBAAkB,CAAC;AAElD,MAAM,CAAC,MAAM,eAAe,GAAG,cAAc,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAmB,EAAE,EAAE;QAAvB,EAAE,KAAK,OAAY,EAAV,6BAAQ;IAC1F,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,oBAAoB,CAAC;QACjD,CAAC,CAAC;YACE;gBACE,IAAI,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;gBACjD,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,KAAK;aACZ;SACF;QACH,CAAC,CAAC,EAAE,CAAC;IACP,OAAO,CACL,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;QAC5B,oBAAC,gBAAgB,oBAAM,KAA8B,EAAI,CAChD,CACZ,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,eAAe,CAAC,WAAW,GAAG,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport { FLAGS } from '@console/shared';\nimport { connectToFlags } from '../reducers/features';\nimport { Firehose, FirehoseResult } from './utils';\nimport { referenceForModel } from '../module/k8s';\nimport { ConsoleNotificationModel } from '../models/index';\n\nconst ConsoleNotifier_: React.FC<ConsoleNotifierProps> = ({ obj, location }) => {\n  if (_.isEmpty(obj)) {\n    return null;\n  }\n\n  return (\n    <>\n      {_.map(_.get(obj, 'data'), (notification) =>\n        notification.spec.location === location ||\n        notification.spec.location === 'BannerTopBottom' ? (\n          <div\n            key={notification.metadata.uid}\n            className=\"co-global-notification\"\n            style={{\n              backgroundColor: notification.spec.backgroundColor,\n              color: notification.spec.color,\n            }}\n            data-test={`${notification.metadata.name}-${notification.spec.location}`}\n          >\n            <div className=\"co-global-notification__content\">\n              <p className=\"co-global-notification__text\">\n                {notification.spec.text}{' '}\n                {_.get(notification.spec, ['link', 'href']) && (\n                  <a\n                    href={notification.spec.link.href}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"co-external-link\"\n                    style={{ color: notification.spec.color }}\n                  >\n                    {notification.spec.link.text || 'More info'}\n                  </a>\n                )}\n              </p>\n            </div>\n          </div>\n        ) : null,\n      )}\n    </>\n  );\n};\nConsoleNotifier_.displayName = 'ConsoleNotifier_';\n\nexport const ConsoleNotifier = connectToFlags(FLAGS.CONSOLE_NOTIFICATION)(({ flags, ...props }) => {\n  const resources = flags[FLAGS.CONSOLE_NOTIFICATION]\n    ? [\n        {\n          kind: referenceForModel(ConsoleNotificationModel),\n          isList: true,\n          prop: 'obj',\n        },\n      ]\n    : [];\n  return (\n    <Firehose resources={resources}>\n      <ConsoleNotifier_ {...(props as ConsoleNotifierProps)} />\n    </Firehose>\n  );\n});\nConsoleNotifier.displayName = 'ConsoleNotifier';\n\ntype ConsoleNotifierProps = {\n  obj: FirehoseResult;\n  location: 'BannerTop' | 'BannerBottom' | 'BannerTopBottom';\n};\n"]}]}