{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal-resource-launcher.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal-resource-launcher.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport store from '@console/internal/redux';\nimport { Firehose, AccessDenied, history, MsgBox, Box, } from '@console/internal/components/utils';\nimport { ModalErrorContent } from '@console/internal/components/modals/error-modal';\nimport { createModal } from '@console/internal/components/factory';\nimport { RedExclamationCircleIcon } from '@console/shared';\nconst NotFound = ({ message }) => (React.createElement(Box, { className: \"text-center\" },\n    React.createElement(MsgBox, { title: \"Not Found\", detail: \"Requested resource not found.\" }),\n    _.isString(message) && (React.createElement(\"div\", { className: \"alert alert-danger text-left\" },\n        React.createElement(RedExclamationCircleIcon, null),\n        message))));\nconst ModalComponentWrapper = ({ Component, onClose, resourcesToProps, loadError, loaded, resources = {}, modalProps = {}, }) => {\n    if (loadError) {\n        const status = _.get(loadError, 'response.status');\n        let errorContent;\n        if (status === 404) {\n            errorContent = React.createElement(NotFound, { message: loadError.message });\n        }\n        if (status === 403) {\n            errorContent = React.createElement(AccessDenied, { message: loadError.message });\n        }\n        if (!loaded) {\n            return React.createElement(ModalErrorContent, { cancel: onClose, error: errorContent });\n        }\n    }\n    const resourceProps = resourcesToProps ? resourcesToProps(resources) || {} : resources;\n    return (React.createElement(Component, Object.assign({ onClose: onClose, onCancel: onClose, onHide: onClose }, modalProps, resourceProps)));\n};\nexport const createModalResourceLauncher = (Component, resources, resourcesToProps) => (props) => {\n    const getModalContainer = (onClose) => (React.createElement(Provider, { store: store },\n        React.createElement(Router, Object.assign({}, { history, basename: window.SERVER_FLAGS.basePath }),\n            React.createElement(Firehose, { resources: resources },\n                React.createElement(ModalComponentWrapper, { Component: Component, onClose: onClose, resourcesToProps: resourcesToProps, modalProps: props })))));\n    return createModal(getModalContainer);\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal-resource-launcher.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/modals/modal-resource-launcher.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAC5C,OAAO,EACL,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,MAAM,EACN,GAAG,GAGJ,MAAM,oCAAoC,CAAC;AAC5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,iDAAiD,CAAC;AACpF,OAAO,EAAE,WAAW,EAAqB,MAAM,sCAAsC,CAAC;AACtF,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE3D,MAAM,QAAQ,GAA4B,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CACzD,oBAAC,GAAG,IAAC,SAAS,EAAC,aAAa;IAC1B,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,MAAM,EAAC,+BAA+B,GAAG;IAClE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CACtB,6BAAK,SAAS,EAAC,8BAA8B;QAC3C,oBAAC,wBAAwB,OAAG;QAC3B,OAAO,CACJ,CACP,CACG,CACP,CAAC;AAEF,MAAM,qBAAqB,GAAyC,CAAC,EACnE,SAAS,EACT,OAAO,EACP,gBAAgB,EAChB,SAAS,EACT,MAAM,EACN,SAAS,GAAG,EAAE,EACd,UAAU,GAAG,EAAE,GAChB,EAAE,EAAE;IACH,IAAI,SAAS,EAAE;QACb,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;QACnD,IAAI,YAAY,CAAC;QACjB,IAAI,MAAM,KAAK,GAAG,EAAE;YAClB,YAAY,GAAG,oBAAC,QAAQ,IAAC,OAAO,EAAE,SAAS,CAAC,OAAO,GAAI,CAAC;SACzD;QACD,IAAI,MAAM,KAAK,GAAG,EAAE;YAClB,YAAY,GAAG,oBAAC,YAAY,IAAC,OAAO,EAAE,SAAS,CAAC,OAAO,GAAI,CAAC;SAC7D;QAED,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,oBAAC,iBAAiB,IAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,GAAI,CAAC;SACpE;KACF;IAED,MAAM,aAAa,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAEvF,OAAO,CACL,oBAAC,SAAS,kBACR,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,OAAO,EACjB,MAAM,EAAE,OAAO,IACX,UAAU,EACV,aAAa,EACjB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAgC,CACtE,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;IACb,MAAM,iBAAiB,GAAsB,CAAC,OAAO,EAAE,EAAE,CAAC,CACxD,oBAAC,QAAQ,IAAC,KAAK,EAAE,KAAK;QACpB,oBAAC,MAAM,oBAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC7D,oBAAC,QAAQ,IAAC,SAAS,EAAE,SAAS;gBAC5B,oBAAC,qBAAqB,IACpB,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,OAAO,EAChB,gBAAgB,EAAE,gBAAgB,EAClC,UAAU,EAAE,KAAK,GACjB,CACO,CACJ,CACA,CACZ,CAAC;IACF,OAAO,WAAW,CAAC,iBAAiB,CAAC,CAAC;AACxC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport store from '@console/internal/redux';\nimport {\n  Firehose,\n  AccessDenied,\n  history,\n  MsgBox,\n  Box,\n  FirehoseResource,\n  FirehoseResult,\n} from '@console/internal/components/utils';\nimport { ModalErrorContent } from '@console/internal/components/modals/error-modal';\nimport { createModal, GetModalContainer } from '@console/internal/components/factory';\nimport { RedExclamationCircleIcon } from '@console/shared';\n\nconst NotFound: React.FC<NotFoundProps> = ({ message }) => (\n  <Box className=\"text-center\">\n    <MsgBox title=\"Not Found\" detail=\"Requested resource not found.\" />\n    {_.isString(message) && (\n      <div className=\"alert alert-danger text-left\">\n        <RedExclamationCircleIcon />\n        {message}\n      </div>\n    )}\n  </Box>\n);\n\nconst ModalComponentWrapper: React.FC<ModalComponentWrapperProps> = ({\n  Component,\n  onClose,\n  resourcesToProps,\n  loadError,\n  loaded,\n  resources = {},\n  modalProps = {},\n}) => {\n  if (loadError) {\n    const status = _.get(loadError, 'response.status');\n    let errorContent;\n    if (status === 404) {\n      errorContent = <NotFound message={loadError.message} />;\n    }\n    if (status === 403) {\n      errorContent = <AccessDenied message={loadError.message} />;\n    }\n\n    if (!loaded) {\n      return <ModalErrorContent cancel={onClose} error={errorContent} />;\n    }\n  }\n\n  const resourceProps = resourcesToProps ? resourcesToProps(resources) || {} : resources;\n\n  return (\n    <Component\n      onClose={onClose}\n      onCancel={onClose}\n      onHide={onClose}\n      {...modalProps}\n      {...resourceProps}\n    />\n  );\n};\n\nexport const createModalResourceLauncher: CreateModalResourceLauncher = (\n  Component,\n  resources,\n  resourcesToProps,\n) => (props) => {\n  const getModalContainer: GetModalContainer = (onClose) => (\n    <Provider store={store}>\n      <Router {...{ history, basename: window.SERVER_FLAGS.basePath }}>\n        <Firehose resources={resources}>\n          <ModalComponentWrapper\n            Component={Component}\n            onClose={onClose}\n            resourcesToProps={resourcesToProps}\n            modalProps={props}\n          />\n        </Firehose>\n      </Router>\n    </Provider>\n  );\n  return createModal(getModalContainer);\n};\n\ntype NotFoundProps = {\n  message: string;\n};\n\ntype ResourcesToProps = (res: { [key: string]: FirehoseResult }) => { [key: string]: any };\n\ntype CreateModalResourceLauncher = (\n  Component: React.ComponentType<any>,\n  resources: FirehoseResource[],\n  resourcesToProps?: ResourcesToProps,\n) => (props: any) => { result: Promise<any> };\n\ntype ModalComponentWrapperProps = {\n  loadError?: any;\n  loaded?: boolean;\n  Component: React.ComponentType<any>;\n  onClose: (e?: React.SyntheticEvent) => void;\n  resourcesToProps?: ResourcesToProps;\n  modalProps?: { [key: string]: any };\n  resources?: { [key: string]: FirehoseResult };\n};\n"]}]}