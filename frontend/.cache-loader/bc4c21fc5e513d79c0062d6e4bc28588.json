{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/EventSourceLink.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/EventSourceLink.tsx","mtime":1616735742410},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { observer } from '@console/topology';\nimport { getTopologyResourceObject, BaseEdge } from '@console/dev-console/src/components/topology';\nimport './EventSourceLink.scss';\nconst EventSourceLink = (_a) => {\n    var { element, targetDragRef, children } = _a, others = __rest(_a, [\"element\", \"targetDragRef\", \"children\"]);\n    const resourceObj = getTopologyResourceObject(element.getSource().getData());\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n        group: resourceModel.apiGroup,\n        verb: 'update',\n        resource: resourceModel.plural,\n        name: resourceObj.metadata.name,\n        namespace: resourceObj.metadata.namespace,\n    });\n    const markerPoint = element.getEndPoint();\n    const edgeClasses = classNames('odc-event-source-link', { 'odc-m-editable': editAccess });\n    return (React.createElement(BaseEdge, Object.assign({ className: edgeClasses, element: element }, others),\n        React.createElement(\"circle\", { className: \"topology-connector-arrow\", ref: editAccess ? targetDragRef : null, cx: markerPoint.x, cy: markerPoint.y, r: 6 })));\n};\nexport default observer(EventSourceLink);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/EventSourceLink.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/knative-plugin/src/topology/components/edges/EventSourceLink.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,UAAU,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAQ,QAAQ,EAA4C,MAAM,mBAAmB,CAAC;AAC7F,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,MAAM,8CAA8C,CAAC;AACnG,OAAO,wBAAwB,CAAC;AAQhC,MAAM,eAAe,GAAmC,CAAC,EAKxD,EAAE,EAAE;QALoD,EACvD,OAAO,EACP,aAAa,EACb,QAAQ,OAET,EADC,6DAAS;IAET,MAAM,WAAW,GAAG,yBAAyB,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7E,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1D,MAAM,UAAU,GAAG,eAAe,CAAC;QACjC,KAAK,EAAE,aAAa,CAAC,QAAQ;QAC7B,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE,aAAa,CAAC,MAAM;QAC9B,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI;QAC/B,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,SAAS;KAC1C,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;IAC1C,MAAM,WAAW,GAAG,UAAU,CAAC,uBAAuB,EAAE,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1F,OAAO,CACL,oBAAC,QAAQ,kBAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,IAAM,MAAM;QAC5D,gCACE,SAAS,EAAC,0BAA0B,EACpC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EACtC,EAAE,EAAE,WAAW,CAAC,CAAC,EACjB,EAAE,EAAE,WAAW,CAAC,CAAC,EACjB,CAAC,EAAE,CAAC,GACJ,CACO,CACZ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { Edge, observer, WithSourceDragProps, WithTargetDragProps } from '@console/topology';\nimport { getTopologyResourceObject, BaseEdge } from '@console/dev-console/src/components/topology';\nimport './EventSourceLink.scss';\n\ntype EventSourceLinkProps = {\n  element: Edge;\n  dragging: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps;\n\nconst EventSourceLink: React.FC<EventSourceLinkProps> = ({\n  element,\n  targetDragRef,\n  children,\n  ...others\n}) => {\n  const resourceObj = getTopologyResourceObject(element.getSource().getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const editAccess = useAccessReview({\n    group: resourceModel.apiGroup,\n    verb: 'update',\n    resource: resourceModel.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const markerPoint = element.getEndPoint();\n  const edgeClasses = classNames('odc-event-source-link', { 'odc-m-editable': editAccess });\n  return (\n    <BaseEdge className={edgeClasses} element={element} {...others}>\n      <circle\n        className=\"topology-connector-arrow\"\n        ref={editAccess ? targetDragRef : null}\n        cx={markerPoint.x}\n        cy={markerPoint.y}\n        r={6}\n      />\n    </BaseEdge>\n  );\n};\n\nexport default observer(EventSourceLink);\n"]}]}