{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/queries.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/queries.ts","mtime":1615298458730},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export var OverviewQuery;\n(function (OverviewQuery) {\n    OverviewQuery[\"MEMORY_TOTAL\"] = \"MEMORY_TOTAL\";\n    OverviewQuery[\"MEMORY_UTILIZATION\"] = \"MEMORY_UTILIZATION\";\n    OverviewQuery[\"NETWORK_UTILIZATION\"] = \"NETWORK_UTILIZATION\";\n    OverviewQuery[\"NETWORK_IN_UTILIZATION\"] = \"NETWORK_IN_UTILIZATION\";\n    OverviewQuery[\"NETWORK_OUT_UTILIZATION\"] = \"NETWORK_OUT_UTILIZATION\";\n    OverviewQuery[\"CPU_UTILIZATION\"] = \"CPU_UTILIZATION\";\n    OverviewQuery[\"CPU_TOTAL\"] = \"CPU_TOTAL\";\n    OverviewQuery[\"STORAGE_UTILIZATION\"] = \"STORAGE_UTILIZATION\";\n    OverviewQuery[\"STORAGE_TOTAL\"] = \"STORAGE_TOTAL\";\n    OverviewQuery[\"PODS_BY_CPU\"] = \"PODS_BY_CPU\";\n    OverviewQuery[\"PODS_BY_MEMORY\"] = \"PODS_BY_MEMORY\";\n    OverviewQuery[\"PODS_BY_STORAGE\"] = \"PODS_BY_STORAGE\";\n    OverviewQuery[\"PODS_BY_NETWORK_IN\"] = \"PODS_BY_NETWORK_IN\";\n    OverviewQuery[\"PODS_BY_NETWORK_OUT\"] = \"PODS_BY_NETWORK_OUT\";\n    OverviewQuery[\"NODES_BY_CPU\"] = \"NODES_BY_CPU\";\n    OverviewQuery[\"NODES_BY_MEMORY\"] = \"NODES_BY_MEMORY\";\n    OverviewQuery[\"NODES_BY_STORAGE\"] = \"NODES_BY_STORAGE\";\n    OverviewQuery[\"NODES_BY_NETWORK_IN\"] = \"NODES_BY_NETWORK_IN\";\n    OverviewQuery[\"NODES_BY_NETWORK_OUT\"] = \"NODES_BY_NETWORK_OUT\";\n    OverviewQuery[\"NODES_BY_PODS\"] = \"NODES_BY_PODS\";\n    OverviewQuery[\"PROJECTS_BY_CPU\"] = \"PROJECTS_BY_CPU\";\n    OverviewQuery[\"PROJECTS_BY_MEMORY\"] = \"PROJECTS_BY_MEMORY\";\n    OverviewQuery[\"PROJECTS_BY_STORAGE\"] = \"PROJECTS_BY_STORAGE\";\n    OverviewQuery[\"PROJECTS_BY_NETWORK_IN\"] = \"PROJECTS_BY_NETWORK_IN\";\n    OverviewQuery[\"PROJECTS_BY_NETWORK_OUT\"] = \"PROJECTS_BY_NETWORK_OUT\";\n    OverviewQuery[\"PROJECTS_BY_PODS\"] = \"PROJECTS_BY_PODS\";\n    OverviewQuery[\"POD_UTILIZATION\"] = \"POD_UTILIZATION\";\n})(OverviewQuery || (OverviewQuery = {}));\nconst top25Queries = {\n    [OverviewQuery.PODS_BY_CPU]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)))',\n    [OverviewQuery.PODS_BY_MEMORY]: 'topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)))',\n    [OverviewQuery.PODS_BY_STORAGE]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)))',\n    [OverviewQuery.PODS_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)))',\n    [OverviewQuery.PODS_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)))',\n    [OverviewQuery.NODES_BY_CPU]: 'topk(25, sort_desc(avg_over_time(instance:node_cpu:rate:sum[5m])))',\n    [OverviewQuery.NODES_BY_MEMORY]: 'topk(25, sort_desc(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes))',\n    [OverviewQuery.NODES_BY_STORAGE]: 'topk(25, sort_desc(avg_over_time(instance:node_filesystem_usage:sum[5m])))',\n    [OverviewQuery.NODES_BY_PODS]: 'topk(25, sort_desc(sum(avg_over_time(kube_pod_info[5m])) BY (node)))',\n    [OverviewQuery.NODES_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (node)))',\n    [OverviewQuery.NODES_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (node)))',\n    [OverviewQuery.PROJECTS_BY_CPU]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace)))',\n    [OverviewQuery.PROJECTS_BY_MEMORY]: 'topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace)))',\n    [OverviewQuery.PROJECTS_BY_STORAGE]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace)))',\n    [OverviewQuery.PROJECTS_BY_PODS]: 'topk(25, sort_desc(sum(avg_over_time(kube_pod_info[5m])) BY (namespace)))',\n    [OverviewQuery.PROJECTS_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace)))',\n    [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace)))',\n};\nconst overviewQueries = {\n    [OverviewQuery.MEMORY_TOTAL]: 'sum(node_memory_MemTotal_bytes)',\n    [OverviewQuery.MEMORY_UTILIZATION]: 'sum(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)',\n    [OverviewQuery.NETWORK_UTILIZATION]: 'sum(instance:node_network_transmit_bytes_excluding_lo:rate1m+instance:node_network_receive_bytes_excluding_lo:rate1m)',\n    // [OverviewQuery.CPU_UTILIZATION]: 'cluster:cpu_usage_cores:sum',\n    [OverviewQuery.CPU_UTILIZATION]: 'sum(sum by (cpu) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode!=\"idle\"}[1m])))',\n    // [OverviewQuery.CPU_TOTAL]: 'sum(cluster:capacity_cpu_cores:sum)',\n    [OverviewQuery.CPU_TOTAL]: 'sum(sum by (cpu) (rate(node_cpu_seconds_total{job=\"node-exporter\"}[1m])))',\n    [OverviewQuery.STORAGE_UTILIZATION]: '(sum(node_filesystem_size_bytes) - sum(node_filesystem_free_bytes))',\n    [OverviewQuery.STORAGE_TOTAL]: 'sum(node_filesystem_size_bytes)',\n    [OverviewQuery.POD_UTILIZATION]: 'count(kube_pod_info)',\n    [OverviewQuery.NETWORK_IN_UTILIZATION]: 'sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\"}[5m]))',\n    [OverviewQuery.NETWORK_OUT_UTILIZATION]: 'sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\"}[5m]))',\n};\nexport const utilizationQueries = {\n    [OverviewQuery.CPU_UTILIZATION]: {\n        utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION],\n        total: overviewQueries[OverviewQuery.CPU_TOTAL],\n    },\n    [OverviewQuery.MEMORY_UTILIZATION]: {\n        utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION],\n        total: overviewQueries[OverviewQuery.MEMORY_TOTAL],\n    },\n    [OverviewQuery.STORAGE_UTILIZATION]: {\n        utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION],\n        total: overviewQueries[OverviewQuery.STORAGE_TOTAL],\n    },\n    [OverviewQuery.POD_UTILIZATION]: {\n        utilization: overviewQueries[OverviewQuery.POD_UTILIZATION],\n    },\n};\nexport const multilineQueries = {\n    [OverviewQuery.NETWORK_UTILIZATION]: [\n        { query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION], desc: 'In' },\n        { query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION], desc: 'Out' },\n    ],\n};\nexport const top25ConsumerQueries = {\n    [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU],\n    [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY],\n    [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE],\n    [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN],\n    [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT],\n    [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU],\n    [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY],\n    [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE],\n    [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS],\n    [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN],\n    [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT],\n    [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU],\n    [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY],\n    [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE],\n    [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS],\n    [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN],\n    [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT],\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/queries.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/dashboard/dashboards-page/cluster-dashboard/queries.ts"],"names":[],"mappings":"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","sourcesContent":["export enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)))',\n  [OverviewQuery.PODS_BY_MEMORY]: 'topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)))',\n  [OverviewQuery.PODS_BY_STORAGE]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)))',\n  [OverviewQuery.PODS_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)))',\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)))',\n  [OverviewQuery.NODES_BY_CPU]: 'topk(25, sort_desc(avg_over_time(instance:node_cpu:rate:sum[5m])))',\n  [OverviewQuery.NODES_BY_MEMORY]: 'topk(25, sort_desc(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes))',\n  [OverviewQuery.NODES_BY_STORAGE]: 'topk(25, sort_desc(avg_over_time(instance:node_filesystem_usage:sum[5m])))',\n  [OverviewQuery.NODES_BY_PODS]: 'topk(25, sort_desc(sum(avg_over_time(kube_pod_info[5m])) BY (node)))',\n  [OverviewQuery.NODES_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (node)))',\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (node)))',\n  [OverviewQuery.PROJECTS_BY_CPU]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace)))',\n  [OverviewQuery.PROJECTS_BY_MEMORY]: 'topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace)))',\n  [OverviewQuery.PROJECTS_BY_STORAGE]: 'topk(25, sort_desc(sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace)))',\n  [OverviewQuery.PROJECTS_BY_PODS]: 'topk(25, sort_desc(sum(avg_over_time(kube_pod_info[5m])) BY (namespace)))',\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: 'topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace)))',\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: 'topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace)))',\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: 'sum(node_memory_MemTotal_bytes)',\n  [OverviewQuery.MEMORY_UTILIZATION]: 'sum(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)',\n  [OverviewQuery.NETWORK_UTILIZATION]: 'sum(instance:node_network_transmit_bytes_excluding_lo:rate1m+instance:node_network_receive_bytes_excluding_lo:rate1m)',\n  // [OverviewQuery.CPU_UTILIZATION]: 'cluster:cpu_usage_cores:sum',\n  [OverviewQuery.CPU_UTILIZATION]: 'sum(sum by (cpu) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode!=\"idle\"}[1m])))',\n  // [OverviewQuery.CPU_TOTAL]: 'sum(cluster:capacity_cpu_cores:sum)',\n  [OverviewQuery.CPU_TOTAL]: 'sum(sum by (cpu) (rate(node_cpu_seconds_total{job=\"node-exporter\"}[1m])))',\n  [OverviewQuery.STORAGE_UTILIZATION]: '(sum(node_filesystem_size_bytes) - sum(node_filesystem_free_bytes))',\n  [OverviewQuery.STORAGE_TOTAL]: 'sum(node_filesystem_size_bytes)',\n  [OverviewQuery.POD_UTILIZATION]: 'count(kube_pod_info)',\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: 'sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\"}[5m]))',\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: 'sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\"}[5m]))',\n};\n\nexport const utilizationQueries = {\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION],\n    total: overviewQueries[OverviewQuery.CPU_TOTAL],\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION],\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL],\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION],\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL],\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION],\n  },\n};\n\nexport const multilineQueries = {\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    { query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION], desc: 'In' },\n    { query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION], desc: 'Out' },\n  ],\n};\n\nexport const top25ConsumerQueries = {\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU],\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY],\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE],\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN],\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT],\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU],\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY],\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE],\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS],\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN],\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT],\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU],\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY],\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE],\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS],\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN],\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT],\n};\n"]}]}