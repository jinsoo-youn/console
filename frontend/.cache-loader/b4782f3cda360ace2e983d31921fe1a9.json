{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-replica-set.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-replica-set.tsx","mtime":1616735742470},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { DetailsItem, Kebab, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedReplicaSetModel } from '../../models';\nexport const menuActions = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedReplicaSetModel), EditHealthChecks, ...Kebab.factory.common];\nconst kind = FederatedReplicaSetModel.kind;\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\nconst FederatedReplicaSetTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortFunc: 'replicasetNumScheduled',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n            sortField: 'metadata.labels',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n            sortField: 'spec.selector',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[5] },\n        },\n    ];\n};\nFederatedReplicaSetTableHeader.displayName = 'FederatedReplicaSetTableHeader';\nconst FederatedReplicaSetTableRow = ({ obj: replicaset, index, key, style }) => {\n    return (React.createElement(TableRow, { id: replicaset.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: replicaset.metadata.name, namespace: replicaset.metadata.namespace, title: replicaset.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: replicaset.metadata.namespace, title: replicaset.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Link, { to: `/k8s/ns/${replicaset.metadata.namespace}/replicasets/${replicaset.metadata.name}/pods`, title: \"pods\" },\n                replicaset.status.currentNumberScheduled,\n                \" of \",\n                replicaset.status.desiredNumberScheduled,\n                \" pods\")),\n        React.createElement(TableData, { className: tableColumnClasses[3] },\n            React.createElement(LabelList, { kind: kind, labels: replicaset.metadata.labels })),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(Selector, { selector: replicaset.spec.selector, namespace: replicaset.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[5] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: replicaset }))));\n};\nexport const FederatedReplicaSetDetailsList = ({ ds }) => {\n    const { t } = useTranslation();\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38'), obj: ds, path: \"status.currentNumberScheduled\" }),\n        React.createElement(DetailsItem, { label: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39'), obj: ds, path: \"status.desiredNumberScheduled\" })));\n};\nconst FederatedReplicaSetDetails = ({ obj: replicaset }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: `${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_31') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}` }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: replicaset, showPodSelector: true, showNodeSelector: true, showTolerations: true })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(FederatedReplicaSetDetailsList, { ds: replicaset })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1') }))));\n};\nconst { details, editYaml, events } = navFactory;\nexport const FederatedReplicaSets = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"Federated Replica Sets\", Header: FederatedReplicaSetTableHeader.bind(null, t), Row: FederatedReplicaSetTableRow, virtualize: true }));\n};\nexport const FederatedReplicaSetsPage = props => React.createElement(ListPage, Object.assign({ canCreate: true, ListComponent: FederatedReplicaSets, kind: kind }, props));\nexport const FederatedReplicaSetsDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(FederatedReplicaSetDetails)), editYaml(), events(ResourceEventStream)] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-replica-set.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/federated-replica-set.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\n\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { DetailsItem, Kebab, KebabAction, detailsPage, LabelList, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading, Selector } from '../utils';\nimport { ResourceEventStream } from '../events';\nimport { FederatedReplicaSetModel } from '../../models';\n\nexport const menuActions: KebabAction[] = [AddHealthChecks, Kebab.factory.AddStorage, ...Kebab.getExtensionsActionsForKind(FederatedReplicaSetModel), EditHealthChecks, ...Kebab.factory.common];\n\nconst kind = FederatedReplicaSetModel.kind;\n\nconst tableColumnClasses = ['', '', classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-u-w-16-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), classNames('pf-m-hidden', 'pf-m-visible-on-lg'), Kebab.columnClass];\n\nconst FederatedReplicaSetTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortFunc: 'replicasetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_15'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_16'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nFederatedReplicaSetTableHeader.displayName = 'FederatedReplicaSetTableHeader';\n\nconst FederatedReplicaSetTableRow: RowFunction<K8sResourceKind> = ({ obj: replicaset, index, key, style }) => {\n  return (\n    <TableRow id={replicaset.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={replicaset.metadata.name} namespace={replicaset.metadata.namespace} title={replicaset.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={replicaset.metadata.namespace} title={replicaset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link to={`/k8s/ns/${replicaset.metadata.namespace}/replicasets/${replicaset.metadata.name}/pods`} title=\"pods\">\n          {replicaset.status.currentNumberScheduled} of {replicaset.status.desiredNumberScheduled} pods\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={replicaset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={replicaset.spec.selector} namespace={replicaset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={replicaset} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const FederatedReplicaSetDetailsList: React.FC<FederatedReplicaSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n  <dl className=\"co-m-pane__details\">\n    <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_38')} obj={ds} path=\"status.currentNumberScheduled\" />\n    <DetailsItem label={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_39')} obj={ds} path=\"status.desiredNumberScheduled\" />\n  </dl>\n);}\n\nconst FederatedReplicaSetDetails: React.FC<FederatedReplicaSetDetailsProps> = ({ obj: replicaset }) => {\n  const { t } = useTranslation();\n  return (\n  <>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={`${t('COMMON:MSG_MAIN_DIV1_3', { 0: t('COMMON:MSG_LNB_MENU_31') })} ${t('COMMON:MSG_DETAILS_TABOVERVIEW_1')}`} />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <ResourceSummary resource={replicaset} showPodSelector showNodeSelector showTolerations />\n        </div>\n        <div className=\"col-lg-6\">\n          <FederatedReplicaSetDetailsList ds={replicaset} />\n        </div>\n      </div>\n    </div>\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_CONTAINERS_TABLEHEADER_1')} />\n    </div>\n  </>\n);}\n\nconst { details, editYaml, events } = navFactory;\nexport const FederatedReplicaSets: React.FC = props => {\n  const { t } = useTranslation();\n  return <Table {...props} aria-label=\"Federated Replica Sets\" Header={FederatedReplicaSetTableHeader.bind(null, t)} Row={FederatedReplicaSetTableRow} virtualize />;\n}\n\nexport const FederatedReplicaSetsPage: React.FC<FederatedReplicaSetsPageProps> = props => <ListPage canCreate={true} ListComponent={FederatedReplicaSets} kind={kind} {...props} />;\n\nexport const FederatedReplicaSetsDetailsPage: React.FC<FederatedReplicaSetsDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(FederatedReplicaSetDetails)), editYaml(), events(ResourceEventStream)]} />;\n\ntype FederatedReplicaSetDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype FederatedReplicaSetDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype FederatedReplicaSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype FederatedReplicaSetsDetailsPageProps = {\n  match: any;\n};\n"]}]}