{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dnd-list/dnd-data-list-item.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dnd-list/dnd-data-list-item.tsx","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { MinusCircleIcon, PficonDragdropIcon } from '@patternfly/react-icons';\nimport { DataListItem, DataListItemRow, DataListItemCells, DataListCell, } from '@patternfly/react-core';\nimport { useDrag, useDrop } from 'react-dnd';\nconst DNDDataListItemTypeName = 'dnd-row';\nconst DNDDataListCellMoveStyle = { cursor: 'move' };\nconst DNDDataListCellSDeleteStyle = { cursor: 'pointer' };\nexport const DNDDataListItem = (_a) => {\n    var { index, onDelete, onMove, 'aria-labelledby': ariaLabelledby, children } = _a, props = __rest(_a, [\"index\", \"onDelete\", \"onMove\", 'aria-labelledby', \"children\"]);\n    // Create a drag item copy.\n    const [, drag, preview] = useDrag({\n        item: { type: DNDDataListItemTypeName, id: `${DNDDataListItemTypeName}-${index}`, index },\n    });\n    // Move item when hover over onoter item.\n    const [{ opacity }, drop] = useDrop({\n        accept: DNDDataListItemTypeName,\n        collect: (monitor) => ({\n            opacity: monitor.isOver() ? 0 : 1,\n        }),\n        hover(item) {\n            if (item.index === index) {\n                return;\n            }\n            onMove(item.index, index);\n            item.index = index;\n        },\n    });\n    // Action when item is focused and key is pressed:\n    // ArrowUp:   move item one order index down.\n    // ArrowDown: move item one order index up.\n    // '-':       delete an item.\n    const onKeyDown = (e) => {\n        switch (e.key) {\n            case 'ArrowUp':\n                if (index > 0)\n                    onMove(index, index - 1);\n                break;\n            case 'ArrowDown':\n                onMove(index, index + 1);\n                break;\n            case '-':\n                onDelete(index);\n                break;\n            default:\n            // We only accept up, down and minus.\n        }\n    };\n    const cellKey = (i) => `item-${i}`;\n    const dataListCell = [\n        React.createElement(DataListCell, { isFilled: false, key: cellKey('drag') },\n            React.createElement(\"div\", { ref: drag, style: DNDDataListCellMoveStyle },\n                React.createElement(PficonDragdropIcon, null))),\n        ...React.Children.map(children, (cell, i) => (React.createElement(DataListCell, { width: 1, key: cellKey(i) }, cell))),\n        React.createElement(DataListCell, { isFilled: false, alignRight: true, key: cellKey('delete'), style: DNDDataListCellSDeleteStyle, onClick: () => onDelete(index) },\n            React.createElement(MinusCircleIcon, null)),\n    ];\n    return (React.createElement(\"div\", { ref: (node) => preview(drop(node)), style: { opacity } },\n        React.createElement(DataListItem, Object.assign({ tabIndex: 0, \"aria-labelledby\": ariaLabelledby, onKeyDown: onKeyDown }, props),\n            React.createElement(DataListItemRow, null,\n                React.createElement(DataListItemCells, { dataListCells: dataListCell })))));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dnd-list/dnd-data-list-item.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/components/dnd-list/dnd-data-list-item.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MinusCircleIcon, PficonDragdropIcon } from '@patternfly/react-icons';\nimport {\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  DataListCell,\n  DataListItemProps,\n} from '@patternfly/react-core';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst DNDDataListItemTypeName = 'dnd-row';\nconst DNDDataListCellMoveStyle = { cursor: 'move' };\nconst DNDDataListCellSDeleteStyle = { cursor: 'pointer' };\n\nexport interface DNDDataListItemProps extends DataListItemProps {\n  /** Order index of rendered item. */\n  index: number;\n  /** Action when delete icon is pressed. */\n  onDelete: (index: number) => void;\n  /** Action when item is moved from one order index to anoter. */\n  onMove: (index: number, toIndex: number) => void;\n}\n\nexport const DNDDataListItem: React.FC<DNDDataListItemProps> = ({\n  index,\n  onDelete,\n  onMove,\n  'aria-labelledby': ariaLabelledby,\n  children,\n  ...props\n}) => {\n  // Create a drag item copy.\n  const [, drag, preview] = useDrag({\n    item: { type: DNDDataListItemTypeName, id: `${DNDDataListItemTypeName}-${index}`, index },\n  });\n  // Move item when hover over onoter item.\n  const [{ opacity }, drop] = useDrop({\n    accept: DNDDataListItemTypeName,\n    collect: (monitor) => ({\n      opacity: monitor.isOver() ? 0 : 1,\n    }),\n    hover(item: any) {\n      if (item.index === index) {\n        return;\n      }\n\n      onMove(item.index, index);\n      item.index = index;\n    },\n  });\n\n  // Action when item is focused and key is pressed:\n  // ArrowUp:   move item one order index down.\n  // ArrowDown: move item one order index up.\n  // '-':       delete an item.\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (index > 0) onMove(index, index - 1);\n        break;\n      case 'ArrowDown':\n        onMove(index, index + 1);\n        break;\n      case '-':\n        onDelete(index);\n        break;\n      default:\n      // We only accept up, down and minus.\n    }\n  };\n\n  const cellKey = (i: number | string) => `item-${i}`;\n  const dataListCell = [\n    <DataListCell isFilled={false} key={cellKey('drag')}>\n      <div ref={drag} style={DNDDataListCellMoveStyle}>\n        <PficonDragdropIcon />\n      </div>\n    </DataListCell>,\n    ...React.Children.map(children, (cell, i) => (\n      <DataListCell width={1} key={cellKey(i)}>\n        {cell}\n      </DataListCell>\n    )),\n    <DataListCell\n      isFilled={false}\n      alignRight\n      key={cellKey('delete')}\n      style={DNDDataListCellSDeleteStyle}\n      onClick={() => onDelete(index)}\n    >\n      <MinusCircleIcon />\n    </DataListCell>,\n  ];\n\n  return (\n    <div ref={(node) => preview(drop(node))} style={{ opacity }}>\n      <DataListItem tabIndex={0} aria-labelledby={ariaLabelledby} onKeyDown={onKeyDown} {...props}>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={dataListCell} />\n        </DataListItemRow>\n      </DataListItem>\n    </div>\n  );\n};\n"]}]}