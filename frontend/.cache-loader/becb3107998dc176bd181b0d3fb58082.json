{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-replicate.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-replicate.tsx","mtime":1617182414010},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { DetailsPage, ListPage, Table, TableRow, TableData } from '../factory';\nimport { Kebab, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageReplicateModel, ExternalRegistryModel, RegistryModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\nimport './IR.scss';\nexport const menuActions = [...Kebab.getExtensionsActionsForKind(ImageReplicateModel), ...Kebab.factory.common];\nconst kind = ImageReplicateModel.kind;\nconst tableColumnClasses = ['', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), Kebab.columnClass];\nconst ImageReplicateTableHeader = (t) => {\n    return [\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n            sortField: 'metadata.name',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[0] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n            sortField: 'metadata.namespace',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[1] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n            sortField: 'status.status',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[2] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_75'),\n            sortField: 'spec.fromImage.registryType',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[3] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_89'),\n            sortField: 'spec.fromImage.registryName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[4] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_76'),\n            sortField: 'spec.toImage.registryType',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[5] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_90'),\n            sortField: 'spec.toImage.registryName',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[6] },\n        },\n        {\n            title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n            sortField: 'metadata.creationTimestamp',\n            transforms: [sortable],\n            props: { className: tableColumnClasses[7] },\n        },\n        {\n            title: '',\n            props: { className: tableColumnClasses[8] },\n        },\n    ];\n};\nconst ImageReplicateTableRow = ({ obj: imagereplicate, index, key, style }) => {\n    var _a;\n    let FROM_NAMESPACE_NAME = `${imagereplicate.spec.fromImage.registryName}(${imagereplicate.spec.fromImage.registryNamespace})`;\n    let TO_NAMESPACE_NAME = `${imagereplicate.spec.toImage.registryName}(${imagereplicate.spec.toImage.registryNamespace})`;\n    return (React.createElement(TableRow, { id: imagereplicate.metadata.uid, index: index, trKey: key, style: style },\n        React.createElement(TableData, { className: tableColumnClasses[0] },\n            React.createElement(ResourceLink, { kind: kind, name: imagereplicate.metadata.name, namespace: imagereplicate.metadata.namespace, title: imagereplicate.metadata.uid })),\n        React.createElement(TableData, { className: classNames(tableColumnClasses[1], 'co-break-word') },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: imagereplicate.metadata.namespace, title: imagereplicate.metadata.namespace })),\n        React.createElement(TableData, { className: tableColumnClasses[2] },\n            React.createElement(Status, { status: (_a = imagereplicate === null || imagereplicate === void 0 ? void 0 : imagereplicate.status) === null || _a === void 0 ? void 0 : _a.state })),\n        React.createElement(TableData, { className: tableColumnClasses[3] }, imagereplicate.spec.fromImage.registryType),\n        React.createElement(TableData, { className: tableColumnClasses[4] },\n            React.createElement(ResourceLink, { kind: ExternalRegistryModel.kind, name: imagereplicate.spec.fromImage.registryName, displayName: FROM_NAMESPACE_NAME, namespace: imagereplicate.spec.fromImage.registryNamespace })),\n        React.createElement(TableData, { className: tableColumnClasses[5] }, imagereplicate.spec.toImage.registryType),\n        React.createElement(TableData, { className: tableColumnClasses[6] },\n            React.createElement(ResourceLink, { kind: RegistryModel.kind, name: imagereplicate.spec.toImage.registryName, displayName: TO_NAMESPACE_NAME, namespace: imagereplicate.spec.toImage.registryNamespace })),\n        React.createElement(TableData, { className: tableColumnClasses[7] },\n            React.createElement(Timestamp, { timestamp: imagereplicate.metadata.creationTimestamp })),\n        React.createElement(TableData, { className: tableColumnClasses[8] },\n            React.createElement(ResourceKebab, { actions: menuActions, kind: kind, resource: imagereplicate }))));\n};\nexport const ImageReplicateStatus = ({ result }) => React.createElement(Status, { status: result });\nexport const ImageReplicateImageTable = ({ ds }) => {\n    const { t } = useTranslation();\n    const rows = (React.createElement(\"div\", { className: \"row\" },\n        React.createElement(\"div\", { className: \"col-xs-6 col-sm-4 col-md-4\" }, ds.spec.fromImage.image),\n        React.createElement(\"div\", { className: \"col-xs-6 col-sm-4 col-md-4\" }, ds.spec.toImage.image)));\n    return (React.createElement(\"div\", { className: \"co-m-table-grid co-m-table-grid--bordered\" },\n        React.createElement(\"div\", { className: \"row co-m-table-grid__head\" },\n            React.createElement(\"div\", { className: \"col-xs-6 col-sm-4 col-md-4\" }, t('COMMON:MSG_DETAILS_TABDETAILS_11')),\n            React.createElement(\"div\", { className: \"col-xs-6 col-sm-4 col-md-4\" }, t('COMMON:MSG_DETAILS_TABDETAILS_13'))),\n        React.createElement(\"div\", { className: \"co-m-table-grid__body\" }, rows)));\n};\nexport const ImageReplicateDetailsList = ({ ds }) => {\n    var _a, _b, _c;\n    const { t } = useTranslation();\n    let FROM_NAMESPACE_NAME = `${ds.spec.fromImage.registryName}(${ds.spec.fromImage.registryNamespace})`;\n    let TO_NAMESPACE_NAME = `${ds.spec.toImage.registryName}(${ds.spec.toImage.registryNamespace})`;\n    let isSigner = (_a = ds.spec) === null || _a === void 0 ? void 0 : _a.signer;\n    return (React.createElement(\"dl\", { className: \"co-m-pane__details\" },\n        React.createElement(\"dt\", null, t('COMMON:MSG_MAIN_TABLEHEADER_3')),\n        React.createElement(\"dd\", null,\n            React.createElement(ImageReplicateStatus, { result: (_b = ds === null || ds === void 0 ? void 0 : ds.status) === null || _b === void 0 ? void 0 : _b.state })),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_49')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, ds.spec.fromImage.registryType),\n        React.createElement(\"dt\", null, t('COMMON:MSG_MAIN_TABLEHEADER_89')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } },\n            React.createElement(ResourceLink, { kind: ExternalRegistryModel.kind, name: ds.spec.fromImage.registryName, displayName: FROM_NAMESPACE_NAME, title: FROM_NAMESPACE_NAME, namespace: ds.spec.fromImage.registryNamespace })),\n        React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_51')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, ds.spec.toImage.registryType),\n        React.createElement(\"dt\", null, t('COMMON:MSG_MAIN_TABLEHEADER_90')),\n        React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } },\n            React.createElement(ResourceLink, { kind: RegistryModel.kind, name: ds.spec.toImage.registryName, displayName: TO_NAMESPACE_NAME, title: TO_NAMESPACE_NAME, namespace: ds.spec.toImage.registryNamespace })),\n        isSigner && (React.createElement(React.Fragment, null,\n            React.createElement(\"dt\", null, t('COMMON:MSG_DETAILS_TABDETAILS_SIGNERS_1')),\n            React.createElement(\"dd\", { style: { display: 'flex', flexDirection: 'column' } }, (_c = ds.spec) === null || _c === void 0 ? void 0 : _c.signer)))));\n};\nconst ImageReplicateDetails = ({ obj: imagereplicate }) => {\n    const { t } = useTranslation();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(imagereplicate, t) }) }),\n            React.createElement(\"div\", { className: \"row\" },\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ResourceSummary, { resource: imagereplicate })),\n                React.createElement(\"div\", { className: \"col-lg-6\" },\n                    React.createElement(ImageReplicateDetailsList, { ds: imagereplicate })))),\n        React.createElement(\"div\", { className: \"co-m-pane__body\" },\n            React.createElement(SectionHeading, { text: `${t('COMMON:MSG_DETAILS_TABDETAILS_5')}` }),\n            React.createElement(ImageReplicateImageTable, { ds: imagereplicate }))));\n};\nconst { details, editYaml } = navFactory;\nImageReplicateTableHeader.displayName = 'ImageReplicateTableHeader';\nexport const ImageReplicates = props => {\n    const { t } = useTranslation();\n    return React.createElement(Table, Object.assign({}, props, { \"aria-label\": \"ImageReplicates\", Header: ImageReplicateTableHeader.bind(null, t), Row: ImageReplicateTableRow, virtualize: true }));\n};\nexport const ImageReplicatesPage = props => {\n    const { t } = useTranslation();\n    return React.createElement(ListPage, Object.assign({ title: t('COMMON:MSG_LNB_MENU_93'), createButtonText: t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_93') }), canCreate: true, ListComponent: ImageReplicates, kind: kind }, props));\n};\nexport const ImageReplicatesDetailsPage = props => React.createElement(DetailsPage, Object.assign({}, props, { kind: kind, menuActions: menuActions, pages: [details(detailsPage(ImageReplicateDetails)), editYaml()] }));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-replicate.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/hypercloud/image-replicate.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\n\nimport { K8sResourceKind } from '../../module/k8s';\nimport { DetailsPage, ListPage, Table, TableRow, TableData, RowFunction } from '../factory';\nimport { Kebab, KebabAction, detailsPage, Timestamp, navFactory, ResourceKebab, ResourceLink, ResourceSummary, SectionHeading } from '../utils';\nimport { ImageReplicateModel, ExternalRegistryModel, RegistryModel } from '../../models';\nimport { Status } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { ResourceLabel } from '../../models/hypercloud/resource-plural';\n\nimport './IR.scss';\n\nexport const menuActions: KebabAction[] = [...Kebab.getExtensionsActionsForKind(ImageReplicateModel), ...Kebab.factory.common];\n\nconst kind = ImageReplicateModel.kind;\nconst tableColumnClasses = ['', '', '', classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'IR__button'), Kebab.columnClass];\n\nconst ImageReplicateTableHeader = (t?: TFunction) => {\n  return [\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_1'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_2'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_3'),\n      sortField: 'status.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_75'),\n      sortField: 'spec.fromImage.registryType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_89'),\n      sortField: 'spec.fromImage.registryName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_76'),\n      sortField: 'spec.toImage.registryType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_90'),\n      sortField: 'spec.toImage.registryName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: t('COMMON:MSG_MAIN_TABLEHEADER_12'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ];\n};\n\nconst ImageReplicateTableRow: RowFunction<K8sResourceKind> = ({ obj: imagereplicate, index, key, style }) => {\n  let FROM_NAMESPACE_NAME = `${imagereplicate.spec.fromImage.registryName}(${imagereplicate.spec.fromImage.registryNamespace})`;\n  let TO_NAMESPACE_NAME = `${imagereplicate.spec.toImage.registryName}(${imagereplicate.spec.toImage.registryNamespace})`;\n  return (\n    <TableRow id={imagereplicate.metadata.uid} index={index} trKey={key} style={style}>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={imagereplicate.metadata.name} namespace={imagereplicate.metadata.namespace} title={imagereplicate.metadata.uid} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        <ResourceLink kind=\"Namespace\" name={imagereplicate.metadata.namespace} title={imagereplicate.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Status status={imagereplicate?.status?.state} />\n      </TableData>\n      {/* 소스 레지스트리 타입 */}\n      <TableData className={tableColumnClasses[3]}>{imagereplicate.spec.fromImage.registryType}</TableData>\n      {/* 소스 레지스트리 (네임스페이스/이름) */}\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceLink kind={ExternalRegistryModel.kind} name={imagereplicate.spec.fromImage.registryName} displayName={FROM_NAMESPACE_NAME} namespace={imagereplicate.spec.fromImage.registryNamespace} />\n      </TableData>\n      {/* 타겟 레지스트리 타입 */}\n      <TableData className={tableColumnClasses[5]}>{imagereplicate.spec.toImage.registryType}</TableData>\n      {/* 타겟 레지스트리 (네임스페이스/이름) */}\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceLink kind={RegistryModel.kind} name={imagereplicate.spec.toImage.registryName} displayName={TO_NAMESPACE_NAME} namespace={imagereplicate.spec.toImage.registryNamespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <Timestamp timestamp={imagereplicate.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <ResourceKebab actions={menuActions} kind={kind} resource={imagereplicate} />\n      </TableData>\n    </TableRow>\n  );\n};\n\nexport const ImageReplicateStatus: React.FC<ImageReplicateStatusStatusProps> = ({ result }) => <Status status={result} />;\n\nexport const ImageReplicateImageTable: React.FC<ResourcesProps> = ({ ds }) => {\n  const { t } = useTranslation();\n\n  const rows = (\n    <div className=\"row\">\n      <div className=\"col-xs-6 col-sm-4 col-md-4\">{ds.spec.fromImage.image}</div>\n      <div className=\"col-xs-6 col-sm-4 col-md-4\">{ds.spec.toImage.image}</div>\n    </div>\n  );\n\n  return (\n    <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n      <div className=\"row co-m-table-grid__head\">\n        <div className=\"col-xs-6 col-sm-4 col-md-4\">{t('COMMON:MSG_DETAILS_TABDETAILS_11')}</div>\n        <div className=\"col-xs-6 col-sm-4 col-md-4\">{t('COMMON:MSG_DETAILS_TABDETAILS_13')}</div>\n      </div>\n      <div className=\"co-m-table-grid__body\">{rows}</div>\n    </div>\n  );\n};\n\nexport type ResourcesProps = {\n  ds: any;\n};\n\nexport const ImageReplicateDetailsList: React.FC<ImageReplicateDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  let FROM_NAMESPACE_NAME = `${ds.spec.fromImage.registryName}(${ds.spec.fromImage.registryNamespace})`;\n  let TO_NAMESPACE_NAME = `${ds.spec.toImage.registryName}(${ds.spec.toImage.registryNamespace})`;\n  let isSigner = ds.spec?.signer;\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      {/* 상태 */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_3')}</dt>\n      <dd>\n        <ImageReplicateStatus result={ds?.status?.state} />\n      </dd>\n      {/* 소스 레지스트리 타입 */}\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_49')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec.fromImage.registryType}</dd>\n      {/* 소스 레지스트리 (네임스페이스/이름) */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_89')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>\n        <ResourceLink kind={ExternalRegistryModel.kind} name={ds.spec.fromImage.registryName} displayName={FROM_NAMESPACE_NAME} title={FROM_NAMESPACE_NAME} namespace={ds.spec.fromImage.registryNamespace} />\n      </dd>\n      {/* 타겟 레지스트리 타입 */}\n      <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_51')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec.toImage.registryType}</dd>\n      {/* 타겟 레지스트리 (네임스페이스/이름) */}\n      <dt>{t('COMMON:MSG_MAIN_TABLEHEADER_90')}</dt>\n      <dd style={{ display: 'flex', flexDirection: 'column' }}>\n        <ResourceLink kind={RegistryModel.kind} name={ds.spec.toImage.registryName} displayName={TO_NAMESPACE_NAME} title={TO_NAMESPACE_NAME} namespace={ds.spec.toImage.registryNamespace} />\n      </dd>\n      {/* 서명자 */}\n      {isSigner && (\n        <>\n          <dt>{t('COMMON:MSG_DETAILS_TABDETAILS_SIGNERS_1')}</dt>\n          <dd style={{ display: 'flex', flexDirection: 'column' }}>{ds.spec?.signer}</dd>\n        </>\n      )}\n    </dl>\n  );\n};\n\nconst ImageReplicateDetails: React.FC<ImageReplicateDetailsProps> = ({ obj: imagereplicate }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('COMMON:MSG_DETAILS_TABDETAILS_DETAILS_1', { 0: ResourceLabel(imagereplicate, t) })} />\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary resource={imagereplicate} />\n          </div>\n          <div className=\"col-lg-6\">\n            <ImageReplicateDetailsList ds={imagereplicate} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={`${t('COMMON:MSG_DETAILS_TABDETAILS_5')}`} />\n        <ImageReplicateImageTable ds={imagereplicate} />\n      </div>\n    </>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nImageReplicateTableHeader.displayName = 'ImageReplicateTableHeader';\n\nexport const ImageReplicates: React.FC = props => {\n  const { t } = useTranslation();\n\n  return <Table {...props} aria-label=\"ImageReplicates\" Header={ImageReplicateTableHeader.bind(null, t)} Row={ImageReplicateTableRow} virtualize />;\n};\n\nexport const ImageReplicatesPage: React.FC<ImageReplicatesPageProps> = props => {\n  const { t } = useTranslation();\n\n  return <ListPage title={t('COMMON:MSG_LNB_MENU_93')} createButtonText={t('COMMON:MSG_MAIN_CREATEBUTTON_1', { 0: t('COMMON:MSG_LNB_MENU_93') })} canCreate={true} ListComponent={ImageReplicates} kind={kind} {...props} />;\n};\n\nexport const ImageReplicatesDetailsPage: React.FC<ImageReplicatesDetailsPageProps> = props => <DetailsPage {...props} kind={kind} menuActions={menuActions} pages={[details(detailsPage(ImageReplicateDetails)), editYaml()]} />;\n\ntype ImageReplicateDetailsListProps = {\n  ds: K8sResourceKind;\n};\n\ntype ImageReplicatesPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype ImageReplicateDetailsProps = {\n  obj: K8sResourceKind;\n};\n\ntype ImageReplicatesDetailsPageProps = {\n  match: any;\n};\ntype ImageReplicateStatusStatusProps = {\n  result: string;\n};\n"]}]}