{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/object-enum.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/object-enum.ts","mtime":1615298458660},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash';\nexport class ObjectEnum {\n    constructor(value) {\n        this.getValue = () => this.value;\n        if (!value) {\n            throw new Error(\"ObjectEnum: value can't be empty\");\n        }\n        this.value = value;\n    }\n    toString() {\n        return _.toString(this.value);\n    }\n}\nObjectEnum.getAllClassEnumProperties = (Clazz) => {\n    const usedValues = new Set();\n    return Object.keys(Clazz)\n        .filter((value) => Clazz[value] instanceof Clazz)\n        .map((key) => {\n        const result = Clazz[key];\n        if (usedValues.has(result.getValue())) {\n            throw new Error(`${result}: value must be unique`);\n        }\n        usedValues.add(result.getValue());\n        return result;\n    });\n};\nObjectEnum.getAll = () => Object.freeze([]);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/object-enum.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/constants/object-enum.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,MAAM,OAAgB,UAAU;IAmB9B,YAAsB,KAAQ;QAO9B,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;QAN1B,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAID,QAAQ;QACN,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;;AA7BgB,oCAAyB,GAAG,CAA4B,KAAe,EAAE,EAAE;IAC1F,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;SACtB,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,KAAK,CAAC;SAChD,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACX,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,CAAC,CAAC;SACpD;QACD,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClC,OAAO,MAAM,CAAC;IAChB,CAAC,CAAQ,CAAC;AACd,CAAC,CAAC;AAEK,iBAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC","sourcesContent":["import * as _ from 'lodash';\n\nexport abstract class ObjectEnum<T> {\n  protected static getAllClassEnumProperties = <A extends ObjectEnum<any>>(Clazz: Function) => {\n    const usedValues = new Set();\n    return Object.keys(Clazz)\n      .filter((value) => Clazz[value] instanceof Clazz)\n      .map((key) => {\n        const result = Clazz[key];\n        if (usedValues.has(result.getValue())) {\n          throw new Error(`${result}: value must be unique`);\n        }\n        usedValues.add(result.getValue());\n        return result;\n      }) as A[];\n  };\n\n  static getAll = () => Object.freeze([]);\n\n  protected readonly value: T;\n\n  protected constructor(value: T) {\n    if (!value) {\n      throw new Error(\"ObjectEnum: value can't be empty\");\n    }\n    this.value = value;\n  }\n\n  getValue = () => this.value;\n\n  toString() {\n    return _.toString(this.value);\n  }\n}\n"]}]}