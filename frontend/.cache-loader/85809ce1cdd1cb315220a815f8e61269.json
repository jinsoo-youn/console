{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-scheduling-patches.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-scheduling-patches.ts","mtime":1616735742430},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { PatchBuilder } from '@console/shared/src/k8s';\nimport { getVMLikePatches } from '../vm-template';\nexport const getNodeSelectorPatches = (vmLikeEntity, selectors) => getVMLikePatches(vmLikeEntity, () => [\n    new PatchBuilder('/spec/template/spec/nodeSelector').replace(selectors).build(),\n]);\nexport const getTolerationsPatch = (vmLikeEntity, tolerations) => {\n    const tolerationsWithOperator = tolerations.map(({ effect, key, tolerationSeconds, value }) => ({\n        key,\n        value,\n        effect,\n        operator: value ? 'Equal' : 'Exists',\n        tolerationSeconds,\n    }));\n    return getVMLikePatches(vmLikeEntity, () => [\n        new PatchBuilder('/spec/template/spec/tolerations').replace(tolerationsWithOperator).build(),\n    ]);\n};\nexport const getAffinityPatch = (vmLikeEntity, affinity) => affinity\n    ? getVMLikePatches(vmLikeEntity, () => [\n        new PatchBuilder('/spec/template/spec/affinity').replace(affinity).build(),\n    ])\n    : getVMLikePatches(vmLikeEntity, () => [\n        new PatchBuilder('/spec/template/spec/affinity').remove().build(),\n    ]);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-scheduling-patches.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/kubevirt-plugin/src/k8s/patches/vm/vm-scheduling-patches.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAIvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAC;AAGlD,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,YAA8B,EAC9B,SAAuB,EACd,EAAE,CACX,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;IACnC,IAAI,YAAY,CAAC,kCAAkC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;CAChF,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,YAA8B,EAC9B,WAAyB,EAChB,EAAE;IACX,MAAM,uBAAuB,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9F,GAAG;QACH,KAAK;QACL,MAAM;QACN,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ;QACpC,iBAAiB;KAClB,CAAC,CAAC,CAAC;IAEJ,OAAO,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;QAC1C,IAAI,YAAY,CAAC,iCAAiC,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE;KAC7F,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,YAA8B,EAAE,QAAkB,EAAW,EAAE,CAC9F,QAAQ;IACN,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;QACnC,IAAI,YAAY,CAAC,8BAA8B,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE;KAC3E,CAAC;IACJ,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;QACnC,IAAI,YAAY,CAAC,8BAA8B,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;KAClE,CAAC,CAAC","sourcesContent":["import { PatchBuilder } from '@console/shared/src/k8s';\nimport { Patch, Toleration } from '@console/internal/module/k8s';\nimport { NodeSelector } from '../../../types/vm';\nimport { VMLikeEntityKind } from '../../../types/vmLike';\nimport { getVMLikePatches } from '../vm-template';\nimport { Affinity } from '../../../components/modals/scheduling-modals/affinity-modal/types';\n\nexport const getNodeSelectorPatches = (\n  vmLikeEntity: VMLikeEntityKind,\n  selectors: NodeSelector,\n): Patch[] =>\n  getVMLikePatches(vmLikeEntity, () => [\n    new PatchBuilder('/spec/template/spec/nodeSelector').replace(selectors).build(),\n  ]);\n\nexport const getTolerationsPatch = (\n  vmLikeEntity: VMLikeEntityKind,\n  tolerations: Toleration[],\n): Patch[] => {\n  const tolerationsWithOperator = tolerations.map(({ effect, key, tolerationSeconds, value }) => ({\n    key,\n    value,\n    effect,\n    operator: value ? 'Equal' : 'Exists',\n    tolerationSeconds,\n  }));\n\n  return getVMLikePatches(vmLikeEntity, () => [\n    new PatchBuilder('/spec/template/spec/tolerations').replace(tolerationsWithOperator).build(),\n  ]);\n};\n\nexport const getAffinityPatch = (vmLikeEntity: VMLikeEntityKind, affinity: Affinity): Patch[] =>\n  affinity\n    ? getVMLikePatches(vmLikeEntity, () => [\n        new PatchBuilder('/spec/template/spec/affinity').replace(affinity).build(),\n      ])\n    : getVMLikePatches(vmLikeEntity, () => [\n        new PatchBuilder('/spec/template/spec/affinity').remove().build(),\n      ]);\n"]}]}