{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/utils.ts","mtime":1615298458590},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { getResiliencyProgress } from '../../../../utils';\nconst CephHealthStatus = {\n    HEALTH_OK: {\n        state: HealthState.OK,\n    },\n    HEALTH_WARN: {\n        state: HealthState.WARNING,\n    },\n    HEALTH_ERR: {\n        state: HealthState.ERROR,\n        message: 'Error',\n    },\n};\nexport const getCephHealthState = ({ ceph }) => {\n    var _a, _b, _c;\n    const { data, loaded, loadError } = ceph;\n    const status = (_c = (_b = (_a = data === null || data === void 0 ? void 0 : data[0]) === null || _a === void 0 ? void 0 : _a.status) === null || _b === void 0 ? void 0 : _b.ceph) === null || _c === void 0 ? void 0 : _c.health;\n    if (loadError) {\n        return { state: HealthState.NOT_AVAILABLE };\n    }\n    if (!loaded) {\n        return { state: HealthState.LOADING };\n    }\n    if (data.length === 0) {\n        return { state: HealthState.NOT_AVAILABLE };\n    }\n    return CephHealthStatus[status] || { state: HealthState.UNKNOWN };\n};\nexport const getDataResiliencyState = (responses) => {\n    const progress = getResiliencyProgress(responses[0].response);\n    if (responses[0].error) {\n        return { state: HealthState.NOT_AVAILABLE };\n    }\n    if (!responses[0].response) {\n        return { state: HealthState.LOADING };\n    }\n    if (Number.isNaN(progress)) {\n        return { state: HealthState.UNKNOWN };\n    }\n    if (progress < 1) {\n        return { state: HealthState.PROGRESS, message: 'Progressing' };\n    }\n    return { state: HealthState.OK };\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/ceph-storage-plugin/src/components/dashboard-page/storage-dashboard/status-card/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,6DAA6D,CAAC;AAC1F,OAAO,EAAE,qBAAqB,EAAE,MAAM,mBAAmB,CAAC;AAG1D,MAAM,gBAAgB,GAAG;IACvB,SAAS,EAAE;QACT,KAAK,EAAE,WAAW,CAAC,EAAE;KACtB;IACD,WAAW,EAAE;QACX,KAAK,EAAE,WAAW,CAAC,OAAO;KAC3B;IACD,UAAU,EAAE;QACV,KAAK,EAAE,WAAW,CAAC,KAAK;QACxB,OAAO,EAAE,OAAO;KACjB;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAA6C,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;;IACvF,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;IACzC,MAAM,MAAM,qBAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,2CAAG,MAAM,0CAAE,IAAI,0CAAE,MAAM,CAAC;IAE/C,IAAI,SAAS,EAAE;QACb,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,aAAa,EAAE,CAAC;KAC7C;IACD,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;KACvC;IACD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,aAAa,EAAE,CAAC;KAC7C;IACD,OAAO,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;AACpE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAA4B,CAAC,SAAS,EAAE,EAAE;IAC3E,MAAM,QAAQ,GAAW,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;QACtB,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,aAAa,EAAE,CAAC;KAC7C;IACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;QAC1B,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;KACvC;IACD,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QAC1B,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;KACvC;IACD,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;KAChE;IACD,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC;AACnC,CAAC,CAAC","sourcesContent":["import { PrometheusHealthHandler, ResourceHealthHandler } from '@console/plugin-sdk';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { getResiliencyProgress } from '../../../../utils';\nimport { WatchCephResource } from '../../../../types';\n\nconst CephHealthStatus = {\n  HEALTH_OK: {\n    state: HealthState.OK,\n  },\n  HEALTH_WARN: {\n    state: HealthState.WARNING,\n  },\n  HEALTH_ERR: {\n    state: HealthState.ERROR,\n    message: 'Error',\n  },\n};\n\nexport const getCephHealthState: ResourceHealthHandler<WatchCephResource> = ({ ceph }) => {\n  const { data, loaded, loadError } = ceph;\n  const status = data?.[0]?.status?.ceph?.health;\n\n  if (loadError) {\n    return { state: HealthState.NOT_AVAILABLE };\n  }\n  if (!loaded) {\n    return { state: HealthState.LOADING };\n  }\n  if (data.length === 0) {\n    return { state: HealthState.NOT_AVAILABLE };\n  }\n  return CephHealthStatus[status] || { state: HealthState.UNKNOWN };\n};\n\nexport const getDataResiliencyState: PrometheusHealthHandler = (responses) => {\n  const progress: number = getResiliencyProgress(responses[0].response);\n  if (responses[0].error) {\n    return { state: HealthState.NOT_AVAILABLE };\n  }\n  if (!responses[0].response) {\n    return { state: HealthState.LOADING };\n  }\n  if (Number.isNaN(progress)) {\n    return { state: HealthState.UNKNOWN };\n  }\n  if (progress < 1) {\n    return { state: HealthState.PROGRESS, message: 'Progressing' };\n  }\n  return { state: HealthState.OK };\n};\n"]}]}