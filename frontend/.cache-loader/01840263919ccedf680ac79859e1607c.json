{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/submit-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/submit-utils.ts","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { errorModal } from '@console/internal/components/modals';\nimport { k8sCreate, k8sGet } from '@console/internal/module/k8s';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { createEventListener, createEventListenerRoute, createTriggerTemplate, } from './resource-utils';\nconst exposeRoute = (elName, ns, iteration = 0) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c, _d;\n    const elResource = yield k8sGet(EventListenerModel, elName, ns);\n    const serviceGeneratedName = (_a = elResource === null || elResource === void 0 ? void 0 : elResource.status) === null || _a === void 0 ? void 0 : _a.configuration.generatedName;\n    try {\n        if (!serviceGeneratedName) {\n            if (iteration < 3) {\n                setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n            }\n            else {\n                // Unable to deterministically create the route; create a default one\n                yield k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n            }\n            return;\n        }\n        // Get the service, find out what port we are exposed on\n        const serviceResource = yield k8sGet(ServiceModel, serviceGeneratedName, ns);\n        const servicePort = (_d = (_c = (_b = serviceResource.spec) === null || _b === void 0 ? void 0 : _b.ports) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.targetPort;\n        // Build the exposed route on the correct port\n        const route = createEventListenerRoute(elResource, serviceGeneratedName, servicePort);\n        yield k8sCreate(RouteModel, route, { ns });\n    }\n    catch (e) {\n        errorModal({\n            title: 'Error Exposing Route',\n            error: e.message || 'Unknown error exposing the Webhook route',\n        });\n    }\n});\nexport const submitTrigger = (pipeline, formValues) => __awaiter(void 0, void 0, void 0, function* () {\n    const { triggerBinding } = formValues;\n    const thisNamespace = pipeline.metadata.namespace;\n    const pipelineRun = getPipelineRunFromForm(pipeline, formValues);\n    const triggerTemplateParams = triggerBinding.resource.spec.params.map(({ name }) => ({ name }));\n    const triggerTemplate = createTriggerTemplate(pipelineRun, triggerTemplateParams);\n    const eventListener = createEventListener([triggerBinding.resource], triggerTemplate);\n    const metadata = { ns: thisNamespace };\n    let resources;\n    try {\n        // Validates the modal contents, should be done first\n        const ttResource = yield k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n        // Creates the linkages and will provide the link to non-trigger resources created\n        const elResource = yield k8sCreate(EventListenerModel, eventListener, metadata);\n        // Capture all related resources\n        resources = [ttResource, elResource];\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    exposeRoute(eventListener.metadata.name, thisNamespace);\n    return Promise.resolve(resources);\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/submit-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/triggers/submit-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { RouteModel, ServiceModel } from '@console/internal/models';\nimport { errorModal } from '@console/internal/components/modals';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { Pipeline, PipelineRun } from '../../../../utils/pipeline-augment';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nconst exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.targetPort;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: Pipeline,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRun = getPipelineRunFromForm(pipeline, formValues);\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n  );\n\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n"]}]}