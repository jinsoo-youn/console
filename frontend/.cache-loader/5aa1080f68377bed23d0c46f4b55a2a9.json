{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/project-overview.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/project-overview.tsx","mtime":1616735742480},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as classnames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { ListView, ListViewItem } from './list-view';\nimport { KEYBOARD_SHORTCUTS, Status as TooltipStatus, YellowExclamationTriangleIcon, } from '@console/shared';\nimport * as UIActions from '../../actions/ui';\nimport { ResourceIcon, formatBytesAsMiB, formatCores, pluralize, resourceObjPath, truncateMiddle, } from '../utils';\n// Consider this mobile if the device screen width is less than 768. (This value shouldn't change.)\nconst isMobile = window.screen.width < 768;\nconst ControllerLink = ({ controller }) => {\n    const { obj, revision } = controller;\n    const { name } = obj.metadata;\n    const label = _.isFinite(revision) ? `#${revision}` : name;\n    return (React.createElement(Link, { to: resourceObjPath(obj, obj.kind), title: name }, label));\n};\nexport const ComponentLabel = ({ text }) => (React.createElement(\"div\", { className: \"co-component-label\" }, text));\nconst MetricsTooltip = ({ metricLabel, byPod, children }) => {\n    const sortedMetrics = _.orderBy(byPod, ['value', 'name'], ['desc', 'asc']);\n    const content = _.isEmpty(sortedMetrics)\n        ? [React.createElement(React.Fragment, { key: \"no-metrics\" },\n                \"No \",\n                metricLabel,\n                \" metrics available.\")]\n        : _.concat(React.createElement(\"div\", { className: \"project-overview__metric-tooltip-title\", key: \"#title\" },\n            metricLabel,\n            \" Usage by Pod\"), sortedMetrics.map(({ name, formattedValue }) => (React.createElement(\"div\", { key: name, className: \"project-overview__metric-tooltip\" },\n            React.createElement(\"div\", { className: \"project-overview__metric-tooltip-name\" },\n                React.createElement(\"span\", { className: \"no-wrap\" }, truncateMiddle(name))),\n            React.createElement(\"div\", { className: \"project-overview__metric-tooltip-value\" }, formattedValue)))));\n    const keepLines = 6;\n    // Don't remove a single line to show a \"1 other\" message since there's space to show the last pod in that case.\n    // Make sure we always remove at least 2 lines if we truncate.\n    if (content.length > keepLines + 1) {\n        const numRemoved = content.length - keepLines;\n        content.splice(keepLines, numRemoved, React.createElement(\"div\", { key: \"#removed-pods\" },\n            \"and \",\n            numRemoved,\n            \" other pods\"));\n    }\n    // Disable the tooltip on mobile since a touch also opens the sidebar, which\n    // immediately covers the tooltip content.\n    if (isMobile) {\n        return React.createElement(React.Fragment, null, children);\n    }\n    return (React.createElement(Tooltip, { content: content, distance: 15 },\n        React.createElement(React.Fragment, null, children)));\n};\nconst Metrics = ({ metrics, item }) => {\n    const getPods = () => {\n        if (item.obj.kind === 'Pod') {\n            return [item.obj];\n        }\n        return item.current ? item.current.pods : item.pods;\n    };\n    if (_.isEmpty(metrics)) {\n        return null;\n    }\n    let totalBytes = 0;\n    let totalCores = 0;\n    const memoryByPod = [];\n    const cpuByPod = [];\n    _.each(getPods(), ({ metadata: { name } }) => {\n        const bytes = _.get(metrics, ['memory', name]);\n        if (_.isFinite(bytes)) {\n            totalBytes += bytes;\n            const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n            memoryByPod.push({ name, value: bytes, formattedValue });\n        }\n        const cores = _.get(metrics, ['cpu', name]);\n        if (_.isFinite(cores)) {\n            totalCores += cores;\n            cpuByPod[name] = `${formatCores(cores)} cores`;\n            const formattedValue = `${formatCores(cores)} cores`;\n            cpuByPod.push({ name, value: cores, formattedValue });\n        }\n    });\n    if (!totalBytes && !totalCores) {\n        return null;\n    }\n    const formattedMiB = formatBytesAsMiB(totalBytes);\n    const formattedCores = formatCores(totalCores);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"project-overview__detail project-overview__detail--memory\" },\n            React.createElement(MetricsTooltip, { metricLabel: \"Memory\", byPod: memoryByPod },\n                React.createElement(\"span\", null,\n                    React.createElement(\"span\", { className: \"project-overview__metric-value\" }, formattedMiB),\n                    \"\\u00A0\",\n                    React.createElement(\"span\", { className: \"project-overview__metric-unit\" }, \"MiB\")))),\n        React.createElement(\"div\", { className: \"project-overview__detail project-overview__detail--cpu\" },\n            React.createElement(MetricsTooltip, { metricLabel: \"CPU\", byPod: cpuByPod },\n                React.createElement(\"span\", null,\n                    React.createElement(\"span\", { className: \"project-overview__metric-value\" }, formattedCores),\n                    \"\\u00A0\",\n                    React.createElement(\"span\", { className: \"project-overview__metric-unit\" }, \"cores\"))))));\n};\nconst Status = ({ item }) => {\n    const { status } = item;\n    return status ? (React.createElement(\"div\", { className: \"project-overview__detail project-overview__detail--status\" }, status)) : null;\n};\nconst AlertTooltip = ({ alerts, severity, noSeverityLabel = false }) => {\n    const label = severity === 'Info' ? 'Message' : severity;\n    const count = _.size(alerts);\n    const message = _.uniq(_.map(alerts, 'message')).join('\\n');\n    const content = [\n        React.createElement(\"span\", { key: \"message\", className: \"co-pre-wrap\" }, message),\n    ];\n    // Disable the tooltip on mobile since a touch also opens the sidebar, which\n    // immediately covers the tooltip content.\n    if (isMobile) {\n        return (React.createElement(\"span\", { className: \"project-overview__status\" },\n            React.createElement(TooltipStatus, { status: severity, title: noSeverityLabel ? String(count) : pluralize(count, label) })));\n    }\n    return (React.createElement(Tooltip, { content: content, distance: 10 },\n        React.createElement(\"span\", { className: \"project-overview__status\" },\n            React.createElement(TooltipStatus, { status: severity, title: noSeverityLabel ? String(count) : pluralize(count, label) }))));\n};\nconst Alerts = ({ item }) => {\n    const currentAlerts = _.get(item, 'current.alerts', {});\n    const previousAlerts = _.get(item, 'previous.alerts', {});\n    const itemAlerts = _.get(item, 'alerts', {});\n    const alerts = Object.assign(Object.assign(Object.assign({}, itemAlerts), currentAlerts), previousAlerts);\n    if (_.isEmpty(alerts)) {\n        return null;\n    }\n    const { error, warning, info, buildNew, buildPending, buildRunning, buildFailed, buildError, } = _.groupBy(alerts, 'severity');\n    return (React.createElement(\"div\", { className: \"project-overview__detail project-overview__detail--alert\" },\n        error && React.createElement(AlertTooltip, { severity: \"Error\", alerts: error }),\n        warning && React.createElement(AlertTooltip, { severity: \"Warning\", alerts: warning }),\n        info && React.createElement(AlertTooltip, { severity: \"Info\", alerts: info }),\n        (buildNew || buildPending || buildRunning || buildFailed || buildError) && (React.createElement(\"div\", { className: \"project-overview__builds\" },\n            \"Builds \",\n            buildNew && React.createElement(AlertTooltip, { severity: \"New\", alerts: buildNew, noSeverityLabel: true }),\n            ' ',\n            buildPending && (React.createElement(AlertTooltip, { severity: \"Pending\", alerts: buildPending, noSeverityLabel: true })),\n            ' ',\n            buildRunning && (React.createElement(AlertTooltip, { severity: \"Running\", alerts: buildRunning, noSeverityLabel: true })),\n            ' ',\n            buildFailed && React.createElement(AlertTooltip, { severity: \"Failed\", alerts: buildFailed, noSeverityLabel: true }),\n            ' ',\n            buildError && React.createElement(AlertTooltip, { severity: \"Error\", alerts: buildError, noSeverityLabel: true })))));\n};\nconst projectOverviewListItemStateToProps = ({ UI }) => ({\n    metrics: UI.getIn(['overview', 'metrics']),\n    selectedUID: UI.getIn(['overview', 'selectedUID']),\n});\nconst projectOverviewListItemDispatchToProps = (dispatch) => ({\n    selectItem: (uid) => dispatch(UIActions.selectOverviewItem(uid)),\n    dismissDetails: () => dispatch(UIActions.dismissOverviewDetails()),\n});\nexport const ResourceItemDeleting = () => (React.createElement(\"span\", { className: \"co-resource-item__deleting\" },\n    React.createElement(YellowExclamationTriangleIcon, null),\n    \" Deleting\"));\nconst ProjectOverviewListItem = connect(projectOverviewListItemStateToProps, projectOverviewListItemDispatchToProps)(({ dismissDetails, item, metrics, selectItem, selectedUID }) => {\n    const { current, obj } = item;\n    const { name, uid, deletionTimestamp } = obj.metadata;\n    const { kind } = obj;\n    // Hide metrics when a selection is active.\n    const hasSelection = !!selectedUID;\n    const isSelected = uid === selectedUID;\n    const className = classnames(`project-overview__item project-overview__item--${kind}`, {\n        'project-overview__item--selected': isSelected,\n    });\n    const onClick = (e) => {\n        // Don't toggle details if clicking on a link inside the row.\n        const target = e.target;\n        if (target.tagName.toLowerCase() === 'a') {\n            return;\n        }\n        if (isSelected) {\n            dismissDetails();\n        }\n        else {\n            selectItem(uid);\n        }\n    };\n    const heading = (React.createElement(\"h3\", { className: \"project-overview__item-heading\" },\n        React.createElement(\"span\", { className: \"co-resource-item co-resource-item--truncate\" },\n            React.createElement(ResourceIcon, { kind: kind }),\n            React.createElement(Button, { type: \"button\", isInline: true, onClick: onClick, className: \"pf-c-button--no-default-values project-overview__item-heading--name\", variant: \"link\" }, name),\n            current && (React.createElement(React.Fragment, null,\n                \",\\u00A0\",\n                React.createElement(ControllerLink, { controller: current }))),\n            deletionTimestamp && React.createElement(ResourceItemDeleting, null))));\n    const additionalInfo = (React.createElement(\"div\", { key: uid, className: \"project-overview__additional-info\" },\n        React.createElement(Alerts, { item: item }),\n        !hasSelection && React.createElement(Metrics, { item: item, metrics: metrics }),\n        React.createElement(Status, { item: item })));\n    return (React.createElement(ListViewItem, { onClick: onClick, className: className, heading: heading, additionalInfo: [additionalInfo], id: uid }));\n});\nconst ProjectOverviewList = ({ items }) => {\n    const listItems = _.map(items, (item) => (React.createElement(ProjectOverviewListItem, { item: item, key: item.obj.metadata.uid })));\n    return React.createElement(ListView, { className: \"project-overview__list\" }, listItems);\n};\nconst ProjectOverviewGroup = ({ heading, items }) => (React.createElement(\"div\", { className: \"project-overview__group\" },\n    React.createElement(\"h2\", { className: \"project-overview__group-heading\" }, heading),\n    React.createElement(ProjectOverviewList, { items: items })));\nconst projectOverviewStateToProps = ({ UI }) => ({\n    selectedUID: UI.getIn(['overview', 'selectedUID']),\n});\nconst projectOverviewDispatchToProps = (dispatch) => ({\n    selectItemUID: (uid) => dispatch(UIActions.selectOverviewItem(uid)),\n    dismissDetails: () => dispatch(UIActions.dismissOverviewDetails()),\n});\nclass ProjectOverview_ extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onKeyDown = (e) => {\n            const { nodeName } = e.target;\n            if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n                return;\n            }\n            switch (e.key) {\n                case 'Escape':\n                    this.stopEvent(e);\n                    this.props.dismissDetails();\n                    break;\n                case 'k':\n                case 'ArrowUp':\n                    this.stopEvent(e);\n                    this.selectPrevious();\n                    break;\n                case 'j':\n                case 'ArrowDown':\n                    this.stopEvent(e);\n                    this.selectNext();\n                    break;\n                default:\n                    break;\n            }\n        };\n    }\n    componentDidMount() {\n        window.addEventListener('keydown', this.onKeyDown);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onKeyDown);\n    }\n    flatten() {\n        return _.flatten(_.map(this.props.groups, 'items'));\n    }\n    findIndex(items, uid) {\n        return _.findIndex(items, (i) => _.get(i, 'obj.metadata.uid') === uid);\n    }\n    selectItem(item) {\n        const uid = _.get(item, 'obj.metadata.uid');\n        this.props.selectItemUID(uid);\n        const element = document.getElementById(uid);\n        if (element) {\n            element.scrollIntoView({ block: 'nearest' });\n        }\n    }\n    selectPrevious() {\n        const { selectedUID } = this.props;\n        const allItems = this.flatten();\n        if (!selectedUID) {\n            this.selectItem(_.last(allItems));\n        }\n        else {\n            const newIndex = this.findIndex(allItems, selectedUID) - 1;\n            const item = _.get(allItems, [newIndex < 0 ? allItems.length - 1 : newIndex]);\n            this.selectItem(item);\n        }\n    }\n    selectNext() {\n        const { selectedUID } = this.props;\n        const allItems = this.flatten();\n        if (!selectedUID) {\n            this.selectItem(_.first(allItems));\n        }\n        else {\n            const newIndex = this.findIndex(allItems, selectedUID) + 1;\n            const item = _.get(allItems, [newIndex >= allItems.length ? 0 : newIndex]);\n            this.selectItem(item);\n        }\n    }\n    stopEvent(e) {\n        document.activeElement instanceof HTMLElement && document.activeElement.blur();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"project-overview\" },\n            _.map(this.props.groups, ({ name, items }, index) => (React.createElement(ProjectOverviewGroup, { key: name || `_${index}`, heading: name, items: items }))),\n            React.createElement(\"p\", { className: \"small text-center hidden-xs\" },\n                React.createElement(\"kbd\", null, \"\\u2191\"),\n                \" and \",\n                React.createElement(\"kbd\", null, \"\\u2193\"),\n                \" selects items, and\",\n                ' ',\n                React.createElement(\"kbd\", null, KEYBOARD_SHORTCUTS.focusFilterInput),\n                \" filters items.\")));\n    }\n}\nexport const ProjectOverview = connect(projectOverviewStateToProps, projectOverviewDispatchToProps)(ProjectOverview_);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/project-overview.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/project-overview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as classnames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nimport { ListView, ListViewItem } from './list-view';\nimport {\n  KEYBOARD_SHORTCUTS,\n  Status as TooltipStatus,\n  YellowExclamationTriangleIcon,\n  PodControllerOverviewItem,\n  OverviewItem,\n} from '@console/shared';\nimport { K8sResourceKind } from '../../module/k8s';\nimport * as UIActions from '../../actions/ui';\nimport {\n  ResourceIcon,\n  formatBytesAsMiB,\n  formatCores,\n  pluralize,\n  resourceObjPath,\n  truncateMiddle,\n} from '../utils';\n\nimport { OverviewGroup, OverviewMetrics } from '.';\n\n// Consider this mobile if the device screen width is less than 768. (This value shouldn't change.)\nconst isMobile = window.screen.width < 768;\n\nconst ControllerLink: React.SFC<ControllerLinkProps> = ({ controller }) => {\n  const { obj, revision } = controller;\n  const { name } = obj.metadata;\n  const label = _.isFinite(revision) ? `#${revision}` : name;\n  return (\n    <Link to={resourceObjPath(obj, obj.kind)} title={name}>\n      {label}\n    </Link>\n  );\n};\n\nexport const ComponentLabel: React.SFC<ComponentLabelProps> = ({ text }) => (\n  <div className=\"co-component-label\">{text}</div>\n);\n\nconst MetricsTooltip: React.SFC<MetricsTooltipProps> = ({ metricLabel, byPod, children }) => {\n  const sortedMetrics = _.orderBy(byPod, ['value', 'name'], ['desc', 'asc']);\n  const content: any[] = _.isEmpty(sortedMetrics)\n    ? [<React.Fragment key=\"no-metrics\">No {metricLabel} metrics available.</React.Fragment>]\n    : _.concat(\n        <div className=\"project-overview__metric-tooltip-title\" key=\"#title\">\n          {metricLabel} Usage by Pod\n        </div>,\n        sortedMetrics.map(({ name, formattedValue }) => (\n          <div key={name} className=\"project-overview__metric-tooltip\">\n            <div className=\"project-overview__metric-tooltip-name\">\n              <span className=\"no-wrap\">{truncateMiddle(name)}</span>\n            </div>\n            <div className=\"project-overview__metric-tooltip-value\">{formattedValue}</div>\n          </div>\n        )),\n      );\n\n  const keepLines = 6;\n  // Don't remove a single line to show a \"1 other\" message since there's space to show the last pod in that case.\n  // Make sure we always remove at least 2 lines if we truncate.\n  if (content.length > keepLines + 1) {\n    const numRemoved = content.length - keepLines;\n    content.splice(\n      keepLines,\n      numRemoved,\n      <div key=\"#removed-pods\">and {numRemoved} other pods</div>,\n    );\n  }\n\n  // Disable the tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return <>{children}</>;\n  }\n  return (\n    <Tooltip content={content} distance={15}>\n      <>{children}</>\n    </Tooltip>\n  );\n};\n\nconst Metrics: React.SFC<MetricsProps> = ({ metrics, item }) => {\n  const getPods = () => {\n    if (item.obj.kind === 'Pod') {\n      return [item.obj];\n    }\n    return item.current ? item.current.pods : item.pods;\n  };\n\n  if (_.isEmpty(metrics)) {\n    return null;\n  }\n\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  _.each(getPods(), ({ metadata: { name } }: K8sResourceKind) => {\n    const bytes = _.get(metrics, ['memory', name]);\n    if (_.isFinite(bytes)) {\n      totalBytes += bytes;\n      const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n      memoryByPod.push({ name, value: bytes, formattedValue });\n    }\n\n    const cores = _.get(metrics, ['cpu', name]);\n    if (_.isFinite(cores)) {\n      totalCores += cores;\n      cpuByPod[name] = `${formatCores(cores)} cores`;\n      const formattedValue = `${formatCores(cores)} cores`;\n      cpuByPod.push({ name, value: cores, formattedValue });\n    }\n  });\n\n  if (!totalBytes && !totalCores) {\n    return null;\n  }\n\n  const formattedMiB = formatBytesAsMiB(totalBytes);\n  const formattedCores = formatCores(totalCores);\n  return (\n    <>\n      <div className=\"project-overview__detail project-overview__detail--memory\">\n        <MetricsTooltip metricLabel=\"Memory\" byPod={memoryByPod}>\n          <span>\n            <span className=\"project-overview__metric-value\">{formattedMiB}</span>\n            &nbsp;\n            <span className=\"project-overview__metric-unit\">MiB</span>\n          </span>\n        </MetricsTooltip>\n      </div>\n      <div className=\"project-overview__detail project-overview__detail--cpu\">\n        <MetricsTooltip metricLabel=\"CPU\" byPod={cpuByPod}>\n          <span>\n            <span className=\"project-overview__metric-value\">{formattedCores}</span>\n            &nbsp;\n            <span className=\"project-overview__metric-unit\">cores</span>\n          </span>\n        </MetricsTooltip>\n      </div>\n    </>\n  );\n};\n\nconst Status: React.SFC<StatusProps> = ({ item }) => {\n  const { status } = item;\n  return status ? (\n    <div className=\"project-overview__detail project-overview__detail--status\">{status}</div>\n  ) : null;\n};\n\nconst AlertTooltip = ({ alerts, severity, noSeverityLabel = false }) => {\n  const label = severity === 'Info' ? 'Message' : severity;\n  const count = _.size(alerts);\n  const message = _.uniq(_.map(alerts, 'message')).join('\\n');\n  const content = [\n    <span key=\"message\" className=\"co-pre-wrap\">\n      {message}\n    </span>,\n  ];\n\n  // Disable the tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return (\n      <span className=\"project-overview__status\">\n        <TooltipStatus\n          status={severity}\n          title={noSeverityLabel ? String(count) : pluralize(count, label)}\n        />\n      </span>\n    );\n  }\n  return (\n    <Tooltip content={content} distance={10}>\n      <span className=\"project-overview__status\">\n        <TooltipStatus\n          status={severity}\n          title={noSeverityLabel ? String(count) : pluralize(count, label)}\n        />\n      </span>\n    </Tooltip>\n  );\n};\n\nconst Alerts: React.SFC<AlertsProps> = ({ item }) => {\n  const currentAlerts = _.get(item, 'current.alerts', {});\n  const previousAlerts = _.get(item, 'previous.alerts', {});\n  const itemAlerts = _.get(item, 'alerts', {});\n  const alerts = {\n    ...itemAlerts,\n    ...currentAlerts,\n    ...previousAlerts,\n  };\n  if (_.isEmpty(alerts)) {\n    return null;\n  }\n\n  const {\n    error,\n    warning,\n    info,\n    buildNew,\n    buildPending,\n    buildRunning,\n    buildFailed,\n    buildError,\n  } = _.groupBy(alerts, 'severity');\n  return (\n    <div className=\"project-overview__detail project-overview__detail--alert\">\n      {error && <AlertTooltip severity=\"Error\" alerts={error} />}\n      {warning && <AlertTooltip severity=\"Warning\" alerts={warning} />}\n      {info && <AlertTooltip severity=\"Info\" alerts={info} />}\n      {(buildNew || buildPending || buildRunning || buildFailed || buildError) && (\n        <div className=\"project-overview__builds\">\n          Builds {buildNew && <AlertTooltip severity=\"New\" alerts={buildNew} noSeverityLabel />}{' '}\n          {buildPending && (\n            <AlertTooltip severity=\"Pending\" alerts={buildPending} noSeverityLabel />\n          )}{' '}\n          {buildRunning && (\n            <AlertTooltip severity=\"Running\" alerts={buildRunning} noSeverityLabel />\n          )}{' '}\n          {buildFailed && <AlertTooltip severity=\"Failed\" alerts={buildFailed} noSeverityLabel />}{' '}\n          {buildError && <AlertTooltip severity=\"Error\" alerts={buildError} noSeverityLabel />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst projectOverviewListItemStateToProps = ({ UI }): ProjectOverviewListItemPropsFromState => ({\n  metrics: UI.getIn(['overview', 'metrics']),\n  selectedUID: UI.getIn(['overview', 'selectedUID']),\n});\n\nconst projectOverviewListItemDispatchToProps = (\n  dispatch,\n): ProjectOverviewListItemPropsFromDispatch => ({\n  selectItem: (uid) => dispatch(UIActions.selectOverviewItem(uid)),\n  dismissDetails: () => dispatch(UIActions.dismissOverviewDetails()),\n});\n\nexport const ResourceItemDeleting = () => (\n  <span className=\"co-resource-item__deleting\">\n    <YellowExclamationTriangleIcon /> Deleting\n  </span>\n);\n\nconst ProjectOverviewListItem = connect<\n  ProjectOverviewListItemPropsFromState,\n  ProjectOverviewListItemPropsFromDispatch,\n  ProjectOverviewListItemOwnProps\n>(\n  projectOverviewListItemStateToProps,\n  projectOverviewListItemDispatchToProps,\n)(({ dismissDetails, item, metrics, selectItem, selectedUID }: ProjectOverviewListItemProps) => {\n  const { current, obj } = item;\n  const { name, uid, deletionTimestamp } = obj.metadata;\n  const { kind } = obj;\n  // Hide metrics when a selection is active.\n  const hasSelection = !!selectedUID;\n  const isSelected = uid === selectedUID;\n  const className = classnames(`project-overview__item project-overview__item--${kind}`, {\n    'project-overview__item--selected': isSelected,\n  });\n\n  const onClick = (e: React.MouseEvent<any>) => {\n    // Don't toggle details if clicking on a link inside the row.\n    const target = e.target as HTMLElement;\n    if (target.tagName.toLowerCase() === 'a') {\n      return;\n    }\n\n    if (isSelected) {\n      dismissDetails();\n    } else {\n      selectItem(uid);\n    }\n  };\n\n  const heading = (\n    <h3 className=\"project-overview__item-heading\">\n      <span className=\"co-resource-item co-resource-item--truncate\">\n        <ResourceIcon kind={kind} />\n        <Button\n          type=\"button\"\n          isInline\n          onClick={onClick}\n          className=\"pf-c-button--no-default-values project-overview__item-heading--name\"\n          variant=\"link\"\n        >\n          {name}\n        </Button>\n        {current && (\n          <>\n            ,&nbsp;\n            <ControllerLink controller={current} />\n          </>\n        )}\n        {deletionTimestamp && <ResourceItemDeleting />}\n      </span>\n    </h3>\n  );\n\n  const additionalInfo = (\n    <div key={uid} className=\"project-overview__additional-info\">\n      <Alerts item={item} />\n      {!hasSelection && <Metrics item={item} metrics={metrics} />}\n      <Status item={item} />\n    </div>\n  );\n\n  return (\n    <ListViewItem\n      onClick={onClick}\n      className={className}\n      heading={heading}\n      additionalInfo={[additionalInfo]}\n      id={uid}\n    />\n  );\n});\n\nconst ProjectOverviewList: React.SFC<ProjectOverviewListProps> = ({ items }) => {\n  const listItems = _.map(items, (item) => (\n    <ProjectOverviewListItem item={item} key={item.obj.metadata.uid} />\n  ));\n  return <ListView className=\"project-overview__list\">{listItems}</ListView>;\n};\n\nconst ProjectOverviewGroup: React.SFC<ProjectOverviewGroupProps> = ({ heading, items }) => (\n  <div className=\"project-overview__group\">\n    <h2 className=\"project-overview__group-heading\">{heading}</h2>\n    <ProjectOverviewList items={items} />\n  </div>\n);\n\nconst projectOverviewStateToProps = ({ UI }) => ({\n  selectedUID: UI.getIn(['overview', 'selectedUID']),\n});\n\nconst projectOverviewDispatchToProps = (dispatch) => ({\n  selectItemUID: (uid: string) => dispatch(UIActions.selectOverviewItem(uid)),\n  dismissDetails: () => dispatch(UIActions.dismissOverviewDetails()),\n});\n\nclass ProjectOverview_ extends React.Component<ProjectOverviewProps> {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  flatten(): OverviewItem[] {\n    return _.flatten(_.map(this.props.groups, 'items'));\n  }\n\n  findIndex(items: OverviewItem[], uid: string): number {\n    return _.findIndex(items, (i) => _.get(i, 'obj.metadata.uid') === uid);\n  }\n\n  selectItem(item: OverviewItem) {\n    const uid: string = _.get(item, 'obj.metadata.uid');\n    this.props.selectItemUID(uid);\n    const element = document.getElementById(uid);\n    if (element) {\n      element.scrollIntoView({ block: 'nearest' });\n    }\n  }\n\n  selectPrevious() {\n    const { selectedUID } = this.props;\n    const allItems = this.flatten();\n    if (!selectedUID) {\n      this.selectItem(_.last(allItems));\n    } else {\n      const newIndex = this.findIndex(allItems, selectedUID) - 1;\n      const item = _.get(allItems, [newIndex < 0 ? allItems.length - 1 : newIndex]);\n      this.selectItem(item);\n    }\n  }\n\n  selectNext() {\n    const { selectedUID } = this.props;\n    const allItems = this.flatten();\n    if (!selectedUID) {\n      this.selectItem(_.first(allItems));\n    } else {\n      const newIndex = this.findIndex(allItems, selectedUID) + 1;\n      const item = _.get(allItems, [newIndex >= allItems.length ? 0 : newIndex]);\n      this.selectItem(item);\n    }\n  }\n\n  stopEvent(e: KeyboardEvent) {\n    document.activeElement instanceof HTMLElement && document.activeElement.blur();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  onKeyDown = (e: KeyboardEvent) => {\n    const { nodeName } = e.target as Element;\n    if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Escape':\n        this.stopEvent(e);\n        this.props.dismissDetails();\n        break;\n      case 'k':\n      case 'ArrowUp':\n        this.stopEvent(e);\n        this.selectPrevious();\n        break;\n      case 'j':\n      case 'ArrowDown':\n        this.stopEvent(e);\n        this.selectNext();\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"project-overview\">\n        {_.map(this.props.groups, ({ name, items }, index) => (\n          <ProjectOverviewGroup key={name || `_${index}`} heading={name} items={items} />\n        ))}\n        <p className=\"small text-center hidden-xs\">\n          <kbd>&uarr;</kbd> and <kbd>&darr;</kbd> selects items, and{' '}\n          <kbd>{KEYBOARD_SHORTCUTS.focusFilterInput}</kbd> filters items.\n        </p>\n      </div>\n    );\n  }\n}\nexport const ProjectOverview = connect(\n  projectOverviewStateToProps,\n  projectOverviewDispatchToProps,\n)(ProjectOverview_);\n\ntype ControllerLinkProps = {\n  controller: PodControllerOverviewItem;\n};\n\ntype ComponentLabelProps = {\n  text: string;\n};\n\ntype MetricsTooltipProps = {\n  metricLabel: string;\n  byPod: {\n    formattedValue: string;\n    name: string;\n    value: number;\n  }[];\n};\n\ntype MetricsProps = {\n  metrics: any;\n  item: OverviewItem;\n};\n\ntype StatusProps = {\n  item: OverviewItem;\n};\n\ntype AlertsProps = {\n  item: OverviewItem;\n};\n\ntype ProjectOverviewListItemPropsFromState = {\n  metrics: OverviewMetrics;\n  selectedUID: string;\n};\n\ntype ProjectOverviewListItemPropsFromDispatch = {\n  selectItem: (uid: string) => void;\n  dismissDetails: () => void;\n};\n\ntype ProjectOverviewListItemOwnProps = {\n  item: OverviewItem;\n};\n\ntype ProjectOverviewListItemProps = ProjectOverviewListItemOwnProps &\n  ProjectOverviewListItemPropsFromDispatch &\n  ProjectOverviewListItemPropsFromState;\n\ntype ProjectOverviewListProps = {\n  items: OverviewItem[];\n};\n\ntype ProjectOverviewGroupProps = {\n  heading: string;\n  items: OverviewItem[];\n};\n\ntype ProjectOverviewProps = {\n  groups: OverviewGroup[];\n  selectedUID: string;\n  selectItemUID: (uid: string) => void;\n  dismissDetails: () => void;\n};\n"]}]}