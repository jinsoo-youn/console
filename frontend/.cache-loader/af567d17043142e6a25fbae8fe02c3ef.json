{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/additional-properties.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/additional-properties.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nexport const AdditionalPropertyFields = props => {\n    let { data, onChange } = props;\n    const obj = data;\n    const [items, setItems] = React.useState(_.keys(obj).map(cur => ({ [cur]: obj[cur] })));\n    const onAddProperty = () => {\n        setItems(prev => items.concat({ '': '' }));\n    };\n    const onRemoveProperty = idx => {\n        setItems(items.filter((cur, index) => idx !== index));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { id: `add-btn`, type: \"button\", onClick: onAddProperty, variant: \"link\" },\n            React.createElement(PlusCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Add Property\"),\n        items.length > 0 && (React.createElement(\"div\", { className: \"row\", style: { marginTop: '10px' } },\n            React.createElement(\"div\", { className: \"col-xs-4\" }, \"Key\"),\n            React.createElement(\"div\", { className: \"col-xs-4\" }, \"Value\"))),\n        items.length > 0 && items.map((cur, idx) => React.createElement(AdditionalPropertyItem, { key: idx, id: `property-${idx}`, index: idx, items: items, data: cur, onChange: onChange, onRemove: onRemoveProperty }))));\n};\nconst AdditionalPropertyItem = props => {\n    const { index, items, data, onChange, onRemove } = props;\n    const [additionalKey, setKey] = React.useState(Object.keys(data)[0]);\n    const [additionalValue, setValue] = React.useState(Object.values(data)[0] || ' ');\n    React.useEffect(() => {\n        setKey(Object.keys(data)[0]);\n        setValue(Object.values(data)[0]);\n    }, [data]);\n    React.useEffect(() => {\n        const result = {};\n        items.forEach(cur => {\n            result[Object.keys(cur)[0]] = Object.values(cur)[0];\n        });\n        return onChange(result);\n    }, [additionalKey, additionalValue]);\n    return (React.createElement(\"div\", { className: \"row co-m-form-row\" },\n        React.createElement(\"div\", { className: \"col-xs-4\" },\n            React.createElement(\"input\", { value: additionalKey, onChange: e => {\n                    const value = e.target.value;\n                    setKey(value);\n                    console.log(value);\n                    items.splice(index, 1, { [value]: additionalValue });\n                }, id: additionalKey, name: additionalKey, type: \"text\", className: \"pf-c-form-control\", key: `key-${index}` })),\n        React.createElement(\"div\", { className: \"col-xs-4\" },\n            React.createElement(\"input\", { value: additionalValue, onChange: e => {\n                    const value = e.target.value;\n                    setValue(value);\n                    console.log(value);\n                    items.splice(index, 1, { [additionalKey]: value });\n                }, id: 'value' + additionalValue, type: \"text\", className: \"pf-c-form-control\", key: `value-${index}` })),\n        React.createElement(Button, { id: `btn-property-remove-${index}`, type: \"button\", onClick: () => onRemove(index), variant: \"link\" },\n            React.createElement(MinusCircleIcon, { className: \"co-icon-space-r\" }),\n            \"Remove Property\")));\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/additional-properties.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/additional-properties.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { MinusCircleIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nexport const AdditionalPropertyFields: React.FC<AdditionalPropertyProps> = props => {\n  let { data, onChange } = props;\n\n  const obj = data;\n  const [items, setItems] = React.useState(_.keys(obj).map(cur => ({ [cur]: obj[cur] })));\n\n  const onAddProperty = () => {\n    setItems(prev => items.concat({ '': '' }));\n  };\n  const onRemoveProperty = idx => {\n    setItems(items.filter((cur, index) => idx !== index));\n  };\n\n  return (\n    <>\n      <Button id={`add-btn`} type=\"button\" onClick={onAddProperty} variant=\"link\">\n        <PlusCircleIcon className=\"co-icon-space-r\" />\n        Add Property\n      </Button>\n      {items.length > 0 && (\n        <div className=\"row\" style={{ marginTop: '10px' }}>\n          <div className=\"col-xs-4\">Key</div>\n          <div className=\"col-xs-4\">Value</div>\n        </div>\n      )}\n      {items.length > 0 && items.map((cur, idx) => <AdditionalPropertyItem key={idx} id={`property-${idx}`} index={idx} items={items} data={cur} onChange={onChange} onRemove={onRemoveProperty} />)}\n    </>\n  );\n};\n\nconst AdditionalPropertyItem = props => {\n  const { index, items, data, onChange, onRemove } = props;\n  const [additionalKey, setKey] = React.useState(Object.keys(data)[0]);\n  const [additionalValue, setValue] = React.useState(Object.values(data)[0] || ' ');\n  React.useEffect(() => {\n    setKey(Object.keys(data)[0]);\n    setValue(Object.values(data)[0]);\n  }, [data]);\n  React.useEffect(() => {\n    const result = {};\n    items.forEach(cur => {\n      result[Object.keys(cur)[0]] = Object.values(cur)[0];\n    });\n    return onChange(result);\n  }, [additionalKey, additionalValue]);\n  return (\n    <div className=\"row co-m-form-row\">\n      <div className=\"col-xs-4\">\n        <input\n          value={additionalKey}\n          onChange={e => {\n            const value = e.target.value;\n            setKey(value);\n            console.log(value);\n            items.splice(index, 1, { [value]: additionalValue });\n          }}\n          id={additionalKey}\n          name={additionalKey}\n          type=\"text\"\n          className=\"pf-c-form-control\"\n          key={`key-${index}`}\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <input\n          value={additionalValue as string}\n          onChange={e => {\n            const value = e.target.value;\n            setValue(value);\n            console.log(value);\n            items.splice(index, 1, { [additionalKey]: value });\n          }}\n          id={'value' + additionalValue}\n          type=\"text\"\n          className=\"pf-c-form-control\"\n          key={`value-${index}`}\n        />\n      </div>\n      <Button id={`btn-property-remove-${index}`} type=\"button\" onClick={() => onRemove(index)} variant=\"link\">\n        <MinusCircleIcon className=\"co-icon-space-r\" />\n        Remove Property\n      </Button>\n    </div>\n  );\n};\n\ntype AdditionalPropertyProps = {\n  data: any;\n  path: string;\n  onChange: any;\n};\n"]}]}