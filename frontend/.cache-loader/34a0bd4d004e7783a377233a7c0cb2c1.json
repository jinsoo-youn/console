{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/table-utils.ts","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/table-utils.ts","mtime":1616735742380},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["export const dimensifyHeader = (header, columnClasses) => {\n    if (!header || !columnClasses || header.length !== columnClasses.length) {\n        console.warn('wrong dimensions specified for header'); // eslint-disable-line no-console\n        return header;\n    }\n    return header.map((column, idx) => (Object.assign(Object.assign({}, column), { props: Object.assign(Object.assign({}, column.props), { className: columnClasses[idx] }) })));\n};\nexport const dimensifyRow = (columnClasses) => {\n    let index = 0;\n    return (isLast = false) => {\n        if (index >= columnClasses.length) {\n            console.warn('wrong dimensions specified for row (too many columns)'); // eslint-disable-line no-console\n            return null;\n        }\n        if (isLast && index !== columnClasses.length - 1) {\n            console.warn('wrong dimensions specified for row (not enough columns)'); // eslint-disable-line no-console\n        }\n        return columnClasses[index++];\n    };\n};\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/table-utils.ts","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/console-shared/src/utils/table-utils.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,MAAa,EAAE,aAAuB,EAAE,EAAE;IACxE,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,EAAE;QACvE,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC,iCAAiC;QACxF,OAAO,MAAM,CAAC;KACf;IAED,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,iCAC9B,MAAM,KACT,KAAK,kCACA,MAAM,CAAC,KAAK,KACf,SAAS,EAAE,aAAa,CAAC,GAAG,CAAC,OAE/B,CAAC,CAAC;AACN,CAAC,CAAC;AAIF,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,aAAoB,EAAqB,EAAE;IACtE,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,OAAO,CAAC,MAAM,GAAG,KAAK,EAAE,EAAE;QACxB,IAAI,KAAK,IAAI,aAAa,CAAC,MAAM,EAAE;YACjC,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC,CAAC,iCAAiC;YACxG,OAAO,IAAI,CAAC;SACb;QAED,IAAI,MAAM,IAAI,KAAK,KAAK,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC,CAAC,iCAAiC;SAC3G;QACD,OAAO,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["export const dimensifyHeader = (header: any[], columnClasses: string[]) => {\n  if (!header || !columnClasses || header.length !== columnClasses.length) {\n    console.warn('wrong dimensions specified for header'); // eslint-disable-line no-console\n    return header;\n  }\n\n  return header.map((column, idx) => ({\n    ...column,\n    props: {\n      ...column.props,\n      className: columnClasses[idx],\n    },\n  }));\n};\n\ntype DimensionResolver = (isLast?: boolean) => string;\n\nexport const dimensifyRow = (columnClasses: any[]): DimensionResolver => {\n  let index = 0;\n  return (isLast = false) => {\n    if (index >= columnClasses.length) {\n      console.warn('wrong dimensions specified for row (too many columns)'); // eslint-disable-line no-console\n      return null;\n    }\n\n    if (isLast && index !== columnClasses.length - 1) {\n      console.warn('wrong dimensions specified for row (not enough columns)'); // eslint-disable-line no-console\n    }\n    return columnClasses[index++];\n  };\n};\n"]}]}