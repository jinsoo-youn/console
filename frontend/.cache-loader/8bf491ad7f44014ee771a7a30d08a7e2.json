{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","mtime":1615298458620},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport { Formik } from 'formik';\nimport { createModalLauncher, } from '@console/internal/components/factory/modal';\nimport { errorModal } from '@console/internal/components/modals';\n//import { useUserLabelForManualStart } from '../../../pipelineruns/triggered-by';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { startPipelineSchema } from '../common/validation-utils';\nimport StartPipelineForm from './StartPipelineForm';\nimport { submitStartPipeline } from './submit-utils';\nconst StartPipelineModal = ({ pipeline, close, onSubmit, }) => {\n    //const userStartedLabel = useUserLabelForManualStart();\n    const initialValues = Object.assign(Object.assign({}, convertPipelineToModalData(pipeline)), { workspaces: (pipeline.spec.workspaces || []).map((workspace) => (Object.assign(Object.assign({}, workspace), { type: 'EmptyDirectory' }))), secretOpen: false });\n    const handleSubmit = (values, actions) => {\n        actions.setSubmitting(true);\n        submitStartPipeline(values, pipeline)\n            .then((res) => {\n            actions.setSubmitting(false);\n            onSubmit && onSubmit(res);\n            close();\n        })\n            .catch((err) => {\n            actions.setSubmitting(false);\n            actions.setStatus({ submitError: err.message });\n            errorModal({ error: err.message });\n            close();\n        });\n    };\n    return (React.createElement(Formik, { initialValues: initialValues, onSubmit: handleSubmit, validationSchema: startPipelineSchema }, (props) => (React.createElement(ModalStructure, Object.assign({ submitBtnText: \"Start\", title: \"Start Pipeline\", close: close }, props),\n        React.createElement(StartPipelineForm, Object.assign({}, props))))));\n};\nexport default createModalLauncher(StartPipelineModal);\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/dev-console/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,EACL,mBAAmB,GAEpB,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AAEjE,kFAAkF;AAClF,OAAO,cAAc,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAOrD,MAAM,kBAAkB,GAA4D,CAAC,EACnF,QAAQ,EACR,KAAK,EACL,QAAQ,GACT,EAAE,EAAE;IACH,wDAAwD;IAExD,MAAM,aAAa,mCACd,0BAA0B,CAAC,QAAQ,CAAC,KACvC,UAAU,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,SAA4B,EAAE,EAAE,CAAC,iCAC9E,SAAS,KACZ,IAAI,EAAE,gBAAgB,IACtB,CAAC,EACH,UAAU,EAAE,KAAK,GAClB,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,MAA+B,EAAE,OAAO,EAAQ,EAAE;QACtE,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE5B,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAuB;aACxD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAK,EAAE,CAAC;QACV,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7B,OAAO,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAChD,UAAU,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YACnC,KAAK,EAAE,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,MAAM,IACL,aAAa,EAAE,aAAa,EAC5B,QAAQ,EAAE,YAAY,EACtB,gBAAgB,EAAE,mBAAmB,IAEpC,CAAC,KAAK,EAAE,EAAE,CAAC,CACV,oBAAC,cAAc,kBAAC,aAAa,EAAC,OAAO,EAAC,KAAK,EAAC,gBAAgB,EAAC,KAAK,EAAE,KAAK,IAAM,KAAK;QAClF,oBAAC,iBAAiB,oBAAK,KAAK,EAAI,CACjB,CAClB,CACM,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Formik } from 'formik';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { errorModal } from '@console/internal/components/modals';\nimport { Pipeline, PipelineRun, PipelineWorkspace } from '../../../../utils/pipeline-augment';\n//import { useUserLabelForManualStart } from '../../../pipelineruns/triggered-by';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { startPipelineSchema } from '../common/validation-utils';\nimport StartPipelineForm from './StartPipelineForm';\nimport { submitStartPipeline } from './submit-utils';\nimport { StartPipelineFormValues } from './types';\n\nexport interface StartPipelineModalProps {\n  pipeline: Pipeline;\n  onSubmit?: (pipelineRun: PipelineRun) => void;\n}\nconst StartPipelineModal: React.FC<StartPipelineModalProps & ModalComponentProps> = ({\n  pipeline,\n  close,\n  onSubmit,\n}) => {\n  //const userStartedLabel = useUserLabelForManualStart();\n\n  const initialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: PipelineWorkspace) => ({\n      ...workspace,\n      type: 'EmptyDirectory',\n    })),\n    secretOpen: false,\n  };\n\n  const handleSubmit = (values: StartPipelineFormValues, actions): void => {\n    actions.setSubmitting(true);\n\n    submitStartPipeline(values, pipeline, /*userStartedLabel*/)\n      .then((res) => {\n        actions.setSubmitting(false);\n        onSubmit && onSubmit(res);\n        close();\n      })\n      .catch((err) => {\n        actions.setSubmitting(false);\n        actions.setStatus({ submitError: err.message });\n        errorModal({ error: err.message });\n        close();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={startPipelineSchema}\n    >\n      {(props) => (\n        <ModalStructure submitBtnText=\"Start\" title=\"Start Pipeline\" close={close} {...props}>\n          <StartPipelineForm {...props} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(StartPipelineModal);\n"]}]}