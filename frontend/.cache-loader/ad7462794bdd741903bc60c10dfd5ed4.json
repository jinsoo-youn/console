{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/build-overview.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/build-overview.tsx","mtime":1615298458740},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nimport { Status, StatusIconAndText } from '@console/shared';\nimport { BuildNumberLink, BuildLogLink } from '../build';\nimport { errorModal } from '../modals/error-modal';\nimport { fromNow } from '../utils/datetime';\nimport { BuildConfigModel } from '../../models';\nimport { BuildPhase, startBuild } from '../../module/k8s/builds';\nimport { ResourceLink, SidebarSectionHeading, useAccessReview } from '../utils';\nconst conjugateBuildPhase = (phase) => {\n    switch (phase) {\n        case BuildPhase.Cancelled:\n            return 'was cancelled';\n        case BuildPhase.Error:\n            return 'encountered an error';\n        case BuildPhase.Failed:\n            return 'failed';\n        default:\n            return `is ${_.toLower(phase)}`;\n    }\n};\nconst BuildStatus = ({ build }) => {\n    const { status: { logSnippet, message, phase }, } = build;\n    const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n    return unsuccessful ? (React.createElement(\"div\", { className: \"build-overview__item-reason\" },\n        React.createElement(\"p\", { className: \"build-overview__status-message\" }, message),\n        logSnippet && React.createElement(\"pre\", { className: \"build-overview__log-snippet\" }, logSnippet))) : null;\n};\nconst BuildOverviewItem = ({ build }) => {\n    const { metadata: { creationTimestamp }, status: { completionTimestamp, startTimestamp, phase }, } = build;\n    const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n    const statusTitle = (React.createElement(React.Fragment, null,\n        \"Build \\u00A0\",\n        React.createElement(BuildNumberLink, { build: build }),\n        \"\\u00A0\",\n        conjugateBuildPhase(phase),\n        lastUpdated && React.createElement(\"span\", { className: \"text-muted\" },\n            \"\\u00A0(\",\n            fromNow(lastUpdated),\n            \")\")));\n    return (React.createElement(\"li\", { className: \"list-group-item build-overview__item\" },\n        React.createElement(\"div\", { className: \"build-overview__item-title\" },\n            React.createElement(\"div\", { className: \"build-overview__status co-icon-and-text\" },\n                React.createElement(\"div\", { className: \"co-icon-and-text__icon co-icon-flex-child\" }, phase === 'Running' ? (React.createElement(StatusIconAndText, { icon: React.createElement(SyncAltIcon, null), title: phase, spin: true, iconOnly: true })) : (React.createElement(Status, { status: phase, iconOnly: true }))),\n                statusTitle),\n            React.createElement(\"div\", null,\n                React.createElement(BuildLogLink, { build: build }))),\n        React.createElement(BuildStatus, { build: build })));\n};\nconst BuildOverviewList = ({ buildConfig }) => {\n    const { metadata: { name, namespace }, builds, } = buildConfig;\n    const canStartBuild = useAccessReview({\n        group: BuildConfigModel.apiGroup,\n        resource: BuildConfigModel.plural,\n        subresource: 'instantiate',\n        name,\n        namespace,\n        verb: 'create',\n    });\n    const onClick = () => {\n        startBuild(buildConfig).catch((err) => {\n            const error = err.message;\n            errorModal({ error });\n        });\n    };\n    return (React.createElement(\"ul\", { className: \"list-group\" },\n        React.createElement(\"li\", { className: \"list-group-item build-overview__item\" },\n            React.createElement(\"div\", { className: \"build-overview__item-title\" },\n                React.createElement(\"div\", null,\n                    React.createElement(ResourceLink, { inline: true, kind: \"BuildConfig\", name: name, namespace: namespace })),\n                canStartBuild && (React.createElement(\"div\", null,\n                    React.createElement(Button, { variant: \"secondary\", onClick: onClick }, \"Start Build\"))))),\n        _.isEmpty(builds) ? (React.createElement(\"li\", { className: \"list-group-item\" },\n            React.createElement(\"span\", { className: \"text-muted\" }, \"No Builds found for this Build Config.\"))) : (_.map(builds, (build) => React.createElement(BuildOverviewItem, { key: build.metadata.uid, build: build })))));\n};\nexport const BuildOverview = ({ buildConfigs }) => (React.createElement(\"div\", { className: \"build-overview\" },\n    React.createElement(SidebarSectionHeading, { text: \"Builds\" }),\n    _.isEmpty(buildConfigs) ? (React.createElement(\"span\", { className: \"text-muted\" }, \"No Build Configs found for this resource.\")) : (_.map(buildConfigs, (buildConfig) => (React.createElement(BuildOverviewList, { key: buildConfig.metadata.uid, buildConfig: buildConfig }))))));\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/build-overview.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/public/components/overview/build-overview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nimport { Status, StatusIconAndText, BuildConfigOverviewItem } from '@console/shared';\nimport { BuildNumberLink, BuildLogLink } from '../build';\nimport { errorModal } from '../modals/error-modal';\nimport { fromNow } from '../utils/datetime';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { BuildConfigModel } from '../../models';\nimport { BuildPhase, startBuild } from '../../module/k8s/builds';\nimport { ResourceLink, SidebarSectionHeading, useAccessReview } from '../utils';\n\nconst conjugateBuildPhase = (phase: BuildPhase): string => {\n  switch (phase) {\n    case BuildPhase.Cancelled:\n      return 'was cancelled';\n    case BuildPhase.Error:\n      return 'encountered an error';\n    case BuildPhase.Failed:\n      return 'failed';\n    default:\n      return `is ${_.toLower(phase)}`;\n  }\n};\n\nconst BuildStatus = ({ build }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? (\n    <div className=\"build-overview__item-reason\">\n      <p className=\"build-overview__status-message\">{message}</p>\n      {logSnippet && <pre className=\"build-overview__log-snippet\">{logSnippet}</pre>}\n    </div>\n  ) : null;\n};\n\nconst BuildOverviewItem: React.SFC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n\n  const statusTitle = (\n    <>\n      Build &nbsp;\n      <BuildNumberLink build={build} />\n      &nbsp;\n      {conjugateBuildPhase(phase)}\n      {lastUpdated && <span className=\"text-muted\">&nbsp;({fromNow(lastUpdated)})</span>}\n    </>\n  );\n\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          {statusTitle}\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.SFC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick}>\n                Start Build\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {_.isEmpty(builds) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">No Builds found for this Build Config.</span>\n        </li>\n      ) : (\n        _.map(builds, (build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\n\nexport const BuildOverview: React.SFC<BuildConfigsOverviewProps> = ({ buildConfigs }) => (\n  <div className=\"build-overview\">\n    <SidebarSectionHeading text=\"Builds\" />\n    {_.isEmpty(buildConfigs) ? (\n      <span className=\"text-muted\">No Build Configs found for this resource.</span>\n    ) : (\n      _.map(buildConfigs, (buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))\n    )}\n  </div>\n);\n\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\n\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\n\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n};\n"]}]}