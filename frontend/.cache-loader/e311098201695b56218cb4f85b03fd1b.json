{"remainingRequest":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js??ref--5-2!/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/index.tsx","dependencies":[{"path":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/index.tsx","mtime":1616735742450},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607306270906},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1607306283100},{"path":"/home/jinsoo/hypercloud-console5.0/frontend/node_modules/ts-loader/index.js","mtime":1607306283339}],"contextDependencies":[],"result":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Button, Switch, Tooltip, Checkbox } from '@patternfly/react-core';\nimport { EyeIcon, EyeSlashIcon, PencilAltIcon } from '@patternfly/react-icons';\nimport { LoadingInline, ResourceLink, Selector } from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { k8sPatch, k8sUpdate } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { SecretValue } from '@console/internal/components/configmap-and-secret-data';\nimport { SpecCapability } from '../types';\nimport { ResourceRequirementsModalLink } from './resource-requirements';\nimport { EndpointList } from './endpoint';\nimport { configureSizeModal } from './configure-size';\nimport { configureUpdateStrategyModal } from './configure-update-strategy';\nconst Default = ({ value }) => {\n    if (_.isEmpty(value) && !_.isNumber(value) && !_.isBoolean(value)) {\n        return React.createElement(\"span\", { className: \"text-muted\" }, \"None\");\n    }\n    if (_.isObject(value)) {\n        return React.createElement(\"span\", { className: \"text-muted\" }, \"Unsupported\");\n    }\n    return React.createElement(\"span\", null, _.toString(value));\n};\nconst PodCount = ({ model, obj, descriptor, value }) => (React.createElement(Button, { isInline: true, type: \"button\", onClick: () => configureSizeModal({\n        kindObj: model,\n        resource: obj,\n        specDescriptor: descriptor,\n        specValue: value,\n    }), variant: \"link\" },\n    value,\n    \" pods\",\n    React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" })));\nconst Endpoints = ({ value }) => React.createElement(EndpointList, { endpoints: value });\nconst Label = ({ value }) => React.createElement(\"span\", null, value || '--');\nconst NamespaceSelector = ({ value }) => _.get(value, 'matchNames[0]') ? (React.createElement(ResourceLink, { kind: \"Namespace\", name: value.matchNames[0], title: value.matchNames[0] })) : (React.createElement(\"span\", { className: \"text-muted\" }, \"None\"));\nconst ResourceRequirements = ({ obj, descriptor }) => (React.createElement(\"dl\", { className: \"co-spec-descriptor--resource-requirements\" },\n    React.createElement(\"dt\", null, \"Resource Limits\"),\n    React.createElement(\"dd\", null,\n        React.createElement(ResourceRequirementsModalLink, { type: \"limits\", obj: obj, path: descriptor.path })),\n    React.createElement(\"dt\", null, \"Resource Requests\"),\n    React.createElement(\"dd\", null,\n        React.createElement(ResourceRequirementsModalLink, { type: \"requests\", obj: obj, path: descriptor.path }))));\nconst K8sResourceLink = (props) => {\n    if (!props.value) {\n        return React.createElement(\"span\", { className: \"text-muted\" }, \"None\");\n    }\n    const kind = props.capability.split(SpecCapability.k8sResourcePrefix)[1];\n    if (!_.isString(props.value)) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(YellowExclamationTriangleIcon, null),\n            \" Invalid spec descriptor: value at path '\",\n            props.descriptor.path,\n            \"' must be a \",\n            kind,\n            \" resource name.\"));\n    }\n    return React.createElement(ResourceLink, { kind: kind, name: props.value, namespace: props.namespace });\n};\nconst BasicSelector = ({ value, capability }) => (React.createElement(Selector, { selector: value, kind: capability.split(SpecCapability.selector)[1] }));\nconst BooleanSwitch = (props) => {\n    const { model, obj, descriptor, onHandleError } = props;\n    const convertedValue = !_.isNil(props.value) ? props.value : false;\n    const [value, setValue] = React.useState(convertedValue);\n    const [confirmed, setConfirmed] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState(null);\n    const errorCb = (err) => {\n        setConfirmed(false);\n        setValue(convertedValue);\n        setErrorMessage(err.message);\n        onHandleError(err.message);\n    };\n    const update = () => {\n        setConfirmed(true);\n        setErrorMessage(null);\n        if (_.has(obj, `spec.${descriptor.path}`)) {\n            const patchFor = (val) => [\n                { op: 'add', path: `/spec/${descriptor.path.replace(/\\./g, '/')}`, value: val },\n            ];\n            return k8sPatch(model, obj, patchFor(value)).catch((err) => errorCb(err));\n        }\n        const newObj = _.cloneDeep(obj);\n        _.set(newObj, `spec.${descriptor.path}`, value);\n        return k8sUpdate(model, newObj).catch((err) => errorCb(err));\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-spec-descriptor--switch\" },\n            React.createElement(Switch, { id: descriptor.path, isChecked: value, onChange: (val) => {\n                    setValue(val);\n                    setConfirmed(false);\n                    setErrorMessage(null);\n                    onHandleError(null);\n                }, label: \"True\", labelOff: \"False\" }),\n            \"\\u00A0\\u00A0\",\n            value !== convertedValue && confirmed && React.createElement(LoadingInline, null),\n            value !== convertedValue && !confirmed && (React.createElement(React.Fragment, null,\n                \"\\u00A0\\u00A0\",\n                React.createElement(Button, { className: \"pf-m-link--align-left\", type: \"button\", variant: \"link\", onClick: update },\n                    React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r pf-c-button-icon--plain\" }),\n                    \"Confirm change\")))),\n        errorMessage && (React.createElement(\"div\", { className: \"cos-error-title co-break-word\" }, errorMessage || 'An error occurred'))));\n};\nconst CheckboxUIComponent = (props) => {\n    const convertedValue = !_.isNil(props.value) ? props.value : false;\n    const [value, setValue] = React.useState(convertedValue);\n    const [confirmed, setConfirmed] = React.useState(false);\n    const patchFor = (val) => [\n        { op: 'add', path: `/spec/${props.descriptor.path.replace('.', '/')}`, value: val },\n    ];\n    const update = () => {\n        setConfirmed(true);\n        return k8sPatch(props.model, props.obj, patchFor(value));\n    };\n    return (React.createElement(\"div\", { className: \"co-spec-descriptor--switch\" },\n        React.createElement(Checkbox, { id: props.descriptor.path, style: { marginLeft: '10px' }, isChecked: value, label: props.descriptor.displayName, onChange: (val) => {\n                setValue(val);\n                setConfirmed(false);\n            } }),\n        \"\\u00A0\\u00A0\",\n        value !== convertedValue && confirmed && React.createElement(LoadingInline, null),\n        value !== convertedValue && !confirmed && (React.createElement(React.Fragment, null,\n            \"\\u00A0\\u00A0\",\n            React.createElement(Button, { className: \"pf-m-link--align-left\", type: \"button\", variant: \"link\", onClick: update },\n                React.createElement(YellowExclamationTriangleIcon, { className: \"co-icon-space-r pf-c-button-icon--plain\" }),\n                \"Confirm change\")))));\n};\nconst Secret = (props) => {\n    const [reveal, setReveal] = React.useState(false);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"co-toggle-reveal-value\" },\n            React.createElement(Button, { type: \"button\", variant: \"link\", isInline: true, className: \"pf-m-link--align-right co-toggle-reveal-value__btn\", onClick: () => setReveal(!reveal) }, reveal ? (React.createElement(React.Fragment, null,\n                React.createElement(EyeSlashIcon, { className: \"co-icon-space-r\" }),\n                \"Hide Values\")) : (React.createElement(React.Fragment, null,\n                React.createElement(EyeIcon, { className: \"co-icon-space-r\" }),\n                \"Reveal Values\"))),\n            React.createElement(SecretValue, { value: props.value, encoded: false, reveal: reveal }))));\n};\nconst UpdateStrategy = ({ model, obj, descriptor, value }) => (React.createElement(Button, { type: \"button\", variant: \"link\", isInline: true, onClick: () => configureUpdateStrategyModal({\n        kindObj: model,\n        resource: obj,\n        specDescriptor: descriptor,\n        specValue: value,\n    }) },\n    _.get(value, 'type', 'None'),\n    React.createElement(PencilAltIcon, { className: \"co-icon-space-l pf-c-button-icon--plain\" })));\nconst capabilityComponents = ImmutableMap()\n    .set(SpecCapability.podCount, PodCount)\n    .set(SpecCapability.endpointList, Endpoints)\n    .set(SpecCapability.label, Label)\n    .set(SpecCapability.namespaceSelector, NamespaceSelector)\n    .set(SpecCapability.resourceRequirements, ResourceRequirements)\n    .set(SpecCapability.k8sResourcePrefix, K8sResourceLink)\n    .set(SpecCapability.selector, BasicSelector)\n    .set(SpecCapability.booleanSwitch, BooleanSwitch)\n    .set(SpecCapability.password, Secret)\n    .set(SpecCapability.updateStrategy, UpdateStrategy)\n    .set(SpecCapability.checkbox, CheckboxUIComponent)\n    .set(SpecCapability.hidden, null);\nconst capabilityFor = (specCapability) => {\n    if (_.isEmpty(specCapability)) {\n        return Default;\n    }\n    if (specCapability.startsWith(SpecCapability.k8sResourcePrefix)) {\n        return capabilityComponents.get(SpecCapability.k8sResourcePrefix);\n    }\n    if (specCapability.startsWith(SpecCapability.selector)) {\n        return capabilityComponents.get(SpecCapability.selector);\n    }\n    return capabilityComponents.get(specCapability, Default);\n};\n/**\n * Main entrypoint component for rendering custom UI for a given spec descriptor. This should be used instead of importing\n * individual components from this module.\n */\nexport const SpecDescriptor = withFallback((props) => {\n    const { model, obj, descriptor, value, namespace, onHandleError } = props;\n    const capability = _.get(descriptor, ['x-descriptors'], []).find((c) => !c.startsWith(SpecCapability.fieldGroup) &&\n        !c.startsWith(SpecCapability.arrayFieldGroup) &&\n        !c.startsWith(SpecCapability.advanced) &&\n        !c.startsWith(SpecCapability.fieldDependency));\n    const Capability = capabilityFor(capability);\n    return Capability ? (React.createElement(\"dl\", { className: \"olm-descriptor\" },\n        React.createElement(Tooltip, { content: descriptor.description },\n            React.createElement(\"dt\", { className: \"olm-descriptor__title\", \"data-test-descriptor-label\": descriptor.displayName }, descriptor.displayName)),\n        React.createElement(\"dd\", { className: \"olm-descriptor__value\" },\n            React.createElement(Capability, { descriptor: descriptor, capability: capability, value: value, namespace: namespace, model: model, obj: obj, onHandleError: onHandleError })))) : null;\n});\n",{"version":3,"file":"/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/index.tsx","sourceRoot":"","sources":["/home/jinsoo/hypercloud-console5.0/frontend/packages/operator-lifecycle-manager/src/components/descriptors/spec/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Button, Switch, Tooltip, Checkbox } from '@patternfly/react-core';\nimport { EyeIcon, EyeSlashIcon, PencilAltIcon } from '@patternfly/react-icons';\nimport { LoadingInline, ResourceLink, Selector } from '@console/internal/components/utils';\nimport { withFallback } from '@console/shared/src/components/error/error-boundary';\nimport { k8sPatch, k8sUpdate } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { SecretValue } from '@console/internal/components/configmap-and-secret-data';\nimport { CapabilityProps, DescriptorProps, SpecCapability, Error } from '../types';\nimport { ResourceRequirementsModalLink } from './resource-requirements';\nimport { EndpointList } from './endpoint';\nimport { configureSizeModal } from './configure-size';\nimport { configureUpdateStrategyModal } from './configure-update-strategy';\n\nconst Default: React.SFC<SpecCapabilityProps> = ({ value }) => {\n  if (_.isEmpty(value) && !_.isNumber(value) && !_.isBoolean(value)) {\n    return <span className=\"text-muted\">None</span>;\n  }\n  if (_.isObject(value)) {\n    return <span className=\"text-muted\">Unsupported</span>;\n  }\n  return <span>{_.toString(value)}</span>;\n};\n\nconst PodCount: React.SFC<SpecCapabilityProps> = ({ model, obj, descriptor, value }) => (\n  <Button\n    isInline\n    type=\"button\"\n    onClick={() =>\n      configureSizeModal({\n        kindObj: model,\n        resource: obj,\n        specDescriptor: descriptor,\n        specValue: value,\n      })\n    }\n    variant=\"link\"\n  >\n    {value} pods\n    <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n  </Button>\n);\n\nconst Endpoints: React.SFC<SpecCapabilityProps> = ({ value }) => <EndpointList endpoints={value} />;\n\nconst Label: React.SFC<SpecCapabilityProps> = ({ value }) => <span>{value || '--'}</span>;\n\nconst NamespaceSelector: React.SFC<SpecCapabilityProps> = ({ value }) =>\n  _.get(value, 'matchNames[0]') ? (\n    <ResourceLink kind=\"Namespace\" name={value.matchNames[0]} title={value.matchNames[0]} />\n  ) : (\n    <span className=\"text-muted\">None</span>\n  );\n\nconst ResourceRequirements: React.SFC<SpecCapabilityProps> = ({ obj, descriptor }) => (\n  <dl className=\"co-spec-descriptor--resource-requirements\">\n    <dt>Resource Limits</dt>\n    <dd>\n      <ResourceRequirementsModalLink type=\"limits\" obj={obj} path={descriptor.path} />\n    </dd>\n    <dt>Resource Requests</dt>\n    <dd>\n      <ResourceRequirementsModalLink type=\"requests\" obj={obj} path={descriptor.path} />\n    </dd>\n  </dl>\n);\n\nconst K8sResourceLink: React.SFC<SpecCapabilityProps> = (props) => {\n  if (!props.value) {\n    return <span className=\"text-muted\">None</span>;\n  }\n\n  const kind = props.capability.split(SpecCapability.k8sResourcePrefix)[1];\n  if (!_.isString(props.value)) {\n    return (\n      <>\n        <YellowExclamationTriangleIcon /> Invalid spec descriptor: value at path &apos;\n        {props.descriptor.path}&apos; must be a {kind} resource name.\n      </>\n    );\n  }\n\n  return <ResourceLink kind={kind} name={props.value} namespace={props.namespace} />;\n};\n\nconst BasicSelector: React.SFC<SpecCapabilityProps> = ({ value, capability }) => (\n  <Selector selector={value} kind={capability.split(SpecCapability.selector)[1]} />\n);\n\nconst BooleanSwitch: React.FC<SpecCapabilityProps> = (props) => {\n  const { model, obj, descriptor, onHandleError } = props;\n  const convertedValue = !_.isNil(props.value) ? props.value : false;\n  const [value, setValue] = React.useState(convertedValue);\n  const [confirmed, setConfirmed] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  const errorCb = (err: Error): void => {\n    setConfirmed(false);\n    setValue(convertedValue);\n    setErrorMessage(err.message);\n    onHandleError(err.message);\n  };\n\n  const update = () => {\n    setConfirmed(true);\n    setErrorMessage(null);\n\n    if (_.has(obj, `spec.${descriptor.path}`)) {\n      const patchFor = (val: boolean) => [\n        { op: 'add', path: `/spec/${descriptor.path.replace(/\\./g, '/')}`, value: val },\n      ];\n      return k8sPatch(model, obj, patchFor(value)).catch((err) => errorCb(err));\n    }\n\n    const newObj = _.cloneDeep(obj);\n    _.set(newObj, `spec.${descriptor.path}`, value);\n    return k8sUpdate(model, newObj).catch((err) => errorCb(err));\n  };\n\n  return (\n    <>\n      <div className=\"co-spec-descriptor--switch\">\n        <Switch\n          id={descriptor.path}\n          isChecked={value}\n          onChange={(val) => {\n            setValue(val);\n            setConfirmed(false);\n            setErrorMessage(null);\n            onHandleError(null);\n          }}\n          label=\"True\"\n          labelOff=\"False\"\n        />\n        &nbsp;&nbsp;\n        {value !== convertedValue && confirmed && <LoadingInline />}\n        {value !== convertedValue && !confirmed && (\n          <>\n            &nbsp;&nbsp;\n            <Button className=\"pf-m-link--align-left\" type=\"button\" variant=\"link\" onClick={update}>\n              <YellowExclamationTriangleIcon className=\"co-icon-space-r pf-c-button-icon--plain\" />\n              Confirm change\n            </Button>\n          </>\n        )}\n      </div>\n      {errorMessage && (\n        <div className=\"cos-error-title co-break-word\">{errorMessage || 'An error occurred'}</div>\n      )}\n    </>\n  );\n};\n\nconst CheckboxUIComponent: React.FC<SpecCapabilityProps> = (props) => {\n  const convertedValue = !_.isNil(props.value) ? props.value : false;\n  const [value, setValue] = React.useState(convertedValue);\n  const [confirmed, setConfirmed] = React.useState(false);\n\n  const patchFor = (val: boolean) => [\n    { op: 'add', path: `/spec/${props.descriptor.path.replace('.', '/')}`, value: val },\n  ];\n  const update = () => {\n    setConfirmed(true);\n    return k8sPatch(props.model, props.obj, patchFor(value));\n  };\n\n  return (\n    <div className=\"co-spec-descriptor--switch\">\n      <Checkbox\n        id={props.descriptor.path}\n        style={{ marginLeft: '10px' }}\n        isChecked={value}\n        label={props.descriptor.displayName}\n        onChange={(val) => {\n          setValue(val);\n          setConfirmed(false);\n        }}\n      />\n      &nbsp;&nbsp;\n      {value !== convertedValue && confirmed && <LoadingInline />}\n      {value !== convertedValue && !confirmed && (\n        <>\n          &nbsp;&nbsp;\n          <Button className=\"pf-m-link--align-left\" type=\"button\" variant=\"link\" onClick={update}>\n            <YellowExclamationTriangleIcon className=\"co-icon-space-r pf-c-button-icon--plain\" />\n            Confirm change\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst Secret: React.FC<SpecCapabilityProps> = (props) => {\n  const [reveal, setReveal] = React.useState(false);\n\n  return (\n    <>\n      <div className=\"co-toggle-reveal-value\">\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          isInline\n          className=\"pf-m-link--align-right co-toggle-reveal-value__btn\"\n          onClick={() => setReveal(!reveal)}\n        >\n          {reveal ? (\n            <>\n              <EyeSlashIcon className=\"co-icon-space-r\" />\n              Hide Values\n            </>\n          ) : (\n            <>\n              <EyeIcon className=\"co-icon-space-r\" />\n              Reveal Values\n            </>\n          )}\n        </Button>\n        <SecretValue value={props.value} encoded={false} reveal={reveal} />\n      </div>\n    </>\n  );\n};\n\nconst UpdateStrategy: React.FC<SpecCapabilityProps> = ({ model, obj, descriptor, value }) => (\n  <Button\n    type=\"button\"\n    variant=\"link\"\n    isInline\n    onClick={() =>\n      configureUpdateStrategyModal({\n        kindObj: model,\n        resource: obj,\n        specDescriptor: descriptor,\n        specValue: value,\n      })\n    }\n  >\n    {_.get(value, 'type', 'None')}\n    <PencilAltIcon className=\"co-icon-space-l pf-c-button-icon--plain\" />\n  </Button>\n);\n\nconst capabilityComponents = ImmutableMap<\n  SpecCapability,\n  React.ComponentType<SpecCapabilityProps>\n>()\n  .set(SpecCapability.podCount, PodCount)\n  .set(SpecCapability.endpointList, Endpoints)\n  .set(SpecCapability.label, Label)\n  .set(SpecCapability.namespaceSelector, NamespaceSelector)\n  .set(SpecCapability.resourceRequirements, ResourceRequirements)\n  .set(SpecCapability.k8sResourcePrefix, K8sResourceLink)\n  .set(SpecCapability.selector, BasicSelector)\n  .set(SpecCapability.booleanSwitch, BooleanSwitch)\n  .set(SpecCapability.password, Secret)\n  .set(SpecCapability.updateStrategy, UpdateStrategy)\n  .set(SpecCapability.checkbox, CheckboxUIComponent)\n  .set(SpecCapability.hidden, null);\n\nconst capabilityFor = (specCapability: SpecCapability) => {\n  if (_.isEmpty(specCapability)) {\n    return Default;\n  }\n  if (specCapability.startsWith(SpecCapability.k8sResourcePrefix)) {\n    return capabilityComponents.get(SpecCapability.k8sResourcePrefix);\n  }\n  if (specCapability.startsWith(SpecCapability.selector)) {\n    return capabilityComponents.get(SpecCapability.selector);\n  }\n  return capabilityComponents.get(specCapability, Default);\n};\n\n/**\n * Main entrypoint component for rendering custom UI for a given spec descriptor. This should be used instead of importing\n * individual components from this module.\n */\nexport const SpecDescriptor = withFallback((props: DescriptorProps) => {\n  const { model, obj, descriptor, value, namespace, onHandleError } = props;\n  const capability = _.get(descriptor, ['x-descriptors'], []).find(\n    (c) =>\n      !c.startsWith(SpecCapability.fieldGroup) &&\n      !c.startsWith(SpecCapability.arrayFieldGroup) &&\n      !c.startsWith(SpecCapability.advanced) &&\n      !c.startsWith(SpecCapability.fieldDependency),\n  ) as SpecCapability;\n  const Capability = capabilityFor(capability);\n\n  return Capability ? (\n    <dl className=\"olm-descriptor\">\n      <Tooltip content={descriptor.description}>\n        <dt className=\"olm-descriptor__title\" data-test-descriptor-label={descriptor.displayName}>\n          {descriptor.displayName}\n        </dt>\n      </Tooltip>\n      <dd className=\"olm-descriptor__value\">\n        <Capability\n          descriptor={descriptor}\n          capability={capability}\n          value={value}\n          namespace={namespace}\n          model={model}\n          obj={obj}\n          onHandleError={onHandleError}\n        />\n      </dd>\n    </dl>\n  ) : null;\n});\n\ntype SpecCapabilityProps = CapabilityProps<SpecCapability>;\n"]}]}